; ModuleID = 'data_unrolled/s428741213.ll'
source_filename = "dataset/s428741213.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.POINT = type { double, double }
%struct.LINE = type { %struct.POINT, %struct.POINT }
%struct.COMPLEX = type { double, double }

@.str = private unnamed_addr constant [11 x i8] c"(%lf,%lf)\0A\00", align 1, !dbg !0
@.str.1 = private unnamed_addr constant [24 x i8] c"(%lf,%lf) -> (%lf,%lf)\0A\00", align 1, !dbg !7
@.str.2 = private unnamed_addr constant [3 x i8] c"%d\00", align 1, !dbg !12
@.str.3 = private unnamed_addr constant [13 x i8] c"%lf%lf%lf%lf\00", align 1, !dbg !17
@.str.4 = private unnamed_addr constant [8 x i8] c"%.10lf\0A\00", align 1, !dbg !22

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_p(double %0, double %1) #0 !dbg !37 {
  %3 = alloca %struct.POINT, align 8
  %4 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0
  store double %0, ptr %4, align 8
  %5 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1
  store double %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !47, metadata !DIExpression()), !dbg !48
  %6 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 0, !dbg !49
  %7 = load double, ptr %6, align 8, !dbg !49
  %8 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 1, !dbg !50
  %9 = load double, ptr %8, align 8, !dbg !50
  %10 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %7, double noundef %9), !dbg !51
  ret void, !dbg !52
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare i32 @printf(ptr noundef, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_l(ptr noundef byval(%struct.LINE) align 8 %0) #0 !dbg !53 {
  call void @llvm.dbg.declare(metadata ptr %0, metadata !61, metadata !DIExpression()), !dbg !62
  %2 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !63
  %3 = getelementptr inbounds %struct.POINT, ptr %2, i32 0, i32 0, !dbg !64
  %4 = load double, ptr %3, align 8, !dbg !64
  %5 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !65
  %6 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 1, !dbg !66
  %7 = load double, ptr %6, align 8, !dbg !66
  %8 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !67
  %9 = getelementptr inbounds %struct.POINT, ptr %8, i32 0, i32 0, !dbg !68
  %10 = load double, ptr %9, align 8, !dbg !68
  %11 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !69
  %12 = getelementptr inbounds %struct.POINT, ptr %11, i32 0, i32 1, !dbg !70
  %13 = load double, ptr %12, align 8, !dbg !70
  %14 = call i32 (ptr, ...) @printf(ptr noundef @.str.1, double noundef %4, double noundef %7, double noundef %10, double noundef %13), !dbg !71
  ret void, !dbg !72
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @print_c(double %0, double %1) #0 !dbg !73 {
  %3 = alloca %struct.COMPLEX, align 8
  %4 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0
  store double %0, ptr %4, align 8
  %5 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1
  store double %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !81, metadata !DIExpression()), !dbg !82
  %6 = getelementptr inbounds %struct.COMPLEX, ptr %3, i32 0, i32 0, !dbg !83
  %7 = load double, ptr %6, align 8, !dbg !83
  %8 = getelementptr inbounds %struct.COMPLEX, ptr %3, i32 0, i32 1, !dbg !84
  %9 = load double, ptr %8, align 8, !dbg !84
  %10 = call i32 (ptr, ...) @printf(ptr noundef @.str, double noundef %7, double noundef %9), !dbg !85
  ret void, !dbg !86
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @norm2(double %0, double %1) #0 !dbg !87 {
  %3 = alloca %struct.POINT, align 8
  %4 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0
  store double %0, ptr %4, align 8
  %5 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1
  store double %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !90, metadata !DIExpression()), !dbg !91
  %6 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 0, !dbg !92
  %7 = load double, ptr %6, align 8, !dbg !92
  %8 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 0, !dbg !92
  %9 = load double, ptr %8, align 8, !dbg !92
  %10 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 1, !dbg !93
  %11 = load double, ptr %10, align 8, !dbg !93
  %12 = getelementptr inbounds %struct.POINT, ptr %3, i32 0, i32 1, !dbg !93
  %13 = load double, ptr %12, align 8, !dbg !93
  %14 = fmul double %11, %13, !dbg !93
  %15 = call double @llvm.fmuladd.f64(double %7, double %9, double %14), !dbg !94
  ret double %15, !dbg !95
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local double @norm(double %0, double %1) #0 !dbg !96 {
  %3 = alloca %struct.POINT, align 8
  %4 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0
  store double %0, ptr %4, align 8
  %5 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1
  store double %1, ptr %5, align 8
  call void @llvm.dbg.declare(metadata ptr %3, metadata !97, metadata !DIExpression()), !dbg !98
  %6 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0, !dbg !99
  %7 = load double, ptr %6, align 8, !dbg !99
  %8 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1, !dbg !99
  %9 = load double, ptr %8, align 8, !dbg !99
  %10 = call double @norm2(double %7, double %9), !dbg !99
  %11 = call double @sqrt(double noundef %10) #6, !dbg !100
  ret double %11, !dbg !101
}

; Function Attrs: nounwind
declare double @sqrt(double noundef) #3

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @make_vec(double %0, double %1, double %2, double %3) #0 !dbg !102 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %0, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %1, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0
  store double %2, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1
  store double %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !105, metadata !DIExpression()), !dbg !106
  call void @llvm.dbg.declare(metadata ptr %7, metadata !107, metadata !DIExpression()), !dbg !108
  %12 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 0, !dbg !109
  %13 = load double, ptr %12, align 8, !dbg !109
  %14 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 0, !dbg !110
  %15 = load double, ptr %14, align 8, !dbg !111
  %16 = fsub double %15, %13, !dbg !111
  store double %16, ptr %14, align 8, !dbg !111
  %17 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !112
  %18 = load double, ptr %17, align 8, !dbg !112
  %19 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 1, !dbg !113
  %20 = load double, ptr %19, align 8, !dbg !114
  %21 = fsub double %20, %18, !dbg !114
  store double %21, ptr %19, align 8, !dbg !114
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %7, i64 16, i1 false), !dbg !115
  %22 = load { double, double }, ptr %5, align 8, !dbg !116
  ret { double, double } %22, !dbg !116
}

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local double @distance(double %0, double %1, double %2, double %3) #0 !dbg !117 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %0, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %1, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %2, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !120, metadata !DIExpression()), !dbg !121
  call void @llvm.dbg.declare(metadata ptr %6, metadata !122, metadata !DIExpression()), !dbg !123
  %12 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !124
  %13 = load double, ptr %12, align 8, !dbg !124
  %14 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !124
  %15 = load double, ptr %14, align 8, !dbg !124
  %16 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !124
  %17 = load double, ptr %16, align 8, !dbg !124
  %18 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !124
  %19 = load double, ptr %18, align 8, !dbg !124
  %20 = call { double, double } @make_vec(double %13, double %15, double %17, double %19), !dbg !124
  %21 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !124
  %22 = extractvalue { double, double } %20, 0, !dbg !124
  store double %22, ptr %21, align 8, !dbg !124
  %23 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !124
  %24 = extractvalue { double, double } %20, 1, !dbg !124
  store double %24, ptr %23, align 8, !dbg !124
  %25 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !125
  %26 = load double, ptr %25, align 8, !dbg !125
  %27 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !125
  %28 = load double, ptr %27, align 8, !dbg !125
  %29 = call double @norm(double %26, double %28), !dbg !125
  ret double %29, !dbg !126
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @sum_vec(double %0, double %1, double %2, double %3) #0 !dbg !127 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %0, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %1, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0
  store double %2, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1
  store double %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !128, metadata !DIExpression()), !dbg !129
  call void @llvm.dbg.declare(metadata ptr %7, metadata !130, metadata !DIExpression()), !dbg !131
  %12 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 0, !dbg !132
  %13 = load double, ptr %12, align 8, !dbg !132
  %14 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 0, !dbg !133
  %15 = load double, ptr %14, align 8, !dbg !134
  %16 = fadd double %15, %13, !dbg !134
  store double %16, ptr %14, align 8, !dbg !134
  %17 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 1, !dbg !135
  %18 = load double, ptr %17, align 8, !dbg !135
  %19 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !136
  %20 = load double, ptr %19, align 8, !dbg !137
  %21 = fadd double %20, %18, !dbg !137
  store double %21, ptr %19, align 8, !dbg !137
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %6, i64 16, i1 false), !dbg !138
  %22 = load { double, double }, ptr %5, align 8, !dbg !139
  ret { double, double } %22, !dbg !139
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @dif_vec(double %0, double %1, double %2, double %3) #0 !dbg !140 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %0, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %1, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0
  store double %2, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1
  store double %3, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !141, metadata !DIExpression()), !dbg !142
  call void @llvm.dbg.declare(metadata ptr %7, metadata !143, metadata !DIExpression()), !dbg !144
  %12 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 0, !dbg !145
  %13 = load double, ptr %12, align 8, !dbg !145
  %14 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 0, !dbg !146
  %15 = load double, ptr %14, align 8, !dbg !147
  %16 = fsub double %15, %13, !dbg !147
  store double %16, ptr %14, align 8, !dbg !147
  %17 = getelementptr inbounds %struct.POINT, ptr %7, i32 0, i32 1, !dbg !148
  %18 = load double, ptr %17, align 8, !dbg !148
  %19 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !149
  %20 = load double, ptr %19, align 8, !dbg !150
  %21 = fsub double %20, %18, !dbg !150
  store double %21, ptr %19, align 8, !dbg !150
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %6, i64 16, i1 false), !dbg !151
  %22 = load { double, double }, ptr %5, align 8, !dbg !152
  ret { double, double } %22, !dbg !152
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @scalar_vec(double %0, double %1, double noundef %2) #0 !dbg !153 {
  %4 = alloca %struct.POINT, align 8
  %5 = alloca %struct.POINT, align 8
  %6 = alloca double, align 8
  %7 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %0, ptr %7, align 8
  %8 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %1, ptr %8, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !156, metadata !DIExpression()), !dbg !157
  store double %2, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %6, metadata !158, metadata !DIExpression()), !dbg !159
  %9 = load double, ptr %6, align 8, !dbg !160
  %10 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 0, !dbg !161
  %11 = load double, ptr %10, align 8, !dbg !162
  %12 = fmul double %11, %9, !dbg !162
  store double %12, ptr %10, align 8, !dbg !162
  %13 = load double, ptr %6, align 8, !dbg !163
  %14 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 1, !dbg !164
  %15 = load double, ptr %14, align 8, !dbg !165
  %16 = fmul double %15, %13, !dbg !165
  store double %16, ptr %14, align 8, !dbg !165
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %5, i64 16, i1 false), !dbg !166
  %17 = load { double, double }, ptr %4, align 8, !dbg !167
  ret { double, double } %17, !dbg !167
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @minus_vec(double %0, double %1) #0 !dbg !168 {
  %3 = alloca %struct.POINT, align 8
  %4 = alloca %struct.POINT, align 8
  %5 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0
  store double %0, ptr %5, align 8
  %6 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1
  store double %1, ptr %6, align 8
  call void @llvm.dbg.declare(metadata ptr %4, metadata !171, metadata !DIExpression()), !dbg !172
  %7 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !173
  %8 = load double, ptr %7, align 8, !dbg !173
  %9 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !173
  %10 = load double, ptr %9, align 8, !dbg !173
  %11 = call { double, double } @scalar_vec(double %8, double %10, double noundef -1.000000e+00), !dbg !173
  %12 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0, !dbg !173
  %13 = extractvalue { double, double } %11, 0, !dbg !173
  store double %13, ptr %12, align 8, !dbg !173
  %14 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1, !dbg !173
  %15 = extractvalue { double, double } %11, 1, !dbg !173
  store double %15, ptr %14, align 8, !dbg !173
  %16 = load { double, double }, ptr %3, align 8, !dbg !174
  ret { double, double } %16, !dbg !174
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @dot(double %0, double %1, double %2, double %3) #0 !dbg !175 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %0, ptr %7, align 8
  %8 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %1, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %2, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !176, metadata !DIExpression()), !dbg !177
  call void @llvm.dbg.declare(metadata ptr %6, metadata !178, metadata !DIExpression()), !dbg !179
  %11 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 0, !dbg !180
  %12 = load double, ptr %11, align 8, !dbg !180
  %13 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 0, !dbg !181
  %14 = load double, ptr %13, align 8, !dbg !181
  %15 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 1, !dbg !182
  %16 = load double, ptr %15, align 8, !dbg !182
  %17 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !183
  %18 = load double, ptr %17, align 8, !dbg !183
  %19 = fmul double %16, %18, !dbg !184
  %20 = call double @llvm.fmuladd.f64(double %12, double %14, double %19), !dbg !185
  ret double %20, !dbg !186
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @cross(double %0, double %1, double %2, double %3) #0 !dbg !187 {
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %0, ptr %7, align 8
  %8 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %1, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %2, ptr %9, align 8
  %10 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %3, ptr %10, align 8
  call void @llvm.dbg.declare(metadata ptr %5, metadata !188, metadata !DIExpression()), !dbg !189
  call void @llvm.dbg.declare(metadata ptr %6, metadata !190, metadata !DIExpression()), !dbg !191
  %11 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 0, !dbg !192
  %12 = load double, ptr %11, align 8, !dbg !192
  %13 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !193
  %14 = load double, ptr %13, align 8, !dbg !193
  %15 = getelementptr inbounds %struct.POINT, ptr %5, i32 0, i32 1, !dbg !194
  %16 = load double, ptr %15, align 8, !dbg !194
  %17 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 0, !dbg !195
  %18 = load double, ptr %17, align 8, !dbg !195
  %19 = fmul double %16, %18, !dbg !196
  %20 = fneg double %19, !dbg !197
  %21 = call double @llvm.fmuladd.f64(double %12, double %14, double %20), !dbg !197
  ret double %21, !dbg !198
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @division(double %0, double %1, double %2, double %3, double noundef %4, double noundef %5, i32 noundef %6) #0 !dbg !199 {
  %8 = alloca %struct.POINT, align 8
  %9 = alloca %struct.POINT, align 8
  %10 = alloca %struct.POINT, align 8
  %11 = alloca double, align 8
  %12 = alloca double, align 8
  %13 = alloca i32, align 4
  %14 = alloca double, align 8
  %15 = alloca %struct.POINT, align 8
  %16 = alloca %struct.POINT, align 8
  %17 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0
  store double %0, ptr %17, align 8
  %18 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1
  store double %1, ptr %18, align 8
  %19 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0
  store double %2, ptr %19, align 8
  %20 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1
  store double %3, ptr %20, align 8
  call void @llvm.dbg.declare(metadata ptr %9, metadata !203, metadata !DIExpression()), !dbg !204
  call void @llvm.dbg.declare(metadata ptr %10, metadata !205, metadata !DIExpression()), !dbg !206
  store double %4, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !207, metadata !DIExpression()), !dbg !208
  store double %5, ptr %12, align 8
  call void @llvm.dbg.declare(metadata ptr %12, metadata !209, metadata !DIExpression()), !dbg !210
  store i32 %6, ptr %13, align 4
  call void @llvm.dbg.declare(metadata ptr %13, metadata !211, metadata !DIExpression()), !dbg !212
  call void @llvm.dbg.declare(metadata ptr %14, metadata !213, metadata !DIExpression()), !dbg !214
  %21 = load double, ptr %11, align 8, !dbg !215
  %22 = load double, ptr %12, align 8, !dbg !216
  %23 = load i32, ptr %13, align 4, !dbg !217
  %24 = mul nsw i32 %23, 2, !dbg !218
  %25 = sub nsw i32 1, %24, !dbg !219
  %26 = sitofp i32 %25 to double, !dbg !220
  %27 = call double @llvm.fmuladd.f64(double %22, double %26, double %21), !dbg !221
  store double %27, ptr %14, align 8, !dbg !214
  %28 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !222
  %29 = load double, ptr %28, align 8, !dbg !222
  %30 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !222
  %31 = load double, ptr %30, align 8, !dbg !222
  %32 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !222
  %33 = load double, ptr %32, align 8, !dbg !222
  %34 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !222
  %35 = load double, ptr %34, align 8, !dbg !222
  %36 = call { double, double } @make_vec(double %29, double %31, double %33, double %35), !dbg !222
  %37 = getelementptr inbounds { double, double }, ptr %15, i32 0, i32 0, !dbg !222
  %38 = extractvalue { double, double } %36, 0, !dbg !222
  store double %38, ptr %37, align 8, !dbg !222
  %39 = getelementptr inbounds { double, double }, ptr %15, i32 0, i32 1, !dbg !222
  %40 = extractvalue { double, double } %36, 1, !dbg !222
  store double %40, ptr %39, align 8, !dbg !222
  %41 = getelementptr inbounds %struct.POINT, ptr %15, i32 0, i32 0, !dbg !223
  %42 = load double, ptr %41, align 8, !dbg !223
  %43 = load double, ptr %14, align 8, !dbg !224
  %44 = fdiv double %42, %43, !dbg !225
  %45 = load double, ptr %11, align 8, !dbg !226
  %46 = getelementptr inbounds %struct.POINT, ptr %9, i32 0, i32 0, !dbg !227
  %47 = load double, ptr %46, align 8, !dbg !228
  %48 = call double @llvm.fmuladd.f64(double %44, double %45, double %47), !dbg !228
  store double %48, ptr %46, align 8, !dbg !228
  %49 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !229
  %50 = load double, ptr %49, align 8, !dbg !229
  %51 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !229
  %52 = load double, ptr %51, align 8, !dbg !229
  %53 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !229
  %54 = load double, ptr %53, align 8, !dbg !229
  %55 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !229
  %56 = load double, ptr %55, align 8, !dbg !229
  %57 = call { double, double } @make_vec(double %50, double %52, double %54, double %56), !dbg !229
  %58 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 0, !dbg !229
  %59 = extractvalue { double, double } %57, 0, !dbg !229
  store double %59, ptr %58, align 8, !dbg !229
  %60 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !229
  %61 = extractvalue { double, double } %57, 1, !dbg !229
  store double %61, ptr %60, align 8, !dbg !229
  %62 = getelementptr inbounds %struct.POINT, ptr %16, i32 0, i32 1, !dbg !230
  %63 = load double, ptr %62, align 8, !dbg !230
  %64 = load double, ptr %14, align 8, !dbg !231
  %65 = fdiv double %63, %64, !dbg !232
  %66 = load double, ptr %11, align 8, !dbg !233
  %67 = getelementptr inbounds %struct.POINT, ptr %9, i32 0, i32 1, !dbg !234
  %68 = load double, ptr %67, align 8, !dbg !235
  %69 = call double @llvm.fmuladd.f64(double %65, double %66, double %68), !dbg !235
  store double %69, ptr %67, align 8, !dbg !235
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %9, i64 16, i1 false), !dbg !236
  %70 = load { double, double }, ptr %8, align 8, !dbg !237
  ret { double, double } %70, !dbg !237
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @perpendicular(ptr noundef byval(%struct.LINE) align 8 %0, double %1, double %2) #0 !dbg !238 {
  %4 = alloca %struct.POINT, align 8
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = alloca double, align 8
  %9 = alloca double, align 8
  %10 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %1, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !241, metadata !DIExpression()), !dbg !242
  call void @llvm.dbg.declare(metadata ptr %5, metadata !243, metadata !DIExpression()), !dbg !244
  call void @llvm.dbg.declare(metadata ptr %6, metadata !245, metadata !DIExpression()), !dbg !246
  %12 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !247
  %13 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !248
  %14 = load double, ptr %13, align 8, !dbg !248
  %15 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !248
  %16 = load double, ptr %15, align 8, !dbg !248
  %17 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 0, !dbg !248
  %18 = load double, ptr %17, align 8, !dbg !248
  %19 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 1, !dbg !248
  %20 = load double, ptr %19, align 8, !dbg !248
  %21 = call { double, double } @make_vec(double %14, double %16, double %18, double %20), !dbg !248
  %22 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !248
  %23 = extractvalue { double, double } %21, 0, !dbg !248
  store double %23, ptr %22, align 8, !dbg !248
  %24 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !248
  %25 = extractvalue { double, double } %21, 1, !dbg !248
  store double %25, ptr %24, align 8, !dbg !248
  call void @llvm.dbg.declare(metadata ptr %7, metadata !249, metadata !DIExpression()), !dbg !250
  %26 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !251
  %27 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !252
  %28 = load double, ptr %27, align 8, !dbg !252
  %29 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !252
  %30 = load double, ptr %29, align 8, !dbg !252
  %31 = getelementptr inbounds { double, double }, ptr %26, i32 0, i32 0, !dbg !252
  %32 = load double, ptr %31, align 8, !dbg !252
  %33 = getelementptr inbounds { double, double }, ptr %26, i32 0, i32 1, !dbg !252
  %34 = load double, ptr %33, align 8, !dbg !252
  %35 = call { double, double } @make_vec(double %28, double %30, double %32, double %34), !dbg !252
  %36 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !252
  %37 = extractvalue { double, double } %35, 0, !dbg !252
  store double %37, ptr %36, align 8, !dbg !252
  %38 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !252
  %39 = extractvalue { double, double } %35, 1, !dbg !252
  store double %39, ptr %38, align 8, !dbg !252
  call void @llvm.dbg.declare(metadata ptr %8, metadata !253, metadata !DIExpression()), !dbg !254
  %40 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !255
  %41 = load double, ptr %40, align 8, !dbg !255
  %42 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !255
  %43 = load double, ptr %42, align 8, !dbg !255
  %44 = call double @norm2(double %41, double %43), !dbg !255
  %45 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !256
  %46 = load double, ptr %45, align 8, !dbg !256
  %47 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !256
  %48 = load double, ptr %47, align 8, !dbg !256
  %49 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !256
  %50 = load double, ptr %49, align 8, !dbg !256
  %51 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !256
  %52 = load double, ptr %51, align 8, !dbg !256
  %53 = call double @dot(double %46, double %48, double %50, double %52), !dbg !256
  %54 = fsub double %44, %53, !dbg !257
  store double %54, ptr %8, align 8, !dbg !254
  call void @llvm.dbg.declare(metadata ptr %9, metadata !258, metadata !DIExpression()), !dbg !259
  %55 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !260
  %56 = load double, ptr %55, align 8, !dbg !260
  %57 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !260
  %58 = load double, ptr %57, align 8, !dbg !260
  %59 = call double @norm2(double %56, double %58), !dbg !260
  %60 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !261
  %61 = load double, ptr %60, align 8, !dbg !261
  %62 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !261
  %63 = load double, ptr %62, align 8, !dbg !261
  %64 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !261
  %65 = load double, ptr %64, align 8, !dbg !261
  %66 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !261
  %67 = load double, ptr %66, align 8, !dbg !261
  %68 = call double @dot(double %61, double %63, double %65, double %67), !dbg !261
  %69 = fsub double %59, %68, !dbg !262
  store double %69, ptr %9, align 8, !dbg !259
  %70 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !263
  %71 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !264
  %72 = load double, ptr %8, align 8, !dbg !265
  %73 = load double, ptr %9, align 8, !dbg !266
  %74 = getelementptr inbounds { double, double }, ptr %70, i32 0, i32 0, !dbg !267
  %75 = load double, ptr %74, align 8, !dbg !267
  %76 = getelementptr inbounds { double, double }, ptr %70, i32 0, i32 1, !dbg !267
  %77 = load double, ptr %76, align 8, !dbg !267
  %78 = getelementptr inbounds { double, double }, ptr %71, i32 0, i32 0, !dbg !267
  %79 = load double, ptr %78, align 8, !dbg !267
  %80 = getelementptr inbounds { double, double }, ptr %71, i32 0, i32 1, !dbg !267
  %81 = load double, ptr %80, align 8, !dbg !267
  %82 = call { double, double } @division(double %75, double %77, double %79, double %81, double noundef %72, double noundef %73, i32 noundef 0), !dbg !267
  %83 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !267
  %84 = extractvalue { double, double } %82, 0, !dbg !267
  store double %84, ptr %83, align 8, !dbg !267
  %85 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !267
  %86 = extractvalue { double, double } %82, 1, !dbg !267
  store double %86, ptr %85, align 8, !dbg !267
  %87 = load { double, double }, ptr %4, align 8, !dbg !268
  ret { double, double } %87, !dbg !268
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @reflection(ptr noundef byval(%struct.LINE) align 8 %0, double %1, double %2) #0 !dbg !269 {
  %4 = alloca %struct.POINT, align 8
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %1, ptr %8, align 8
  %9 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %2, ptr %9, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !270, metadata !DIExpression()), !dbg !271
  call void @llvm.dbg.declare(metadata ptr %5, metadata !272, metadata !DIExpression()), !dbg !273
  call void @llvm.dbg.declare(metadata ptr %6, metadata !274, metadata !DIExpression()), !dbg !275
  %10 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !276
  %11 = load double, ptr %10, align 8, !dbg !276
  %12 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !276
  %13 = load double, ptr %12, align 8, !dbg !276
  %14 = call { double, double } @perpendicular(ptr noundef byval(%struct.LINE) align 8 %0, double %11, double %13), !dbg !276
  %15 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !276
  %16 = extractvalue { double, double } %14, 0, !dbg !276
  store double %16, ptr %15, align 8, !dbg !276
  %17 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !276
  %18 = extractvalue { double, double } %14, 1, !dbg !276
  store double %18, ptr %17, align 8, !dbg !276
  %19 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !277
  %20 = load double, ptr %19, align 8, !dbg !277
  %21 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !277
  %22 = load double, ptr %21, align 8, !dbg !277
  %23 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !277
  %24 = load double, ptr %23, align 8, !dbg !277
  %25 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !277
  %26 = load double, ptr %25, align 8, !dbg !277
  %27 = call { double, double } @make_vec(double %20, double %22, double %24, double %26), !dbg !277
  %28 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !277
  %29 = extractvalue { double, double } %27, 0, !dbg !277
  store double %29, ptr %28, align 8, !dbg !277
  %30 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !277
  %31 = extractvalue { double, double } %27, 1, !dbg !277
  store double %31, ptr %30, align 8, !dbg !277
  %32 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !278
  %33 = load double, ptr %32, align 8, !dbg !278
  %34 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !278
  %35 = load double, ptr %34, align 8, !dbg !278
  %36 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !278
  %37 = load double, ptr %36, align 8, !dbg !278
  %38 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !278
  %39 = load double, ptr %38, align 8, !dbg !278
  %40 = call { double, double } @sum_vec(double %33, double %35, double %37, double %39), !dbg !278
  %41 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !278
  %42 = extractvalue { double, double } %40, 0, !dbg !278
  store double %42, ptr %41, align 8, !dbg !278
  %43 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !278
  %44 = extractvalue { double, double } %40, 1, !dbg !278
  store double %44, ptr %43, align 8, !dbg !278
  %45 = load { double, double }, ptr %4, align 8, !dbg !279
  ret { double, double } %45, !dbg !279
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @inclusion(ptr noundef %0, i32 noundef %1, double %2, double %3) #0 !dbg !280 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.POINT, align 8
  %7 = alloca ptr, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca i32, align 4
  %16 = alloca %struct.POINT, align 8
  %17 = alloca %struct.POINT, align 8
  %18 = alloca %struct.POINT, align 8
  %19 = alloca %struct.POINT, align 8
  %20 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0
  store double %2, ptr %20, align 8
  %21 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1
  store double %3, ptr %21, align 8
  store ptr %0, ptr %7, align 8
  call void @llvm.dbg.declare(metadata ptr %7, metadata !284, metadata !DIExpression()), !dbg !285
  store i32 %1, ptr %8, align 4
  call void @llvm.dbg.declare(metadata ptr %8, metadata !286, metadata !DIExpression()), !dbg !287
  call void @llvm.dbg.declare(metadata ptr %6, metadata !288, metadata !DIExpression()), !dbg !289
  call void @llvm.dbg.declare(metadata ptr %9, metadata !290, metadata !DIExpression()), !dbg !291
  store i32 0, ptr %9, align 4, !dbg !291
  call void @llvm.dbg.declare(metadata ptr %10, metadata !292, metadata !DIExpression()), !dbg !293
  %22 = load i32, ptr %8, align 4, !dbg !294
  %23 = add nsw i32 %22, 1, !dbg !295
  %24 = zext i32 %23 to i64, !dbg !296
  %25 = call ptr @llvm.stacksave.p0(), !dbg !296
  store ptr %25, ptr %11, align 8, !dbg !296
  %26 = alloca %struct.POINT, i64 %24, align 16, !dbg !296
  store i64 %24, ptr %12, align 8, !dbg !296
  call void @llvm.dbg.declare(metadata ptr %12, metadata !297, metadata !DIExpression()), !dbg !299
  call void @llvm.dbg.declare(metadata ptr %26, metadata !300, metadata !DIExpression()), !dbg !304
  call void @llvm.dbg.declare(metadata ptr %13, metadata !305, metadata !DIExpression()), !dbg !306
  call void @llvm.dbg.declare(metadata ptr %14, metadata !307, metadata !DIExpression()), !dbg !308
  store double 0.000000e+00, ptr %14, align 8, !dbg !308
  store i32 0, ptr %10, align 4, !dbg !309
  br label %27, !dbg !311

27:                                               ; preds = %5401, %4
  %28 = load i32, ptr %10, align 4, !dbg !312
  %29 = load i32, ptr %8, align 4, !dbg !314
  %30 = icmp slt i32 %28, %29, !dbg !315
  br i1 %30, label %31, label %5404, !dbg !316

31:                                               ; preds = %27
  %32 = load i32, ptr %10, align 4, !dbg !317
  %33 = sext i32 %32 to i64, !dbg !319
  %34 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33, !dbg !319
  %35 = load ptr, ptr %7, align 8, !dbg !320
  %36 = load i32, ptr %10, align 4, !dbg !321
  %37 = sext i32 %36 to i64, !dbg !320
  %38 = getelementptr inbounds %struct.POINT, ptr %35, i64 %37, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %34, ptr align 8 %38, i64 16, i1 false), !dbg !320
  br label %39, !dbg !322

39:                                               ; preds = %31
  %40 = load i32, ptr %10, align 4, !dbg !323
  %41 = add nsw i32 %40, 1, !dbg !323
  store i32 %41, ptr %10, align 4, !dbg !323
  %42 = load i32, ptr %10, align 4, !dbg !312
  %43 = load i32, ptr %8, align 4, !dbg !314
  %44 = icmp slt i32 %42, %43, !dbg !315
  br i1 %44, label %45, label %5404, !dbg !316

45:                                               ; preds = %39
  %46 = load i32, ptr %10, align 4, !dbg !317
  %47 = sext i32 %46 to i64, !dbg !319
  %48 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47, !dbg !319
  %49 = load ptr, ptr %7, align 8, !dbg !320
  %50 = load i32, ptr %10, align 4, !dbg !321
  %51 = sext i32 %50 to i64, !dbg !320
  %52 = getelementptr inbounds %struct.POINT, ptr %49, i64 %51, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %48, ptr align 8 %52, i64 16, i1 false), !dbg !320
  br label %53, !dbg !322

53:                                               ; preds = %45
  %54 = load i32, ptr %10, align 4, !dbg !323
  %55 = add nsw i32 %54, 1, !dbg !323
  store i32 %55, ptr %10, align 4, !dbg !323
  %56 = load i32, ptr %10, align 4, !dbg !312
  %57 = load i32, ptr %8, align 4, !dbg !314
  %58 = icmp slt i32 %56, %57, !dbg !315
  br i1 %58, label %59, label %5404, !dbg !316

59:                                               ; preds = %53
  %60 = load i32, ptr %10, align 4, !dbg !317
  %61 = sext i32 %60 to i64, !dbg !319
  %62 = getelementptr inbounds %struct.POINT, ptr %26, i64 %61, !dbg !319
  %63 = load ptr, ptr %7, align 8, !dbg !320
  %64 = load i32, ptr %10, align 4, !dbg !321
  %65 = sext i32 %64 to i64, !dbg !320
  %66 = getelementptr inbounds %struct.POINT, ptr %63, i64 %65, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %62, ptr align 8 %66, i64 16, i1 false), !dbg !320
  br label %67, !dbg !322

67:                                               ; preds = %59
  %68 = load i32, ptr %10, align 4, !dbg !323
  %69 = add nsw i32 %68, 1, !dbg !323
  store i32 %69, ptr %10, align 4, !dbg !323
  %70 = load i32, ptr %10, align 4, !dbg !312
  %71 = load i32, ptr %8, align 4, !dbg !314
  %72 = icmp slt i32 %70, %71, !dbg !315
  br i1 %72, label %73, label %5404, !dbg !316

73:                                               ; preds = %67
  %74 = load i32, ptr %10, align 4, !dbg !317
  %75 = sext i32 %74 to i64, !dbg !319
  %76 = getelementptr inbounds %struct.POINT, ptr %26, i64 %75, !dbg !319
  %77 = load ptr, ptr %7, align 8, !dbg !320
  %78 = load i32, ptr %10, align 4, !dbg !321
  %79 = sext i32 %78 to i64, !dbg !320
  %80 = getelementptr inbounds %struct.POINT, ptr %77, i64 %79, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %76, ptr align 8 %80, i64 16, i1 false), !dbg !320
  br label %81, !dbg !322

81:                                               ; preds = %73
  %82 = load i32, ptr %10, align 4, !dbg !323
  %83 = add nsw i32 %82, 1, !dbg !323
  store i32 %83, ptr %10, align 4, !dbg !323
  %84 = load i32, ptr %10, align 4, !dbg !312
  %85 = load i32, ptr %8, align 4, !dbg !314
  %86 = icmp slt i32 %84, %85, !dbg !315
  br i1 %86, label %87, label %5404, !dbg !316

87:                                               ; preds = %81
  %88 = load i32, ptr %10, align 4, !dbg !317
  %89 = sext i32 %88 to i64, !dbg !319
  %90 = getelementptr inbounds %struct.POINT, ptr %26, i64 %89, !dbg !319
  %91 = load ptr, ptr %7, align 8, !dbg !320
  %92 = load i32, ptr %10, align 4, !dbg !321
  %93 = sext i32 %92 to i64, !dbg !320
  %94 = getelementptr inbounds %struct.POINT, ptr %91, i64 %93, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %90, ptr align 8 %94, i64 16, i1 false), !dbg !320
  br label %95, !dbg !322

95:                                               ; preds = %87
  %96 = load i32, ptr %10, align 4, !dbg !323
  %97 = add nsw i32 %96, 1, !dbg !323
  store i32 %97, ptr %10, align 4, !dbg !323
  %98 = load i32, ptr %10, align 4, !dbg !312
  %99 = load i32, ptr %8, align 4, !dbg !314
  %100 = icmp slt i32 %98, %99, !dbg !315
  br i1 %100, label %101, label %5404, !dbg !316

101:                                              ; preds = %95
  %102 = load i32, ptr %10, align 4, !dbg !317
  %103 = sext i32 %102 to i64, !dbg !319
  %104 = getelementptr inbounds %struct.POINT, ptr %26, i64 %103, !dbg !319
  %105 = load ptr, ptr %7, align 8, !dbg !320
  %106 = load i32, ptr %10, align 4, !dbg !321
  %107 = sext i32 %106 to i64, !dbg !320
  %108 = getelementptr inbounds %struct.POINT, ptr %105, i64 %107, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %104, ptr align 8 %108, i64 16, i1 false), !dbg !320
  br label %109, !dbg !322

109:                                              ; preds = %101
  %110 = load i32, ptr %10, align 4, !dbg !323
  %111 = add nsw i32 %110, 1, !dbg !323
  store i32 %111, ptr %10, align 4, !dbg !323
  %112 = load i32, ptr %10, align 4, !dbg !312
  %113 = load i32, ptr %8, align 4, !dbg !314
  %114 = icmp slt i32 %112, %113, !dbg !315
  br i1 %114, label %115, label %5404, !dbg !316

115:                                              ; preds = %109
  %116 = load i32, ptr %10, align 4, !dbg !317
  %117 = sext i32 %116 to i64, !dbg !319
  %118 = getelementptr inbounds %struct.POINT, ptr %26, i64 %117, !dbg !319
  %119 = load ptr, ptr %7, align 8, !dbg !320
  %120 = load i32, ptr %10, align 4, !dbg !321
  %121 = sext i32 %120 to i64, !dbg !320
  %122 = getelementptr inbounds %struct.POINT, ptr %119, i64 %121, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %118, ptr align 8 %122, i64 16, i1 false), !dbg !320
  br label %123, !dbg !322

123:                                              ; preds = %115
  %124 = load i32, ptr %10, align 4, !dbg !323
  %125 = add nsw i32 %124, 1, !dbg !323
  store i32 %125, ptr %10, align 4, !dbg !323
  %126 = load i32, ptr %10, align 4, !dbg !312
  %127 = load i32, ptr %8, align 4, !dbg !314
  %128 = icmp slt i32 %126, %127, !dbg !315
  br i1 %128, label %129, label %5404, !dbg !316

129:                                              ; preds = %123
  %130 = load i32, ptr %10, align 4, !dbg !317
  %131 = sext i32 %130 to i64, !dbg !319
  %132 = getelementptr inbounds %struct.POINT, ptr %26, i64 %131, !dbg !319
  %133 = load ptr, ptr %7, align 8, !dbg !320
  %134 = load i32, ptr %10, align 4, !dbg !321
  %135 = sext i32 %134 to i64, !dbg !320
  %136 = getelementptr inbounds %struct.POINT, ptr %133, i64 %135, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %132, ptr align 8 %136, i64 16, i1 false), !dbg !320
  br label %137, !dbg !322

137:                                              ; preds = %129
  %138 = load i32, ptr %10, align 4, !dbg !323
  %139 = add nsw i32 %138, 1, !dbg !323
  store i32 %139, ptr %10, align 4, !dbg !323
  %140 = load i32, ptr %10, align 4, !dbg !312
  %141 = load i32, ptr %8, align 4, !dbg !314
  %142 = icmp slt i32 %140, %141, !dbg !315
  br i1 %142, label %143, label %5404, !dbg !316

143:                                              ; preds = %137
  %144 = load i32, ptr %10, align 4, !dbg !317
  %145 = sext i32 %144 to i64, !dbg !319
  %146 = getelementptr inbounds %struct.POINT, ptr %26, i64 %145, !dbg !319
  %147 = load ptr, ptr %7, align 8, !dbg !320
  %148 = load i32, ptr %10, align 4, !dbg !321
  %149 = sext i32 %148 to i64, !dbg !320
  %150 = getelementptr inbounds %struct.POINT, ptr %147, i64 %149, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %146, ptr align 8 %150, i64 16, i1 false), !dbg !320
  br label %151, !dbg !322

151:                                              ; preds = %143
  %152 = load i32, ptr %10, align 4, !dbg !323
  %153 = add nsw i32 %152, 1, !dbg !323
  store i32 %153, ptr %10, align 4, !dbg !323
  %154 = load i32, ptr %10, align 4, !dbg !312
  %155 = load i32, ptr %8, align 4, !dbg !314
  %156 = icmp slt i32 %154, %155, !dbg !315
  br i1 %156, label %157, label %5404, !dbg !316

157:                                              ; preds = %151
  %158 = load i32, ptr %10, align 4, !dbg !317
  %159 = sext i32 %158 to i64, !dbg !319
  %160 = getelementptr inbounds %struct.POINT, ptr %26, i64 %159, !dbg !319
  %161 = load ptr, ptr %7, align 8, !dbg !320
  %162 = load i32, ptr %10, align 4, !dbg !321
  %163 = sext i32 %162 to i64, !dbg !320
  %164 = getelementptr inbounds %struct.POINT, ptr %161, i64 %163, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %160, ptr align 8 %164, i64 16, i1 false), !dbg !320
  br label %165, !dbg !322

165:                                              ; preds = %157
  %166 = load i32, ptr %10, align 4, !dbg !323
  %167 = add nsw i32 %166, 1, !dbg !323
  store i32 %167, ptr %10, align 4, !dbg !323
  %168 = load i32, ptr %10, align 4, !dbg !312
  %169 = load i32, ptr %8, align 4, !dbg !314
  %170 = icmp slt i32 %168, %169, !dbg !315
  br i1 %170, label %171, label %5404, !dbg !316

171:                                              ; preds = %165
  %172 = load i32, ptr %10, align 4, !dbg !317
  %173 = sext i32 %172 to i64, !dbg !319
  %174 = getelementptr inbounds %struct.POINT, ptr %26, i64 %173, !dbg !319
  %175 = load ptr, ptr %7, align 8, !dbg !320
  %176 = load i32, ptr %10, align 4, !dbg !321
  %177 = sext i32 %176 to i64, !dbg !320
  %178 = getelementptr inbounds %struct.POINT, ptr %175, i64 %177, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %174, ptr align 8 %178, i64 16, i1 false), !dbg !320
  br label %179, !dbg !322

179:                                              ; preds = %171
  %180 = load i32, ptr %10, align 4, !dbg !323
  %181 = add nsw i32 %180, 1, !dbg !323
  store i32 %181, ptr %10, align 4, !dbg !323
  %182 = load i32, ptr %10, align 4, !dbg !312
  %183 = load i32, ptr %8, align 4, !dbg !314
  %184 = icmp slt i32 %182, %183, !dbg !315
  br i1 %184, label %185, label %5404, !dbg !316

185:                                              ; preds = %179
  %186 = load i32, ptr %10, align 4, !dbg !317
  %187 = sext i32 %186 to i64, !dbg !319
  %188 = getelementptr inbounds %struct.POINT, ptr %26, i64 %187, !dbg !319
  %189 = load ptr, ptr %7, align 8, !dbg !320
  %190 = load i32, ptr %10, align 4, !dbg !321
  %191 = sext i32 %190 to i64, !dbg !320
  %192 = getelementptr inbounds %struct.POINT, ptr %189, i64 %191, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %188, ptr align 8 %192, i64 16, i1 false), !dbg !320
  br label %193, !dbg !322

193:                                              ; preds = %185
  %194 = load i32, ptr %10, align 4, !dbg !323
  %195 = add nsw i32 %194, 1, !dbg !323
  store i32 %195, ptr %10, align 4, !dbg !323
  %196 = load i32, ptr %10, align 4, !dbg !312
  %197 = load i32, ptr %8, align 4, !dbg !314
  %198 = icmp slt i32 %196, %197, !dbg !315
  br i1 %198, label %199, label %5404, !dbg !316

199:                                              ; preds = %193
  %200 = load i32, ptr %10, align 4, !dbg !317
  %201 = sext i32 %200 to i64, !dbg !319
  %202 = getelementptr inbounds %struct.POINT, ptr %26, i64 %201, !dbg !319
  %203 = load ptr, ptr %7, align 8, !dbg !320
  %204 = load i32, ptr %10, align 4, !dbg !321
  %205 = sext i32 %204 to i64, !dbg !320
  %206 = getelementptr inbounds %struct.POINT, ptr %203, i64 %205, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %202, ptr align 8 %206, i64 16, i1 false), !dbg !320
  br label %207, !dbg !322

207:                                              ; preds = %199
  %208 = load i32, ptr %10, align 4, !dbg !323
  %209 = add nsw i32 %208, 1, !dbg !323
  store i32 %209, ptr %10, align 4, !dbg !323
  %210 = load i32, ptr %10, align 4, !dbg !312
  %211 = load i32, ptr %8, align 4, !dbg !314
  %212 = icmp slt i32 %210, %211, !dbg !315
  br i1 %212, label %213, label %5404, !dbg !316

213:                                              ; preds = %207
  %214 = load i32, ptr %10, align 4, !dbg !317
  %215 = sext i32 %214 to i64, !dbg !319
  %216 = getelementptr inbounds %struct.POINT, ptr %26, i64 %215, !dbg !319
  %217 = load ptr, ptr %7, align 8, !dbg !320
  %218 = load i32, ptr %10, align 4, !dbg !321
  %219 = sext i32 %218 to i64, !dbg !320
  %220 = getelementptr inbounds %struct.POINT, ptr %217, i64 %219, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %216, ptr align 8 %220, i64 16, i1 false), !dbg !320
  br label %221, !dbg !322

221:                                              ; preds = %213
  %222 = load i32, ptr %10, align 4, !dbg !323
  %223 = add nsw i32 %222, 1, !dbg !323
  store i32 %223, ptr %10, align 4, !dbg !323
  %224 = load i32, ptr %10, align 4, !dbg !312
  %225 = load i32, ptr %8, align 4, !dbg !314
  %226 = icmp slt i32 %224, %225, !dbg !315
  br i1 %226, label %227, label %5404, !dbg !316

227:                                              ; preds = %221
  %228 = load i32, ptr %10, align 4, !dbg !317
  %229 = sext i32 %228 to i64, !dbg !319
  %230 = getelementptr inbounds %struct.POINT, ptr %26, i64 %229, !dbg !319
  %231 = load ptr, ptr %7, align 8, !dbg !320
  %232 = load i32, ptr %10, align 4, !dbg !321
  %233 = sext i32 %232 to i64, !dbg !320
  %234 = getelementptr inbounds %struct.POINT, ptr %231, i64 %233, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %230, ptr align 8 %234, i64 16, i1 false), !dbg !320
  br label %235, !dbg !322

235:                                              ; preds = %227
  %236 = load i32, ptr %10, align 4, !dbg !323
  %237 = add nsw i32 %236, 1, !dbg !323
  store i32 %237, ptr %10, align 4, !dbg !323
  %238 = load i32, ptr %10, align 4, !dbg !312
  %239 = load i32, ptr %8, align 4, !dbg !314
  %240 = icmp slt i32 %238, %239, !dbg !315
  br i1 %240, label %241, label %5404, !dbg !316

241:                                              ; preds = %235
  %242 = load i32, ptr %10, align 4, !dbg !317
  %243 = sext i32 %242 to i64, !dbg !319
  %244 = getelementptr inbounds %struct.POINT, ptr %26, i64 %243, !dbg !319
  %245 = load ptr, ptr %7, align 8, !dbg !320
  %246 = load i32, ptr %10, align 4, !dbg !321
  %247 = sext i32 %246 to i64, !dbg !320
  %248 = getelementptr inbounds %struct.POINT, ptr %245, i64 %247, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %244, ptr align 8 %248, i64 16, i1 false), !dbg !320
  br label %249, !dbg !322

249:                                              ; preds = %241
  %250 = load i32, ptr %10, align 4, !dbg !323
  %251 = add nsw i32 %250, 1, !dbg !323
  store i32 %251, ptr %10, align 4, !dbg !323
  %252 = load i32, ptr %10, align 4, !dbg !312
  %253 = load i32, ptr %8, align 4, !dbg !314
  %254 = icmp slt i32 %252, %253, !dbg !315
  br i1 %254, label %255, label %5404, !dbg !316

255:                                              ; preds = %249
  %256 = load i32, ptr %10, align 4, !dbg !317
  %257 = sext i32 %256 to i64, !dbg !319
  %258 = getelementptr inbounds %struct.POINT, ptr %26, i64 %257, !dbg !319
  %259 = load ptr, ptr %7, align 8, !dbg !320
  %260 = load i32, ptr %10, align 4, !dbg !321
  %261 = sext i32 %260 to i64, !dbg !320
  %262 = getelementptr inbounds %struct.POINT, ptr %259, i64 %261, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %258, ptr align 8 %262, i64 16, i1 false), !dbg !320
  br label %263, !dbg !322

263:                                              ; preds = %255
  %264 = load i32, ptr %10, align 4, !dbg !323
  %265 = add nsw i32 %264, 1, !dbg !323
  store i32 %265, ptr %10, align 4, !dbg !323
  %266 = load i32, ptr %10, align 4, !dbg !312
  %267 = load i32, ptr %8, align 4, !dbg !314
  %268 = icmp slt i32 %266, %267, !dbg !315
  br i1 %268, label %269, label %5404, !dbg !316

269:                                              ; preds = %263
  %270 = load i32, ptr %10, align 4, !dbg !317
  %271 = sext i32 %270 to i64, !dbg !319
  %272 = getelementptr inbounds %struct.POINT, ptr %26, i64 %271, !dbg !319
  %273 = load ptr, ptr %7, align 8, !dbg !320
  %274 = load i32, ptr %10, align 4, !dbg !321
  %275 = sext i32 %274 to i64, !dbg !320
  %276 = getelementptr inbounds %struct.POINT, ptr %273, i64 %275, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %272, ptr align 8 %276, i64 16, i1 false), !dbg !320
  br label %277, !dbg !322

277:                                              ; preds = %269
  %278 = load i32, ptr %10, align 4, !dbg !323
  %279 = add nsw i32 %278, 1, !dbg !323
  store i32 %279, ptr %10, align 4, !dbg !323
  %280 = load i32, ptr %10, align 4, !dbg !312
  %281 = load i32, ptr %8, align 4, !dbg !314
  %282 = icmp slt i32 %280, %281, !dbg !315
  br i1 %282, label %283, label %5404, !dbg !316

283:                                              ; preds = %277
  %284 = load i32, ptr %10, align 4, !dbg !317
  %285 = sext i32 %284 to i64, !dbg !319
  %286 = getelementptr inbounds %struct.POINT, ptr %26, i64 %285, !dbg !319
  %287 = load ptr, ptr %7, align 8, !dbg !320
  %288 = load i32, ptr %10, align 4, !dbg !321
  %289 = sext i32 %288 to i64, !dbg !320
  %290 = getelementptr inbounds %struct.POINT, ptr %287, i64 %289, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %286, ptr align 8 %290, i64 16, i1 false), !dbg !320
  br label %291, !dbg !322

291:                                              ; preds = %283
  %292 = load i32, ptr %10, align 4, !dbg !323
  %293 = add nsw i32 %292, 1, !dbg !323
  store i32 %293, ptr %10, align 4, !dbg !323
  %294 = load i32, ptr %10, align 4, !dbg !312
  %295 = load i32, ptr %8, align 4, !dbg !314
  %296 = icmp slt i32 %294, %295, !dbg !315
  br i1 %296, label %297, label %5404, !dbg !316

297:                                              ; preds = %291
  %298 = load i32, ptr %10, align 4, !dbg !317
  %299 = sext i32 %298 to i64, !dbg !319
  %300 = getelementptr inbounds %struct.POINT, ptr %26, i64 %299, !dbg !319
  %301 = load ptr, ptr %7, align 8, !dbg !320
  %302 = load i32, ptr %10, align 4, !dbg !321
  %303 = sext i32 %302 to i64, !dbg !320
  %304 = getelementptr inbounds %struct.POINT, ptr %301, i64 %303, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %300, ptr align 8 %304, i64 16, i1 false), !dbg !320
  br label %305, !dbg !322

305:                                              ; preds = %297
  %306 = load i32, ptr %10, align 4, !dbg !323
  %307 = add nsw i32 %306, 1, !dbg !323
  store i32 %307, ptr %10, align 4, !dbg !323
  %308 = load i32, ptr %10, align 4, !dbg !312
  %309 = load i32, ptr %8, align 4, !dbg !314
  %310 = icmp slt i32 %308, %309, !dbg !315
  br i1 %310, label %311, label %5404, !dbg !316

311:                                              ; preds = %305
  %312 = load i32, ptr %10, align 4, !dbg !317
  %313 = sext i32 %312 to i64, !dbg !319
  %314 = getelementptr inbounds %struct.POINT, ptr %26, i64 %313, !dbg !319
  %315 = load ptr, ptr %7, align 8, !dbg !320
  %316 = load i32, ptr %10, align 4, !dbg !321
  %317 = sext i32 %316 to i64, !dbg !320
  %318 = getelementptr inbounds %struct.POINT, ptr %315, i64 %317, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %314, ptr align 8 %318, i64 16, i1 false), !dbg !320
  br label %319, !dbg !322

319:                                              ; preds = %311
  %320 = load i32, ptr %10, align 4, !dbg !323
  %321 = add nsw i32 %320, 1, !dbg !323
  store i32 %321, ptr %10, align 4, !dbg !323
  %322 = load i32, ptr %10, align 4, !dbg !312
  %323 = load i32, ptr %8, align 4, !dbg !314
  %324 = icmp slt i32 %322, %323, !dbg !315
  br i1 %324, label %325, label %5404, !dbg !316

325:                                              ; preds = %319
  %326 = load i32, ptr %10, align 4, !dbg !317
  %327 = sext i32 %326 to i64, !dbg !319
  %328 = getelementptr inbounds %struct.POINT, ptr %26, i64 %327, !dbg !319
  %329 = load ptr, ptr %7, align 8, !dbg !320
  %330 = load i32, ptr %10, align 4, !dbg !321
  %331 = sext i32 %330 to i64, !dbg !320
  %332 = getelementptr inbounds %struct.POINT, ptr %329, i64 %331, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %328, ptr align 8 %332, i64 16, i1 false), !dbg !320
  br label %333, !dbg !322

333:                                              ; preds = %325
  %334 = load i32, ptr %10, align 4, !dbg !323
  %335 = add nsw i32 %334, 1, !dbg !323
  store i32 %335, ptr %10, align 4, !dbg !323
  %336 = load i32, ptr %10, align 4, !dbg !312
  %337 = load i32, ptr %8, align 4, !dbg !314
  %338 = icmp slt i32 %336, %337, !dbg !315
  br i1 %338, label %339, label %5404, !dbg !316

339:                                              ; preds = %333
  %340 = load i32, ptr %10, align 4, !dbg !317
  %341 = sext i32 %340 to i64, !dbg !319
  %342 = getelementptr inbounds %struct.POINT, ptr %26, i64 %341, !dbg !319
  %343 = load ptr, ptr %7, align 8, !dbg !320
  %344 = load i32, ptr %10, align 4, !dbg !321
  %345 = sext i32 %344 to i64, !dbg !320
  %346 = getelementptr inbounds %struct.POINT, ptr %343, i64 %345, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %342, ptr align 8 %346, i64 16, i1 false), !dbg !320
  br label %347, !dbg !322

347:                                              ; preds = %339
  %348 = load i32, ptr %10, align 4, !dbg !323
  %349 = add nsw i32 %348, 1, !dbg !323
  store i32 %349, ptr %10, align 4, !dbg !323
  %350 = load i32, ptr %10, align 4, !dbg !312
  %351 = load i32, ptr %8, align 4, !dbg !314
  %352 = icmp slt i32 %350, %351, !dbg !315
  br i1 %352, label %353, label %5404, !dbg !316

353:                                              ; preds = %347
  %354 = load i32, ptr %10, align 4, !dbg !317
  %355 = sext i32 %354 to i64, !dbg !319
  %356 = getelementptr inbounds %struct.POINT, ptr %26, i64 %355, !dbg !319
  %357 = load ptr, ptr %7, align 8, !dbg !320
  %358 = load i32, ptr %10, align 4, !dbg !321
  %359 = sext i32 %358 to i64, !dbg !320
  %360 = getelementptr inbounds %struct.POINT, ptr %357, i64 %359, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %356, ptr align 8 %360, i64 16, i1 false), !dbg !320
  br label %361, !dbg !322

361:                                              ; preds = %353
  %362 = load i32, ptr %10, align 4, !dbg !323
  %363 = add nsw i32 %362, 1, !dbg !323
  store i32 %363, ptr %10, align 4, !dbg !323
  %364 = load i32, ptr %10, align 4, !dbg !312
  %365 = load i32, ptr %8, align 4, !dbg !314
  %366 = icmp slt i32 %364, %365, !dbg !315
  br i1 %366, label %367, label %5404, !dbg !316

367:                                              ; preds = %361
  %368 = load i32, ptr %10, align 4, !dbg !317
  %369 = sext i32 %368 to i64, !dbg !319
  %370 = getelementptr inbounds %struct.POINT, ptr %26, i64 %369, !dbg !319
  %371 = load ptr, ptr %7, align 8, !dbg !320
  %372 = load i32, ptr %10, align 4, !dbg !321
  %373 = sext i32 %372 to i64, !dbg !320
  %374 = getelementptr inbounds %struct.POINT, ptr %371, i64 %373, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %370, ptr align 8 %374, i64 16, i1 false), !dbg !320
  br label %375, !dbg !322

375:                                              ; preds = %367
  %376 = load i32, ptr %10, align 4, !dbg !323
  %377 = add nsw i32 %376, 1, !dbg !323
  store i32 %377, ptr %10, align 4, !dbg !323
  %378 = load i32, ptr %10, align 4, !dbg !312
  %379 = load i32, ptr %8, align 4, !dbg !314
  %380 = icmp slt i32 %378, %379, !dbg !315
  br i1 %380, label %381, label %5404, !dbg !316

381:                                              ; preds = %375
  %382 = load i32, ptr %10, align 4, !dbg !317
  %383 = sext i32 %382 to i64, !dbg !319
  %384 = getelementptr inbounds %struct.POINT, ptr %26, i64 %383, !dbg !319
  %385 = load ptr, ptr %7, align 8, !dbg !320
  %386 = load i32, ptr %10, align 4, !dbg !321
  %387 = sext i32 %386 to i64, !dbg !320
  %388 = getelementptr inbounds %struct.POINT, ptr %385, i64 %387, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %384, ptr align 8 %388, i64 16, i1 false), !dbg !320
  br label %389, !dbg !322

389:                                              ; preds = %381
  %390 = load i32, ptr %10, align 4, !dbg !323
  %391 = add nsw i32 %390, 1, !dbg !323
  store i32 %391, ptr %10, align 4, !dbg !323
  %392 = load i32, ptr %10, align 4, !dbg !312
  %393 = load i32, ptr %8, align 4, !dbg !314
  %394 = icmp slt i32 %392, %393, !dbg !315
  br i1 %394, label %395, label %5404, !dbg !316

395:                                              ; preds = %389
  %396 = load i32, ptr %10, align 4, !dbg !317
  %397 = sext i32 %396 to i64, !dbg !319
  %398 = getelementptr inbounds %struct.POINT, ptr %26, i64 %397, !dbg !319
  %399 = load ptr, ptr %7, align 8, !dbg !320
  %400 = load i32, ptr %10, align 4, !dbg !321
  %401 = sext i32 %400 to i64, !dbg !320
  %402 = getelementptr inbounds %struct.POINT, ptr %399, i64 %401, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %398, ptr align 8 %402, i64 16, i1 false), !dbg !320
  br label %403, !dbg !322

403:                                              ; preds = %395
  %404 = load i32, ptr %10, align 4, !dbg !323
  %405 = add nsw i32 %404, 1, !dbg !323
  store i32 %405, ptr %10, align 4, !dbg !323
  %406 = load i32, ptr %10, align 4, !dbg !312
  %407 = load i32, ptr %8, align 4, !dbg !314
  %408 = icmp slt i32 %406, %407, !dbg !315
  br i1 %408, label %409, label %5404, !dbg !316

409:                                              ; preds = %403
  %410 = load i32, ptr %10, align 4, !dbg !317
  %411 = sext i32 %410 to i64, !dbg !319
  %412 = getelementptr inbounds %struct.POINT, ptr %26, i64 %411, !dbg !319
  %413 = load ptr, ptr %7, align 8, !dbg !320
  %414 = load i32, ptr %10, align 4, !dbg !321
  %415 = sext i32 %414 to i64, !dbg !320
  %416 = getelementptr inbounds %struct.POINT, ptr %413, i64 %415, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %412, ptr align 8 %416, i64 16, i1 false), !dbg !320
  br label %417, !dbg !322

417:                                              ; preds = %409
  %418 = load i32, ptr %10, align 4, !dbg !323
  %419 = add nsw i32 %418, 1, !dbg !323
  store i32 %419, ptr %10, align 4, !dbg !323
  %420 = load i32, ptr %10, align 4, !dbg !312
  %421 = load i32, ptr %8, align 4, !dbg !314
  %422 = icmp slt i32 %420, %421, !dbg !315
  br i1 %422, label %423, label %5404, !dbg !316

423:                                              ; preds = %417
  %424 = load i32, ptr %10, align 4, !dbg !317
  %425 = sext i32 %424 to i64, !dbg !319
  %426 = getelementptr inbounds %struct.POINT, ptr %26, i64 %425, !dbg !319
  %427 = load ptr, ptr %7, align 8, !dbg !320
  %428 = load i32, ptr %10, align 4, !dbg !321
  %429 = sext i32 %428 to i64, !dbg !320
  %430 = getelementptr inbounds %struct.POINT, ptr %427, i64 %429, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %426, ptr align 8 %430, i64 16, i1 false), !dbg !320
  br label %431, !dbg !322

431:                                              ; preds = %423
  %432 = load i32, ptr %10, align 4, !dbg !323
  %433 = add nsw i32 %432, 1, !dbg !323
  store i32 %433, ptr %10, align 4, !dbg !323
  %434 = load i32, ptr %10, align 4, !dbg !312
  %435 = load i32, ptr %8, align 4, !dbg !314
  %436 = icmp slt i32 %434, %435, !dbg !315
  br i1 %436, label %437, label %5404, !dbg !316

437:                                              ; preds = %431
  %438 = load i32, ptr %10, align 4, !dbg !317
  %439 = sext i32 %438 to i64, !dbg !319
  %440 = getelementptr inbounds %struct.POINT, ptr %26, i64 %439, !dbg !319
  %441 = load ptr, ptr %7, align 8, !dbg !320
  %442 = load i32, ptr %10, align 4, !dbg !321
  %443 = sext i32 %442 to i64, !dbg !320
  %444 = getelementptr inbounds %struct.POINT, ptr %441, i64 %443, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %440, ptr align 8 %444, i64 16, i1 false), !dbg !320
  br label %445, !dbg !322

445:                                              ; preds = %437
  %446 = load i32, ptr %10, align 4, !dbg !323
  %447 = add nsw i32 %446, 1, !dbg !323
  store i32 %447, ptr %10, align 4, !dbg !323
  %448 = load i32, ptr %10, align 4, !dbg !312
  %449 = load i32, ptr %8, align 4, !dbg !314
  %450 = icmp slt i32 %448, %449, !dbg !315
  br i1 %450, label %451, label %5404, !dbg !316

451:                                              ; preds = %445
  %452 = load i32, ptr %10, align 4, !dbg !317
  %453 = sext i32 %452 to i64, !dbg !319
  %454 = getelementptr inbounds %struct.POINT, ptr %26, i64 %453, !dbg !319
  %455 = load ptr, ptr %7, align 8, !dbg !320
  %456 = load i32, ptr %10, align 4, !dbg !321
  %457 = sext i32 %456 to i64, !dbg !320
  %458 = getelementptr inbounds %struct.POINT, ptr %455, i64 %457, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %454, ptr align 8 %458, i64 16, i1 false), !dbg !320
  br label %459, !dbg !322

459:                                              ; preds = %451
  %460 = load i32, ptr %10, align 4, !dbg !323
  %461 = add nsw i32 %460, 1, !dbg !323
  store i32 %461, ptr %10, align 4, !dbg !323
  %462 = load i32, ptr %10, align 4, !dbg !312
  %463 = load i32, ptr %8, align 4, !dbg !314
  %464 = icmp slt i32 %462, %463, !dbg !315
  br i1 %464, label %465, label %5404, !dbg !316

465:                                              ; preds = %459
  %466 = load i32, ptr %10, align 4, !dbg !317
  %467 = sext i32 %466 to i64, !dbg !319
  %468 = getelementptr inbounds %struct.POINT, ptr %26, i64 %467, !dbg !319
  %469 = load ptr, ptr %7, align 8, !dbg !320
  %470 = load i32, ptr %10, align 4, !dbg !321
  %471 = sext i32 %470 to i64, !dbg !320
  %472 = getelementptr inbounds %struct.POINT, ptr %469, i64 %471, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %468, ptr align 8 %472, i64 16, i1 false), !dbg !320
  br label %473, !dbg !322

473:                                              ; preds = %465
  %474 = load i32, ptr %10, align 4, !dbg !323
  %475 = add nsw i32 %474, 1, !dbg !323
  store i32 %475, ptr %10, align 4, !dbg !323
  %476 = load i32, ptr %10, align 4, !dbg !312
  %477 = load i32, ptr %8, align 4, !dbg !314
  %478 = icmp slt i32 %476, %477, !dbg !315
  br i1 %478, label %479, label %5404, !dbg !316

479:                                              ; preds = %473
  %480 = load i32, ptr %10, align 4, !dbg !317
  %481 = sext i32 %480 to i64, !dbg !319
  %482 = getelementptr inbounds %struct.POINT, ptr %26, i64 %481, !dbg !319
  %483 = load ptr, ptr %7, align 8, !dbg !320
  %484 = load i32, ptr %10, align 4, !dbg !321
  %485 = sext i32 %484 to i64, !dbg !320
  %486 = getelementptr inbounds %struct.POINT, ptr %483, i64 %485, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %482, ptr align 8 %486, i64 16, i1 false), !dbg !320
  br label %487, !dbg !322

487:                                              ; preds = %479
  %488 = load i32, ptr %10, align 4, !dbg !323
  %489 = add nsw i32 %488, 1, !dbg !323
  store i32 %489, ptr %10, align 4, !dbg !323
  %490 = load i32, ptr %10, align 4, !dbg !312
  %491 = load i32, ptr %8, align 4, !dbg !314
  %492 = icmp slt i32 %490, %491, !dbg !315
  br i1 %492, label %493, label %5404, !dbg !316

493:                                              ; preds = %487
  %494 = load i32, ptr %10, align 4, !dbg !317
  %495 = sext i32 %494 to i64, !dbg !319
  %496 = getelementptr inbounds %struct.POINT, ptr %26, i64 %495, !dbg !319
  %497 = load ptr, ptr %7, align 8, !dbg !320
  %498 = load i32, ptr %10, align 4, !dbg !321
  %499 = sext i32 %498 to i64, !dbg !320
  %500 = getelementptr inbounds %struct.POINT, ptr %497, i64 %499, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %496, ptr align 8 %500, i64 16, i1 false), !dbg !320
  br label %501, !dbg !322

501:                                              ; preds = %493
  %502 = load i32, ptr %10, align 4, !dbg !323
  %503 = add nsw i32 %502, 1, !dbg !323
  store i32 %503, ptr %10, align 4, !dbg !323
  %504 = load i32, ptr %10, align 4, !dbg !312
  %505 = load i32, ptr %8, align 4, !dbg !314
  %506 = icmp slt i32 %504, %505, !dbg !315
  br i1 %506, label %507, label %5404, !dbg !316

507:                                              ; preds = %501
  %508 = load i32, ptr %10, align 4, !dbg !317
  %509 = sext i32 %508 to i64, !dbg !319
  %510 = getelementptr inbounds %struct.POINT, ptr %26, i64 %509, !dbg !319
  %511 = load ptr, ptr %7, align 8, !dbg !320
  %512 = load i32, ptr %10, align 4, !dbg !321
  %513 = sext i32 %512 to i64, !dbg !320
  %514 = getelementptr inbounds %struct.POINT, ptr %511, i64 %513, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %510, ptr align 8 %514, i64 16, i1 false), !dbg !320
  br label %515, !dbg !322

515:                                              ; preds = %507
  %516 = load i32, ptr %10, align 4, !dbg !323
  %517 = add nsw i32 %516, 1, !dbg !323
  store i32 %517, ptr %10, align 4, !dbg !323
  %518 = load i32, ptr %10, align 4, !dbg !312
  %519 = load i32, ptr %8, align 4, !dbg !314
  %520 = icmp slt i32 %518, %519, !dbg !315
  br i1 %520, label %521, label %5404, !dbg !316

521:                                              ; preds = %515
  %522 = load i32, ptr %10, align 4, !dbg !317
  %523 = sext i32 %522 to i64, !dbg !319
  %524 = getelementptr inbounds %struct.POINT, ptr %26, i64 %523, !dbg !319
  %525 = load ptr, ptr %7, align 8, !dbg !320
  %526 = load i32, ptr %10, align 4, !dbg !321
  %527 = sext i32 %526 to i64, !dbg !320
  %528 = getelementptr inbounds %struct.POINT, ptr %525, i64 %527, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %524, ptr align 8 %528, i64 16, i1 false), !dbg !320
  br label %529, !dbg !322

529:                                              ; preds = %521
  %530 = load i32, ptr %10, align 4, !dbg !323
  %531 = add nsw i32 %530, 1, !dbg !323
  store i32 %531, ptr %10, align 4, !dbg !323
  %532 = load i32, ptr %10, align 4, !dbg !312
  %533 = load i32, ptr %8, align 4, !dbg !314
  %534 = icmp slt i32 %532, %533, !dbg !315
  br i1 %534, label %535, label %5404, !dbg !316

535:                                              ; preds = %529
  %536 = load i32, ptr %10, align 4, !dbg !317
  %537 = sext i32 %536 to i64, !dbg !319
  %538 = getelementptr inbounds %struct.POINT, ptr %26, i64 %537, !dbg !319
  %539 = load ptr, ptr %7, align 8, !dbg !320
  %540 = load i32, ptr %10, align 4, !dbg !321
  %541 = sext i32 %540 to i64, !dbg !320
  %542 = getelementptr inbounds %struct.POINT, ptr %539, i64 %541, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %538, ptr align 8 %542, i64 16, i1 false), !dbg !320
  br label %543, !dbg !322

543:                                              ; preds = %535
  %544 = load i32, ptr %10, align 4, !dbg !323
  %545 = add nsw i32 %544, 1, !dbg !323
  store i32 %545, ptr %10, align 4, !dbg !323
  %546 = load i32, ptr %10, align 4, !dbg !312
  %547 = load i32, ptr %8, align 4, !dbg !314
  %548 = icmp slt i32 %546, %547, !dbg !315
  br i1 %548, label %549, label %5404, !dbg !316

549:                                              ; preds = %543
  %550 = load i32, ptr %10, align 4, !dbg !317
  %551 = sext i32 %550 to i64, !dbg !319
  %552 = getelementptr inbounds %struct.POINT, ptr %26, i64 %551, !dbg !319
  %553 = load ptr, ptr %7, align 8, !dbg !320
  %554 = load i32, ptr %10, align 4, !dbg !321
  %555 = sext i32 %554 to i64, !dbg !320
  %556 = getelementptr inbounds %struct.POINT, ptr %553, i64 %555, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %552, ptr align 8 %556, i64 16, i1 false), !dbg !320
  br label %557, !dbg !322

557:                                              ; preds = %549
  %558 = load i32, ptr %10, align 4, !dbg !323
  %559 = add nsw i32 %558, 1, !dbg !323
  store i32 %559, ptr %10, align 4, !dbg !323
  %560 = load i32, ptr %10, align 4, !dbg !312
  %561 = load i32, ptr %8, align 4, !dbg !314
  %562 = icmp slt i32 %560, %561, !dbg !315
  br i1 %562, label %563, label %5404, !dbg !316

563:                                              ; preds = %557
  %564 = load i32, ptr %10, align 4, !dbg !317
  %565 = sext i32 %564 to i64, !dbg !319
  %566 = getelementptr inbounds %struct.POINT, ptr %26, i64 %565, !dbg !319
  %567 = load ptr, ptr %7, align 8, !dbg !320
  %568 = load i32, ptr %10, align 4, !dbg !321
  %569 = sext i32 %568 to i64, !dbg !320
  %570 = getelementptr inbounds %struct.POINT, ptr %567, i64 %569, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %566, ptr align 8 %570, i64 16, i1 false), !dbg !320
  br label %571, !dbg !322

571:                                              ; preds = %563
  %572 = load i32, ptr %10, align 4, !dbg !323
  %573 = add nsw i32 %572, 1, !dbg !323
  store i32 %573, ptr %10, align 4, !dbg !323
  %574 = load i32, ptr %10, align 4, !dbg !312
  %575 = load i32, ptr %8, align 4, !dbg !314
  %576 = icmp slt i32 %574, %575, !dbg !315
  br i1 %576, label %577, label %5404, !dbg !316

577:                                              ; preds = %571
  %578 = load i32, ptr %10, align 4, !dbg !317
  %579 = sext i32 %578 to i64, !dbg !319
  %580 = getelementptr inbounds %struct.POINT, ptr %26, i64 %579, !dbg !319
  %581 = load ptr, ptr %7, align 8, !dbg !320
  %582 = load i32, ptr %10, align 4, !dbg !321
  %583 = sext i32 %582 to i64, !dbg !320
  %584 = getelementptr inbounds %struct.POINT, ptr %581, i64 %583, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %580, ptr align 8 %584, i64 16, i1 false), !dbg !320
  br label %585, !dbg !322

585:                                              ; preds = %577
  %586 = load i32, ptr %10, align 4, !dbg !323
  %587 = add nsw i32 %586, 1, !dbg !323
  store i32 %587, ptr %10, align 4, !dbg !323
  %588 = load i32, ptr %10, align 4, !dbg !312
  %589 = load i32, ptr %8, align 4, !dbg !314
  %590 = icmp slt i32 %588, %589, !dbg !315
  br i1 %590, label %591, label %5404, !dbg !316

591:                                              ; preds = %585
  %592 = load i32, ptr %10, align 4, !dbg !317
  %593 = sext i32 %592 to i64, !dbg !319
  %594 = getelementptr inbounds %struct.POINT, ptr %26, i64 %593, !dbg !319
  %595 = load ptr, ptr %7, align 8, !dbg !320
  %596 = load i32, ptr %10, align 4, !dbg !321
  %597 = sext i32 %596 to i64, !dbg !320
  %598 = getelementptr inbounds %struct.POINT, ptr %595, i64 %597, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %594, ptr align 8 %598, i64 16, i1 false), !dbg !320
  br label %599, !dbg !322

599:                                              ; preds = %591
  %600 = load i32, ptr %10, align 4, !dbg !323
  %601 = add nsw i32 %600, 1, !dbg !323
  store i32 %601, ptr %10, align 4, !dbg !323
  %602 = load i32, ptr %10, align 4, !dbg !312
  %603 = load i32, ptr %8, align 4, !dbg !314
  %604 = icmp slt i32 %602, %603, !dbg !315
  br i1 %604, label %605, label %5404, !dbg !316

605:                                              ; preds = %599
  %606 = load i32, ptr %10, align 4, !dbg !317
  %607 = sext i32 %606 to i64, !dbg !319
  %608 = getelementptr inbounds %struct.POINT, ptr %26, i64 %607, !dbg !319
  %609 = load ptr, ptr %7, align 8, !dbg !320
  %610 = load i32, ptr %10, align 4, !dbg !321
  %611 = sext i32 %610 to i64, !dbg !320
  %612 = getelementptr inbounds %struct.POINT, ptr %609, i64 %611, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %608, ptr align 8 %612, i64 16, i1 false), !dbg !320
  br label %613, !dbg !322

613:                                              ; preds = %605
  %614 = load i32, ptr %10, align 4, !dbg !323
  %615 = add nsw i32 %614, 1, !dbg !323
  store i32 %615, ptr %10, align 4, !dbg !323
  %616 = load i32, ptr %10, align 4, !dbg !312
  %617 = load i32, ptr %8, align 4, !dbg !314
  %618 = icmp slt i32 %616, %617, !dbg !315
  br i1 %618, label %619, label %5404, !dbg !316

619:                                              ; preds = %613
  %620 = load i32, ptr %10, align 4, !dbg !317
  %621 = sext i32 %620 to i64, !dbg !319
  %622 = getelementptr inbounds %struct.POINT, ptr %26, i64 %621, !dbg !319
  %623 = load ptr, ptr %7, align 8, !dbg !320
  %624 = load i32, ptr %10, align 4, !dbg !321
  %625 = sext i32 %624 to i64, !dbg !320
  %626 = getelementptr inbounds %struct.POINT, ptr %623, i64 %625, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %622, ptr align 8 %626, i64 16, i1 false), !dbg !320
  br label %627, !dbg !322

627:                                              ; preds = %619
  %628 = load i32, ptr %10, align 4, !dbg !323
  %629 = add nsw i32 %628, 1, !dbg !323
  store i32 %629, ptr %10, align 4, !dbg !323
  %630 = load i32, ptr %10, align 4, !dbg !312
  %631 = load i32, ptr %8, align 4, !dbg !314
  %632 = icmp slt i32 %630, %631, !dbg !315
  br i1 %632, label %633, label %5404, !dbg !316

633:                                              ; preds = %627
  %634 = load i32, ptr %10, align 4, !dbg !317
  %635 = sext i32 %634 to i64, !dbg !319
  %636 = getelementptr inbounds %struct.POINT, ptr %26, i64 %635, !dbg !319
  %637 = load ptr, ptr %7, align 8, !dbg !320
  %638 = load i32, ptr %10, align 4, !dbg !321
  %639 = sext i32 %638 to i64, !dbg !320
  %640 = getelementptr inbounds %struct.POINT, ptr %637, i64 %639, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %636, ptr align 8 %640, i64 16, i1 false), !dbg !320
  br label %641, !dbg !322

641:                                              ; preds = %633
  %642 = load i32, ptr %10, align 4, !dbg !323
  %643 = add nsw i32 %642, 1, !dbg !323
  store i32 %643, ptr %10, align 4, !dbg !323
  %644 = load i32, ptr %10, align 4, !dbg !312
  %645 = load i32, ptr %8, align 4, !dbg !314
  %646 = icmp slt i32 %644, %645, !dbg !315
  br i1 %646, label %647, label %5404, !dbg !316

647:                                              ; preds = %641
  %648 = load i32, ptr %10, align 4, !dbg !317
  %649 = sext i32 %648 to i64, !dbg !319
  %650 = getelementptr inbounds %struct.POINT, ptr %26, i64 %649, !dbg !319
  %651 = load ptr, ptr %7, align 8, !dbg !320
  %652 = load i32, ptr %10, align 4, !dbg !321
  %653 = sext i32 %652 to i64, !dbg !320
  %654 = getelementptr inbounds %struct.POINT, ptr %651, i64 %653, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %650, ptr align 8 %654, i64 16, i1 false), !dbg !320
  br label %655, !dbg !322

655:                                              ; preds = %647
  %656 = load i32, ptr %10, align 4, !dbg !323
  %657 = add nsw i32 %656, 1, !dbg !323
  store i32 %657, ptr %10, align 4, !dbg !323
  %658 = load i32, ptr %10, align 4, !dbg !312
  %659 = load i32, ptr %8, align 4, !dbg !314
  %660 = icmp slt i32 %658, %659, !dbg !315
  br i1 %660, label %661, label %5404, !dbg !316

661:                                              ; preds = %655
  %662 = load i32, ptr %10, align 4, !dbg !317
  %663 = sext i32 %662 to i64, !dbg !319
  %664 = getelementptr inbounds %struct.POINT, ptr %26, i64 %663, !dbg !319
  %665 = load ptr, ptr %7, align 8, !dbg !320
  %666 = load i32, ptr %10, align 4, !dbg !321
  %667 = sext i32 %666 to i64, !dbg !320
  %668 = getelementptr inbounds %struct.POINT, ptr %665, i64 %667, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %664, ptr align 8 %668, i64 16, i1 false), !dbg !320
  br label %669, !dbg !322

669:                                              ; preds = %661
  %670 = load i32, ptr %10, align 4, !dbg !323
  %671 = add nsw i32 %670, 1, !dbg !323
  store i32 %671, ptr %10, align 4, !dbg !323
  %672 = load i32, ptr %10, align 4, !dbg !312
  %673 = load i32, ptr %8, align 4, !dbg !314
  %674 = icmp slt i32 %672, %673, !dbg !315
  br i1 %674, label %675, label %5404, !dbg !316

675:                                              ; preds = %669
  %676 = load i32, ptr %10, align 4, !dbg !317
  %677 = sext i32 %676 to i64, !dbg !319
  %678 = getelementptr inbounds %struct.POINT, ptr %26, i64 %677, !dbg !319
  %679 = load ptr, ptr %7, align 8, !dbg !320
  %680 = load i32, ptr %10, align 4, !dbg !321
  %681 = sext i32 %680 to i64, !dbg !320
  %682 = getelementptr inbounds %struct.POINT, ptr %679, i64 %681, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %678, ptr align 8 %682, i64 16, i1 false), !dbg !320
  br label %683, !dbg !322

683:                                              ; preds = %675
  %684 = load i32, ptr %10, align 4, !dbg !323
  %685 = add nsw i32 %684, 1, !dbg !323
  store i32 %685, ptr %10, align 4, !dbg !323
  %686 = load i32, ptr %10, align 4, !dbg !312
  %687 = load i32, ptr %8, align 4, !dbg !314
  %688 = icmp slt i32 %686, %687, !dbg !315
  br i1 %688, label %689, label %5404, !dbg !316

689:                                              ; preds = %683
  %690 = load i32, ptr %10, align 4, !dbg !317
  %691 = sext i32 %690 to i64, !dbg !319
  %692 = getelementptr inbounds %struct.POINT, ptr %26, i64 %691, !dbg !319
  %693 = load ptr, ptr %7, align 8, !dbg !320
  %694 = load i32, ptr %10, align 4, !dbg !321
  %695 = sext i32 %694 to i64, !dbg !320
  %696 = getelementptr inbounds %struct.POINT, ptr %693, i64 %695, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %692, ptr align 8 %696, i64 16, i1 false), !dbg !320
  br label %697, !dbg !322

697:                                              ; preds = %689
  %698 = load i32, ptr %10, align 4, !dbg !323
  %699 = add nsw i32 %698, 1, !dbg !323
  store i32 %699, ptr %10, align 4, !dbg !323
  %700 = load i32, ptr %10, align 4, !dbg !312
  %701 = load i32, ptr %8, align 4, !dbg !314
  %702 = icmp slt i32 %700, %701, !dbg !315
  br i1 %702, label %703, label %5404, !dbg !316

703:                                              ; preds = %697
  %704 = load i32, ptr %10, align 4, !dbg !317
  %705 = sext i32 %704 to i64, !dbg !319
  %706 = getelementptr inbounds %struct.POINT, ptr %26, i64 %705, !dbg !319
  %707 = load ptr, ptr %7, align 8, !dbg !320
  %708 = load i32, ptr %10, align 4, !dbg !321
  %709 = sext i32 %708 to i64, !dbg !320
  %710 = getelementptr inbounds %struct.POINT, ptr %707, i64 %709, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %706, ptr align 8 %710, i64 16, i1 false), !dbg !320
  br label %711, !dbg !322

711:                                              ; preds = %703
  %712 = load i32, ptr %10, align 4, !dbg !323
  %713 = add nsw i32 %712, 1, !dbg !323
  store i32 %713, ptr %10, align 4, !dbg !323
  %714 = load i32, ptr %10, align 4, !dbg !312
  %715 = load i32, ptr %8, align 4, !dbg !314
  %716 = icmp slt i32 %714, %715, !dbg !315
  br i1 %716, label %717, label %5404, !dbg !316

717:                                              ; preds = %711
  %718 = load i32, ptr %10, align 4, !dbg !317
  %719 = sext i32 %718 to i64, !dbg !319
  %720 = getelementptr inbounds %struct.POINT, ptr %26, i64 %719, !dbg !319
  %721 = load ptr, ptr %7, align 8, !dbg !320
  %722 = load i32, ptr %10, align 4, !dbg !321
  %723 = sext i32 %722 to i64, !dbg !320
  %724 = getelementptr inbounds %struct.POINT, ptr %721, i64 %723, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %720, ptr align 8 %724, i64 16, i1 false), !dbg !320
  br label %725, !dbg !322

725:                                              ; preds = %717
  %726 = load i32, ptr %10, align 4, !dbg !323
  %727 = add nsw i32 %726, 1, !dbg !323
  store i32 %727, ptr %10, align 4, !dbg !323
  %728 = load i32, ptr %10, align 4, !dbg !312
  %729 = load i32, ptr %8, align 4, !dbg !314
  %730 = icmp slt i32 %728, %729, !dbg !315
  br i1 %730, label %731, label %5404, !dbg !316

731:                                              ; preds = %725
  %732 = load i32, ptr %10, align 4, !dbg !317
  %733 = sext i32 %732 to i64, !dbg !319
  %734 = getelementptr inbounds %struct.POINT, ptr %26, i64 %733, !dbg !319
  %735 = load ptr, ptr %7, align 8, !dbg !320
  %736 = load i32, ptr %10, align 4, !dbg !321
  %737 = sext i32 %736 to i64, !dbg !320
  %738 = getelementptr inbounds %struct.POINT, ptr %735, i64 %737, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %734, ptr align 8 %738, i64 16, i1 false), !dbg !320
  br label %739, !dbg !322

739:                                              ; preds = %731
  %740 = load i32, ptr %10, align 4, !dbg !323
  %741 = add nsw i32 %740, 1, !dbg !323
  store i32 %741, ptr %10, align 4, !dbg !323
  %742 = load i32, ptr %10, align 4, !dbg !312
  %743 = load i32, ptr %8, align 4, !dbg !314
  %744 = icmp slt i32 %742, %743, !dbg !315
  br i1 %744, label %745, label %5404, !dbg !316

745:                                              ; preds = %739
  %746 = load i32, ptr %10, align 4, !dbg !317
  %747 = sext i32 %746 to i64, !dbg !319
  %748 = getelementptr inbounds %struct.POINT, ptr %26, i64 %747, !dbg !319
  %749 = load ptr, ptr %7, align 8, !dbg !320
  %750 = load i32, ptr %10, align 4, !dbg !321
  %751 = sext i32 %750 to i64, !dbg !320
  %752 = getelementptr inbounds %struct.POINT, ptr %749, i64 %751, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %748, ptr align 8 %752, i64 16, i1 false), !dbg !320
  br label %753, !dbg !322

753:                                              ; preds = %745
  %754 = load i32, ptr %10, align 4, !dbg !323
  %755 = add nsw i32 %754, 1, !dbg !323
  store i32 %755, ptr %10, align 4, !dbg !323
  %756 = load i32, ptr %10, align 4, !dbg !312
  %757 = load i32, ptr %8, align 4, !dbg !314
  %758 = icmp slt i32 %756, %757, !dbg !315
  br i1 %758, label %759, label %5404, !dbg !316

759:                                              ; preds = %753
  %760 = load i32, ptr %10, align 4, !dbg !317
  %761 = sext i32 %760 to i64, !dbg !319
  %762 = getelementptr inbounds %struct.POINT, ptr %26, i64 %761, !dbg !319
  %763 = load ptr, ptr %7, align 8, !dbg !320
  %764 = load i32, ptr %10, align 4, !dbg !321
  %765 = sext i32 %764 to i64, !dbg !320
  %766 = getelementptr inbounds %struct.POINT, ptr %763, i64 %765, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %762, ptr align 8 %766, i64 16, i1 false), !dbg !320
  br label %767, !dbg !322

767:                                              ; preds = %759
  %768 = load i32, ptr %10, align 4, !dbg !323
  %769 = add nsw i32 %768, 1, !dbg !323
  store i32 %769, ptr %10, align 4, !dbg !323
  %770 = load i32, ptr %10, align 4, !dbg !312
  %771 = load i32, ptr %8, align 4, !dbg !314
  %772 = icmp slt i32 %770, %771, !dbg !315
  br i1 %772, label %773, label %5404, !dbg !316

773:                                              ; preds = %767
  %774 = load i32, ptr %10, align 4, !dbg !317
  %775 = sext i32 %774 to i64, !dbg !319
  %776 = getelementptr inbounds %struct.POINT, ptr %26, i64 %775, !dbg !319
  %777 = load ptr, ptr %7, align 8, !dbg !320
  %778 = load i32, ptr %10, align 4, !dbg !321
  %779 = sext i32 %778 to i64, !dbg !320
  %780 = getelementptr inbounds %struct.POINT, ptr %777, i64 %779, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %776, ptr align 8 %780, i64 16, i1 false), !dbg !320
  br label %781, !dbg !322

781:                                              ; preds = %773
  %782 = load i32, ptr %10, align 4, !dbg !323
  %783 = add nsw i32 %782, 1, !dbg !323
  store i32 %783, ptr %10, align 4, !dbg !323
  %784 = load i32, ptr %10, align 4, !dbg !312
  %785 = load i32, ptr %8, align 4, !dbg !314
  %786 = icmp slt i32 %784, %785, !dbg !315
  br i1 %786, label %787, label %5404, !dbg !316

787:                                              ; preds = %781
  %788 = load i32, ptr %10, align 4, !dbg !317
  %789 = sext i32 %788 to i64, !dbg !319
  %790 = getelementptr inbounds %struct.POINT, ptr %26, i64 %789, !dbg !319
  %791 = load ptr, ptr %7, align 8, !dbg !320
  %792 = load i32, ptr %10, align 4, !dbg !321
  %793 = sext i32 %792 to i64, !dbg !320
  %794 = getelementptr inbounds %struct.POINT, ptr %791, i64 %793, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %790, ptr align 8 %794, i64 16, i1 false), !dbg !320
  br label %795, !dbg !322

795:                                              ; preds = %787
  %796 = load i32, ptr %10, align 4, !dbg !323
  %797 = add nsw i32 %796, 1, !dbg !323
  store i32 %797, ptr %10, align 4, !dbg !323
  %798 = load i32, ptr %10, align 4, !dbg !312
  %799 = load i32, ptr %8, align 4, !dbg !314
  %800 = icmp slt i32 %798, %799, !dbg !315
  br i1 %800, label %801, label %5404, !dbg !316

801:                                              ; preds = %795
  %802 = load i32, ptr %10, align 4, !dbg !317
  %803 = sext i32 %802 to i64, !dbg !319
  %804 = getelementptr inbounds %struct.POINT, ptr %26, i64 %803, !dbg !319
  %805 = load ptr, ptr %7, align 8, !dbg !320
  %806 = load i32, ptr %10, align 4, !dbg !321
  %807 = sext i32 %806 to i64, !dbg !320
  %808 = getelementptr inbounds %struct.POINT, ptr %805, i64 %807, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %804, ptr align 8 %808, i64 16, i1 false), !dbg !320
  br label %809, !dbg !322

809:                                              ; preds = %801
  %810 = load i32, ptr %10, align 4, !dbg !323
  %811 = add nsw i32 %810, 1, !dbg !323
  store i32 %811, ptr %10, align 4, !dbg !323
  %812 = load i32, ptr %10, align 4, !dbg !312
  %813 = load i32, ptr %8, align 4, !dbg !314
  %814 = icmp slt i32 %812, %813, !dbg !315
  br i1 %814, label %815, label %5404, !dbg !316

815:                                              ; preds = %809
  %816 = load i32, ptr %10, align 4, !dbg !317
  %817 = sext i32 %816 to i64, !dbg !319
  %818 = getelementptr inbounds %struct.POINT, ptr %26, i64 %817, !dbg !319
  %819 = load ptr, ptr %7, align 8, !dbg !320
  %820 = load i32, ptr %10, align 4, !dbg !321
  %821 = sext i32 %820 to i64, !dbg !320
  %822 = getelementptr inbounds %struct.POINT, ptr %819, i64 %821, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %818, ptr align 8 %822, i64 16, i1 false), !dbg !320
  br label %823, !dbg !322

823:                                              ; preds = %815
  %824 = load i32, ptr %10, align 4, !dbg !323
  %825 = add nsw i32 %824, 1, !dbg !323
  store i32 %825, ptr %10, align 4, !dbg !323
  %826 = load i32, ptr %10, align 4, !dbg !312
  %827 = load i32, ptr %8, align 4, !dbg !314
  %828 = icmp slt i32 %826, %827, !dbg !315
  br i1 %828, label %829, label %5404, !dbg !316

829:                                              ; preds = %823
  %830 = load i32, ptr %10, align 4, !dbg !317
  %831 = sext i32 %830 to i64, !dbg !319
  %832 = getelementptr inbounds %struct.POINT, ptr %26, i64 %831, !dbg !319
  %833 = load ptr, ptr %7, align 8, !dbg !320
  %834 = load i32, ptr %10, align 4, !dbg !321
  %835 = sext i32 %834 to i64, !dbg !320
  %836 = getelementptr inbounds %struct.POINT, ptr %833, i64 %835, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %832, ptr align 8 %836, i64 16, i1 false), !dbg !320
  br label %837, !dbg !322

837:                                              ; preds = %829
  %838 = load i32, ptr %10, align 4, !dbg !323
  %839 = add nsw i32 %838, 1, !dbg !323
  store i32 %839, ptr %10, align 4, !dbg !323
  %840 = load i32, ptr %10, align 4, !dbg !312
  %841 = load i32, ptr %8, align 4, !dbg !314
  %842 = icmp slt i32 %840, %841, !dbg !315
  br i1 %842, label %843, label %5404, !dbg !316

843:                                              ; preds = %837
  %844 = load i32, ptr %10, align 4, !dbg !317
  %845 = sext i32 %844 to i64, !dbg !319
  %846 = getelementptr inbounds %struct.POINT, ptr %26, i64 %845, !dbg !319
  %847 = load ptr, ptr %7, align 8, !dbg !320
  %848 = load i32, ptr %10, align 4, !dbg !321
  %849 = sext i32 %848 to i64, !dbg !320
  %850 = getelementptr inbounds %struct.POINT, ptr %847, i64 %849, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %846, ptr align 8 %850, i64 16, i1 false), !dbg !320
  br label %851, !dbg !322

851:                                              ; preds = %843
  %852 = load i32, ptr %10, align 4, !dbg !323
  %853 = add nsw i32 %852, 1, !dbg !323
  store i32 %853, ptr %10, align 4, !dbg !323
  %854 = load i32, ptr %10, align 4, !dbg !312
  %855 = load i32, ptr %8, align 4, !dbg !314
  %856 = icmp slt i32 %854, %855, !dbg !315
  br i1 %856, label %857, label %5404, !dbg !316

857:                                              ; preds = %851
  %858 = load i32, ptr %10, align 4, !dbg !317
  %859 = sext i32 %858 to i64, !dbg !319
  %860 = getelementptr inbounds %struct.POINT, ptr %26, i64 %859, !dbg !319
  %861 = load ptr, ptr %7, align 8, !dbg !320
  %862 = load i32, ptr %10, align 4, !dbg !321
  %863 = sext i32 %862 to i64, !dbg !320
  %864 = getelementptr inbounds %struct.POINT, ptr %861, i64 %863, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %860, ptr align 8 %864, i64 16, i1 false), !dbg !320
  br label %865, !dbg !322

865:                                              ; preds = %857
  %866 = load i32, ptr %10, align 4, !dbg !323
  %867 = add nsw i32 %866, 1, !dbg !323
  store i32 %867, ptr %10, align 4, !dbg !323
  %868 = load i32, ptr %10, align 4, !dbg !312
  %869 = load i32, ptr %8, align 4, !dbg !314
  %870 = icmp slt i32 %868, %869, !dbg !315
  br i1 %870, label %871, label %5404, !dbg !316

871:                                              ; preds = %865
  %872 = load i32, ptr %10, align 4, !dbg !317
  %873 = sext i32 %872 to i64, !dbg !319
  %874 = getelementptr inbounds %struct.POINT, ptr %26, i64 %873, !dbg !319
  %875 = load ptr, ptr %7, align 8, !dbg !320
  %876 = load i32, ptr %10, align 4, !dbg !321
  %877 = sext i32 %876 to i64, !dbg !320
  %878 = getelementptr inbounds %struct.POINT, ptr %875, i64 %877, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %874, ptr align 8 %878, i64 16, i1 false), !dbg !320
  br label %879, !dbg !322

879:                                              ; preds = %871
  %880 = load i32, ptr %10, align 4, !dbg !323
  %881 = add nsw i32 %880, 1, !dbg !323
  store i32 %881, ptr %10, align 4, !dbg !323
  %882 = load i32, ptr %10, align 4, !dbg !312
  %883 = load i32, ptr %8, align 4, !dbg !314
  %884 = icmp slt i32 %882, %883, !dbg !315
  br i1 %884, label %885, label %5404, !dbg !316

885:                                              ; preds = %879
  %886 = load i32, ptr %10, align 4, !dbg !317
  %887 = sext i32 %886 to i64, !dbg !319
  %888 = getelementptr inbounds %struct.POINT, ptr %26, i64 %887, !dbg !319
  %889 = load ptr, ptr %7, align 8, !dbg !320
  %890 = load i32, ptr %10, align 4, !dbg !321
  %891 = sext i32 %890 to i64, !dbg !320
  %892 = getelementptr inbounds %struct.POINT, ptr %889, i64 %891, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %888, ptr align 8 %892, i64 16, i1 false), !dbg !320
  br label %893, !dbg !322

893:                                              ; preds = %885
  %894 = load i32, ptr %10, align 4, !dbg !323
  %895 = add nsw i32 %894, 1, !dbg !323
  store i32 %895, ptr %10, align 4, !dbg !323
  %896 = load i32, ptr %10, align 4, !dbg !312
  %897 = load i32, ptr %8, align 4, !dbg !314
  %898 = icmp slt i32 %896, %897, !dbg !315
  br i1 %898, label %899, label %5404, !dbg !316

899:                                              ; preds = %893
  %900 = load i32, ptr %10, align 4, !dbg !317
  %901 = sext i32 %900 to i64, !dbg !319
  %902 = getelementptr inbounds %struct.POINT, ptr %26, i64 %901, !dbg !319
  %903 = load ptr, ptr %7, align 8, !dbg !320
  %904 = load i32, ptr %10, align 4, !dbg !321
  %905 = sext i32 %904 to i64, !dbg !320
  %906 = getelementptr inbounds %struct.POINT, ptr %903, i64 %905, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %902, ptr align 8 %906, i64 16, i1 false), !dbg !320
  br label %907, !dbg !322

907:                                              ; preds = %899
  %908 = load i32, ptr %10, align 4, !dbg !323
  %909 = add nsw i32 %908, 1, !dbg !323
  store i32 %909, ptr %10, align 4, !dbg !323
  %910 = load i32, ptr %10, align 4, !dbg !312
  %911 = load i32, ptr %8, align 4, !dbg !314
  %912 = icmp slt i32 %910, %911, !dbg !315
  br i1 %912, label %913, label %5404, !dbg !316

913:                                              ; preds = %907
  %914 = load i32, ptr %10, align 4, !dbg !317
  %915 = sext i32 %914 to i64, !dbg !319
  %916 = getelementptr inbounds %struct.POINT, ptr %26, i64 %915, !dbg !319
  %917 = load ptr, ptr %7, align 8, !dbg !320
  %918 = load i32, ptr %10, align 4, !dbg !321
  %919 = sext i32 %918 to i64, !dbg !320
  %920 = getelementptr inbounds %struct.POINT, ptr %917, i64 %919, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %916, ptr align 8 %920, i64 16, i1 false), !dbg !320
  br label %921, !dbg !322

921:                                              ; preds = %913
  %922 = load i32, ptr %10, align 4, !dbg !323
  %923 = add nsw i32 %922, 1, !dbg !323
  store i32 %923, ptr %10, align 4, !dbg !323
  %924 = load i32, ptr %10, align 4, !dbg !312
  %925 = load i32, ptr %8, align 4, !dbg !314
  %926 = icmp slt i32 %924, %925, !dbg !315
  br i1 %926, label %927, label %5404, !dbg !316

927:                                              ; preds = %921
  %928 = load i32, ptr %10, align 4, !dbg !317
  %929 = sext i32 %928 to i64, !dbg !319
  %930 = getelementptr inbounds %struct.POINT, ptr %26, i64 %929, !dbg !319
  %931 = load ptr, ptr %7, align 8, !dbg !320
  %932 = load i32, ptr %10, align 4, !dbg !321
  %933 = sext i32 %932 to i64, !dbg !320
  %934 = getelementptr inbounds %struct.POINT, ptr %931, i64 %933, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %930, ptr align 8 %934, i64 16, i1 false), !dbg !320
  br label %935, !dbg !322

935:                                              ; preds = %927
  %936 = load i32, ptr %10, align 4, !dbg !323
  %937 = add nsw i32 %936, 1, !dbg !323
  store i32 %937, ptr %10, align 4, !dbg !323
  %938 = load i32, ptr %10, align 4, !dbg !312
  %939 = load i32, ptr %8, align 4, !dbg !314
  %940 = icmp slt i32 %938, %939, !dbg !315
  br i1 %940, label %941, label %5404, !dbg !316

941:                                              ; preds = %935
  %942 = load i32, ptr %10, align 4, !dbg !317
  %943 = sext i32 %942 to i64, !dbg !319
  %944 = getelementptr inbounds %struct.POINT, ptr %26, i64 %943, !dbg !319
  %945 = load ptr, ptr %7, align 8, !dbg !320
  %946 = load i32, ptr %10, align 4, !dbg !321
  %947 = sext i32 %946 to i64, !dbg !320
  %948 = getelementptr inbounds %struct.POINT, ptr %945, i64 %947, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %944, ptr align 8 %948, i64 16, i1 false), !dbg !320
  br label %949, !dbg !322

949:                                              ; preds = %941
  %950 = load i32, ptr %10, align 4, !dbg !323
  %951 = add nsw i32 %950, 1, !dbg !323
  store i32 %951, ptr %10, align 4, !dbg !323
  %952 = load i32, ptr %10, align 4, !dbg !312
  %953 = load i32, ptr %8, align 4, !dbg !314
  %954 = icmp slt i32 %952, %953, !dbg !315
  br i1 %954, label %955, label %5404, !dbg !316

955:                                              ; preds = %949
  %956 = load i32, ptr %10, align 4, !dbg !317
  %957 = sext i32 %956 to i64, !dbg !319
  %958 = getelementptr inbounds %struct.POINT, ptr %26, i64 %957, !dbg !319
  %959 = load ptr, ptr %7, align 8, !dbg !320
  %960 = load i32, ptr %10, align 4, !dbg !321
  %961 = sext i32 %960 to i64, !dbg !320
  %962 = getelementptr inbounds %struct.POINT, ptr %959, i64 %961, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %958, ptr align 8 %962, i64 16, i1 false), !dbg !320
  br label %963, !dbg !322

963:                                              ; preds = %955
  %964 = load i32, ptr %10, align 4, !dbg !323
  %965 = add nsw i32 %964, 1, !dbg !323
  store i32 %965, ptr %10, align 4, !dbg !323
  %966 = load i32, ptr %10, align 4, !dbg !312
  %967 = load i32, ptr %8, align 4, !dbg !314
  %968 = icmp slt i32 %966, %967, !dbg !315
  br i1 %968, label %969, label %5404, !dbg !316

969:                                              ; preds = %963
  %970 = load i32, ptr %10, align 4, !dbg !317
  %971 = sext i32 %970 to i64, !dbg !319
  %972 = getelementptr inbounds %struct.POINT, ptr %26, i64 %971, !dbg !319
  %973 = load ptr, ptr %7, align 8, !dbg !320
  %974 = load i32, ptr %10, align 4, !dbg !321
  %975 = sext i32 %974 to i64, !dbg !320
  %976 = getelementptr inbounds %struct.POINT, ptr %973, i64 %975, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %972, ptr align 8 %976, i64 16, i1 false), !dbg !320
  br label %977, !dbg !322

977:                                              ; preds = %969
  %978 = load i32, ptr %10, align 4, !dbg !323
  %979 = add nsw i32 %978, 1, !dbg !323
  store i32 %979, ptr %10, align 4, !dbg !323
  %980 = load i32, ptr %10, align 4, !dbg !312
  %981 = load i32, ptr %8, align 4, !dbg !314
  %982 = icmp slt i32 %980, %981, !dbg !315
  br i1 %982, label %983, label %5404, !dbg !316

983:                                              ; preds = %977
  %984 = load i32, ptr %10, align 4, !dbg !317
  %985 = sext i32 %984 to i64, !dbg !319
  %986 = getelementptr inbounds %struct.POINT, ptr %26, i64 %985, !dbg !319
  %987 = load ptr, ptr %7, align 8, !dbg !320
  %988 = load i32, ptr %10, align 4, !dbg !321
  %989 = sext i32 %988 to i64, !dbg !320
  %990 = getelementptr inbounds %struct.POINT, ptr %987, i64 %989, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %986, ptr align 8 %990, i64 16, i1 false), !dbg !320
  br label %991, !dbg !322

991:                                              ; preds = %983
  %992 = load i32, ptr %10, align 4, !dbg !323
  %993 = add nsw i32 %992, 1, !dbg !323
  store i32 %993, ptr %10, align 4, !dbg !323
  %994 = load i32, ptr %10, align 4, !dbg !312
  %995 = load i32, ptr %8, align 4, !dbg !314
  %996 = icmp slt i32 %994, %995, !dbg !315
  br i1 %996, label %997, label %5404, !dbg !316

997:                                              ; preds = %991
  %998 = load i32, ptr %10, align 4, !dbg !317
  %999 = sext i32 %998 to i64, !dbg !319
  %1000 = getelementptr inbounds %struct.POINT, ptr %26, i64 %999, !dbg !319
  %1001 = load ptr, ptr %7, align 8, !dbg !320
  %1002 = load i32, ptr %10, align 4, !dbg !321
  %1003 = sext i32 %1002 to i64, !dbg !320
  %1004 = getelementptr inbounds %struct.POINT, ptr %1001, i64 %1003, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1000, ptr align 8 %1004, i64 16, i1 false), !dbg !320
  br label %1005, !dbg !322

1005:                                             ; preds = %997
  %1006 = load i32, ptr %10, align 4, !dbg !323
  %1007 = add nsw i32 %1006, 1, !dbg !323
  store i32 %1007, ptr %10, align 4, !dbg !323
  %1008 = load i32, ptr %10, align 4, !dbg !312
  %1009 = load i32, ptr %8, align 4, !dbg !314
  %1010 = icmp slt i32 %1008, %1009, !dbg !315
  br i1 %1010, label %1011, label %5404, !dbg !316

1011:                                             ; preds = %1005
  %1012 = load i32, ptr %10, align 4, !dbg !317
  %1013 = sext i32 %1012 to i64, !dbg !319
  %1014 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1013, !dbg !319
  %1015 = load ptr, ptr %7, align 8, !dbg !320
  %1016 = load i32, ptr %10, align 4, !dbg !321
  %1017 = sext i32 %1016 to i64, !dbg !320
  %1018 = getelementptr inbounds %struct.POINT, ptr %1015, i64 %1017, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1014, ptr align 8 %1018, i64 16, i1 false), !dbg !320
  br label %1019, !dbg !322

1019:                                             ; preds = %1011
  %1020 = load i32, ptr %10, align 4, !dbg !323
  %1021 = add nsw i32 %1020, 1, !dbg !323
  store i32 %1021, ptr %10, align 4, !dbg !323
  %1022 = load i32, ptr %10, align 4, !dbg !312
  %1023 = load i32, ptr %8, align 4, !dbg !314
  %1024 = icmp slt i32 %1022, %1023, !dbg !315
  br i1 %1024, label %1025, label %5404, !dbg !316

1025:                                             ; preds = %1019
  %1026 = load i32, ptr %10, align 4, !dbg !317
  %1027 = sext i32 %1026 to i64, !dbg !319
  %1028 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1027, !dbg !319
  %1029 = load ptr, ptr %7, align 8, !dbg !320
  %1030 = load i32, ptr %10, align 4, !dbg !321
  %1031 = sext i32 %1030 to i64, !dbg !320
  %1032 = getelementptr inbounds %struct.POINT, ptr %1029, i64 %1031, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1028, ptr align 8 %1032, i64 16, i1 false), !dbg !320
  br label %1033, !dbg !322

1033:                                             ; preds = %1025
  %1034 = load i32, ptr %10, align 4, !dbg !323
  %1035 = add nsw i32 %1034, 1, !dbg !323
  store i32 %1035, ptr %10, align 4, !dbg !323
  %1036 = load i32, ptr %10, align 4, !dbg !312
  %1037 = load i32, ptr %8, align 4, !dbg !314
  %1038 = icmp slt i32 %1036, %1037, !dbg !315
  br i1 %1038, label %1039, label %5404, !dbg !316

1039:                                             ; preds = %1033
  %1040 = load i32, ptr %10, align 4, !dbg !317
  %1041 = sext i32 %1040 to i64, !dbg !319
  %1042 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1041, !dbg !319
  %1043 = load ptr, ptr %7, align 8, !dbg !320
  %1044 = load i32, ptr %10, align 4, !dbg !321
  %1045 = sext i32 %1044 to i64, !dbg !320
  %1046 = getelementptr inbounds %struct.POINT, ptr %1043, i64 %1045, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1042, ptr align 8 %1046, i64 16, i1 false), !dbg !320
  br label %1047, !dbg !322

1047:                                             ; preds = %1039
  %1048 = load i32, ptr %10, align 4, !dbg !323
  %1049 = add nsw i32 %1048, 1, !dbg !323
  store i32 %1049, ptr %10, align 4, !dbg !323
  %1050 = load i32, ptr %10, align 4, !dbg !312
  %1051 = load i32, ptr %8, align 4, !dbg !314
  %1052 = icmp slt i32 %1050, %1051, !dbg !315
  br i1 %1052, label %1053, label %5404, !dbg !316

1053:                                             ; preds = %1047
  %1054 = load i32, ptr %10, align 4, !dbg !317
  %1055 = sext i32 %1054 to i64, !dbg !319
  %1056 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1055, !dbg !319
  %1057 = load ptr, ptr %7, align 8, !dbg !320
  %1058 = load i32, ptr %10, align 4, !dbg !321
  %1059 = sext i32 %1058 to i64, !dbg !320
  %1060 = getelementptr inbounds %struct.POINT, ptr %1057, i64 %1059, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1056, ptr align 8 %1060, i64 16, i1 false), !dbg !320
  br label %1061, !dbg !322

1061:                                             ; preds = %1053
  %1062 = load i32, ptr %10, align 4, !dbg !323
  %1063 = add nsw i32 %1062, 1, !dbg !323
  store i32 %1063, ptr %10, align 4, !dbg !323
  %1064 = load i32, ptr %10, align 4, !dbg !312
  %1065 = load i32, ptr %8, align 4, !dbg !314
  %1066 = icmp slt i32 %1064, %1065, !dbg !315
  br i1 %1066, label %1067, label %5404, !dbg !316

1067:                                             ; preds = %1061
  %1068 = load i32, ptr %10, align 4, !dbg !317
  %1069 = sext i32 %1068 to i64, !dbg !319
  %1070 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1069, !dbg !319
  %1071 = load ptr, ptr %7, align 8, !dbg !320
  %1072 = load i32, ptr %10, align 4, !dbg !321
  %1073 = sext i32 %1072 to i64, !dbg !320
  %1074 = getelementptr inbounds %struct.POINT, ptr %1071, i64 %1073, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1070, ptr align 8 %1074, i64 16, i1 false), !dbg !320
  br label %1075, !dbg !322

1075:                                             ; preds = %1067
  %1076 = load i32, ptr %10, align 4, !dbg !323
  %1077 = add nsw i32 %1076, 1, !dbg !323
  store i32 %1077, ptr %10, align 4, !dbg !323
  %1078 = load i32, ptr %10, align 4, !dbg !312
  %1079 = load i32, ptr %8, align 4, !dbg !314
  %1080 = icmp slt i32 %1078, %1079, !dbg !315
  br i1 %1080, label %1081, label %5404, !dbg !316

1081:                                             ; preds = %1075
  %1082 = load i32, ptr %10, align 4, !dbg !317
  %1083 = sext i32 %1082 to i64, !dbg !319
  %1084 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1083, !dbg !319
  %1085 = load ptr, ptr %7, align 8, !dbg !320
  %1086 = load i32, ptr %10, align 4, !dbg !321
  %1087 = sext i32 %1086 to i64, !dbg !320
  %1088 = getelementptr inbounds %struct.POINT, ptr %1085, i64 %1087, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1084, ptr align 8 %1088, i64 16, i1 false), !dbg !320
  br label %1089, !dbg !322

1089:                                             ; preds = %1081
  %1090 = load i32, ptr %10, align 4, !dbg !323
  %1091 = add nsw i32 %1090, 1, !dbg !323
  store i32 %1091, ptr %10, align 4, !dbg !323
  %1092 = load i32, ptr %10, align 4, !dbg !312
  %1093 = load i32, ptr %8, align 4, !dbg !314
  %1094 = icmp slt i32 %1092, %1093, !dbg !315
  br i1 %1094, label %1095, label %5404, !dbg !316

1095:                                             ; preds = %1089
  %1096 = load i32, ptr %10, align 4, !dbg !317
  %1097 = sext i32 %1096 to i64, !dbg !319
  %1098 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1097, !dbg !319
  %1099 = load ptr, ptr %7, align 8, !dbg !320
  %1100 = load i32, ptr %10, align 4, !dbg !321
  %1101 = sext i32 %1100 to i64, !dbg !320
  %1102 = getelementptr inbounds %struct.POINT, ptr %1099, i64 %1101, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1098, ptr align 8 %1102, i64 16, i1 false), !dbg !320
  br label %1103, !dbg !322

1103:                                             ; preds = %1095
  %1104 = load i32, ptr %10, align 4, !dbg !323
  %1105 = add nsw i32 %1104, 1, !dbg !323
  store i32 %1105, ptr %10, align 4, !dbg !323
  %1106 = load i32, ptr %10, align 4, !dbg !312
  %1107 = load i32, ptr %8, align 4, !dbg !314
  %1108 = icmp slt i32 %1106, %1107, !dbg !315
  br i1 %1108, label %1109, label %5404, !dbg !316

1109:                                             ; preds = %1103
  %1110 = load i32, ptr %10, align 4, !dbg !317
  %1111 = sext i32 %1110 to i64, !dbg !319
  %1112 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1111, !dbg !319
  %1113 = load ptr, ptr %7, align 8, !dbg !320
  %1114 = load i32, ptr %10, align 4, !dbg !321
  %1115 = sext i32 %1114 to i64, !dbg !320
  %1116 = getelementptr inbounds %struct.POINT, ptr %1113, i64 %1115, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1112, ptr align 8 %1116, i64 16, i1 false), !dbg !320
  br label %1117, !dbg !322

1117:                                             ; preds = %1109
  %1118 = load i32, ptr %10, align 4, !dbg !323
  %1119 = add nsw i32 %1118, 1, !dbg !323
  store i32 %1119, ptr %10, align 4, !dbg !323
  %1120 = load i32, ptr %10, align 4, !dbg !312
  %1121 = load i32, ptr %8, align 4, !dbg !314
  %1122 = icmp slt i32 %1120, %1121, !dbg !315
  br i1 %1122, label %1123, label %5404, !dbg !316

1123:                                             ; preds = %1117
  %1124 = load i32, ptr %10, align 4, !dbg !317
  %1125 = sext i32 %1124 to i64, !dbg !319
  %1126 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1125, !dbg !319
  %1127 = load ptr, ptr %7, align 8, !dbg !320
  %1128 = load i32, ptr %10, align 4, !dbg !321
  %1129 = sext i32 %1128 to i64, !dbg !320
  %1130 = getelementptr inbounds %struct.POINT, ptr %1127, i64 %1129, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1126, ptr align 8 %1130, i64 16, i1 false), !dbg !320
  br label %1131, !dbg !322

1131:                                             ; preds = %1123
  %1132 = load i32, ptr %10, align 4, !dbg !323
  %1133 = add nsw i32 %1132, 1, !dbg !323
  store i32 %1133, ptr %10, align 4, !dbg !323
  %1134 = load i32, ptr %10, align 4, !dbg !312
  %1135 = load i32, ptr %8, align 4, !dbg !314
  %1136 = icmp slt i32 %1134, %1135, !dbg !315
  br i1 %1136, label %1137, label %5404, !dbg !316

1137:                                             ; preds = %1131
  %1138 = load i32, ptr %10, align 4, !dbg !317
  %1139 = sext i32 %1138 to i64, !dbg !319
  %1140 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1139, !dbg !319
  %1141 = load ptr, ptr %7, align 8, !dbg !320
  %1142 = load i32, ptr %10, align 4, !dbg !321
  %1143 = sext i32 %1142 to i64, !dbg !320
  %1144 = getelementptr inbounds %struct.POINT, ptr %1141, i64 %1143, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1140, ptr align 8 %1144, i64 16, i1 false), !dbg !320
  br label %1145, !dbg !322

1145:                                             ; preds = %1137
  %1146 = load i32, ptr %10, align 4, !dbg !323
  %1147 = add nsw i32 %1146, 1, !dbg !323
  store i32 %1147, ptr %10, align 4, !dbg !323
  %1148 = load i32, ptr %10, align 4, !dbg !312
  %1149 = load i32, ptr %8, align 4, !dbg !314
  %1150 = icmp slt i32 %1148, %1149, !dbg !315
  br i1 %1150, label %1151, label %5404, !dbg !316

1151:                                             ; preds = %1145
  %1152 = load i32, ptr %10, align 4, !dbg !317
  %1153 = sext i32 %1152 to i64, !dbg !319
  %1154 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1153, !dbg !319
  %1155 = load ptr, ptr %7, align 8, !dbg !320
  %1156 = load i32, ptr %10, align 4, !dbg !321
  %1157 = sext i32 %1156 to i64, !dbg !320
  %1158 = getelementptr inbounds %struct.POINT, ptr %1155, i64 %1157, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1154, ptr align 8 %1158, i64 16, i1 false), !dbg !320
  br label %1159, !dbg !322

1159:                                             ; preds = %1151
  %1160 = load i32, ptr %10, align 4, !dbg !323
  %1161 = add nsw i32 %1160, 1, !dbg !323
  store i32 %1161, ptr %10, align 4, !dbg !323
  %1162 = load i32, ptr %10, align 4, !dbg !312
  %1163 = load i32, ptr %8, align 4, !dbg !314
  %1164 = icmp slt i32 %1162, %1163, !dbg !315
  br i1 %1164, label %1165, label %5404, !dbg !316

1165:                                             ; preds = %1159
  %1166 = load i32, ptr %10, align 4, !dbg !317
  %1167 = sext i32 %1166 to i64, !dbg !319
  %1168 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1167, !dbg !319
  %1169 = load ptr, ptr %7, align 8, !dbg !320
  %1170 = load i32, ptr %10, align 4, !dbg !321
  %1171 = sext i32 %1170 to i64, !dbg !320
  %1172 = getelementptr inbounds %struct.POINT, ptr %1169, i64 %1171, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1168, ptr align 8 %1172, i64 16, i1 false), !dbg !320
  br label %1173, !dbg !322

1173:                                             ; preds = %1165
  %1174 = load i32, ptr %10, align 4, !dbg !323
  %1175 = add nsw i32 %1174, 1, !dbg !323
  store i32 %1175, ptr %10, align 4, !dbg !323
  %1176 = load i32, ptr %10, align 4, !dbg !312
  %1177 = load i32, ptr %8, align 4, !dbg !314
  %1178 = icmp slt i32 %1176, %1177, !dbg !315
  br i1 %1178, label %1179, label %5404, !dbg !316

1179:                                             ; preds = %1173
  %1180 = load i32, ptr %10, align 4, !dbg !317
  %1181 = sext i32 %1180 to i64, !dbg !319
  %1182 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1181, !dbg !319
  %1183 = load ptr, ptr %7, align 8, !dbg !320
  %1184 = load i32, ptr %10, align 4, !dbg !321
  %1185 = sext i32 %1184 to i64, !dbg !320
  %1186 = getelementptr inbounds %struct.POINT, ptr %1183, i64 %1185, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1182, ptr align 8 %1186, i64 16, i1 false), !dbg !320
  br label %1187, !dbg !322

1187:                                             ; preds = %1179
  %1188 = load i32, ptr %10, align 4, !dbg !323
  %1189 = add nsw i32 %1188, 1, !dbg !323
  store i32 %1189, ptr %10, align 4, !dbg !323
  %1190 = load i32, ptr %10, align 4, !dbg !312
  %1191 = load i32, ptr %8, align 4, !dbg !314
  %1192 = icmp slt i32 %1190, %1191, !dbg !315
  br i1 %1192, label %1193, label %5404, !dbg !316

1193:                                             ; preds = %1187
  %1194 = load i32, ptr %10, align 4, !dbg !317
  %1195 = sext i32 %1194 to i64, !dbg !319
  %1196 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1195, !dbg !319
  %1197 = load ptr, ptr %7, align 8, !dbg !320
  %1198 = load i32, ptr %10, align 4, !dbg !321
  %1199 = sext i32 %1198 to i64, !dbg !320
  %1200 = getelementptr inbounds %struct.POINT, ptr %1197, i64 %1199, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1196, ptr align 8 %1200, i64 16, i1 false), !dbg !320
  br label %1201, !dbg !322

1201:                                             ; preds = %1193
  %1202 = load i32, ptr %10, align 4, !dbg !323
  %1203 = add nsw i32 %1202, 1, !dbg !323
  store i32 %1203, ptr %10, align 4, !dbg !323
  %1204 = load i32, ptr %10, align 4, !dbg !312
  %1205 = load i32, ptr %8, align 4, !dbg !314
  %1206 = icmp slt i32 %1204, %1205, !dbg !315
  br i1 %1206, label %1207, label %5404, !dbg !316

1207:                                             ; preds = %1201
  %1208 = load i32, ptr %10, align 4, !dbg !317
  %1209 = sext i32 %1208 to i64, !dbg !319
  %1210 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1209, !dbg !319
  %1211 = load ptr, ptr %7, align 8, !dbg !320
  %1212 = load i32, ptr %10, align 4, !dbg !321
  %1213 = sext i32 %1212 to i64, !dbg !320
  %1214 = getelementptr inbounds %struct.POINT, ptr %1211, i64 %1213, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1210, ptr align 8 %1214, i64 16, i1 false), !dbg !320
  br label %1215, !dbg !322

1215:                                             ; preds = %1207
  %1216 = load i32, ptr %10, align 4, !dbg !323
  %1217 = add nsw i32 %1216, 1, !dbg !323
  store i32 %1217, ptr %10, align 4, !dbg !323
  %1218 = load i32, ptr %10, align 4, !dbg !312
  %1219 = load i32, ptr %8, align 4, !dbg !314
  %1220 = icmp slt i32 %1218, %1219, !dbg !315
  br i1 %1220, label %1221, label %5404, !dbg !316

1221:                                             ; preds = %1215
  %1222 = load i32, ptr %10, align 4, !dbg !317
  %1223 = sext i32 %1222 to i64, !dbg !319
  %1224 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1223, !dbg !319
  %1225 = load ptr, ptr %7, align 8, !dbg !320
  %1226 = load i32, ptr %10, align 4, !dbg !321
  %1227 = sext i32 %1226 to i64, !dbg !320
  %1228 = getelementptr inbounds %struct.POINT, ptr %1225, i64 %1227, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1224, ptr align 8 %1228, i64 16, i1 false), !dbg !320
  br label %1229, !dbg !322

1229:                                             ; preds = %1221
  %1230 = load i32, ptr %10, align 4, !dbg !323
  %1231 = add nsw i32 %1230, 1, !dbg !323
  store i32 %1231, ptr %10, align 4, !dbg !323
  %1232 = load i32, ptr %10, align 4, !dbg !312
  %1233 = load i32, ptr %8, align 4, !dbg !314
  %1234 = icmp slt i32 %1232, %1233, !dbg !315
  br i1 %1234, label %1235, label %5404, !dbg !316

1235:                                             ; preds = %1229
  %1236 = load i32, ptr %10, align 4, !dbg !317
  %1237 = sext i32 %1236 to i64, !dbg !319
  %1238 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1237, !dbg !319
  %1239 = load ptr, ptr %7, align 8, !dbg !320
  %1240 = load i32, ptr %10, align 4, !dbg !321
  %1241 = sext i32 %1240 to i64, !dbg !320
  %1242 = getelementptr inbounds %struct.POINT, ptr %1239, i64 %1241, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1238, ptr align 8 %1242, i64 16, i1 false), !dbg !320
  br label %1243, !dbg !322

1243:                                             ; preds = %1235
  %1244 = load i32, ptr %10, align 4, !dbg !323
  %1245 = add nsw i32 %1244, 1, !dbg !323
  store i32 %1245, ptr %10, align 4, !dbg !323
  %1246 = load i32, ptr %10, align 4, !dbg !312
  %1247 = load i32, ptr %8, align 4, !dbg !314
  %1248 = icmp slt i32 %1246, %1247, !dbg !315
  br i1 %1248, label %1249, label %5404, !dbg !316

1249:                                             ; preds = %1243
  %1250 = load i32, ptr %10, align 4, !dbg !317
  %1251 = sext i32 %1250 to i64, !dbg !319
  %1252 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1251, !dbg !319
  %1253 = load ptr, ptr %7, align 8, !dbg !320
  %1254 = load i32, ptr %10, align 4, !dbg !321
  %1255 = sext i32 %1254 to i64, !dbg !320
  %1256 = getelementptr inbounds %struct.POINT, ptr %1253, i64 %1255, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1252, ptr align 8 %1256, i64 16, i1 false), !dbg !320
  br label %1257, !dbg !322

1257:                                             ; preds = %1249
  %1258 = load i32, ptr %10, align 4, !dbg !323
  %1259 = add nsw i32 %1258, 1, !dbg !323
  store i32 %1259, ptr %10, align 4, !dbg !323
  %1260 = load i32, ptr %10, align 4, !dbg !312
  %1261 = load i32, ptr %8, align 4, !dbg !314
  %1262 = icmp slt i32 %1260, %1261, !dbg !315
  br i1 %1262, label %1263, label %5404, !dbg !316

1263:                                             ; preds = %1257
  %1264 = load i32, ptr %10, align 4, !dbg !317
  %1265 = sext i32 %1264 to i64, !dbg !319
  %1266 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1265, !dbg !319
  %1267 = load ptr, ptr %7, align 8, !dbg !320
  %1268 = load i32, ptr %10, align 4, !dbg !321
  %1269 = sext i32 %1268 to i64, !dbg !320
  %1270 = getelementptr inbounds %struct.POINT, ptr %1267, i64 %1269, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1266, ptr align 8 %1270, i64 16, i1 false), !dbg !320
  br label %1271, !dbg !322

1271:                                             ; preds = %1263
  %1272 = load i32, ptr %10, align 4, !dbg !323
  %1273 = add nsw i32 %1272, 1, !dbg !323
  store i32 %1273, ptr %10, align 4, !dbg !323
  %1274 = load i32, ptr %10, align 4, !dbg !312
  %1275 = load i32, ptr %8, align 4, !dbg !314
  %1276 = icmp slt i32 %1274, %1275, !dbg !315
  br i1 %1276, label %1277, label %5404, !dbg !316

1277:                                             ; preds = %1271
  %1278 = load i32, ptr %10, align 4, !dbg !317
  %1279 = sext i32 %1278 to i64, !dbg !319
  %1280 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1279, !dbg !319
  %1281 = load ptr, ptr %7, align 8, !dbg !320
  %1282 = load i32, ptr %10, align 4, !dbg !321
  %1283 = sext i32 %1282 to i64, !dbg !320
  %1284 = getelementptr inbounds %struct.POINT, ptr %1281, i64 %1283, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1280, ptr align 8 %1284, i64 16, i1 false), !dbg !320
  br label %1285, !dbg !322

1285:                                             ; preds = %1277
  %1286 = load i32, ptr %10, align 4, !dbg !323
  %1287 = add nsw i32 %1286, 1, !dbg !323
  store i32 %1287, ptr %10, align 4, !dbg !323
  %1288 = load i32, ptr %10, align 4, !dbg !312
  %1289 = load i32, ptr %8, align 4, !dbg !314
  %1290 = icmp slt i32 %1288, %1289, !dbg !315
  br i1 %1290, label %1291, label %5404, !dbg !316

1291:                                             ; preds = %1285
  %1292 = load i32, ptr %10, align 4, !dbg !317
  %1293 = sext i32 %1292 to i64, !dbg !319
  %1294 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1293, !dbg !319
  %1295 = load ptr, ptr %7, align 8, !dbg !320
  %1296 = load i32, ptr %10, align 4, !dbg !321
  %1297 = sext i32 %1296 to i64, !dbg !320
  %1298 = getelementptr inbounds %struct.POINT, ptr %1295, i64 %1297, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1294, ptr align 8 %1298, i64 16, i1 false), !dbg !320
  br label %1299, !dbg !322

1299:                                             ; preds = %1291
  %1300 = load i32, ptr %10, align 4, !dbg !323
  %1301 = add nsw i32 %1300, 1, !dbg !323
  store i32 %1301, ptr %10, align 4, !dbg !323
  %1302 = load i32, ptr %10, align 4, !dbg !312
  %1303 = load i32, ptr %8, align 4, !dbg !314
  %1304 = icmp slt i32 %1302, %1303, !dbg !315
  br i1 %1304, label %1305, label %5404, !dbg !316

1305:                                             ; preds = %1299
  %1306 = load i32, ptr %10, align 4, !dbg !317
  %1307 = sext i32 %1306 to i64, !dbg !319
  %1308 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1307, !dbg !319
  %1309 = load ptr, ptr %7, align 8, !dbg !320
  %1310 = load i32, ptr %10, align 4, !dbg !321
  %1311 = sext i32 %1310 to i64, !dbg !320
  %1312 = getelementptr inbounds %struct.POINT, ptr %1309, i64 %1311, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1308, ptr align 8 %1312, i64 16, i1 false), !dbg !320
  br label %1313, !dbg !322

1313:                                             ; preds = %1305
  %1314 = load i32, ptr %10, align 4, !dbg !323
  %1315 = add nsw i32 %1314, 1, !dbg !323
  store i32 %1315, ptr %10, align 4, !dbg !323
  %1316 = load i32, ptr %10, align 4, !dbg !312
  %1317 = load i32, ptr %8, align 4, !dbg !314
  %1318 = icmp slt i32 %1316, %1317, !dbg !315
  br i1 %1318, label %1319, label %5404, !dbg !316

1319:                                             ; preds = %1313
  %1320 = load i32, ptr %10, align 4, !dbg !317
  %1321 = sext i32 %1320 to i64, !dbg !319
  %1322 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1321, !dbg !319
  %1323 = load ptr, ptr %7, align 8, !dbg !320
  %1324 = load i32, ptr %10, align 4, !dbg !321
  %1325 = sext i32 %1324 to i64, !dbg !320
  %1326 = getelementptr inbounds %struct.POINT, ptr %1323, i64 %1325, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1322, ptr align 8 %1326, i64 16, i1 false), !dbg !320
  br label %1327, !dbg !322

1327:                                             ; preds = %1319
  %1328 = load i32, ptr %10, align 4, !dbg !323
  %1329 = add nsw i32 %1328, 1, !dbg !323
  store i32 %1329, ptr %10, align 4, !dbg !323
  %1330 = load i32, ptr %10, align 4, !dbg !312
  %1331 = load i32, ptr %8, align 4, !dbg !314
  %1332 = icmp slt i32 %1330, %1331, !dbg !315
  br i1 %1332, label %1333, label %5404, !dbg !316

1333:                                             ; preds = %1327
  %1334 = load i32, ptr %10, align 4, !dbg !317
  %1335 = sext i32 %1334 to i64, !dbg !319
  %1336 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1335, !dbg !319
  %1337 = load ptr, ptr %7, align 8, !dbg !320
  %1338 = load i32, ptr %10, align 4, !dbg !321
  %1339 = sext i32 %1338 to i64, !dbg !320
  %1340 = getelementptr inbounds %struct.POINT, ptr %1337, i64 %1339, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1336, ptr align 8 %1340, i64 16, i1 false), !dbg !320
  br label %1341, !dbg !322

1341:                                             ; preds = %1333
  %1342 = load i32, ptr %10, align 4, !dbg !323
  %1343 = add nsw i32 %1342, 1, !dbg !323
  store i32 %1343, ptr %10, align 4, !dbg !323
  %1344 = load i32, ptr %10, align 4, !dbg !312
  %1345 = load i32, ptr %8, align 4, !dbg !314
  %1346 = icmp slt i32 %1344, %1345, !dbg !315
  br i1 %1346, label %1347, label %5404, !dbg !316

1347:                                             ; preds = %1341
  %1348 = load i32, ptr %10, align 4, !dbg !317
  %1349 = sext i32 %1348 to i64, !dbg !319
  %1350 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1349, !dbg !319
  %1351 = load ptr, ptr %7, align 8, !dbg !320
  %1352 = load i32, ptr %10, align 4, !dbg !321
  %1353 = sext i32 %1352 to i64, !dbg !320
  %1354 = getelementptr inbounds %struct.POINT, ptr %1351, i64 %1353, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1350, ptr align 8 %1354, i64 16, i1 false), !dbg !320
  br label %1355, !dbg !322

1355:                                             ; preds = %1347
  %1356 = load i32, ptr %10, align 4, !dbg !323
  %1357 = add nsw i32 %1356, 1, !dbg !323
  store i32 %1357, ptr %10, align 4, !dbg !323
  %1358 = load i32, ptr %10, align 4, !dbg !312
  %1359 = load i32, ptr %8, align 4, !dbg !314
  %1360 = icmp slt i32 %1358, %1359, !dbg !315
  br i1 %1360, label %1361, label %5404, !dbg !316

1361:                                             ; preds = %1355
  %1362 = load i32, ptr %10, align 4, !dbg !317
  %1363 = sext i32 %1362 to i64, !dbg !319
  %1364 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1363, !dbg !319
  %1365 = load ptr, ptr %7, align 8, !dbg !320
  %1366 = load i32, ptr %10, align 4, !dbg !321
  %1367 = sext i32 %1366 to i64, !dbg !320
  %1368 = getelementptr inbounds %struct.POINT, ptr %1365, i64 %1367, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1364, ptr align 8 %1368, i64 16, i1 false), !dbg !320
  br label %1369, !dbg !322

1369:                                             ; preds = %1361
  %1370 = load i32, ptr %10, align 4, !dbg !323
  %1371 = add nsw i32 %1370, 1, !dbg !323
  store i32 %1371, ptr %10, align 4, !dbg !323
  %1372 = load i32, ptr %10, align 4, !dbg !312
  %1373 = load i32, ptr %8, align 4, !dbg !314
  %1374 = icmp slt i32 %1372, %1373, !dbg !315
  br i1 %1374, label %1375, label %5404, !dbg !316

1375:                                             ; preds = %1369
  %1376 = load i32, ptr %10, align 4, !dbg !317
  %1377 = sext i32 %1376 to i64, !dbg !319
  %1378 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1377, !dbg !319
  %1379 = load ptr, ptr %7, align 8, !dbg !320
  %1380 = load i32, ptr %10, align 4, !dbg !321
  %1381 = sext i32 %1380 to i64, !dbg !320
  %1382 = getelementptr inbounds %struct.POINT, ptr %1379, i64 %1381, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1378, ptr align 8 %1382, i64 16, i1 false), !dbg !320
  br label %1383, !dbg !322

1383:                                             ; preds = %1375
  %1384 = load i32, ptr %10, align 4, !dbg !323
  %1385 = add nsw i32 %1384, 1, !dbg !323
  store i32 %1385, ptr %10, align 4, !dbg !323
  %1386 = load i32, ptr %10, align 4, !dbg !312
  %1387 = load i32, ptr %8, align 4, !dbg !314
  %1388 = icmp slt i32 %1386, %1387, !dbg !315
  br i1 %1388, label %1389, label %5404, !dbg !316

1389:                                             ; preds = %1383
  %1390 = load i32, ptr %10, align 4, !dbg !317
  %1391 = sext i32 %1390 to i64, !dbg !319
  %1392 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1391, !dbg !319
  %1393 = load ptr, ptr %7, align 8, !dbg !320
  %1394 = load i32, ptr %10, align 4, !dbg !321
  %1395 = sext i32 %1394 to i64, !dbg !320
  %1396 = getelementptr inbounds %struct.POINT, ptr %1393, i64 %1395, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1392, ptr align 8 %1396, i64 16, i1 false), !dbg !320
  br label %1397, !dbg !322

1397:                                             ; preds = %1389
  %1398 = load i32, ptr %10, align 4, !dbg !323
  %1399 = add nsw i32 %1398, 1, !dbg !323
  store i32 %1399, ptr %10, align 4, !dbg !323
  %1400 = load i32, ptr %10, align 4, !dbg !312
  %1401 = load i32, ptr %8, align 4, !dbg !314
  %1402 = icmp slt i32 %1400, %1401, !dbg !315
  br i1 %1402, label %1403, label %5404, !dbg !316

1403:                                             ; preds = %1397
  %1404 = load i32, ptr %10, align 4, !dbg !317
  %1405 = sext i32 %1404 to i64, !dbg !319
  %1406 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1405, !dbg !319
  %1407 = load ptr, ptr %7, align 8, !dbg !320
  %1408 = load i32, ptr %10, align 4, !dbg !321
  %1409 = sext i32 %1408 to i64, !dbg !320
  %1410 = getelementptr inbounds %struct.POINT, ptr %1407, i64 %1409, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1406, ptr align 8 %1410, i64 16, i1 false), !dbg !320
  br label %1411, !dbg !322

1411:                                             ; preds = %1403
  %1412 = load i32, ptr %10, align 4, !dbg !323
  %1413 = add nsw i32 %1412, 1, !dbg !323
  store i32 %1413, ptr %10, align 4, !dbg !323
  %1414 = load i32, ptr %10, align 4, !dbg !312
  %1415 = load i32, ptr %8, align 4, !dbg !314
  %1416 = icmp slt i32 %1414, %1415, !dbg !315
  br i1 %1416, label %1417, label %5404, !dbg !316

1417:                                             ; preds = %1411
  %1418 = load i32, ptr %10, align 4, !dbg !317
  %1419 = sext i32 %1418 to i64, !dbg !319
  %1420 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1419, !dbg !319
  %1421 = load ptr, ptr %7, align 8, !dbg !320
  %1422 = load i32, ptr %10, align 4, !dbg !321
  %1423 = sext i32 %1422 to i64, !dbg !320
  %1424 = getelementptr inbounds %struct.POINT, ptr %1421, i64 %1423, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1420, ptr align 8 %1424, i64 16, i1 false), !dbg !320
  br label %1425, !dbg !322

1425:                                             ; preds = %1417
  %1426 = load i32, ptr %10, align 4, !dbg !323
  %1427 = add nsw i32 %1426, 1, !dbg !323
  store i32 %1427, ptr %10, align 4, !dbg !323
  %1428 = load i32, ptr %10, align 4, !dbg !312
  %1429 = load i32, ptr %8, align 4, !dbg !314
  %1430 = icmp slt i32 %1428, %1429, !dbg !315
  br i1 %1430, label %1431, label %5404, !dbg !316

1431:                                             ; preds = %1425
  %1432 = load i32, ptr %10, align 4, !dbg !317
  %1433 = sext i32 %1432 to i64, !dbg !319
  %1434 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1433, !dbg !319
  %1435 = load ptr, ptr %7, align 8, !dbg !320
  %1436 = load i32, ptr %10, align 4, !dbg !321
  %1437 = sext i32 %1436 to i64, !dbg !320
  %1438 = getelementptr inbounds %struct.POINT, ptr %1435, i64 %1437, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1434, ptr align 8 %1438, i64 16, i1 false), !dbg !320
  br label %1439, !dbg !322

1439:                                             ; preds = %1431
  %1440 = load i32, ptr %10, align 4, !dbg !323
  %1441 = add nsw i32 %1440, 1, !dbg !323
  store i32 %1441, ptr %10, align 4, !dbg !323
  %1442 = load i32, ptr %10, align 4, !dbg !312
  %1443 = load i32, ptr %8, align 4, !dbg !314
  %1444 = icmp slt i32 %1442, %1443, !dbg !315
  br i1 %1444, label %1445, label %5404, !dbg !316

1445:                                             ; preds = %1439
  %1446 = load i32, ptr %10, align 4, !dbg !317
  %1447 = sext i32 %1446 to i64, !dbg !319
  %1448 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1447, !dbg !319
  %1449 = load ptr, ptr %7, align 8, !dbg !320
  %1450 = load i32, ptr %10, align 4, !dbg !321
  %1451 = sext i32 %1450 to i64, !dbg !320
  %1452 = getelementptr inbounds %struct.POINT, ptr %1449, i64 %1451, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1448, ptr align 8 %1452, i64 16, i1 false), !dbg !320
  br label %1453, !dbg !322

1453:                                             ; preds = %1445
  %1454 = load i32, ptr %10, align 4, !dbg !323
  %1455 = add nsw i32 %1454, 1, !dbg !323
  store i32 %1455, ptr %10, align 4, !dbg !323
  %1456 = load i32, ptr %10, align 4, !dbg !312
  %1457 = load i32, ptr %8, align 4, !dbg !314
  %1458 = icmp slt i32 %1456, %1457, !dbg !315
  br i1 %1458, label %1459, label %5404, !dbg !316

1459:                                             ; preds = %1453
  %1460 = load i32, ptr %10, align 4, !dbg !317
  %1461 = sext i32 %1460 to i64, !dbg !319
  %1462 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1461, !dbg !319
  %1463 = load ptr, ptr %7, align 8, !dbg !320
  %1464 = load i32, ptr %10, align 4, !dbg !321
  %1465 = sext i32 %1464 to i64, !dbg !320
  %1466 = getelementptr inbounds %struct.POINT, ptr %1463, i64 %1465, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1462, ptr align 8 %1466, i64 16, i1 false), !dbg !320
  br label %1467, !dbg !322

1467:                                             ; preds = %1459
  %1468 = load i32, ptr %10, align 4, !dbg !323
  %1469 = add nsw i32 %1468, 1, !dbg !323
  store i32 %1469, ptr %10, align 4, !dbg !323
  %1470 = load i32, ptr %10, align 4, !dbg !312
  %1471 = load i32, ptr %8, align 4, !dbg !314
  %1472 = icmp slt i32 %1470, %1471, !dbg !315
  br i1 %1472, label %1473, label %5404, !dbg !316

1473:                                             ; preds = %1467
  %1474 = load i32, ptr %10, align 4, !dbg !317
  %1475 = sext i32 %1474 to i64, !dbg !319
  %1476 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1475, !dbg !319
  %1477 = load ptr, ptr %7, align 8, !dbg !320
  %1478 = load i32, ptr %10, align 4, !dbg !321
  %1479 = sext i32 %1478 to i64, !dbg !320
  %1480 = getelementptr inbounds %struct.POINT, ptr %1477, i64 %1479, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1476, ptr align 8 %1480, i64 16, i1 false), !dbg !320
  br label %1481, !dbg !322

1481:                                             ; preds = %1473
  %1482 = load i32, ptr %10, align 4, !dbg !323
  %1483 = add nsw i32 %1482, 1, !dbg !323
  store i32 %1483, ptr %10, align 4, !dbg !323
  %1484 = load i32, ptr %10, align 4, !dbg !312
  %1485 = load i32, ptr %8, align 4, !dbg !314
  %1486 = icmp slt i32 %1484, %1485, !dbg !315
  br i1 %1486, label %1487, label %5404, !dbg !316

1487:                                             ; preds = %1481
  %1488 = load i32, ptr %10, align 4, !dbg !317
  %1489 = sext i32 %1488 to i64, !dbg !319
  %1490 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1489, !dbg !319
  %1491 = load ptr, ptr %7, align 8, !dbg !320
  %1492 = load i32, ptr %10, align 4, !dbg !321
  %1493 = sext i32 %1492 to i64, !dbg !320
  %1494 = getelementptr inbounds %struct.POINT, ptr %1491, i64 %1493, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1490, ptr align 8 %1494, i64 16, i1 false), !dbg !320
  br label %1495, !dbg !322

1495:                                             ; preds = %1487
  %1496 = load i32, ptr %10, align 4, !dbg !323
  %1497 = add nsw i32 %1496, 1, !dbg !323
  store i32 %1497, ptr %10, align 4, !dbg !323
  %1498 = load i32, ptr %10, align 4, !dbg !312
  %1499 = load i32, ptr %8, align 4, !dbg !314
  %1500 = icmp slt i32 %1498, %1499, !dbg !315
  br i1 %1500, label %1501, label %5404, !dbg !316

1501:                                             ; preds = %1495
  %1502 = load i32, ptr %10, align 4, !dbg !317
  %1503 = sext i32 %1502 to i64, !dbg !319
  %1504 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1503, !dbg !319
  %1505 = load ptr, ptr %7, align 8, !dbg !320
  %1506 = load i32, ptr %10, align 4, !dbg !321
  %1507 = sext i32 %1506 to i64, !dbg !320
  %1508 = getelementptr inbounds %struct.POINT, ptr %1505, i64 %1507, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1504, ptr align 8 %1508, i64 16, i1 false), !dbg !320
  br label %1509, !dbg !322

1509:                                             ; preds = %1501
  %1510 = load i32, ptr %10, align 4, !dbg !323
  %1511 = add nsw i32 %1510, 1, !dbg !323
  store i32 %1511, ptr %10, align 4, !dbg !323
  %1512 = load i32, ptr %10, align 4, !dbg !312
  %1513 = load i32, ptr %8, align 4, !dbg !314
  %1514 = icmp slt i32 %1512, %1513, !dbg !315
  br i1 %1514, label %1515, label %5404, !dbg !316

1515:                                             ; preds = %1509
  %1516 = load i32, ptr %10, align 4, !dbg !317
  %1517 = sext i32 %1516 to i64, !dbg !319
  %1518 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1517, !dbg !319
  %1519 = load ptr, ptr %7, align 8, !dbg !320
  %1520 = load i32, ptr %10, align 4, !dbg !321
  %1521 = sext i32 %1520 to i64, !dbg !320
  %1522 = getelementptr inbounds %struct.POINT, ptr %1519, i64 %1521, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1518, ptr align 8 %1522, i64 16, i1 false), !dbg !320
  br label %1523, !dbg !322

1523:                                             ; preds = %1515
  %1524 = load i32, ptr %10, align 4, !dbg !323
  %1525 = add nsw i32 %1524, 1, !dbg !323
  store i32 %1525, ptr %10, align 4, !dbg !323
  %1526 = load i32, ptr %10, align 4, !dbg !312
  %1527 = load i32, ptr %8, align 4, !dbg !314
  %1528 = icmp slt i32 %1526, %1527, !dbg !315
  br i1 %1528, label %1529, label %5404, !dbg !316

1529:                                             ; preds = %1523
  %1530 = load i32, ptr %10, align 4, !dbg !317
  %1531 = sext i32 %1530 to i64, !dbg !319
  %1532 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1531, !dbg !319
  %1533 = load ptr, ptr %7, align 8, !dbg !320
  %1534 = load i32, ptr %10, align 4, !dbg !321
  %1535 = sext i32 %1534 to i64, !dbg !320
  %1536 = getelementptr inbounds %struct.POINT, ptr %1533, i64 %1535, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1532, ptr align 8 %1536, i64 16, i1 false), !dbg !320
  br label %1537, !dbg !322

1537:                                             ; preds = %1529
  %1538 = load i32, ptr %10, align 4, !dbg !323
  %1539 = add nsw i32 %1538, 1, !dbg !323
  store i32 %1539, ptr %10, align 4, !dbg !323
  %1540 = load i32, ptr %10, align 4, !dbg !312
  %1541 = load i32, ptr %8, align 4, !dbg !314
  %1542 = icmp slt i32 %1540, %1541, !dbg !315
  br i1 %1542, label %1543, label %5404, !dbg !316

1543:                                             ; preds = %1537
  %1544 = load i32, ptr %10, align 4, !dbg !317
  %1545 = sext i32 %1544 to i64, !dbg !319
  %1546 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1545, !dbg !319
  %1547 = load ptr, ptr %7, align 8, !dbg !320
  %1548 = load i32, ptr %10, align 4, !dbg !321
  %1549 = sext i32 %1548 to i64, !dbg !320
  %1550 = getelementptr inbounds %struct.POINT, ptr %1547, i64 %1549, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1546, ptr align 8 %1550, i64 16, i1 false), !dbg !320
  br label %1551, !dbg !322

1551:                                             ; preds = %1543
  %1552 = load i32, ptr %10, align 4, !dbg !323
  %1553 = add nsw i32 %1552, 1, !dbg !323
  store i32 %1553, ptr %10, align 4, !dbg !323
  %1554 = load i32, ptr %10, align 4, !dbg !312
  %1555 = load i32, ptr %8, align 4, !dbg !314
  %1556 = icmp slt i32 %1554, %1555, !dbg !315
  br i1 %1556, label %1557, label %5404, !dbg !316

1557:                                             ; preds = %1551
  %1558 = load i32, ptr %10, align 4, !dbg !317
  %1559 = sext i32 %1558 to i64, !dbg !319
  %1560 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1559, !dbg !319
  %1561 = load ptr, ptr %7, align 8, !dbg !320
  %1562 = load i32, ptr %10, align 4, !dbg !321
  %1563 = sext i32 %1562 to i64, !dbg !320
  %1564 = getelementptr inbounds %struct.POINT, ptr %1561, i64 %1563, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1560, ptr align 8 %1564, i64 16, i1 false), !dbg !320
  br label %1565, !dbg !322

1565:                                             ; preds = %1557
  %1566 = load i32, ptr %10, align 4, !dbg !323
  %1567 = add nsw i32 %1566, 1, !dbg !323
  store i32 %1567, ptr %10, align 4, !dbg !323
  %1568 = load i32, ptr %10, align 4, !dbg !312
  %1569 = load i32, ptr %8, align 4, !dbg !314
  %1570 = icmp slt i32 %1568, %1569, !dbg !315
  br i1 %1570, label %1571, label %5404, !dbg !316

1571:                                             ; preds = %1565
  %1572 = load i32, ptr %10, align 4, !dbg !317
  %1573 = sext i32 %1572 to i64, !dbg !319
  %1574 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1573, !dbg !319
  %1575 = load ptr, ptr %7, align 8, !dbg !320
  %1576 = load i32, ptr %10, align 4, !dbg !321
  %1577 = sext i32 %1576 to i64, !dbg !320
  %1578 = getelementptr inbounds %struct.POINT, ptr %1575, i64 %1577, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1574, ptr align 8 %1578, i64 16, i1 false), !dbg !320
  br label %1579, !dbg !322

1579:                                             ; preds = %1571
  %1580 = load i32, ptr %10, align 4, !dbg !323
  %1581 = add nsw i32 %1580, 1, !dbg !323
  store i32 %1581, ptr %10, align 4, !dbg !323
  %1582 = load i32, ptr %10, align 4, !dbg !312
  %1583 = load i32, ptr %8, align 4, !dbg !314
  %1584 = icmp slt i32 %1582, %1583, !dbg !315
  br i1 %1584, label %1585, label %5404, !dbg !316

1585:                                             ; preds = %1579
  %1586 = load i32, ptr %10, align 4, !dbg !317
  %1587 = sext i32 %1586 to i64, !dbg !319
  %1588 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1587, !dbg !319
  %1589 = load ptr, ptr %7, align 8, !dbg !320
  %1590 = load i32, ptr %10, align 4, !dbg !321
  %1591 = sext i32 %1590 to i64, !dbg !320
  %1592 = getelementptr inbounds %struct.POINT, ptr %1589, i64 %1591, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1588, ptr align 8 %1592, i64 16, i1 false), !dbg !320
  br label %1593, !dbg !322

1593:                                             ; preds = %1585
  %1594 = load i32, ptr %10, align 4, !dbg !323
  %1595 = add nsw i32 %1594, 1, !dbg !323
  store i32 %1595, ptr %10, align 4, !dbg !323
  %1596 = load i32, ptr %10, align 4, !dbg !312
  %1597 = load i32, ptr %8, align 4, !dbg !314
  %1598 = icmp slt i32 %1596, %1597, !dbg !315
  br i1 %1598, label %1599, label %5404, !dbg !316

1599:                                             ; preds = %1593
  %1600 = load i32, ptr %10, align 4, !dbg !317
  %1601 = sext i32 %1600 to i64, !dbg !319
  %1602 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1601, !dbg !319
  %1603 = load ptr, ptr %7, align 8, !dbg !320
  %1604 = load i32, ptr %10, align 4, !dbg !321
  %1605 = sext i32 %1604 to i64, !dbg !320
  %1606 = getelementptr inbounds %struct.POINT, ptr %1603, i64 %1605, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1602, ptr align 8 %1606, i64 16, i1 false), !dbg !320
  br label %1607, !dbg !322

1607:                                             ; preds = %1599
  %1608 = load i32, ptr %10, align 4, !dbg !323
  %1609 = add nsw i32 %1608, 1, !dbg !323
  store i32 %1609, ptr %10, align 4, !dbg !323
  %1610 = load i32, ptr %10, align 4, !dbg !312
  %1611 = load i32, ptr %8, align 4, !dbg !314
  %1612 = icmp slt i32 %1610, %1611, !dbg !315
  br i1 %1612, label %1613, label %5404, !dbg !316

1613:                                             ; preds = %1607
  %1614 = load i32, ptr %10, align 4, !dbg !317
  %1615 = sext i32 %1614 to i64, !dbg !319
  %1616 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1615, !dbg !319
  %1617 = load ptr, ptr %7, align 8, !dbg !320
  %1618 = load i32, ptr %10, align 4, !dbg !321
  %1619 = sext i32 %1618 to i64, !dbg !320
  %1620 = getelementptr inbounds %struct.POINT, ptr %1617, i64 %1619, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1616, ptr align 8 %1620, i64 16, i1 false), !dbg !320
  br label %1621, !dbg !322

1621:                                             ; preds = %1613
  %1622 = load i32, ptr %10, align 4, !dbg !323
  %1623 = add nsw i32 %1622, 1, !dbg !323
  store i32 %1623, ptr %10, align 4, !dbg !323
  %1624 = load i32, ptr %10, align 4, !dbg !312
  %1625 = load i32, ptr %8, align 4, !dbg !314
  %1626 = icmp slt i32 %1624, %1625, !dbg !315
  br i1 %1626, label %1627, label %5404, !dbg !316

1627:                                             ; preds = %1621
  %1628 = load i32, ptr %10, align 4, !dbg !317
  %1629 = sext i32 %1628 to i64, !dbg !319
  %1630 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1629, !dbg !319
  %1631 = load ptr, ptr %7, align 8, !dbg !320
  %1632 = load i32, ptr %10, align 4, !dbg !321
  %1633 = sext i32 %1632 to i64, !dbg !320
  %1634 = getelementptr inbounds %struct.POINT, ptr %1631, i64 %1633, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1630, ptr align 8 %1634, i64 16, i1 false), !dbg !320
  br label %1635, !dbg !322

1635:                                             ; preds = %1627
  %1636 = load i32, ptr %10, align 4, !dbg !323
  %1637 = add nsw i32 %1636, 1, !dbg !323
  store i32 %1637, ptr %10, align 4, !dbg !323
  %1638 = load i32, ptr %10, align 4, !dbg !312
  %1639 = load i32, ptr %8, align 4, !dbg !314
  %1640 = icmp slt i32 %1638, %1639, !dbg !315
  br i1 %1640, label %1641, label %5404, !dbg !316

1641:                                             ; preds = %1635
  %1642 = load i32, ptr %10, align 4, !dbg !317
  %1643 = sext i32 %1642 to i64, !dbg !319
  %1644 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1643, !dbg !319
  %1645 = load ptr, ptr %7, align 8, !dbg !320
  %1646 = load i32, ptr %10, align 4, !dbg !321
  %1647 = sext i32 %1646 to i64, !dbg !320
  %1648 = getelementptr inbounds %struct.POINT, ptr %1645, i64 %1647, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1644, ptr align 8 %1648, i64 16, i1 false), !dbg !320
  br label %1649, !dbg !322

1649:                                             ; preds = %1641
  %1650 = load i32, ptr %10, align 4, !dbg !323
  %1651 = add nsw i32 %1650, 1, !dbg !323
  store i32 %1651, ptr %10, align 4, !dbg !323
  %1652 = load i32, ptr %10, align 4, !dbg !312
  %1653 = load i32, ptr %8, align 4, !dbg !314
  %1654 = icmp slt i32 %1652, %1653, !dbg !315
  br i1 %1654, label %1655, label %5404, !dbg !316

1655:                                             ; preds = %1649
  %1656 = load i32, ptr %10, align 4, !dbg !317
  %1657 = sext i32 %1656 to i64, !dbg !319
  %1658 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1657, !dbg !319
  %1659 = load ptr, ptr %7, align 8, !dbg !320
  %1660 = load i32, ptr %10, align 4, !dbg !321
  %1661 = sext i32 %1660 to i64, !dbg !320
  %1662 = getelementptr inbounds %struct.POINT, ptr %1659, i64 %1661, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1658, ptr align 8 %1662, i64 16, i1 false), !dbg !320
  br label %1663, !dbg !322

1663:                                             ; preds = %1655
  %1664 = load i32, ptr %10, align 4, !dbg !323
  %1665 = add nsw i32 %1664, 1, !dbg !323
  store i32 %1665, ptr %10, align 4, !dbg !323
  %1666 = load i32, ptr %10, align 4, !dbg !312
  %1667 = load i32, ptr %8, align 4, !dbg !314
  %1668 = icmp slt i32 %1666, %1667, !dbg !315
  br i1 %1668, label %1669, label %5404, !dbg !316

1669:                                             ; preds = %1663
  %1670 = load i32, ptr %10, align 4, !dbg !317
  %1671 = sext i32 %1670 to i64, !dbg !319
  %1672 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1671, !dbg !319
  %1673 = load ptr, ptr %7, align 8, !dbg !320
  %1674 = load i32, ptr %10, align 4, !dbg !321
  %1675 = sext i32 %1674 to i64, !dbg !320
  %1676 = getelementptr inbounds %struct.POINT, ptr %1673, i64 %1675, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1672, ptr align 8 %1676, i64 16, i1 false), !dbg !320
  br label %1677, !dbg !322

1677:                                             ; preds = %1669
  %1678 = load i32, ptr %10, align 4, !dbg !323
  %1679 = add nsw i32 %1678, 1, !dbg !323
  store i32 %1679, ptr %10, align 4, !dbg !323
  %1680 = load i32, ptr %10, align 4, !dbg !312
  %1681 = load i32, ptr %8, align 4, !dbg !314
  %1682 = icmp slt i32 %1680, %1681, !dbg !315
  br i1 %1682, label %1683, label %5404, !dbg !316

1683:                                             ; preds = %1677
  %1684 = load i32, ptr %10, align 4, !dbg !317
  %1685 = sext i32 %1684 to i64, !dbg !319
  %1686 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1685, !dbg !319
  %1687 = load ptr, ptr %7, align 8, !dbg !320
  %1688 = load i32, ptr %10, align 4, !dbg !321
  %1689 = sext i32 %1688 to i64, !dbg !320
  %1690 = getelementptr inbounds %struct.POINT, ptr %1687, i64 %1689, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1686, ptr align 8 %1690, i64 16, i1 false), !dbg !320
  br label %1691, !dbg !322

1691:                                             ; preds = %1683
  %1692 = load i32, ptr %10, align 4, !dbg !323
  %1693 = add nsw i32 %1692, 1, !dbg !323
  store i32 %1693, ptr %10, align 4, !dbg !323
  %1694 = load i32, ptr %10, align 4, !dbg !312
  %1695 = load i32, ptr %8, align 4, !dbg !314
  %1696 = icmp slt i32 %1694, %1695, !dbg !315
  br i1 %1696, label %1697, label %5404, !dbg !316

1697:                                             ; preds = %1691
  %1698 = load i32, ptr %10, align 4, !dbg !317
  %1699 = sext i32 %1698 to i64, !dbg !319
  %1700 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1699, !dbg !319
  %1701 = load ptr, ptr %7, align 8, !dbg !320
  %1702 = load i32, ptr %10, align 4, !dbg !321
  %1703 = sext i32 %1702 to i64, !dbg !320
  %1704 = getelementptr inbounds %struct.POINT, ptr %1701, i64 %1703, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1700, ptr align 8 %1704, i64 16, i1 false), !dbg !320
  br label %1705, !dbg !322

1705:                                             ; preds = %1697
  %1706 = load i32, ptr %10, align 4, !dbg !323
  %1707 = add nsw i32 %1706, 1, !dbg !323
  store i32 %1707, ptr %10, align 4, !dbg !323
  %1708 = load i32, ptr %10, align 4, !dbg !312
  %1709 = load i32, ptr %8, align 4, !dbg !314
  %1710 = icmp slt i32 %1708, %1709, !dbg !315
  br i1 %1710, label %1711, label %5404, !dbg !316

1711:                                             ; preds = %1705
  %1712 = load i32, ptr %10, align 4, !dbg !317
  %1713 = sext i32 %1712 to i64, !dbg !319
  %1714 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1713, !dbg !319
  %1715 = load ptr, ptr %7, align 8, !dbg !320
  %1716 = load i32, ptr %10, align 4, !dbg !321
  %1717 = sext i32 %1716 to i64, !dbg !320
  %1718 = getelementptr inbounds %struct.POINT, ptr %1715, i64 %1717, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1714, ptr align 8 %1718, i64 16, i1 false), !dbg !320
  br label %1719, !dbg !322

1719:                                             ; preds = %1711
  %1720 = load i32, ptr %10, align 4, !dbg !323
  %1721 = add nsw i32 %1720, 1, !dbg !323
  store i32 %1721, ptr %10, align 4, !dbg !323
  %1722 = load i32, ptr %10, align 4, !dbg !312
  %1723 = load i32, ptr %8, align 4, !dbg !314
  %1724 = icmp slt i32 %1722, %1723, !dbg !315
  br i1 %1724, label %1725, label %5404, !dbg !316

1725:                                             ; preds = %1719
  %1726 = load i32, ptr %10, align 4, !dbg !317
  %1727 = sext i32 %1726 to i64, !dbg !319
  %1728 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1727, !dbg !319
  %1729 = load ptr, ptr %7, align 8, !dbg !320
  %1730 = load i32, ptr %10, align 4, !dbg !321
  %1731 = sext i32 %1730 to i64, !dbg !320
  %1732 = getelementptr inbounds %struct.POINT, ptr %1729, i64 %1731, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1728, ptr align 8 %1732, i64 16, i1 false), !dbg !320
  br label %1733, !dbg !322

1733:                                             ; preds = %1725
  %1734 = load i32, ptr %10, align 4, !dbg !323
  %1735 = add nsw i32 %1734, 1, !dbg !323
  store i32 %1735, ptr %10, align 4, !dbg !323
  %1736 = load i32, ptr %10, align 4, !dbg !312
  %1737 = load i32, ptr %8, align 4, !dbg !314
  %1738 = icmp slt i32 %1736, %1737, !dbg !315
  br i1 %1738, label %1739, label %5404, !dbg !316

1739:                                             ; preds = %1733
  %1740 = load i32, ptr %10, align 4, !dbg !317
  %1741 = sext i32 %1740 to i64, !dbg !319
  %1742 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1741, !dbg !319
  %1743 = load ptr, ptr %7, align 8, !dbg !320
  %1744 = load i32, ptr %10, align 4, !dbg !321
  %1745 = sext i32 %1744 to i64, !dbg !320
  %1746 = getelementptr inbounds %struct.POINT, ptr %1743, i64 %1745, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1742, ptr align 8 %1746, i64 16, i1 false), !dbg !320
  br label %1747, !dbg !322

1747:                                             ; preds = %1739
  %1748 = load i32, ptr %10, align 4, !dbg !323
  %1749 = add nsw i32 %1748, 1, !dbg !323
  store i32 %1749, ptr %10, align 4, !dbg !323
  %1750 = load i32, ptr %10, align 4, !dbg !312
  %1751 = load i32, ptr %8, align 4, !dbg !314
  %1752 = icmp slt i32 %1750, %1751, !dbg !315
  br i1 %1752, label %1753, label %5404, !dbg !316

1753:                                             ; preds = %1747
  %1754 = load i32, ptr %10, align 4, !dbg !317
  %1755 = sext i32 %1754 to i64, !dbg !319
  %1756 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1755, !dbg !319
  %1757 = load ptr, ptr %7, align 8, !dbg !320
  %1758 = load i32, ptr %10, align 4, !dbg !321
  %1759 = sext i32 %1758 to i64, !dbg !320
  %1760 = getelementptr inbounds %struct.POINT, ptr %1757, i64 %1759, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1756, ptr align 8 %1760, i64 16, i1 false), !dbg !320
  br label %1761, !dbg !322

1761:                                             ; preds = %1753
  %1762 = load i32, ptr %10, align 4, !dbg !323
  %1763 = add nsw i32 %1762, 1, !dbg !323
  store i32 %1763, ptr %10, align 4, !dbg !323
  %1764 = load i32, ptr %10, align 4, !dbg !312
  %1765 = load i32, ptr %8, align 4, !dbg !314
  %1766 = icmp slt i32 %1764, %1765, !dbg !315
  br i1 %1766, label %1767, label %5404, !dbg !316

1767:                                             ; preds = %1761
  %1768 = load i32, ptr %10, align 4, !dbg !317
  %1769 = sext i32 %1768 to i64, !dbg !319
  %1770 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1769, !dbg !319
  %1771 = load ptr, ptr %7, align 8, !dbg !320
  %1772 = load i32, ptr %10, align 4, !dbg !321
  %1773 = sext i32 %1772 to i64, !dbg !320
  %1774 = getelementptr inbounds %struct.POINT, ptr %1771, i64 %1773, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1770, ptr align 8 %1774, i64 16, i1 false), !dbg !320
  br label %1775, !dbg !322

1775:                                             ; preds = %1767
  %1776 = load i32, ptr %10, align 4, !dbg !323
  %1777 = add nsw i32 %1776, 1, !dbg !323
  store i32 %1777, ptr %10, align 4, !dbg !323
  %1778 = load i32, ptr %10, align 4, !dbg !312
  %1779 = load i32, ptr %8, align 4, !dbg !314
  %1780 = icmp slt i32 %1778, %1779, !dbg !315
  br i1 %1780, label %1781, label %5404, !dbg !316

1781:                                             ; preds = %1775
  %1782 = load i32, ptr %10, align 4, !dbg !317
  %1783 = sext i32 %1782 to i64, !dbg !319
  %1784 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1783, !dbg !319
  %1785 = load ptr, ptr %7, align 8, !dbg !320
  %1786 = load i32, ptr %10, align 4, !dbg !321
  %1787 = sext i32 %1786 to i64, !dbg !320
  %1788 = getelementptr inbounds %struct.POINT, ptr %1785, i64 %1787, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1784, ptr align 8 %1788, i64 16, i1 false), !dbg !320
  br label %1789, !dbg !322

1789:                                             ; preds = %1781
  %1790 = load i32, ptr %10, align 4, !dbg !323
  %1791 = add nsw i32 %1790, 1, !dbg !323
  store i32 %1791, ptr %10, align 4, !dbg !323
  %1792 = load i32, ptr %10, align 4, !dbg !312
  %1793 = load i32, ptr %8, align 4, !dbg !314
  %1794 = icmp slt i32 %1792, %1793, !dbg !315
  br i1 %1794, label %1795, label %5404, !dbg !316

1795:                                             ; preds = %1789
  %1796 = load i32, ptr %10, align 4, !dbg !317
  %1797 = sext i32 %1796 to i64, !dbg !319
  %1798 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1797, !dbg !319
  %1799 = load ptr, ptr %7, align 8, !dbg !320
  %1800 = load i32, ptr %10, align 4, !dbg !321
  %1801 = sext i32 %1800 to i64, !dbg !320
  %1802 = getelementptr inbounds %struct.POINT, ptr %1799, i64 %1801, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1798, ptr align 8 %1802, i64 16, i1 false), !dbg !320
  br label %1803, !dbg !322

1803:                                             ; preds = %1795
  %1804 = load i32, ptr %10, align 4, !dbg !323
  %1805 = add nsw i32 %1804, 1, !dbg !323
  store i32 %1805, ptr %10, align 4, !dbg !323
  %1806 = load i32, ptr %10, align 4, !dbg !312
  %1807 = load i32, ptr %8, align 4, !dbg !314
  %1808 = icmp slt i32 %1806, %1807, !dbg !315
  br i1 %1808, label %1809, label %5404, !dbg !316

1809:                                             ; preds = %1803
  %1810 = load i32, ptr %10, align 4, !dbg !317
  %1811 = sext i32 %1810 to i64, !dbg !319
  %1812 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1811, !dbg !319
  %1813 = load ptr, ptr %7, align 8, !dbg !320
  %1814 = load i32, ptr %10, align 4, !dbg !321
  %1815 = sext i32 %1814 to i64, !dbg !320
  %1816 = getelementptr inbounds %struct.POINT, ptr %1813, i64 %1815, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1812, ptr align 8 %1816, i64 16, i1 false), !dbg !320
  br label %1817, !dbg !322

1817:                                             ; preds = %1809
  %1818 = load i32, ptr %10, align 4, !dbg !323
  %1819 = add nsw i32 %1818, 1, !dbg !323
  store i32 %1819, ptr %10, align 4, !dbg !323
  %1820 = load i32, ptr %10, align 4, !dbg !312
  %1821 = load i32, ptr %8, align 4, !dbg !314
  %1822 = icmp slt i32 %1820, %1821, !dbg !315
  br i1 %1822, label %1823, label %5404, !dbg !316

1823:                                             ; preds = %1817
  %1824 = load i32, ptr %10, align 4, !dbg !317
  %1825 = sext i32 %1824 to i64, !dbg !319
  %1826 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1825, !dbg !319
  %1827 = load ptr, ptr %7, align 8, !dbg !320
  %1828 = load i32, ptr %10, align 4, !dbg !321
  %1829 = sext i32 %1828 to i64, !dbg !320
  %1830 = getelementptr inbounds %struct.POINT, ptr %1827, i64 %1829, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1826, ptr align 8 %1830, i64 16, i1 false), !dbg !320
  br label %1831, !dbg !322

1831:                                             ; preds = %1823
  %1832 = load i32, ptr %10, align 4, !dbg !323
  %1833 = add nsw i32 %1832, 1, !dbg !323
  store i32 %1833, ptr %10, align 4, !dbg !323
  %1834 = load i32, ptr %10, align 4, !dbg !312
  %1835 = load i32, ptr %8, align 4, !dbg !314
  %1836 = icmp slt i32 %1834, %1835, !dbg !315
  br i1 %1836, label %1837, label %5404, !dbg !316

1837:                                             ; preds = %1831
  %1838 = load i32, ptr %10, align 4, !dbg !317
  %1839 = sext i32 %1838 to i64, !dbg !319
  %1840 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1839, !dbg !319
  %1841 = load ptr, ptr %7, align 8, !dbg !320
  %1842 = load i32, ptr %10, align 4, !dbg !321
  %1843 = sext i32 %1842 to i64, !dbg !320
  %1844 = getelementptr inbounds %struct.POINT, ptr %1841, i64 %1843, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1840, ptr align 8 %1844, i64 16, i1 false), !dbg !320
  br label %1845, !dbg !322

1845:                                             ; preds = %1837
  %1846 = load i32, ptr %10, align 4, !dbg !323
  %1847 = add nsw i32 %1846, 1, !dbg !323
  store i32 %1847, ptr %10, align 4, !dbg !323
  %1848 = load i32, ptr %10, align 4, !dbg !312
  %1849 = load i32, ptr %8, align 4, !dbg !314
  %1850 = icmp slt i32 %1848, %1849, !dbg !315
  br i1 %1850, label %1851, label %5404, !dbg !316

1851:                                             ; preds = %1845
  %1852 = load i32, ptr %10, align 4, !dbg !317
  %1853 = sext i32 %1852 to i64, !dbg !319
  %1854 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1853, !dbg !319
  %1855 = load ptr, ptr %7, align 8, !dbg !320
  %1856 = load i32, ptr %10, align 4, !dbg !321
  %1857 = sext i32 %1856 to i64, !dbg !320
  %1858 = getelementptr inbounds %struct.POINT, ptr %1855, i64 %1857, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1854, ptr align 8 %1858, i64 16, i1 false), !dbg !320
  br label %1859, !dbg !322

1859:                                             ; preds = %1851
  %1860 = load i32, ptr %10, align 4, !dbg !323
  %1861 = add nsw i32 %1860, 1, !dbg !323
  store i32 %1861, ptr %10, align 4, !dbg !323
  %1862 = load i32, ptr %10, align 4, !dbg !312
  %1863 = load i32, ptr %8, align 4, !dbg !314
  %1864 = icmp slt i32 %1862, %1863, !dbg !315
  br i1 %1864, label %1865, label %5404, !dbg !316

1865:                                             ; preds = %1859
  %1866 = load i32, ptr %10, align 4, !dbg !317
  %1867 = sext i32 %1866 to i64, !dbg !319
  %1868 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1867, !dbg !319
  %1869 = load ptr, ptr %7, align 8, !dbg !320
  %1870 = load i32, ptr %10, align 4, !dbg !321
  %1871 = sext i32 %1870 to i64, !dbg !320
  %1872 = getelementptr inbounds %struct.POINT, ptr %1869, i64 %1871, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1868, ptr align 8 %1872, i64 16, i1 false), !dbg !320
  br label %1873, !dbg !322

1873:                                             ; preds = %1865
  %1874 = load i32, ptr %10, align 4, !dbg !323
  %1875 = add nsw i32 %1874, 1, !dbg !323
  store i32 %1875, ptr %10, align 4, !dbg !323
  %1876 = load i32, ptr %10, align 4, !dbg !312
  %1877 = load i32, ptr %8, align 4, !dbg !314
  %1878 = icmp slt i32 %1876, %1877, !dbg !315
  br i1 %1878, label %1879, label %5404, !dbg !316

1879:                                             ; preds = %1873
  %1880 = load i32, ptr %10, align 4, !dbg !317
  %1881 = sext i32 %1880 to i64, !dbg !319
  %1882 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1881, !dbg !319
  %1883 = load ptr, ptr %7, align 8, !dbg !320
  %1884 = load i32, ptr %10, align 4, !dbg !321
  %1885 = sext i32 %1884 to i64, !dbg !320
  %1886 = getelementptr inbounds %struct.POINT, ptr %1883, i64 %1885, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1882, ptr align 8 %1886, i64 16, i1 false), !dbg !320
  br label %1887, !dbg !322

1887:                                             ; preds = %1879
  %1888 = load i32, ptr %10, align 4, !dbg !323
  %1889 = add nsw i32 %1888, 1, !dbg !323
  store i32 %1889, ptr %10, align 4, !dbg !323
  %1890 = load i32, ptr %10, align 4, !dbg !312
  %1891 = load i32, ptr %8, align 4, !dbg !314
  %1892 = icmp slt i32 %1890, %1891, !dbg !315
  br i1 %1892, label %1893, label %5404, !dbg !316

1893:                                             ; preds = %1887
  %1894 = load i32, ptr %10, align 4, !dbg !317
  %1895 = sext i32 %1894 to i64, !dbg !319
  %1896 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1895, !dbg !319
  %1897 = load ptr, ptr %7, align 8, !dbg !320
  %1898 = load i32, ptr %10, align 4, !dbg !321
  %1899 = sext i32 %1898 to i64, !dbg !320
  %1900 = getelementptr inbounds %struct.POINT, ptr %1897, i64 %1899, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1896, ptr align 8 %1900, i64 16, i1 false), !dbg !320
  br label %1901, !dbg !322

1901:                                             ; preds = %1893
  %1902 = load i32, ptr %10, align 4, !dbg !323
  %1903 = add nsw i32 %1902, 1, !dbg !323
  store i32 %1903, ptr %10, align 4, !dbg !323
  %1904 = load i32, ptr %10, align 4, !dbg !312
  %1905 = load i32, ptr %8, align 4, !dbg !314
  %1906 = icmp slt i32 %1904, %1905, !dbg !315
  br i1 %1906, label %1907, label %5404, !dbg !316

1907:                                             ; preds = %1901
  %1908 = load i32, ptr %10, align 4, !dbg !317
  %1909 = sext i32 %1908 to i64, !dbg !319
  %1910 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1909, !dbg !319
  %1911 = load ptr, ptr %7, align 8, !dbg !320
  %1912 = load i32, ptr %10, align 4, !dbg !321
  %1913 = sext i32 %1912 to i64, !dbg !320
  %1914 = getelementptr inbounds %struct.POINT, ptr %1911, i64 %1913, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1910, ptr align 8 %1914, i64 16, i1 false), !dbg !320
  br label %1915, !dbg !322

1915:                                             ; preds = %1907
  %1916 = load i32, ptr %10, align 4, !dbg !323
  %1917 = add nsw i32 %1916, 1, !dbg !323
  store i32 %1917, ptr %10, align 4, !dbg !323
  %1918 = load i32, ptr %10, align 4, !dbg !312
  %1919 = load i32, ptr %8, align 4, !dbg !314
  %1920 = icmp slt i32 %1918, %1919, !dbg !315
  br i1 %1920, label %1921, label %5404, !dbg !316

1921:                                             ; preds = %1915
  %1922 = load i32, ptr %10, align 4, !dbg !317
  %1923 = sext i32 %1922 to i64, !dbg !319
  %1924 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1923, !dbg !319
  %1925 = load ptr, ptr %7, align 8, !dbg !320
  %1926 = load i32, ptr %10, align 4, !dbg !321
  %1927 = sext i32 %1926 to i64, !dbg !320
  %1928 = getelementptr inbounds %struct.POINT, ptr %1925, i64 %1927, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1924, ptr align 8 %1928, i64 16, i1 false), !dbg !320
  br label %1929, !dbg !322

1929:                                             ; preds = %1921
  %1930 = load i32, ptr %10, align 4, !dbg !323
  %1931 = add nsw i32 %1930, 1, !dbg !323
  store i32 %1931, ptr %10, align 4, !dbg !323
  %1932 = load i32, ptr %10, align 4, !dbg !312
  %1933 = load i32, ptr %8, align 4, !dbg !314
  %1934 = icmp slt i32 %1932, %1933, !dbg !315
  br i1 %1934, label %1935, label %5404, !dbg !316

1935:                                             ; preds = %1929
  %1936 = load i32, ptr %10, align 4, !dbg !317
  %1937 = sext i32 %1936 to i64, !dbg !319
  %1938 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1937, !dbg !319
  %1939 = load ptr, ptr %7, align 8, !dbg !320
  %1940 = load i32, ptr %10, align 4, !dbg !321
  %1941 = sext i32 %1940 to i64, !dbg !320
  %1942 = getelementptr inbounds %struct.POINT, ptr %1939, i64 %1941, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1938, ptr align 8 %1942, i64 16, i1 false), !dbg !320
  br label %1943, !dbg !322

1943:                                             ; preds = %1935
  %1944 = load i32, ptr %10, align 4, !dbg !323
  %1945 = add nsw i32 %1944, 1, !dbg !323
  store i32 %1945, ptr %10, align 4, !dbg !323
  %1946 = load i32, ptr %10, align 4, !dbg !312
  %1947 = load i32, ptr %8, align 4, !dbg !314
  %1948 = icmp slt i32 %1946, %1947, !dbg !315
  br i1 %1948, label %1949, label %5404, !dbg !316

1949:                                             ; preds = %1943
  %1950 = load i32, ptr %10, align 4, !dbg !317
  %1951 = sext i32 %1950 to i64, !dbg !319
  %1952 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1951, !dbg !319
  %1953 = load ptr, ptr %7, align 8, !dbg !320
  %1954 = load i32, ptr %10, align 4, !dbg !321
  %1955 = sext i32 %1954 to i64, !dbg !320
  %1956 = getelementptr inbounds %struct.POINT, ptr %1953, i64 %1955, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1952, ptr align 8 %1956, i64 16, i1 false), !dbg !320
  br label %1957, !dbg !322

1957:                                             ; preds = %1949
  %1958 = load i32, ptr %10, align 4, !dbg !323
  %1959 = add nsw i32 %1958, 1, !dbg !323
  store i32 %1959, ptr %10, align 4, !dbg !323
  %1960 = load i32, ptr %10, align 4, !dbg !312
  %1961 = load i32, ptr %8, align 4, !dbg !314
  %1962 = icmp slt i32 %1960, %1961, !dbg !315
  br i1 %1962, label %1963, label %5404, !dbg !316

1963:                                             ; preds = %1957
  %1964 = load i32, ptr %10, align 4, !dbg !317
  %1965 = sext i32 %1964 to i64, !dbg !319
  %1966 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1965, !dbg !319
  %1967 = load ptr, ptr %7, align 8, !dbg !320
  %1968 = load i32, ptr %10, align 4, !dbg !321
  %1969 = sext i32 %1968 to i64, !dbg !320
  %1970 = getelementptr inbounds %struct.POINT, ptr %1967, i64 %1969, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1966, ptr align 8 %1970, i64 16, i1 false), !dbg !320
  br label %1971, !dbg !322

1971:                                             ; preds = %1963
  %1972 = load i32, ptr %10, align 4, !dbg !323
  %1973 = add nsw i32 %1972, 1, !dbg !323
  store i32 %1973, ptr %10, align 4, !dbg !323
  %1974 = load i32, ptr %10, align 4, !dbg !312
  %1975 = load i32, ptr %8, align 4, !dbg !314
  %1976 = icmp slt i32 %1974, %1975, !dbg !315
  br i1 %1976, label %1977, label %5404, !dbg !316

1977:                                             ; preds = %1971
  %1978 = load i32, ptr %10, align 4, !dbg !317
  %1979 = sext i32 %1978 to i64, !dbg !319
  %1980 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1979, !dbg !319
  %1981 = load ptr, ptr %7, align 8, !dbg !320
  %1982 = load i32, ptr %10, align 4, !dbg !321
  %1983 = sext i32 %1982 to i64, !dbg !320
  %1984 = getelementptr inbounds %struct.POINT, ptr %1981, i64 %1983, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1980, ptr align 8 %1984, i64 16, i1 false), !dbg !320
  br label %1985, !dbg !322

1985:                                             ; preds = %1977
  %1986 = load i32, ptr %10, align 4, !dbg !323
  %1987 = add nsw i32 %1986, 1, !dbg !323
  store i32 %1987, ptr %10, align 4, !dbg !323
  %1988 = load i32, ptr %10, align 4, !dbg !312
  %1989 = load i32, ptr %8, align 4, !dbg !314
  %1990 = icmp slt i32 %1988, %1989, !dbg !315
  br i1 %1990, label %1991, label %5404, !dbg !316

1991:                                             ; preds = %1985
  %1992 = load i32, ptr %10, align 4, !dbg !317
  %1993 = sext i32 %1992 to i64, !dbg !319
  %1994 = getelementptr inbounds %struct.POINT, ptr %26, i64 %1993, !dbg !319
  %1995 = load ptr, ptr %7, align 8, !dbg !320
  %1996 = load i32, ptr %10, align 4, !dbg !321
  %1997 = sext i32 %1996 to i64, !dbg !320
  %1998 = getelementptr inbounds %struct.POINT, ptr %1995, i64 %1997, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %1994, ptr align 8 %1998, i64 16, i1 false), !dbg !320
  br label %1999, !dbg !322

1999:                                             ; preds = %1991
  %2000 = load i32, ptr %10, align 4, !dbg !323
  %2001 = add nsw i32 %2000, 1, !dbg !323
  store i32 %2001, ptr %10, align 4, !dbg !323
  %2002 = load i32, ptr %10, align 4, !dbg !312
  %2003 = load i32, ptr %8, align 4, !dbg !314
  %2004 = icmp slt i32 %2002, %2003, !dbg !315
  br i1 %2004, label %2005, label %5404, !dbg !316

2005:                                             ; preds = %1999
  %2006 = load i32, ptr %10, align 4, !dbg !317
  %2007 = sext i32 %2006 to i64, !dbg !319
  %2008 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2007, !dbg !319
  %2009 = load ptr, ptr %7, align 8, !dbg !320
  %2010 = load i32, ptr %10, align 4, !dbg !321
  %2011 = sext i32 %2010 to i64, !dbg !320
  %2012 = getelementptr inbounds %struct.POINT, ptr %2009, i64 %2011, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2008, ptr align 8 %2012, i64 16, i1 false), !dbg !320
  br label %2013, !dbg !322

2013:                                             ; preds = %2005
  %2014 = load i32, ptr %10, align 4, !dbg !323
  %2015 = add nsw i32 %2014, 1, !dbg !323
  store i32 %2015, ptr %10, align 4, !dbg !323
  %2016 = load i32, ptr %10, align 4, !dbg !312
  %2017 = load i32, ptr %8, align 4, !dbg !314
  %2018 = icmp slt i32 %2016, %2017, !dbg !315
  br i1 %2018, label %2019, label %5404, !dbg !316

2019:                                             ; preds = %2013
  %2020 = load i32, ptr %10, align 4, !dbg !317
  %2021 = sext i32 %2020 to i64, !dbg !319
  %2022 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2021, !dbg !319
  %2023 = load ptr, ptr %7, align 8, !dbg !320
  %2024 = load i32, ptr %10, align 4, !dbg !321
  %2025 = sext i32 %2024 to i64, !dbg !320
  %2026 = getelementptr inbounds %struct.POINT, ptr %2023, i64 %2025, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2022, ptr align 8 %2026, i64 16, i1 false), !dbg !320
  br label %2027, !dbg !322

2027:                                             ; preds = %2019
  %2028 = load i32, ptr %10, align 4, !dbg !323
  %2029 = add nsw i32 %2028, 1, !dbg !323
  store i32 %2029, ptr %10, align 4, !dbg !323
  %2030 = load i32, ptr %10, align 4, !dbg !312
  %2031 = load i32, ptr %8, align 4, !dbg !314
  %2032 = icmp slt i32 %2030, %2031, !dbg !315
  br i1 %2032, label %2033, label %5404, !dbg !316

2033:                                             ; preds = %2027
  %2034 = load i32, ptr %10, align 4, !dbg !317
  %2035 = sext i32 %2034 to i64, !dbg !319
  %2036 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2035, !dbg !319
  %2037 = load ptr, ptr %7, align 8, !dbg !320
  %2038 = load i32, ptr %10, align 4, !dbg !321
  %2039 = sext i32 %2038 to i64, !dbg !320
  %2040 = getelementptr inbounds %struct.POINT, ptr %2037, i64 %2039, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2036, ptr align 8 %2040, i64 16, i1 false), !dbg !320
  br label %2041, !dbg !322

2041:                                             ; preds = %2033
  %2042 = load i32, ptr %10, align 4, !dbg !323
  %2043 = add nsw i32 %2042, 1, !dbg !323
  store i32 %2043, ptr %10, align 4, !dbg !323
  %2044 = load i32, ptr %10, align 4, !dbg !312
  %2045 = load i32, ptr %8, align 4, !dbg !314
  %2046 = icmp slt i32 %2044, %2045, !dbg !315
  br i1 %2046, label %2047, label %5404, !dbg !316

2047:                                             ; preds = %2041
  %2048 = load i32, ptr %10, align 4, !dbg !317
  %2049 = sext i32 %2048 to i64, !dbg !319
  %2050 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2049, !dbg !319
  %2051 = load ptr, ptr %7, align 8, !dbg !320
  %2052 = load i32, ptr %10, align 4, !dbg !321
  %2053 = sext i32 %2052 to i64, !dbg !320
  %2054 = getelementptr inbounds %struct.POINT, ptr %2051, i64 %2053, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2050, ptr align 8 %2054, i64 16, i1 false), !dbg !320
  br label %2055, !dbg !322

2055:                                             ; preds = %2047
  %2056 = load i32, ptr %10, align 4, !dbg !323
  %2057 = add nsw i32 %2056, 1, !dbg !323
  store i32 %2057, ptr %10, align 4, !dbg !323
  %2058 = load i32, ptr %10, align 4, !dbg !312
  %2059 = load i32, ptr %8, align 4, !dbg !314
  %2060 = icmp slt i32 %2058, %2059, !dbg !315
  br i1 %2060, label %2061, label %5404, !dbg !316

2061:                                             ; preds = %2055
  %2062 = load i32, ptr %10, align 4, !dbg !317
  %2063 = sext i32 %2062 to i64, !dbg !319
  %2064 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2063, !dbg !319
  %2065 = load ptr, ptr %7, align 8, !dbg !320
  %2066 = load i32, ptr %10, align 4, !dbg !321
  %2067 = sext i32 %2066 to i64, !dbg !320
  %2068 = getelementptr inbounds %struct.POINT, ptr %2065, i64 %2067, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2064, ptr align 8 %2068, i64 16, i1 false), !dbg !320
  br label %2069, !dbg !322

2069:                                             ; preds = %2061
  %2070 = load i32, ptr %10, align 4, !dbg !323
  %2071 = add nsw i32 %2070, 1, !dbg !323
  store i32 %2071, ptr %10, align 4, !dbg !323
  %2072 = load i32, ptr %10, align 4, !dbg !312
  %2073 = load i32, ptr %8, align 4, !dbg !314
  %2074 = icmp slt i32 %2072, %2073, !dbg !315
  br i1 %2074, label %2075, label %5404, !dbg !316

2075:                                             ; preds = %2069
  %2076 = load i32, ptr %10, align 4, !dbg !317
  %2077 = sext i32 %2076 to i64, !dbg !319
  %2078 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2077, !dbg !319
  %2079 = load ptr, ptr %7, align 8, !dbg !320
  %2080 = load i32, ptr %10, align 4, !dbg !321
  %2081 = sext i32 %2080 to i64, !dbg !320
  %2082 = getelementptr inbounds %struct.POINT, ptr %2079, i64 %2081, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2078, ptr align 8 %2082, i64 16, i1 false), !dbg !320
  br label %2083, !dbg !322

2083:                                             ; preds = %2075
  %2084 = load i32, ptr %10, align 4, !dbg !323
  %2085 = add nsw i32 %2084, 1, !dbg !323
  store i32 %2085, ptr %10, align 4, !dbg !323
  %2086 = load i32, ptr %10, align 4, !dbg !312
  %2087 = load i32, ptr %8, align 4, !dbg !314
  %2088 = icmp slt i32 %2086, %2087, !dbg !315
  br i1 %2088, label %2089, label %5404, !dbg !316

2089:                                             ; preds = %2083
  %2090 = load i32, ptr %10, align 4, !dbg !317
  %2091 = sext i32 %2090 to i64, !dbg !319
  %2092 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2091, !dbg !319
  %2093 = load ptr, ptr %7, align 8, !dbg !320
  %2094 = load i32, ptr %10, align 4, !dbg !321
  %2095 = sext i32 %2094 to i64, !dbg !320
  %2096 = getelementptr inbounds %struct.POINT, ptr %2093, i64 %2095, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2092, ptr align 8 %2096, i64 16, i1 false), !dbg !320
  br label %2097, !dbg !322

2097:                                             ; preds = %2089
  %2098 = load i32, ptr %10, align 4, !dbg !323
  %2099 = add nsw i32 %2098, 1, !dbg !323
  store i32 %2099, ptr %10, align 4, !dbg !323
  %2100 = load i32, ptr %10, align 4, !dbg !312
  %2101 = load i32, ptr %8, align 4, !dbg !314
  %2102 = icmp slt i32 %2100, %2101, !dbg !315
  br i1 %2102, label %2103, label %5404, !dbg !316

2103:                                             ; preds = %2097
  %2104 = load i32, ptr %10, align 4, !dbg !317
  %2105 = sext i32 %2104 to i64, !dbg !319
  %2106 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2105, !dbg !319
  %2107 = load ptr, ptr %7, align 8, !dbg !320
  %2108 = load i32, ptr %10, align 4, !dbg !321
  %2109 = sext i32 %2108 to i64, !dbg !320
  %2110 = getelementptr inbounds %struct.POINT, ptr %2107, i64 %2109, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2106, ptr align 8 %2110, i64 16, i1 false), !dbg !320
  br label %2111, !dbg !322

2111:                                             ; preds = %2103
  %2112 = load i32, ptr %10, align 4, !dbg !323
  %2113 = add nsw i32 %2112, 1, !dbg !323
  store i32 %2113, ptr %10, align 4, !dbg !323
  %2114 = load i32, ptr %10, align 4, !dbg !312
  %2115 = load i32, ptr %8, align 4, !dbg !314
  %2116 = icmp slt i32 %2114, %2115, !dbg !315
  br i1 %2116, label %2117, label %5404, !dbg !316

2117:                                             ; preds = %2111
  %2118 = load i32, ptr %10, align 4, !dbg !317
  %2119 = sext i32 %2118 to i64, !dbg !319
  %2120 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2119, !dbg !319
  %2121 = load ptr, ptr %7, align 8, !dbg !320
  %2122 = load i32, ptr %10, align 4, !dbg !321
  %2123 = sext i32 %2122 to i64, !dbg !320
  %2124 = getelementptr inbounds %struct.POINT, ptr %2121, i64 %2123, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2120, ptr align 8 %2124, i64 16, i1 false), !dbg !320
  br label %2125, !dbg !322

2125:                                             ; preds = %2117
  %2126 = load i32, ptr %10, align 4, !dbg !323
  %2127 = add nsw i32 %2126, 1, !dbg !323
  store i32 %2127, ptr %10, align 4, !dbg !323
  %2128 = load i32, ptr %10, align 4, !dbg !312
  %2129 = load i32, ptr %8, align 4, !dbg !314
  %2130 = icmp slt i32 %2128, %2129, !dbg !315
  br i1 %2130, label %2131, label %5404, !dbg !316

2131:                                             ; preds = %2125
  %2132 = load i32, ptr %10, align 4, !dbg !317
  %2133 = sext i32 %2132 to i64, !dbg !319
  %2134 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2133, !dbg !319
  %2135 = load ptr, ptr %7, align 8, !dbg !320
  %2136 = load i32, ptr %10, align 4, !dbg !321
  %2137 = sext i32 %2136 to i64, !dbg !320
  %2138 = getelementptr inbounds %struct.POINT, ptr %2135, i64 %2137, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2134, ptr align 8 %2138, i64 16, i1 false), !dbg !320
  br label %2139, !dbg !322

2139:                                             ; preds = %2131
  %2140 = load i32, ptr %10, align 4, !dbg !323
  %2141 = add nsw i32 %2140, 1, !dbg !323
  store i32 %2141, ptr %10, align 4, !dbg !323
  %2142 = load i32, ptr %10, align 4, !dbg !312
  %2143 = load i32, ptr %8, align 4, !dbg !314
  %2144 = icmp slt i32 %2142, %2143, !dbg !315
  br i1 %2144, label %2145, label %5404, !dbg !316

2145:                                             ; preds = %2139
  %2146 = load i32, ptr %10, align 4, !dbg !317
  %2147 = sext i32 %2146 to i64, !dbg !319
  %2148 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2147, !dbg !319
  %2149 = load ptr, ptr %7, align 8, !dbg !320
  %2150 = load i32, ptr %10, align 4, !dbg !321
  %2151 = sext i32 %2150 to i64, !dbg !320
  %2152 = getelementptr inbounds %struct.POINT, ptr %2149, i64 %2151, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2148, ptr align 8 %2152, i64 16, i1 false), !dbg !320
  br label %2153, !dbg !322

2153:                                             ; preds = %2145
  %2154 = load i32, ptr %10, align 4, !dbg !323
  %2155 = add nsw i32 %2154, 1, !dbg !323
  store i32 %2155, ptr %10, align 4, !dbg !323
  %2156 = load i32, ptr %10, align 4, !dbg !312
  %2157 = load i32, ptr %8, align 4, !dbg !314
  %2158 = icmp slt i32 %2156, %2157, !dbg !315
  br i1 %2158, label %2159, label %5404, !dbg !316

2159:                                             ; preds = %2153
  %2160 = load i32, ptr %10, align 4, !dbg !317
  %2161 = sext i32 %2160 to i64, !dbg !319
  %2162 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2161, !dbg !319
  %2163 = load ptr, ptr %7, align 8, !dbg !320
  %2164 = load i32, ptr %10, align 4, !dbg !321
  %2165 = sext i32 %2164 to i64, !dbg !320
  %2166 = getelementptr inbounds %struct.POINT, ptr %2163, i64 %2165, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2162, ptr align 8 %2166, i64 16, i1 false), !dbg !320
  br label %2167, !dbg !322

2167:                                             ; preds = %2159
  %2168 = load i32, ptr %10, align 4, !dbg !323
  %2169 = add nsw i32 %2168, 1, !dbg !323
  store i32 %2169, ptr %10, align 4, !dbg !323
  %2170 = load i32, ptr %10, align 4, !dbg !312
  %2171 = load i32, ptr %8, align 4, !dbg !314
  %2172 = icmp slt i32 %2170, %2171, !dbg !315
  br i1 %2172, label %2173, label %5404, !dbg !316

2173:                                             ; preds = %2167
  %2174 = load i32, ptr %10, align 4, !dbg !317
  %2175 = sext i32 %2174 to i64, !dbg !319
  %2176 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2175, !dbg !319
  %2177 = load ptr, ptr %7, align 8, !dbg !320
  %2178 = load i32, ptr %10, align 4, !dbg !321
  %2179 = sext i32 %2178 to i64, !dbg !320
  %2180 = getelementptr inbounds %struct.POINT, ptr %2177, i64 %2179, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2176, ptr align 8 %2180, i64 16, i1 false), !dbg !320
  br label %2181, !dbg !322

2181:                                             ; preds = %2173
  %2182 = load i32, ptr %10, align 4, !dbg !323
  %2183 = add nsw i32 %2182, 1, !dbg !323
  store i32 %2183, ptr %10, align 4, !dbg !323
  %2184 = load i32, ptr %10, align 4, !dbg !312
  %2185 = load i32, ptr %8, align 4, !dbg !314
  %2186 = icmp slt i32 %2184, %2185, !dbg !315
  br i1 %2186, label %2187, label %5404, !dbg !316

2187:                                             ; preds = %2181
  %2188 = load i32, ptr %10, align 4, !dbg !317
  %2189 = sext i32 %2188 to i64, !dbg !319
  %2190 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2189, !dbg !319
  %2191 = load ptr, ptr %7, align 8, !dbg !320
  %2192 = load i32, ptr %10, align 4, !dbg !321
  %2193 = sext i32 %2192 to i64, !dbg !320
  %2194 = getelementptr inbounds %struct.POINT, ptr %2191, i64 %2193, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2190, ptr align 8 %2194, i64 16, i1 false), !dbg !320
  br label %2195, !dbg !322

2195:                                             ; preds = %2187
  %2196 = load i32, ptr %10, align 4, !dbg !323
  %2197 = add nsw i32 %2196, 1, !dbg !323
  store i32 %2197, ptr %10, align 4, !dbg !323
  %2198 = load i32, ptr %10, align 4, !dbg !312
  %2199 = load i32, ptr %8, align 4, !dbg !314
  %2200 = icmp slt i32 %2198, %2199, !dbg !315
  br i1 %2200, label %2201, label %5404, !dbg !316

2201:                                             ; preds = %2195
  %2202 = load i32, ptr %10, align 4, !dbg !317
  %2203 = sext i32 %2202 to i64, !dbg !319
  %2204 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2203, !dbg !319
  %2205 = load ptr, ptr %7, align 8, !dbg !320
  %2206 = load i32, ptr %10, align 4, !dbg !321
  %2207 = sext i32 %2206 to i64, !dbg !320
  %2208 = getelementptr inbounds %struct.POINT, ptr %2205, i64 %2207, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2204, ptr align 8 %2208, i64 16, i1 false), !dbg !320
  br label %2209, !dbg !322

2209:                                             ; preds = %2201
  %2210 = load i32, ptr %10, align 4, !dbg !323
  %2211 = add nsw i32 %2210, 1, !dbg !323
  store i32 %2211, ptr %10, align 4, !dbg !323
  %2212 = load i32, ptr %10, align 4, !dbg !312
  %2213 = load i32, ptr %8, align 4, !dbg !314
  %2214 = icmp slt i32 %2212, %2213, !dbg !315
  br i1 %2214, label %2215, label %5404, !dbg !316

2215:                                             ; preds = %2209
  %2216 = load i32, ptr %10, align 4, !dbg !317
  %2217 = sext i32 %2216 to i64, !dbg !319
  %2218 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2217, !dbg !319
  %2219 = load ptr, ptr %7, align 8, !dbg !320
  %2220 = load i32, ptr %10, align 4, !dbg !321
  %2221 = sext i32 %2220 to i64, !dbg !320
  %2222 = getelementptr inbounds %struct.POINT, ptr %2219, i64 %2221, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2218, ptr align 8 %2222, i64 16, i1 false), !dbg !320
  br label %2223, !dbg !322

2223:                                             ; preds = %2215
  %2224 = load i32, ptr %10, align 4, !dbg !323
  %2225 = add nsw i32 %2224, 1, !dbg !323
  store i32 %2225, ptr %10, align 4, !dbg !323
  %2226 = load i32, ptr %10, align 4, !dbg !312
  %2227 = load i32, ptr %8, align 4, !dbg !314
  %2228 = icmp slt i32 %2226, %2227, !dbg !315
  br i1 %2228, label %2229, label %5404, !dbg !316

2229:                                             ; preds = %2223
  %2230 = load i32, ptr %10, align 4, !dbg !317
  %2231 = sext i32 %2230 to i64, !dbg !319
  %2232 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2231, !dbg !319
  %2233 = load ptr, ptr %7, align 8, !dbg !320
  %2234 = load i32, ptr %10, align 4, !dbg !321
  %2235 = sext i32 %2234 to i64, !dbg !320
  %2236 = getelementptr inbounds %struct.POINT, ptr %2233, i64 %2235, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2232, ptr align 8 %2236, i64 16, i1 false), !dbg !320
  br label %2237, !dbg !322

2237:                                             ; preds = %2229
  %2238 = load i32, ptr %10, align 4, !dbg !323
  %2239 = add nsw i32 %2238, 1, !dbg !323
  store i32 %2239, ptr %10, align 4, !dbg !323
  %2240 = load i32, ptr %10, align 4, !dbg !312
  %2241 = load i32, ptr %8, align 4, !dbg !314
  %2242 = icmp slt i32 %2240, %2241, !dbg !315
  br i1 %2242, label %2243, label %5404, !dbg !316

2243:                                             ; preds = %2237
  %2244 = load i32, ptr %10, align 4, !dbg !317
  %2245 = sext i32 %2244 to i64, !dbg !319
  %2246 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2245, !dbg !319
  %2247 = load ptr, ptr %7, align 8, !dbg !320
  %2248 = load i32, ptr %10, align 4, !dbg !321
  %2249 = sext i32 %2248 to i64, !dbg !320
  %2250 = getelementptr inbounds %struct.POINT, ptr %2247, i64 %2249, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2246, ptr align 8 %2250, i64 16, i1 false), !dbg !320
  br label %2251, !dbg !322

2251:                                             ; preds = %2243
  %2252 = load i32, ptr %10, align 4, !dbg !323
  %2253 = add nsw i32 %2252, 1, !dbg !323
  store i32 %2253, ptr %10, align 4, !dbg !323
  %2254 = load i32, ptr %10, align 4, !dbg !312
  %2255 = load i32, ptr %8, align 4, !dbg !314
  %2256 = icmp slt i32 %2254, %2255, !dbg !315
  br i1 %2256, label %2257, label %5404, !dbg !316

2257:                                             ; preds = %2251
  %2258 = load i32, ptr %10, align 4, !dbg !317
  %2259 = sext i32 %2258 to i64, !dbg !319
  %2260 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2259, !dbg !319
  %2261 = load ptr, ptr %7, align 8, !dbg !320
  %2262 = load i32, ptr %10, align 4, !dbg !321
  %2263 = sext i32 %2262 to i64, !dbg !320
  %2264 = getelementptr inbounds %struct.POINT, ptr %2261, i64 %2263, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2260, ptr align 8 %2264, i64 16, i1 false), !dbg !320
  br label %2265, !dbg !322

2265:                                             ; preds = %2257
  %2266 = load i32, ptr %10, align 4, !dbg !323
  %2267 = add nsw i32 %2266, 1, !dbg !323
  store i32 %2267, ptr %10, align 4, !dbg !323
  %2268 = load i32, ptr %10, align 4, !dbg !312
  %2269 = load i32, ptr %8, align 4, !dbg !314
  %2270 = icmp slt i32 %2268, %2269, !dbg !315
  br i1 %2270, label %2271, label %5404, !dbg !316

2271:                                             ; preds = %2265
  %2272 = load i32, ptr %10, align 4, !dbg !317
  %2273 = sext i32 %2272 to i64, !dbg !319
  %2274 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2273, !dbg !319
  %2275 = load ptr, ptr %7, align 8, !dbg !320
  %2276 = load i32, ptr %10, align 4, !dbg !321
  %2277 = sext i32 %2276 to i64, !dbg !320
  %2278 = getelementptr inbounds %struct.POINT, ptr %2275, i64 %2277, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2274, ptr align 8 %2278, i64 16, i1 false), !dbg !320
  br label %2279, !dbg !322

2279:                                             ; preds = %2271
  %2280 = load i32, ptr %10, align 4, !dbg !323
  %2281 = add nsw i32 %2280, 1, !dbg !323
  store i32 %2281, ptr %10, align 4, !dbg !323
  %2282 = load i32, ptr %10, align 4, !dbg !312
  %2283 = load i32, ptr %8, align 4, !dbg !314
  %2284 = icmp slt i32 %2282, %2283, !dbg !315
  br i1 %2284, label %2285, label %5404, !dbg !316

2285:                                             ; preds = %2279
  %2286 = load i32, ptr %10, align 4, !dbg !317
  %2287 = sext i32 %2286 to i64, !dbg !319
  %2288 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2287, !dbg !319
  %2289 = load ptr, ptr %7, align 8, !dbg !320
  %2290 = load i32, ptr %10, align 4, !dbg !321
  %2291 = sext i32 %2290 to i64, !dbg !320
  %2292 = getelementptr inbounds %struct.POINT, ptr %2289, i64 %2291, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2288, ptr align 8 %2292, i64 16, i1 false), !dbg !320
  br label %2293, !dbg !322

2293:                                             ; preds = %2285
  %2294 = load i32, ptr %10, align 4, !dbg !323
  %2295 = add nsw i32 %2294, 1, !dbg !323
  store i32 %2295, ptr %10, align 4, !dbg !323
  %2296 = load i32, ptr %10, align 4, !dbg !312
  %2297 = load i32, ptr %8, align 4, !dbg !314
  %2298 = icmp slt i32 %2296, %2297, !dbg !315
  br i1 %2298, label %2299, label %5404, !dbg !316

2299:                                             ; preds = %2293
  %2300 = load i32, ptr %10, align 4, !dbg !317
  %2301 = sext i32 %2300 to i64, !dbg !319
  %2302 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2301, !dbg !319
  %2303 = load ptr, ptr %7, align 8, !dbg !320
  %2304 = load i32, ptr %10, align 4, !dbg !321
  %2305 = sext i32 %2304 to i64, !dbg !320
  %2306 = getelementptr inbounds %struct.POINT, ptr %2303, i64 %2305, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2302, ptr align 8 %2306, i64 16, i1 false), !dbg !320
  br label %2307, !dbg !322

2307:                                             ; preds = %2299
  %2308 = load i32, ptr %10, align 4, !dbg !323
  %2309 = add nsw i32 %2308, 1, !dbg !323
  store i32 %2309, ptr %10, align 4, !dbg !323
  %2310 = load i32, ptr %10, align 4, !dbg !312
  %2311 = load i32, ptr %8, align 4, !dbg !314
  %2312 = icmp slt i32 %2310, %2311, !dbg !315
  br i1 %2312, label %2313, label %5404, !dbg !316

2313:                                             ; preds = %2307
  %2314 = load i32, ptr %10, align 4, !dbg !317
  %2315 = sext i32 %2314 to i64, !dbg !319
  %2316 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2315, !dbg !319
  %2317 = load ptr, ptr %7, align 8, !dbg !320
  %2318 = load i32, ptr %10, align 4, !dbg !321
  %2319 = sext i32 %2318 to i64, !dbg !320
  %2320 = getelementptr inbounds %struct.POINT, ptr %2317, i64 %2319, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2316, ptr align 8 %2320, i64 16, i1 false), !dbg !320
  br label %2321, !dbg !322

2321:                                             ; preds = %2313
  %2322 = load i32, ptr %10, align 4, !dbg !323
  %2323 = add nsw i32 %2322, 1, !dbg !323
  store i32 %2323, ptr %10, align 4, !dbg !323
  %2324 = load i32, ptr %10, align 4, !dbg !312
  %2325 = load i32, ptr %8, align 4, !dbg !314
  %2326 = icmp slt i32 %2324, %2325, !dbg !315
  br i1 %2326, label %2327, label %5404, !dbg !316

2327:                                             ; preds = %2321
  %2328 = load i32, ptr %10, align 4, !dbg !317
  %2329 = sext i32 %2328 to i64, !dbg !319
  %2330 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2329, !dbg !319
  %2331 = load ptr, ptr %7, align 8, !dbg !320
  %2332 = load i32, ptr %10, align 4, !dbg !321
  %2333 = sext i32 %2332 to i64, !dbg !320
  %2334 = getelementptr inbounds %struct.POINT, ptr %2331, i64 %2333, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2330, ptr align 8 %2334, i64 16, i1 false), !dbg !320
  br label %2335, !dbg !322

2335:                                             ; preds = %2327
  %2336 = load i32, ptr %10, align 4, !dbg !323
  %2337 = add nsw i32 %2336, 1, !dbg !323
  store i32 %2337, ptr %10, align 4, !dbg !323
  %2338 = load i32, ptr %10, align 4, !dbg !312
  %2339 = load i32, ptr %8, align 4, !dbg !314
  %2340 = icmp slt i32 %2338, %2339, !dbg !315
  br i1 %2340, label %2341, label %5404, !dbg !316

2341:                                             ; preds = %2335
  %2342 = load i32, ptr %10, align 4, !dbg !317
  %2343 = sext i32 %2342 to i64, !dbg !319
  %2344 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2343, !dbg !319
  %2345 = load ptr, ptr %7, align 8, !dbg !320
  %2346 = load i32, ptr %10, align 4, !dbg !321
  %2347 = sext i32 %2346 to i64, !dbg !320
  %2348 = getelementptr inbounds %struct.POINT, ptr %2345, i64 %2347, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2344, ptr align 8 %2348, i64 16, i1 false), !dbg !320
  br label %2349, !dbg !322

2349:                                             ; preds = %2341
  %2350 = load i32, ptr %10, align 4, !dbg !323
  %2351 = add nsw i32 %2350, 1, !dbg !323
  store i32 %2351, ptr %10, align 4, !dbg !323
  %2352 = load i32, ptr %10, align 4, !dbg !312
  %2353 = load i32, ptr %8, align 4, !dbg !314
  %2354 = icmp slt i32 %2352, %2353, !dbg !315
  br i1 %2354, label %2355, label %5404, !dbg !316

2355:                                             ; preds = %2349
  %2356 = load i32, ptr %10, align 4, !dbg !317
  %2357 = sext i32 %2356 to i64, !dbg !319
  %2358 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2357, !dbg !319
  %2359 = load ptr, ptr %7, align 8, !dbg !320
  %2360 = load i32, ptr %10, align 4, !dbg !321
  %2361 = sext i32 %2360 to i64, !dbg !320
  %2362 = getelementptr inbounds %struct.POINT, ptr %2359, i64 %2361, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2358, ptr align 8 %2362, i64 16, i1 false), !dbg !320
  br label %2363, !dbg !322

2363:                                             ; preds = %2355
  %2364 = load i32, ptr %10, align 4, !dbg !323
  %2365 = add nsw i32 %2364, 1, !dbg !323
  store i32 %2365, ptr %10, align 4, !dbg !323
  %2366 = load i32, ptr %10, align 4, !dbg !312
  %2367 = load i32, ptr %8, align 4, !dbg !314
  %2368 = icmp slt i32 %2366, %2367, !dbg !315
  br i1 %2368, label %2369, label %5404, !dbg !316

2369:                                             ; preds = %2363
  %2370 = load i32, ptr %10, align 4, !dbg !317
  %2371 = sext i32 %2370 to i64, !dbg !319
  %2372 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2371, !dbg !319
  %2373 = load ptr, ptr %7, align 8, !dbg !320
  %2374 = load i32, ptr %10, align 4, !dbg !321
  %2375 = sext i32 %2374 to i64, !dbg !320
  %2376 = getelementptr inbounds %struct.POINT, ptr %2373, i64 %2375, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2372, ptr align 8 %2376, i64 16, i1 false), !dbg !320
  br label %2377, !dbg !322

2377:                                             ; preds = %2369
  %2378 = load i32, ptr %10, align 4, !dbg !323
  %2379 = add nsw i32 %2378, 1, !dbg !323
  store i32 %2379, ptr %10, align 4, !dbg !323
  %2380 = load i32, ptr %10, align 4, !dbg !312
  %2381 = load i32, ptr %8, align 4, !dbg !314
  %2382 = icmp slt i32 %2380, %2381, !dbg !315
  br i1 %2382, label %2383, label %5404, !dbg !316

2383:                                             ; preds = %2377
  %2384 = load i32, ptr %10, align 4, !dbg !317
  %2385 = sext i32 %2384 to i64, !dbg !319
  %2386 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2385, !dbg !319
  %2387 = load ptr, ptr %7, align 8, !dbg !320
  %2388 = load i32, ptr %10, align 4, !dbg !321
  %2389 = sext i32 %2388 to i64, !dbg !320
  %2390 = getelementptr inbounds %struct.POINT, ptr %2387, i64 %2389, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2386, ptr align 8 %2390, i64 16, i1 false), !dbg !320
  br label %2391, !dbg !322

2391:                                             ; preds = %2383
  %2392 = load i32, ptr %10, align 4, !dbg !323
  %2393 = add nsw i32 %2392, 1, !dbg !323
  store i32 %2393, ptr %10, align 4, !dbg !323
  %2394 = load i32, ptr %10, align 4, !dbg !312
  %2395 = load i32, ptr %8, align 4, !dbg !314
  %2396 = icmp slt i32 %2394, %2395, !dbg !315
  br i1 %2396, label %2397, label %5404, !dbg !316

2397:                                             ; preds = %2391
  %2398 = load i32, ptr %10, align 4, !dbg !317
  %2399 = sext i32 %2398 to i64, !dbg !319
  %2400 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2399, !dbg !319
  %2401 = load ptr, ptr %7, align 8, !dbg !320
  %2402 = load i32, ptr %10, align 4, !dbg !321
  %2403 = sext i32 %2402 to i64, !dbg !320
  %2404 = getelementptr inbounds %struct.POINT, ptr %2401, i64 %2403, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2400, ptr align 8 %2404, i64 16, i1 false), !dbg !320
  br label %2405, !dbg !322

2405:                                             ; preds = %2397
  %2406 = load i32, ptr %10, align 4, !dbg !323
  %2407 = add nsw i32 %2406, 1, !dbg !323
  store i32 %2407, ptr %10, align 4, !dbg !323
  %2408 = load i32, ptr %10, align 4, !dbg !312
  %2409 = load i32, ptr %8, align 4, !dbg !314
  %2410 = icmp slt i32 %2408, %2409, !dbg !315
  br i1 %2410, label %2411, label %5404, !dbg !316

2411:                                             ; preds = %2405
  %2412 = load i32, ptr %10, align 4, !dbg !317
  %2413 = sext i32 %2412 to i64, !dbg !319
  %2414 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2413, !dbg !319
  %2415 = load ptr, ptr %7, align 8, !dbg !320
  %2416 = load i32, ptr %10, align 4, !dbg !321
  %2417 = sext i32 %2416 to i64, !dbg !320
  %2418 = getelementptr inbounds %struct.POINT, ptr %2415, i64 %2417, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2414, ptr align 8 %2418, i64 16, i1 false), !dbg !320
  br label %2419, !dbg !322

2419:                                             ; preds = %2411
  %2420 = load i32, ptr %10, align 4, !dbg !323
  %2421 = add nsw i32 %2420, 1, !dbg !323
  store i32 %2421, ptr %10, align 4, !dbg !323
  %2422 = load i32, ptr %10, align 4, !dbg !312
  %2423 = load i32, ptr %8, align 4, !dbg !314
  %2424 = icmp slt i32 %2422, %2423, !dbg !315
  br i1 %2424, label %2425, label %5404, !dbg !316

2425:                                             ; preds = %2419
  %2426 = load i32, ptr %10, align 4, !dbg !317
  %2427 = sext i32 %2426 to i64, !dbg !319
  %2428 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2427, !dbg !319
  %2429 = load ptr, ptr %7, align 8, !dbg !320
  %2430 = load i32, ptr %10, align 4, !dbg !321
  %2431 = sext i32 %2430 to i64, !dbg !320
  %2432 = getelementptr inbounds %struct.POINT, ptr %2429, i64 %2431, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2428, ptr align 8 %2432, i64 16, i1 false), !dbg !320
  br label %2433, !dbg !322

2433:                                             ; preds = %2425
  %2434 = load i32, ptr %10, align 4, !dbg !323
  %2435 = add nsw i32 %2434, 1, !dbg !323
  store i32 %2435, ptr %10, align 4, !dbg !323
  %2436 = load i32, ptr %10, align 4, !dbg !312
  %2437 = load i32, ptr %8, align 4, !dbg !314
  %2438 = icmp slt i32 %2436, %2437, !dbg !315
  br i1 %2438, label %2439, label %5404, !dbg !316

2439:                                             ; preds = %2433
  %2440 = load i32, ptr %10, align 4, !dbg !317
  %2441 = sext i32 %2440 to i64, !dbg !319
  %2442 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2441, !dbg !319
  %2443 = load ptr, ptr %7, align 8, !dbg !320
  %2444 = load i32, ptr %10, align 4, !dbg !321
  %2445 = sext i32 %2444 to i64, !dbg !320
  %2446 = getelementptr inbounds %struct.POINT, ptr %2443, i64 %2445, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2442, ptr align 8 %2446, i64 16, i1 false), !dbg !320
  br label %2447, !dbg !322

2447:                                             ; preds = %2439
  %2448 = load i32, ptr %10, align 4, !dbg !323
  %2449 = add nsw i32 %2448, 1, !dbg !323
  store i32 %2449, ptr %10, align 4, !dbg !323
  %2450 = load i32, ptr %10, align 4, !dbg !312
  %2451 = load i32, ptr %8, align 4, !dbg !314
  %2452 = icmp slt i32 %2450, %2451, !dbg !315
  br i1 %2452, label %2453, label %5404, !dbg !316

2453:                                             ; preds = %2447
  %2454 = load i32, ptr %10, align 4, !dbg !317
  %2455 = sext i32 %2454 to i64, !dbg !319
  %2456 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2455, !dbg !319
  %2457 = load ptr, ptr %7, align 8, !dbg !320
  %2458 = load i32, ptr %10, align 4, !dbg !321
  %2459 = sext i32 %2458 to i64, !dbg !320
  %2460 = getelementptr inbounds %struct.POINT, ptr %2457, i64 %2459, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2456, ptr align 8 %2460, i64 16, i1 false), !dbg !320
  br label %2461, !dbg !322

2461:                                             ; preds = %2453
  %2462 = load i32, ptr %10, align 4, !dbg !323
  %2463 = add nsw i32 %2462, 1, !dbg !323
  store i32 %2463, ptr %10, align 4, !dbg !323
  %2464 = load i32, ptr %10, align 4, !dbg !312
  %2465 = load i32, ptr %8, align 4, !dbg !314
  %2466 = icmp slt i32 %2464, %2465, !dbg !315
  br i1 %2466, label %2467, label %5404, !dbg !316

2467:                                             ; preds = %2461
  %2468 = load i32, ptr %10, align 4, !dbg !317
  %2469 = sext i32 %2468 to i64, !dbg !319
  %2470 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2469, !dbg !319
  %2471 = load ptr, ptr %7, align 8, !dbg !320
  %2472 = load i32, ptr %10, align 4, !dbg !321
  %2473 = sext i32 %2472 to i64, !dbg !320
  %2474 = getelementptr inbounds %struct.POINT, ptr %2471, i64 %2473, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2470, ptr align 8 %2474, i64 16, i1 false), !dbg !320
  br label %2475, !dbg !322

2475:                                             ; preds = %2467
  %2476 = load i32, ptr %10, align 4, !dbg !323
  %2477 = add nsw i32 %2476, 1, !dbg !323
  store i32 %2477, ptr %10, align 4, !dbg !323
  %2478 = load i32, ptr %10, align 4, !dbg !312
  %2479 = load i32, ptr %8, align 4, !dbg !314
  %2480 = icmp slt i32 %2478, %2479, !dbg !315
  br i1 %2480, label %2481, label %5404, !dbg !316

2481:                                             ; preds = %2475
  %2482 = load i32, ptr %10, align 4, !dbg !317
  %2483 = sext i32 %2482 to i64, !dbg !319
  %2484 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2483, !dbg !319
  %2485 = load ptr, ptr %7, align 8, !dbg !320
  %2486 = load i32, ptr %10, align 4, !dbg !321
  %2487 = sext i32 %2486 to i64, !dbg !320
  %2488 = getelementptr inbounds %struct.POINT, ptr %2485, i64 %2487, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2484, ptr align 8 %2488, i64 16, i1 false), !dbg !320
  br label %2489, !dbg !322

2489:                                             ; preds = %2481
  %2490 = load i32, ptr %10, align 4, !dbg !323
  %2491 = add nsw i32 %2490, 1, !dbg !323
  store i32 %2491, ptr %10, align 4, !dbg !323
  %2492 = load i32, ptr %10, align 4, !dbg !312
  %2493 = load i32, ptr %8, align 4, !dbg !314
  %2494 = icmp slt i32 %2492, %2493, !dbg !315
  br i1 %2494, label %2495, label %5404, !dbg !316

2495:                                             ; preds = %2489
  %2496 = load i32, ptr %10, align 4, !dbg !317
  %2497 = sext i32 %2496 to i64, !dbg !319
  %2498 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2497, !dbg !319
  %2499 = load ptr, ptr %7, align 8, !dbg !320
  %2500 = load i32, ptr %10, align 4, !dbg !321
  %2501 = sext i32 %2500 to i64, !dbg !320
  %2502 = getelementptr inbounds %struct.POINT, ptr %2499, i64 %2501, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2498, ptr align 8 %2502, i64 16, i1 false), !dbg !320
  br label %2503, !dbg !322

2503:                                             ; preds = %2495
  %2504 = load i32, ptr %10, align 4, !dbg !323
  %2505 = add nsw i32 %2504, 1, !dbg !323
  store i32 %2505, ptr %10, align 4, !dbg !323
  %2506 = load i32, ptr %10, align 4, !dbg !312
  %2507 = load i32, ptr %8, align 4, !dbg !314
  %2508 = icmp slt i32 %2506, %2507, !dbg !315
  br i1 %2508, label %2509, label %5404, !dbg !316

2509:                                             ; preds = %2503
  %2510 = load i32, ptr %10, align 4, !dbg !317
  %2511 = sext i32 %2510 to i64, !dbg !319
  %2512 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2511, !dbg !319
  %2513 = load ptr, ptr %7, align 8, !dbg !320
  %2514 = load i32, ptr %10, align 4, !dbg !321
  %2515 = sext i32 %2514 to i64, !dbg !320
  %2516 = getelementptr inbounds %struct.POINT, ptr %2513, i64 %2515, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2512, ptr align 8 %2516, i64 16, i1 false), !dbg !320
  br label %2517, !dbg !322

2517:                                             ; preds = %2509
  %2518 = load i32, ptr %10, align 4, !dbg !323
  %2519 = add nsw i32 %2518, 1, !dbg !323
  store i32 %2519, ptr %10, align 4, !dbg !323
  %2520 = load i32, ptr %10, align 4, !dbg !312
  %2521 = load i32, ptr %8, align 4, !dbg !314
  %2522 = icmp slt i32 %2520, %2521, !dbg !315
  br i1 %2522, label %2523, label %5404, !dbg !316

2523:                                             ; preds = %2517
  %2524 = load i32, ptr %10, align 4, !dbg !317
  %2525 = sext i32 %2524 to i64, !dbg !319
  %2526 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2525, !dbg !319
  %2527 = load ptr, ptr %7, align 8, !dbg !320
  %2528 = load i32, ptr %10, align 4, !dbg !321
  %2529 = sext i32 %2528 to i64, !dbg !320
  %2530 = getelementptr inbounds %struct.POINT, ptr %2527, i64 %2529, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2526, ptr align 8 %2530, i64 16, i1 false), !dbg !320
  br label %2531, !dbg !322

2531:                                             ; preds = %2523
  %2532 = load i32, ptr %10, align 4, !dbg !323
  %2533 = add nsw i32 %2532, 1, !dbg !323
  store i32 %2533, ptr %10, align 4, !dbg !323
  %2534 = load i32, ptr %10, align 4, !dbg !312
  %2535 = load i32, ptr %8, align 4, !dbg !314
  %2536 = icmp slt i32 %2534, %2535, !dbg !315
  br i1 %2536, label %2537, label %5404, !dbg !316

2537:                                             ; preds = %2531
  %2538 = load i32, ptr %10, align 4, !dbg !317
  %2539 = sext i32 %2538 to i64, !dbg !319
  %2540 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2539, !dbg !319
  %2541 = load ptr, ptr %7, align 8, !dbg !320
  %2542 = load i32, ptr %10, align 4, !dbg !321
  %2543 = sext i32 %2542 to i64, !dbg !320
  %2544 = getelementptr inbounds %struct.POINT, ptr %2541, i64 %2543, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2540, ptr align 8 %2544, i64 16, i1 false), !dbg !320
  br label %2545, !dbg !322

2545:                                             ; preds = %2537
  %2546 = load i32, ptr %10, align 4, !dbg !323
  %2547 = add nsw i32 %2546, 1, !dbg !323
  store i32 %2547, ptr %10, align 4, !dbg !323
  %2548 = load i32, ptr %10, align 4, !dbg !312
  %2549 = load i32, ptr %8, align 4, !dbg !314
  %2550 = icmp slt i32 %2548, %2549, !dbg !315
  br i1 %2550, label %2551, label %5404, !dbg !316

2551:                                             ; preds = %2545
  %2552 = load i32, ptr %10, align 4, !dbg !317
  %2553 = sext i32 %2552 to i64, !dbg !319
  %2554 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2553, !dbg !319
  %2555 = load ptr, ptr %7, align 8, !dbg !320
  %2556 = load i32, ptr %10, align 4, !dbg !321
  %2557 = sext i32 %2556 to i64, !dbg !320
  %2558 = getelementptr inbounds %struct.POINT, ptr %2555, i64 %2557, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2554, ptr align 8 %2558, i64 16, i1 false), !dbg !320
  br label %2559, !dbg !322

2559:                                             ; preds = %2551
  %2560 = load i32, ptr %10, align 4, !dbg !323
  %2561 = add nsw i32 %2560, 1, !dbg !323
  store i32 %2561, ptr %10, align 4, !dbg !323
  %2562 = load i32, ptr %10, align 4, !dbg !312
  %2563 = load i32, ptr %8, align 4, !dbg !314
  %2564 = icmp slt i32 %2562, %2563, !dbg !315
  br i1 %2564, label %2565, label %5404, !dbg !316

2565:                                             ; preds = %2559
  %2566 = load i32, ptr %10, align 4, !dbg !317
  %2567 = sext i32 %2566 to i64, !dbg !319
  %2568 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2567, !dbg !319
  %2569 = load ptr, ptr %7, align 8, !dbg !320
  %2570 = load i32, ptr %10, align 4, !dbg !321
  %2571 = sext i32 %2570 to i64, !dbg !320
  %2572 = getelementptr inbounds %struct.POINT, ptr %2569, i64 %2571, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2568, ptr align 8 %2572, i64 16, i1 false), !dbg !320
  br label %2573, !dbg !322

2573:                                             ; preds = %2565
  %2574 = load i32, ptr %10, align 4, !dbg !323
  %2575 = add nsw i32 %2574, 1, !dbg !323
  store i32 %2575, ptr %10, align 4, !dbg !323
  %2576 = load i32, ptr %10, align 4, !dbg !312
  %2577 = load i32, ptr %8, align 4, !dbg !314
  %2578 = icmp slt i32 %2576, %2577, !dbg !315
  br i1 %2578, label %2579, label %5404, !dbg !316

2579:                                             ; preds = %2573
  %2580 = load i32, ptr %10, align 4, !dbg !317
  %2581 = sext i32 %2580 to i64, !dbg !319
  %2582 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2581, !dbg !319
  %2583 = load ptr, ptr %7, align 8, !dbg !320
  %2584 = load i32, ptr %10, align 4, !dbg !321
  %2585 = sext i32 %2584 to i64, !dbg !320
  %2586 = getelementptr inbounds %struct.POINT, ptr %2583, i64 %2585, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2582, ptr align 8 %2586, i64 16, i1 false), !dbg !320
  br label %2587, !dbg !322

2587:                                             ; preds = %2579
  %2588 = load i32, ptr %10, align 4, !dbg !323
  %2589 = add nsw i32 %2588, 1, !dbg !323
  store i32 %2589, ptr %10, align 4, !dbg !323
  %2590 = load i32, ptr %10, align 4, !dbg !312
  %2591 = load i32, ptr %8, align 4, !dbg !314
  %2592 = icmp slt i32 %2590, %2591, !dbg !315
  br i1 %2592, label %2593, label %5404, !dbg !316

2593:                                             ; preds = %2587
  %2594 = load i32, ptr %10, align 4, !dbg !317
  %2595 = sext i32 %2594 to i64, !dbg !319
  %2596 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2595, !dbg !319
  %2597 = load ptr, ptr %7, align 8, !dbg !320
  %2598 = load i32, ptr %10, align 4, !dbg !321
  %2599 = sext i32 %2598 to i64, !dbg !320
  %2600 = getelementptr inbounds %struct.POINT, ptr %2597, i64 %2599, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2596, ptr align 8 %2600, i64 16, i1 false), !dbg !320
  br label %2601, !dbg !322

2601:                                             ; preds = %2593
  %2602 = load i32, ptr %10, align 4, !dbg !323
  %2603 = add nsw i32 %2602, 1, !dbg !323
  store i32 %2603, ptr %10, align 4, !dbg !323
  %2604 = load i32, ptr %10, align 4, !dbg !312
  %2605 = load i32, ptr %8, align 4, !dbg !314
  %2606 = icmp slt i32 %2604, %2605, !dbg !315
  br i1 %2606, label %2607, label %5404, !dbg !316

2607:                                             ; preds = %2601
  %2608 = load i32, ptr %10, align 4, !dbg !317
  %2609 = sext i32 %2608 to i64, !dbg !319
  %2610 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2609, !dbg !319
  %2611 = load ptr, ptr %7, align 8, !dbg !320
  %2612 = load i32, ptr %10, align 4, !dbg !321
  %2613 = sext i32 %2612 to i64, !dbg !320
  %2614 = getelementptr inbounds %struct.POINT, ptr %2611, i64 %2613, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2610, ptr align 8 %2614, i64 16, i1 false), !dbg !320
  br label %2615, !dbg !322

2615:                                             ; preds = %2607
  %2616 = load i32, ptr %10, align 4, !dbg !323
  %2617 = add nsw i32 %2616, 1, !dbg !323
  store i32 %2617, ptr %10, align 4, !dbg !323
  %2618 = load i32, ptr %10, align 4, !dbg !312
  %2619 = load i32, ptr %8, align 4, !dbg !314
  %2620 = icmp slt i32 %2618, %2619, !dbg !315
  br i1 %2620, label %2621, label %5404, !dbg !316

2621:                                             ; preds = %2615
  %2622 = load i32, ptr %10, align 4, !dbg !317
  %2623 = sext i32 %2622 to i64, !dbg !319
  %2624 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2623, !dbg !319
  %2625 = load ptr, ptr %7, align 8, !dbg !320
  %2626 = load i32, ptr %10, align 4, !dbg !321
  %2627 = sext i32 %2626 to i64, !dbg !320
  %2628 = getelementptr inbounds %struct.POINT, ptr %2625, i64 %2627, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2624, ptr align 8 %2628, i64 16, i1 false), !dbg !320
  br label %2629, !dbg !322

2629:                                             ; preds = %2621
  %2630 = load i32, ptr %10, align 4, !dbg !323
  %2631 = add nsw i32 %2630, 1, !dbg !323
  store i32 %2631, ptr %10, align 4, !dbg !323
  %2632 = load i32, ptr %10, align 4, !dbg !312
  %2633 = load i32, ptr %8, align 4, !dbg !314
  %2634 = icmp slt i32 %2632, %2633, !dbg !315
  br i1 %2634, label %2635, label %5404, !dbg !316

2635:                                             ; preds = %2629
  %2636 = load i32, ptr %10, align 4, !dbg !317
  %2637 = sext i32 %2636 to i64, !dbg !319
  %2638 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2637, !dbg !319
  %2639 = load ptr, ptr %7, align 8, !dbg !320
  %2640 = load i32, ptr %10, align 4, !dbg !321
  %2641 = sext i32 %2640 to i64, !dbg !320
  %2642 = getelementptr inbounds %struct.POINT, ptr %2639, i64 %2641, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2638, ptr align 8 %2642, i64 16, i1 false), !dbg !320
  br label %2643, !dbg !322

2643:                                             ; preds = %2635
  %2644 = load i32, ptr %10, align 4, !dbg !323
  %2645 = add nsw i32 %2644, 1, !dbg !323
  store i32 %2645, ptr %10, align 4, !dbg !323
  %2646 = load i32, ptr %10, align 4, !dbg !312
  %2647 = load i32, ptr %8, align 4, !dbg !314
  %2648 = icmp slt i32 %2646, %2647, !dbg !315
  br i1 %2648, label %2649, label %5404, !dbg !316

2649:                                             ; preds = %2643
  %2650 = load i32, ptr %10, align 4, !dbg !317
  %2651 = sext i32 %2650 to i64, !dbg !319
  %2652 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2651, !dbg !319
  %2653 = load ptr, ptr %7, align 8, !dbg !320
  %2654 = load i32, ptr %10, align 4, !dbg !321
  %2655 = sext i32 %2654 to i64, !dbg !320
  %2656 = getelementptr inbounds %struct.POINT, ptr %2653, i64 %2655, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2652, ptr align 8 %2656, i64 16, i1 false), !dbg !320
  br label %2657, !dbg !322

2657:                                             ; preds = %2649
  %2658 = load i32, ptr %10, align 4, !dbg !323
  %2659 = add nsw i32 %2658, 1, !dbg !323
  store i32 %2659, ptr %10, align 4, !dbg !323
  %2660 = load i32, ptr %10, align 4, !dbg !312
  %2661 = load i32, ptr %8, align 4, !dbg !314
  %2662 = icmp slt i32 %2660, %2661, !dbg !315
  br i1 %2662, label %2663, label %5404, !dbg !316

2663:                                             ; preds = %2657
  %2664 = load i32, ptr %10, align 4, !dbg !317
  %2665 = sext i32 %2664 to i64, !dbg !319
  %2666 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2665, !dbg !319
  %2667 = load ptr, ptr %7, align 8, !dbg !320
  %2668 = load i32, ptr %10, align 4, !dbg !321
  %2669 = sext i32 %2668 to i64, !dbg !320
  %2670 = getelementptr inbounds %struct.POINT, ptr %2667, i64 %2669, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2666, ptr align 8 %2670, i64 16, i1 false), !dbg !320
  br label %2671, !dbg !322

2671:                                             ; preds = %2663
  %2672 = load i32, ptr %10, align 4, !dbg !323
  %2673 = add nsw i32 %2672, 1, !dbg !323
  store i32 %2673, ptr %10, align 4, !dbg !323
  %2674 = load i32, ptr %10, align 4, !dbg !312
  %2675 = load i32, ptr %8, align 4, !dbg !314
  %2676 = icmp slt i32 %2674, %2675, !dbg !315
  br i1 %2676, label %2677, label %5404, !dbg !316

2677:                                             ; preds = %2671
  %2678 = load i32, ptr %10, align 4, !dbg !317
  %2679 = sext i32 %2678 to i64, !dbg !319
  %2680 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2679, !dbg !319
  %2681 = load ptr, ptr %7, align 8, !dbg !320
  %2682 = load i32, ptr %10, align 4, !dbg !321
  %2683 = sext i32 %2682 to i64, !dbg !320
  %2684 = getelementptr inbounds %struct.POINT, ptr %2681, i64 %2683, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2680, ptr align 8 %2684, i64 16, i1 false), !dbg !320
  br label %2685, !dbg !322

2685:                                             ; preds = %2677
  %2686 = load i32, ptr %10, align 4, !dbg !323
  %2687 = add nsw i32 %2686, 1, !dbg !323
  store i32 %2687, ptr %10, align 4, !dbg !323
  %2688 = load i32, ptr %10, align 4, !dbg !312
  %2689 = load i32, ptr %8, align 4, !dbg !314
  %2690 = icmp slt i32 %2688, %2689, !dbg !315
  br i1 %2690, label %2691, label %5404, !dbg !316

2691:                                             ; preds = %2685
  %2692 = load i32, ptr %10, align 4, !dbg !317
  %2693 = sext i32 %2692 to i64, !dbg !319
  %2694 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2693, !dbg !319
  %2695 = load ptr, ptr %7, align 8, !dbg !320
  %2696 = load i32, ptr %10, align 4, !dbg !321
  %2697 = sext i32 %2696 to i64, !dbg !320
  %2698 = getelementptr inbounds %struct.POINT, ptr %2695, i64 %2697, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2694, ptr align 8 %2698, i64 16, i1 false), !dbg !320
  br label %2699, !dbg !322

2699:                                             ; preds = %2691
  %2700 = load i32, ptr %10, align 4, !dbg !323
  %2701 = add nsw i32 %2700, 1, !dbg !323
  store i32 %2701, ptr %10, align 4, !dbg !323
  %2702 = load i32, ptr %10, align 4, !dbg !312
  %2703 = load i32, ptr %8, align 4, !dbg !314
  %2704 = icmp slt i32 %2702, %2703, !dbg !315
  br i1 %2704, label %2705, label %5404, !dbg !316

2705:                                             ; preds = %2699
  %2706 = load i32, ptr %10, align 4, !dbg !317
  %2707 = sext i32 %2706 to i64, !dbg !319
  %2708 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2707, !dbg !319
  %2709 = load ptr, ptr %7, align 8, !dbg !320
  %2710 = load i32, ptr %10, align 4, !dbg !321
  %2711 = sext i32 %2710 to i64, !dbg !320
  %2712 = getelementptr inbounds %struct.POINT, ptr %2709, i64 %2711, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2708, ptr align 8 %2712, i64 16, i1 false), !dbg !320
  br label %2713, !dbg !322

2713:                                             ; preds = %2705
  %2714 = load i32, ptr %10, align 4, !dbg !323
  %2715 = add nsw i32 %2714, 1, !dbg !323
  store i32 %2715, ptr %10, align 4, !dbg !323
  %2716 = load i32, ptr %10, align 4, !dbg !312
  %2717 = load i32, ptr %8, align 4, !dbg !314
  %2718 = icmp slt i32 %2716, %2717, !dbg !315
  br i1 %2718, label %2719, label %5404, !dbg !316

2719:                                             ; preds = %2713
  %2720 = load i32, ptr %10, align 4, !dbg !317
  %2721 = sext i32 %2720 to i64, !dbg !319
  %2722 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2721, !dbg !319
  %2723 = load ptr, ptr %7, align 8, !dbg !320
  %2724 = load i32, ptr %10, align 4, !dbg !321
  %2725 = sext i32 %2724 to i64, !dbg !320
  %2726 = getelementptr inbounds %struct.POINT, ptr %2723, i64 %2725, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2722, ptr align 8 %2726, i64 16, i1 false), !dbg !320
  br label %2727, !dbg !322

2727:                                             ; preds = %2719
  %2728 = load i32, ptr %10, align 4, !dbg !323
  %2729 = add nsw i32 %2728, 1, !dbg !323
  store i32 %2729, ptr %10, align 4, !dbg !323
  %2730 = load i32, ptr %10, align 4, !dbg !312
  %2731 = load i32, ptr %8, align 4, !dbg !314
  %2732 = icmp slt i32 %2730, %2731, !dbg !315
  br i1 %2732, label %2733, label %5404, !dbg !316

2733:                                             ; preds = %2727
  %2734 = load i32, ptr %10, align 4, !dbg !317
  %2735 = sext i32 %2734 to i64, !dbg !319
  %2736 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2735, !dbg !319
  %2737 = load ptr, ptr %7, align 8, !dbg !320
  %2738 = load i32, ptr %10, align 4, !dbg !321
  %2739 = sext i32 %2738 to i64, !dbg !320
  %2740 = getelementptr inbounds %struct.POINT, ptr %2737, i64 %2739, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2736, ptr align 8 %2740, i64 16, i1 false), !dbg !320
  br label %2741, !dbg !322

2741:                                             ; preds = %2733
  %2742 = load i32, ptr %10, align 4, !dbg !323
  %2743 = add nsw i32 %2742, 1, !dbg !323
  store i32 %2743, ptr %10, align 4, !dbg !323
  %2744 = load i32, ptr %10, align 4, !dbg !312
  %2745 = load i32, ptr %8, align 4, !dbg !314
  %2746 = icmp slt i32 %2744, %2745, !dbg !315
  br i1 %2746, label %2747, label %5404, !dbg !316

2747:                                             ; preds = %2741
  %2748 = load i32, ptr %10, align 4, !dbg !317
  %2749 = sext i32 %2748 to i64, !dbg !319
  %2750 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2749, !dbg !319
  %2751 = load ptr, ptr %7, align 8, !dbg !320
  %2752 = load i32, ptr %10, align 4, !dbg !321
  %2753 = sext i32 %2752 to i64, !dbg !320
  %2754 = getelementptr inbounds %struct.POINT, ptr %2751, i64 %2753, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2750, ptr align 8 %2754, i64 16, i1 false), !dbg !320
  br label %2755, !dbg !322

2755:                                             ; preds = %2747
  %2756 = load i32, ptr %10, align 4, !dbg !323
  %2757 = add nsw i32 %2756, 1, !dbg !323
  store i32 %2757, ptr %10, align 4, !dbg !323
  %2758 = load i32, ptr %10, align 4, !dbg !312
  %2759 = load i32, ptr %8, align 4, !dbg !314
  %2760 = icmp slt i32 %2758, %2759, !dbg !315
  br i1 %2760, label %2761, label %5404, !dbg !316

2761:                                             ; preds = %2755
  %2762 = load i32, ptr %10, align 4, !dbg !317
  %2763 = sext i32 %2762 to i64, !dbg !319
  %2764 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2763, !dbg !319
  %2765 = load ptr, ptr %7, align 8, !dbg !320
  %2766 = load i32, ptr %10, align 4, !dbg !321
  %2767 = sext i32 %2766 to i64, !dbg !320
  %2768 = getelementptr inbounds %struct.POINT, ptr %2765, i64 %2767, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2764, ptr align 8 %2768, i64 16, i1 false), !dbg !320
  br label %2769, !dbg !322

2769:                                             ; preds = %2761
  %2770 = load i32, ptr %10, align 4, !dbg !323
  %2771 = add nsw i32 %2770, 1, !dbg !323
  store i32 %2771, ptr %10, align 4, !dbg !323
  %2772 = load i32, ptr %10, align 4, !dbg !312
  %2773 = load i32, ptr %8, align 4, !dbg !314
  %2774 = icmp slt i32 %2772, %2773, !dbg !315
  br i1 %2774, label %2775, label %5404, !dbg !316

2775:                                             ; preds = %2769
  %2776 = load i32, ptr %10, align 4, !dbg !317
  %2777 = sext i32 %2776 to i64, !dbg !319
  %2778 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2777, !dbg !319
  %2779 = load ptr, ptr %7, align 8, !dbg !320
  %2780 = load i32, ptr %10, align 4, !dbg !321
  %2781 = sext i32 %2780 to i64, !dbg !320
  %2782 = getelementptr inbounds %struct.POINT, ptr %2779, i64 %2781, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2778, ptr align 8 %2782, i64 16, i1 false), !dbg !320
  br label %2783, !dbg !322

2783:                                             ; preds = %2775
  %2784 = load i32, ptr %10, align 4, !dbg !323
  %2785 = add nsw i32 %2784, 1, !dbg !323
  store i32 %2785, ptr %10, align 4, !dbg !323
  %2786 = load i32, ptr %10, align 4, !dbg !312
  %2787 = load i32, ptr %8, align 4, !dbg !314
  %2788 = icmp slt i32 %2786, %2787, !dbg !315
  br i1 %2788, label %2789, label %5404, !dbg !316

2789:                                             ; preds = %2783
  %2790 = load i32, ptr %10, align 4, !dbg !317
  %2791 = sext i32 %2790 to i64, !dbg !319
  %2792 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2791, !dbg !319
  %2793 = load ptr, ptr %7, align 8, !dbg !320
  %2794 = load i32, ptr %10, align 4, !dbg !321
  %2795 = sext i32 %2794 to i64, !dbg !320
  %2796 = getelementptr inbounds %struct.POINT, ptr %2793, i64 %2795, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2792, ptr align 8 %2796, i64 16, i1 false), !dbg !320
  br label %2797, !dbg !322

2797:                                             ; preds = %2789
  %2798 = load i32, ptr %10, align 4, !dbg !323
  %2799 = add nsw i32 %2798, 1, !dbg !323
  store i32 %2799, ptr %10, align 4, !dbg !323
  %2800 = load i32, ptr %10, align 4, !dbg !312
  %2801 = load i32, ptr %8, align 4, !dbg !314
  %2802 = icmp slt i32 %2800, %2801, !dbg !315
  br i1 %2802, label %2803, label %5404, !dbg !316

2803:                                             ; preds = %2797
  %2804 = load i32, ptr %10, align 4, !dbg !317
  %2805 = sext i32 %2804 to i64, !dbg !319
  %2806 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2805, !dbg !319
  %2807 = load ptr, ptr %7, align 8, !dbg !320
  %2808 = load i32, ptr %10, align 4, !dbg !321
  %2809 = sext i32 %2808 to i64, !dbg !320
  %2810 = getelementptr inbounds %struct.POINT, ptr %2807, i64 %2809, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2806, ptr align 8 %2810, i64 16, i1 false), !dbg !320
  br label %2811, !dbg !322

2811:                                             ; preds = %2803
  %2812 = load i32, ptr %10, align 4, !dbg !323
  %2813 = add nsw i32 %2812, 1, !dbg !323
  store i32 %2813, ptr %10, align 4, !dbg !323
  %2814 = load i32, ptr %10, align 4, !dbg !312
  %2815 = load i32, ptr %8, align 4, !dbg !314
  %2816 = icmp slt i32 %2814, %2815, !dbg !315
  br i1 %2816, label %2817, label %5404, !dbg !316

2817:                                             ; preds = %2811
  %2818 = load i32, ptr %10, align 4, !dbg !317
  %2819 = sext i32 %2818 to i64, !dbg !319
  %2820 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2819, !dbg !319
  %2821 = load ptr, ptr %7, align 8, !dbg !320
  %2822 = load i32, ptr %10, align 4, !dbg !321
  %2823 = sext i32 %2822 to i64, !dbg !320
  %2824 = getelementptr inbounds %struct.POINT, ptr %2821, i64 %2823, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2820, ptr align 8 %2824, i64 16, i1 false), !dbg !320
  br label %2825, !dbg !322

2825:                                             ; preds = %2817
  %2826 = load i32, ptr %10, align 4, !dbg !323
  %2827 = add nsw i32 %2826, 1, !dbg !323
  store i32 %2827, ptr %10, align 4, !dbg !323
  %2828 = load i32, ptr %10, align 4, !dbg !312
  %2829 = load i32, ptr %8, align 4, !dbg !314
  %2830 = icmp slt i32 %2828, %2829, !dbg !315
  br i1 %2830, label %2831, label %5404, !dbg !316

2831:                                             ; preds = %2825
  %2832 = load i32, ptr %10, align 4, !dbg !317
  %2833 = sext i32 %2832 to i64, !dbg !319
  %2834 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2833, !dbg !319
  %2835 = load ptr, ptr %7, align 8, !dbg !320
  %2836 = load i32, ptr %10, align 4, !dbg !321
  %2837 = sext i32 %2836 to i64, !dbg !320
  %2838 = getelementptr inbounds %struct.POINT, ptr %2835, i64 %2837, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2834, ptr align 8 %2838, i64 16, i1 false), !dbg !320
  br label %2839, !dbg !322

2839:                                             ; preds = %2831
  %2840 = load i32, ptr %10, align 4, !dbg !323
  %2841 = add nsw i32 %2840, 1, !dbg !323
  store i32 %2841, ptr %10, align 4, !dbg !323
  %2842 = load i32, ptr %10, align 4, !dbg !312
  %2843 = load i32, ptr %8, align 4, !dbg !314
  %2844 = icmp slt i32 %2842, %2843, !dbg !315
  br i1 %2844, label %2845, label %5404, !dbg !316

2845:                                             ; preds = %2839
  %2846 = load i32, ptr %10, align 4, !dbg !317
  %2847 = sext i32 %2846 to i64, !dbg !319
  %2848 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2847, !dbg !319
  %2849 = load ptr, ptr %7, align 8, !dbg !320
  %2850 = load i32, ptr %10, align 4, !dbg !321
  %2851 = sext i32 %2850 to i64, !dbg !320
  %2852 = getelementptr inbounds %struct.POINT, ptr %2849, i64 %2851, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2848, ptr align 8 %2852, i64 16, i1 false), !dbg !320
  br label %2853, !dbg !322

2853:                                             ; preds = %2845
  %2854 = load i32, ptr %10, align 4, !dbg !323
  %2855 = add nsw i32 %2854, 1, !dbg !323
  store i32 %2855, ptr %10, align 4, !dbg !323
  %2856 = load i32, ptr %10, align 4, !dbg !312
  %2857 = load i32, ptr %8, align 4, !dbg !314
  %2858 = icmp slt i32 %2856, %2857, !dbg !315
  br i1 %2858, label %2859, label %5404, !dbg !316

2859:                                             ; preds = %2853
  %2860 = load i32, ptr %10, align 4, !dbg !317
  %2861 = sext i32 %2860 to i64, !dbg !319
  %2862 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2861, !dbg !319
  %2863 = load ptr, ptr %7, align 8, !dbg !320
  %2864 = load i32, ptr %10, align 4, !dbg !321
  %2865 = sext i32 %2864 to i64, !dbg !320
  %2866 = getelementptr inbounds %struct.POINT, ptr %2863, i64 %2865, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2862, ptr align 8 %2866, i64 16, i1 false), !dbg !320
  br label %2867, !dbg !322

2867:                                             ; preds = %2859
  %2868 = load i32, ptr %10, align 4, !dbg !323
  %2869 = add nsw i32 %2868, 1, !dbg !323
  store i32 %2869, ptr %10, align 4, !dbg !323
  %2870 = load i32, ptr %10, align 4, !dbg !312
  %2871 = load i32, ptr %8, align 4, !dbg !314
  %2872 = icmp slt i32 %2870, %2871, !dbg !315
  br i1 %2872, label %2873, label %5404, !dbg !316

2873:                                             ; preds = %2867
  %2874 = load i32, ptr %10, align 4, !dbg !317
  %2875 = sext i32 %2874 to i64, !dbg !319
  %2876 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2875, !dbg !319
  %2877 = load ptr, ptr %7, align 8, !dbg !320
  %2878 = load i32, ptr %10, align 4, !dbg !321
  %2879 = sext i32 %2878 to i64, !dbg !320
  %2880 = getelementptr inbounds %struct.POINT, ptr %2877, i64 %2879, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2876, ptr align 8 %2880, i64 16, i1 false), !dbg !320
  br label %2881, !dbg !322

2881:                                             ; preds = %2873
  %2882 = load i32, ptr %10, align 4, !dbg !323
  %2883 = add nsw i32 %2882, 1, !dbg !323
  store i32 %2883, ptr %10, align 4, !dbg !323
  %2884 = load i32, ptr %10, align 4, !dbg !312
  %2885 = load i32, ptr %8, align 4, !dbg !314
  %2886 = icmp slt i32 %2884, %2885, !dbg !315
  br i1 %2886, label %2887, label %5404, !dbg !316

2887:                                             ; preds = %2881
  %2888 = load i32, ptr %10, align 4, !dbg !317
  %2889 = sext i32 %2888 to i64, !dbg !319
  %2890 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2889, !dbg !319
  %2891 = load ptr, ptr %7, align 8, !dbg !320
  %2892 = load i32, ptr %10, align 4, !dbg !321
  %2893 = sext i32 %2892 to i64, !dbg !320
  %2894 = getelementptr inbounds %struct.POINT, ptr %2891, i64 %2893, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2890, ptr align 8 %2894, i64 16, i1 false), !dbg !320
  br label %2895, !dbg !322

2895:                                             ; preds = %2887
  %2896 = load i32, ptr %10, align 4, !dbg !323
  %2897 = add nsw i32 %2896, 1, !dbg !323
  store i32 %2897, ptr %10, align 4, !dbg !323
  %2898 = load i32, ptr %10, align 4, !dbg !312
  %2899 = load i32, ptr %8, align 4, !dbg !314
  %2900 = icmp slt i32 %2898, %2899, !dbg !315
  br i1 %2900, label %2901, label %5404, !dbg !316

2901:                                             ; preds = %2895
  %2902 = load i32, ptr %10, align 4, !dbg !317
  %2903 = sext i32 %2902 to i64, !dbg !319
  %2904 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2903, !dbg !319
  %2905 = load ptr, ptr %7, align 8, !dbg !320
  %2906 = load i32, ptr %10, align 4, !dbg !321
  %2907 = sext i32 %2906 to i64, !dbg !320
  %2908 = getelementptr inbounds %struct.POINT, ptr %2905, i64 %2907, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2904, ptr align 8 %2908, i64 16, i1 false), !dbg !320
  br label %2909, !dbg !322

2909:                                             ; preds = %2901
  %2910 = load i32, ptr %10, align 4, !dbg !323
  %2911 = add nsw i32 %2910, 1, !dbg !323
  store i32 %2911, ptr %10, align 4, !dbg !323
  %2912 = load i32, ptr %10, align 4, !dbg !312
  %2913 = load i32, ptr %8, align 4, !dbg !314
  %2914 = icmp slt i32 %2912, %2913, !dbg !315
  br i1 %2914, label %2915, label %5404, !dbg !316

2915:                                             ; preds = %2909
  %2916 = load i32, ptr %10, align 4, !dbg !317
  %2917 = sext i32 %2916 to i64, !dbg !319
  %2918 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2917, !dbg !319
  %2919 = load ptr, ptr %7, align 8, !dbg !320
  %2920 = load i32, ptr %10, align 4, !dbg !321
  %2921 = sext i32 %2920 to i64, !dbg !320
  %2922 = getelementptr inbounds %struct.POINT, ptr %2919, i64 %2921, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2918, ptr align 8 %2922, i64 16, i1 false), !dbg !320
  br label %2923, !dbg !322

2923:                                             ; preds = %2915
  %2924 = load i32, ptr %10, align 4, !dbg !323
  %2925 = add nsw i32 %2924, 1, !dbg !323
  store i32 %2925, ptr %10, align 4, !dbg !323
  %2926 = load i32, ptr %10, align 4, !dbg !312
  %2927 = load i32, ptr %8, align 4, !dbg !314
  %2928 = icmp slt i32 %2926, %2927, !dbg !315
  br i1 %2928, label %2929, label %5404, !dbg !316

2929:                                             ; preds = %2923
  %2930 = load i32, ptr %10, align 4, !dbg !317
  %2931 = sext i32 %2930 to i64, !dbg !319
  %2932 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2931, !dbg !319
  %2933 = load ptr, ptr %7, align 8, !dbg !320
  %2934 = load i32, ptr %10, align 4, !dbg !321
  %2935 = sext i32 %2934 to i64, !dbg !320
  %2936 = getelementptr inbounds %struct.POINT, ptr %2933, i64 %2935, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2932, ptr align 8 %2936, i64 16, i1 false), !dbg !320
  br label %2937, !dbg !322

2937:                                             ; preds = %2929
  %2938 = load i32, ptr %10, align 4, !dbg !323
  %2939 = add nsw i32 %2938, 1, !dbg !323
  store i32 %2939, ptr %10, align 4, !dbg !323
  %2940 = load i32, ptr %10, align 4, !dbg !312
  %2941 = load i32, ptr %8, align 4, !dbg !314
  %2942 = icmp slt i32 %2940, %2941, !dbg !315
  br i1 %2942, label %2943, label %5404, !dbg !316

2943:                                             ; preds = %2937
  %2944 = load i32, ptr %10, align 4, !dbg !317
  %2945 = sext i32 %2944 to i64, !dbg !319
  %2946 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2945, !dbg !319
  %2947 = load ptr, ptr %7, align 8, !dbg !320
  %2948 = load i32, ptr %10, align 4, !dbg !321
  %2949 = sext i32 %2948 to i64, !dbg !320
  %2950 = getelementptr inbounds %struct.POINT, ptr %2947, i64 %2949, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2946, ptr align 8 %2950, i64 16, i1 false), !dbg !320
  br label %2951, !dbg !322

2951:                                             ; preds = %2943
  %2952 = load i32, ptr %10, align 4, !dbg !323
  %2953 = add nsw i32 %2952, 1, !dbg !323
  store i32 %2953, ptr %10, align 4, !dbg !323
  %2954 = load i32, ptr %10, align 4, !dbg !312
  %2955 = load i32, ptr %8, align 4, !dbg !314
  %2956 = icmp slt i32 %2954, %2955, !dbg !315
  br i1 %2956, label %2957, label %5404, !dbg !316

2957:                                             ; preds = %2951
  %2958 = load i32, ptr %10, align 4, !dbg !317
  %2959 = sext i32 %2958 to i64, !dbg !319
  %2960 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2959, !dbg !319
  %2961 = load ptr, ptr %7, align 8, !dbg !320
  %2962 = load i32, ptr %10, align 4, !dbg !321
  %2963 = sext i32 %2962 to i64, !dbg !320
  %2964 = getelementptr inbounds %struct.POINT, ptr %2961, i64 %2963, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2960, ptr align 8 %2964, i64 16, i1 false), !dbg !320
  br label %2965, !dbg !322

2965:                                             ; preds = %2957
  %2966 = load i32, ptr %10, align 4, !dbg !323
  %2967 = add nsw i32 %2966, 1, !dbg !323
  store i32 %2967, ptr %10, align 4, !dbg !323
  %2968 = load i32, ptr %10, align 4, !dbg !312
  %2969 = load i32, ptr %8, align 4, !dbg !314
  %2970 = icmp slt i32 %2968, %2969, !dbg !315
  br i1 %2970, label %2971, label %5404, !dbg !316

2971:                                             ; preds = %2965
  %2972 = load i32, ptr %10, align 4, !dbg !317
  %2973 = sext i32 %2972 to i64, !dbg !319
  %2974 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2973, !dbg !319
  %2975 = load ptr, ptr %7, align 8, !dbg !320
  %2976 = load i32, ptr %10, align 4, !dbg !321
  %2977 = sext i32 %2976 to i64, !dbg !320
  %2978 = getelementptr inbounds %struct.POINT, ptr %2975, i64 %2977, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2974, ptr align 8 %2978, i64 16, i1 false), !dbg !320
  br label %2979, !dbg !322

2979:                                             ; preds = %2971
  %2980 = load i32, ptr %10, align 4, !dbg !323
  %2981 = add nsw i32 %2980, 1, !dbg !323
  store i32 %2981, ptr %10, align 4, !dbg !323
  %2982 = load i32, ptr %10, align 4, !dbg !312
  %2983 = load i32, ptr %8, align 4, !dbg !314
  %2984 = icmp slt i32 %2982, %2983, !dbg !315
  br i1 %2984, label %2985, label %5404, !dbg !316

2985:                                             ; preds = %2979
  %2986 = load i32, ptr %10, align 4, !dbg !317
  %2987 = sext i32 %2986 to i64, !dbg !319
  %2988 = getelementptr inbounds %struct.POINT, ptr %26, i64 %2987, !dbg !319
  %2989 = load ptr, ptr %7, align 8, !dbg !320
  %2990 = load i32, ptr %10, align 4, !dbg !321
  %2991 = sext i32 %2990 to i64, !dbg !320
  %2992 = getelementptr inbounds %struct.POINT, ptr %2989, i64 %2991, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %2988, ptr align 8 %2992, i64 16, i1 false), !dbg !320
  br label %2993, !dbg !322

2993:                                             ; preds = %2985
  %2994 = load i32, ptr %10, align 4, !dbg !323
  %2995 = add nsw i32 %2994, 1, !dbg !323
  store i32 %2995, ptr %10, align 4, !dbg !323
  %2996 = load i32, ptr %10, align 4, !dbg !312
  %2997 = load i32, ptr %8, align 4, !dbg !314
  %2998 = icmp slt i32 %2996, %2997, !dbg !315
  br i1 %2998, label %2999, label %5404, !dbg !316

2999:                                             ; preds = %2993
  %3000 = load i32, ptr %10, align 4, !dbg !317
  %3001 = sext i32 %3000 to i64, !dbg !319
  %3002 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3001, !dbg !319
  %3003 = load ptr, ptr %7, align 8, !dbg !320
  %3004 = load i32, ptr %10, align 4, !dbg !321
  %3005 = sext i32 %3004 to i64, !dbg !320
  %3006 = getelementptr inbounds %struct.POINT, ptr %3003, i64 %3005, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3002, ptr align 8 %3006, i64 16, i1 false), !dbg !320
  br label %3007, !dbg !322

3007:                                             ; preds = %2999
  %3008 = load i32, ptr %10, align 4, !dbg !323
  %3009 = add nsw i32 %3008, 1, !dbg !323
  store i32 %3009, ptr %10, align 4, !dbg !323
  %3010 = load i32, ptr %10, align 4, !dbg !312
  %3011 = load i32, ptr %8, align 4, !dbg !314
  %3012 = icmp slt i32 %3010, %3011, !dbg !315
  br i1 %3012, label %3013, label %5404, !dbg !316

3013:                                             ; preds = %3007
  %3014 = load i32, ptr %10, align 4, !dbg !317
  %3015 = sext i32 %3014 to i64, !dbg !319
  %3016 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3015, !dbg !319
  %3017 = load ptr, ptr %7, align 8, !dbg !320
  %3018 = load i32, ptr %10, align 4, !dbg !321
  %3019 = sext i32 %3018 to i64, !dbg !320
  %3020 = getelementptr inbounds %struct.POINT, ptr %3017, i64 %3019, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3016, ptr align 8 %3020, i64 16, i1 false), !dbg !320
  br label %3021, !dbg !322

3021:                                             ; preds = %3013
  %3022 = load i32, ptr %10, align 4, !dbg !323
  %3023 = add nsw i32 %3022, 1, !dbg !323
  store i32 %3023, ptr %10, align 4, !dbg !323
  %3024 = load i32, ptr %10, align 4, !dbg !312
  %3025 = load i32, ptr %8, align 4, !dbg !314
  %3026 = icmp slt i32 %3024, %3025, !dbg !315
  br i1 %3026, label %3027, label %5404, !dbg !316

3027:                                             ; preds = %3021
  %3028 = load i32, ptr %10, align 4, !dbg !317
  %3029 = sext i32 %3028 to i64, !dbg !319
  %3030 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3029, !dbg !319
  %3031 = load ptr, ptr %7, align 8, !dbg !320
  %3032 = load i32, ptr %10, align 4, !dbg !321
  %3033 = sext i32 %3032 to i64, !dbg !320
  %3034 = getelementptr inbounds %struct.POINT, ptr %3031, i64 %3033, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3030, ptr align 8 %3034, i64 16, i1 false), !dbg !320
  br label %3035, !dbg !322

3035:                                             ; preds = %3027
  %3036 = load i32, ptr %10, align 4, !dbg !323
  %3037 = add nsw i32 %3036, 1, !dbg !323
  store i32 %3037, ptr %10, align 4, !dbg !323
  %3038 = load i32, ptr %10, align 4, !dbg !312
  %3039 = load i32, ptr %8, align 4, !dbg !314
  %3040 = icmp slt i32 %3038, %3039, !dbg !315
  br i1 %3040, label %3041, label %5404, !dbg !316

3041:                                             ; preds = %3035
  %3042 = load i32, ptr %10, align 4, !dbg !317
  %3043 = sext i32 %3042 to i64, !dbg !319
  %3044 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3043, !dbg !319
  %3045 = load ptr, ptr %7, align 8, !dbg !320
  %3046 = load i32, ptr %10, align 4, !dbg !321
  %3047 = sext i32 %3046 to i64, !dbg !320
  %3048 = getelementptr inbounds %struct.POINT, ptr %3045, i64 %3047, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3044, ptr align 8 %3048, i64 16, i1 false), !dbg !320
  br label %3049, !dbg !322

3049:                                             ; preds = %3041
  %3050 = load i32, ptr %10, align 4, !dbg !323
  %3051 = add nsw i32 %3050, 1, !dbg !323
  store i32 %3051, ptr %10, align 4, !dbg !323
  %3052 = load i32, ptr %10, align 4, !dbg !312
  %3053 = load i32, ptr %8, align 4, !dbg !314
  %3054 = icmp slt i32 %3052, %3053, !dbg !315
  br i1 %3054, label %3055, label %5404, !dbg !316

3055:                                             ; preds = %3049
  %3056 = load i32, ptr %10, align 4, !dbg !317
  %3057 = sext i32 %3056 to i64, !dbg !319
  %3058 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3057, !dbg !319
  %3059 = load ptr, ptr %7, align 8, !dbg !320
  %3060 = load i32, ptr %10, align 4, !dbg !321
  %3061 = sext i32 %3060 to i64, !dbg !320
  %3062 = getelementptr inbounds %struct.POINT, ptr %3059, i64 %3061, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3058, ptr align 8 %3062, i64 16, i1 false), !dbg !320
  br label %3063, !dbg !322

3063:                                             ; preds = %3055
  %3064 = load i32, ptr %10, align 4, !dbg !323
  %3065 = add nsw i32 %3064, 1, !dbg !323
  store i32 %3065, ptr %10, align 4, !dbg !323
  %3066 = load i32, ptr %10, align 4, !dbg !312
  %3067 = load i32, ptr %8, align 4, !dbg !314
  %3068 = icmp slt i32 %3066, %3067, !dbg !315
  br i1 %3068, label %3069, label %5404, !dbg !316

3069:                                             ; preds = %3063
  %3070 = load i32, ptr %10, align 4, !dbg !317
  %3071 = sext i32 %3070 to i64, !dbg !319
  %3072 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3071, !dbg !319
  %3073 = load ptr, ptr %7, align 8, !dbg !320
  %3074 = load i32, ptr %10, align 4, !dbg !321
  %3075 = sext i32 %3074 to i64, !dbg !320
  %3076 = getelementptr inbounds %struct.POINT, ptr %3073, i64 %3075, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3072, ptr align 8 %3076, i64 16, i1 false), !dbg !320
  br label %3077, !dbg !322

3077:                                             ; preds = %3069
  %3078 = load i32, ptr %10, align 4, !dbg !323
  %3079 = add nsw i32 %3078, 1, !dbg !323
  store i32 %3079, ptr %10, align 4, !dbg !323
  %3080 = load i32, ptr %10, align 4, !dbg !312
  %3081 = load i32, ptr %8, align 4, !dbg !314
  %3082 = icmp slt i32 %3080, %3081, !dbg !315
  br i1 %3082, label %3083, label %5404, !dbg !316

3083:                                             ; preds = %3077
  %3084 = load i32, ptr %10, align 4, !dbg !317
  %3085 = sext i32 %3084 to i64, !dbg !319
  %3086 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3085, !dbg !319
  %3087 = load ptr, ptr %7, align 8, !dbg !320
  %3088 = load i32, ptr %10, align 4, !dbg !321
  %3089 = sext i32 %3088 to i64, !dbg !320
  %3090 = getelementptr inbounds %struct.POINT, ptr %3087, i64 %3089, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3086, ptr align 8 %3090, i64 16, i1 false), !dbg !320
  br label %3091, !dbg !322

3091:                                             ; preds = %3083
  %3092 = load i32, ptr %10, align 4, !dbg !323
  %3093 = add nsw i32 %3092, 1, !dbg !323
  store i32 %3093, ptr %10, align 4, !dbg !323
  %3094 = load i32, ptr %10, align 4, !dbg !312
  %3095 = load i32, ptr %8, align 4, !dbg !314
  %3096 = icmp slt i32 %3094, %3095, !dbg !315
  br i1 %3096, label %3097, label %5404, !dbg !316

3097:                                             ; preds = %3091
  %3098 = load i32, ptr %10, align 4, !dbg !317
  %3099 = sext i32 %3098 to i64, !dbg !319
  %3100 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3099, !dbg !319
  %3101 = load ptr, ptr %7, align 8, !dbg !320
  %3102 = load i32, ptr %10, align 4, !dbg !321
  %3103 = sext i32 %3102 to i64, !dbg !320
  %3104 = getelementptr inbounds %struct.POINT, ptr %3101, i64 %3103, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3100, ptr align 8 %3104, i64 16, i1 false), !dbg !320
  br label %3105, !dbg !322

3105:                                             ; preds = %3097
  %3106 = load i32, ptr %10, align 4, !dbg !323
  %3107 = add nsw i32 %3106, 1, !dbg !323
  store i32 %3107, ptr %10, align 4, !dbg !323
  %3108 = load i32, ptr %10, align 4, !dbg !312
  %3109 = load i32, ptr %8, align 4, !dbg !314
  %3110 = icmp slt i32 %3108, %3109, !dbg !315
  br i1 %3110, label %3111, label %5404, !dbg !316

3111:                                             ; preds = %3105
  %3112 = load i32, ptr %10, align 4, !dbg !317
  %3113 = sext i32 %3112 to i64, !dbg !319
  %3114 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3113, !dbg !319
  %3115 = load ptr, ptr %7, align 8, !dbg !320
  %3116 = load i32, ptr %10, align 4, !dbg !321
  %3117 = sext i32 %3116 to i64, !dbg !320
  %3118 = getelementptr inbounds %struct.POINT, ptr %3115, i64 %3117, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3114, ptr align 8 %3118, i64 16, i1 false), !dbg !320
  br label %3119, !dbg !322

3119:                                             ; preds = %3111
  %3120 = load i32, ptr %10, align 4, !dbg !323
  %3121 = add nsw i32 %3120, 1, !dbg !323
  store i32 %3121, ptr %10, align 4, !dbg !323
  %3122 = load i32, ptr %10, align 4, !dbg !312
  %3123 = load i32, ptr %8, align 4, !dbg !314
  %3124 = icmp slt i32 %3122, %3123, !dbg !315
  br i1 %3124, label %3125, label %5404, !dbg !316

3125:                                             ; preds = %3119
  %3126 = load i32, ptr %10, align 4, !dbg !317
  %3127 = sext i32 %3126 to i64, !dbg !319
  %3128 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3127, !dbg !319
  %3129 = load ptr, ptr %7, align 8, !dbg !320
  %3130 = load i32, ptr %10, align 4, !dbg !321
  %3131 = sext i32 %3130 to i64, !dbg !320
  %3132 = getelementptr inbounds %struct.POINT, ptr %3129, i64 %3131, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3128, ptr align 8 %3132, i64 16, i1 false), !dbg !320
  br label %3133, !dbg !322

3133:                                             ; preds = %3125
  %3134 = load i32, ptr %10, align 4, !dbg !323
  %3135 = add nsw i32 %3134, 1, !dbg !323
  store i32 %3135, ptr %10, align 4, !dbg !323
  %3136 = load i32, ptr %10, align 4, !dbg !312
  %3137 = load i32, ptr %8, align 4, !dbg !314
  %3138 = icmp slt i32 %3136, %3137, !dbg !315
  br i1 %3138, label %3139, label %5404, !dbg !316

3139:                                             ; preds = %3133
  %3140 = load i32, ptr %10, align 4, !dbg !317
  %3141 = sext i32 %3140 to i64, !dbg !319
  %3142 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3141, !dbg !319
  %3143 = load ptr, ptr %7, align 8, !dbg !320
  %3144 = load i32, ptr %10, align 4, !dbg !321
  %3145 = sext i32 %3144 to i64, !dbg !320
  %3146 = getelementptr inbounds %struct.POINT, ptr %3143, i64 %3145, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3142, ptr align 8 %3146, i64 16, i1 false), !dbg !320
  br label %3147, !dbg !322

3147:                                             ; preds = %3139
  %3148 = load i32, ptr %10, align 4, !dbg !323
  %3149 = add nsw i32 %3148, 1, !dbg !323
  store i32 %3149, ptr %10, align 4, !dbg !323
  %3150 = load i32, ptr %10, align 4, !dbg !312
  %3151 = load i32, ptr %8, align 4, !dbg !314
  %3152 = icmp slt i32 %3150, %3151, !dbg !315
  br i1 %3152, label %3153, label %5404, !dbg !316

3153:                                             ; preds = %3147
  %3154 = load i32, ptr %10, align 4, !dbg !317
  %3155 = sext i32 %3154 to i64, !dbg !319
  %3156 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3155, !dbg !319
  %3157 = load ptr, ptr %7, align 8, !dbg !320
  %3158 = load i32, ptr %10, align 4, !dbg !321
  %3159 = sext i32 %3158 to i64, !dbg !320
  %3160 = getelementptr inbounds %struct.POINT, ptr %3157, i64 %3159, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3156, ptr align 8 %3160, i64 16, i1 false), !dbg !320
  br label %3161, !dbg !322

3161:                                             ; preds = %3153
  %3162 = load i32, ptr %10, align 4, !dbg !323
  %3163 = add nsw i32 %3162, 1, !dbg !323
  store i32 %3163, ptr %10, align 4, !dbg !323
  %3164 = load i32, ptr %10, align 4, !dbg !312
  %3165 = load i32, ptr %8, align 4, !dbg !314
  %3166 = icmp slt i32 %3164, %3165, !dbg !315
  br i1 %3166, label %3167, label %5404, !dbg !316

3167:                                             ; preds = %3161
  %3168 = load i32, ptr %10, align 4, !dbg !317
  %3169 = sext i32 %3168 to i64, !dbg !319
  %3170 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3169, !dbg !319
  %3171 = load ptr, ptr %7, align 8, !dbg !320
  %3172 = load i32, ptr %10, align 4, !dbg !321
  %3173 = sext i32 %3172 to i64, !dbg !320
  %3174 = getelementptr inbounds %struct.POINT, ptr %3171, i64 %3173, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3170, ptr align 8 %3174, i64 16, i1 false), !dbg !320
  br label %3175, !dbg !322

3175:                                             ; preds = %3167
  %3176 = load i32, ptr %10, align 4, !dbg !323
  %3177 = add nsw i32 %3176, 1, !dbg !323
  store i32 %3177, ptr %10, align 4, !dbg !323
  %3178 = load i32, ptr %10, align 4, !dbg !312
  %3179 = load i32, ptr %8, align 4, !dbg !314
  %3180 = icmp slt i32 %3178, %3179, !dbg !315
  br i1 %3180, label %3181, label %5404, !dbg !316

3181:                                             ; preds = %3175
  %3182 = load i32, ptr %10, align 4, !dbg !317
  %3183 = sext i32 %3182 to i64, !dbg !319
  %3184 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3183, !dbg !319
  %3185 = load ptr, ptr %7, align 8, !dbg !320
  %3186 = load i32, ptr %10, align 4, !dbg !321
  %3187 = sext i32 %3186 to i64, !dbg !320
  %3188 = getelementptr inbounds %struct.POINT, ptr %3185, i64 %3187, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3184, ptr align 8 %3188, i64 16, i1 false), !dbg !320
  br label %3189, !dbg !322

3189:                                             ; preds = %3181
  %3190 = load i32, ptr %10, align 4, !dbg !323
  %3191 = add nsw i32 %3190, 1, !dbg !323
  store i32 %3191, ptr %10, align 4, !dbg !323
  %3192 = load i32, ptr %10, align 4, !dbg !312
  %3193 = load i32, ptr %8, align 4, !dbg !314
  %3194 = icmp slt i32 %3192, %3193, !dbg !315
  br i1 %3194, label %3195, label %5404, !dbg !316

3195:                                             ; preds = %3189
  %3196 = load i32, ptr %10, align 4, !dbg !317
  %3197 = sext i32 %3196 to i64, !dbg !319
  %3198 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3197, !dbg !319
  %3199 = load ptr, ptr %7, align 8, !dbg !320
  %3200 = load i32, ptr %10, align 4, !dbg !321
  %3201 = sext i32 %3200 to i64, !dbg !320
  %3202 = getelementptr inbounds %struct.POINT, ptr %3199, i64 %3201, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3198, ptr align 8 %3202, i64 16, i1 false), !dbg !320
  br label %3203, !dbg !322

3203:                                             ; preds = %3195
  %3204 = load i32, ptr %10, align 4, !dbg !323
  %3205 = add nsw i32 %3204, 1, !dbg !323
  store i32 %3205, ptr %10, align 4, !dbg !323
  %3206 = load i32, ptr %10, align 4, !dbg !312
  %3207 = load i32, ptr %8, align 4, !dbg !314
  %3208 = icmp slt i32 %3206, %3207, !dbg !315
  br i1 %3208, label %3209, label %5404, !dbg !316

3209:                                             ; preds = %3203
  %3210 = load i32, ptr %10, align 4, !dbg !317
  %3211 = sext i32 %3210 to i64, !dbg !319
  %3212 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3211, !dbg !319
  %3213 = load ptr, ptr %7, align 8, !dbg !320
  %3214 = load i32, ptr %10, align 4, !dbg !321
  %3215 = sext i32 %3214 to i64, !dbg !320
  %3216 = getelementptr inbounds %struct.POINT, ptr %3213, i64 %3215, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3212, ptr align 8 %3216, i64 16, i1 false), !dbg !320
  br label %3217, !dbg !322

3217:                                             ; preds = %3209
  %3218 = load i32, ptr %10, align 4, !dbg !323
  %3219 = add nsw i32 %3218, 1, !dbg !323
  store i32 %3219, ptr %10, align 4, !dbg !323
  %3220 = load i32, ptr %10, align 4, !dbg !312
  %3221 = load i32, ptr %8, align 4, !dbg !314
  %3222 = icmp slt i32 %3220, %3221, !dbg !315
  br i1 %3222, label %3223, label %5404, !dbg !316

3223:                                             ; preds = %3217
  %3224 = load i32, ptr %10, align 4, !dbg !317
  %3225 = sext i32 %3224 to i64, !dbg !319
  %3226 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3225, !dbg !319
  %3227 = load ptr, ptr %7, align 8, !dbg !320
  %3228 = load i32, ptr %10, align 4, !dbg !321
  %3229 = sext i32 %3228 to i64, !dbg !320
  %3230 = getelementptr inbounds %struct.POINT, ptr %3227, i64 %3229, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3226, ptr align 8 %3230, i64 16, i1 false), !dbg !320
  br label %3231, !dbg !322

3231:                                             ; preds = %3223
  %3232 = load i32, ptr %10, align 4, !dbg !323
  %3233 = add nsw i32 %3232, 1, !dbg !323
  store i32 %3233, ptr %10, align 4, !dbg !323
  %3234 = load i32, ptr %10, align 4, !dbg !312
  %3235 = load i32, ptr %8, align 4, !dbg !314
  %3236 = icmp slt i32 %3234, %3235, !dbg !315
  br i1 %3236, label %3237, label %5404, !dbg !316

3237:                                             ; preds = %3231
  %3238 = load i32, ptr %10, align 4, !dbg !317
  %3239 = sext i32 %3238 to i64, !dbg !319
  %3240 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3239, !dbg !319
  %3241 = load ptr, ptr %7, align 8, !dbg !320
  %3242 = load i32, ptr %10, align 4, !dbg !321
  %3243 = sext i32 %3242 to i64, !dbg !320
  %3244 = getelementptr inbounds %struct.POINT, ptr %3241, i64 %3243, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3240, ptr align 8 %3244, i64 16, i1 false), !dbg !320
  br label %3245, !dbg !322

3245:                                             ; preds = %3237
  %3246 = load i32, ptr %10, align 4, !dbg !323
  %3247 = add nsw i32 %3246, 1, !dbg !323
  store i32 %3247, ptr %10, align 4, !dbg !323
  %3248 = load i32, ptr %10, align 4, !dbg !312
  %3249 = load i32, ptr %8, align 4, !dbg !314
  %3250 = icmp slt i32 %3248, %3249, !dbg !315
  br i1 %3250, label %3251, label %5404, !dbg !316

3251:                                             ; preds = %3245
  %3252 = load i32, ptr %10, align 4, !dbg !317
  %3253 = sext i32 %3252 to i64, !dbg !319
  %3254 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3253, !dbg !319
  %3255 = load ptr, ptr %7, align 8, !dbg !320
  %3256 = load i32, ptr %10, align 4, !dbg !321
  %3257 = sext i32 %3256 to i64, !dbg !320
  %3258 = getelementptr inbounds %struct.POINT, ptr %3255, i64 %3257, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3254, ptr align 8 %3258, i64 16, i1 false), !dbg !320
  br label %3259, !dbg !322

3259:                                             ; preds = %3251
  %3260 = load i32, ptr %10, align 4, !dbg !323
  %3261 = add nsw i32 %3260, 1, !dbg !323
  store i32 %3261, ptr %10, align 4, !dbg !323
  %3262 = load i32, ptr %10, align 4, !dbg !312
  %3263 = load i32, ptr %8, align 4, !dbg !314
  %3264 = icmp slt i32 %3262, %3263, !dbg !315
  br i1 %3264, label %3265, label %5404, !dbg !316

3265:                                             ; preds = %3259
  %3266 = load i32, ptr %10, align 4, !dbg !317
  %3267 = sext i32 %3266 to i64, !dbg !319
  %3268 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3267, !dbg !319
  %3269 = load ptr, ptr %7, align 8, !dbg !320
  %3270 = load i32, ptr %10, align 4, !dbg !321
  %3271 = sext i32 %3270 to i64, !dbg !320
  %3272 = getelementptr inbounds %struct.POINT, ptr %3269, i64 %3271, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3268, ptr align 8 %3272, i64 16, i1 false), !dbg !320
  br label %3273, !dbg !322

3273:                                             ; preds = %3265
  %3274 = load i32, ptr %10, align 4, !dbg !323
  %3275 = add nsw i32 %3274, 1, !dbg !323
  store i32 %3275, ptr %10, align 4, !dbg !323
  %3276 = load i32, ptr %10, align 4, !dbg !312
  %3277 = load i32, ptr %8, align 4, !dbg !314
  %3278 = icmp slt i32 %3276, %3277, !dbg !315
  br i1 %3278, label %3279, label %5404, !dbg !316

3279:                                             ; preds = %3273
  %3280 = load i32, ptr %10, align 4, !dbg !317
  %3281 = sext i32 %3280 to i64, !dbg !319
  %3282 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3281, !dbg !319
  %3283 = load ptr, ptr %7, align 8, !dbg !320
  %3284 = load i32, ptr %10, align 4, !dbg !321
  %3285 = sext i32 %3284 to i64, !dbg !320
  %3286 = getelementptr inbounds %struct.POINT, ptr %3283, i64 %3285, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3282, ptr align 8 %3286, i64 16, i1 false), !dbg !320
  br label %3287, !dbg !322

3287:                                             ; preds = %3279
  %3288 = load i32, ptr %10, align 4, !dbg !323
  %3289 = add nsw i32 %3288, 1, !dbg !323
  store i32 %3289, ptr %10, align 4, !dbg !323
  %3290 = load i32, ptr %10, align 4, !dbg !312
  %3291 = load i32, ptr %8, align 4, !dbg !314
  %3292 = icmp slt i32 %3290, %3291, !dbg !315
  br i1 %3292, label %3293, label %5404, !dbg !316

3293:                                             ; preds = %3287
  %3294 = load i32, ptr %10, align 4, !dbg !317
  %3295 = sext i32 %3294 to i64, !dbg !319
  %3296 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3295, !dbg !319
  %3297 = load ptr, ptr %7, align 8, !dbg !320
  %3298 = load i32, ptr %10, align 4, !dbg !321
  %3299 = sext i32 %3298 to i64, !dbg !320
  %3300 = getelementptr inbounds %struct.POINT, ptr %3297, i64 %3299, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3296, ptr align 8 %3300, i64 16, i1 false), !dbg !320
  br label %3301, !dbg !322

3301:                                             ; preds = %3293
  %3302 = load i32, ptr %10, align 4, !dbg !323
  %3303 = add nsw i32 %3302, 1, !dbg !323
  store i32 %3303, ptr %10, align 4, !dbg !323
  %3304 = load i32, ptr %10, align 4, !dbg !312
  %3305 = load i32, ptr %8, align 4, !dbg !314
  %3306 = icmp slt i32 %3304, %3305, !dbg !315
  br i1 %3306, label %3307, label %5404, !dbg !316

3307:                                             ; preds = %3301
  %3308 = load i32, ptr %10, align 4, !dbg !317
  %3309 = sext i32 %3308 to i64, !dbg !319
  %3310 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3309, !dbg !319
  %3311 = load ptr, ptr %7, align 8, !dbg !320
  %3312 = load i32, ptr %10, align 4, !dbg !321
  %3313 = sext i32 %3312 to i64, !dbg !320
  %3314 = getelementptr inbounds %struct.POINT, ptr %3311, i64 %3313, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3310, ptr align 8 %3314, i64 16, i1 false), !dbg !320
  br label %3315, !dbg !322

3315:                                             ; preds = %3307
  %3316 = load i32, ptr %10, align 4, !dbg !323
  %3317 = add nsw i32 %3316, 1, !dbg !323
  store i32 %3317, ptr %10, align 4, !dbg !323
  %3318 = load i32, ptr %10, align 4, !dbg !312
  %3319 = load i32, ptr %8, align 4, !dbg !314
  %3320 = icmp slt i32 %3318, %3319, !dbg !315
  br i1 %3320, label %3321, label %5404, !dbg !316

3321:                                             ; preds = %3315
  %3322 = load i32, ptr %10, align 4, !dbg !317
  %3323 = sext i32 %3322 to i64, !dbg !319
  %3324 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3323, !dbg !319
  %3325 = load ptr, ptr %7, align 8, !dbg !320
  %3326 = load i32, ptr %10, align 4, !dbg !321
  %3327 = sext i32 %3326 to i64, !dbg !320
  %3328 = getelementptr inbounds %struct.POINT, ptr %3325, i64 %3327, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3324, ptr align 8 %3328, i64 16, i1 false), !dbg !320
  br label %3329, !dbg !322

3329:                                             ; preds = %3321
  %3330 = load i32, ptr %10, align 4, !dbg !323
  %3331 = add nsw i32 %3330, 1, !dbg !323
  store i32 %3331, ptr %10, align 4, !dbg !323
  %3332 = load i32, ptr %10, align 4, !dbg !312
  %3333 = load i32, ptr %8, align 4, !dbg !314
  %3334 = icmp slt i32 %3332, %3333, !dbg !315
  br i1 %3334, label %3335, label %5404, !dbg !316

3335:                                             ; preds = %3329
  %3336 = load i32, ptr %10, align 4, !dbg !317
  %3337 = sext i32 %3336 to i64, !dbg !319
  %3338 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3337, !dbg !319
  %3339 = load ptr, ptr %7, align 8, !dbg !320
  %3340 = load i32, ptr %10, align 4, !dbg !321
  %3341 = sext i32 %3340 to i64, !dbg !320
  %3342 = getelementptr inbounds %struct.POINT, ptr %3339, i64 %3341, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3338, ptr align 8 %3342, i64 16, i1 false), !dbg !320
  br label %3343, !dbg !322

3343:                                             ; preds = %3335
  %3344 = load i32, ptr %10, align 4, !dbg !323
  %3345 = add nsw i32 %3344, 1, !dbg !323
  store i32 %3345, ptr %10, align 4, !dbg !323
  %3346 = load i32, ptr %10, align 4, !dbg !312
  %3347 = load i32, ptr %8, align 4, !dbg !314
  %3348 = icmp slt i32 %3346, %3347, !dbg !315
  br i1 %3348, label %3349, label %5404, !dbg !316

3349:                                             ; preds = %3343
  %3350 = load i32, ptr %10, align 4, !dbg !317
  %3351 = sext i32 %3350 to i64, !dbg !319
  %3352 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3351, !dbg !319
  %3353 = load ptr, ptr %7, align 8, !dbg !320
  %3354 = load i32, ptr %10, align 4, !dbg !321
  %3355 = sext i32 %3354 to i64, !dbg !320
  %3356 = getelementptr inbounds %struct.POINT, ptr %3353, i64 %3355, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3352, ptr align 8 %3356, i64 16, i1 false), !dbg !320
  br label %3357, !dbg !322

3357:                                             ; preds = %3349
  %3358 = load i32, ptr %10, align 4, !dbg !323
  %3359 = add nsw i32 %3358, 1, !dbg !323
  store i32 %3359, ptr %10, align 4, !dbg !323
  %3360 = load i32, ptr %10, align 4, !dbg !312
  %3361 = load i32, ptr %8, align 4, !dbg !314
  %3362 = icmp slt i32 %3360, %3361, !dbg !315
  br i1 %3362, label %3363, label %5404, !dbg !316

3363:                                             ; preds = %3357
  %3364 = load i32, ptr %10, align 4, !dbg !317
  %3365 = sext i32 %3364 to i64, !dbg !319
  %3366 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3365, !dbg !319
  %3367 = load ptr, ptr %7, align 8, !dbg !320
  %3368 = load i32, ptr %10, align 4, !dbg !321
  %3369 = sext i32 %3368 to i64, !dbg !320
  %3370 = getelementptr inbounds %struct.POINT, ptr %3367, i64 %3369, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3366, ptr align 8 %3370, i64 16, i1 false), !dbg !320
  br label %3371, !dbg !322

3371:                                             ; preds = %3363
  %3372 = load i32, ptr %10, align 4, !dbg !323
  %3373 = add nsw i32 %3372, 1, !dbg !323
  store i32 %3373, ptr %10, align 4, !dbg !323
  %3374 = load i32, ptr %10, align 4, !dbg !312
  %3375 = load i32, ptr %8, align 4, !dbg !314
  %3376 = icmp slt i32 %3374, %3375, !dbg !315
  br i1 %3376, label %3377, label %5404, !dbg !316

3377:                                             ; preds = %3371
  %3378 = load i32, ptr %10, align 4, !dbg !317
  %3379 = sext i32 %3378 to i64, !dbg !319
  %3380 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3379, !dbg !319
  %3381 = load ptr, ptr %7, align 8, !dbg !320
  %3382 = load i32, ptr %10, align 4, !dbg !321
  %3383 = sext i32 %3382 to i64, !dbg !320
  %3384 = getelementptr inbounds %struct.POINT, ptr %3381, i64 %3383, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3380, ptr align 8 %3384, i64 16, i1 false), !dbg !320
  br label %3385, !dbg !322

3385:                                             ; preds = %3377
  %3386 = load i32, ptr %10, align 4, !dbg !323
  %3387 = add nsw i32 %3386, 1, !dbg !323
  store i32 %3387, ptr %10, align 4, !dbg !323
  %3388 = load i32, ptr %10, align 4, !dbg !312
  %3389 = load i32, ptr %8, align 4, !dbg !314
  %3390 = icmp slt i32 %3388, %3389, !dbg !315
  br i1 %3390, label %3391, label %5404, !dbg !316

3391:                                             ; preds = %3385
  %3392 = load i32, ptr %10, align 4, !dbg !317
  %3393 = sext i32 %3392 to i64, !dbg !319
  %3394 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3393, !dbg !319
  %3395 = load ptr, ptr %7, align 8, !dbg !320
  %3396 = load i32, ptr %10, align 4, !dbg !321
  %3397 = sext i32 %3396 to i64, !dbg !320
  %3398 = getelementptr inbounds %struct.POINT, ptr %3395, i64 %3397, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3394, ptr align 8 %3398, i64 16, i1 false), !dbg !320
  br label %3399, !dbg !322

3399:                                             ; preds = %3391
  %3400 = load i32, ptr %10, align 4, !dbg !323
  %3401 = add nsw i32 %3400, 1, !dbg !323
  store i32 %3401, ptr %10, align 4, !dbg !323
  %3402 = load i32, ptr %10, align 4, !dbg !312
  %3403 = load i32, ptr %8, align 4, !dbg !314
  %3404 = icmp slt i32 %3402, %3403, !dbg !315
  br i1 %3404, label %3405, label %5404, !dbg !316

3405:                                             ; preds = %3399
  %3406 = load i32, ptr %10, align 4, !dbg !317
  %3407 = sext i32 %3406 to i64, !dbg !319
  %3408 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3407, !dbg !319
  %3409 = load ptr, ptr %7, align 8, !dbg !320
  %3410 = load i32, ptr %10, align 4, !dbg !321
  %3411 = sext i32 %3410 to i64, !dbg !320
  %3412 = getelementptr inbounds %struct.POINT, ptr %3409, i64 %3411, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3408, ptr align 8 %3412, i64 16, i1 false), !dbg !320
  br label %3413, !dbg !322

3413:                                             ; preds = %3405
  %3414 = load i32, ptr %10, align 4, !dbg !323
  %3415 = add nsw i32 %3414, 1, !dbg !323
  store i32 %3415, ptr %10, align 4, !dbg !323
  %3416 = load i32, ptr %10, align 4, !dbg !312
  %3417 = load i32, ptr %8, align 4, !dbg !314
  %3418 = icmp slt i32 %3416, %3417, !dbg !315
  br i1 %3418, label %3419, label %5404, !dbg !316

3419:                                             ; preds = %3413
  %3420 = load i32, ptr %10, align 4, !dbg !317
  %3421 = sext i32 %3420 to i64, !dbg !319
  %3422 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3421, !dbg !319
  %3423 = load ptr, ptr %7, align 8, !dbg !320
  %3424 = load i32, ptr %10, align 4, !dbg !321
  %3425 = sext i32 %3424 to i64, !dbg !320
  %3426 = getelementptr inbounds %struct.POINT, ptr %3423, i64 %3425, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3422, ptr align 8 %3426, i64 16, i1 false), !dbg !320
  br label %3427, !dbg !322

3427:                                             ; preds = %3419
  %3428 = load i32, ptr %10, align 4, !dbg !323
  %3429 = add nsw i32 %3428, 1, !dbg !323
  store i32 %3429, ptr %10, align 4, !dbg !323
  %3430 = load i32, ptr %10, align 4, !dbg !312
  %3431 = load i32, ptr %8, align 4, !dbg !314
  %3432 = icmp slt i32 %3430, %3431, !dbg !315
  br i1 %3432, label %3433, label %5404, !dbg !316

3433:                                             ; preds = %3427
  %3434 = load i32, ptr %10, align 4, !dbg !317
  %3435 = sext i32 %3434 to i64, !dbg !319
  %3436 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3435, !dbg !319
  %3437 = load ptr, ptr %7, align 8, !dbg !320
  %3438 = load i32, ptr %10, align 4, !dbg !321
  %3439 = sext i32 %3438 to i64, !dbg !320
  %3440 = getelementptr inbounds %struct.POINT, ptr %3437, i64 %3439, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3436, ptr align 8 %3440, i64 16, i1 false), !dbg !320
  br label %3441, !dbg !322

3441:                                             ; preds = %3433
  %3442 = load i32, ptr %10, align 4, !dbg !323
  %3443 = add nsw i32 %3442, 1, !dbg !323
  store i32 %3443, ptr %10, align 4, !dbg !323
  %3444 = load i32, ptr %10, align 4, !dbg !312
  %3445 = load i32, ptr %8, align 4, !dbg !314
  %3446 = icmp slt i32 %3444, %3445, !dbg !315
  br i1 %3446, label %3447, label %5404, !dbg !316

3447:                                             ; preds = %3441
  %3448 = load i32, ptr %10, align 4, !dbg !317
  %3449 = sext i32 %3448 to i64, !dbg !319
  %3450 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3449, !dbg !319
  %3451 = load ptr, ptr %7, align 8, !dbg !320
  %3452 = load i32, ptr %10, align 4, !dbg !321
  %3453 = sext i32 %3452 to i64, !dbg !320
  %3454 = getelementptr inbounds %struct.POINT, ptr %3451, i64 %3453, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3450, ptr align 8 %3454, i64 16, i1 false), !dbg !320
  br label %3455, !dbg !322

3455:                                             ; preds = %3447
  %3456 = load i32, ptr %10, align 4, !dbg !323
  %3457 = add nsw i32 %3456, 1, !dbg !323
  store i32 %3457, ptr %10, align 4, !dbg !323
  %3458 = load i32, ptr %10, align 4, !dbg !312
  %3459 = load i32, ptr %8, align 4, !dbg !314
  %3460 = icmp slt i32 %3458, %3459, !dbg !315
  br i1 %3460, label %3461, label %5404, !dbg !316

3461:                                             ; preds = %3455
  %3462 = load i32, ptr %10, align 4, !dbg !317
  %3463 = sext i32 %3462 to i64, !dbg !319
  %3464 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3463, !dbg !319
  %3465 = load ptr, ptr %7, align 8, !dbg !320
  %3466 = load i32, ptr %10, align 4, !dbg !321
  %3467 = sext i32 %3466 to i64, !dbg !320
  %3468 = getelementptr inbounds %struct.POINT, ptr %3465, i64 %3467, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3464, ptr align 8 %3468, i64 16, i1 false), !dbg !320
  br label %3469, !dbg !322

3469:                                             ; preds = %3461
  %3470 = load i32, ptr %10, align 4, !dbg !323
  %3471 = add nsw i32 %3470, 1, !dbg !323
  store i32 %3471, ptr %10, align 4, !dbg !323
  %3472 = load i32, ptr %10, align 4, !dbg !312
  %3473 = load i32, ptr %8, align 4, !dbg !314
  %3474 = icmp slt i32 %3472, %3473, !dbg !315
  br i1 %3474, label %3475, label %5404, !dbg !316

3475:                                             ; preds = %3469
  %3476 = load i32, ptr %10, align 4, !dbg !317
  %3477 = sext i32 %3476 to i64, !dbg !319
  %3478 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3477, !dbg !319
  %3479 = load ptr, ptr %7, align 8, !dbg !320
  %3480 = load i32, ptr %10, align 4, !dbg !321
  %3481 = sext i32 %3480 to i64, !dbg !320
  %3482 = getelementptr inbounds %struct.POINT, ptr %3479, i64 %3481, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3478, ptr align 8 %3482, i64 16, i1 false), !dbg !320
  br label %3483, !dbg !322

3483:                                             ; preds = %3475
  %3484 = load i32, ptr %10, align 4, !dbg !323
  %3485 = add nsw i32 %3484, 1, !dbg !323
  store i32 %3485, ptr %10, align 4, !dbg !323
  %3486 = load i32, ptr %10, align 4, !dbg !312
  %3487 = load i32, ptr %8, align 4, !dbg !314
  %3488 = icmp slt i32 %3486, %3487, !dbg !315
  br i1 %3488, label %3489, label %5404, !dbg !316

3489:                                             ; preds = %3483
  %3490 = load i32, ptr %10, align 4, !dbg !317
  %3491 = sext i32 %3490 to i64, !dbg !319
  %3492 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3491, !dbg !319
  %3493 = load ptr, ptr %7, align 8, !dbg !320
  %3494 = load i32, ptr %10, align 4, !dbg !321
  %3495 = sext i32 %3494 to i64, !dbg !320
  %3496 = getelementptr inbounds %struct.POINT, ptr %3493, i64 %3495, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3492, ptr align 8 %3496, i64 16, i1 false), !dbg !320
  br label %3497, !dbg !322

3497:                                             ; preds = %3489
  %3498 = load i32, ptr %10, align 4, !dbg !323
  %3499 = add nsw i32 %3498, 1, !dbg !323
  store i32 %3499, ptr %10, align 4, !dbg !323
  %3500 = load i32, ptr %10, align 4, !dbg !312
  %3501 = load i32, ptr %8, align 4, !dbg !314
  %3502 = icmp slt i32 %3500, %3501, !dbg !315
  br i1 %3502, label %3503, label %5404, !dbg !316

3503:                                             ; preds = %3497
  %3504 = load i32, ptr %10, align 4, !dbg !317
  %3505 = sext i32 %3504 to i64, !dbg !319
  %3506 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3505, !dbg !319
  %3507 = load ptr, ptr %7, align 8, !dbg !320
  %3508 = load i32, ptr %10, align 4, !dbg !321
  %3509 = sext i32 %3508 to i64, !dbg !320
  %3510 = getelementptr inbounds %struct.POINT, ptr %3507, i64 %3509, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3506, ptr align 8 %3510, i64 16, i1 false), !dbg !320
  br label %3511, !dbg !322

3511:                                             ; preds = %3503
  %3512 = load i32, ptr %10, align 4, !dbg !323
  %3513 = add nsw i32 %3512, 1, !dbg !323
  store i32 %3513, ptr %10, align 4, !dbg !323
  %3514 = load i32, ptr %10, align 4, !dbg !312
  %3515 = load i32, ptr %8, align 4, !dbg !314
  %3516 = icmp slt i32 %3514, %3515, !dbg !315
  br i1 %3516, label %3517, label %5404, !dbg !316

3517:                                             ; preds = %3511
  %3518 = load i32, ptr %10, align 4, !dbg !317
  %3519 = sext i32 %3518 to i64, !dbg !319
  %3520 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3519, !dbg !319
  %3521 = load ptr, ptr %7, align 8, !dbg !320
  %3522 = load i32, ptr %10, align 4, !dbg !321
  %3523 = sext i32 %3522 to i64, !dbg !320
  %3524 = getelementptr inbounds %struct.POINT, ptr %3521, i64 %3523, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3520, ptr align 8 %3524, i64 16, i1 false), !dbg !320
  br label %3525, !dbg !322

3525:                                             ; preds = %3517
  %3526 = load i32, ptr %10, align 4, !dbg !323
  %3527 = add nsw i32 %3526, 1, !dbg !323
  store i32 %3527, ptr %10, align 4, !dbg !323
  %3528 = load i32, ptr %10, align 4, !dbg !312
  %3529 = load i32, ptr %8, align 4, !dbg !314
  %3530 = icmp slt i32 %3528, %3529, !dbg !315
  br i1 %3530, label %3531, label %5404, !dbg !316

3531:                                             ; preds = %3525
  %3532 = load i32, ptr %10, align 4, !dbg !317
  %3533 = sext i32 %3532 to i64, !dbg !319
  %3534 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3533, !dbg !319
  %3535 = load ptr, ptr %7, align 8, !dbg !320
  %3536 = load i32, ptr %10, align 4, !dbg !321
  %3537 = sext i32 %3536 to i64, !dbg !320
  %3538 = getelementptr inbounds %struct.POINT, ptr %3535, i64 %3537, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3534, ptr align 8 %3538, i64 16, i1 false), !dbg !320
  br label %3539, !dbg !322

3539:                                             ; preds = %3531
  %3540 = load i32, ptr %10, align 4, !dbg !323
  %3541 = add nsw i32 %3540, 1, !dbg !323
  store i32 %3541, ptr %10, align 4, !dbg !323
  %3542 = load i32, ptr %10, align 4, !dbg !312
  %3543 = load i32, ptr %8, align 4, !dbg !314
  %3544 = icmp slt i32 %3542, %3543, !dbg !315
  br i1 %3544, label %3545, label %5404, !dbg !316

3545:                                             ; preds = %3539
  %3546 = load i32, ptr %10, align 4, !dbg !317
  %3547 = sext i32 %3546 to i64, !dbg !319
  %3548 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3547, !dbg !319
  %3549 = load ptr, ptr %7, align 8, !dbg !320
  %3550 = load i32, ptr %10, align 4, !dbg !321
  %3551 = sext i32 %3550 to i64, !dbg !320
  %3552 = getelementptr inbounds %struct.POINT, ptr %3549, i64 %3551, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3548, ptr align 8 %3552, i64 16, i1 false), !dbg !320
  br label %3553, !dbg !322

3553:                                             ; preds = %3545
  %3554 = load i32, ptr %10, align 4, !dbg !323
  %3555 = add nsw i32 %3554, 1, !dbg !323
  store i32 %3555, ptr %10, align 4, !dbg !323
  %3556 = load i32, ptr %10, align 4, !dbg !312
  %3557 = load i32, ptr %8, align 4, !dbg !314
  %3558 = icmp slt i32 %3556, %3557, !dbg !315
  br i1 %3558, label %3559, label %5404, !dbg !316

3559:                                             ; preds = %3553
  %3560 = load i32, ptr %10, align 4, !dbg !317
  %3561 = sext i32 %3560 to i64, !dbg !319
  %3562 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3561, !dbg !319
  %3563 = load ptr, ptr %7, align 8, !dbg !320
  %3564 = load i32, ptr %10, align 4, !dbg !321
  %3565 = sext i32 %3564 to i64, !dbg !320
  %3566 = getelementptr inbounds %struct.POINT, ptr %3563, i64 %3565, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3562, ptr align 8 %3566, i64 16, i1 false), !dbg !320
  br label %3567, !dbg !322

3567:                                             ; preds = %3559
  %3568 = load i32, ptr %10, align 4, !dbg !323
  %3569 = add nsw i32 %3568, 1, !dbg !323
  store i32 %3569, ptr %10, align 4, !dbg !323
  %3570 = load i32, ptr %10, align 4, !dbg !312
  %3571 = load i32, ptr %8, align 4, !dbg !314
  %3572 = icmp slt i32 %3570, %3571, !dbg !315
  br i1 %3572, label %3573, label %5404, !dbg !316

3573:                                             ; preds = %3567
  %3574 = load i32, ptr %10, align 4, !dbg !317
  %3575 = sext i32 %3574 to i64, !dbg !319
  %3576 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3575, !dbg !319
  %3577 = load ptr, ptr %7, align 8, !dbg !320
  %3578 = load i32, ptr %10, align 4, !dbg !321
  %3579 = sext i32 %3578 to i64, !dbg !320
  %3580 = getelementptr inbounds %struct.POINT, ptr %3577, i64 %3579, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3576, ptr align 8 %3580, i64 16, i1 false), !dbg !320
  br label %3581, !dbg !322

3581:                                             ; preds = %3573
  %3582 = load i32, ptr %10, align 4, !dbg !323
  %3583 = add nsw i32 %3582, 1, !dbg !323
  store i32 %3583, ptr %10, align 4, !dbg !323
  %3584 = load i32, ptr %10, align 4, !dbg !312
  %3585 = load i32, ptr %8, align 4, !dbg !314
  %3586 = icmp slt i32 %3584, %3585, !dbg !315
  br i1 %3586, label %3587, label %5404, !dbg !316

3587:                                             ; preds = %3581
  %3588 = load i32, ptr %10, align 4, !dbg !317
  %3589 = sext i32 %3588 to i64, !dbg !319
  %3590 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3589, !dbg !319
  %3591 = load ptr, ptr %7, align 8, !dbg !320
  %3592 = load i32, ptr %10, align 4, !dbg !321
  %3593 = sext i32 %3592 to i64, !dbg !320
  %3594 = getelementptr inbounds %struct.POINT, ptr %3591, i64 %3593, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3590, ptr align 8 %3594, i64 16, i1 false), !dbg !320
  br label %3595, !dbg !322

3595:                                             ; preds = %3587
  %3596 = load i32, ptr %10, align 4, !dbg !323
  %3597 = add nsw i32 %3596, 1, !dbg !323
  store i32 %3597, ptr %10, align 4, !dbg !323
  %3598 = load i32, ptr %10, align 4, !dbg !312
  %3599 = load i32, ptr %8, align 4, !dbg !314
  %3600 = icmp slt i32 %3598, %3599, !dbg !315
  br i1 %3600, label %3601, label %5404, !dbg !316

3601:                                             ; preds = %3595
  %3602 = load i32, ptr %10, align 4, !dbg !317
  %3603 = sext i32 %3602 to i64, !dbg !319
  %3604 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3603, !dbg !319
  %3605 = load ptr, ptr %7, align 8, !dbg !320
  %3606 = load i32, ptr %10, align 4, !dbg !321
  %3607 = sext i32 %3606 to i64, !dbg !320
  %3608 = getelementptr inbounds %struct.POINT, ptr %3605, i64 %3607, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3604, ptr align 8 %3608, i64 16, i1 false), !dbg !320
  br label %3609, !dbg !322

3609:                                             ; preds = %3601
  %3610 = load i32, ptr %10, align 4, !dbg !323
  %3611 = add nsw i32 %3610, 1, !dbg !323
  store i32 %3611, ptr %10, align 4, !dbg !323
  %3612 = load i32, ptr %10, align 4, !dbg !312
  %3613 = load i32, ptr %8, align 4, !dbg !314
  %3614 = icmp slt i32 %3612, %3613, !dbg !315
  br i1 %3614, label %3615, label %5404, !dbg !316

3615:                                             ; preds = %3609
  %3616 = load i32, ptr %10, align 4, !dbg !317
  %3617 = sext i32 %3616 to i64, !dbg !319
  %3618 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3617, !dbg !319
  %3619 = load ptr, ptr %7, align 8, !dbg !320
  %3620 = load i32, ptr %10, align 4, !dbg !321
  %3621 = sext i32 %3620 to i64, !dbg !320
  %3622 = getelementptr inbounds %struct.POINT, ptr %3619, i64 %3621, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3618, ptr align 8 %3622, i64 16, i1 false), !dbg !320
  br label %3623, !dbg !322

3623:                                             ; preds = %3615
  %3624 = load i32, ptr %10, align 4, !dbg !323
  %3625 = add nsw i32 %3624, 1, !dbg !323
  store i32 %3625, ptr %10, align 4, !dbg !323
  %3626 = load i32, ptr %10, align 4, !dbg !312
  %3627 = load i32, ptr %8, align 4, !dbg !314
  %3628 = icmp slt i32 %3626, %3627, !dbg !315
  br i1 %3628, label %3629, label %5404, !dbg !316

3629:                                             ; preds = %3623
  %3630 = load i32, ptr %10, align 4, !dbg !317
  %3631 = sext i32 %3630 to i64, !dbg !319
  %3632 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3631, !dbg !319
  %3633 = load ptr, ptr %7, align 8, !dbg !320
  %3634 = load i32, ptr %10, align 4, !dbg !321
  %3635 = sext i32 %3634 to i64, !dbg !320
  %3636 = getelementptr inbounds %struct.POINT, ptr %3633, i64 %3635, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3632, ptr align 8 %3636, i64 16, i1 false), !dbg !320
  br label %3637, !dbg !322

3637:                                             ; preds = %3629
  %3638 = load i32, ptr %10, align 4, !dbg !323
  %3639 = add nsw i32 %3638, 1, !dbg !323
  store i32 %3639, ptr %10, align 4, !dbg !323
  %3640 = load i32, ptr %10, align 4, !dbg !312
  %3641 = load i32, ptr %8, align 4, !dbg !314
  %3642 = icmp slt i32 %3640, %3641, !dbg !315
  br i1 %3642, label %3643, label %5404, !dbg !316

3643:                                             ; preds = %3637
  %3644 = load i32, ptr %10, align 4, !dbg !317
  %3645 = sext i32 %3644 to i64, !dbg !319
  %3646 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3645, !dbg !319
  %3647 = load ptr, ptr %7, align 8, !dbg !320
  %3648 = load i32, ptr %10, align 4, !dbg !321
  %3649 = sext i32 %3648 to i64, !dbg !320
  %3650 = getelementptr inbounds %struct.POINT, ptr %3647, i64 %3649, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3646, ptr align 8 %3650, i64 16, i1 false), !dbg !320
  br label %3651, !dbg !322

3651:                                             ; preds = %3643
  %3652 = load i32, ptr %10, align 4, !dbg !323
  %3653 = add nsw i32 %3652, 1, !dbg !323
  store i32 %3653, ptr %10, align 4, !dbg !323
  %3654 = load i32, ptr %10, align 4, !dbg !312
  %3655 = load i32, ptr %8, align 4, !dbg !314
  %3656 = icmp slt i32 %3654, %3655, !dbg !315
  br i1 %3656, label %3657, label %5404, !dbg !316

3657:                                             ; preds = %3651
  %3658 = load i32, ptr %10, align 4, !dbg !317
  %3659 = sext i32 %3658 to i64, !dbg !319
  %3660 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3659, !dbg !319
  %3661 = load ptr, ptr %7, align 8, !dbg !320
  %3662 = load i32, ptr %10, align 4, !dbg !321
  %3663 = sext i32 %3662 to i64, !dbg !320
  %3664 = getelementptr inbounds %struct.POINT, ptr %3661, i64 %3663, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3660, ptr align 8 %3664, i64 16, i1 false), !dbg !320
  br label %3665, !dbg !322

3665:                                             ; preds = %3657
  %3666 = load i32, ptr %10, align 4, !dbg !323
  %3667 = add nsw i32 %3666, 1, !dbg !323
  store i32 %3667, ptr %10, align 4, !dbg !323
  %3668 = load i32, ptr %10, align 4, !dbg !312
  %3669 = load i32, ptr %8, align 4, !dbg !314
  %3670 = icmp slt i32 %3668, %3669, !dbg !315
  br i1 %3670, label %3671, label %5404, !dbg !316

3671:                                             ; preds = %3665
  %3672 = load i32, ptr %10, align 4, !dbg !317
  %3673 = sext i32 %3672 to i64, !dbg !319
  %3674 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3673, !dbg !319
  %3675 = load ptr, ptr %7, align 8, !dbg !320
  %3676 = load i32, ptr %10, align 4, !dbg !321
  %3677 = sext i32 %3676 to i64, !dbg !320
  %3678 = getelementptr inbounds %struct.POINT, ptr %3675, i64 %3677, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3674, ptr align 8 %3678, i64 16, i1 false), !dbg !320
  br label %3679, !dbg !322

3679:                                             ; preds = %3671
  %3680 = load i32, ptr %10, align 4, !dbg !323
  %3681 = add nsw i32 %3680, 1, !dbg !323
  store i32 %3681, ptr %10, align 4, !dbg !323
  %3682 = load i32, ptr %10, align 4, !dbg !312
  %3683 = load i32, ptr %8, align 4, !dbg !314
  %3684 = icmp slt i32 %3682, %3683, !dbg !315
  br i1 %3684, label %3685, label %5404, !dbg !316

3685:                                             ; preds = %3679
  %3686 = load i32, ptr %10, align 4, !dbg !317
  %3687 = sext i32 %3686 to i64, !dbg !319
  %3688 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3687, !dbg !319
  %3689 = load ptr, ptr %7, align 8, !dbg !320
  %3690 = load i32, ptr %10, align 4, !dbg !321
  %3691 = sext i32 %3690 to i64, !dbg !320
  %3692 = getelementptr inbounds %struct.POINT, ptr %3689, i64 %3691, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3688, ptr align 8 %3692, i64 16, i1 false), !dbg !320
  br label %3693, !dbg !322

3693:                                             ; preds = %3685
  %3694 = load i32, ptr %10, align 4, !dbg !323
  %3695 = add nsw i32 %3694, 1, !dbg !323
  store i32 %3695, ptr %10, align 4, !dbg !323
  %3696 = load i32, ptr %10, align 4, !dbg !312
  %3697 = load i32, ptr %8, align 4, !dbg !314
  %3698 = icmp slt i32 %3696, %3697, !dbg !315
  br i1 %3698, label %3699, label %5404, !dbg !316

3699:                                             ; preds = %3693
  %3700 = load i32, ptr %10, align 4, !dbg !317
  %3701 = sext i32 %3700 to i64, !dbg !319
  %3702 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3701, !dbg !319
  %3703 = load ptr, ptr %7, align 8, !dbg !320
  %3704 = load i32, ptr %10, align 4, !dbg !321
  %3705 = sext i32 %3704 to i64, !dbg !320
  %3706 = getelementptr inbounds %struct.POINT, ptr %3703, i64 %3705, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3702, ptr align 8 %3706, i64 16, i1 false), !dbg !320
  br label %3707, !dbg !322

3707:                                             ; preds = %3699
  %3708 = load i32, ptr %10, align 4, !dbg !323
  %3709 = add nsw i32 %3708, 1, !dbg !323
  store i32 %3709, ptr %10, align 4, !dbg !323
  %3710 = load i32, ptr %10, align 4, !dbg !312
  %3711 = load i32, ptr %8, align 4, !dbg !314
  %3712 = icmp slt i32 %3710, %3711, !dbg !315
  br i1 %3712, label %3713, label %5404, !dbg !316

3713:                                             ; preds = %3707
  %3714 = load i32, ptr %10, align 4, !dbg !317
  %3715 = sext i32 %3714 to i64, !dbg !319
  %3716 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3715, !dbg !319
  %3717 = load ptr, ptr %7, align 8, !dbg !320
  %3718 = load i32, ptr %10, align 4, !dbg !321
  %3719 = sext i32 %3718 to i64, !dbg !320
  %3720 = getelementptr inbounds %struct.POINT, ptr %3717, i64 %3719, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3716, ptr align 8 %3720, i64 16, i1 false), !dbg !320
  br label %3721, !dbg !322

3721:                                             ; preds = %3713
  %3722 = load i32, ptr %10, align 4, !dbg !323
  %3723 = add nsw i32 %3722, 1, !dbg !323
  store i32 %3723, ptr %10, align 4, !dbg !323
  %3724 = load i32, ptr %10, align 4, !dbg !312
  %3725 = load i32, ptr %8, align 4, !dbg !314
  %3726 = icmp slt i32 %3724, %3725, !dbg !315
  br i1 %3726, label %3727, label %5404, !dbg !316

3727:                                             ; preds = %3721
  %3728 = load i32, ptr %10, align 4, !dbg !317
  %3729 = sext i32 %3728 to i64, !dbg !319
  %3730 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3729, !dbg !319
  %3731 = load ptr, ptr %7, align 8, !dbg !320
  %3732 = load i32, ptr %10, align 4, !dbg !321
  %3733 = sext i32 %3732 to i64, !dbg !320
  %3734 = getelementptr inbounds %struct.POINT, ptr %3731, i64 %3733, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3730, ptr align 8 %3734, i64 16, i1 false), !dbg !320
  br label %3735, !dbg !322

3735:                                             ; preds = %3727
  %3736 = load i32, ptr %10, align 4, !dbg !323
  %3737 = add nsw i32 %3736, 1, !dbg !323
  store i32 %3737, ptr %10, align 4, !dbg !323
  %3738 = load i32, ptr %10, align 4, !dbg !312
  %3739 = load i32, ptr %8, align 4, !dbg !314
  %3740 = icmp slt i32 %3738, %3739, !dbg !315
  br i1 %3740, label %3741, label %5404, !dbg !316

3741:                                             ; preds = %3735
  %3742 = load i32, ptr %10, align 4, !dbg !317
  %3743 = sext i32 %3742 to i64, !dbg !319
  %3744 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3743, !dbg !319
  %3745 = load ptr, ptr %7, align 8, !dbg !320
  %3746 = load i32, ptr %10, align 4, !dbg !321
  %3747 = sext i32 %3746 to i64, !dbg !320
  %3748 = getelementptr inbounds %struct.POINT, ptr %3745, i64 %3747, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3744, ptr align 8 %3748, i64 16, i1 false), !dbg !320
  br label %3749, !dbg !322

3749:                                             ; preds = %3741
  %3750 = load i32, ptr %10, align 4, !dbg !323
  %3751 = add nsw i32 %3750, 1, !dbg !323
  store i32 %3751, ptr %10, align 4, !dbg !323
  %3752 = load i32, ptr %10, align 4, !dbg !312
  %3753 = load i32, ptr %8, align 4, !dbg !314
  %3754 = icmp slt i32 %3752, %3753, !dbg !315
  br i1 %3754, label %3755, label %5404, !dbg !316

3755:                                             ; preds = %3749
  %3756 = load i32, ptr %10, align 4, !dbg !317
  %3757 = sext i32 %3756 to i64, !dbg !319
  %3758 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3757, !dbg !319
  %3759 = load ptr, ptr %7, align 8, !dbg !320
  %3760 = load i32, ptr %10, align 4, !dbg !321
  %3761 = sext i32 %3760 to i64, !dbg !320
  %3762 = getelementptr inbounds %struct.POINT, ptr %3759, i64 %3761, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3758, ptr align 8 %3762, i64 16, i1 false), !dbg !320
  br label %3763, !dbg !322

3763:                                             ; preds = %3755
  %3764 = load i32, ptr %10, align 4, !dbg !323
  %3765 = add nsw i32 %3764, 1, !dbg !323
  store i32 %3765, ptr %10, align 4, !dbg !323
  %3766 = load i32, ptr %10, align 4, !dbg !312
  %3767 = load i32, ptr %8, align 4, !dbg !314
  %3768 = icmp slt i32 %3766, %3767, !dbg !315
  br i1 %3768, label %3769, label %5404, !dbg !316

3769:                                             ; preds = %3763
  %3770 = load i32, ptr %10, align 4, !dbg !317
  %3771 = sext i32 %3770 to i64, !dbg !319
  %3772 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3771, !dbg !319
  %3773 = load ptr, ptr %7, align 8, !dbg !320
  %3774 = load i32, ptr %10, align 4, !dbg !321
  %3775 = sext i32 %3774 to i64, !dbg !320
  %3776 = getelementptr inbounds %struct.POINT, ptr %3773, i64 %3775, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3772, ptr align 8 %3776, i64 16, i1 false), !dbg !320
  br label %3777, !dbg !322

3777:                                             ; preds = %3769
  %3778 = load i32, ptr %10, align 4, !dbg !323
  %3779 = add nsw i32 %3778, 1, !dbg !323
  store i32 %3779, ptr %10, align 4, !dbg !323
  %3780 = load i32, ptr %10, align 4, !dbg !312
  %3781 = load i32, ptr %8, align 4, !dbg !314
  %3782 = icmp slt i32 %3780, %3781, !dbg !315
  br i1 %3782, label %3783, label %5404, !dbg !316

3783:                                             ; preds = %3777
  %3784 = load i32, ptr %10, align 4, !dbg !317
  %3785 = sext i32 %3784 to i64, !dbg !319
  %3786 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3785, !dbg !319
  %3787 = load ptr, ptr %7, align 8, !dbg !320
  %3788 = load i32, ptr %10, align 4, !dbg !321
  %3789 = sext i32 %3788 to i64, !dbg !320
  %3790 = getelementptr inbounds %struct.POINT, ptr %3787, i64 %3789, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3786, ptr align 8 %3790, i64 16, i1 false), !dbg !320
  br label %3791, !dbg !322

3791:                                             ; preds = %3783
  %3792 = load i32, ptr %10, align 4, !dbg !323
  %3793 = add nsw i32 %3792, 1, !dbg !323
  store i32 %3793, ptr %10, align 4, !dbg !323
  %3794 = load i32, ptr %10, align 4, !dbg !312
  %3795 = load i32, ptr %8, align 4, !dbg !314
  %3796 = icmp slt i32 %3794, %3795, !dbg !315
  br i1 %3796, label %3797, label %5404, !dbg !316

3797:                                             ; preds = %3791
  %3798 = load i32, ptr %10, align 4, !dbg !317
  %3799 = sext i32 %3798 to i64, !dbg !319
  %3800 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3799, !dbg !319
  %3801 = load ptr, ptr %7, align 8, !dbg !320
  %3802 = load i32, ptr %10, align 4, !dbg !321
  %3803 = sext i32 %3802 to i64, !dbg !320
  %3804 = getelementptr inbounds %struct.POINT, ptr %3801, i64 %3803, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3800, ptr align 8 %3804, i64 16, i1 false), !dbg !320
  br label %3805, !dbg !322

3805:                                             ; preds = %3797
  %3806 = load i32, ptr %10, align 4, !dbg !323
  %3807 = add nsw i32 %3806, 1, !dbg !323
  store i32 %3807, ptr %10, align 4, !dbg !323
  %3808 = load i32, ptr %10, align 4, !dbg !312
  %3809 = load i32, ptr %8, align 4, !dbg !314
  %3810 = icmp slt i32 %3808, %3809, !dbg !315
  br i1 %3810, label %3811, label %5404, !dbg !316

3811:                                             ; preds = %3805
  %3812 = load i32, ptr %10, align 4, !dbg !317
  %3813 = sext i32 %3812 to i64, !dbg !319
  %3814 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3813, !dbg !319
  %3815 = load ptr, ptr %7, align 8, !dbg !320
  %3816 = load i32, ptr %10, align 4, !dbg !321
  %3817 = sext i32 %3816 to i64, !dbg !320
  %3818 = getelementptr inbounds %struct.POINT, ptr %3815, i64 %3817, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3814, ptr align 8 %3818, i64 16, i1 false), !dbg !320
  br label %3819, !dbg !322

3819:                                             ; preds = %3811
  %3820 = load i32, ptr %10, align 4, !dbg !323
  %3821 = add nsw i32 %3820, 1, !dbg !323
  store i32 %3821, ptr %10, align 4, !dbg !323
  %3822 = load i32, ptr %10, align 4, !dbg !312
  %3823 = load i32, ptr %8, align 4, !dbg !314
  %3824 = icmp slt i32 %3822, %3823, !dbg !315
  br i1 %3824, label %3825, label %5404, !dbg !316

3825:                                             ; preds = %3819
  %3826 = load i32, ptr %10, align 4, !dbg !317
  %3827 = sext i32 %3826 to i64, !dbg !319
  %3828 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3827, !dbg !319
  %3829 = load ptr, ptr %7, align 8, !dbg !320
  %3830 = load i32, ptr %10, align 4, !dbg !321
  %3831 = sext i32 %3830 to i64, !dbg !320
  %3832 = getelementptr inbounds %struct.POINT, ptr %3829, i64 %3831, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3828, ptr align 8 %3832, i64 16, i1 false), !dbg !320
  br label %3833, !dbg !322

3833:                                             ; preds = %3825
  %3834 = load i32, ptr %10, align 4, !dbg !323
  %3835 = add nsw i32 %3834, 1, !dbg !323
  store i32 %3835, ptr %10, align 4, !dbg !323
  %3836 = load i32, ptr %10, align 4, !dbg !312
  %3837 = load i32, ptr %8, align 4, !dbg !314
  %3838 = icmp slt i32 %3836, %3837, !dbg !315
  br i1 %3838, label %3839, label %5404, !dbg !316

3839:                                             ; preds = %3833
  %3840 = load i32, ptr %10, align 4, !dbg !317
  %3841 = sext i32 %3840 to i64, !dbg !319
  %3842 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3841, !dbg !319
  %3843 = load ptr, ptr %7, align 8, !dbg !320
  %3844 = load i32, ptr %10, align 4, !dbg !321
  %3845 = sext i32 %3844 to i64, !dbg !320
  %3846 = getelementptr inbounds %struct.POINT, ptr %3843, i64 %3845, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3842, ptr align 8 %3846, i64 16, i1 false), !dbg !320
  br label %3847, !dbg !322

3847:                                             ; preds = %3839
  %3848 = load i32, ptr %10, align 4, !dbg !323
  %3849 = add nsw i32 %3848, 1, !dbg !323
  store i32 %3849, ptr %10, align 4, !dbg !323
  %3850 = load i32, ptr %10, align 4, !dbg !312
  %3851 = load i32, ptr %8, align 4, !dbg !314
  %3852 = icmp slt i32 %3850, %3851, !dbg !315
  br i1 %3852, label %3853, label %5404, !dbg !316

3853:                                             ; preds = %3847
  %3854 = load i32, ptr %10, align 4, !dbg !317
  %3855 = sext i32 %3854 to i64, !dbg !319
  %3856 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3855, !dbg !319
  %3857 = load ptr, ptr %7, align 8, !dbg !320
  %3858 = load i32, ptr %10, align 4, !dbg !321
  %3859 = sext i32 %3858 to i64, !dbg !320
  %3860 = getelementptr inbounds %struct.POINT, ptr %3857, i64 %3859, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3856, ptr align 8 %3860, i64 16, i1 false), !dbg !320
  br label %3861, !dbg !322

3861:                                             ; preds = %3853
  %3862 = load i32, ptr %10, align 4, !dbg !323
  %3863 = add nsw i32 %3862, 1, !dbg !323
  store i32 %3863, ptr %10, align 4, !dbg !323
  %3864 = load i32, ptr %10, align 4, !dbg !312
  %3865 = load i32, ptr %8, align 4, !dbg !314
  %3866 = icmp slt i32 %3864, %3865, !dbg !315
  br i1 %3866, label %3867, label %5404, !dbg !316

3867:                                             ; preds = %3861
  %3868 = load i32, ptr %10, align 4, !dbg !317
  %3869 = sext i32 %3868 to i64, !dbg !319
  %3870 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3869, !dbg !319
  %3871 = load ptr, ptr %7, align 8, !dbg !320
  %3872 = load i32, ptr %10, align 4, !dbg !321
  %3873 = sext i32 %3872 to i64, !dbg !320
  %3874 = getelementptr inbounds %struct.POINT, ptr %3871, i64 %3873, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3870, ptr align 8 %3874, i64 16, i1 false), !dbg !320
  br label %3875, !dbg !322

3875:                                             ; preds = %3867
  %3876 = load i32, ptr %10, align 4, !dbg !323
  %3877 = add nsw i32 %3876, 1, !dbg !323
  store i32 %3877, ptr %10, align 4, !dbg !323
  %3878 = load i32, ptr %10, align 4, !dbg !312
  %3879 = load i32, ptr %8, align 4, !dbg !314
  %3880 = icmp slt i32 %3878, %3879, !dbg !315
  br i1 %3880, label %3881, label %5404, !dbg !316

3881:                                             ; preds = %3875
  %3882 = load i32, ptr %10, align 4, !dbg !317
  %3883 = sext i32 %3882 to i64, !dbg !319
  %3884 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3883, !dbg !319
  %3885 = load ptr, ptr %7, align 8, !dbg !320
  %3886 = load i32, ptr %10, align 4, !dbg !321
  %3887 = sext i32 %3886 to i64, !dbg !320
  %3888 = getelementptr inbounds %struct.POINT, ptr %3885, i64 %3887, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3884, ptr align 8 %3888, i64 16, i1 false), !dbg !320
  br label %3889, !dbg !322

3889:                                             ; preds = %3881
  %3890 = load i32, ptr %10, align 4, !dbg !323
  %3891 = add nsw i32 %3890, 1, !dbg !323
  store i32 %3891, ptr %10, align 4, !dbg !323
  %3892 = load i32, ptr %10, align 4, !dbg !312
  %3893 = load i32, ptr %8, align 4, !dbg !314
  %3894 = icmp slt i32 %3892, %3893, !dbg !315
  br i1 %3894, label %3895, label %5404, !dbg !316

3895:                                             ; preds = %3889
  %3896 = load i32, ptr %10, align 4, !dbg !317
  %3897 = sext i32 %3896 to i64, !dbg !319
  %3898 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3897, !dbg !319
  %3899 = load ptr, ptr %7, align 8, !dbg !320
  %3900 = load i32, ptr %10, align 4, !dbg !321
  %3901 = sext i32 %3900 to i64, !dbg !320
  %3902 = getelementptr inbounds %struct.POINT, ptr %3899, i64 %3901, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3898, ptr align 8 %3902, i64 16, i1 false), !dbg !320
  br label %3903, !dbg !322

3903:                                             ; preds = %3895
  %3904 = load i32, ptr %10, align 4, !dbg !323
  %3905 = add nsw i32 %3904, 1, !dbg !323
  store i32 %3905, ptr %10, align 4, !dbg !323
  %3906 = load i32, ptr %10, align 4, !dbg !312
  %3907 = load i32, ptr %8, align 4, !dbg !314
  %3908 = icmp slt i32 %3906, %3907, !dbg !315
  br i1 %3908, label %3909, label %5404, !dbg !316

3909:                                             ; preds = %3903
  %3910 = load i32, ptr %10, align 4, !dbg !317
  %3911 = sext i32 %3910 to i64, !dbg !319
  %3912 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3911, !dbg !319
  %3913 = load ptr, ptr %7, align 8, !dbg !320
  %3914 = load i32, ptr %10, align 4, !dbg !321
  %3915 = sext i32 %3914 to i64, !dbg !320
  %3916 = getelementptr inbounds %struct.POINT, ptr %3913, i64 %3915, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3912, ptr align 8 %3916, i64 16, i1 false), !dbg !320
  br label %3917, !dbg !322

3917:                                             ; preds = %3909
  %3918 = load i32, ptr %10, align 4, !dbg !323
  %3919 = add nsw i32 %3918, 1, !dbg !323
  store i32 %3919, ptr %10, align 4, !dbg !323
  %3920 = load i32, ptr %10, align 4, !dbg !312
  %3921 = load i32, ptr %8, align 4, !dbg !314
  %3922 = icmp slt i32 %3920, %3921, !dbg !315
  br i1 %3922, label %3923, label %5404, !dbg !316

3923:                                             ; preds = %3917
  %3924 = load i32, ptr %10, align 4, !dbg !317
  %3925 = sext i32 %3924 to i64, !dbg !319
  %3926 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3925, !dbg !319
  %3927 = load ptr, ptr %7, align 8, !dbg !320
  %3928 = load i32, ptr %10, align 4, !dbg !321
  %3929 = sext i32 %3928 to i64, !dbg !320
  %3930 = getelementptr inbounds %struct.POINT, ptr %3927, i64 %3929, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3926, ptr align 8 %3930, i64 16, i1 false), !dbg !320
  br label %3931, !dbg !322

3931:                                             ; preds = %3923
  %3932 = load i32, ptr %10, align 4, !dbg !323
  %3933 = add nsw i32 %3932, 1, !dbg !323
  store i32 %3933, ptr %10, align 4, !dbg !323
  %3934 = load i32, ptr %10, align 4, !dbg !312
  %3935 = load i32, ptr %8, align 4, !dbg !314
  %3936 = icmp slt i32 %3934, %3935, !dbg !315
  br i1 %3936, label %3937, label %5404, !dbg !316

3937:                                             ; preds = %3931
  %3938 = load i32, ptr %10, align 4, !dbg !317
  %3939 = sext i32 %3938 to i64, !dbg !319
  %3940 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3939, !dbg !319
  %3941 = load ptr, ptr %7, align 8, !dbg !320
  %3942 = load i32, ptr %10, align 4, !dbg !321
  %3943 = sext i32 %3942 to i64, !dbg !320
  %3944 = getelementptr inbounds %struct.POINT, ptr %3941, i64 %3943, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3940, ptr align 8 %3944, i64 16, i1 false), !dbg !320
  br label %3945, !dbg !322

3945:                                             ; preds = %3937
  %3946 = load i32, ptr %10, align 4, !dbg !323
  %3947 = add nsw i32 %3946, 1, !dbg !323
  store i32 %3947, ptr %10, align 4, !dbg !323
  %3948 = load i32, ptr %10, align 4, !dbg !312
  %3949 = load i32, ptr %8, align 4, !dbg !314
  %3950 = icmp slt i32 %3948, %3949, !dbg !315
  br i1 %3950, label %3951, label %5404, !dbg !316

3951:                                             ; preds = %3945
  %3952 = load i32, ptr %10, align 4, !dbg !317
  %3953 = sext i32 %3952 to i64, !dbg !319
  %3954 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3953, !dbg !319
  %3955 = load ptr, ptr %7, align 8, !dbg !320
  %3956 = load i32, ptr %10, align 4, !dbg !321
  %3957 = sext i32 %3956 to i64, !dbg !320
  %3958 = getelementptr inbounds %struct.POINT, ptr %3955, i64 %3957, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3954, ptr align 8 %3958, i64 16, i1 false), !dbg !320
  br label %3959, !dbg !322

3959:                                             ; preds = %3951
  %3960 = load i32, ptr %10, align 4, !dbg !323
  %3961 = add nsw i32 %3960, 1, !dbg !323
  store i32 %3961, ptr %10, align 4, !dbg !323
  %3962 = load i32, ptr %10, align 4, !dbg !312
  %3963 = load i32, ptr %8, align 4, !dbg !314
  %3964 = icmp slt i32 %3962, %3963, !dbg !315
  br i1 %3964, label %3965, label %5404, !dbg !316

3965:                                             ; preds = %3959
  %3966 = load i32, ptr %10, align 4, !dbg !317
  %3967 = sext i32 %3966 to i64, !dbg !319
  %3968 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3967, !dbg !319
  %3969 = load ptr, ptr %7, align 8, !dbg !320
  %3970 = load i32, ptr %10, align 4, !dbg !321
  %3971 = sext i32 %3970 to i64, !dbg !320
  %3972 = getelementptr inbounds %struct.POINT, ptr %3969, i64 %3971, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3968, ptr align 8 %3972, i64 16, i1 false), !dbg !320
  br label %3973, !dbg !322

3973:                                             ; preds = %3965
  %3974 = load i32, ptr %10, align 4, !dbg !323
  %3975 = add nsw i32 %3974, 1, !dbg !323
  store i32 %3975, ptr %10, align 4, !dbg !323
  %3976 = load i32, ptr %10, align 4, !dbg !312
  %3977 = load i32, ptr %8, align 4, !dbg !314
  %3978 = icmp slt i32 %3976, %3977, !dbg !315
  br i1 %3978, label %3979, label %5404, !dbg !316

3979:                                             ; preds = %3973
  %3980 = load i32, ptr %10, align 4, !dbg !317
  %3981 = sext i32 %3980 to i64, !dbg !319
  %3982 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3981, !dbg !319
  %3983 = load ptr, ptr %7, align 8, !dbg !320
  %3984 = load i32, ptr %10, align 4, !dbg !321
  %3985 = sext i32 %3984 to i64, !dbg !320
  %3986 = getelementptr inbounds %struct.POINT, ptr %3983, i64 %3985, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3982, ptr align 8 %3986, i64 16, i1 false), !dbg !320
  br label %3987, !dbg !322

3987:                                             ; preds = %3979
  %3988 = load i32, ptr %10, align 4, !dbg !323
  %3989 = add nsw i32 %3988, 1, !dbg !323
  store i32 %3989, ptr %10, align 4, !dbg !323
  %3990 = load i32, ptr %10, align 4, !dbg !312
  %3991 = load i32, ptr %8, align 4, !dbg !314
  %3992 = icmp slt i32 %3990, %3991, !dbg !315
  br i1 %3992, label %3993, label %5404, !dbg !316

3993:                                             ; preds = %3987
  %3994 = load i32, ptr %10, align 4, !dbg !317
  %3995 = sext i32 %3994 to i64, !dbg !319
  %3996 = getelementptr inbounds %struct.POINT, ptr %26, i64 %3995, !dbg !319
  %3997 = load ptr, ptr %7, align 8, !dbg !320
  %3998 = load i32, ptr %10, align 4, !dbg !321
  %3999 = sext i32 %3998 to i64, !dbg !320
  %4000 = getelementptr inbounds %struct.POINT, ptr %3997, i64 %3999, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %3996, ptr align 8 %4000, i64 16, i1 false), !dbg !320
  br label %4001, !dbg !322

4001:                                             ; preds = %3993
  %4002 = load i32, ptr %10, align 4, !dbg !323
  %4003 = add nsw i32 %4002, 1, !dbg !323
  store i32 %4003, ptr %10, align 4, !dbg !323
  %4004 = load i32, ptr %10, align 4, !dbg !312
  %4005 = load i32, ptr %8, align 4, !dbg !314
  %4006 = icmp slt i32 %4004, %4005, !dbg !315
  br i1 %4006, label %4007, label %5404, !dbg !316

4007:                                             ; preds = %4001
  %4008 = load i32, ptr %10, align 4, !dbg !317
  %4009 = sext i32 %4008 to i64, !dbg !319
  %4010 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4009, !dbg !319
  %4011 = load ptr, ptr %7, align 8, !dbg !320
  %4012 = load i32, ptr %10, align 4, !dbg !321
  %4013 = sext i32 %4012 to i64, !dbg !320
  %4014 = getelementptr inbounds %struct.POINT, ptr %4011, i64 %4013, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4010, ptr align 8 %4014, i64 16, i1 false), !dbg !320
  br label %4015, !dbg !322

4015:                                             ; preds = %4007
  %4016 = load i32, ptr %10, align 4, !dbg !323
  %4017 = add nsw i32 %4016, 1, !dbg !323
  store i32 %4017, ptr %10, align 4, !dbg !323
  %4018 = load i32, ptr %10, align 4, !dbg !312
  %4019 = load i32, ptr %8, align 4, !dbg !314
  %4020 = icmp slt i32 %4018, %4019, !dbg !315
  br i1 %4020, label %4021, label %5404, !dbg !316

4021:                                             ; preds = %4015
  %4022 = load i32, ptr %10, align 4, !dbg !317
  %4023 = sext i32 %4022 to i64, !dbg !319
  %4024 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4023, !dbg !319
  %4025 = load ptr, ptr %7, align 8, !dbg !320
  %4026 = load i32, ptr %10, align 4, !dbg !321
  %4027 = sext i32 %4026 to i64, !dbg !320
  %4028 = getelementptr inbounds %struct.POINT, ptr %4025, i64 %4027, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4024, ptr align 8 %4028, i64 16, i1 false), !dbg !320
  br label %4029, !dbg !322

4029:                                             ; preds = %4021
  %4030 = load i32, ptr %10, align 4, !dbg !323
  %4031 = add nsw i32 %4030, 1, !dbg !323
  store i32 %4031, ptr %10, align 4, !dbg !323
  %4032 = load i32, ptr %10, align 4, !dbg !312
  %4033 = load i32, ptr %8, align 4, !dbg !314
  %4034 = icmp slt i32 %4032, %4033, !dbg !315
  br i1 %4034, label %4035, label %5404, !dbg !316

4035:                                             ; preds = %4029
  %4036 = load i32, ptr %10, align 4, !dbg !317
  %4037 = sext i32 %4036 to i64, !dbg !319
  %4038 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4037, !dbg !319
  %4039 = load ptr, ptr %7, align 8, !dbg !320
  %4040 = load i32, ptr %10, align 4, !dbg !321
  %4041 = sext i32 %4040 to i64, !dbg !320
  %4042 = getelementptr inbounds %struct.POINT, ptr %4039, i64 %4041, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4038, ptr align 8 %4042, i64 16, i1 false), !dbg !320
  br label %4043, !dbg !322

4043:                                             ; preds = %4035
  %4044 = load i32, ptr %10, align 4, !dbg !323
  %4045 = add nsw i32 %4044, 1, !dbg !323
  store i32 %4045, ptr %10, align 4, !dbg !323
  %4046 = load i32, ptr %10, align 4, !dbg !312
  %4047 = load i32, ptr %8, align 4, !dbg !314
  %4048 = icmp slt i32 %4046, %4047, !dbg !315
  br i1 %4048, label %4049, label %5404, !dbg !316

4049:                                             ; preds = %4043
  %4050 = load i32, ptr %10, align 4, !dbg !317
  %4051 = sext i32 %4050 to i64, !dbg !319
  %4052 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4051, !dbg !319
  %4053 = load ptr, ptr %7, align 8, !dbg !320
  %4054 = load i32, ptr %10, align 4, !dbg !321
  %4055 = sext i32 %4054 to i64, !dbg !320
  %4056 = getelementptr inbounds %struct.POINT, ptr %4053, i64 %4055, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4052, ptr align 8 %4056, i64 16, i1 false), !dbg !320
  br label %4057, !dbg !322

4057:                                             ; preds = %4049
  %4058 = load i32, ptr %10, align 4, !dbg !323
  %4059 = add nsw i32 %4058, 1, !dbg !323
  store i32 %4059, ptr %10, align 4, !dbg !323
  %4060 = load i32, ptr %10, align 4, !dbg !312
  %4061 = load i32, ptr %8, align 4, !dbg !314
  %4062 = icmp slt i32 %4060, %4061, !dbg !315
  br i1 %4062, label %4063, label %5404, !dbg !316

4063:                                             ; preds = %4057
  %4064 = load i32, ptr %10, align 4, !dbg !317
  %4065 = sext i32 %4064 to i64, !dbg !319
  %4066 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4065, !dbg !319
  %4067 = load ptr, ptr %7, align 8, !dbg !320
  %4068 = load i32, ptr %10, align 4, !dbg !321
  %4069 = sext i32 %4068 to i64, !dbg !320
  %4070 = getelementptr inbounds %struct.POINT, ptr %4067, i64 %4069, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4066, ptr align 8 %4070, i64 16, i1 false), !dbg !320
  br label %4071, !dbg !322

4071:                                             ; preds = %4063
  %4072 = load i32, ptr %10, align 4, !dbg !323
  %4073 = add nsw i32 %4072, 1, !dbg !323
  store i32 %4073, ptr %10, align 4, !dbg !323
  %4074 = load i32, ptr %10, align 4, !dbg !312
  %4075 = load i32, ptr %8, align 4, !dbg !314
  %4076 = icmp slt i32 %4074, %4075, !dbg !315
  br i1 %4076, label %4077, label %5404, !dbg !316

4077:                                             ; preds = %4071
  %4078 = load i32, ptr %10, align 4, !dbg !317
  %4079 = sext i32 %4078 to i64, !dbg !319
  %4080 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4079, !dbg !319
  %4081 = load ptr, ptr %7, align 8, !dbg !320
  %4082 = load i32, ptr %10, align 4, !dbg !321
  %4083 = sext i32 %4082 to i64, !dbg !320
  %4084 = getelementptr inbounds %struct.POINT, ptr %4081, i64 %4083, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4080, ptr align 8 %4084, i64 16, i1 false), !dbg !320
  br label %4085, !dbg !322

4085:                                             ; preds = %4077
  %4086 = load i32, ptr %10, align 4, !dbg !323
  %4087 = add nsw i32 %4086, 1, !dbg !323
  store i32 %4087, ptr %10, align 4, !dbg !323
  %4088 = load i32, ptr %10, align 4, !dbg !312
  %4089 = load i32, ptr %8, align 4, !dbg !314
  %4090 = icmp slt i32 %4088, %4089, !dbg !315
  br i1 %4090, label %4091, label %5404, !dbg !316

4091:                                             ; preds = %4085
  %4092 = load i32, ptr %10, align 4, !dbg !317
  %4093 = sext i32 %4092 to i64, !dbg !319
  %4094 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4093, !dbg !319
  %4095 = load ptr, ptr %7, align 8, !dbg !320
  %4096 = load i32, ptr %10, align 4, !dbg !321
  %4097 = sext i32 %4096 to i64, !dbg !320
  %4098 = getelementptr inbounds %struct.POINT, ptr %4095, i64 %4097, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4094, ptr align 8 %4098, i64 16, i1 false), !dbg !320
  br label %4099, !dbg !322

4099:                                             ; preds = %4091
  %4100 = load i32, ptr %10, align 4, !dbg !323
  %4101 = add nsw i32 %4100, 1, !dbg !323
  store i32 %4101, ptr %10, align 4, !dbg !323
  %4102 = load i32, ptr %10, align 4, !dbg !312
  %4103 = load i32, ptr %8, align 4, !dbg !314
  %4104 = icmp slt i32 %4102, %4103, !dbg !315
  br i1 %4104, label %4105, label %5404, !dbg !316

4105:                                             ; preds = %4099
  %4106 = load i32, ptr %10, align 4, !dbg !317
  %4107 = sext i32 %4106 to i64, !dbg !319
  %4108 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4107, !dbg !319
  %4109 = load ptr, ptr %7, align 8, !dbg !320
  %4110 = load i32, ptr %10, align 4, !dbg !321
  %4111 = sext i32 %4110 to i64, !dbg !320
  %4112 = getelementptr inbounds %struct.POINT, ptr %4109, i64 %4111, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4108, ptr align 8 %4112, i64 16, i1 false), !dbg !320
  br label %4113, !dbg !322

4113:                                             ; preds = %4105
  %4114 = load i32, ptr %10, align 4, !dbg !323
  %4115 = add nsw i32 %4114, 1, !dbg !323
  store i32 %4115, ptr %10, align 4, !dbg !323
  %4116 = load i32, ptr %10, align 4, !dbg !312
  %4117 = load i32, ptr %8, align 4, !dbg !314
  %4118 = icmp slt i32 %4116, %4117, !dbg !315
  br i1 %4118, label %4119, label %5404, !dbg !316

4119:                                             ; preds = %4113
  %4120 = load i32, ptr %10, align 4, !dbg !317
  %4121 = sext i32 %4120 to i64, !dbg !319
  %4122 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4121, !dbg !319
  %4123 = load ptr, ptr %7, align 8, !dbg !320
  %4124 = load i32, ptr %10, align 4, !dbg !321
  %4125 = sext i32 %4124 to i64, !dbg !320
  %4126 = getelementptr inbounds %struct.POINT, ptr %4123, i64 %4125, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4122, ptr align 8 %4126, i64 16, i1 false), !dbg !320
  br label %4127, !dbg !322

4127:                                             ; preds = %4119
  %4128 = load i32, ptr %10, align 4, !dbg !323
  %4129 = add nsw i32 %4128, 1, !dbg !323
  store i32 %4129, ptr %10, align 4, !dbg !323
  %4130 = load i32, ptr %10, align 4, !dbg !312
  %4131 = load i32, ptr %8, align 4, !dbg !314
  %4132 = icmp slt i32 %4130, %4131, !dbg !315
  br i1 %4132, label %4133, label %5404, !dbg !316

4133:                                             ; preds = %4127
  %4134 = load i32, ptr %10, align 4, !dbg !317
  %4135 = sext i32 %4134 to i64, !dbg !319
  %4136 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4135, !dbg !319
  %4137 = load ptr, ptr %7, align 8, !dbg !320
  %4138 = load i32, ptr %10, align 4, !dbg !321
  %4139 = sext i32 %4138 to i64, !dbg !320
  %4140 = getelementptr inbounds %struct.POINT, ptr %4137, i64 %4139, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4136, ptr align 8 %4140, i64 16, i1 false), !dbg !320
  br label %4141, !dbg !322

4141:                                             ; preds = %4133
  %4142 = load i32, ptr %10, align 4, !dbg !323
  %4143 = add nsw i32 %4142, 1, !dbg !323
  store i32 %4143, ptr %10, align 4, !dbg !323
  %4144 = load i32, ptr %10, align 4, !dbg !312
  %4145 = load i32, ptr %8, align 4, !dbg !314
  %4146 = icmp slt i32 %4144, %4145, !dbg !315
  br i1 %4146, label %4147, label %5404, !dbg !316

4147:                                             ; preds = %4141
  %4148 = load i32, ptr %10, align 4, !dbg !317
  %4149 = sext i32 %4148 to i64, !dbg !319
  %4150 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4149, !dbg !319
  %4151 = load ptr, ptr %7, align 8, !dbg !320
  %4152 = load i32, ptr %10, align 4, !dbg !321
  %4153 = sext i32 %4152 to i64, !dbg !320
  %4154 = getelementptr inbounds %struct.POINT, ptr %4151, i64 %4153, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4150, ptr align 8 %4154, i64 16, i1 false), !dbg !320
  br label %4155, !dbg !322

4155:                                             ; preds = %4147
  %4156 = load i32, ptr %10, align 4, !dbg !323
  %4157 = add nsw i32 %4156, 1, !dbg !323
  store i32 %4157, ptr %10, align 4, !dbg !323
  %4158 = load i32, ptr %10, align 4, !dbg !312
  %4159 = load i32, ptr %8, align 4, !dbg !314
  %4160 = icmp slt i32 %4158, %4159, !dbg !315
  br i1 %4160, label %4161, label %5404, !dbg !316

4161:                                             ; preds = %4155
  %4162 = load i32, ptr %10, align 4, !dbg !317
  %4163 = sext i32 %4162 to i64, !dbg !319
  %4164 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4163, !dbg !319
  %4165 = load ptr, ptr %7, align 8, !dbg !320
  %4166 = load i32, ptr %10, align 4, !dbg !321
  %4167 = sext i32 %4166 to i64, !dbg !320
  %4168 = getelementptr inbounds %struct.POINT, ptr %4165, i64 %4167, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4164, ptr align 8 %4168, i64 16, i1 false), !dbg !320
  br label %4169, !dbg !322

4169:                                             ; preds = %4161
  %4170 = load i32, ptr %10, align 4, !dbg !323
  %4171 = add nsw i32 %4170, 1, !dbg !323
  store i32 %4171, ptr %10, align 4, !dbg !323
  %4172 = load i32, ptr %10, align 4, !dbg !312
  %4173 = load i32, ptr %8, align 4, !dbg !314
  %4174 = icmp slt i32 %4172, %4173, !dbg !315
  br i1 %4174, label %4175, label %5404, !dbg !316

4175:                                             ; preds = %4169
  %4176 = load i32, ptr %10, align 4, !dbg !317
  %4177 = sext i32 %4176 to i64, !dbg !319
  %4178 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4177, !dbg !319
  %4179 = load ptr, ptr %7, align 8, !dbg !320
  %4180 = load i32, ptr %10, align 4, !dbg !321
  %4181 = sext i32 %4180 to i64, !dbg !320
  %4182 = getelementptr inbounds %struct.POINT, ptr %4179, i64 %4181, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4178, ptr align 8 %4182, i64 16, i1 false), !dbg !320
  br label %4183, !dbg !322

4183:                                             ; preds = %4175
  %4184 = load i32, ptr %10, align 4, !dbg !323
  %4185 = add nsw i32 %4184, 1, !dbg !323
  store i32 %4185, ptr %10, align 4, !dbg !323
  %4186 = load i32, ptr %10, align 4, !dbg !312
  %4187 = load i32, ptr %8, align 4, !dbg !314
  %4188 = icmp slt i32 %4186, %4187, !dbg !315
  br i1 %4188, label %4189, label %5404, !dbg !316

4189:                                             ; preds = %4183
  %4190 = load i32, ptr %10, align 4, !dbg !317
  %4191 = sext i32 %4190 to i64, !dbg !319
  %4192 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4191, !dbg !319
  %4193 = load ptr, ptr %7, align 8, !dbg !320
  %4194 = load i32, ptr %10, align 4, !dbg !321
  %4195 = sext i32 %4194 to i64, !dbg !320
  %4196 = getelementptr inbounds %struct.POINT, ptr %4193, i64 %4195, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4192, ptr align 8 %4196, i64 16, i1 false), !dbg !320
  br label %4197, !dbg !322

4197:                                             ; preds = %4189
  %4198 = load i32, ptr %10, align 4, !dbg !323
  %4199 = add nsw i32 %4198, 1, !dbg !323
  store i32 %4199, ptr %10, align 4, !dbg !323
  %4200 = load i32, ptr %10, align 4, !dbg !312
  %4201 = load i32, ptr %8, align 4, !dbg !314
  %4202 = icmp slt i32 %4200, %4201, !dbg !315
  br i1 %4202, label %4203, label %5404, !dbg !316

4203:                                             ; preds = %4197
  %4204 = load i32, ptr %10, align 4, !dbg !317
  %4205 = sext i32 %4204 to i64, !dbg !319
  %4206 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4205, !dbg !319
  %4207 = load ptr, ptr %7, align 8, !dbg !320
  %4208 = load i32, ptr %10, align 4, !dbg !321
  %4209 = sext i32 %4208 to i64, !dbg !320
  %4210 = getelementptr inbounds %struct.POINT, ptr %4207, i64 %4209, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4206, ptr align 8 %4210, i64 16, i1 false), !dbg !320
  br label %4211, !dbg !322

4211:                                             ; preds = %4203
  %4212 = load i32, ptr %10, align 4, !dbg !323
  %4213 = add nsw i32 %4212, 1, !dbg !323
  store i32 %4213, ptr %10, align 4, !dbg !323
  %4214 = load i32, ptr %10, align 4, !dbg !312
  %4215 = load i32, ptr %8, align 4, !dbg !314
  %4216 = icmp slt i32 %4214, %4215, !dbg !315
  br i1 %4216, label %4217, label %5404, !dbg !316

4217:                                             ; preds = %4211
  %4218 = load i32, ptr %10, align 4, !dbg !317
  %4219 = sext i32 %4218 to i64, !dbg !319
  %4220 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4219, !dbg !319
  %4221 = load ptr, ptr %7, align 8, !dbg !320
  %4222 = load i32, ptr %10, align 4, !dbg !321
  %4223 = sext i32 %4222 to i64, !dbg !320
  %4224 = getelementptr inbounds %struct.POINT, ptr %4221, i64 %4223, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4220, ptr align 8 %4224, i64 16, i1 false), !dbg !320
  br label %4225, !dbg !322

4225:                                             ; preds = %4217
  %4226 = load i32, ptr %10, align 4, !dbg !323
  %4227 = add nsw i32 %4226, 1, !dbg !323
  store i32 %4227, ptr %10, align 4, !dbg !323
  %4228 = load i32, ptr %10, align 4, !dbg !312
  %4229 = load i32, ptr %8, align 4, !dbg !314
  %4230 = icmp slt i32 %4228, %4229, !dbg !315
  br i1 %4230, label %4231, label %5404, !dbg !316

4231:                                             ; preds = %4225
  %4232 = load i32, ptr %10, align 4, !dbg !317
  %4233 = sext i32 %4232 to i64, !dbg !319
  %4234 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4233, !dbg !319
  %4235 = load ptr, ptr %7, align 8, !dbg !320
  %4236 = load i32, ptr %10, align 4, !dbg !321
  %4237 = sext i32 %4236 to i64, !dbg !320
  %4238 = getelementptr inbounds %struct.POINT, ptr %4235, i64 %4237, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4234, ptr align 8 %4238, i64 16, i1 false), !dbg !320
  br label %4239, !dbg !322

4239:                                             ; preds = %4231
  %4240 = load i32, ptr %10, align 4, !dbg !323
  %4241 = add nsw i32 %4240, 1, !dbg !323
  store i32 %4241, ptr %10, align 4, !dbg !323
  %4242 = load i32, ptr %10, align 4, !dbg !312
  %4243 = load i32, ptr %8, align 4, !dbg !314
  %4244 = icmp slt i32 %4242, %4243, !dbg !315
  br i1 %4244, label %4245, label %5404, !dbg !316

4245:                                             ; preds = %4239
  %4246 = load i32, ptr %10, align 4, !dbg !317
  %4247 = sext i32 %4246 to i64, !dbg !319
  %4248 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4247, !dbg !319
  %4249 = load ptr, ptr %7, align 8, !dbg !320
  %4250 = load i32, ptr %10, align 4, !dbg !321
  %4251 = sext i32 %4250 to i64, !dbg !320
  %4252 = getelementptr inbounds %struct.POINT, ptr %4249, i64 %4251, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4248, ptr align 8 %4252, i64 16, i1 false), !dbg !320
  br label %4253, !dbg !322

4253:                                             ; preds = %4245
  %4254 = load i32, ptr %10, align 4, !dbg !323
  %4255 = add nsw i32 %4254, 1, !dbg !323
  store i32 %4255, ptr %10, align 4, !dbg !323
  %4256 = load i32, ptr %10, align 4, !dbg !312
  %4257 = load i32, ptr %8, align 4, !dbg !314
  %4258 = icmp slt i32 %4256, %4257, !dbg !315
  br i1 %4258, label %4259, label %5404, !dbg !316

4259:                                             ; preds = %4253
  %4260 = load i32, ptr %10, align 4, !dbg !317
  %4261 = sext i32 %4260 to i64, !dbg !319
  %4262 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4261, !dbg !319
  %4263 = load ptr, ptr %7, align 8, !dbg !320
  %4264 = load i32, ptr %10, align 4, !dbg !321
  %4265 = sext i32 %4264 to i64, !dbg !320
  %4266 = getelementptr inbounds %struct.POINT, ptr %4263, i64 %4265, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4262, ptr align 8 %4266, i64 16, i1 false), !dbg !320
  br label %4267, !dbg !322

4267:                                             ; preds = %4259
  %4268 = load i32, ptr %10, align 4, !dbg !323
  %4269 = add nsw i32 %4268, 1, !dbg !323
  store i32 %4269, ptr %10, align 4, !dbg !323
  %4270 = load i32, ptr %10, align 4, !dbg !312
  %4271 = load i32, ptr %8, align 4, !dbg !314
  %4272 = icmp slt i32 %4270, %4271, !dbg !315
  br i1 %4272, label %4273, label %5404, !dbg !316

4273:                                             ; preds = %4267
  %4274 = load i32, ptr %10, align 4, !dbg !317
  %4275 = sext i32 %4274 to i64, !dbg !319
  %4276 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4275, !dbg !319
  %4277 = load ptr, ptr %7, align 8, !dbg !320
  %4278 = load i32, ptr %10, align 4, !dbg !321
  %4279 = sext i32 %4278 to i64, !dbg !320
  %4280 = getelementptr inbounds %struct.POINT, ptr %4277, i64 %4279, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4276, ptr align 8 %4280, i64 16, i1 false), !dbg !320
  br label %4281, !dbg !322

4281:                                             ; preds = %4273
  %4282 = load i32, ptr %10, align 4, !dbg !323
  %4283 = add nsw i32 %4282, 1, !dbg !323
  store i32 %4283, ptr %10, align 4, !dbg !323
  %4284 = load i32, ptr %10, align 4, !dbg !312
  %4285 = load i32, ptr %8, align 4, !dbg !314
  %4286 = icmp slt i32 %4284, %4285, !dbg !315
  br i1 %4286, label %4287, label %5404, !dbg !316

4287:                                             ; preds = %4281
  %4288 = load i32, ptr %10, align 4, !dbg !317
  %4289 = sext i32 %4288 to i64, !dbg !319
  %4290 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4289, !dbg !319
  %4291 = load ptr, ptr %7, align 8, !dbg !320
  %4292 = load i32, ptr %10, align 4, !dbg !321
  %4293 = sext i32 %4292 to i64, !dbg !320
  %4294 = getelementptr inbounds %struct.POINT, ptr %4291, i64 %4293, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4290, ptr align 8 %4294, i64 16, i1 false), !dbg !320
  br label %4295, !dbg !322

4295:                                             ; preds = %4287
  %4296 = load i32, ptr %10, align 4, !dbg !323
  %4297 = add nsw i32 %4296, 1, !dbg !323
  store i32 %4297, ptr %10, align 4, !dbg !323
  %4298 = load i32, ptr %10, align 4, !dbg !312
  %4299 = load i32, ptr %8, align 4, !dbg !314
  %4300 = icmp slt i32 %4298, %4299, !dbg !315
  br i1 %4300, label %4301, label %5404, !dbg !316

4301:                                             ; preds = %4295
  %4302 = load i32, ptr %10, align 4, !dbg !317
  %4303 = sext i32 %4302 to i64, !dbg !319
  %4304 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4303, !dbg !319
  %4305 = load ptr, ptr %7, align 8, !dbg !320
  %4306 = load i32, ptr %10, align 4, !dbg !321
  %4307 = sext i32 %4306 to i64, !dbg !320
  %4308 = getelementptr inbounds %struct.POINT, ptr %4305, i64 %4307, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4304, ptr align 8 %4308, i64 16, i1 false), !dbg !320
  br label %4309, !dbg !322

4309:                                             ; preds = %4301
  %4310 = load i32, ptr %10, align 4, !dbg !323
  %4311 = add nsw i32 %4310, 1, !dbg !323
  store i32 %4311, ptr %10, align 4, !dbg !323
  %4312 = load i32, ptr %10, align 4, !dbg !312
  %4313 = load i32, ptr %8, align 4, !dbg !314
  %4314 = icmp slt i32 %4312, %4313, !dbg !315
  br i1 %4314, label %4315, label %5404, !dbg !316

4315:                                             ; preds = %4309
  %4316 = load i32, ptr %10, align 4, !dbg !317
  %4317 = sext i32 %4316 to i64, !dbg !319
  %4318 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4317, !dbg !319
  %4319 = load ptr, ptr %7, align 8, !dbg !320
  %4320 = load i32, ptr %10, align 4, !dbg !321
  %4321 = sext i32 %4320 to i64, !dbg !320
  %4322 = getelementptr inbounds %struct.POINT, ptr %4319, i64 %4321, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4318, ptr align 8 %4322, i64 16, i1 false), !dbg !320
  br label %4323, !dbg !322

4323:                                             ; preds = %4315
  %4324 = load i32, ptr %10, align 4, !dbg !323
  %4325 = add nsw i32 %4324, 1, !dbg !323
  store i32 %4325, ptr %10, align 4, !dbg !323
  %4326 = load i32, ptr %10, align 4, !dbg !312
  %4327 = load i32, ptr %8, align 4, !dbg !314
  %4328 = icmp slt i32 %4326, %4327, !dbg !315
  br i1 %4328, label %4329, label %5404, !dbg !316

4329:                                             ; preds = %4323
  %4330 = load i32, ptr %10, align 4, !dbg !317
  %4331 = sext i32 %4330 to i64, !dbg !319
  %4332 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4331, !dbg !319
  %4333 = load ptr, ptr %7, align 8, !dbg !320
  %4334 = load i32, ptr %10, align 4, !dbg !321
  %4335 = sext i32 %4334 to i64, !dbg !320
  %4336 = getelementptr inbounds %struct.POINT, ptr %4333, i64 %4335, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4332, ptr align 8 %4336, i64 16, i1 false), !dbg !320
  br label %4337, !dbg !322

4337:                                             ; preds = %4329
  %4338 = load i32, ptr %10, align 4, !dbg !323
  %4339 = add nsw i32 %4338, 1, !dbg !323
  store i32 %4339, ptr %10, align 4, !dbg !323
  %4340 = load i32, ptr %10, align 4, !dbg !312
  %4341 = load i32, ptr %8, align 4, !dbg !314
  %4342 = icmp slt i32 %4340, %4341, !dbg !315
  br i1 %4342, label %4343, label %5404, !dbg !316

4343:                                             ; preds = %4337
  %4344 = load i32, ptr %10, align 4, !dbg !317
  %4345 = sext i32 %4344 to i64, !dbg !319
  %4346 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4345, !dbg !319
  %4347 = load ptr, ptr %7, align 8, !dbg !320
  %4348 = load i32, ptr %10, align 4, !dbg !321
  %4349 = sext i32 %4348 to i64, !dbg !320
  %4350 = getelementptr inbounds %struct.POINT, ptr %4347, i64 %4349, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4346, ptr align 8 %4350, i64 16, i1 false), !dbg !320
  br label %4351, !dbg !322

4351:                                             ; preds = %4343
  %4352 = load i32, ptr %10, align 4, !dbg !323
  %4353 = add nsw i32 %4352, 1, !dbg !323
  store i32 %4353, ptr %10, align 4, !dbg !323
  %4354 = load i32, ptr %10, align 4, !dbg !312
  %4355 = load i32, ptr %8, align 4, !dbg !314
  %4356 = icmp slt i32 %4354, %4355, !dbg !315
  br i1 %4356, label %4357, label %5404, !dbg !316

4357:                                             ; preds = %4351
  %4358 = load i32, ptr %10, align 4, !dbg !317
  %4359 = sext i32 %4358 to i64, !dbg !319
  %4360 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4359, !dbg !319
  %4361 = load ptr, ptr %7, align 8, !dbg !320
  %4362 = load i32, ptr %10, align 4, !dbg !321
  %4363 = sext i32 %4362 to i64, !dbg !320
  %4364 = getelementptr inbounds %struct.POINT, ptr %4361, i64 %4363, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4360, ptr align 8 %4364, i64 16, i1 false), !dbg !320
  br label %4365, !dbg !322

4365:                                             ; preds = %4357
  %4366 = load i32, ptr %10, align 4, !dbg !323
  %4367 = add nsw i32 %4366, 1, !dbg !323
  store i32 %4367, ptr %10, align 4, !dbg !323
  %4368 = load i32, ptr %10, align 4, !dbg !312
  %4369 = load i32, ptr %8, align 4, !dbg !314
  %4370 = icmp slt i32 %4368, %4369, !dbg !315
  br i1 %4370, label %4371, label %5404, !dbg !316

4371:                                             ; preds = %4365
  %4372 = load i32, ptr %10, align 4, !dbg !317
  %4373 = sext i32 %4372 to i64, !dbg !319
  %4374 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4373, !dbg !319
  %4375 = load ptr, ptr %7, align 8, !dbg !320
  %4376 = load i32, ptr %10, align 4, !dbg !321
  %4377 = sext i32 %4376 to i64, !dbg !320
  %4378 = getelementptr inbounds %struct.POINT, ptr %4375, i64 %4377, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4374, ptr align 8 %4378, i64 16, i1 false), !dbg !320
  br label %4379, !dbg !322

4379:                                             ; preds = %4371
  %4380 = load i32, ptr %10, align 4, !dbg !323
  %4381 = add nsw i32 %4380, 1, !dbg !323
  store i32 %4381, ptr %10, align 4, !dbg !323
  %4382 = load i32, ptr %10, align 4, !dbg !312
  %4383 = load i32, ptr %8, align 4, !dbg !314
  %4384 = icmp slt i32 %4382, %4383, !dbg !315
  br i1 %4384, label %4385, label %5404, !dbg !316

4385:                                             ; preds = %4379
  %4386 = load i32, ptr %10, align 4, !dbg !317
  %4387 = sext i32 %4386 to i64, !dbg !319
  %4388 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4387, !dbg !319
  %4389 = load ptr, ptr %7, align 8, !dbg !320
  %4390 = load i32, ptr %10, align 4, !dbg !321
  %4391 = sext i32 %4390 to i64, !dbg !320
  %4392 = getelementptr inbounds %struct.POINT, ptr %4389, i64 %4391, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4388, ptr align 8 %4392, i64 16, i1 false), !dbg !320
  br label %4393, !dbg !322

4393:                                             ; preds = %4385
  %4394 = load i32, ptr %10, align 4, !dbg !323
  %4395 = add nsw i32 %4394, 1, !dbg !323
  store i32 %4395, ptr %10, align 4, !dbg !323
  %4396 = load i32, ptr %10, align 4, !dbg !312
  %4397 = load i32, ptr %8, align 4, !dbg !314
  %4398 = icmp slt i32 %4396, %4397, !dbg !315
  br i1 %4398, label %4399, label %5404, !dbg !316

4399:                                             ; preds = %4393
  %4400 = load i32, ptr %10, align 4, !dbg !317
  %4401 = sext i32 %4400 to i64, !dbg !319
  %4402 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4401, !dbg !319
  %4403 = load ptr, ptr %7, align 8, !dbg !320
  %4404 = load i32, ptr %10, align 4, !dbg !321
  %4405 = sext i32 %4404 to i64, !dbg !320
  %4406 = getelementptr inbounds %struct.POINT, ptr %4403, i64 %4405, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4402, ptr align 8 %4406, i64 16, i1 false), !dbg !320
  br label %4407, !dbg !322

4407:                                             ; preds = %4399
  %4408 = load i32, ptr %10, align 4, !dbg !323
  %4409 = add nsw i32 %4408, 1, !dbg !323
  store i32 %4409, ptr %10, align 4, !dbg !323
  %4410 = load i32, ptr %10, align 4, !dbg !312
  %4411 = load i32, ptr %8, align 4, !dbg !314
  %4412 = icmp slt i32 %4410, %4411, !dbg !315
  br i1 %4412, label %4413, label %5404, !dbg !316

4413:                                             ; preds = %4407
  %4414 = load i32, ptr %10, align 4, !dbg !317
  %4415 = sext i32 %4414 to i64, !dbg !319
  %4416 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4415, !dbg !319
  %4417 = load ptr, ptr %7, align 8, !dbg !320
  %4418 = load i32, ptr %10, align 4, !dbg !321
  %4419 = sext i32 %4418 to i64, !dbg !320
  %4420 = getelementptr inbounds %struct.POINT, ptr %4417, i64 %4419, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4416, ptr align 8 %4420, i64 16, i1 false), !dbg !320
  br label %4421, !dbg !322

4421:                                             ; preds = %4413
  %4422 = load i32, ptr %10, align 4, !dbg !323
  %4423 = add nsw i32 %4422, 1, !dbg !323
  store i32 %4423, ptr %10, align 4, !dbg !323
  %4424 = load i32, ptr %10, align 4, !dbg !312
  %4425 = load i32, ptr %8, align 4, !dbg !314
  %4426 = icmp slt i32 %4424, %4425, !dbg !315
  br i1 %4426, label %4427, label %5404, !dbg !316

4427:                                             ; preds = %4421
  %4428 = load i32, ptr %10, align 4, !dbg !317
  %4429 = sext i32 %4428 to i64, !dbg !319
  %4430 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4429, !dbg !319
  %4431 = load ptr, ptr %7, align 8, !dbg !320
  %4432 = load i32, ptr %10, align 4, !dbg !321
  %4433 = sext i32 %4432 to i64, !dbg !320
  %4434 = getelementptr inbounds %struct.POINT, ptr %4431, i64 %4433, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4430, ptr align 8 %4434, i64 16, i1 false), !dbg !320
  br label %4435, !dbg !322

4435:                                             ; preds = %4427
  %4436 = load i32, ptr %10, align 4, !dbg !323
  %4437 = add nsw i32 %4436, 1, !dbg !323
  store i32 %4437, ptr %10, align 4, !dbg !323
  %4438 = load i32, ptr %10, align 4, !dbg !312
  %4439 = load i32, ptr %8, align 4, !dbg !314
  %4440 = icmp slt i32 %4438, %4439, !dbg !315
  br i1 %4440, label %4441, label %5404, !dbg !316

4441:                                             ; preds = %4435
  %4442 = load i32, ptr %10, align 4, !dbg !317
  %4443 = sext i32 %4442 to i64, !dbg !319
  %4444 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4443, !dbg !319
  %4445 = load ptr, ptr %7, align 8, !dbg !320
  %4446 = load i32, ptr %10, align 4, !dbg !321
  %4447 = sext i32 %4446 to i64, !dbg !320
  %4448 = getelementptr inbounds %struct.POINT, ptr %4445, i64 %4447, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4444, ptr align 8 %4448, i64 16, i1 false), !dbg !320
  br label %4449, !dbg !322

4449:                                             ; preds = %4441
  %4450 = load i32, ptr %10, align 4, !dbg !323
  %4451 = add nsw i32 %4450, 1, !dbg !323
  store i32 %4451, ptr %10, align 4, !dbg !323
  %4452 = load i32, ptr %10, align 4, !dbg !312
  %4453 = load i32, ptr %8, align 4, !dbg !314
  %4454 = icmp slt i32 %4452, %4453, !dbg !315
  br i1 %4454, label %4455, label %5404, !dbg !316

4455:                                             ; preds = %4449
  %4456 = load i32, ptr %10, align 4, !dbg !317
  %4457 = sext i32 %4456 to i64, !dbg !319
  %4458 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4457, !dbg !319
  %4459 = load ptr, ptr %7, align 8, !dbg !320
  %4460 = load i32, ptr %10, align 4, !dbg !321
  %4461 = sext i32 %4460 to i64, !dbg !320
  %4462 = getelementptr inbounds %struct.POINT, ptr %4459, i64 %4461, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4458, ptr align 8 %4462, i64 16, i1 false), !dbg !320
  br label %4463, !dbg !322

4463:                                             ; preds = %4455
  %4464 = load i32, ptr %10, align 4, !dbg !323
  %4465 = add nsw i32 %4464, 1, !dbg !323
  store i32 %4465, ptr %10, align 4, !dbg !323
  %4466 = load i32, ptr %10, align 4, !dbg !312
  %4467 = load i32, ptr %8, align 4, !dbg !314
  %4468 = icmp slt i32 %4466, %4467, !dbg !315
  br i1 %4468, label %4469, label %5404, !dbg !316

4469:                                             ; preds = %4463
  %4470 = load i32, ptr %10, align 4, !dbg !317
  %4471 = sext i32 %4470 to i64, !dbg !319
  %4472 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4471, !dbg !319
  %4473 = load ptr, ptr %7, align 8, !dbg !320
  %4474 = load i32, ptr %10, align 4, !dbg !321
  %4475 = sext i32 %4474 to i64, !dbg !320
  %4476 = getelementptr inbounds %struct.POINT, ptr %4473, i64 %4475, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4472, ptr align 8 %4476, i64 16, i1 false), !dbg !320
  br label %4477, !dbg !322

4477:                                             ; preds = %4469
  %4478 = load i32, ptr %10, align 4, !dbg !323
  %4479 = add nsw i32 %4478, 1, !dbg !323
  store i32 %4479, ptr %10, align 4, !dbg !323
  %4480 = load i32, ptr %10, align 4, !dbg !312
  %4481 = load i32, ptr %8, align 4, !dbg !314
  %4482 = icmp slt i32 %4480, %4481, !dbg !315
  br i1 %4482, label %4483, label %5404, !dbg !316

4483:                                             ; preds = %4477
  %4484 = load i32, ptr %10, align 4, !dbg !317
  %4485 = sext i32 %4484 to i64, !dbg !319
  %4486 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4485, !dbg !319
  %4487 = load ptr, ptr %7, align 8, !dbg !320
  %4488 = load i32, ptr %10, align 4, !dbg !321
  %4489 = sext i32 %4488 to i64, !dbg !320
  %4490 = getelementptr inbounds %struct.POINT, ptr %4487, i64 %4489, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4486, ptr align 8 %4490, i64 16, i1 false), !dbg !320
  br label %4491, !dbg !322

4491:                                             ; preds = %4483
  %4492 = load i32, ptr %10, align 4, !dbg !323
  %4493 = add nsw i32 %4492, 1, !dbg !323
  store i32 %4493, ptr %10, align 4, !dbg !323
  %4494 = load i32, ptr %10, align 4, !dbg !312
  %4495 = load i32, ptr %8, align 4, !dbg !314
  %4496 = icmp slt i32 %4494, %4495, !dbg !315
  br i1 %4496, label %4497, label %5404, !dbg !316

4497:                                             ; preds = %4491
  %4498 = load i32, ptr %10, align 4, !dbg !317
  %4499 = sext i32 %4498 to i64, !dbg !319
  %4500 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4499, !dbg !319
  %4501 = load ptr, ptr %7, align 8, !dbg !320
  %4502 = load i32, ptr %10, align 4, !dbg !321
  %4503 = sext i32 %4502 to i64, !dbg !320
  %4504 = getelementptr inbounds %struct.POINT, ptr %4501, i64 %4503, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4500, ptr align 8 %4504, i64 16, i1 false), !dbg !320
  br label %4505, !dbg !322

4505:                                             ; preds = %4497
  %4506 = load i32, ptr %10, align 4, !dbg !323
  %4507 = add nsw i32 %4506, 1, !dbg !323
  store i32 %4507, ptr %10, align 4, !dbg !323
  %4508 = load i32, ptr %10, align 4, !dbg !312
  %4509 = load i32, ptr %8, align 4, !dbg !314
  %4510 = icmp slt i32 %4508, %4509, !dbg !315
  br i1 %4510, label %4511, label %5404, !dbg !316

4511:                                             ; preds = %4505
  %4512 = load i32, ptr %10, align 4, !dbg !317
  %4513 = sext i32 %4512 to i64, !dbg !319
  %4514 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4513, !dbg !319
  %4515 = load ptr, ptr %7, align 8, !dbg !320
  %4516 = load i32, ptr %10, align 4, !dbg !321
  %4517 = sext i32 %4516 to i64, !dbg !320
  %4518 = getelementptr inbounds %struct.POINT, ptr %4515, i64 %4517, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4514, ptr align 8 %4518, i64 16, i1 false), !dbg !320
  br label %4519, !dbg !322

4519:                                             ; preds = %4511
  %4520 = load i32, ptr %10, align 4, !dbg !323
  %4521 = add nsw i32 %4520, 1, !dbg !323
  store i32 %4521, ptr %10, align 4, !dbg !323
  %4522 = load i32, ptr %10, align 4, !dbg !312
  %4523 = load i32, ptr %8, align 4, !dbg !314
  %4524 = icmp slt i32 %4522, %4523, !dbg !315
  br i1 %4524, label %4525, label %5404, !dbg !316

4525:                                             ; preds = %4519
  %4526 = load i32, ptr %10, align 4, !dbg !317
  %4527 = sext i32 %4526 to i64, !dbg !319
  %4528 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4527, !dbg !319
  %4529 = load ptr, ptr %7, align 8, !dbg !320
  %4530 = load i32, ptr %10, align 4, !dbg !321
  %4531 = sext i32 %4530 to i64, !dbg !320
  %4532 = getelementptr inbounds %struct.POINT, ptr %4529, i64 %4531, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4528, ptr align 8 %4532, i64 16, i1 false), !dbg !320
  br label %4533, !dbg !322

4533:                                             ; preds = %4525
  %4534 = load i32, ptr %10, align 4, !dbg !323
  %4535 = add nsw i32 %4534, 1, !dbg !323
  store i32 %4535, ptr %10, align 4, !dbg !323
  %4536 = load i32, ptr %10, align 4, !dbg !312
  %4537 = load i32, ptr %8, align 4, !dbg !314
  %4538 = icmp slt i32 %4536, %4537, !dbg !315
  br i1 %4538, label %4539, label %5404, !dbg !316

4539:                                             ; preds = %4533
  %4540 = load i32, ptr %10, align 4, !dbg !317
  %4541 = sext i32 %4540 to i64, !dbg !319
  %4542 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4541, !dbg !319
  %4543 = load ptr, ptr %7, align 8, !dbg !320
  %4544 = load i32, ptr %10, align 4, !dbg !321
  %4545 = sext i32 %4544 to i64, !dbg !320
  %4546 = getelementptr inbounds %struct.POINT, ptr %4543, i64 %4545, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4542, ptr align 8 %4546, i64 16, i1 false), !dbg !320
  br label %4547, !dbg !322

4547:                                             ; preds = %4539
  %4548 = load i32, ptr %10, align 4, !dbg !323
  %4549 = add nsw i32 %4548, 1, !dbg !323
  store i32 %4549, ptr %10, align 4, !dbg !323
  %4550 = load i32, ptr %10, align 4, !dbg !312
  %4551 = load i32, ptr %8, align 4, !dbg !314
  %4552 = icmp slt i32 %4550, %4551, !dbg !315
  br i1 %4552, label %4553, label %5404, !dbg !316

4553:                                             ; preds = %4547
  %4554 = load i32, ptr %10, align 4, !dbg !317
  %4555 = sext i32 %4554 to i64, !dbg !319
  %4556 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4555, !dbg !319
  %4557 = load ptr, ptr %7, align 8, !dbg !320
  %4558 = load i32, ptr %10, align 4, !dbg !321
  %4559 = sext i32 %4558 to i64, !dbg !320
  %4560 = getelementptr inbounds %struct.POINT, ptr %4557, i64 %4559, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4556, ptr align 8 %4560, i64 16, i1 false), !dbg !320
  br label %4561, !dbg !322

4561:                                             ; preds = %4553
  %4562 = load i32, ptr %10, align 4, !dbg !323
  %4563 = add nsw i32 %4562, 1, !dbg !323
  store i32 %4563, ptr %10, align 4, !dbg !323
  %4564 = load i32, ptr %10, align 4, !dbg !312
  %4565 = load i32, ptr %8, align 4, !dbg !314
  %4566 = icmp slt i32 %4564, %4565, !dbg !315
  br i1 %4566, label %4567, label %5404, !dbg !316

4567:                                             ; preds = %4561
  %4568 = load i32, ptr %10, align 4, !dbg !317
  %4569 = sext i32 %4568 to i64, !dbg !319
  %4570 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4569, !dbg !319
  %4571 = load ptr, ptr %7, align 8, !dbg !320
  %4572 = load i32, ptr %10, align 4, !dbg !321
  %4573 = sext i32 %4572 to i64, !dbg !320
  %4574 = getelementptr inbounds %struct.POINT, ptr %4571, i64 %4573, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4570, ptr align 8 %4574, i64 16, i1 false), !dbg !320
  br label %4575, !dbg !322

4575:                                             ; preds = %4567
  %4576 = load i32, ptr %10, align 4, !dbg !323
  %4577 = add nsw i32 %4576, 1, !dbg !323
  store i32 %4577, ptr %10, align 4, !dbg !323
  %4578 = load i32, ptr %10, align 4, !dbg !312
  %4579 = load i32, ptr %8, align 4, !dbg !314
  %4580 = icmp slt i32 %4578, %4579, !dbg !315
  br i1 %4580, label %4581, label %5404, !dbg !316

4581:                                             ; preds = %4575
  %4582 = load i32, ptr %10, align 4, !dbg !317
  %4583 = sext i32 %4582 to i64, !dbg !319
  %4584 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4583, !dbg !319
  %4585 = load ptr, ptr %7, align 8, !dbg !320
  %4586 = load i32, ptr %10, align 4, !dbg !321
  %4587 = sext i32 %4586 to i64, !dbg !320
  %4588 = getelementptr inbounds %struct.POINT, ptr %4585, i64 %4587, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4584, ptr align 8 %4588, i64 16, i1 false), !dbg !320
  br label %4589, !dbg !322

4589:                                             ; preds = %4581
  %4590 = load i32, ptr %10, align 4, !dbg !323
  %4591 = add nsw i32 %4590, 1, !dbg !323
  store i32 %4591, ptr %10, align 4, !dbg !323
  %4592 = load i32, ptr %10, align 4, !dbg !312
  %4593 = load i32, ptr %8, align 4, !dbg !314
  %4594 = icmp slt i32 %4592, %4593, !dbg !315
  br i1 %4594, label %4595, label %5404, !dbg !316

4595:                                             ; preds = %4589
  %4596 = load i32, ptr %10, align 4, !dbg !317
  %4597 = sext i32 %4596 to i64, !dbg !319
  %4598 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4597, !dbg !319
  %4599 = load ptr, ptr %7, align 8, !dbg !320
  %4600 = load i32, ptr %10, align 4, !dbg !321
  %4601 = sext i32 %4600 to i64, !dbg !320
  %4602 = getelementptr inbounds %struct.POINT, ptr %4599, i64 %4601, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4598, ptr align 8 %4602, i64 16, i1 false), !dbg !320
  br label %4603, !dbg !322

4603:                                             ; preds = %4595
  %4604 = load i32, ptr %10, align 4, !dbg !323
  %4605 = add nsw i32 %4604, 1, !dbg !323
  store i32 %4605, ptr %10, align 4, !dbg !323
  %4606 = load i32, ptr %10, align 4, !dbg !312
  %4607 = load i32, ptr %8, align 4, !dbg !314
  %4608 = icmp slt i32 %4606, %4607, !dbg !315
  br i1 %4608, label %4609, label %5404, !dbg !316

4609:                                             ; preds = %4603
  %4610 = load i32, ptr %10, align 4, !dbg !317
  %4611 = sext i32 %4610 to i64, !dbg !319
  %4612 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4611, !dbg !319
  %4613 = load ptr, ptr %7, align 8, !dbg !320
  %4614 = load i32, ptr %10, align 4, !dbg !321
  %4615 = sext i32 %4614 to i64, !dbg !320
  %4616 = getelementptr inbounds %struct.POINT, ptr %4613, i64 %4615, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4612, ptr align 8 %4616, i64 16, i1 false), !dbg !320
  br label %4617, !dbg !322

4617:                                             ; preds = %4609
  %4618 = load i32, ptr %10, align 4, !dbg !323
  %4619 = add nsw i32 %4618, 1, !dbg !323
  store i32 %4619, ptr %10, align 4, !dbg !323
  %4620 = load i32, ptr %10, align 4, !dbg !312
  %4621 = load i32, ptr %8, align 4, !dbg !314
  %4622 = icmp slt i32 %4620, %4621, !dbg !315
  br i1 %4622, label %4623, label %5404, !dbg !316

4623:                                             ; preds = %4617
  %4624 = load i32, ptr %10, align 4, !dbg !317
  %4625 = sext i32 %4624 to i64, !dbg !319
  %4626 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4625, !dbg !319
  %4627 = load ptr, ptr %7, align 8, !dbg !320
  %4628 = load i32, ptr %10, align 4, !dbg !321
  %4629 = sext i32 %4628 to i64, !dbg !320
  %4630 = getelementptr inbounds %struct.POINT, ptr %4627, i64 %4629, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4626, ptr align 8 %4630, i64 16, i1 false), !dbg !320
  br label %4631, !dbg !322

4631:                                             ; preds = %4623
  %4632 = load i32, ptr %10, align 4, !dbg !323
  %4633 = add nsw i32 %4632, 1, !dbg !323
  store i32 %4633, ptr %10, align 4, !dbg !323
  %4634 = load i32, ptr %10, align 4, !dbg !312
  %4635 = load i32, ptr %8, align 4, !dbg !314
  %4636 = icmp slt i32 %4634, %4635, !dbg !315
  br i1 %4636, label %4637, label %5404, !dbg !316

4637:                                             ; preds = %4631
  %4638 = load i32, ptr %10, align 4, !dbg !317
  %4639 = sext i32 %4638 to i64, !dbg !319
  %4640 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4639, !dbg !319
  %4641 = load ptr, ptr %7, align 8, !dbg !320
  %4642 = load i32, ptr %10, align 4, !dbg !321
  %4643 = sext i32 %4642 to i64, !dbg !320
  %4644 = getelementptr inbounds %struct.POINT, ptr %4641, i64 %4643, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4640, ptr align 8 %4644, i64 16, i1 false), !dbg !320
  br label %4645, !dbg !322

4645:                                             ; preds = %4637
  %4646 = load i32, ptr %10, align 4, !dbg !323
  %4647 = add nsw i32 %4646, 1, !dbg !323
  store i32 %4647, ptr %10, align 4, !dbg !323
  %4648 = load i32, ptr %10, align 4, !dbg !312
  %4649 = load i32, ptr %8, align 4, !dbg !314
  %4650 = icmp slt i32 %4648, %4649, !dbg !315
  br i1 %4650, label %4651, label %5404, !dbg !316

4651:                                             ; preds = %4645
  %4652 = load i32, ptr %10, align 4, !dbg !317
  %4653 = sext i32 %4652 to i64, !dbg !319
  %4654 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4653, !dbg !319
  %4655 = load ptr, ptr %7, align 8, !dbg !320
  %4656 = load i32, ptr %10, align 4, !dbg !321
  %4657 = sext i32 %4656 to i64, !dbg !320
  %4658 = getelementptr inbounds %struct.POINT, ptr %4655, i64 %4657, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4654, ptr align 8 %4658, i64 16, i1 false), !dbg !320
  br label %4659, !dbg !322

4659:                                             ; preds = %4651
  %4660 = load i32, ptr %10, align 4, !dbg !323
  %4661 = add nsw i32 %4660, 1, !dbg !323
  store i32 %4661, ptr %10, align 4, !dbg !323
  %4662 = load i32, ptr %10, align 4, !dbg !312
  %4663 = load i32, ptr %8, align 4, !dbg !314
  %4664 = icmp slt i32 %4662, %4663, !dbg !315
  br i1 %4664, label %4665, label %5404, !dbg !316

4665:                                             ; preds = %4659
  %4666 = load i32, ptr %10, align 4, !dbg !317
  %4667 = sext i32 %4666 to i64, !dbg !319
  %4668 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4667, !dbg !319
  %4669 = load ptr, ptr %7, align 8, !dbg !320
  %4670 = load i32, ptr %10, align 4, !dbg !321
  %4671 = sext i32 %4670 to i64, !dbg !320
  %4672 = getelementptr inbounds %struct.POINT, ptr %4669, i64 %4671, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4668, ptr align 8 %4672, i64 16, i1 false), !dbg !320
  br label %4673, !dbg !322

4673:                                             ; preds = %4665
  %4674 = load i32, ptr %10, align 4, !dbg !323
  %4675 = add nsw i32 %4674, 1, !dbg !323
  store i32 %4675, ptr %10, align 4, !dbg !323
  %4676 = load i32, ptr %10, align 4, !dbg !312
  %4677 = load i32, ptr %8, align 4, !dbg !314
  %4678 = icmp slt i32 %4676, %4677, !dbg !315
  br i1 %4678, label %4679, label %5404, !dbg !316

4679:                                             ; preds = %4673
  %4680 = load i32, ptr %10, align 4, !dbg !317
  %4681 = sext i32 %4680 to i64, !dbg !319
  %4682 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4681, !dbg !319
  %4683 = load ptr, ptr %7, align 8, !dbg !320
  %4684 = load i32, ptr %10, align 4, !dbg !321
  %4685 = sext i32 %4684 to i64, !dbg !320
  %4686 = getelementptr inbounds %struct.POINT, ptr %4683, i64 %4685, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4682, ptr align 8 %4686, i64 16, i1 false), !dbg !320
  br label %4687, !dbg !322

4687:                                             ; preds = %4679
  %4688 = load i32, ptr %10, align 4, !dbg !323
  %4689 = add nsw i32 %4688, 1, !dbg !323
  store i32 %4689, ptr %10, align 4, !dbg !323
  %4690 = load i32, ptr %10, align 4, !dbg !312
  %4691 = load i32, ptr %8, align 4, !dbg !314
  %4692 = icmp slt i32 %4690, %4691, !dbg !315
  br i1 %4692, label %4693, label %5404, !dbg !316

4693:                                             ; preds = %4687
  %4694 = load i32, ptr %10, align 4, !dbg !317
  %4695 = sext i32 %4694 to i64, !dbg !319
  %4696 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4695, !dbg !319
  %4697 = load ptr, ptr %7, align 8, !dbg !320
  %4698 = load i32, ptr %10, align 4, !dbg !321
  %4699 = sext i32 %4698 to i64, !dbg !320
  %4700 = getelementptr inbounds %struct.POINT, ptr %4697, i64 %4699, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4696, ptr align 8 %4700, i64 16, i1 false), !dbg !320
  br label %4701, !dbg !322

4701:                                             ; preds = %4693
  %4702 = load i32, ptr %10, align 4, !dbg !323
  %4703 = add nsw i32 %4702, 1, !dbg !323
  store i32 %4703, ptr %10, align 4, !dbg !323
  %4704 = load i32, ptr %10, align 4, !dbg !312
  %4705 = load i32, ptr %8, align 4, !dbg !314
  %4706 = icmp slt i32 %4704, %4705, !dbg !315
  br i1 %4706, label %4707, label %5404, !dbg !316

4707:                                             ; preds = %4701
  %4708 = load i32, ptr %10, align 4, !dbg !317
  %4709 = sext i32 %4708 to i64, !dbg !319
  %4710 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4709, !dbg !319
  %4711 = load ptr, ptr %7, align 8, !dbg !320
  %4712 = load i32, ptr %10, align 4, !dbg !321
  %4713 = sext i32 %4712 to i64, !dbg !320
  %4714 = getelementptr inbounds %struct.POINT, ptr %4711, i64 %4713, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4710, ptr align 8 %4714, i64 16, i1 false), !dbg !320
  br label %4715, !dbg !322

4715:                                             ; preds = %4707
  %4716 = load i32, ptr %10, align 4, !dbg !323
  %4717 = add nsw i32 %4716, 1, !dbg !323
  store i32 %4717, ptr %10, align 4, !dbg !323
  %4718 = load i32, ptr %10, align 4, !dbg !312
  %4719 = load i32, ptr %8, align 4, !dbg !314
  %4720 = icmp slt i32 %4718, %4719, !dbg !315
  br i1 %4720, label %4721, label %5404, !dbg !316

4721:                                             ; preds = %4715
  %4722 = load i32, ptr %10, align 4, !dbg !317
  %4723 = sext i32 %4722 to i64, !dbg !319
  %4724 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4723, !dbg !319
  %4725 = load ptr, ptr %7, align 8, !dbg !320
  %4726 = load i32, ptr %10, align 4, !dbg !321
  %4727 = sext i32 %4726 to i64, !dbg !320
  %4728 = getelementptr inbounds %struct.POINT, ptr %4725, i64 %4727, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4724, ptr align 8 %4728, i64 16, i1 false), !dbg !320
  br label %4729, !dbg !322

4729:                                             ; preds = %4721
  %4730 = load i32, ptr %10, align 4, !dbg !323
  %4731 = add nsw i32 %4730, 1, !dbg !323
  store i32 %4731, ptr %10, align 4, !dbg !323
  %4732 = load i32, ptr %10, align 4, !dbg !312
  %4733 = load i32, ptr %8, align 4, !dbg !314
  %4734 = icmp slt i32 %4732, %4733, !dbg !315
  br i1 %4734, label %4735, label %5404, !dbg !316

4735:                                             ; preds = %4729
  %4736 = load i32, ptr %10, align 4, !dbg !317
  %4737 = sext i32 %4736 to i64, !dbg !319
  %4738 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4737, !dbg !319
  %4739 = load ptr, ptr %7, align 8, !dbg !320
  %4740 = load i32, ptr %10, align 4, !dbg !321
  %4741 = sext i32 %4740 to i64, !dbg !320
  %4742 = getelementptr inbounds %struct.POINT, ptr %4739, i64 %4741, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4738, ptr align 8 %4742, i64 16, i1 false), !dbg !320
  br label %4743, !dbg !322

4743:                                             ; preds = %4735
  %4744 = load i32, ptr %10, align 4, !dbg !323
  %4745 = add nsw i32 %4744, 1, !dbg !323
  store i32 %4745, ptr %10, align 4, !dbg !323
  %4746 = load i32, ptr %10, align 4, !dbg !312
  %4747 = load i32, ptr %8, align 4, !dbg !314
  %4748 = icmp slt i32 %4746, %4747, !dbg !315
  br i1 %4748, label %4749, label %5404, !dbg !316

4749:                                             ; preds = %4743
  %4750 = load i32, ptr %10, align 4, !dbg !317
  %4751 = sext i32 %4750 to i64, !dbg !319
  %4752 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4751, !dbg !319
  %4753 = load ptr, ptr %7, align 8, !dbg !320
  %4754 = load i32, ptr %10, align 4, !dbg !321
  %4755 = sext i32 %4754 to i64, !dbg !320
  %4756 = getelementptr inbounds %struct.POINT, ptr %4753, i64 %4755, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4752, ptr align 8 %4756, i64 16, i1 false), !dbg !320
  br label %4757, !dbg !322

4757:                                             ; preds = %4749
  %4758 = load i32, ptr %10, align 4, !dbg !323
  %4759 = add nsw i32 %4758, 1, !dbg !323
  store i32 %4759, ptr %10, align 4, !dbg !323
  %4760 = load i32, ptr %10, align 4, !dbg !312
  %4761 = load i32, ptr %8, align 4, !dbg !314
  %4762 = icmp slt i32 %4760, %4761, !dbg !315
  br i1 %4762, label %4763, label %5404, !dbg !316

4763:                                             ; preds = %4757
  %4764 = load i32, ptr %10, align 4, !dbg !317
  %4765 = sext i32 %4764 to i64, !dbg !319
  %4766 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4765, !dbg !319
  %4767 = load ptr, ptr %7, align 8, !dbg !320
  %4768 = load i32, ptr %10, align 4, !dbg !321
  %4769 = sext i32 %4768 to i64, !dbg !320
  %4770 = getelementptr inbounds %struct.POINT, ptr %4767, i64 %4769, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4766, ptr align 8 %4770, i64 16, i1 false), !dbg !320
  br label %4771, !dbg !322

4771:                                             ; preds = %4763
  %4772 = load i32, ptr %10, align 4, !dbg !323
  %4773 = add nsw i32 %4772, 1, !dbg !323
  store i32 %4773, ptr %10, align 4, !dbg !323
  %4774 = load i32, ptr %10, align 4, !dbg !312
  %4775 = load i32, ptr %8, align 4, !dbg !314
  %4776 = icmp slt i32 %4774, %4775, !dbg !315
  br i1 %4776, label %4777, label %5404, !dbg !316

4777:                                             ; preds = %4771
  %4778 = load i32, ptr %10, align 4, !dbg !317
  %4779 = sext i32 %4778 to i64, !dbg !319
  %4780 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4779, !dbg !319
  %4781 = load ptr, ptr %7, align 8, !dbg !320
  %4782 = load i32, ptr %10, align 4, !dbg !321
  %4783 = sext i32 %4782 to i64, !dbg !320
  %4784 = getelementptr inbounds %struct.POINT, ptr %4781, i64 %4783, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4780, ptr align 8 %4784, i64 16, i1 false), !dbg !320
  br label %4785, !dbg !322

4785:                                             ; preds = %4777
  %4786 = load i32, ptr %10, align 4, !dbg !323
  %4787 = add nsw i32 %4786, 1, !dbg !323
  store i32 %4787, ptr %10, align 4, !dbg !323
  %4788 = load i32, ptr %10, align 4, !dbg !312
  %4789 = load i32, ptr %8, align 4, !dbg !314
  %4790 = icmp slt i32 %4788, %4789, !dbg !315
  br i1 %4790, label %4791, label %5404, !dbg !316

4791:                                             ; preds = %4785
  %4792 = load i32, ptr %10, align 4, !dbg !317
  %4793 = sext i32 %4792 to i64, !dbg !319
  %4794 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4793, !dbg !319
  %4795 = load ptr, ptr %7, align 8, !dbg !320
  %4796 = load i32, ptr %10, align 4, !dbg !321
  %4797 = sext i32 %4796 to i64, !dbg !320
  %4798 = getelementptr inbounds %struct.POINT, ptr %4795, i64 %4797, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4794, ptr align 8 %4798, i64 16, i1 false), !dbg !320
  br label %4799, !dbg !322

4799:                                             ; preds = %4791
  %4800 = load i32, ptr %10, align 4, !dbg !323
  %4801 = add nsw i32 %4800, 1, !dbg !323
  store i32 %4801, ptr %10, align 4, !dbg !323
  %4802 = load i32, ptr %10, align 4, !dbg !312
  %4803 = load i32, ptr %8, align 4, !dbg !314
  %4804 = icmp slt i32 %4802, %4803, !dbg !315
  br i1 %4804, label %4805, label %5404, !dbg !316

4805:                                             ; preds = %4799
  %4806 = load i32, ptr %10, align 4, !dbg !317
  %4807 = sext i32 %4806 to i64, !dbg !319
  %4808 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4807, !dbg !319
  %4809 = load ptr, ptr %7, align 8, !dbg !320
  %4810 = load i32, ptr %10, align 4, !dbg !321
  %4811 = sext i32 %4810 to i64, !dbg !320
  %4812 = getelementptr inbounds %struct.POINT, ptr %4809, i64 %4811, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4808, ptr align 8 %4812, i64 16, i1 false), !dbg !320
  br label %4813, !dbg !322

4813:                                             ; preds = %4805
  %4814 = load i32, ptr %10, align 4, !dbg !323
  %4815 = add nsw i32 %4814, 1, !dbg !323
  store i32 %4815, ptr %10, align 4, !dbg !323
  %4816 = load i32, ptr %10, align 4, !dbg !312
  %4817 = load i32, ptr %8, align 4, !dbg !314
  %4818 = icmp slt i32 %4816, %4817, !dbg !315
  br i1 %4818, label %4819, label %5404, !dbg !316

4819:                                             ; preds = %4813
  %4820 = load i32, ptr %10, align 4, !dbg !317
  %4821 = sext i32 %4820 to i64, !dbg !319
  %4822 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4821, !dbg !319
  %4823 = load ptr, ptr %7, align 8, !dbg !320
  %4824 = load i32, ptr %10, align 4, !dbg !321
  %4825 = sext i32 %4824 to i64, !dbg !320
  %4826 = getelementptr inbounds %struct.POINT, ptr %4823, i64 %4825, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4822, ptr align 8 %4826, i64 16, i1 false), !dbg !320
  br label %4827, !dbg !322

4827:                                             ; preds = %4819
  %4828 = load i32, ptr %10, align 4, !dbg !323
  %4829 = add nsw i32 %4828, 1, !dbg !323
  store i32 %4829, ptr %10, align 4, !dbg !323
  %4830 = load i32, ptr %10, align 4, !dbg !312
  %4831 = load i32, ptr %8, align 4, !dbg !314
  %4832 = icmp slt i32 %4830, %4831, !dbg !315
  br i1 %4832, label %4833, label %5404, !dbg !316

4833:                                             ; preds = %4827
  %4834 = load i32, ptr %10, align 4, !dbg !317
  %4835 = sext i32 %4834 to i64, !dbg !319
  %4836 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4835, !dbg !319
  %4837 = load ptr, ptr %7, align 8, !dbg !320
  %4838 = load i32, ptr %10, align 4, !dbg !321
  %4839 = sext i32 %4838 to i64, !dbg !320
  %4840 = getelementptr inbounds %struct.POINT, ptr %4837, i64 %4839, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4836, ptr align 8 %4840, i64 16, i1 false), !dbg !320
  br label %4841, !dbg !322

4841:                                             ; preds = %4833
  %4842 = load i32, ptr %10, align 4, !dbg !323
  %4843 = add nsw i32 %4842, 1, !dbg !323
  store i32 %4843, ptr %10, align 4, !dbg !323
  %4844 = load i32, ptr %10, align 4, !dbg !312
  %4845 = load i32, ptr %8, align 4, !dbg !314
  %4846 = icmp slt i32 %4844, %4845, !dbg !315
  br i1 %4846, label %4847, label %5404, !dbg !316

4847:                                             ; preds = %4841
  %4848 = load i32, ptr %10, align 4, !dbg !317
  %4849 = sext i32 %4848 to i64, !dbg !319
  %4850 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4849, !dbg !319
  %4851 = load ptr, ptr %7, align 8, !dbg !320
  %4852 = load i32, ptr %10, align 4, !dbg !321
  %4853 = sext i32 %4852 to i64, !dbg !320
  %4854 = getelementptr inbounds %struct.POINT, ptr %4851, i64 %4853, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4850, ptr align 8 %4854, i64 16, i1 false), !dbg !320
  br label %4855, !dbg !322

4855:                                             ; preds = %4847
  %4856 = load i32, ptr %10, align 4, !dbg !323
  %4857 = add nsw i32 %4856, 1, !dbg !323
  store i32 %4857, ptr %10, align 4, !dbg !323
  %4858 = load i32, ptr %10, align 4, !dbg !312
  %4859 = load i32, ptr %8, align 4, !dbg !314
  %4860 = icmp slt i32 %4858, %4859, !dbg !315
  br i1 %4860, label %4861, label %5404, !dbg !316

4861:                                             ; preds = %4855
  %4862 = load i32, ptr %10, align 4, !dbg !317
  %4863 = sext i32 %4862 to i64, !dbg !319
  %4864 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4863, !dbg !319
  %4865 = load ptr, ptr %7, align 8, !dbg !320
  %4866 = load i32, ptr %10, align 4, !dbg !321
  %4867 = sext i32 %4866 to i64, !dbg !320
  %4868 = getelementptr inbounds %struct.POINT, ptr %4865, i64 %4867, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4864, ptr align 8 %4868, i64 16, i1 false), !dbg !320
  br label %4869, !dbg !322

4869:                                             ; preds = %4861
  %4870 = load i32, ptr %10, align 4, !dbg !323
  %4871 = add nsw i32 %4870, 1, !dbg !323
  store i32 %4871, ptr %10, align 4, !dbg !323
  %4872 = load i32, ptr %10, align 4, !dbg !312
  %4873 = load i32, ptr %8, align 4, !dbg !314
  %4874 = icmp slt i32 %4872, %4873, !dbg !315
  br i1 %4874, label %4875, label %5404, !dbg !316

4875:                                             ; preds = %4869
  %4876 = load i32, ptr %10, align 4, !dbg !317
  %4877 = sext i32 %4876 to i64, !dbg !319
  %4878 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4877, !dbg !319
  %4879 = load ptr, ptr %7, align 8, !dbg !320
  %4880 = load i32, ptr %10, align 4, !dbg !321
  %4881 = sext i32 %4880 to i64, !dbg !320
  %4882 = getelementptr inbounds %struct.POINT, ptr %4879, i64 %4881, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4878, ptr align 8 %4882, i64 16, i1 false), !dbg !320
  br label %4883, !dbg !322

4883:                                             ; preds = %4875
  %4884 = load i32, ptr %10, align 4, !dbg !323
  %4885 = add nsw i32 %4884, 1, !dbg !323
  store i32 %4885, ptr %10, align 4, !dbg !323
  %4886 = load i32, ptr %10, align 4, !dbg !312
  %4887 = load i32, ptr %8, align 4, !dbg !314
  %4888 = icmp slt i32 %4886, %4887, !dbg !315
  br i1 %4888, label %4889, label %5404, !dbg !316

4889:                                             ; preds = %4883
  %4890 = load i32, ptr %10, align 4, !dbg !317
  %4891 = sext i32 %4890 to i64, !dbg !319
  %4892 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4891, !dbg !319
  %4893 = load ptr, ptr %7, align 8, !dbg !320
  %4894 = load i32, ptr %10, align 4, !dbg !321
  %4895 = sext i32 %4894 to i64, !dbg !320
  %4896 = getelementptr inbounds %struct.POINT, ptr %4893, i64 %4895, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4892, ptr align 8 %4896, i64 16, i1 false), !dbg !320
  br label %4897, !dbg !322

4897:                                             ; preds = %4889
  %4898 = load i32, ptr %10, align 4, !dbg !323
  %4899 = add nsw i32 %4898, 1, !dbg !323
  store i32 %4899, ptr %10, align 4, !dbg !323
  %4900 = load i32, ptr %10, align 4, !dbg !312
  %4901 = load i32, ptr %8, align 4, !dbg !314
  %4902 = icmp slt i32 %4900, %4901, !dbg !315
  br i1 %4902, label %4903, label %5404, !dbg !316

4903:                                             ; preds = %4897
  %4904 = load i32, ptr %10, align 4, !dbg !317
  %4905 = sext i32 %4904 to i64, !dbg !319
  %4906 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4905, !dbg !319
  %4907 = load ptr, ptr %7, align 8, !dbg !320
  %4908 = load i32, ptr %10, align 4, !dbg !321
  %4909 = sext i32 %4908 to i64, !dbg !320
  %4910 = getelementptr inbounds %struct.POINT, ptr %4907, i64 %4909, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4906, ptr align 8 %4910, i64 16, i1 false), !dbg !320
  br label %4911, !dbg !322

4911:                                             ; preds = %4903
  %4912 = load i32, ptr %10, align 4, !dbg !323
  %4913 = add nsw i32 %4912, 1, !dbg !323
  store i32 %4913, ptr %10, align 4, !dbg !323
  %4914 = load i32, ptr %10, align 4, !dbg !312
  %4915 = load i32, ptr %8, align 4, !dbg !314
  %4916 = icmp slt i32 %4914, %4915, !dbg !315
  br i1 %4916, label %4917, label %5404, !dbg !316

4917:                                             ; preds = %4911
  %4918 = load i32, ptr %10, align 4, !dbg !317
  %4919 = sext i32 %4918 to i64, !dbg !319
  %4920 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4919, !dbg !319
  %4921 = load ptr, ptr %7, align 8, !dbg !320
  %4922 = load i32, ptr %10, align 4, !dbg !321
  %4923 = sext i32 %4922 to i64, !dbg !320
  %4924 = getelementptr inbounds %struct.POINT, ptr %4921, i64 %4923, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4920, ptr align 8 %4924, i64 16, i1 false), !dbg !320
  br label %4925, !dbg !322

4925:                                             ; preds = %4917
  %4926 = load i32, ptr %10, align 4, !dbg !323
  %4927 = add nsw i32 %4926, 1, !dbg !323
  store i32 %4927, ptr %10, align 4, !dbg !323
  %4928 = load i32, ptr %10, align 4, !dbg !312
  %4929 = load i32, ptr %8, align 4, !dbg !314
  %4930 = icmp slt i32 %4928, %4929, !dbg !315
  br i1 %4930, label %4931, label %5404, !dbg !316

4931:                                             ; preds = %4925
  %4932 = load i32, ptr %10, align 4, !dbg !317
  %4933 = sext i32 %4932 to i64, !dbg !319
  %4934 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4933, !dbg !319
  %4935 = load ptr, ptr %7, align 8, !dbg !320
  %4936 = load i32, ptr %10, align 4, !dbg !321
  %4937 = sext i32 %4936 to i64, !dbg !320
  %4938 = getelementptr inbounds %struct.POINT, ptr %4935, i64 %4937, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4934, ptr align 8 %4938, i64 16, i1 false), !dbg !320
  br label %4939, !dbg !322

4939:                                             ; preds = %4931
  %4940 = load i32, ptr %10, align 4, !dbg !323
  %4941 = add nsw i32 %4940, 1, !dbg !323
  store i32 %4941, ptr %10, align 4, !dbg !323
  %4942 = load i32, ptr %10, align 4, !dbg !312
  %4943 = load i32, ptr %8, align 4, !dbg !314
  %4944 = icmp slt i32 %4942, %4943, !dbg !315
  br i1 %4944, label %4945, label %5404, !dbg !316

4945:                                             ; preds = %4939
  %4946 = load i32, ptr %10, align 4, !dbg !317
  %4947 = sext i32 %4946 to i64, !dbg !319
  %4948 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4947, !dbg !319
  %4949 = load ptr, ptr %7, align 8, !dbg !320
  %4950 = load i32, ptr %10, align 4, !dbg !321
  %4951 = sext i32 %4950 to i64, !dbg !320
  %4952 = getelementptr inbounds %struct.POINT, ptr %4949, i64 %4951, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4948, ptr align 8 %4952, i64 16, i1 false), !dbg !320
  br label %4953, !dbg !322

4953:                                             ; preds = %4945
  %4954 = load i32, ptr %10, align 4, !dbg !323
  %4955 = add nsw i32 %4954, 1, !dbg !323
  store i32 %4955, ptr %10, align 4, !dbg !323
  %4956 = load i32, ptr %10, align 4, !dbg !312
  %4957 = load i32, ptr %8, align 4, !dbg !314
  %4958 = icmp slt i32 %4956, %4957, !dbg !315
  br i1 %4958, label %4959, label %5404, !dbg !316

4959:                                             ; preds = %4953
  %4960 = load i32, ptr %10, align 4, !dbg !317
  %4961 = sext i32 %4960 to i64, !dbg !319
  %4962 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4961, !dbg !319
  %4963 = load ptr, ptr %7, align 8, !dbg !320
  %4964 = load i32, ptr %10, align 4, !dbg !321
  %4965 = sext i32 %4964 to i64, !dbg !320
  %4966 = getelementptr inbounds %struct.POINT, ptr %4963, i64 %4965, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4962, ptr align 8 %4966, i64 16, i1 false), !dbg !320
  br label %4967, !dbg !322

4967:                                             ; preds = %4959
  %4968 = load i32, ptr %10, align 4, !dbg !323
  %4969 = add nsw i32 %4968, 1, !dbg !323
  store i32 %4969, ptr %10, align 4, !dbg !323
  %4970 = load i32, ptr %10, align 4, !dbg !312
  %4971 = load i32, ptr %8, align 4, !dbg !314
  %4972 = icmp slt i32 %4970, %4971, !dbg !315
  br i1 %4972, label %4973, label %5404, !dbg !316

4973:                                             ; preds = %4967
  %4974 = load i32, ptr %10, align 4, !dbg !317
  %4975 = sext i32 %4974 to i64, !dbg !319
  %4976 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4975, !dbg !319
  %4977 = load ptr, ptr %7, align 8, !dbg !320
  %4978 = load i32, ptr %10, align 4, !dbg !321
  %4979 = sext i32 %4978 to i64, !dbg !320
  %4980 = getelementptr inbounds %struct.POINT, ptr %4977, i64 %4979, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4976, ptr align 8 %4980, i64 16, i1 false), !dbg !320
  br label %4981, !dbg !322

4981:                                             ; preds = %4973
  %4982 = load i32, ptr %10, align 4, !dbg !323
  %4983 = add nsw i32 %4982, 1, !dbg !323
  store i32 %4983, ptr %10, align 4, !dbg !323
  %4984 = load i32, ptr %10, align 4, !dbg !312
  %4985 = load i32, ptr %8, align 4, !dbg !314
  %4986 = icmp slt i32 %4984, %4985, !dbg !315
  br i1 %4986, label %4987, label %5404, !dbg !316

4987:                                             ; preds = %4981
  %4988 = load i32, ptr %10, align 4, !dbg !317
  %4989 = sext i32 %4988 to i64, !dbg !319
  %4990 = getelementptr inbounds %struct.POINT, ptr %26, i64 %4989, !dbg !319
  %4991 = load ptr, ptr %7, align 8, !dbg !320
  %4992 = load i32, ptr %10, align 4, !dbg !321
  %4993 = sext i32 %4992 to i64, !dbg !320
  %4994 = getelementptr inbounds %struct.POINT, ptr %4991, i64 %4993, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %4990, ptr align 8 %4994, i64 16, i1 false), !dbg !320
  br label %4995, !dbg !322

4995:                                             ; preds = %4987
  %4996 = load i32, ptr %10, align 4, !dbg !323
  %4997 = add nsw i32 %4996, 1, !dbg !323
  store i32 %4997, ptr %10, align 4, !dbg !323
  %4998 = load i32, ptr %10, align 4, !dbg !312
  %4999 = load i32, ptr %8, align 4, !dbg !314
  %5000 = icmp slt i32 %4998, %4999, !dbg !315
  br i1 %5000, label %5001, label %5404, !dbg !316

5001:                                             ; preds = %4995
  %5002 = load i32, ptr %10, align 4, !dbg !317
  %5003 = sext i32 %5002 to i64, !dbg !319
  %5004 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5003, !dbg !319
  %5005 = load ptr, ptr %7, align 8, !dbg !320
  %5006 = load i32, ptr %10, align 4, !dbg !321
  %5007 = sext i32 %5006 to i64, !dbg !320
  %5008 = getelementptr inbounds %struct.POINT, ptr %5005, i64 %5007, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5004, ptr align 8 %5008, i64 16, i1 false), !dbg !320
  br label %5009, !dbg !322

5009:                                             ; preds = %5001
  %5010 = load i32, ptr %10, align 4, !dbg !323
  %5011 = add nsw i32 %5010, 1, !dbg !323
  store i32 %5011, ptr %10, align 4, !dbg !323
  %5012 = load i32, ptr %10, align 4, !dbg !312
  %5013 = load i32, ptr %8, align 4, !dbg !314
  %5014 = icmp slt i32 %5012, %5013, !dbg !315
  br i1 %5014, label %5015, label %5404, !dbg !316

5015:                                             ; preds = %5009
  %5016 = load i32, ptr %10, align 4, !dbg !317
  %5017 = sext i32 %5016 to i64, !dbg !319
  %5018 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5017, !dbg !319
  %5019 = load ptr, ptr %7, align 8, !dbg !320
  %5020 = load i32, ptr %10, align 4, !dbg !321
  %5021 = sext i32 %5020 to i64, !dbg !320
  %5022 = getelementptr inbounds %struct.POINT, ptr %5019, i64 %5021, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5018, ptr align 8 %5022, i64 16, i1 false), !dbg !320
  br label %5023, !dbg !322

5023:                                             ; preds = %5015
  %5024 = load i32, ptr %10, align 4, !dbg !323
  %5025 = add nsw i32 %5024, 1, !dbg !323
  store i32 %5025, ptr %10, align 4, !dbg !323
  %5026 = load i32, ptr %10, align 4, !dbg !312
  %5027 = load i32, ptr %8, align 4, !dbg !314
  %5028 = icmp slt i32 %5026, %5027, !dbg !315
  br i1 %5028, label %5029, label %5404, !dbg !316

5029:                                             ; preds = %5023
  %5030 = load i32, ptr %10, align 4, !dbg !317
  %5031 = sext i32 %5030 to i64, !dbg !319
  %5032 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5031, !dbg !319
  %5033 = load ptr, ptr %7, align 8, !dbg !320
  %5034 = load i32, ptr %10, align 4, !dbg !321
  %5035 = sext i32 %5034 to i64, !dbg !320
  %5036 = getelementptr inbounds %struct.POINT, ptr %5033, i64 %5035, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5032, ptr align 8 %5036, i64 16, i1 false), !dbg !320
  br label %5037, !dbg !322

5037:                                             ; preds = %5029
  %5038 = load i32, ptr %10, align 4, !dbg !323
  %5039 = add nsw i32 %5038, 1, !dbg !323
  store i32 %5039, ptr %10, align 4, !dbg !323
  %5040 = load i32, ptr %10, align 4, !dbg !312
  %5041 = load i32, ptr %8, align 4, !dbg !314
  %5042 = icmp slt i32 %5040, %5041, !dbg !315
  br i1 %5042, label %5043, label %5404, !dbg !316

5043:                                             ; preds = %5037
  %5044 = load i32, ptr %10, align 4, !dbg !317
  %5045 = sext i32 %5044 to i64, !dbg !319
  %5046 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5045, !dbg !319
  %5047 = load ptr, ptr %7, align 8, !dbg !320
  %5048 = load i32, ptr %10, align 4, !dbg !321
  %5049 = sext i32 %5048 to i64, !dbg !320
  %5050 = getelementptr inbounds %struct.POINT, ptr %5047, i64 %5049, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5046, ptr align 8 %5050, i64 16, i1 false), !dbg !320
  br label %5051, !dbg !322

5051:                                             ; preds = %5043
  %5052 = load i32, ptr %10, align 4, !dbg !323
  %5053 = add nsw i32 %5052, 1, !dbg !323
  store i32 %5053, ptr %10, align 4, !dbg !323
  %5054 = load i32, ptr %10, align 4, !dbg !312
  %5055 = load i32, ptr %8, align 4, !dbg !314
  %5056 = icmp slt i32 %5054, %5055, !dbg !315
  br i1 %5056, label %5057, label %5404, !dbg !316

5057:                                             ; preds = %5051
  %5058 = load i32, ptr %10, align 4, !dbg !317
  %5059 = sext i32 %5058 to i64, !dbg !319
  %5060 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5059, !dbg !319
  %5061 = load ptr, ptr %7, align 8, !dbg !320
  %5062 = load i32, ptr %10, align 4, !dbg !321
  %5063 = sext i32 %5062 to i64, !dbg !320
  %5064 = getelementptr inbounds %struct.POINT, ptr %5061, i64 %5063, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5060, ptr align 8 %5064, i64 16, i1 false), !dbg !320
  br label %5065, !dbg !322

5065:                                             ; preds = %5057
  %5066 = load i32, ptr %10, align 4, !dbg !323
  %5067 = add nsw i32 %5066, 1, !dbg !323
  store i32 %5067, ptr %10, align 4, !dbg !323
  %5068 = load i32, ptr %10, align 4, !dbg !312
  %5069 = load i32, ptr %8, align 4, !dbg !314
  %5070 = icmp slt i32 %5068, %5069, !dbg !315
  br i1 %5070, label %5071, label %5404, !dbg !316

5071:                                             ; preds = %5065
  %5072 = load i32, ptr %10, align 4, !dbg !317
  %5073 = sext i32 %5072 to i64, !dbg !319
  %5074 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5073, !dbg !319
  %5075 = load ptr, ptr %7, align 8, !dbg !320
  %5076 = load i32, ptr %10, align 4, !dbg !321
  %5077 = sext i32 %5076 to i64, !dbg !320
  %5078 = getelementptr inbounds %struct.POINT, ptr %5075, i64 %5077, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5074, ptr align 8 %5078, i64 16, i1 false), !dbg !320
  br label %5079, !dbg !322

5079:                                             ; preds = %5071
  %5080 = load i32, ptr %10, align 4, !dbg !323
  %5081 = add nsw i32 %5080, 1, !dbg !323
  store i32 %5081, ptr %10, align 4, !dbg !323
  %5082 = load i32, ptr %10, align 4, !dbg !312
  %5083 = load i32, ptr %8, align 4, !dbg !314
  %5084 = icmp slt i32 %5082, %5083, !dbg !315
  br i1 %5084, label %5085, label %5404, !dbg !316

5085:                                             ; preds = %5079
  %5086 = load i32, ptr %10, align 4, !dbg !317
  %5087 = sext i32 %5086 to i64, !dbg !319
  %5088 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5087, !dbg !319
  %5089 = load ptr, ptr %7, align 8, !dbg !320
  %5090 = load i32, ptr %10, align 4, !dbg !321
  %5091 = sext i32 %5090 to i64, !dbg !320
  %5092 = getelementptr inbounds %struct.POINT, ptr %5089, i64 %5091, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5088, ptr align 8 %5092, i64 16, i1 false), !dbg !320
  br label %5093, !dbg !322

5093:                                             ; preds = %5085
  %5094 = load i32, ptr %10, align 4, !dbg !323
  %5095 = add nsw i32 %5094, 1, !dbg !323
  store i32 %5095, ptr %10, align 4, !dbg !323
  %5096 = load i32, ptr %10, align 4, !dbg !312
  %5097 = load i32, ptr %8, align 4, !dbg !314
  %5098 = icmp slt i32 %5096, %5097, !dbg !315
  br i1 %5098, label %5099, label %5404, !dbg !316

5099:                                             ; preds = %5093
  %5100 = load i32, ptr %10, align 4, !dbg !317
  %5101 = sext i32 %5100 to i64, !dbg !319
  %5102 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5101, !dbg !319
  %5103 = load ptr, ptr %7, align 8, !dbg !320
  %5104 = load i32, ptr %10, align 4, !dbg !321
  %5105 = sext i32 %5104 to i64, !dbg !320
  %5106 = getelementptr inbounds %struct.POINT, ptr %5103, i64 %5105, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5102, ptr align 8 %5106, i64 16, i1 false), !dbg !320
  br label %5107, !dbg !322

5107:                                             ; preds = %5099
  %5108 = load i32, ptr %10, align 4, !dbg !323
  %5109 = add nsw i32 %5108, 1, !dbg !323
  store i32 %5109, ptr %10, align 4, !dbg !323
  %5110 = load i32, ptr %10, align 4, !dbg !312
  %5111 = load i32, ptr %8, align 4, !dbg !314
  %5112 = icmp slt i32 %5110, %5111, !dbg !315
  br i1 %5112, label %5113, label %5404, !dbg !316

5113:                                             ; preds = %5107
  %5114 = load i32, ptr %10, align 4, !dbg !317
  %5115 = sext i32 %5114 to i64, !dbg !319
  %5116 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5115, !dbg !319
  %5117 = load ptr, ptr %7, align 8, !dbg !320
  %5118 = load i32, ptr %10, align 4, !dbg !321
  %5119 = sext i32 %5118 to i64, !dbg !320
  %5120 = getelementptr inbounds %struct.POINT, ptr %5117, i64 %5119, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5116, ptr align 8 %5120, i64 16, i1 false), !dbg !320
  br label %5121, !dbg !322

5121:                                             ; preds = %5113
  %5122 = load i32, ptr %10, align 4, !dbg !323
  %5123 = add nsw i32 %5122, 1, !dbg !323
  store i32 %5123, ptr %10, align 4, !dbg !323
  %5124 = load i32, ptr %10, align 4, !dbg !312
  %5125 = load i32, ptr %8, align 4, !dbg !314
  %5126 = icmp slt i32 %5124, %5125, !dbg !315
  br i1 %5126, label %5127, label %5404, !dbg !316

5127:                                             ; preds = %5121
  %5128 = load i32, ptr %10, align 4, !dbg !317
  %5129 = sext i32 %5128 to i64, !dbg !319
  %5130 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5129, !dbg !319
  %5131 = load ptr, ptr %7, align 8, !dbg !320
  %5132 = load i32, ptr %10, align 4, !dbg !321
  %5133 = sext i32 %5132 to i64, !dbg !320
  %5134 = getelementptr inbounds %struct.POINT, ptr %5131, i64 %5133, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5130, ptr align 8 %5134, i64 16, i1 false), !dbg !320
  br label %5135, !dbg !322

5135:                                             ; preds = %5127
  %5136 = load i32, ptr %10, align 4, !dbg !323
  %5137 = add nsw i32 %5136, 1, !dbg !323
  store i32 %5137, ptr %10, align 4, !dbg !323
  %5138 = load i32, ptr %10, align 4, !dbg !312
  %5139 = load i32, ptr %8, align 4, !dbg !314
  %5140 = icmp slt i32 %5138, %5139, !dbg !315
  br i1 %5140, label %5141, label %5404, !dbg !316

5141:                                             ; preds = %5135
  %5142 = load i32, ptr %10, align 4, !dbg !317
  %5143 = sext i32 %5142 to i64, !dbg !319
  %5144 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5143, !dbg !319
  %5145 = load ptr, ptr %7, align 8, !dbg !320
  %5146 = load i32, ptr %10, align 4, !dbg !321
  %5147 = sext i32 %5146 to i64, !dbg !320
  %5148 = getelementptr inbounds %struct.POINT, ptr %5145, i64 %5147, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5144, ptr align 8 %5148, i64 16, i1 false), !dbg !320
  br label %5149, !dbg !322

5149:                                             ; preds = %5141
  %5150 = load i32, ptr %10, align 4, !dbg !323
  %5151 = add nsw i32 %5150, 1, !dbg !323
  store i32 %5151, ptr %10, align 4, !dbg !323
  %5152 = load i32, ptr %10, align 4, !dbg !312
  %5153 = load i32, ptr %8, align 4, !dbg !314
  %5154 = icmp slt i32 %5152, %5153, !dbg !315
  br i1 %5154, label %5155, label %5404, !dbg !316

5155:                                             ; preds = %5149
  %5156 = load i32, ptr %10, align 4, !dbg !317
  %5157 = sext i32 %5156 to i64, !dbg !319
  %5158 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5157, !dbg !319
  %5159 = load ptr, ptr %7, align 8, !dbg !320
  %5160 = load i32, ptr %10, align 4, !dbg !321
  %5161 = sext i32 %5160 to i64, !dbg !320
  %5162 = getelementptr inbounds %struct.POINT, ptr %5159, i64 %5161, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5158, ptr align 8 %5162, i64 16, i1 false), !dbg !320
  br label %5163, !dbg !322

5163:                                             ; preds = %5155
  %5164 = load i32, ptr %10, align 4, !dbg !323
  %5165 = add nsw i32 %5164, 1, !dbg !323
  store i32 %5165, ptr %10, align 4, !dbg !323
  %5166 = load i32, ptr %10, align 4, !dbg !312
  %5167 = load i32, ptr %8, align 4, !dbg !314
  %5168 = icmp slt i32 %5166, %5167, !dbg !315
  br i1 %5168, label %5169, label %5404, !dbg !316

5169:                                             ; preds = %5163
  %5170 = load i32, ptr %10, align 4, !dbg !317
  %5171 = sext i32 %5170 to i64, !dbg !319
  %5172 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5171, !dbg !319
  %5173 = load ptr, ptr %7, align 8, !dbg !320
  %5174 = load i32, ptr %10, align 4, !dbg !321
  %5175 = sext i32 %5174 to i64, !dbg !320
  %5176 = getelementptr inbounds %struct.POINT, ptr %5173, i64 %5175, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5172, ptr align 8 %5176, i64 16, i1 false), !dbg !320
  br label %5177, !dbg !322

5177:                                             ; preds = %5169
  %5178 = load i32, ptr %10, align 4, !dbg !323
  %5179 = add nsw i32 %5178, 1, !dbg !323
  store i32 %5179, ptr %10, align 4, !dbg !323
  %5180 = load i32, ptr %10, align 4, !dbg !312
  %5181 = load i32, ptr %8, align 4, !dbg !314
  %5182 = icmp slt i32 %5180, %5181, !dbg !315
  br i1 %5182, label %5183, label %5404, !dbg !316

5183:                                             ; preds = %5177
  %5184 = load i32, ptr %10, align 4, !dbg !317
  %5185 = sext i32 %5184 to i64, !dbg !319
  %5186 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5185, !dbg !319
  %5187 = load ptr, ptr %7, align 8, !dbg !320
  %5188 = load i32, ptr %10, align 4, !dbg !321
  %5189 = sext i32 %5188 to i64, !dbg !320
  %5190 = getelementptr inbounds %struct.POINT, ptr %5187, i64 %5189, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5186, ptr align 8 %5190, i64 16, i1 false), !dbg !320
  br label %5191, !dbg !322

5191:                                             ; preds = %5183
  %5192 = load i32, ptr %10, align 4, !dbg !323
  %5193 = add nsw i32 %5192, 1, !dbg !323
  store i32 %5193, ptr %10, align 4, !dbg !323
  %5194 = load i32, ptr %10, align 4, !dbg !312
  %5195 = load i32, ptr %8, align 4, !dbg !314
  %5196 = icmp slt i32 %5194, %5195, !dbg !315
  br i1 %5196, label %5197, label %5404, !dbg !316

5197:                                             ; preds = %5191
  %5198 = load i32, ptr %10, align 4, !dbg !317
  %5199 = sext i32 %5198 to i64, !dbg !319
  %5200 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5199, !dbg !319
  %5201 = load ptr, ptr %7, align 8, !dbg !320
  %5202 = load i32, ptr %10, align 4, !dbg !321
  %5203 = sext i32 %5202 to i64, !dbg !320
  %5204 = getelementptr inbounds %struct.POINT, ptr %5201, i64 %5203, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5200, ptr align 8 %5204, i64 16, i1 false), !dbg !320
  br label %5205, !dbg !322

5205:                                             ; preds = %5197
  %5206 = load i32, ptr %10, align 4, !dbg !323
  %5207 = add nsw i32 %5206, 1, !dbg !323
  store i32 %5207, ptr %10, align 4, !dbg !323
  %5208 = load i32, ptr %10, align 4, !dbg !312
  %5209 = load i32, ptr %8, align 4, !dbg !314
  %5210 = icmp slt i32 %5208, %5209, !dbg !315
  br i1 %5210, label %5211, label %5404, !dbg !316

5211:                                             ; preds = %5205
  %5212 = load i32, ptr %10, align 4, !dbg !317
  %5213 = sext i32 %5212 to i64, !dbg !319
  %5214 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5213, !dbg !319
  %5215 = load ptr, ptr %7, align 8, !dbg !320
  %5216 = load i32, ptr %10, align 4, !dbg !321
  %5217 = sext i32 %5216 to i64, !dbg !320
  %5218 = getelementptr inbounds %struct.POINT, ptr %5215, i64 %5217, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5214, ptr align 8 %5218, i64 16, i1 false), !dbg !320
  br label %5219, !dbg !322

5219:                                             ; preds = %5211
  %5220 = load i32, ptr %10, align 4, !dbg !323
  %5221 = add nsw i32 %5220, 1, !dbg !323
  store i32 %5221, ptr %10, align 4, !dbg !323
  %5222 = load i32, ptr %10, align 4, !dbg !312
  %5223 = load i32, ptr %8, align 4, !dbg !314
  %5224 = icmp slt i32 %5222, %5223, !dbg !315
  br i1 %5224, label %5225, label %5404, !dbg !316

5225:                                             ; preds = %5219
  %5226 = load i32, ptr %10, align 4, !dbg !317
  %5227 = sext i32 %5226 to i64, !dbg !319
  %5228 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5227, !dbg !319
  %5229 = load ptr, ptr %7, align 8, !dbg !320
  %5230 = load i32, ptr %10, align 4, !dbg !321
  %5231 = sext i32 %5230 to i64, !dbg !320
  %5232 = getelementptr inbounds %struct.POINT, ptr %5229, i64 %5231, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5228, ptr align 8 %5232, i64 16, i1 false), !dbg !320
  br label %5233, !dbg !322

5233:                                             ; preds = %5225
  %5234 = load i32, ptr %10, align 4, !dbg !323
  %5235 = add nsw i32 %5234, 1, !dbg !323
  store i32 %5235, ptr %10, align 4, !dbg !323
  %5236 = load i32, ptr %10, align 4, !dbg !312
  %5237 = load i32, ptr %8, align 4, !dbg !314
  %5238 = icmp slt i32 %5236, %5237, !dbg !315
  br i1 %5238, label %5239, label %5404, !dbg !316

5239:                                             ; preds = %5233
  %5240 = load i32, ptr %10, align 4, !dbg !317
  %5241 = sext i32 %5240 to i64, !dbg !319
  %5242 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5241, !dbg !319
  %5243 = load ptr, ptr %7, align 8, !dbg !320
  %5244 = load i32, ptr %10, align 4, !dbg !321
  %5245 = sext i32 %5244 to i64, !dbg !320
  %5246 = getelementptr inbounds %struct.POINT, ptr %5243, i64 %5245, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5242, ptr align 8 %5246, i64 16, i1 false), !dbg !320
  br label %5247, !dbg !322

5247:                                             ; preds = %5239
  %5248 = load i32, ptr %10, align 4, !dbg !323
  %5249 = add nsw i32 %5248, 1, !dbg !323
  store i32 %5249, ptr %10, align 4, !dbg !323
  %5250 = load i32, ptr %10, align 4, !dbg !312
  %5251 = load i32, ptr %8, align 4, !dbg !314
  %5252 = icmp slt i32 %5250, %5251, !dbg !315
  br i1 %5252, label %5253, label %5404, !dbg !316

5253:                                             ; preds = %5247
  %5254 = load i32, ptr %10, align 4, !dbg !317
  %5255 = sext i32 %5254 to i64, !dbg !319
  %5256 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5255, !dbg !319
  %5257 = load ptr, ptr %7, align 8, !dbg !320
  %5258 = load i32, ptr %10, align 4, !dbg !321
  %5259 = sext i32 %5258 to i64, !dbg !320
  %5260 = getelementptr inbounds %struct.POINT, ptr %5257, i64 %5259, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5256, ptr align 8 %5260, i64 16, i1 false), !dbg !320
  br label %5261, !dbg !322

5261:                                             ; preds = %5253
  %5262 = load i32, ptr %10, align 4, !dbg !323
  %5263 = add nsw i32 %5262, 1, !dbg !323
  store i32 %5263, ptr %10, align 4, !dbg !323
  %5264 = load i32, ptr %10, align 4, !dbg !312
  %5265 = load i32, ptr %8, align 4, !dbg !314
  %5266 = icmp slt i32 %5264, %5265, !dbg !315
  br i1 %5266, label %5267, label %5404, !dbg !316

5267:                                             ; preds = %5261
  %5268 = load i32, ptr %10, align 4, !dbg !317
  %5269 = sext i32 %5268 to i64, !dbg !319
  %5270 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5269, !dbg !319
  %5271 = load ptr, ptr %7, align 8, !dbg !320
  %5272 = load i32, ptr %10, align 4, !dbg !321
  %5273 = sext i32 %5272 to i64, !dbg !320
  %5274 = getelementptr inbounds %struct.POINT, ptr %5271, i64 %5273, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5270, ptr align 8 %5274, i64 16, i1 false), !dbg !320
  br label %5275, !dbg !322

5275:                                             ; preds = %5267
  %5276 = load i32, ptr %10, align 4, !dbg !323
  %5277 = add nsw i32 %5276, 1, !dbg !323
  store i32 %5277, ptr %10, align 4, !dbg !323
  %5278 = load i32, ptr %10, align 4, !dbg !312
  %5279 = load i32, ptr %8, align 4, !dbg !314
  %5280 = icmp slt i32 %5278, %5279, !dbg !315
  br i1 %5280, label %5281, label %5404, !dbg !316

5281:                                             ; preds = %5275
  %5282 = load i32, ptr %10, align 4, !dbg !317
  %5283 = sext i32 %5282 to i64, !dbg !319
  %5284 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5283, !dbg !319
  %5285 = load ptr, ptr %7, align 8, !dbg !320
  %5286 = load i32, ptr %10, align 4, !dbg !321
  %5287 = sext i32 %5286 to i64, !dbg !320
  %5288 = getelementptr inbounds %struct.POINT, ptr %5285, i64 %5287, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5284, ptr align 8 %5288, i64 16, i1 false), !dbg !320
  br label %5289, !dbg !322

5289:                                             ; preds = %5281
  %5290 = load i32, ptr %10, align 4, !dbg !323
  %5291 = add nsw i32 %5290, 1, !dbg !323
  store i32 %5291, ptr %10, align 4, !dbg !323
  %5292 = load i32, ptr %10, align 4, !dbg !312
  %5293 = load i32, ptr %8, align 4, !dbg !314
  %5294 = icmp slt i32 %5292, %5293, !dbg !315
  br i1 %5294, label %5295, label %5404, !dbg !316

5295:                                             ; preds = %5289
  %5296 = load i32, ptr %10, align 4, !dbg !317
  %5297 = sext i32 %5296 to i64, !dbg !319
  %5298 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5297, !dbg !319
  %5299 = load ptr, ptr %7, align 8, !dbg !320
  %5300 = load i32, ptr %10, align 4, !dbg !321
  %5301 = sext i32 %5300 to i64, !dbg !320
  %5302 = getelementptr inbounds %struct.POINT, ptr %5299, i64 %5301, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5298, ptr align 8 %5302, i64 16, i1 false), !dbg !320
  br label %5303, !dbg !322

5303:                                             ; preds = %5295
  %5304 = load i32, ptr %10, align 4, !dbg !323
  %5305 = add nsw i32 %5304, 1, !dbg !323
  store i32 %5305, ptr %10, align 4, !dbg !323
  %5306 = load i32, ptr %10, align 4, !dbg !312
  %5307 = load i32, ptr %8, align 4, !dbg !314
  %5308 = icmp slt i32 %5306, %5307, !dbg !315
  br i1 %5308, label %5309, label %5404, !dbg !316

5309:                                             ; preds = %5303
  %5310 = load i32, ptr %10, align 4, !dbg !317
  %5311 = sext i32 %5310 to i64, !dbg !319
  %5312 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5311, !dbg !319
  %5313 = load ptr, ptr %7, align 8, !dbg !320
  %5314 = load i32, ptr %10, align 4, !dbg !321
  %5315 = sext i32 %5314 to i64, !dbg !320
  %5316 = getelementptr inbounds %struct.POINT, ptr %5313, i64 %5315, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5312, ptr align 8 %5316, i64 16, i1 false), !dbg !320
  br label %5317, !dbg !322

5317:                                             ; preds = %5309
  %5318 = load i32, ptr %10, align 4, !dbg !323
  %5319 = add nsw i32 %5318, 1, !dbg !323
  store i32 %5319, ptr %10, align 4, !dbg !323
  %5320 = load i32, ptr %10, align 4, !dbg !312
  %5321 = load i32, ptr %8, align 4, !dbg !314
  %5322 = icmp slt i32 %5320, %5321, !dbg !315
  br i1 %5322, label %5323, label %5404, !dbg !316

5323:                                             ; preds = %5317
  %5324 = load i32, ptr %10, align 4, !dbg !317
  %5325 = sext i32 %5324 to i64, !dbg !319
  %5326 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5325, !dbg !319
  %5327 = load ptr, ptr %7, align 8, !dbg !320
  %5328 = load i32, ptr %10, align 4, !dbg !321
  %5329 = sext i32 %5328 to i64, !dbg !320
  %5330 = getelementptr inbounds %struct.POINT, ptr %5327, i64 %5329, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5326, ptr align 8 %5330, i64 16, i1 false), !dbg !320
  br label %5331, !dbg !322

5331:                                             ; preds = %5323
  %5332 = load i32, ptr %10, align 4, !dbg !323
  %5333 = add nsw i32 %5332, 1, !dbg !323
  store i32 %5333, ptr %10, align 4, !dbg !323
  %5334 = load i32, ptr %10, align 4, !dbg !312
  %5335 = load i32, ptr %8, align 4, !dbg !314
  %5336 = icmp slt i32 %5334, %5335, !dbg !315
  br i1 %5336, label %5337, label %5404, !dbg !316

5337:                                             ; preds = %5331
  %5338 = load i32, ptr %10, align 4, !dbg !317
  %5339 = sext i32 %5338 to i64, !dbg !319
  %5340 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5339, !dbg !319
  %5341 = load ptr, ptr %7, align 8, !dbg !320
  %5342 = load i32, ptr %10, align 4, !dbg !321
  %5343 = sext i32 %5342 to i64, !dbg !320
  %5344 = getelementptr inbounds %struct.POINT, ptr %5341, i64 %5343, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5340, ptr align 8 %5344, i64 16, i1 false), !dbg !320
  br label %5345, !dbg !322

5345:                                             ; preds = %5337
  %5346 = load i32, ptr %10, align 4, !dbg !323
  %5347 = add nsw i32 %5346, 1, !dbg !323
  store i32 %5347, ptr %10, align 4, !dbg !323
  %5348 = load i32, ptr %10, align 4, !dbg !312
  %5349 = load i32, ptr %8, align 4, !dbg !314
  %5350 = icmp slt i32 %5348, %5349, !dbg !315
  br i1 %5350, label %5351, label %5404, !dbg !316

5351:                                             ; preds = %5345
  %5352 = load i32, ptr %10, align 4, !dbg !317
  %5353 = sext i32 %5352 to i64, !dbg !319
  %5354 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5353, !dbg !319
  %5355 = load ptr, ptr %7, align 8, !dbg !320
  %5356 = load i32, ptr %10, align 4, !dbg !321
  %5357 = sext i32 %5356 to i64, !dbg !320
  %5358 = getelementptr inbounds %struct.POINT, ptr %5355, i64 %5357, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5354, ptr align 8 %5358, i64 16, i1 false), !dbg !320
  br label %5359, !dbg !322

5359:                                             ; preds = %5351
  %5360 = load i32, ptr %10, align 4, !dbg !323
  %5361 = add nsw i32 %5360, 1, !dbg !323
  store i32 %5361, ptr %10, align 4, !dbg !323
  %5362 = load i32, ptr %10, align 4, !dbg !312
  %5363 = load i32, ptr %8, align 4, !dbg !314
  %5364 = icmp slt i32 %5362, %5363, !dbg !315
  br i1 %5364, label %5365, label %5404, !dbg !316

5365:                                             ; preds = %5359
  %5366 = load i32, ptr %10, align 4, !dbg !317
  %5367 = sext i32 %5366 to i64, !dbg !319
  %5368 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5367, !dbg !319
  %5369 = load ptr, ptr %7, align 8, !dbg !320
  %5370 = load i32, ptr %10, align 4, !dbg !321
  %5371 = sext i32 %5370 to i64, !dbg !320
  %5372 = getelementptr inbounds %struct.POINT, ptr %5369, i64 %5371, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5368, ptr align 8 %5372, i64 16, i1 false), !dbg !320
  br label %5373, !dbg !322

5373:                                             ; preds = %5365
  %5374 = load i32, ptr %10, align 4, !dbg !323
  %5375 = add nsw i32 %5374, 1, !dbg !323
  store i32 %5375, ptr %10, align 4, !dbg !323
  %5376 = load i32, ptr %10, align 4, !dbg !312
  %5377 = load i32, ptr %8, align 4, !dbg !314
  %5378 = icmp slt i32 %5376, %5377, !dbg !315
  br i1 %5378, label %5379, label %5404, !dbg !316

5379:                                             ; preds = %5373
  %5380 = load i32, ptr %10, align 4, !dbg !317
  %5381 = sext i32 %5380 to i64, !dbg !319
  %5382 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5381, !dbg !319
  %5383 = load ptr, ptr %7, align 8, !dbg !320
  %5384 = load i32, ptr %10, align 4, !dbg !321
  %5385 = sext i32 %5384 to i64, !dbg !320
  %5386 = getelementptr inbounds %struct.POINT, ptr %5383, i64 %5385, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5382, ptr align 8 %5386, i64 16, i1 false), !dbg !320
  br label %5387, !dbg !322

5387:                                             ; preds = %5379
  %5388 = load i32, ptr %10, align 4, !dbg !323
  %5389 = add nsw i32 %5388, 1, !dbg !323
  store i32 %5389, ptr %10, align 4, !dbg !323
  %5390 = load i32, ptr %10, align 4, !dbg !312
  %5391 = load i32, ptr %8, align 4, !dbg !314
  %5392 = icmp slt i32 %5390, %5391, !dbg !315
  br i1 %5392, label %5393, label %5404, !dbg !316

5393:                                             ; preds = %5387
  %5394 = load i32, ptr %10, align 4, !dbg !317
  %5395 = sext i32 %5394 to i64, !dbg !319
  %5396 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5395, !dbg !319
  %5397 = load ptr, ptr %7, align 8, !dbg !320
  %5398 = load i32, ptr %10, align 4, !dbg !321
  %5399 = sext i32 %5398 to i64, !dbg !320
  %5400 = getelementptr inbounds %struct.POINT, ptr %5397, i64 %5399, !dbg !320
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5396, ptr align 8 %5400, i64 16, i1 false), !dbg !320
  br label %5401, !dbg !322

5401:                                             ; preds = %5393
  %5402 = load i32, ptr %10, align 4, !dbg !323
  %5403 = add nsw i32 %5402, 1, !dbg !323
  store i32 %5403, ptr %10, align 4, !dbg !323
  br label %27, !dbg !324, !llvm.loop !325

5404:                                             ; preds = %5387, %5373, %5359, %5345, %5331, %5317, %5303, %5289, %5275, %5261, %5247, %5233, %5219, %5205, %5191, %5177, %5163, %5149, %5135, %5121, %5107, %5093, %5079, %5065, %5051, %5037, %5023, %5009, %4995, %4981, %4967, %4953, %4939, %4925, %4911, %4897, %4883, %4869, %4855, %4841, %4827, %4813, %4799, %4785, %4771, %4757, %4743, %4729, %4715, %4701, %4687, %4673, %4659, %4645, %4631, %4617, %4603, %4589, %4575, %4561, %4547, %4533, %4519, %4505, %4491, %4477, %4463, %4449, %4435, %4421, %4407, %4393, %4379, %4365, %4351, %4337, %4323, %4309, %4295, %4281, %4267, %4253, %4239, %4225, %4211, %4197, %4183, %4169, %4155, %4141, %4127, %4113, %4099, %4085, %4071, %4057, %4043, %4029, %4015, %4001, %3987, %3973, %3959, %3945, %3931, %3917, %3903, %3889, %3875, %3861, %3847, %3833, %3819, %3805, %3791, %3777, %3763, %3749, %3735, %3721, %3707, %3693, %3679, %3665, %3651, %3637, %3623, %3609, %3595, %3581, %3567, %3553, %3539, %3525, %3511, %3497, %3483, %3469, %3455, %3441, %3427, %3413, %3399, %3385, %3371, %3357, %3343, %3329, %3315, %3301, %3287, %3273, %3259, %3245, %3231, %3217, %3203, %3189, %3175, %3161, %3147, %3133, %3119, %3105, %3091, %3077, %3063, %3049, %3035, %3021, %3007, %2993, %2979, %2965, %2951, %2937, %2923, %2909, %2895, %2881, %2867, %2853, %2839, %2825, %2811, %2797, %2783, %2769, %2755, %2741, %2727, %2713, %2699, %2685, %2671, %2657, %2643, %2629, %2615, %2601, %2587, %2573, %2559, %2545, %2531, %2517, %2503, %2489, %2475, %2461, %2447, %2433, %2419, %2405, %2391, %2377, %2363, %2349, %2335, %2321, %2307, %2293, %2279, %2265, %2251, %2237, %2223, %2209, %2195, %2181, %2167, %2153, %2139, %2125, %2111, %2097, %2083, %2069, %2055, %2041, %2027, %2013, %1999, %1985, %1971, %1957, %1943, %1929, %1915, %1901, %1887, %1873, %1859, %1845, %1831, %1817, %1803, %1789, %1775, %1761, %1747, %1733, %1719, %1705, %1691, %1677, %1663, %1649, %1635, %1621, %1607, %1593, %1579, %1565, %1551, %1537, %1523, %1509, %1495, %1481, %1467, %1453, %1439, %1425, %1411, %1397, %1383, %1369, %1355, %1341, %1327, %1313, %1299, %1285, %1271, %1257, %1243, %1229, %1215, %1201, %1187, %1173, %1159, %1145, %1131, %1117, %1103, %1089, %1075, %1061, %1047, %1033, %1019, %1005, %991, %977, %963, %949, %935, %921, %907, %893, %879, %865, %851, %837, %823, %809, %795, %781, %767, %753, %739, %725, %711, %697, %683, %669, %655, %641, %627, %613, %599, %585, %571, %557, %543, %529, %515, %501, %487, %473, %459, %445, %431, %417, %403, %389, %375, %361, %347, %333, %319, %305, %291, %277, %263, %249, %235, %221, %207, %193, %179, %165, %151, %137, %123, %109, %95, %81, %67, %53, %39, %27
  %5405 = load i32, ptr %8, align 4, !dbg !328
  %5406 = sext i32 %5405 to i64, !dbg !329
  %5407 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5406, !dbg !329
  %5408 = getelementptr inbounds %struct.POINT, ptr %26, i64 0, !dbg !330
  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %5407, ptr align 16 %5408, i64 16, i1 false), !dbg !330
  store i32 0, ptr %10, align 4, !dbg !331
  br label %5409, !dbg !333

5409:                                             ; preds = %14240, %5404
  %5410 = load i32, ptr %10, align 4, !dbg !334
  %5411 = load i32, ptr %8, align 4, !dbg !336
  %5412 = icmp slt i32 %5410, %5411, !dbg !337
  br i1 %5412, label %5413, label %14243, !dbg !338

5413:                                             ; preds = %5409
  %5414 = load i32, ptr %10, align 4, !dbg !339
  %5415 = sext i32 %5414 to i64, !dbg !342
  %5416 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5415, !dbg !342
  %5417 = load double, ptr %5416, align 16, !dbg !343
  %5418 = load double, ptr %6, align 8, !dbg !344
  %5419 = fcmp oeq double %5417, %5418, !dbg !345
  br i1 %5419, label %5420, label %5430, !dbg !346

5420:                                             ; preds = %5413
  %5421 = load i32, ptr %10, align 4, !dbg !347
  %5422 = sext i32 %5421 to i64, !dbg !348
  %5423 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5422, !dbg !348
  %5424 = getelementptr inbounds %struct.POINT, ptr %5423, i32 0, i32 1, !dbg !349
  %5425 = load double, ptr %5424, align 8, !dbg !349
  %5426 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5427 = load double, ptr %5426, align 8, !dbg !350
  %5428 = fcmp oeq double %5425, %5427, !dbg !351
  br i1 %5428, label %5429, label %5430, !dbg !352

5429:                                             ; preds = %14230, %14207, %14184, %14161, %14138, %14115, %14092, %14069, %14046, %14023, %14000, %13977, %13954, %13931, %13908, %13885, %13862, %13839, %13816, %13793, %13770, %13747, %13724, %13701, %13678, %13655, %13632, %13609, %13586, %13563, %13540, %13517, %13494, %13471, %13448, %13425, %13402, %13379, %13356, %13333, %13310, %13287, %13264, %13241, %13218, %13195, %13172, %13149, %13126, %13103, %13080, %13057, %13034, %13011, %12988, %12965, %12942, %12919, %12896, %12873, %12850, %12827, %12804, %12781, %12758, %12735, %12712, %12689, %12666, %12643, %12620, %12597, %12574, %12551, %12528, %12505, %12482, %12459, %12436, %12413, %12390, %12367, %12344, %12321, %12298, %12275, %12252, %12229, %12206, %12183, %12160, %12137, %12114, %12091, %12068, %12045, %12022, %11999, %11976, %11953, %11930, %11907, %11884, %11861, %11838, %11815, %11792, %11769, %11746, %11723, %11700, %11677, %11654, %11631, %11608, %11585, %11562, %11539, %11516, %11493, %11470, %11447, %11424, %11401, %11378, %11355, %11332, %11309, %11286, %11263, %11240, %11217, %11194, %11171, %11148, %11125, %11102, %11079, %11056, %11033, %11010, %10987, %10964, %10941, %10918, %10895, %10872, %10849, %10826, %10803, %10780, %10757, %10734, %10711, %10688, %10665, %10642, %10619, %10596, %10573, %10550, %10527, %10504, %10481, %10458, %10435, %10412, %10389, %10366, %10343, %10320, %10297, %10274, %10251, %10228, %10205, %10182, %10159, %10136, %10113, %10090, %10067, %10044, %10021, %9998, %9975, %9952, %9929, %9906, %9883, %9860, %9837, %9814, %9791, %9768, %9745, %9722, %9699, %9676, %9653, %9630, %9607, %9584, %9561, %9538, %9515, %9492, %9469, %9446, %9423, %9400, %9377, %9354, %9331, %9308, %9285, %9262, %9239, %9216, %9193, %9170, %9147, %9124, %9101, %9078, %9055, %9032, %9009, %8986, %8963, %8940, %8917, %8894, %8871, %8848, %8825, %8802, %8779, %8756, %8733, %8710, %8687, %8664, %8641, %8618, %8595, %8572, %8549, %8526, %8503, %8480, %8457, %8434, %8411, %8388, %8365, %8342, %8319, %8296, %8273, %8250, %8227, %8204, %8181, %8158, %8135, %8112, %8089, %8066, %8043, %8020, %7997, %7974, %7951, %7928, %7905, %7882, %7859, %7836, %7813, %7790, %7767, %7744, %7721, %7698, %7675, %7652, %7629, %7606, %7583, %7560, %7537, %7514, %7491, %7468, %7445, %7422, %7399, %7376, %7353, %7330, %7307, %7284, %7261, %7238, %7215, %7192, %7169, %7146, %7123, %7100, %7077, %7054, %7031, %7008, %6985, %6962, %6939, %6916, %6893, %6870, %6847, %6824, %6801, %6778, %6755, %6732, %6709, %6686, %6663, %6640, %6617, %6594, %6571, %6548, %6525, %6502, %6479, %6456, %6433, %6410, %6387, %6364, %6341, %6318, %6295, %6272, %6249, %6226, %6203, %6180, %6157, %6134, %6111, %6088, %6065, %6042, %6019, %5996, %5973, %5950, %5927, %5904, %5881, %5858, %5835, %5812, %5789, %5766, %5743, %5720, %5697, %5674, %5651, %5628, %5605, %5582, %5559, %5536, %5513, %5490, %5467, %5444, %5420
  store i32 1, ptr %9, align 4, !dbg !353
  store i32 1, ptr %5, align 4, !dbg !355
  store i32 1, ptr %15, align 4
  br label %48430, !dbg !355

5430:                                             ; preds = %5420, %5413
  br label %5431, !dbg !356

5431:                                             ; preds = %5430
  %5432 = load i32, ptr %10, align 4, !dbg !357
  %5433 = add nsw i32 %5432, 1, !dbg !357
  store i32 %5433, ptr %10, align 4, !dbg !357
  %5434 = load i32, ptr %10, align 4, !dbg !334
  %5435 = load i32, ptr %8, align 4, !dbg !336
  %5436 = icmp slt i32 %5434, %5435, !dbg !337
  br i1 %5436, label %5437, label %14243, !dbg !338

5437:                                             ; preds = %5431
  %5438 = load i32, ptr %10, align 4, !dbg !339
  %5439 = sext i32 %5438 to i64, !dbg !342
  %5440 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5439, !dbg !342
  %5441 = load double, ptr %5440, align 16, !dbg !343
  %5442 = load double, ptr %6, align 8, !dbg !344
  %5443 = fcmp oeq double %5441, %5442, !dbg !345
  br i1 %5443, label %5444, label %5453, !dbg !346

5444:                                             ; preds = %5437
  %5445 = load i32, ptr %10, align 4, !dbg !347
  %5446 = sext i32 %5445 to i64, !dbg !348
  %5447 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5446, !dbg !348
  %5448 = getelementptr inbounds %struct.POINT, ptr %5447, i32 0, i32 1, !dbg !349
  %5449 = load double, ptr %5448, align 8, !dbg !349
  %5450 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5451 = load double, ptr %5450, align 8, !dbg !350
  %5452 = fcmp oeq double %5449, %5451, !dbg !351
  br i1 %5452, label %5429, label %5453, !dbg !352

5453:                                             ; preds = %5444, %5437
  br label %5454, !dbg !356

5454:                                             ; preds = %5453
  %5455 = load i32, ptr %10, align 4, !dbg !357
  %5456 = add nsw i32 %5455, 1, !dbg !357
  store i32 %5456, ptr %10, align 4, !dbg !357
  %5457 = load i32, ptr %10, align 4, !dbg !334
  %5458 = load i32, ptr %8, align 4, !dbg !336
  %5459 = icmp slt i32 %5457, %5458, !dbg !337
  br i1 %5459, label %5460, label %14243, !dbg !338

5460:                                             ; preds = %5454
  %5461 = load i32, ptr %10, align 4, !dbg !339
  %5462 = sext i32 %5461 to i64, !dbg !342
  %5463 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5462, !dbg !342
  %5464 = load double, ptr %5463, align 16, !dbg !343
  %5465 = load double, ptr %6, align 8, !dbg !344
  %5466 = fcmp oeq double %5464, %5465, !dbg !345
  br i1 %5466, label %5467, label %5476, !dbg !346

5467:                                             ; preds = %5460
  %5468 = load i32, ptr %10, align 4, !dbg !347
  %5469 = sext i32 %5468 to i64, !dbg !348
  %5470 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5469, !dbg !348
  %5471 = getelementptr inbounds %struct.POINT, ptr %5470, i32 0, i32 1, !dbg !349
  %5472 = load double, ptr %5471, align 8, !dbg !349
  %5473 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5474 = load double, ptr %5473, align 8, !dbg !350
  %5475 = fcmp oeq double %5472, %5474, !dbg !351
  br i1 %5475, label %5429, label %5476, !dbg !352

5476:                                             ; preds = %5467, %5460
  br label %5477, !dbg !356

5477:                                             ; preds = %5476
  %5478 = load i32, ptr %10, align 4, !dbg !357
  %5479 = add nsw i32 %5478, 1, !dbg !357
  store i32 %5479, ptr %10, align 4, !dbg !357
  %5480 = load i32, ptr %10, align 4, !dbg !334
  %5481 = load i32, ptr %8, align 4, !dbg !336
  %5482 = icmp slt i32 %5480, %5481, !dbg !337
  br i1 %5482, label %5483, label %14243, !dbg !338

5483:                                             ; preds = %5477
  %5484 = load i32, ptr %10, align 4, !dbg !339
  %5485 = sext i32 %5484 to i64, !dbg !342
  %5486 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5485, !dbg !342
  %5487 = load double, ptr %5486, align 16, !dbg !343
  %5488 = load double, ptr %6, align 8, !dbg !344
  %5489 = fcmp oeq double %5487, %5488, !dbg !345
  br i1 %5489, label %5490, label %5499, !dbg !346

5490:                                             ; preds = %5483
  %5491 = load i32, ptr %10, align 4, !dbg !347
  %5492 = sext i32 %5491 to i64, !dbg !348
  %5493 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5492, !dbg !348
  %5494 = getelementptr inbounds %struct.POINT, ptr %5493, i32 0, i32 1, !dbg !349
  %5495 = load double, ptr %5494, align 8, !dbg !349
  %5496 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5497 = load double, ptr %5496, align 8, !dbg !350
  %5498 = fcmp oeq double %5495, %5497, !dbg !351
  br i1 %5498, label %5429, label %5499, !dbg !352

5499:                                             ; preds = %5490, %5483
  br label %5500, !dbg !356

5500:                                             ; preds = %5499
  %5501 = load i32, ptr %10, align 4, !dbg !357
  %5502 = add nsw i32 %5501, 1, !dbg !357
  store i32 %5502, ptr %10, align 4, !dbg !357
  %5503 = load i32, ptr %10, align 4, !dbg !334
  %5504 = load i32, ptr %8, align 4, !dbg !336
  %5505 = icmp slt i32 %5503, %5504, !dbg !337
  br i1 %5505, label %5506, label %14243, !dbg !338

5506:                                             ; preds = %5500
  %5507 = load i32, ptr %10, align 4, !dbg !339
  %5508 = sext i32 %5507 to i64, !dbg !342
  %5509 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5508, !dbg !342
  %5510 = load double, ptr %5509, align 16, !dbg !343
  %5511 = load double, ptr %6, align 8, !dbg !344
  %5512 = fcmp oeq double %5510, %5511, !dbg !345
  br i1 %5512, label %5513, label %5522, !dbg !346

5513:                                             ; preds = %5506
  %5514 = load i32, ptr %10, align 4, !dbg !347
  %5515 = sext i32 %5514 to i64, !dbg !348
  %5516 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5515, !dbg !348
  %5517 = getelementptr inbounds %struct.POINT, ptr %5516, i32 0, i32 1, !dbg !349
  %5518 = load double, ptr %5517, align 8, !dbg !349
  %5519 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5520 = load double, ptr %5519, align 8, !dbg !350
  %5521 = fcmp oeq double %5518, %5520, !dbg !351
  br i1 %5521, label %5429, label %5522, !dbg !352

5522:                                             ; preds = %5513, %5506
  br label %5523, !dbg !356

5523:                                             ; preds = %5522
  %5524 = load i32, ptr %10, align 4, !dbg !357
  %5525 = add nsw i32 %5524, 1, !dbg !357
  store i32 %5525, ptr %10, align 4, !dbg !357
  %5526 = load i32, ptr %10, align 4, !dbg !334
  %5527 = load i32, ptr %8, align 4, !dbg !336
  %5528 = icmp slt i32 %5526, %5527, !dbg !337
  br i1 %5528, label %5529, label %14243, !dbg !338

5529:                                             ; preds = %5523
  %5530 = load i32, ptr %10, align 4, !dbg !339
  %5531 = sext i32 %5530 to i64, !dbg !342
  %5532 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5531, !dbg !342
  %5533 = load double, ptr %5532, align 16, !dbg !343
  %5534 = load double, ptr %6, align 8, !dbg !344
  %5535 = fcmp oeq double %5533, %5534, !dbg !345
  br i1 %5535, label %5536, label %5545, !dbg !346

5536:                                             ; preds = %5529
  %5537 = load i32, ptr %10, align 4, !dbg !347
  %5538 = sext i32 %5537 to i64, !dbg !348
  %5539 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5538, !dbg !348
  %5540 = getelementptr inbounds %struct.POINT, ptr %5539, i32 0, i32 1, !dbg !349
  %5541 = load double, ptr %5540, align 8, !dbg !349
  %5542 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5543 = load double, ptr %5542, align 8, !dbg !350
  %5544 = fcmp oeq double %5541, %5543, !dbg !351
  br i1 %5544, label %5429, label %5545, !dbg !352

5545:                                             ; preds = %5536, %5529
  br label %5546, !dbg !356

5546:                                             ; preds = %5545
  %5547 = load i32, ptr %10, align 4, !dbg !357
  %5548 = add nsw i32 %5547, 1, !dbg !357
  store i32 %5548, ptr %10, align 4, !dbg !357
  %5549 = load i32, ptr %10, align 4, !dbg !334
  %5550 = load i32, ptr %8, align 4, !dbg !336
  %5551 = icmp slt i32 %5549, %5550, !dbg !337
  br i1 %5551, label %5552, label %14243, !dbg !338

5552:                                             ; preds = %5546
  %5553 = load i32, ptr %10, align 4, !dbg !339
  %5554 = sext i32 %5553 to i64, !dbg !342
  %5555 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5554, !dbg !342
  %5556 = load double, ptr %5555, align 16, !dbg !343
  %5557 = load double, ptr %6, align 8, !dbg !344
  %5558 = fcmp oeq double %5556, %5557, !dbg !345
  br i1 %5558, label %5559, label %5568, !dbg !346

5559:                                             ; preds = %5552
  %5560 = load i32, ptr %10, align 4, !dbg !347
  %5561 = sext i32 %5560 to i64, !dbg !348
  %5562 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5561, !dbg !348
  %5563 = getelementptr inbounds %struct.POINT, ptr %5562, i32 0, i32 1, !dbg !349
  %5564 = load double, ptr %5563, align 8, !dbg !349
  %5565 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5566 = load double, ptr %5565, align 8, !dbg !350
  %5567 = fcmp oeq double %5564, %5566, !dbg !351
  br i1 %5567, label %5429, label %5568, !dbg !352

5568:                                             ; preds = %5559, %5552
  br label %5569, !dbg !356

5569:                                             ; preds = %5568
  %5570 = load i32, ptr %10, align 4, !dbg !357
  %5571 = add nsw i32 %5570, 1, !dbg !357
  store i32 %5571, ptr %10, align 4, !dbg !357
  %5572 = load i32, ptr %10, align 4, !dbg !334
  %5573 = load i32, ptr %8, align 4, !dbg !336
  %5574 = icmp slt i32 %5572, %5573, !dbg !337
  br i1 %5574, label %5575, label %14243, !dbg !338

5575:                                             ; preds = %5569
  %5576 = load i32, ptr %10, align 4, !dbg !339
  %5577 = sext i32 %5576 to i64, !dbg !342
  %5578 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5577, !dbg !342
  %5579 = load double, ptr %5578, align 16, !dbg !343
  %5580 = load double, ptr %6, align 8, !dbg !344
  %5581 = fcmp oeq double %5579, %5580, !dbg !345
  br i1 %5581, label %5582, label %5591, !dbg !346

5582:                                             ; preds = %5575
  %5583 = load i32, ptr %10, align 4, !dbg !347
  %5584 = sext i32 %5583 to i64, !dbg !348
  %5585 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5584, !dbg !348
  %5586 = getelementptr inbounds %struct.POINT, ptr %5585, i32 0, i32 1, !dbg !349
  %5587 = load double, ptr %5586, align 8, !dbg !349
  %5588 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5589 = load double, ptr %5588, align 8, !dbg !350
  %5590 = fcmp oeq double %5587, %5589, !dbg !351
  br i1 %5590, label %5429, label %5591, !dbg !352

5591:                                             ; preds = %5582, %5575
  br label %5592, !dbg !356

5592:                                             ; preds = %5591
  %5593 = load i32, ptr %10, align 4, !dbg !357
  %5594 = add nsw i32 %5593, 1, !dbg !357
  store i32 %5594, ptr %10, align 4, !dbg !357
  %5595 = load i32, ptr %10, align 4, !dbg !334
  %5596 = load i32, ptr %8, align 4, !dbg !336
  %5597 = icmp slt i32 %5595, %5596, !dbg !337
  br i1 %5597, label %5598, label %14243, !dbg !338

5598:                                             ; preds = %5592
  %5599 = load i32, ptr %10, align 4, !dbg !339
  %5600 = sext i32 %5599 to i64, !dbg !342
  %5601 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5600, !dbg !342
  %5602 = load double, ptr %5601, align 16, !dbg !343
  %5603 = load double, ptr %6, align 8, !dbg !344
  %5604 = fcmp oeq double %5602, %5603, !dbg !345
  br i1 %5604, label %5605, label %5614, !dbg !346

5605:                                             ; preds = %5598
  %5606 = load i32, ptr %10, align 4, !dbg !347
  %5607 = sext i32 %5606 to i64, !dbg !348
  %5608 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5607, !dbg !348
  %5609 = getelementptr inbounds %struct.POINT, ptr %5608, i32 0, i32 1, !dbg !349
  %5610 = load double, ptr %5609, align 8, !dbg !349
  %5611 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5612 = load double, ptr %5611, align 8, !dbg !350
  %5613 = fcmp oeq double %5610, %5612, !dbg !351
  br i1 %5613, label %5429, label %5614, !dbg !352

5614:                                             ; preds = %5605, %5598
  br label %5615, !dbg !356

5615:                                             ; preds = %5614
  %5616 = load i32, ptr %10, align 4, !dbg !357
  %5617 = add nsw i32 %5616, 1, !dbg !357
  store i32 %5617, ptr %10, align 4, !dbg !357
  %5618 = load i32, ptr %10, align 4, !dbg !334
  %5619 = load i32, ptr %8, align 4, !dbg !336
  %5620 = icmp slt i32 %5618, %5619, !dbg !337
  br i1 %5620, label %5621, label %14243, !dbg !338

5621:                                             ; preds = %5615
  %5622 = load i32, ptr %10, align 4, !dbg !339
  %5623 = sext i32 %5622 to i64, !dbg !342
  %5624 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5623, !dbg !342
  %5625 = load double, ptr %5624, align 16, !dbg !343
  %5626 = load double, ptr %6, align 8, !dbg !344
  %5627 = fcmp oeq double %5625, %5626, !dbg !345
  br i1 %5627, label %5628, label %5637, !dbg !346

5628:                                             ; preds = %5621
  %5629 = load i32, ptr %10, align 4, !dbg !347
  %5630 = sext i32 %5629 to i64, !dbg !348
  %5631 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5630, !dbg !348
  %5632 = getelementptr inbounds %struct.POINT, ptr %5631, i32 0, i32 1, !dbg !349
  %5633 = load double, ptr %5632, align 8, !dbg !349
  %5634 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5635 = load double, ptr %5634, align 8, !dbg !350
  %5636 = fcmp oeq double %5633, %5635, !dbg !351
  br i1 %5636, label %5429, label %5637, !dbg !352

5637:                                             ; preds = %5628, %5621
  br label %5638, !dbg !356

5638:                                             ; preds = %5637
  %5639 = load i32, ptr %10, align 4, !dbg !357
  %5640 = add nsw i32 %5639, 1, !dbg !357
  store i32 %5640, ptr %10, align 4, !dbg !357
  %5641 = load i32, ptr %10, align 4, !dbg !334
  %5642 = load i32, ptr %8, align 4, !dbg !336
  %5643 = icmp slt i32 %5641, %5642, !dbg !337
  br i1 %5643, label %5644, label %14243, !dbg !338

5644:                                             ; preds = %5638
  %5645 = load i32, ptr %10, align 4, !dbg !339
  %5646 = sext i32 %5645 to i64, !dbg !342
  %5647 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5646, !dbg !342
  %5648 = load double, ptr %5647, align 16, !dbg !343
  %5649 = load double, ptr %6, align 8, !dbg !344
  %5650 = fcmp oeq double %5648, %5649, !dbg !345
  br i1 %5650, label %5651, label %5660, !dbg !346

5651:                                             ; preds = %5644
  %5652 = load i32, ptr %10, align 4, !dbg !347
  %5653 = sext i32 %5652 to i64, !dbg !348
  %5654 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5653, !dbg !348
  %5655 = getelementptr inbounds %struct.POINT, ptr %5654, i32 0, i32 1, !dbg !349
  %5656 = load double, ptr %5655, align 8, !dbg !349
  %5657 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5658 = load double, ptr %5657, align 8, !dbg !350
  %5659 = fcmp oeq double %5656, %5658, !dbg !351
  br i1 %5659, label %5429, label %5660, !dbg !352

5660:                                             ; preds = %5651, %5644
  br label %5661, !dbg !356

5661:                                             ; preds = %5660
  %5662 = load i32, ptr %10, align 4, !dbg !357
  %5663 = add nsw i32 %5662, 1, !dbg !357
  store i32 %5663, ptr %10, align 4, !dbg !357
  %5664 = load i32, ptr %10, align 4, !dbg !334
  %5665 = load i32, ptr %8, align 4, !dbg !336
  %5666 = icmp slt i32 %5664, %5665, !dbg !337
  br i1 %5666, label %5667, label %14243, !dbg !338

5667:                                             ; preds = %5661
  %5668 = load i32, ptr %10, align 4, !dbg !339
  %5669 = sext i32 %5668 to i64, !dbg !342
  %5670 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5669, !dbg !342
  %5671 = load double, ptr %5670, align 16, !dbg !343
  %5672 = load double, ptr %6, align 8, !dbg !344
  %5673 = fcmp oeq double %5671, %5672, !dbg !345
  br i1 %5673, label %5674, label %5683, !dbg !346

5674:                                             ; preds = %5667
  %5675 = load i32, ptr %10, align 4, !dbg !347
  %5676 = sext i32 %5675 to i64, !dbg !348
  %5677 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5676, !dbg !348
  %5678 = getelementptr inbounds %struct.POINT, ptr %5677, i32 0, i32 1, !dbg !349
  %5679 = load double, ptr %5678, align 8, !dbg !349
  %5680 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5681 = load double, ptr %5680, align 8, !dbg !350
  %5682 = fcmp oeq double %5679, %5681, !dbg !351
  br i1 %5682, label %5429, label %5683, !dbg !352

5683:                                             ; preds = %5674, %5667
  br label %5684, !dbg !356

5684:                                             ; preds = %5683
  %5685 = load i32, ptr %10, align 4, !dbg !357
  %5686 = add nsw i32 %5685, 1, !dbg !357
  store i32 %5686, ptr %10, align 4, !dbg !357
  %5687 = load i32, ptr %10, align 4, !dbg !334
  %5688 = load i32, ptr %8, align 4, !dbg !336
  %5689 = icmp slt i32 %5687, %5688, !dbg !337
  br i1 %5689, label %5690, label %14243, !dbg !338

5690:                                             ; preds = %5684
  %5691 = load i32, ptr %10, align 4, !dbg !339
  %5692 = sext i32 %5691 to i64, !dbg !342
  %5693 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5692, !dbg !342
  %5694 = load double, ptr %5693, align 16, !dbg !343
  %5695 = load double, ptr %6, align 8, !dbg !344
  %5696 = fcmp oeq double %5694, %5695, !dbg !345
  br i1 %5696, label %5697, label %5706, !dbg !346

5697:                                             ; preds = %5690
  %5698 = load i32, ptr %10, align 4, !dbg !347
  %5699 = sext i32 %5698 to i64, !dbg !348
  %5700 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5699, !dbg !348
  %5701 = getelementptr inbounds %struct.POINT, ptr %5700, i32 0, i32 1, !dbg !349
  %5702 = load double, ptr %5701, align 8, !dbg !349
  %5703 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5704 = load double, ptr %5703, align 8, !dbg !350
  %5705 = fcmp oeq double %5702, %5704, !dbg !351
  br i1 %5705, label %5429, label %5706, !dbg !352

5706:                                             ; preds = %5697, %5690
  br label %5707, !dbg !356

5707:                                             ; preds = %5706
  %5708 = load i32, ptr %10, align 4, !dbg !357
  %5709 = add nsw i32 %5708, 1, !dbg !357
  store i32 %5709, ptr %10, align 4, !dbg !357
  %5710 = load i32, ptr %10, align 4, !dbg !334
  %5711 = load i32, ptr %8, align 4, !dbg !336
  %5712 = icmp slt i32 %5710, %5711, !dbg !337
  br i1 %5712, label %5713, label %14243, !dbg !338

5713:                                             ; preds = %5707
  %5714 = load i32, ptr %10, align 4, !dbg !339
  %5715 = sext i32 %5714 to i64, !dbg !342
  %5716 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5715, !dbg !342
  %5717 = load double, ptr %5716, align 16, !dbg !343
  %5718 = load double, ptr %6, align 8, !dbg !344
  %5719 = fcmp oeq double %5717, %5718, !dbg !345
  br i1 %5719, label %5720, label %5729, !dbg !346

5720:                                             ; preds = %5713
  %5721 = load i32, ptr %10, align 4, !dbg !347
  %5722 = sext i32 %5721 to i64, !dbg !348
  %5723 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5722, !dbg !348
  %5724 = getelementptr inbounds %struct.POINT, ptr %5723, i32 0, i32 1, !dbg !349
  %5725 = load double, ptr %5724, align 8, !dbg !349
  %5726 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5727 = load double, ptr %5726, align 8, !dbg !350
  %5728 = fcmp oeq double %5725, %5727, !dbg !351
  br i1 %5728, label %5429, label %5729, !dbg !352

5729:                                             ; preds = %5720, %5713
  br label %5730, !dbg !356

5730:                                             ; preds = %5729
  %5731 = load i32, ptr %10, align 4, !dbg !357
  %5732 = add nsw i32 %5731, 1, !dbg !357
  store i32 %5732, ptr %10, align 4, !dbg !357
  %5733 = load i32, ptr %10, align 4, !dbg !334
  %5734 = load i32, ptr %8, align 4, !dbg !336
  %5735 = icmp slt i32 %5733, %5734, !dbg !337
  br i1 %5735, label %5736, label %14243, !dbg !338

5736:                                             ; preds = %5730
  %5737 = load i32, ptr %10, align 4, !dbg !339
  %5738 = sext i32 %5737 to i64, !dbg !342
  %5739 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5738, !dbg !342
  %5740 = load double, ptr %5739, align 16, !dbg !343
  %5741 = load double, ptr %6, align 8, !dbg !344
  %5742 = fcmp oeq double %5740, %5741, !dbg !345
  br i1 %5742, label %5743, label %5752, !dbg !346

5743:                                             ; preds = %5736
  %5744 = load i32, ptr %10, align 4, !dbg !347
  %5745 = sext i32 %5744 to i64, !dbg !348
  %5746 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5745, !dbg !348
  %5747 = getelementptr inbounds %struct.POINT, ptr %5746, i32 0, i32 1, !dbg !349
  %5748 = load double, ptr %5747, align 8, !dbg !349
  %5749 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5750 = load double, ptr %5749, align 8, !dbg !350
  %5751 = fcmp oeq double %5748, %5750, !dbg !351
  br i1 %5751, label %5429, label %5752, !dbg !352

5752:                                             ; preds = %5743, %5736
  br label %5753, !dbg !356

5753:                                             ; preds = %5752
  %5754 = load i32, ptr %10, align 4, !dbg !357
  %5755 = add nsw i32 %5754, 1, !dbg !357
  store i32 %5755, ptr %10, align 4, !dbg !357
  %5756 = load i32, ptr %10, align 4, !dbg !334
  %5757 = load i32, ptr %8, align 4, !dbg !336
  %5758 = icmp slt i32 %5756, %5757, !dbg !337
  br i1 %5758, label %5759, label %14243, !dbg !338

5759:                                             ; preds = %5753
  %5760 = load i32, ptr %10, align 4, !dbg !339
  %5761 = sext i32 %5760 to i64, !dbg !342
  %5762 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5761, !dbg !342
  %5763 = load double, ptr %5762, align 16, !dbg !343
  %5764 = load double, ptr %6, align 8, !dbg !344
  %5765 = fcmp oeq double %5763, %5764, !dbg !345
  br i1 %5765, label %5766, label %5775, !dbg !346

5766:                                             ; preds = %5759
  %5767 = load i32, ptr %10, align 4, !dbg !347
  %5768 = sext i32 %5767 to i64, !dbg !348
  %5769 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5768, !dbg !348
  %5770 = getelementptr inbounds %struct.POINT, ptr %5769, i32 0, i32 1, !dbg !349
  %5771 = load double, ptr %5770, align 8, !dbg !349
  %5772 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5773 = load double, ptr %5772, align 8, !dbg !350
  %5774 = fcmp oeq double %5771, %5773, !dbg !351
  br i1 %5774, label %5429, label %5775, !dbg !352

5775:                                             ; preds = %5766, %5759
  br label %5776, !dbg !356

5776:                                             ; preds = %5775
  %5777 = load i32, ptr %10, align 4, !dbg !357
  %5778 = add nsw i32 %5777, 1, !dbg !357
  store i32 %5778, ptr %10, align 4, !dbg !357
  %5779 = load i32, ptr %10, align 4, !dbg !334
  %5780 = load i32, ptr %8, align 4, !dbg !336
  %5781 = icmp slt i32 %5779, %5780, !dbg !337
  br i1 %5781, label %5782, label %14243, !dbg !338

5782:                                             ; preds = %5776
  %5783 = load i32, ptr %10, align 4, !dbg !339
  %5784 = sext i32 %5783 to i64, !dbg !342
  %5785 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5784, !dbg !342
  %5786 = load double, ptr %5785, align 16, !dbg !343
  %5787 = load double, ptr %6, align 8, !dbg !344
  %5788 = fcmp oeq double %5786, %5787, !dbg !345
  br i1 %5788, label %5789, label %5798, !dbg !346

5789:                                             ; preds = %5782
  %5790 = load i32, ptr %10, align 4, !dbg !347
  %5791 = sext i32 %5790 to i64, !dbg !348
  %5792 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5791, !dbg !348
  %5793 = getelementptr inbounds %struct.POINT, ptr %5792, i32 0, i32 1, !dbg !349
  %5794 = load double, ptr %5793, align 8, !dbg !349
  %5795 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5796 = load double, ptr %5795, align 8, !dbg !350
  %5797 = fcmp oeq double %5794, %5796, !dbg !351
  br i1 %5797, label %5429, label %5798, !dbg !352

5798:                                             ; preds = %5789, %5782
  br label %5799, !dbg !356

5799:                                             ; preds = %5798
  %5800 = load i32, ptr %10, align 4, !dbg !357
  %5801 = add nsw i32 %5800, 1, !dbg !357
  store i32 %5801, ptr %10, align 4, !dbg !357
  %5802 = load i32, ptr %10, align 4, !dbg !334
  %5803 = load i32, ptr %8, align 4, !dbg !336
  %5804 = icmp slt i32 %5802, %5803, !dbg !337
  br i1 %5804, label %5805, label %14243, !dbg !338

5805:                                             ; preds = %5799
  %5806 = load i32, ptr %10, align 4, !dbg !339
  %5807 = sext i32 %5806 to i64, !dbg !342
  %5808 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5807, !dbg !342
  %5809 = load double, ptr %5808, align 16, !dbg !343
  %5810 = load double, ptr %6, align 8, !dbg !344
  %5811 = fcmp oeq double %5809, %5810, !dbg !345
  br i1 %5811, label %5812, label %5821, !dbg !346

5812:                                             ; preds = %5805
  %5813 = load i32, ptr %10, align 4, !dbg !347
  %5814 = sext i32 %5813 to i64, !dbg !348
  %5815 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5814, !dbg !348
  %5816 = getelementptr inbounds %struct.POINT, ptr %5815, i32 0, i32 1, !dbg !349
  %5817 = load double, ptr %5816, align 8, !dbg !349
  %5818 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5819 = load double, ptr %5818, align 8, !dbg !350
  %5820 = fcmp oeq double %5817, %5819, !dbg !351
  br i1 %5820, label %5429, label %5821, !dbg !352

5821:                                             ; preds = %5812, %5805
  br label %5822, !dbg !356

5822:                                             ; preds = %5821
  %5823 = load i32, ptr %10, align 4, !dbg !357
  %5824 = add nsw i32 %5823, 1, !dbg !357
  store i32 %5824, ptr %10, align 4, !dbg !357
  %5825 = load i32, ptr %10, align 4, !dbg !334
  %5826 = load i32, ptr %8, align 4, !dbg !336
  %5827 = icmp slt i32 %5825, %5826, !dbg !337
  br i1 %5827, label %5828, label %14243, !dbg !338

5828:                                             ; preds = %5822
  %5829 = load i32, ptr %10, align 4, !dbg !339
  %5830 = sext i32 %5829 to i64, !dbg !342
  %5831 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5830, !dbg !342
  %5832 = load double, ptr %5831, align 16, !dbg !343
  %5833 = load double, ptr %6, align 8, !dbg !344
  %5834 = fcmp oeq double %5832, %5833, !dbg !345
  br i1 %5834, label %5835, label %5844, !dbg !346

5835:                                             ; preds = %5828
  %5836 = load i32, ptr %10, align 4, !dbg !347
  %5837 = sext i32 %5836 to i64, !dbg !348
  %5838 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5837, !dbg !348
  %5839 = getelementptr inbounds %struct.POINT, ptr %5838, i32 0, i32 1, !dbg !349
  %5840 = load double, ptr %5839, align 8, !dbg !349
  %5841 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5842 = load double, ptr %5841, align 8, !dbg !350
  %5843 = fcmp oeq double %5840, %5842, !dbg !351
  br i1 %5843, label %5429, label %5844, !dbg !352

5844:                                             ; preds = %5835, %5828
  br label %5845, !dbg !356

5845:                                             ; preds = %5844
  %5846 = load i32, ptr %10, align 4, !dbg !357
  %5847 = add nsw i32 %5846, 1, !dbg !357
  store i32 %5847, ptr %10, align 4, !dbg !357
  %5848 = load i32, ptr %10, align 4, !dbg !334
  %5849 = load i32, ptr %8, align 4, !dbg !336
  %5850 = icmp slt i32 %5848, %5849, !dbg !337
  br i1 %5850, label %5851, label %14243, !dbg !338

5851:                                             ; preds = %5845
  %5852 = load i32, ptr %10, align 4, !dbg !339
  %5853 = sext i32 %5852 to i64, !dbg !342
  %5854 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5853, !dbg !342
  %5855 = load double, ptr %5854, align 16, !dbg !343
  %5856 = load double, ptr %6, align 8, !dbg !344
  %5857 = fcmp oeq double %5855, %5856, !dbg !345
  br i1 %5857, label %5858, label %5867, !dbg !346

5858:                                             ; preds = %5851
  %5859 = load i32, ptr %10, align 4, !dbg !347
  %5860 = sext i32 %5859 to i64, !dbg !348
  %5861 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5860, !dbg !348
  %5862 = getelementptr inbounds %struct.POINT, ptr %5861, i32 0, i32 1, !dbg !349
  %5863 = load double, ptr %5862, align 8, !dbg !349
  %5864 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5865 = load double, ptr %5864, align 8, !dbg !350
  %5866 = fcmp oeq double %5863, %5865, !dbg !351
  br i1 %5866, label %5429, label %5867, !dbg !352

5867:                                             ; preds = %5858, %5851
  br label %5868, !dbg !356

5868:                                             ; preds = %5867
  %5869 = load i32, ptr %10, align 4, !dbg !357
  %5870 = add nsw i32 %5869, 1, !dbg !357
  store i32 %5870, ptr %10, align 4, !dbg !357
  %5871 = load i32, ptr %10, align 4, !dbg !334
  %5872 = load i32, ptr %8, align 4, !dbg !336
  %5873 = icmp slt i32 %5871, %5872, !dbg !337
  br i1 %5873, label %5874, label %14243, !dbg !338

5874:                                             ; preds = %5868
  %5875 = load i32, ptr %10, align 4, !dbg !339
  %5876 = sext i32 %5875 to i64, !dbg !342
  %5877 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5876, !dbg !342
  %5878 = load double, ptr %5877, align 16, !dbg !343
  %5879 = load double, ptr %6, align 8, !dbg !344
  %5880 = fcmp oeq double %5878, %5879, !dbg !345
  br i1 %5880, label %5881, label %5890, !dbg !346

5881:                                             ; preds = %5874
  %5882 = load i32, ptr %10, align 4, !dbg !347
  %5883 = sext i32 %5882 to i64, !dbg !348
  %5884 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5883, !dbg !348
  %5885 = getelementptr inbounds %struct.POINT, ptr %5884, i32 0, i32 1, !dbg !349
  %5886 = load double, ptr %5885, align 8, !dbg !349
  %5887 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5888 = load double, ptr %5887, align 8, !dbg !350
  %5889 = fcmp oeq double %5886, %5888, !dbg !351
  br i1 %5889, label %5429, label %5890, !dbg !352

5890:                                             ; preds = %5881, %5874
  br label %5891, !dbg !356

5891:                                             ; preds = %5890
  %5892 = load i32, ptr %10, align 4, !dbg !357
  %5893 = add nsw i32 %5892, 1, !dbg !357
  store i32 %5893, ptr %10, align 4, !dbg !357
  %5894 = load i32, ptr %10, align 4, !dbg !334
  %5895 = load i32, ptr %8, align 4, !dbg !336
  %5896 = icmp slt i32 %5894, %5895, !dbg !337
  br i1 %5896, label %5897, label %14243, !dbg !338

5897:                                             ; preds = %5891
  %5898 = load i32, ptr %10, align 4, !dbg !339
  %5899 = sext i32 %5898 to i64, !dbg !342
  %5900 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5899, !dbg !342
  %5901 = load double, ptr %5900, align 16, !dbg !343
  %5902 = load double, ptr %6, align 8, !dbg !344
  %5903 = fcmp oeq double %5901, %5902, !dbg !345
  br i1 %5903, label %5904, label %5913, !dbg !346

5904:                                             ; preds = %5897
  %5905 = load i32, ptr %10, align 4, !dbg !347
  %5906 = sext i32 %5905 to i64, !dbg !348
  %5907 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5906, !dbg !348
  %5908 = getelementptr inbounds %struct.POINT, ptr %5907, i32 0, i32 1, !dbg !349
  %5909 = load double, ptr %5908, align 8, !dbg !349
  %5910 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5911 = load double, ptr %5910, align 8, !dbg !350
  %5912 = fcmp oeq double %5909, %5911, !dbg !351
  br i1 %5912, label %5429, label %5913, !dbg !352

5913:                                             ; preds = %5904, %5897
  br label %5914, !dbg !356

5914:                                             ; preds = %5913
  %5915 = load i32, ptr %10, align 4, !dbg !357
  %5916 = add nsw i32 %5915, 1, !dbg !357
  store i32 %5916, ptr %10, align 4, !dbg !357
  %5917 = load i32, ptr %10, align 4, !dbg !334
  %5918 = load i32, ptr %8, align 4, !dbg !336
  %5919 = icmp slt i32 %5917, %5918, !dbg !337
  br i1 %5919, label %5920, label %14243, !dbg !338

5920:                                             ; preds = %5914
  %5921 = load i32, ptr %10, align 4, !dbg !339
  %5922 = sext i32 %5921 to i64, !dbg !342
  %5923 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5922, !dbg !342
  %5924 = load double, ptr %5923, align 16, !dbg !343
  %5925 = load double, ptr %6, align 8, !dbg !344
  %5926 = fcmp oeq double %5924, %5925, !dbg !345
  br i1 %5926, label %5927, label %5936, !dbg !346

5927:                                             ; preds = %5920
  %5928 = load i32, ptr %10, align 4, !dbg !347
  %5929 = sext i32 %5928 to i64, !dbg !348
  %5930 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5929, !dbg !348
  %5931 = getelementptr inbounds %struct.POINT, ptr %5930, i32 0, i32 1, !dbg !349
  %5932 = load double, ptr %5931, align 8, !dbg !349
  %5933 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5934 = load double, ptr %5933, align 8, !dbg !350
  %5935 = fcmp oeq double %5932, %5934, !dbg !351
  br i1 %5935, label %5429, label %5936, !dbg !352

5936:                                             ; preds = %5927, %5920
  br label %5937, !dbg !356

5937:                                             ; preds = %5936
  %5938 = load i32, ptr %10, align 4, !dbg !357
  %5939 = add nsw i32 %5938, 1, !dbg !357
  store i32 %5939, ptr %10, align 4, !dbg !357
  %5940 = load i32, ptr %10, align 4, !dbg !334
  %5941 = load i32, ptr %8, align 4, !dbg !336
  %5942 = icmp slt i32 %5940, %5941, !dbg !337
  br i1 %5942, label %5943, label %14243, !dbg !338

5943:                                             ; preds = %5937
  %5944 = load i32, ptr %10, align 4, !dbg !339
  %5945 = sext i32 %5944 to i64, !dbg !342
  %5946 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5945, !dbg !342
  %5947 = load double, ptr %5946, align 16, !dbg !343
  %5948 = load double, ptr %6, align 8, !dbg !344
  %5949 = fcmp oeq double %5947, %5948, !dbg !345
  br i1 %5949, label %5950, label %5959, !dbg !346

5950:                                             ; preds = %5943
  %5951 = load i32, ptr %10, align 4, !dbg !347
  %5952 = sext i32 %5951 to i64, !dbg !348
  %5953 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5952, !dbg !348
  %5954 = getelementptr inbounds %struct.POINT, ptr %5953, i32 0, i32 1, !dbg !349
  %5955 = load double, ptr %5954, align 8, !dbg !349
  %5956 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5957 = load double, ptr %5956, align 8, !dbg !350
  %5958 = fcmp oeq double %5955, %5957, !dbg !351
  br i1 %5958, label %5429, label %5959, !dbg !352

5959:                                             ; preds = %5950, %5943
  br label %5960, !dbg !356

5960:                                             ; preds = %5959
  %5961 = load i32, ptr %10, align 4, !dbg !357
  %5962 = add nsw i32 %5961, 1, !dbg !357
  store i32 %5962, ptr %10, align 4, !dbg !357
  %5963 = load i32, ptr %10, align 4, !dbg !334
  %5964 = load i32, ptr %8, align 4, !dbg !336
  %5965 = icmp slt i32 %5963, %5964, !dbg !337
  br i1 %5965, label %5966, label %14243, !dbg !338

5966:                                             ; preds = %5960
  %5967 = load i32, ptr %10, align 4, !dbg !339
  %5968 = sext i32 %5967 to i64, !dbg !342
  %5969 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5968, !dbg !342
  %5970 = load double, ptr %5969, align 16, !dbg !343
  %5971 = load double, ptr %6, align 8, !dbg !344
  %5972 = fcmp oeq double %5970, %5971, !dbg !345
  br i1 %5972, label %5973, label %5982, !dbg !346

5973:                                             ; preds = %5966
  %5974 = load i32, ptr %10, align 4, !dbg !347
  %5975 = sext i32 %5974 to i64, !dbg !348
  %5976 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5975, !dbg !348
  %5977 = getelementptr inbounds %struct.POINT, ptr %5976, i32 0, i32 1, !dbg !349
  %5978 = load double, ptr %5977, align 8, !dbg !349
  %5979 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %5980 = load double, ptr %5979, align 8, !dbg !350
  %5981 = fcmp oeq double %5978, %5980, !dbg !351
  br i1 %5981, label %5429, label %5982, !dbg !352

5982:                                             ; preds = %5973, %5966
  br label %5983, !dbg !356

5983:                                             ; preds = %5982
  %5984 = load i32, ptr %10, align 4, !dbg !357
  %5985 = add nsw i32 %5984, 1, !dbg !357
  store i32 %5985, ptr %10, align 4, !dbg !357
  %5986 = load i32, ptr %10, align 4, !dbg !334
  %5987 = load i32, ptr %8, align 4, !dbg !336
  %5988 = icmp slt i32 %5986, %5987, !dbg !337
  br i1 %5988, label %5989, label %14243, !dbg !338

5989:                                             ; preds = %5983
  %5990 = load i32, ptr %10, align 4, !dbg !339
  %5991 = sext i32 %5990 to i64, !dbg !342
  %5992 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5991, !dbg !342
  %5993 = load double, ptr %5992, align 16, !dbg !343
  %5994 = load double, ptr %6, align 8, !dbg !344
  %5995 = fcmp oeq double %5993, %5994, !dbg !345
  br i1 %5995, label %5996, label %6005, !dbg !346

5996:                                             ; preds = %5989
  %5997 = load i32, ptr %10, align 4, !dbg !347
  %5998 = sext i32 %5997 to i64, !dbg !348
  %5999 = getelementptr inbounds %struct.POINT, ptr %26, i64 %5998, !dbg !348
  %6000 = getelementptr inbounds %struct.POINT, ptr %5999, i32 0, i32 1, !dbg !349
  %6001 = load double, ptr %6000, align 8, !dbg !349
  %6002 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6003 = load double, ptr %6002, align 8, !dbg !350
  %6004 = fcmp oeq double %6001, %6003, !dbg !351
  br i1 %6004, label %5429, label %6005, !dbg !352

6005:                                             ; preds = %5996, %5989
  br label %6006, !dbg !356

6006:                                             ; preds = %6005
  %6007 = load i32, ptr %10, align 4, !dbg !357
  %6008 = add nsw i32 %6007, 1, !dbg !357
  store i32 %6008, ptr %10, align 4, !dbg !357
  %6009 = load i32, ptr %10, align 4, !dbg !334
  %6010 = load i32, ptr %8, align 4, !dbg !336
  %6011 = icmp slt i32 %6009, %6010, !dbg !337
  br i1 %6011, label %6012, label %14243, !dbg !338

6012:                                             ; preds = %6006
  %6013 = load i32, ptr %10, align 4, !dbg !339
  %6014 = sext i32 %6013 to i64, !dbg !342
  %6015 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6014, !dbg !342
  %6016 = load double, ptr %6015, align 16, !dbg !343
  %6017 = load double, ptr %6, align 8, !dbg !344
  %6018 = fcmp oeq double %6016, %6017, !dbg !345
  br i1 %6018, label %6019, label %6028, !dbg !346

6019:                                             ; preds = %6012
  %6020 = load i32, ptr %10, align 4, !dbg !347
  %6021 = sext i32 %6020 to i64, !dbg !348
  %6022 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6021, !dbg !348
  %6023 = getelementptr inbounds %struct.POINT, ptr %6022, i32 0, i32 1, !dbg !349
  %6024 = load double, ptr %6023, align 8, !dbg !349
  %6025 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6026 = load double, ptr %6025, align 8, !dbg !350
  %6027 = fcmp oeq double %6024, %6026, !dbg !351
  br i1 %6027, label %5429, label %6028, !dbg !352

6028:                                             ; preds = %6019, %6012
  br label %6029, !dbg !356

6029:                                             ; preds = %6028
  %6030 = load i32, ptr %10, align 4, !dbg !357
  %6031 = add nsw i32 %6030, 1, !dbg !357
  store i32 %6031, ptr %10, align 4, !dbg !357
  %6032 = load i32, ptr %10, align 4, !dbg !334
  %6033 = load i32, ptr %8, align 4, !dbg !336
  %6034 = icmp slt i32 %6032, %6033, !dbg !337
  br i1 %6034, label %6035, label %14243, !dbg !338

6035:                                             ; preds = %6029
  %6036 = load i32, ptr %10, align 4, !dbg !339
  %6037 = sext i32 %6036 to i64, !dbg !342
  %6038 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6037, !dbg !342
  %6039 = load double, ptr %6038, align 16, !dbg !343
  %6040 = load double, ptr %6, align 8, !dbg !344
  %6041 = fcmp oeq double %6039, %6040, !dbg !345
  br i1 %6041, label %6042, label %6051, !dbg !346

6042:                                             ; preds = %6035
  %6043 = load i32, ptr %10, align 4, !dbg !347
  %6044 = sext i32 %6043 to i64, !dbg !348
  %6045 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6044, !dbg !348
  %6046 = getelementptr inbounds %struct.POINT, ptr %6045, i32 0, i32 1, !dbg !349
  %6047 = load double, ptr %6046, align 8, !dbg !349
  %6048 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6049 = load double, ptr %6048, align 8, !dbg !350
  %6050 = fcmp oeq double %6047, %6049, !dbg !351
  br i1 %6050, label %5429, label %6051, !dbg !352

6051:                                             ; preds = %6042, %6035
  br label %6052, !dbg !356

6052:                                             ; preds = %6051
  %6053 = load i32, ptr %10, align 4, !dbg !357
  %6054 = add nsw i32 %6053, 1, !dbg !357
  store i32 %6054, ptr %10, align 4, !dbg !357
  %6055 = load i32, ptr %10, align 4, !dbg !334
  %6056 = load i32, ptr %8, align 4, !dbg !336
  %6057 = icmp slt i32 %6055, %6056, !dbg !337
  br i1 %6057, label %6058, label %14243, !dbg !338

6058:                                             ; preds = %6052
  %6059 = load i32, ptr %10, align 4, !dbg !339
  %6060 = sext i32 %6059 to i64, !dbg !342
  %6061 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6060, !dbg !342
  %6062 = load double, ptr %6061, align 16, !dbg !343
  %6063 = load double, ptr %6, align 8, !dbg !344
  %6064 = fcmp oeq double %6062, %6063, !dbg !345
  br i1 %6064, label %6065, label %6074, !dbg !346

6065:                                             ; preds = %6058
  %6066 = load i32, ptr %10, align 4, !dbg !347
  %6067 = sext i32 %6066 to i64, !dbg !348
  %6068 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6067, !dbg !348
  %6069 = getelementptr inbounds %struct.POINT, ptr %6068, i32 0, i32 1, !dbg !349
  %6070 = load double, ptr %6069, align 8, !dbg !349
  %6071 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6072 = load double, ptr %6071, align 8, !dbg !350
  %6073 = fcmp oeq double %6070, %6072, !dbg !351
  br i1 %6073, label %5429, label %6074, !dbg !352

6074:                                             ; preds = %6065, %6058
  br label %6075, !dbg !356

6075:                                             ; preds = %6074
  %6076 = load i32, ptr %10, align 4, !dbg !357
  %6077 = add nsw i32 %6076, 1, !dbg !357
  store i32 %6077, ptr %10, align 4, !dbg !357
  %6078 = load i32, ptr %10, align 4, !dbg !334
  %6079 = load i32, ptr %8, align 4, !dbg !336
  %6080 = icmp slt i32 %6078, %6079, !dbg !337
  br i1 %6080, label %6081, label %14243, !dbg !338

6081:                                             ; preds = %6075
  %6082 = load i32, ptr %10, align 4, !dbg !339
  %6083 = sext i32 %6082 to i64, !dbg !342
  %6084 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6083, !dbg !342
  %6085 = load double, ptr %6084, align 16, !dbg !343
  %6086 = load double, ptr %6, align 8, !dbg !344
  %6087 = fcmp oeq double %6085, %6086, !dbg !345
  br i1 %6087, label %6088, label %6097, !dbg !346

6088:                                             ; preds = %6081
  %6089 = load i32, ptr %10, align 4, !dbg !347
  %6090 = sext i32 %6089 to i64, !dbg !348
  %6091 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6090, !dbg !348
  %6092 = getelementptr inbounds %struct.POINT, ptr %6091, i32 0, i32 1, !dbg !349
  %6093 = load double, ptr %6092, align 8, !dbg !349
  %6094 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6095 = load double, ptr %6094, align 8, !dbg !350
  %6096 = fcmp oeq double %6093, %6095, !dbg !351
  br i1 %6096, label %5429, label %6097, !dbg !352

6097:                                             ; preds = %6088, %6081
  br label %6098, !dbg !356

6098:                                             ; preds = %6097
  %6099 = load i32, ptr %10, align 4, !dbg !357
  %6100 = add nsw i32 %6099, 1, !dbg !357
  store i32 %6100, ptr %10, align 4, !dbg !357
  %6101 = load i32, ptr %10, align 4, !dbg !334
  %6102 = load i32, ptr %8, align 4, !dbg !336
  %6103 = icmp slt i32 %6101, %6102, !dbg !337
  br i1 %6103, label %6104, label %14243, !dbg !338

6104:                                             ; preds = %6098
  %6105 = load i32, ptr %10, align 4, !dbg !339
  %6106 = sext i32 %6105 to i64, !dbg !342
  %6107 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6106, !dbg !342
  %6108 = load double, ptr %6107, align 16, !dbg !343
  %6109 = load double, ptr %6, align 8, !dbg !344
  %6110 = fcmp oeq double %6108, %6109, !dbg !345
  br i1 %6110, label %6111, label %6120, !dbg !346

6111:                                             ; preds = %6104
  %6112 = load i32, ptr %10, align 4, !dbg !347
  %6113 = sext i32 %6112 to i64, !dbg !348
  %6114 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6113, !dbg !348
  %6115 = getelementptr inbounds %struct.POINT, ptr %6114, i32 0, i32 1, !dbg !349
  %6116 = load double, ptr %6115, align 8, !dbg !349
  %6117 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6118 = load double, ptr %6117, align 8, !dbg !350
  %6119 = fcmp oeq double %6116, %6118, !dbg !351
  br i1 %6119, label %5429, label %6120, !dbg !352

6120:                                             ; preds = %6111, %6104
  br label %6121, !dbg !356

6121:                                             ; preds = %6120
  %6122 = load i32, ptr %10, align 4, !dbg !357
  %6123 = add nsw i32 %6122, 1, !dbg !357
  store i32 %6123, ptr %10, align 4, !dbg !357
  %6124 = load i32, ptr %10, align 4, !dbg !334
  %6125 = load i32, ptr %8, align 4, !dbg !336
  %6126 = icmp slt i32 %6124, %6125, !dbg !337
  br i1 %6126, label %6127, label %14243, !dbg !338

6127:                                             ; preds = %6121
  %6128 = load i32, ptr %10, align 4, !dbg !339
  %6129 = sext i32 %6128 to i64, !dbg !342
  %6130 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6129, !dbg !342
  %6131 = load double, ptr %6130, align 16, !dbg !343
  %6132 = load double, ptr %6, align 8, !dbg !344
  %6133 = fcmp oeq double %6131, %6132, !dbg !345
  br i1 %6133, label %6134, label %6143, !dbg !346

6134:                                             ; preds = %6127
  %6135 = load i32, ptr %10, align 4, !dbg !347
  %6136 = sext i32 %6135 to i64, !dbg !348
  %6137 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6136, !dbg !348
  %6138 = getelementptr inbounds %struct.POINT, ptr %6137, i32 0, i32 1, !dbg !349
  %6139 = load double, ptr %6138, align 8, !dbg !349
  %6140 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6141 = load double, ptr %6140, align 8, !dbg !350
  %6142 = fcmp oeq double %6139, %6141, !dbg !351
  br i1 %6142, label %5429, label %6143, !dbg !352

6143:                                             ; preds = %6134, %6127
  br label %6144, !dbg !356

6144:                                             ; preds = %6143
  %6145 = load i32, ptr %10, align 4, !dbg !357
  %6146 = add nsw i32 %6145, 1, !dbg !357
  store i32 %6146, ptr %10, align 4, !dbg !357
  %6147 = load i32, ptr %10, align 4, !dbg !334
  %6148 = load i32, ptr %8, align 4, !dbg !336
  %6149 = icmp slt i32 %6147, %6148, !dbg !337
  br i1 %6149, label %6150, label %14243, !dbg !338

6150:                                             ; preds = %6144
  %6151 = load i32, ptr %10, align 4, !dbg !339
  %6152 = sext i32 %6151 to i64, !dbg !342
  %6153 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6152, !dbg !342
  %6154 = load double, ptr %6153, align 16, !dbg !343
  %6155 = load double, ptr %6, align 8, !dbg !344
  %6156 = fcmp oeq double %6154, %6155, !dbg !345
  br i1 %6156, label %6157, label %6166, !dbg !346

6157:                                             ; preds = %6150
  %6158 = load i32, ptr %10, align 4, !dbg !347
  %6159 = sext i32 %6158 to i64, !dbg !348
  %6160 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6159, !dbg !348
  %6161 = getelementptr inbounds %struct.POINT, ptr %6160, i32 0, i32 1, !dbg !349
  %6162 = load double, ptr %6161, align 8, !dbg !349
  %6163 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6164 = load double, ptr %6163, align 8, !dbg !350
  %6165 = fcmp oeq double %6162, %6164, !dbg !351
  br i1 %6165, label %5429, label %6166, !dbg !352

6166:                                             ; preds = %6157, %6150
  br label %6167, !dbg !356

6167:                                             ; preds = %6166
  %6168 = load i32, ptr %10, align 4, !dbg !357
  %6169 = add nsw i32 %6168, 1, !dbg !357
  store i32 %6169, ptr %10, align 4, !dbg !357
  %6170 = load i32, ptr %10, align 4, !dbg !334
  %6171 = load i32, ptr %8, align 4, !dbg !336
  %6172 = icmp slt i32 %6170, %6171, !dbg !337
  br i1 %6172, label %6173, label %14243, !dbg !338

6173:                                             ; preds = %6167
  %6174 = load i32, ptr %10, align 4, !dbg !339
  %6175 = sext i32 %6174 to i64, !dbg !342
  %6176 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6175, !dbg !342
  %6177 = load double, ptr %6176, align 16, !dbg !343
  %6178 = load double, ptr %6, align 8, !dbg !344
  %6179 = fcmp oeq double %6177, %6178, !dbg !345
  br i1 %6179, label %6180, label %6189, !dbg !346

6180:                                             ; preds = %6173
  %6181 = load i32, ptr %10, align 4, !dbg !347
  %6182 = sext i32 %6181 to i64, !dbg !348
  %6183 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6182, !dbg !348
  %6184 = getelementptr inbounds %struct.POINT, ptr %6183, i32 0, i32 1, !dbg !349
  %6185 = load double, ptr %6184, align 8, !dbg !349
  %6186 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6187 = load double, ptr %6186, align 8, !dbg !350
  %6188 = fcmp oeq double %6185, %6187, !dbg !351
  br i1 %6188, label %5429, label %6189, !dbg !352

6189:                                             ; preds = %6180, %6173
  br label %6190, !dbg !356

6190:                                             ; preds = %6189
  %6191 = load i32, ptr %10, align 4, !dbg !357
  %6192 = add nsw i32 %6191, 1, !dbg !357
  store i32 %6192, ptr %10, align 4, !dbg !357
  %6193 = load i32, ptr %10, align 4, !dbg !334
  %6194 = load i32, ptr %8, align 4, !dbg !336
  %6195 = icmp slt i32 %6193, %6194, !dbg !337
  br i1 %6195, label %6196, label %14243, !dbg !338

6196:                                             ; preds = %6190
  %6197 = load i32, ptr %10, align 4, !dbg !339
  %6198 = sext i32 %6197 to i64, !dbg !342
  %6199 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6198, !dbg !342
  %6200 = load double, ptr %6199, align 16, !dbg !343
  %6201 = load double, ptr %6, align 8, !dbg !344
  %6202 = fcmp oeq double %6200, %6201, !dbg !345
  br i1 %6202, label %6203, label %6212, !dbg !346

6203:                                             ; preds = %6196
  %6204 = load i32, ptr %10, align 4, !dbg !347
  %6205 = sext i32 %6204 to i64, !dbg !348
  %6206 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6205, !dbg !348
  %6207 = getelementptr inbounds %struct.POINT, ptr %6206, i32 0, i32 1, !dbg !349
  %6208 = load double, ptr %6207, align 8, !dbg !349
  %6209 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6210 = load double, ptr %6209, align 8, !dbg !350
  %6211 = fcmp oeq double %6208, %6210, !dbg !351
  br i1 %6211, label %5429, label %6212, !dbg !352

6212:                                             ; preds = %6203, %6196
  br label %6213, !dbg !356

6213:                                             ; preds = %6212
  %6214 = load i32, ptr %10, align 4, !dbg !357
  %6215 = add nsw i32 %6214, 1, !dbg !357
  store i32 %6215, ptr %10, align 4, !dbg !357
  %6216 = load i32, ptr %10, align 4, !dbg !334
  %6217 = load i32, ptr %8, align 4, !dbg !336
  %6218 = icmp slt i32 %6216, %6217, !dbg !337
  br i1 %6218, label %6219, label %14243, !dbg !338

6219:                                             ; preds = %6213
  %6220 = load i32, ptr %10, align 4, !dbg !339
  %6221 = sext i32 %6220 to i64, !dbg !342
  %6222 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6221, !dbg !342
  %6223 = load double, ptr %6222, align 16, !dbg !343
  %6224 = load double, ptr %6, align 8, !dbg !344
  %6225 = fcmp oeq double %6223, %6224, !dbg !345
  br i1 %6225, label %6226, label %6235, !dbg !346

6226:                                             ; preds = %6219
  %6227 = load i32, ptr %10, align 4, !dbg !347
  %6228 = sext i32 %6227 to i64, !dbg !348
  %6229 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6228, !dbg !348
  %6230 = getelementptr inbounds %struct.POINT, ptr %6229, i32 0, i32 1, !dbg !349
  %6231 = load double, ptr %6230, align 8, !dbg !349
  %6232 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6233 = load double, ptr %6232, align 8, !dbg !350
  %6234 = fcmp oeq double %6231, %6233, !dbg !351
  br i1 %6234, label %5429, label %6235, !dbg !352

6235:                                             ; preds = %6226, %6219
  br label %6236, !dbg !356

6236:                                             ; preds = %6235
  %6237 = load i32, ptr %10, align 4, !dbg !357
  %6238 = add nsw i32 %6237, 1, !dbg !357
  store i32 %6238, ptr %10, align 4, !dbg !357
  %6239 = load i32, ptr %10, align 4, !dbg !334
  %6240 = load i32, ptr %8, align 4, !dbg !336
  %6241 = icmp slt i32 %6239, %6240, !dbg !337
  br i1 %6241, label %6242, label %14243, !dbg !338

6242:                                             ; preds = %6236
  %6243 = load i32, ptr %10, align 4, !dbg !339
  %6244 = sext i32 %6243 to i64, !dbg !342
  %6245 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6244, !dbg !342
  %6246 = load double, ptr %6245, align 16, !dbg !343
  %6247 = load double, ptr %6, align 8, !dbg !344
  %6248 = fcmp oeq double %6246, %6247, !dbg !345
  br i1 %6248, label %6249, label %6258, !dbg !346

6249:                                             ; preds = %6242
  %6250 = load i32, ptr %10, align 4, !dbg !347
  %6251 = sext i32 %6250 to i64, !dbg !348
  %6252 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6251, !dbg !348
  %6253 = getelementptr inbounds %struct.POINT, ptr %6252, i32 0, i32 1, !dbg !349
  %6254 = load double, ptr %6253, align 8, !dbg !349
  %6255 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6256 = load double, ptr %6255, align 8, !dbg !350
  %6257 = fcmp oeq double %6254, %6256, !dbg !351
  br i1 %6257, label %5429, label %6258, !dbg !352

6258:                                             ; preds = %6249, %6242
  br label %6259, !dbg !356

6259:                                             ; preds = %6258
  %6260 = load i32, ptr %10, align 4, !dbg !357
  %6261 = add nsw i32 %6260, 1, !dbg !357
  store i32 %6261, ptr %10, align 4, !dbg !357
  %6262 = load i32, ptr %10, align 4, !dbg !334
  %6263 = load i32, ptr %8, align 4, !dbg !336
  %6264 = icmp slt i32 %6262, %6263, !dbg !337
  br i1 %6264, label %6265, label %14243, !dbg !338

6265:                                             ; preds = %6259
  %6266 = load i32, ptr %10, align 4, !dbg !339
  %6267 = sext i32 %6266 to i64, !dbg !342
  %6268 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6267, !dbg !342
  %6269 = load double, ptr %6268, align 16, !dbg !343
  %6270 = load double, ptr %6, align 8, !dbg !344
  %6271 = fcmp oeq double %6269, %6270, !dbg !345
  br i1 %6271, label %6272, label %6281, !dbg !346

6272:                                             ; preds = %6265
  %6273 = load i32, ptr %10, align 4, !dbg !347
  %6274 = sext i32 %6273 to i64, !dbg !348
  %6275 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6274, !dbg !348
  %6276 = getelementptr inbounds %struct.POINT, ptr %6275, i32 0, i32 1, !dbg !349
  %6277 = load double, ptr %6276, align 8, !dbg !349
  %6278 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6279 = load double, ptr %6278, align 8, !dbg !350
  %6280 = fcmp oeq double %6277, %6279, !dbg !351
  br i1 %6280, label %5429, label %6281, !dbg !352

6281:                                             ; preds = %6272, %6265
  br label %6282, !dbg !356

6282:                                             ; preds = %6281
  %6283 = load i32, ptr %10, align 4, !dbg !357
  %6284 = add nsw i32 %6283, 1, !dbg !357
  store i32 %6284, ptr %10, align 4, !dbg !357
  %6285 = load i32, ptr %10, align 4, !dbg !334
  %6286 = load i32, ptr %8, align 4, !dbg !336
  %6287 = icmp slt i32 %6285, %6286, !dbg !337
  br i1 %6287, label %6288, label %14243, !dbg !338

6288:                                             ; preds = %6282
  %6289 = load i32, ptr %10, align 4, !dbg !339
  %6290 = sext i32 %6289 to i64, !dbg !342
  %6291 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6290, !dbg !342
  %6292 = load double, ptr %6291, align 16, !dbg !343
  %6293 = load double, ptr %6, align 8, !dbg !344
  %6294 = fcmp oeq double %6292, %6293, !dbg !345
  br i1 %6294, label %6295, label %6304, !dbg !346

6295:                                             ; preds = %6288
  %6296 = load i32, ptr %10, align 4, !dbg !347
  %6297 = sext i32 %6296 to i64, !dbg !348
  %6298 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6297, !dbg !348
  %6299 = getelementptr inbounds %struct.POINT, ptr %6298, i32 0, i32 1, !dbg !349
  %6300 = load double, ptr %6299, align 8, !dbg !349
  %6301 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6302 = load double, ptr %6301, align 8, !dbg !350
  %6303 = fcmp oeq double %6300, %6302, !dbg !351
  br i1 %6303, label %5429, label %6304, !dbg !352

6304:                                             ; preds = %6295, %6288
  br label %6305, !dbg !356

6305:                                             ; preds = %6304
  %6306 = load i32, ptr %10, align 4, !dbg !357
  %6307 = add nsw i32 %6306, 1, !dbg !357
  store i32 %6307, ptr %10, align 4, !dbg !357
  %6308 = load i32, ptr %10, align 4, !dbg !334
  %6309 = load i32, ptr %8, align 4, !dbg !336
  %6310 = icmp slt i32 %6308, %6309, !dbg !337
  br i1 %6310, label %6311, label %14243, !dbg !338

6311:                                             ; preds = %6305
  %6312 = load i32, ptr %10, align 4, !dbg !339
  %6313 = sext i32 %6312 to i64, !dbg !342
  %6314 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6313, !dbg !342
  %6315 = load double, ptr %6314, align 16, !dbg !343
  %6316 = load double, ptr %6, align 8, !dbg !344
  %6317 = fcmp oeq double %6315, %6316, !dbg !345
  br i1 %6317, label %6318, label %6327, !dbg !346

6318:                                             ; preds = %6311
  %6319 = load i32, ptr %10, align 4, !dbg !347
  %6320 = sext i32 %6319 to i64, !dbg !348
  %6321 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6320, !dbg !348
  %6322 = getelementptr inbounds %struct.POINT, ptr %6321, i32 0, i32 1, !dbg !349
  %6323 = load double, ptr %6322, align 8, !dbg !349
  %6324 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6325 = load double, ptr %6324, align 8, !dbg !350
  %6326 = fcmp oeq double %6323, %6325, !dbg !351
  br i1 %6326, label %5429, label %6327, !dbg !352

6327:                                             ; preds = %6318, %6311
  br label %6328, !dbg !356

6328:                                             ; preds = %6327
  %6329 = load i32, ptr %10, align 4, !dbg !357
  %6330 = add nsw i32 %6329, 1, !dbg !357
  store i32 %6330, ptr %10, align 4, !dbg !357
  %6331 = load i32, ptr %10, align 4, !dbg !334
  %6332 = load i32, ptr %8, align 4, !dbg !336
  %6333 = icmp slt i32 %6331, %6332, !dbg !337
  br i1 %6333, label %6334, label %14243, !dbg !338

6334:                                             ; preds = %6328
  %6335 = load i32, ptr %10, align 4, !dbg !339
  %6336 = sext i32 %6335 to i64, !dbg !342
  %6337 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6336, !dbg !342
  %6338 = load double, ptr %6337, align 16, !dbg !343
  %6339 = load double, ptr %6, align 8, !dbg !344
  %6340 = fcmp oeq double %6338, %6339, !dbg !345
  br i1 %6340, label %6341, label %6350, !dbg !346

6341:                                             ; preds = %6334
  %6342 = load i32, ptr %10, align 4, !dbg !347
  %6343 = sext i32 %6342 to i64, !dbg !348
  %6344 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6343, !dbg !348
  %6345 = getelementptr inbounds %struct.POINT, ptr %6344, i32 0, i32 1, !dbg !349
  %6346 = load double, ptr %6345, align 8, !dbg !349
  %6347 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6348 = load double, ptr %6347, align 8, !dbg !350
  %6349 = fcmp oeq double %6346, %6348, !dbg !351
  br i1 %6349, label %5429, label %6350, !dbg !352

6350:                                             ; preds = %6341, %6334
  br label %6351, !dbg !356

6351:                                             ; preds = %6350
  %6352 = load i32, ptr %10, align 4, !dbg !357
  %6353 = add nsw i32 %6352, 1, !dbg !357
  store i32 %6353, ptr %10, align 4, !dbg !357
  %6354 = load i32, ptr %10, align 4, !dbg !334
  %6355 = load i32, ptr %8, align 4, !dbg !336
  %6356 = icmp slt i32 %6354, %6355, !dbg !337
  br i1 %6356, label %6357, label %14243, !dbg !338

6357:                                             ; preds = %6351
  %6358 = load i32, ptr %10, align 4, !dbg !339
  %6359 = sext i32 %6358 to i64, !dbg !342
  %6360 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6359, !dbg !342
  %6361 = load double, ptr %6360, align 16, !dbg !343
  %6362 = load double, ptr %6, align 8, !dbg !344
  %6363 = fcmp oeq double %6361, %6362, !dbg !345
  br i1 %6363, label %6364, label %6373, !dbg !346

6364:                                             ; preds = %6357
  %6365 = load i32, ptr %10, align 4, !dbg !347
  %6366 = sext i32 %6365 to i64, !dbg !348
  %6367 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6366, !dbg !348
  %6368 = getelementptr inbounds %struct.POINT, ptr %6367, i32 0, i32 1, !dbg !349
  %6369 = load double, ptr %6368, align 8, !dbg !349
  %6370 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6371 = load double, ptr %6370, align 8, !dbg !350
  %6372 = fcmp oeq double %6369, %6371, !dbg !351
  br i1 %6372, label %5429, label %6373, !dbg !352

6373:                                             ; preds = %6364, %6357
  br label %6374, !dbg !356

6374:                                             ; preds = %6373
  %6375 = load i32, ptr %10, align 4, !dbg !357
  %6376 = add nsw i32 %6375, 1, !dbg !357
  store i32 %6376, ptr %10, align 4, !dbg !357
  %6377 = load i32, ptr %10, align 4, !dbg !334
  %6378 = load i32, ptr %8, align 4, !dbg !336
  %6379 = icmp slt i32 %6377, %6378, !dbg !337
  br i1 %6379, label %6380, label %14243, !dbg !338

6380:                                             ; preds = %6374
  %6381 = load i32, ptr %10, align 4, !dbg !339
  %6382 = sext i32 %6381 to i64, !dbg !342
  %6383 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6382, !dbg !342
  %6384 = load double, ptr %6383, align 16, !dbg !343
  %6385 = load double, ptr %6, align 8, !dbg !344
  %6386 = fcmp oeq double %6384, %6385, !dbg !345
  br i1 %6386, label %6387, label %6396, !dbg !346

6387:                                             ; preds = %6380
  %6388 = load i32, ptr %10, align 4, !dbg !347
  %6389 = sext i32 %6388 to i64, !dbg !348
  %6390 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6389, !dbg !348
  %6391 = getelementptr inbounds %struct.POINT, ptr %6390, i32 0, i32 1, !dbg !349
  %6392 = load double, ptr %6391, align 8, !dbg !349
  %6393 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6394 = load double, ptr %6393, align 8, !dbg !350
  %6395 = fcmp oeq double %6392, %6394, !dbg !351
  br i1 %6395, label %5429, label %6396, !dbg !352

6396:                                             ; preds = %6387, %6380
  br label %6397, !dbg !356

6397:                                             ; preds = %6396
  %6398 = load i32, ptr %10, align 4, !dbg !357
  %6399 = add nsw i32 %6398, 1, !dbg !357
  store i32 %6399, ptr %10, align 4, !dbg !357
  %6400 = load i32, ptr %10, align 4, !dbg !334
  %6401 = load i32, ptr %8, align 4, !dbg !336
  %6402 = icmp slt i32 %6400, %6401, !dbg !337
  br i1 %6402, label %6403, label %14243, !dbg !338

6403:                                             ; preds = %6397
  %6404 = load i32, ptr %10, align 4, !dbg !339
  %6405 = sext i32 %6404 to i64, !dbg !342
  %6406 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6405, !dbg !342
  %6407 = load double, ptr %6406, align 16, !dbg !343
  %6408 = load double, ptr %6, align 8, !dbg !344
  %6409 = fcmp oeq double %6407, %6408, !dbg !345
  br i1 %6409, label %6410, label %6419, !dbg !346

6410:                                             ; preds = %6403
  %6411 = load i32, ptr %10, align 4, !dbg !347
  %6412 = sext i32 %6411 to i64, !dbg !348
  %6413 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6412, !dbg !348
  %6414 = getelementptr inbounds %struct.POINT, ptr %6413, i32 0, i32 1, !dbg !349
  %6415 = load double, ptr %6414, align 8, !dbg !349
  %6416 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6417 = load double, ptr %6416, align 8, !dbg !350
  %6418 = fcmp oeq double %6415, %6417, !dbg !351
  br i1 %6418, label %5429, label %6419, !dbg !352

6419:                                             ; preds = %6410, %6403
  br label %6420, !dbg !356

6420:                                             ; preds = %6419
  %6421 = load i32, ptr %10, align 4, !dbg !357
  %6422 = add nsw i32 %6421, 1, !dbg !357
  store i32 %6422, ptr %10, align 4, !dbg !357
  %6423 = load i32, ptr %10, align 4, !dbg !334
  %6424 = load i32, ptr %8, align 4, !dbg !336
  %6425 = icmp slt i32 %6423, %6424, !dbg !337
  br i1 %6425, label %6426, label %14243, !dbg !338

6426:                                             ; preds = %6420
  %6427 = load i32, ptr %10, align 4, !dbg !339
  %6428 = sext i32 %6427 to i64, !dbg !342
  %6429 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6428, !dbg !342
  %6430 = load double, ptr %6429, align 16, !dbg !343
  %6431 = load double, ptr %6, align 8, !dbg !344
  %6432 = fcmp oeq double %6430, %6431, !dbg !345
  br i1 %6432, label %6433, label %6442, !dbg !346

6433:                                             ; preds = %6426
  %6434 = load i32, ptr %10, align 4, !dbg !347
  %6435 = sext i32 %6434 to i64, !dbg !348
  %6436 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6435, !dbg !348
  %6437 = getelementptr inbounds %struct.POINT, ptr %6436, i32 0, i32 1, !dbg !349
  %6438 = load double, ptr %6437, align 8, !dbg !349
  %6439 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6440 = load double, ptr %6439, align 8, !dbg !350
  %6441 = fcmp oeq double %6438, %6440, !dbg !351
  br i1 %6441, label %5429, label %6442, !dbg !352

6442:                                             ; preds = %6433, %6426
  br label %6443, !dbg !356

6443:                                             ; preds = %6442
  %6444 = load i32, ptr %10, align 4, !dbg !357
  %6445 = add nsw i32 %6444, 1, !dbg !357
  store i32 %6445, ptr %10, align 4, !dbg !357
  %6446 = load i32, ptr %10, align 4, !dbg !334
  %6447 = load i32, ptr %8, align 4, !dbg !336
  %6448 = icmp slt i32 %6446, %6447, !dbg !337
  br i1 %6448, label %6449, label %14243, !dbg !338

6449:                                             ; preds = %6443
  %6450 = load i32, ptr %10, align 4, !dbg !339
  %6451 = sext i32 %6450 to i64, !dbg !342
  %6452 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6451, !dbg !342
  %6453 = load double, ptr %6452, align 16, !dbg !343
  %6454 = load double, ptr %6, align 8, !dbg !344
  %6455 = fcmp oeq double %6453, %6454, !dbg !345
  br i1 %6455, label %6456, label %6465, !dbg !346

6456:                                             ; preds = %6449
  %6457 = load i32, ptr %10, align 4, !dbg !347
  %6458 = sext i32 %6457 to i64, !dbg !348
  %6459 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6458, !dbg !348
  %6460 = getelementptr inbounds %struct.POINT, ptr %6459, i32 0, i32 1, !dbg !349
  %6461 = load double, ptr %6460, align 8, !dbg !349
  %6462 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6463 = load double, ptr %6462, align 8, !dbg !350
  %6464 = fcmp oeq double %6461, %6463, !dbg !351
  br i1 %6464, label %5429, label %6465, !dbg !352

6465:                                             ; preds = %6456, %6449
  br label %6466, !dbg !356

6466:                                             ; preds = %6465
  %6467 = load i32, ptr %10, align 4, !dbg !357
  %6468 = add nsw i32 %6467, 1, !dbg !357
  store i32 %6468, ptr %10, align 4, !dbg !357
  %6469 = load i32, ptr %10, align 4, !dbg !334
  %6470 = load i32, ptr %8, align 4, !dbg !336
  %6471 = icmp slt i32 %6469, %6470, !dbg !337
  br i1 %6471, label %6472, label %14243, !dbg !338

6472:                                             ; preds = %6466
  %6473 = load i32, ptr %10, align 4, !dbg !339
  %6474 = sext i32 %6473 to i64, !dbg !342
  %6475 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6474, !dbg !342
  %6476 = load double, ptr %6475, align 16, !dbg !343
  %6477 = load double, ptr %6, align 8, !dbg !344
  %6478 = fcmp oeq double %6476, %6477, !dbg !345
  br i1 %6478, label %6479, label %6488, !dbg !346

6479:                                             ; preds = %6472
  %6480 = load i32, ptr %10, align 4, !dbg !347
  %6481 = sext i32 %6480 to i64, !dbg !348
  %6482 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6481, !dbg !348
  %6483 = getelementptr inbounds %struct.POINT, ptr %6482, i32 0, i32 1, !dbg !349
  %6484 = load double, ptr %6483, align 8, !dbg !349
  %6485 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6486 = load double, ptr %6485, align 8, !dbg !350
  %6487 = fcmp oeq double %6484, %6486, !dbg !351
  br i1 %6487, label %5429, label %6488, !dbg !352

6488:                                             ; preds = %6479, %6472
  br label %6489, !dbg !356

6489:                                             ; preds = %6488
  %6490 = load i32, ptr %10, align 4, !dbg !357
  %6491 = add nsw i32 %6490, 1, !dbg !357
  store i32 %6491, ptr %10, align 4, !dbg !357
  %6492 = load i32, ptr %10, align 4, !dbg !334
  %6493 = load i32, ptr %8, align 4, !dbg !336
  %6494 = icmp slt i32 %6492, %6493, !dbg !337
  br i1 %6494, label %6495, label %14243, !dbg !338

6495:                                             ; preds = %6489
  %6496 = load i32, ptr %10, align 4, !dbg !339
  %6497 = sext i32 %6496 to i64, !dbg !342
  %6498 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6497, !dbg !342
  %6499 = load double, ptr %6498, align 16, !dbg !343
  %6500 = load double, ptr %6, align 8, !dbg !344
  %6501 = fcmp oeq double %6499, %6500, !dbg !345
  br i1 %6501, label %6502, label %6511, !dbg !346

6502:                                             ; preds = %6495
  %6503 = load i32, ptr %10, align 4, !dbg !347
  %6504 = sext i32 %6503 to i64, !dbg !348
  %6505 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6504, !dbg !348
  %6506 = getelementptr inbounds %struct.POINT, ptr %6505, i32 0, i32 1, !dbg !349
  %6507 = load double, ptr %6506, align 8, !dbg !349
  %6508 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6509 = load double, ptr %6508, align 8, !dbg !350
  %6510 = fcmp oeq double %6507, %6509, !dbg !351
  br i1 %6510, label %5429, label %6511, !dbg !352

6511:                                             ; preds = %6502, %6495
  br label %6512, !dbg !356

6512:                                             ; preds = %6511
  %6513 = load i32, ptr %10, align 4, !dbg !357
  %6514 = add nsw i32 %6513, 1, !dbg !357
  store i32 %6514, ptr %10, align 4, !dbg !357
  %6515 = load i32, ptr %10, align 4, !dbg !334
  %6516 = load i32, ptr %8, align 4, !dbg !336
  %6517 = icmp slt i32 %6515, %6516, !dbg !337
  br i1 %6517, label %6518, label %14243, !dbg !338

6518:                                             ; preds = %6512
  %6519 = load i32, ptr %10, align 4, !dbg !339
  %6520 = sext i32 %6519 to i64, !dbg !342
  %6521 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6520, !dbg !342
  %6522 = load double, ptr %6521, align 16, !dbg !343
  %6523 = load double, ptr %6, align 8, !dbg !344
  %6524 = fcmp oeq double %6522, %6523, !dbg !345
  br i1 %6524, label %6525, label %6534, !dbg !346

6525:                                             ; preds = %6518
  %6526 = load i32, ptr %10, align 4, !dbg !347
  %6527 = sext i32 %6526 to i64, !dbg !348
  %6528 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6527, !dbg !348
  %6529 = getelementptr inbounds %struct.POINT, ptr %6528, i32 0, i32 1, !dbg !349
  %6530 = load double, ptr %6529, align 8, !dbg !349
  %6531 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6532 = load double, ptr %6531, align 8, !dbg !350
  %6533 = fcmp oeq double %6530, %6532, !dbg !351
  br i1 %6533, label %5429, label %6534, !dbg !352

6534:                                             ; preds = %6525, %6518
  br label %6535, !dbg !356

6535:                                             ; preds = %6534
  %6536 = load i32, ptr %10, align 4, !dbg !357
  %6537 = add nsw i32 %6536, 1, !dbg !357
  store i32 %6537, ptr %10, align 4, !dbg !357
  %6538 = load i32, ptr %10, align 4, !dbg !334
  %6539 = load i32, ptr %8, align 4, !dbg !336
  %6540 = icmp slt i32 %6538, %6539, !dbg !337
  br i1 %6540, label %6541, label %14243, !dbg !338

6541:                                             ; preds = %6535
  %6542 = load i32, ptr %10, align 4, !dbg !339
  %6543 = sext i32 %6542 to i64, !dbg !342
  %6544 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6543, !dbg !342
  %6545 = load double, ptr %6544, align 16, !dbg !343
  %6546 = load double, ptr %6, align 8, !dbg !344
  %6547 = fcmp oeq double %6545, %6546, !dbg !345
  br i1 %6547, label %6548, label %6557, !dbg !346

6548:                                             ; preds = %6541
  %6549 = load i32, ptr %10, align 4, !dbg !347
  %6550 = sext i32 %6549 to i64, !dbg !348
  %6551 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6550, !dbg !348
  %6552 = getelementptr inbounds %struct.POINT, ptr %6551, i32 0, i32 1, !dbg !349
  %6553 = load double, ptr %6552, align 8, !dbg !349
  %6554 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6555 = load double, ptr %6554, align 8, !dbg !350
  %6556 = fcmp oeq double %6553, %6555, !dbg !351
  br i1 %6556, label %5429, label %6557, !dbg !352

6557:                                             ; preds = %6548, %6541
  br label %6558, !dbg !356

6558:                                             ; preds = %6557
  %6559 = load i32, ptr %10, align 4, !dbg !357
  %6560 = add nsw i32 %6559, 1, !dbg !357
  store i32 %6560, ptr %10, align 4, !dbg !357
  %6561 = load i32, ptr %10, align 4, !dbg !334
  %6562 = load i32, ptr %8, align 4, !dbg !336
  %6563 = icmp slt i32 %6561, %6562, !dbg !337
  br i1 %6563, label %6564, label %14243, !dbg !338

6564:                                             ; preds = %6558
  %6565 = load i32, ptr %10, align 4, !dbg !339
  %6566 = sext i32 %6565 to i64, !dbg !342
  %6567 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6566, !dbg !342
  %6568 = load double, ptr %6567, align 16, !dbg !343
  %6569 = load double, ptr %6, align 8, !dbg !344
  %6570 = fcmp oeq double %6568, %6569, !dbg !345
  br i1 %6570, label %6571, label %6580, !dbg !346

6571:                                             ; preds = %6564
  %6572 = load i32, ptr %10, align 4, !dbg !347
  %6573 = sext i32 %6572 to i64, !dbg !348
  %6574 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6573, !dbg !348
  %6575 = getelementptr inbounds %struct.POINT, ptr %6574, i32 0, i32 1, !dbg !349
  %6576 = load double, ptr %6575, align 8, !dbg !349
  %6577 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6578 = load double, ptr %6577, align 8, !dbg !350
  %6579 = fcmp oeq double %6576, %6578, !dbg !351
  br i1 %6579, label %5429, label %6580, !dbg !352

6580:                                             ; preds = %6571, %6564
  br label %6581, !dbg !356

6581:                                             ; preds = %6580
  %6582 = load i32, ptr %10, align 4, !dbg !357
  %6583 = add nsw i32 %6582, 1, !dbg !357
  store i32 %6583, ptr %10, align 4, !dbg !357
  %6584 = load i32, ptr %10, align 4, !dbg !334
  %6585 = load i32, ptr %8, align 4, !dbg !336
  %6586 = icmp slt i32 %6584, %6585, !dbg !337
  br i1 %6586, label %6587, label %14243, !dbg !338

6587:                                             ; preds = %6581
  %6588 = load i32, ptr %10, align 4, !dbg !339
  %6589 = sext i32 %6588 to i64, !dbg !342
  %6590 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6589, !dbg !342
  %6591 = load double, ptr %6590, align 16, !dbg !343
  %6592 = load double, ptr %6, align 8, !dbg !344
  %6593 = fcmp oeq double %6591, %6592, !dbg !345
  br i1 %6593, label %6594, label %6603, !dbg !346

6594:                                             ; preds = %6587
  %6595 = load i32, ptr %10, align 4, !dbg !347
  %6596 = sext i32 %6595 to i64, !dbg !348
  %6597 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6596, !dbg !348
  %6598 = getelementptr inbounds %struct.POINT, ptr %6597, i32 0, i32 1, !dbg !349
  %6599 = load double, ptr %6598, align 8, !dbg !349
  %6600 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6601 = load double, ptr %6600, align 8, !dbg !350
  %6602 = fcmp oeq double %6599, %6601, !dbg !351
  br i1 %6602, label %5429, label %6603, !dbg !352

6603:                                             ; preds = %6594, %6587
  br label %6604, !dbg !356

6604:                                             ; preds = %6603
  %6605 = load i32, ptr %10, align 4, !dbg !357
  %6606 = add nsw i32 %6605, 1, !dbg !357
  store i32 %6606, ptr %10, align 4, !dbg !357
  %6607 = load i32, ptr %10, align 4, !dbg !334
  %6608 = load i32, ptr %8, align 4, !dbg !336
  %6609 = icmp slt i32 %6607, %6608, !dbg !337
  br i1 %6609, label %6610, label %14243, !dbg !338

6610:                                             ; preds = %6604
  %6611 = load i32, ptr %10, align 4, !dbg !339
  %6612 = sext i32 %6611 to i64, !dbg !342
  %6613 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6612, !dbg !342
  %6614 = load double, ptr %6613, align 16, !dbg !343
  %6615 = load double, ptr %6, align 8, !dbg !344
  %6616 = fcmp oeq double %6614, %6615, !dbg !345
  br i1 %6616, label %6617, label %6626, !dbg !346

6617:                                             ; preds = %6610
  %6618 = load i32, ptr %10, align 4, !dbg !347
  %6619 = sext i32 %6618 to i64, !dbg !348
  %6620 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6619, !dbg !348
  %6621 = getelementptr inbounds %struct.POINT, ptr %6620, i32 0, i32 1, !dbg !349
  %6622 = load double, ptr %6621, align 8, !dbg !349
  %6623 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6624 = load double, ptr %6623, align 8, !dbg !350
  %6625 = fcmp oeq double %6622, %6624, !dbg !351
  br i1 %6625, label %5429, label %6626, !dbg !352

6626:                                             ; preds = %6617, %6610
  br label %6627, !dbg !356

6627:                                             ; preds = %6626
  %6628 = load i32, ptr %10, align 4, !dbg !357
  %6629 = add nsw i32 %6628, 1, !dbg !357
  store i32 %6629, ptr %10, align 4, !dbg !357
  %6630 = load i32, ptr %10, align 4, !dbg !334
  %6631 = load i32, ptr %8, align 4, !dbg !336
  %6632 = icmp slt i32 %6630, %6631, !dbg !337
  br i1 %6632, label %6633, label %14243, !dbg !338

6633:                                             ; preds = %6627
  %6634 = load i32, ptr %10, align 4, !dbg !339
  %6635 = sext i32 %6634 to i64, !dbg !342
  %6636 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6635, !dbg !342
  %6637 = load double, ptr %6636, align 16, !dbg !343
  %6638 = load double, ptr %6, align 8, !dbg !344
  %6639 = fcmp oeq double %6637, %6638, !dbg !345
  br i1 %6639, label %6640, label %6649, !dbg !346

6640:                                             ; preds = %6633
  %6641 = load i32, ptr %10, align 4, !dbg !347
  %6642 = sext i32 %6641 to i64, !dbg !348
  %6643 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6642, !dbg !348
  %6644 = getelementptr inbounds %struct.POINT, ptr %6643, i32 0, i32 1, !dbg !349
  %6645 = load double, ptr %6644, align 8, !dbg !349
  %6646 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6647 = load double, ptr %6646, align 8, !dbg !350
  %6648 = fcmp oeq double %6645, %6647, !dbg !351
  br i1 %6648, label %5429, label %6649, !dbg !352

6649:                                             ; preds = %6640, %6633
  br label %6650, !dbg !356

6650:                                             ; preds = %6649
  %6651 = load i32, ptr %10, align 4, !dbg !357
  %6652 = add nsw i32 %6651, 1, !dbg !357
  store i32 %6652, ptr %10, align 4, !dbg !357
  %6653 = load i32, ptr %10, align 4, !dbg !334
  %6654 = load i32, ptr %8, align 4, !dbg !336
  %6655 = icmp slt i32 %6653, %6654, !dbg !337
  br i1 %6655, label %6656, label %14243, !dbg !338

6656:                                             ; preds = %6650
  %6657 = load i32, ptr %10, align 4, !dbg !339
  %6658 = sext i32 %6657 to i64, !dbg !342
  %6659 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6658, !dbg !342
  %6660 = load double, ptr %6659, align 16, !dbg !343
  %6661 = load double, ptr %6, align 8, !dbg !344
  %6662 = fcmp oeq double %6660, %6661, !dbg !345
  br i1 %6662, label %6663, label %6672, !dbg !346

6663:                                             ; preds = %6656
  %6664 = load i32, ptr %10, align 4, !dbg !347
  %6665 = sext i32 %6664 to i64, !dbg !348
  %6666 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6665, !dbg !348
  %6667 = getelementptr inbounds %struct.POINT, ptr %6666, i32 0, i32 1, !dbg !349
  %6668 = load double, ptr %6667, align 8, !dbg !349
  %6669 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6670 = load double, ptr %6669, align 8, !dbg !350
  %6671 = fcmp oeq double %6668, %6670, !dbg !351
  br i1 %6671, label %5429, label %6672, !dbg !352

6672:                                             ; preds = %6663, %6656
  br label %6673, !dbg !356

6673:                                             ; preds = %6672
  %6674 = load i32, ptr %10, align 4, !dbg !357
  %6675 = add nsw i32 %6674, 1, !dbg !357
  store i32 %6675, ptr %10, align 4, !dbg !357
  %6676 = load i32, ptr %10, align 4, !dbg !334
  %6677 = load i32, ptr %8, align 4, !dbg !336
  %6678 = icmp slt i32 %6676, %6677, !dbg !337
  br i1 %6678, label %6679, label %14243, !dbg !338

6679:                                             ; preds = %6673
  %6680 = load i32, ptr %10, align 4, !dbg !339
  %6681 = sext i32 %6680 to i64, !dbg !342
  %6682 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6681, !dbg !342
  %6683 = load double, ptr %6682, align 16, !dbg !343
  %6684 = load double, ptr %6, align 8, !dbg !344
  %6685 = fcmp oeq double %6683, %6684, !dbg !345
  br i1 %6685, label %6686, label %6695, !dbg !346

6686:                                             ; preds = %6679
  %6687 = load i32, ptr %10, align 4, !dbg !347
  %6688 = sext i32 %6687 to i64, !dbg !348
  %6689 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6688, !dbg !348
  %6690 = getelementptr inbounds %struct.POINT, ptr %6689, i32 0, i32 1, !dbg !349
  %6691 = load double, ptr %6690, align 8, !dbg !349
  %6692 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6693 = load double, ptr %6692, align 8, !dbg !350
  %6694 = fcmp oeq double %6691, %6693, !dbg !351
  br i1 %6694, label %5429, label %6695, !dbg !352

6695:                                             ; preds = %6686, %6679
  br label %6696, !dbg !356

6696:                                             ; preds = %6695
  %6697 = load i32, ptr %10, align 4, !dbg !357
  %6698 = add nsw i32 %6697, 1, !dbg !357
  store i32 %6698, ptr %10, align 4, !dbg !357
  %6699 = load i32, ptr %10, align 4, !dbg !334
  %6700 = load i32, ptr %8, align 4, !dbg !336
  %6701 = icmp slt i32 %6699, %6700, !dbg !337
  br i1 %6701, label %6702, label %14243, !dbg !338

6702:                                             ; preds = %6696
  %6703 = load i32, ptr %10, align 4, !dbg !339
  %6704 = sext i32 %6703 to i64, !dbg !342
  %6705 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6704, !dbg !342
  %6706 = load double, ptr %6705, align 16, !dbg !343
  %6707 = load double, ptr %6, align 8, !dbg !344
  %6708 = fcmp oeq double %6706, %6707, !dbg !345
  br i1 %6708, label %6709, label %6718, !dbg !346

6709:                                             ; preds = %6702
  %6710 = load i32, ptr %10, align 4, !dbg !347
  %6711 = sext i32 %6710 to i64, !dbg !348
  %6712 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6711, !dbg !348
  %6713 = getelementptr inbounds %struct.POINT, ptr %6712, i32 0, i32 1, !dbg !349
  %6714 = load double, ptr %6713, align 8, !dbg !349
  %6715 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6716 = load double, ptr %6715, align 8, !dbg !350
  %6717 = fcmp oeq double %6714, %6716, !dbg !351
  br i1 %6717, label %5429, label %6718, !dbg !352

6718:                                             ; preds = %6709, %6702
  br label %6719, !dbg !356

6719:                                             ; preds = %6718
  %6720 = load i32, ptr %10, align 4, !dbg !357
  %6721 = add nsw i32 %6720, 1, !dbg !357
  store i32 %6721, ptr %10, align 4, !dbg !357
  %6722 = load i32, ptr %10, align 4, !dbg !334
  %6723 = load i32, ptr %8, align 4, !dbg !336
  %6724 = icmp slt i32 %6722, %6723, !dbg !337
  br i1 %6724, label %6725, label %14243, !dbg !338

6725:                                             ; preds = %6719
  %6726 = load i32, ptr %10, align 4, !dbg !339
  %6727 = sext i32 %6726 to i64, !dbg !342
  %6728 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6727, !dbg !342
  %6729 = load double, ptr %6728, align 16, !dbg !343
  %6730 = load double, ptr %6, align 8, !dbg !344
  %6731 = fcmp oeq double %6729, %6730, !dbg !345
  br i1 %6731, label %6732, label %6741, !dbg !346

6732:                                             ; preds = %6725
  %6733 = load i32, ptr %10, align 4, !dbg !347
  %6734 = sext i32 %6733 to i64, !dbg !348
  %6735 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6734, !dbg !348
  %6736 = getelementptr inbounds %struct.POINT, ptr %6735, i32 0, i32 1, !dbg !349
  %6737 = load double, ptr %6736, align 8, !dbg !349
  %6738 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6739 = load double, ptr %6738, align 8, !dbg !350
  %6740 = fcmp oeq double %6737, %6739, !dbg !351
  br i1 %6740, label %5429, label %6741, !dbg !352

6741:                                             ; preds = %6732, %6725
  br label %6742, !dbg !356

6742:                                             ; preds = %6741
  %6743 = load i32, ptr %10, align 4, !dbg !357
  %6744 = add nsw i32 %6743, 1, !dbg !357
  store i32 %6744, ptr %10, align 4, !dbg !357
  %6745 = load i32, ptr %10, align 4, !dbg !334
  %6746 = load i32, ptr %8, align 4, !dbg !336
  %6747 = icmp slt i32 %6745, %6746, !dbg !337
  br i1 %6747, label %6748, label %14243, !dbg !338

6748:                                             ; preds = %6742
  %6749 = load i32, ptr %10, align 4, !dbg !339
  %6750 = sext i32 %6749 to i64, !dbg !342
  %6751 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6750, !dbg !342
  %6752 = load double, ptr %6751, align 16, !dbg !343
  %6753 = load double, ptr %6, align 8, !dbg !344
  %6754 = fcmp oeq double %6752, %6753, !dbg !345
  br i1 %6754, label %6755, label %6764, !dbg !346

6755:                                             ; preds = %6748
  %6756 = load i32, ptr %10, align 4, !dbg !347
  %6757 = sext i32 %6756 to i64, !dbg !348
  %6758 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6757, !dbg !348
  %6759 = getelementptr inbounds %struct.POINT, ptr %6758, i32 0, i32 1, !dbg !349
  %6760 = load double, ptr %6759, align 8, !dbg !349
  %6761 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6762 = load double, ptr %6761, align 8, !dbg !350
  %6763 = fcmp oeq double %6760, %6762, !dbg !351
  br i1 %6763, label %5429, label %6764, !dbg !352

6764:                                             ; preds = %6755, %6748
  br label %6765, !dbg !356

6765:                                             ; preds = %6764
  %6766 = load i32, ptr %10, align 4, !dbg !357
  %6767 = add nsw i32 %6766, 1, !dbg !357
  store i32 %6767, ptr %10, align 4, !dbg !357
  %6768 = load i32, ptr %10, align 4, !dbg !334
  %6769 = load i32, ptr %8, align 4, !dbg !336
  %6770 = icmp slt i32 %6768, %6769, !dbg !337
  br i1 %6770, label %6771, label %14243, !dbg !338

6771:                                             ; preds = %6765
  %6772 = load i32, ptr %10, align 4, !dbg !339
  %6773 = sext i32 %6772 to i64, !dbg !342
  %6774 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6773, !dbg !342
  %6775 = load double, ptr %6774, align 16, !dbg !343
  %6776 = load double, ptr %6, align 8, !dbg !344
  %6777 = fcmp oeq double %6775, %6776, !dbg !345
  br i1 %6777, label %6778, label %6787, !dbg !346

6778:                                             ; preds = %6771
  %6779 = load i32, ptr %10, align 4, !dbg !347
  %6780 = sext i32 %6779 to i64, !dbg !348
  %6781 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6780, !dbg !348
  %6782 = getelementptr inbounds %struct.POINT, ptr %6781, i32 0, i32 1, !dbg !349
  %6783 = load double, ptr %6782, align 8, !dbg !349
  %6784 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6785 = load double, ptr %6784, align 8, !dbg !350
  %6786 = fcmp oeq double %6783, %6785, !dbg !351
  br i1 %6786, label %5429, label %6787, !dbg !352

6787:                                             ; preds = %6778, %6771
  br label %6788, !dbg !356

6788:                                             ; preds = %6787
  %6789 = load i32, ptr %10, align 4, !dbg !357
  %6790 = add nsw i32 %6789, 1, !dbg !357
  store i32 %6790, ptr %10, align 4, !dbg !357
  %6791 = load i32, ptr %10, align 4, !dbg !334
  %6792 = load i32, ptr %8, align 4, !dbg !336
  %6793 = icmp slt i32 %6791, %6792, !dbg !337
  br i1 %6793, label %6794, label %14243, !dbg !338

6794:                                             ; preds = %6788
  %6795 = load i32, ptr %10, align 4, !dbg !339
  %6796 = sext i32 %6795 to i64, !dbg !342
  %6797 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6796, !dbg !342
  %6798 = load double, ptr %6797, align 16, !dbg !343
  %6799 = load double, ptr %6, align 8, !dbg !344
  %6800 = fcmp oeq double %6798, %6799, !dbg !345
  br i1 %6800, label %6801, label %6810, !dbg !346

6801:                                             ; preds = %6794
  %6802 = load i32, ptr %10, align 4, !dbg !347
  %6803 = sext i32 %6802 to i64, !dbg !348
  %6804 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6803, !dbg !348
  %6805 = getelementptr inbounds %struct.POINT, ptr %6804, i32 0, i32 1, !dbg !349
  %6806 = load double, ptr %6805, align 8, !dbg !349
  %6807 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6808 = load double, ptr %6807, align 8, !dbg !350
  %6809 = fcmp oeq double %6806, %6808, !dbg !351
  br i1 %6809, label %5429, label %6810, !dbg !352

6810:                                             ; preds = %6801, %6794
  br label %6811, !dbg !356

6811:                                             ; preds = %6810
  %6812 = load i32, ptr %10, align 4, !dbg !357
  %6813 = add nsw i32 %6812, 1, !dbg !357
  store i32 %6813, ptr %10, align 4, !dbg !357
  %6814 = load i32, ptr %10, align 4, !dbg !334
  %6815 = load i32, ptr %8, align 4, !dbg !336
  %6816 = icmp slt i32 %6814, %6815, !dbg !337
  br i1 %6816, label %6817, label %14243, !dbg !338

6817:                                             ; preds = %6811
  %6818 = load i32, ptr %10, align 4, !dbg !339
  %6819 = sext i32 %6818 to i64, !dbg !342
  %6820 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6819, !dbg !342
  %6821 = load double, ptr %6820, align 16, !dbg !343
  %6822 = load double, ptr %6, align 8, !dbg !344
  %6823 = fcmp oeq double %6821, %6822, !dbg !345
  br i1 %6823, label %6824, label %6833, !dbg !346

6824:                                             ; preds = %6817
  %6825 = load i32, ptr %10, align 4, !dbg !347
  %6826 = sext i32 %6825 to i64, !dbg !348
  %6827 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6826, !dbg !348
  %6828 = getelementptr inbounds %struct.POINT, ptr %6827, i32 0, i32 1, !dbg !349
  %6829 = load double, ptr %6828, align 8, !dbg !349
  %6830 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6831 = load double, ptr %6830, align 8, !dbg !350
  %6832 = fcmp oeq double %6829, %6831, !dbg !351
  br i1 %6832, label %5429, label %6833, !dbg !352

6833:                                             ; preds = %6824, %6817
  br label %6834, !dbg !356

6834:                                             ; preds = %6833
  %6835 = load i32, ptr %10, align 4, !dbg !357
  %6836 = add nsw i32 %6835, 1, !dbg !357
  store i32 %6836, ptr %10, align 4, !dbg !357
  %6837 = load i32, ptr %10, align 4, !dbg !334
  %6838 = load i32, ptr %8, align 4, !dbg !336
  %6839 = icmp slt i32 %6837, %6838, !dbg !337
  br i1 %6839, label %6840, label %14243, !dbg !338

6840:                                             ; preds = %6834
  %6841 = load i32, ptr %10, align 4, !dbg !339
  %6842 = sext i32 %6841 to i64, !dbg !342
  %6843 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6842, !dbg !342
  %6844 = load double, ptr %6843, align 16, !dbg !343
  %6845 = load double, ptr %6, align 8, !dbg !344
  %6846 = fcmp oeq double %6844, %6845, !dbg !345
  br i1 %6846, label %6847, label %6856, !dbg !346

6847:                                             ; preds = %6840
  %6848 = load i32, ptr %10, align 4, !dbg !347
  %6849 = sext i32 %6848 to i64, !dbg !348
  %6850 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6849, !dbg !348
  %6851 = getelementptr inbounds %struct.POINT, ptr %6850, i32 0, i32 1, !dbg !349
  %6852 = load double, ptr %6851, align 8, !dbg !349
  %6853 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6854 = load double, ptr %6853, align 8, !dbg !350
  %6855 = fcmp oeq double %6852, %6854, !dbg !351
  br i1 %6855, label %5429, label %6856, !dbg !352

6856:                                             ; preds = %6847, %6840
  br label %6857, !dbg !356

6857:                                             ; preds = %6856
  %6858 = load i32, ptr %10, align 4, !dbg !357
  %6859 = add nsw i32 %6858, 1, !dbg !357
  store i32 %6859, ptr %10, align 4, !dbg !357
  %6860 = load i32, ptr %10, align 4, !dbg !334
  %6861 = load i32, ptr %8, align 4, !dbg !336
  %6862 = icmp slt i32 %6860, %6861, !dbg !337
  br i1 %6862, label %6863, label %14243, !dbg !338

6863:                                             ; preds = %6857
  %6864 = load i32, ptr %10, align 4, !dbg !339
  %6865 = sext i32 %6864 to i64, !dbg !342
  %6866 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6865, !dbg !342
  %6867 = load double, ptr %6866, align 16, !dbg !343
  %6868 = load double, ptr %6, align 8, !dbg !344
  %6869 = fcmp oeq double %6867, %6868, !dbg !345
  br i1 %6869, label %6870, label %6879, !dbg !346

6870:                                             ; preds = %6863
  %6871 = load i32, ptr %10, align 4, !dbg !347
  %6872 = sext i32 %6871 to i64, !dbg !348
  %6873 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6872, !dbg !348
  %6874 = getelementptr inbounds %struct.POINT, ptr %6873, i32 0, i32 1, !dbg !349
  %6875 = load double, ptr %6874, align 8, !dbg !349
  %6876 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6877 = load double, ptr %6876, align 8, !dbg !350
  %6878 = fcmp oeq double %6875, %6877, !dbg !351
  br i1 %6878, label %5429, label %6879, !dbg !352

6879:                                             ; preds = %6870, %6863
  br label %6880, !dbg !356

6880:                                             ; preds = %6879
  %6881 = load i32, ptr %10, align 4, !dbg !357
  %6882 = add nsw i32 %6881, 1, !dbg !357
  store i32 %6882, ptr %10, align 4, !dbg !357
  %6883 = load i32, ptr %10, align 4, !dbg !334
  %6884 = load i32, ptr %8, align 4, !dbg !336
  %6885 = icmp slt i32 %6883, %6884, !dbg !337
  br i1 %6885, label %6886, label %14243, !dbg !338

6886:                                             ; preds = %6880
  %6887 = load i32, ptr %10, align 4, !dbg !339
  %6888 = sext i32 %6887 to i64, !dbg !342
  %6889 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6888, !dbg !342
  %6890 = load double, ptr %6889, align 16, !dbg !343
  %6891 = load double, ptr %6, align 8, !dbg !344
  %6892 = fcmp oeq double %6890, %6891, !dbg !345
  br i1 %6892, label %6893, label %6902, !dbg !346

6893:                                             ; preds = %6886
  %6894 = load i32, ptr %10, align 4, !dbg !347
  %6895 = sext i32 %6894 to i64, !dbg !348
  %6896 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6895, !dbg !348
  %6897 = getelementptr inbounds %struct.POINT, ptr %6896, i32 0, i32 1, !dbg !349
  %6898 = load double, ptr %6897, align 8, !dbg !349
  %6899 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6900 = load double, ptr %6899, align 8, !dbg !350
  %6901 = fcmp oeq double %6898, %6900, !dbg !351
  br i1 %6901, label %5429, label %6902, !dbg !352

6902:                                             ; preds = %6893, %6886
  br label %6903, !dbg !356

6903:                                             ; preds = %6902
  %6904 = load i32, ptr %10, align 4, !dbg !357
  %6905 = add nsw i32 %6904, 1, !dbg !357
  store i32 %6905, ptr %10, align 4, !dbg !357
  %6906 = load i32, ptr %10, align 4, !dbg !334
  %6907 = load i32, ptr %8, align 4, !dbg !336
  %6908 = icmp slt i32 %6906, %6907, !dbg !337
  br i1 %6908, label %6909, label %14243, !dbg !338

6909:                                             ; preds = %6903
  %6910 = load i32, ptr %10, align 4, !dbg !339
  %6911 = sext i32 %6910 to i64, !dbg !342
  %6912 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6911, !dbg !342
  %6913 = load double, ptr %6912, align 16, !dbg !343
  %6914 = load double, ptr %6, align 8, !dbg !344
  %6915 = fcmp oeq double %6913, %6914, !dbg !345
  br i1 %6915, label %6916, label %6925, !dbg !346

6916:                                             ; preds = %6909
  %6917 = load i32, ptr %10, align 4, !dbg !347
  %6918 = sext i32 %6917 to i64, !dbg !348
  %6919 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6918, !dbg !348
  %6920 = getelementptr inbounds %struct.POINT, ptr %6919, i32 0, i32 1, !dbg !349
  %6921 = load double, ptr %6920, align 8, !dbg !349
  %6922 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6923 = load double, ptr %6922, align 8, !dbg !350
  %6924 = fcmp oeq double %6921, %6923, !dbg !351
  br i1 %6924, label %5429, label %6925, !dbg !352

6925:                                             ; preds = %6916, %6909
  br label %6926, !dbg !356

6926:                                             ; preds = %6925
  %6927 = load i32, ptr %10, align 4, !dbg !357
  %6928 = add nsw i32 %6927, 1, !dbg !357
  store i32 %6928, ptr %10, align 4, !dbg !357
  %6929 = load i32, ptr %10, align 4, !dbg !334
  %6930 = load i32, ptr %8, align 4, !dbg !336
  %6931 = icmp slt i32 %6929, %6930, !dbg !337
  br i1 %6931, label %6932, label %14243, !dbg !338

6932:                                             ; preds = %6926
  %6933 = load i32, ptr %10, align 4, !dbg !339
  %6934 = sext i32 %6933 to i64, !dbg !342
  %6935 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6934, !dbg !342
  %6936 = load double, ptr %6935, align 16, !dbg !343
  %6937 = load double, ptr %6, align 8, !dbg !344
  %6938 = fcmp oeq double %6936, %6937, !dbg !345
  br i1 %6938, label %6939, label %6948, !dbg !346

6939:                                             ; preds = %6932
  %6940 = load i32, ptr %10, align 4, !dbg !347
  %6941 = sext i32 %6940 to i64, !dbg !348
  %6942 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6941, !dbg !348
  %6943 = getelementptr inbounds %struct.POINT, ptr %6942, i32 0, i32 1, !dbg !349
  %6944 = load double, ptr %6943, align 8, !dbg !349
  %6945 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6946 = load double, ptr %6945, align 8, !dbg !350
  %6947 = fcmp oeq double %6944, %6946, !dbg !351
  br i1 %6947, label %5429, label %6948, !dbg !352

6948:                                             ; preds = %6939, %6932
  br label %6949, !dbg !356

6949:                                             ; preds = %6948
  %6950 = load i32, ptr %10, align 4, !dbg !357
  %6951 = add nsw i32 %6950, 1, !dbg !357
  store i32 %6951, ptr %10, align 4, !dbg !357
  %6952 = load i32, ptr %10, align 4, !dbg !334
  %6953 = load i32, ptr %8, align 4, !dbg !336
  %6954 = icmp slt i32 %6952, %6953, !dbg !337
  br i1 %6954, label %6955, label %14243, !dbg !338

6955:                                             ; preds = %6949
  %6956 = load i32, ptr %10, align 4, !dbg !339
  %6957 = sext i32 %6956 to i64, !dbg !342
  %6958 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6957, !dbg !342
  %6959 = load double, ptr %6958, align 16, !dbg !343
  %6960 = load double, ptr %6, align 8, !dbg !344
  %6961 = fcmp oeq double %6959, %6960, !dbg !345
  br i1 %6961, label %6962, label %6971, !dbg !346

6962:                                             ; preds = %6955
  %6963 = load i32, ptr %10, align 4, !dbg !347
  %6964 = sext i32 %6963 to i64, !dbg !348
  %6965 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6964, !dbg !348
  %6966 = getelementptr inbounds %struct.POINT, ptr %6965, i32 0, i32 1, !dbg !349
  %6967 = load double, ptr %6966, align 8, !dbg !349
  %6968 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6969 = load double, ptr %6968, align 8, !dbg !350
  %6970 = fcmp oeq double %6967, %6969, !dbg !351
  br i1 %6970, label %5429, label %6971, !dbg !352

6971:                                             ; preds = %6962, %6955
  br label %6972, !dbg !356

6972:                                             ; preds = %6971
  %6973 = load i32, ptr %10, align 4, !dbg !357
  %6974 = add nsw i32 %6973, 1, !dbg !357
  store i32 %6974, ptr %10, align 4, !dbg !357
  %6975 = load i32, ptr %10, align 4, !dbg !334
  %6976 = load i32, ptr %8, align 4, !dbg !336
  %6977 = icmp slt i32 %6975, %6976, !dbg !337
  br i1 %6977, label %6978, label %14243, !dbg !338

6978:                                             ; preds = %6972
  %6979 = load i32, ptr %10, align 4, !dbg !339
  %6980 = sext i32 %6979 to i64, !dbg !342
  %6981 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6980, !dbg !342
  %6982 = load double, ptr %6981, align 16, !dbg !343
  %6983 = load double, ptr %6, align 8, !dbg !344
  %6984 = fcmp oeq double %6982, %6983, !dbg !345
  br i1 %6984, label %6985, label %6994, !dbg !346

6985:                                             ; preds = %6978
  %6986 = load i32, ptr %10, align 4, !dbg !347
  %6987 = sext i32 %6986 to i64, !dbg !348
  %6988 = getelementptr inbounds %struct.POINT, ptr %26, i64 %6987, !dbg !348
  %6989 = getelementptr inbounds %struct.POINT, ptr %6988, i32 0, i32 1, !dbg !349
  %6990 = load double, ptr %6989, align 8, !dbg !349
  %6991 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %6992 = load double, ptr %6991, align 8, !dbg !350
  %6993 = fcmp oeq double %6990, %6992, !dbg !351
  br i1 %6993, label %5429, label %6994, !dbg !352

6994:                                             ; preds = %6985, %6978
  br label %6995, !dbg !356

6995:                                             ; preds = %6994
  %6996 = load i32, ptr %10, align 4, !dbg !357
  %6997 = add nsw i32 %6996, 1, !dbg !357
  store i32 %6997, ptr %10, align 4, !dbg !357
  %6998 = load i32, ptr %10, align 4, !dbg !334
  %6999 = load i32, ptr %8, align 4, !dbg !336
  %7000 = icmp slt i32 %6998, %6999, !dbg !337
  br i1 %7000, label %7001, label %14243, !dbg !338

7001:                                             ; preds = %6995
  %7002 = load i32, ptr %10, align 4, !dbg !339
  %7003 = sext i32 %7002 to i64, !dbg !342
  %7004 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7003, !dbg !342
  %7005 = load double, ptr %7004, align 16, !dbg !343
  %7006 = load double, ptr %6, align 8, !dbg !344
  %7007 = fcmp oeq double %7005, %7006, !dbg !345
  br i1 %7007, label %7008, label %7017, !dbg !346

7008:                                             ; preds = %7001
  %7009 = load i32, ptr %10, align 4, !dbg !347
  %7010 = sext i32 %7009 to i64, !dbg !348
  %7011 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7010, !dbg !348
  %7012 = getelementptr inbounds %struct.POINT, ptr %7011, i32 0, i32 1, !dbg !349
  %7013 = load double, ptr %7012, align 8, !dbg !349
  %7014 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7015 = load double, ptr %7014, align 8, !dbg !350
  %7016 = fcmp oeq double %7013, %7015, !dbg !351
  br i1 %7016, label %5429, label %7017, !dbg !352

7017:                                             ; preds = %7008, %7001
  br label %7018, !dbg !356

7018:                                             ; preds = %7017
  %7019 = load i32, ptr %10, align 4, !dbg !357
  %7020 = add nsw i32 %7019, 1, !dbg !357
  store i32 %7020, ptr %10, align 4, !dbg !357
  %7021 = load i32, ptr %10, align 4, !dbg !334
  %7022 = load i32, ptr %8, align 4, !dbg !336
  %7023 = icmp slt i32 %7021, %7022, !dbg !337
  br i1 %7023, label %7024, label %14243, !dbg !338

7024:                                             ; preds = %7018
  %7025 = load i32, ptr %10, align 4, !dbg !339
  %7026 = sext i32 %7025 to i64, !dbg !342
  %7027 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7026, !dbg !342
  %7028 = load double, ptr %7027, align 16, !dbg !343
  %7029 = load double, ptr %6, align 8, !dbg !344
  %7030 = fcmp oeq double %7028, %7029, !dbg !345
  br i1 %7030, label %7031, label %7040, !dbg !346

7031:                                             ; preds = %7024
  %7032 = load i32, ptr %10, align 4, !dbg !347
  %7033 = sext i32 %7032 to i64, !dbg !348
  %7034 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7033, !dbg !348
  %7035 = getelementptr inbounds %struct.POINT, ptr %7034, i32 0, i32 1, !dbg !349
  %7036 = load double, ptr %7035, align 8, !dbg !349
  %7037 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7038 = load double, ptr %7037, align 8, !dbg !350
  %7039 = fcmp oeq double %7036, %7038, !dbg !351
  br i1 %7039, label %5429, label %7040, !dbg !352

7040:                                             ; preds = %7031, %7024
  br label %7041, !dbg !356

7041:                                             ; preds = %7040
  %7042 = load i32, ptr %10, align 4, !dbg !357
  %7043 = add nsw i32 %7042, 1, !dbg !357
  store i32 %7043, ptr %10, align 4, !dbg !357
  %7044 = load i32, ptr %10, align 4, !dbg !334
  %7045 = load i32, ptr %8, align 4, !dbg !336
  %7046 = icmp slt i32 %7044, %7045, !dbg !337
  br i1 %7046, label %7047, label %14243, !dbg !338

7047:                                             ; preds = %7041
  %7048 = load i32, ptr %10, align 4, !dbg !339
  %7049 = sext i32 %7048 to i64, !dbg !342
  %7050 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7049, !dbg !342
  %7051 = load double, ptr %7050, align 16, !dbg !343
  %7052 = load double, ptr %6, align 8, !dbg !344
  %7053 = fcmp oeq double %7051, %7052, !dbg !345
  br i1 %7053, label %7054, label %7063, !dbg !346

7054:                                             ; preds = %7047
  %7055 = load i32, ptr %10, align 4, !dbg !347
  %7056 = sext i32 %7055 to i64, !dbg !348
  %7057 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7056, !dbg !348
  %7058 = getelementptr inbounds %struct.POINT, ptr %7057, i32 0, i32 1, !dbg !349
  %7059 = load double, ptr %7058, align 8, !dbg !349
  %7060 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7061 = load double, ptr %7060, align 8, !dbg !350
  %7062 = fcmp oeq double %7059, %7061, !dbg !351
  br i1 %7062, label %5429, label %7063, !dbg !352

7063:                                             ; preds = %7054, %7047
  br label %7064, !dbg !356

7064:                                             ; preds = %7063
  %7065 = load i32, ptr %10, align 4, !dbg !357
  %7066 = add nsw i32 %7065, 1, !dbg !357
  store i32 %7066, ptr %10, align 4, !dbg !357
  %7067 = load i32, ptr %10, align 4, !dbg !334
  %7068 = load i32, ptr %8, align 4, !dbg !336
  %7069 = icmp slt i32 %7067, %7068, !dbg !337
  br i1 %7069, label %7070, label %14243, !dbg !338

7070:                                             ; preds = %7064
  %7071 = load i32, ptr %10, align 4, !dbg !339
  %7072 = sext i32 %7071 to i64, !dbg !342
  %7073 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7072, !dbg !342
  %7074 = load double, ptr %7073, align 16, !dbg !343
  %7075 = load double, ptr %6, align 8, !dbg !344
  %7076 = fcmp oeq double %7074, %7075, !dbg !345
  br i1 %7076, label %7077, label %7086, !dbg !346

7077:                                             ; preds = %7070
  %7078 = load i32, ptr %10, align 4, !dbg !347
  %7079 = sext i32 %7078 to i64, !dbg !348
  %7080 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7079, !dbg !348
  %7081 = getelementptr inbounds %struct.POINT, ptr %7080, i32 0, i32 1, !dbg !349
  %7082 = load double, ptr %7081, align 8, !dbg !349
  %7083 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7084 = load double, ptr %7083, align 8, !dbg !350
  %7085 = fcmp oeq double %7082, %7084, !dbg !351
  br i1 %7085, label %5429, label %7086, !dbg !352

7086:                                             ; preds = %7077, %7070
  br label %7087, !dbg !356

7087:                                             ; preds = %7086
  %7088 = load i32, ptr %10, align 4, !dbg !357
  %7089 = add nsw i32 %7088, 1, !dbg !357
  store i32 %7089, ptr %10, align 4, !dbg !357
  %7090 = load i32, ptr %10, align 4, !dbg !334
  %7091 = load i32, ptr %8, align 4, !dbg !336
  %7092 = icmp slt i32 %7090, %7091, !dbg !337
  br i1 %7092, label %7093, label %14243, !dbg !338

7093:                                             ; preds = %7087
  %7094 = load i32, ptr %10, align 4, !dbg !339
  %7095 = sext i32 %7094 to i64, !dbg !342
  %7096 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7095, !dbg !342
  %7097 = load double, ptr %7096, align 16, !dbg !343
  %7098 = load double, ptr %6, align 8, !dbg !344
  %7099 = fcmp oeq double %7097, %7098, !dbg !345
  br i1 %7099, label %7100, label %7109, !dbg !346

7100:                                             ; preds = %7093
  %7101 = load i32, ptr %10, align 4, !dbg !347
  %7102 = sext i32 %7101 to i64, !dbg !348
  %7103 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7102, !dbg !348
  %7104 = getelementptr inbounds %struct.POINT, ptr %7103, i32 0, i32 1, !dbg !349
  %7105 = load double, ptr %7104, align 8, !dbg !349
  %7106 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7107 = load double, ptr %7106, align 8, !dbg !350
  %7108 = fcmp oeq double %7105, %7107, !dbg !351
  br i1 %7108, label %5429, label %7109, !dbg !352

7109:                                             ; preds = %7100, %7093
  br label %7110, !dbg !356

7110:                                             ; preds = %7109
  %7111 = load i32, ptr %10, align 4, !dbg !357
  %7112 = add nsw i32 %7111, 1, !dbg !357
  store i32 %7112, ptr %10, align 4, !dbg !357
  %7113 = load i32, ptr %10, align 4, !dbg !334
  %7114 = load i32, ptr %8, align 4, !dbg !336
  %7115 = icmp slt i32 %7113, %7114, !dbg !337
  br i1 %7115, label %7116, label %14243, !dbg !338

7116:                                             ; preds = %7110
  %7117 = load i32, ptr %10, align 4, !dbg !339
  %7118 = sext i32 %7117 to i64, !dbg !342
  %7119 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7118, !dbg !342
  %7120 = load double, ptr %7119, align 16, !dbg !343
  %7121 = load double, ptr %6, align 8, !dbg !344
  %7122 = fcmp oeq double %7120, %7121, !dbg !345
  br i1 %7122, label %7123, label %7132, !dbg !346

7123:                                             ; preds = %7116
  %7124 = load i32, ptr %10, align 4, !dbg !347
  %7125 = sext i32 %7124 to i64, !dbg !348
  %7126 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7125, !dbg !348
  %7127 = getelementptr inbounds %struct.POINT, ptr %7126, i32 0, i32 1, !dbg !349
  %7128 = load double, ptr %7127, align 8, !dbg !349
  %7129 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7130 = load double, ptr %7129, align 8, !dbg !350
  %7131 = fcmp oeq double %7128, %7130, !dbg !351
  br i1 %7131, label %5429, label %7132, !dbg !352

7132:                                             ; preds = %7123, %7116
  br label %7133, !dbg !356

7133:                                             ; preds = %7132
  %7134 = load i32, ptr %10, align 4, !dbg !357
  %7135 = add nsw i32 %7134, 1, !dbg !357
  store i32 %7135, ptr %10, align 4, !dbg !357
  %7136 = load i32, ptr %10, align 4, !dbg !334
  %7137 = load i32, ptr %8, align 4, !dbg !336
  %7138 = icmp slt i32 %7136, %7137, !dbg !337
  br i1 %7138, label %7139, label %14243, !dbg !338

7139:                                             ; preds = %7133
  %7140 = load i32, ptr %10, align 4, !dbg !339
  %7141 = sext i32 %7140 to i64, !dbg !342
  %7142 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7141, !dbg !342
  %7143 = load double, ptr %7142, align 16, !dbg !343
  %7144 = load double, ptr %6, align 8, !dbg !344
  %7145 = fcmp oeq double %7143, %7144, !dbg !345
  br i1 %7145, label %7146, label %7155, !dbg !346

7146:                                             ; preds = %7139
  %7147 = load i32, ptr %10, align 4, !dbg !347
  %7148 = sext i32 %7147 to i64, !dbg !348
  %7149 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7148, !dbg !348
  %7150 = getelementptr inbounds %struct.POINT, ptr %7149, i32 0, i32 1, !dbg !349
  %7151 = load double, ptr %7150, align 8, !dbg !349
  %7152 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7153 = load double, ptr %7152, align 8, !dbg !350
  %7154 = fcmp oeq double %7151, %7153, !dbg !351
  br i1 %7154, label %5429, label %7155, !dbg !352

7155:                                             ; preds = %7146, %7139
  br label %7156, !dbg !356

7156:                                             ; preds = %7155
  %7157 = load i32, ptr %10, align 4, !dbg !357
  %7158 = add nsw i32 %7157, 1, !dbg !357
  store i32 %7158, ptr %10, align 4, !dbg !357
  %7159 = load i32, ptr %10, align 4, !dbg !334
  %7160 = load i32, ptr %8, align 4, !dbg !336
  %7161 = icmp slt i32 %7159, %7160, !dbg !337
  br i1 %7161, label %7162, label %14243, !dbg !338

7162:                                             ; preds = %7156
  %7163 = load i32, ptr %10, align 4, !dbg !339
  %7164 = sext i32 %7163 to i64, !dbg !342
  %7165 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7164, !dbg !342
  %7166 = load double, ptr %7165, align 16, !dbg !343
  %7167 = load double, ptr %6, align 8, !dbg !344
  %7168 = fcmp oeq double %7166, %7167, !dbg !345
  br i1 %7168, label %7169, label %7178, !dbg !346

7169:                                             ; preds = %7162
  %7170 = load i32, ptr %10, align 4, !dbg !347
  %7171 = sext i32 %7170 to i64, !dbg !348
  %7172 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7171, !dbg !348
  %7173 = getelementptr inbounds %struct.POINT, ptr %7172, i32 0, i32 1, !dbg !349
  %7174 = load double, ptr %7173, align 8, !dbg !349
  %7175 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7176 = load double, ptr %7175, align 8, !dbg !350
  %7177 = fcmp oeq double %7174, %7176, !dbg !351
  br i1 %7177, label %5429, label %7178, !dbg !352

7178:                                             ; preds = %7169, %7162
  br label %7179, !dbg !356

7179:                                             ; preds = %7178
  %7180 = load i32, ptr %10, align 4, !dbg !357
  %7181 = add nsw i32 %7180, 1, !dbg !357
  store i32 %7181, ptr %10, align 4, !dbg !357
  %7182 = load i32, ptr %10, align 4, !dbg !334
  %7183 = load i32, ptr %8, align 4, !dbg !336
  %7184 = icmp slt i32 %7182, %7183, !dbg !337
  br i1 %7184, label %7185, label %14243, !dbg !338

7185:                                             ; preds = %7179
  %7186 = load i32, ptr %10, align 4, !dbg !339
  %7187 = sext i32 %7186 to i64, !dbg !342
  %7188 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7187, !dbg !342
  %7189 = load double, ptr %7188, align 16, !dbg !343
  %7190 = load double, ptr %6, align 8, !dbg !344
  %7191 = fcmp oeq double %7189, %7190, !dbg !345
  br i1 %7191, label %7192, label %7201, !dbg !346

7192:                                             ; preds = %7185
  %7193 = load i32, ptr %10, align 4, !dbg !347
  %7194 = sext i32 %7193 to i64, !dbg !348
  %7195 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7194, !dbg !348
  %7196 = getelementptr inbounds %struct.POINT, ptr %7195, i32 0, i32 1, !dbg !349
  %7197 = load double, ptr %7196, align 8, !dbg !349
  %7198 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7199 = load double, ptr %7198, align 8, !dbg !350
  %7200 = fcmp oeq double %7197, %7199, !dbg !351
  br i1 %7200, label %5429, label %7201, !dbg !352

7201:                                             ; preds = %7192, %7185
  br label %7202, !dbg !356

7202:                                             ; preds = %7201
  %7203 = load i32, ptr %10, align 4, !dbg !357
  %7204 = add nsw i32 %7203, 1, !dbg !357
  store i32 %7204, ptr %10, align 4, !dbg !357
  %7205 = load i32, ptr %10, align 4, !dbg !334
  %7206 = load i32, ptr %8, align 4, !dbg !336
  %7207 = icmp slt i32 %7205, %7206, !dbg !337
  br i1 %7207, label %7208, label %14243, !dbg !338

7208:                                             ; preds = %7202
  %7209 = load i32, ptr %10, align 4, !dbg !339
  %7210 = sext i32 %7209 to i64, !dbg !342
  %7211 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7210, !dbg !342
  %7212 = load double, ptr %7211, align 16, !dbg !343
  %7213 = load double, ptr %6, align 8, !dbg !344
  %7214 = fcmp oeq double %7212, %7213, !dbg !345
  br i1 %7214, label %7215, label %7224, !dbg !346

7215:                                             ; preds = %7208
  %7216 = load i32, ptr %10, align 4, !dbg !347
  %7217 = sext i32 %7216 to i64, !dbg !348
  %7218 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7217, !dbg !348
  %7219 = getelementptr inbounds %struct.POINT, ptr %7218, i32 0, i32 1, !dbg !349
  %7220 = load double, ptr %7219, align 8, !dbg !349
  %7221 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7222 = load double, ptr %7221, align 8, !dbg !350
  %7223 = fcmp oeq double %7220, %7222, !dbg !351
  br i1 %7223, label %5429, label %7224, !dbg !352

7224:                                             ; preds = %7215, %7208
  br label %7225, !dbg !356

7225:                                             ; preds = %7224
  %7226 = load i32, ptr %10, align 4, !dbg !357
  %7227 = add nsw i32 %7226, 1, !dbg !357
  store i32 %7227, ptr %10, align 4, !dbg !357
  %7228 = load i32, ptr %10, align 4, !dbg !334
  %7229 = load i32, ptr %8, align 4, !dbg !336
  %7230 = icmp slt i32 %7228, %7229, !dbg !337
  br i1 %7230, label %7231, label %14243, !dbg !338

7231:                                             ; preds = %7225
  %7232 = load i32, ptr %10, align 4, !dbg !339
  %7233 = sext i32 %7232 to i64, !dbg !342
  %7234 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7233, !dbg !342
  %7235 = load double, ptr %7234, align 16, !dbg !343
  %7236 = load double, ptr %6, align 8, !dbg !344
  %7237 = fcmp oeq double %7235, %7236, !dbg !345
  br i1 %7237, label %7238, label %7247, !dbg !346

7238:                                             ; preds = %7231
  %7239 = load i32, ptr %10, align 4, !dbg !347
  %7240 = sext i32 %7239 to i64, !dbg !348
  %7241 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7240, !dbg !348
  %7242 = getelementptr inbounds %struct.POINT, ptr %7241, i32 0, i32 1, !dbg !349
  %7243 = load double, ptr %7242, align 8, !dbg !349
  %7244 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7245 = load double, ptr %7244, align 8, !dbg !350
  %7246 = fcmp oeq double %7243, %7245, !dbg !351
  br i1 %7246, label %5429, label %7247, !dbg !352

7247:                                             ; preds = %7238, %7231
  br label %7248, !dbg !356

7248:                                             ; preds = %7247
  %7249 = load i32, ptr %10, align 4, !dbg !357
  %7250 = add nsw i32 %7249, 1, !dbg !357
  store i32 %7250, ptr %10, align 4, !dbg !357
  %7251 = load i32, ptr %10, align 4, !dbg !334
  %7252 = load i32, ptr %8, align 4, !dbg !336
  %7253 = icmp slt i32 %7251, %7252, !dbg !337
  br i1 %7253, label %7254, label %14243, !dbg !338

7254:                                             ; preds = %7248
  %7255 = load i32, ptr %10, align 4, !dbg !339
  %7256 = sext i32 %7255 to i64, !dbg !342
  %7257 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7256, !dbg !342
  %7258 = load double, ptr %7257, align 16, !dbg !343
  %7259 = load double, ptr %6, align 8, !dbg !344
  %7260 = fcmp oeq double %7258, %7259, !dbg !345
  br i1 %7260, label %7261, label %7270, !dbg !346

7261:                                             ; preds = %7254
  %7262 = load i32, ptr %10, align 4, !dbg !347
  %7263 = sext i32 %7262 to i64, !dbg !348
  %7264 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7263, !dbg !348
  %7265 = getelementptr inbounds %struct.POINT, ptr %7264, i32 0, i32 1, !dbg !349
  %7266 = load double, ptr %7265, align 8, !dbg !349
  %7267 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7268 = load double, ptr %7267, align 8, !dbg !350
  %7269 = fcmp oeq double %7266, %7268, !dbg !351
  br i1 %7269, label %5429, label %7270, !dbg !352

7270:                                             ; preds = %7261, %7254
  br label %7271, !dbg !356

7271:                                             ; preds = %7270
  %7272 = load i32, ptr %10, align 4, !dbg !357
  %7273 = add nsw i32 %7272, 1, !dbg !357
  store i32 %7273, ptr %10, align 4, !dbg !357
  %7274 = load i32, ptr %10, align 4, !dbg !334
  %7275 = load i32, ptr %8, align 4, !dbg !336
  %7276 = icmp slt i32 %7274, %7275, !dbg !337
  br i1 %7276, label %7277, label %14243, !dbg !338

7277:                                             ; preds = %7271
  %7278 = load i32, ptr %10, align 4, !dbg !339
  %7279 = sext i32 %7278 to i64, !dbg !342
  %7280 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7279, !dbg !342
  %7281 = load double, ptr %7280, align 16, !dbg !343
  %7282 = load double, ptr %6, align 8, !dbg !344
  %7283 = fcmp oeq double %7281, %7282, !dbg !345
  br i1 %7283, label %7284, label %7293, !dbg !346

7284:                                             ; preds = %7277
  %7285 = load i32, ptr %10, align 4, !dbg !347
  %7286 = sext i32 %7285 to i64, !dbg !348
  %7287 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7286, !dbg !348
  %7288 = getelementptr inbounds %struct.POINT, ptr %7287, i32 0, i32 1, !dbg !349
  %7289 = load double, ptr %7288, align 8, !dbg !349
  %7290 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7291 = load double, ptr %7290, align 8, !dbg !350
  %7292 = fcmp oeq double %7289, %7291, !dbg !351
  br i1 %7292, label %5429, label %7293, !dbg !352

7293:                                             ; preds = %7284, %7277
  br label %7294, !dbg !356

7294:                                             ; preds = %7293
  %7295 = load i32, ptr %10, align 4, !dbg !357
  %7296 = add nsw i32 %7295, 1, !dbg !357
  store i32 %7296, ptr %10, align 4, !dbg !357
  %7297 = load i32, ptr %10, align 4, !dbg !334
  %7298 = load i32, ptr %8, align 4, !dbg !336
  %7299 = icmp slt i32 %7297, %7298, !dbg !337
  br i1 %7299, label %7300, label %14243, !dbg !338

7300:                                             ; preds = %7294
  %7301 = load i32, ptr %10, align 4, !dbg !339
  %7302 = sext i32 %7301 to i64, !dbg !342
  %7303 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7302, !dbg !342
  %7304 = load double, ptr %7303, align 16, !dbg !343
  %7305 = load double, ptr %6, align 8, !dbg !344
  %7306 = fcmp oeq double %7304, %7305, !dbg !345
  br i1 %7306, label %7307, label %7316, !dbg !346

7307:                                             ; preds = %7300
  %7308 = load i32, ptr %10, align 4, !dbg !347
  %7309 = sext i32 %7308 to i64, !dbg !348
  %7310 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7309, !dbg !348
  %7311 = getelementptr inbounds %struct.POINT, ptr %7310, i32 0, i32 1, !dbg !349
  %7312 = load double, ptr %7311, align 8, !dbg !349
  %7313 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7314 = load double, ptr %7313, align 8, !dbg !350
  %7315 = fcmp oeq double %7312, %7314, !dbg !351
  br i1 %7315, label %5429, label %7316, !dbg !352

7316:                                             ; preds = %7307, %7300
  br label %7317, !dbg !356

7317:                                             ; preds = %7316
  %7318 = load i32, ptr %10, align 4, !dbg !357
  %7319 = add nsw i32 %7318, 1, !dbg !357
  store i32 %7319, ptr %10, align 4, !dbg !357
  %7320 = load i32, ptr %10, align 4, !dbg !334
  %7321 = load i32, ptr %8, align 4, !dbg !336
  %7322 = icmp slt i32 %7320, %7321, !dbg !337
  br i1 %7322, label %7323, label %14243, !dbg !338

7323:                                             ; preds = %7317
  %7324 = load i32, ptr %10, align 4, !dbg !339
  %7325 = sext i32 %7324 to i64, !dbg !342
  %7326 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7325, !dbg !342
  %7327 = load double, ptr %7326, align 16, !dbg !343
  %7328 = load double, ptr %6, align 8, !dbg !344
  %7329 = fcmp oeq double %7327, %7328, !dbg !345
  br i1 %7329, label %7330, label %7339, !dbg !346

7330:                                             ; preds = %7323
  %7331 = load i32, ptr %10, align 4, !dbg !347
  %7332 = sext i32 %7331 to i64, !dbg !348
  %7333 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7332, !dbg !348
  %7334 = getelementptr inbounds %struct.POINT, ptr %7333, i32 0, i32 1, !dbg !349
  %7335 = load double, ptr %7334, align 8, !dbg !349
  %7336 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7337 = load double, ptr %7336, align 8, !dbg !350
  %7338 = fcmp oeq double %7335, %7337, !dbg !351
  br i1 %7338, label %5429, label %7339, !dbg !352

7339:                                             ; preds = %7330, %7323
  br label %7340, !dbg !356

7340:                                             ; preds = %7339
  %7341 = load i32, ptr %10, align 4, !dbg !357
  %7342 = add nsw i32 %7341, 1, !dbg !357
  store i32 %7342, ptr %10, align 4, !dbg !357
  %7343 = load i32, ptr %10, align 4, !dbg !334
  %7344 = load i32, ptr %8, align 4, !dbg !336
  %7345 = icmp slt i32 %7343, %7344, !dbg !337
  br i1 %7345, label %7346, label %14243, !dbg !338

7346:                                             ; preds = %7340
  %7347 = load i32, ptr %10, align 4, !dbg !339
  %7348 = sext i32 %7347 to i64, !dbg !342
  %7349 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7348, !dbg !342
  %7350 = load double, ptr %7349, align 16, !dbg !343
  %7351 = load double, ptr %6, align 8, !dbg !344
  %7352 = fcmp oeq double %7350, %7351, !dbg !345
  br i1 %7352, label %7353, label %7362, !dbg !346

7353:                                             ; preds = %7346
  %7354 = load i32, ptr %10, align 4, !dbg !347
  %7355 = sext i32 %7354 to i64, !dbg !348
  %7356 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7355, !dbg !348
  %7357 = getelementptr inbounds %struct.POINT, ptr %7356, i32 0, i32 1, !dbg !349
  %7358 = load double, ptr %7357, align 8, !dbg !349
  %7359 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7360 = load double, ptr %7359, align 8, !dbg !350
  %7361 = fcmp oeq double %7358, %7360, !dbg !351
  br i1 %7361, label %5429, label %7362, !dbg !352

7362:                                             ; preds = %7353, %7346
  br label %7363, !dbg !356

7363:                                             ; preds = %7362
  %7364 = load i32, ptr %10, align 4, !dbg !357
  %7365 = add nsw i32 %7364, 1, !dbg !357
  store i32 %7365, ptr %10, align 4, !dbg !357
  %7366 = load i32, ptr %10, align 4, !dbg !334
  %7367 = load i32, ptr %8, align 4, !dbg !336
  %7368 = icmp slt i32 %7366, %7367, !dbg !337
  br i1 %7368, label %7369, label %14243, !dbg !338

7369:                                             ; preds = %7363
  %7370 = load i32, ptr %10, align 4, !dbg !339
  %7371 = sext i32 %7370 to i64, !dbg !342
  %7372 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7371, !dbg !342
  %7373 = load double, ptr %7372, align 16, !dbg !343
  %7374 = load double, ptr %6, align 8, !dbg !344
  %7375 = fcmp oeq double %7373, %7374, !dbg !345
  br i1 %7375, label %7376, label %7385, !dbg !346

7376:                                             ; preds = %7369
  %7377 = load i32, ptr %10, align 4, !dbg !347
  %7378 = sext i32 %7377 to i64, !dbg !348
  %7379 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7378, !dbg !348
  %7380 = getelementptr inbounds %struct.POINT, ptr %7379, i32 0, i32 1, !dbg !349
  %7381 = load double, ptr %7380, align 8, !dbg !349
  %7382 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7383 = load double, ptr %7382, align 8, !dbg !350
  %7384 = fcmp oeq double %7381, %7383, !dbg !351
  br i1 %7384, label %5429, label %7385, !dbg !352

7385:                                             ; preds = %7376, %7369
  br label %7386, !dbg !356

7386:                                             ; preds = %7385
  %7387 = load i32, ptr %10, align 4, !dbg !357
  %7388 = add nsw i32 %7387, 1, !dbg !357
  store i32 %7388, ptr %10, align 4, !dbg !357
  %7389 = load i32, ptr %10, align 4, !dbg !334
  %7390 = load i32, ptr %8, align 4, !dbg !336
  %7391 = icmp slt i32 %7389, %7390, !dbg !337
  br i1 %7391, label %7392, label %14243, !dbg !338

7392:                                             ; preds = %7386
  %7393 = load i32, ptr %10, align 4, !dbg !339
  %7394 = sext i32 %7393 to i64, !dbg !342
  %7395 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7394, !dbg !342
  %7396 = load double, ptr %7395, align 16, !dbg !343
  %7397 = load double, ptr %6, align 8, !dbg !344
  %7398 = fcmp oeq double %7396, %7397, !dbg !345
  br i1 %7398, label %7399, label %7408, !dbg !346

7399:                                             ; preds = %7392
  %7400 = load i32, ptr %10, align 4, !dbg !347
  %7401 = sext i32 %7400 to i64, !dbg !348
  %7402 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7401, !dbg !348
  %7403 = getelementptr inbounds %struct.POINT, ptr %7402, i32 0, i32 1, !dbg !349
  %7404 = load double, ptr %7403, align 8, !dbg !349
  %7405 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7406 = load double, ptr %7405, align 8, !dbg !350
  %7407 = fcmp oeq double %7404, %7406, !dbg !351
  br i1 %7407, label %5429, label %7408, !dbg !352

7408:                                             ; preds = %7399, %7392
  br label %7409, !dbg !356

7409:                                             ; preds = %7408
  %7410 = load i32, ptr %10, align 4, !dbg !357
  %7411 = add nsw i32 %7410, 1, !dbg !357
  store i32 %7411, ptr %10, align 4, !dbg !357
  %7412 = load i32, ptr %10, align 4, !dbg !334
  %7413 = load i32, ptr %8, align 4, !dbg !336
  %7414 = icmp slt i32 %7412, %7413, !dbg !337
  br i1 %7414, label %7415, label %14243, !dbg !338

7415:                                             ; preds = %7409
  %7416 = load i32, ptr %10, align 4, !dbg !339
  %7417 = sext i32 %7416 to i64, !dbg !342
  %7418 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7417, !dbg !342
  %7419 = load double, ptr %7418, align 16, !dbg !343
  %7420 = load double, ptr %6, align 8, !dbg !344
  %7421 = fcmp oeq double %7419, %7420, !dbg !345
  br i1 %7421, label %7422, label %7431, !dbg !346

7422:                                             ; preds = %7415
  %7423 = load i32, ptr %10, align 4, !dbg !347
  %7424 = sext i32 %7423 to i64, !dbg !348
  %7425 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7424, !dbg !348
  %7426 = getelementptr inbounds %struct.POINT, ptr %7425, i32 0, i32 1, !dbg !349
  %7427 = load double, ptr %7426, align 8, !dbg !349
  %7428 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7429 = load double, ptr %7428, align 8, !dbg !350
  %7430 = fcmp oeq double %7427, %7429, !dbg !351
  br i1 %7430, label %5429, label %7431, !dbg !352

7431:                                             ; preds = %7422, %7415
  br label %7432, !dbg !356

7432:                                             ; preds = %7431
  %7433 = load i32, ptr %10, align 4, !dbg !357
  %7434 = add nsw i32 %7433, 1, !dbg !357
  store i32 %7434, ptr %10, align 4, !dbg !357
  %7435 = load i32, ptr %10, align 4, !dbg !334
  %7436 = load i32, ptr %8, align 4, !dbg !336
  %7437 = icmp slt i32 %7435, %7436, !dbg !337
  br i1 %7437, label %7438, label %14243, !dbg !338

7438:                                             ; preds = %7432
  %7439 = load i32, ptr %10, align 4, !dbg !339
  %7440 = sext i32 %7439 to i64, !dbg !342
  %7441 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7440, !dbg !342
  %7442 = load double, ptr %7441, align 16, !dbg !343
  %7443 = load double, ptr %6, align 8, !dbg !344
  %7444 = fcmp oeq double %7442, %7443, !dbg !345
  br i1 %7444, label %7445, label %7454, !dbg !346

7445:                                             ; preds = %7438
  %7446 = load i32, ptr %10, align 4, !dbg !347
  %7447 = sext i32 %7446 to i64, !dbg !348
  %7448 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7447, !dbg !348
  %7449 = getelementptr inbounds %struct.POINT, ptr %7448, i32 0, i32 1, !dbg !349
  %7450 = load double, ptr %7449, align 8, !dbg !349
  %7451 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7452 = load double, ptr %7451, align 8, !dbg !350
  %7453 = fcmp oeq double %7450, %7452, !dbg !351
  br i1 %7453, label %5429, label %7454, !dbg !352

7454:                                             ; preds = %7445, %7438
  br label %7455, !dbg !356

7455:                                             ; preds = %7454
  %7456 = load i32, ptr %10, align 4, !dbg !357
  %7457 = add nsw i32 %7456, 1, !dbg !357
  store i32 %7457, ptr %10, align 4, !dbg !357
  %7458 = load i32, ptr %10, align 4, !dbg !334
  %7459 = load i32, ptr %8, align 4, !dbg !336
  %7460 = icmp slt i32 %7458, %7459, !dbg !337
  br i1 %7460, label %7461, label %14243, !dbg !338

7461:                                             ; preds = %7455
  %7462 = load i32, ptr %10, align 4, !dbg !339
  %7463 = sext i32 %7462 to i64, !dbg !342
  %7464 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7463, !dbg !342
  %7465 = load double, ptr %7464, align 16, !dbg !343
  %7466 = load double, ptr %6, align 8, !dbg !344
  %7467 = fcmp oeq double %7465, %7466, !dbg !345
  br i1 %7467, label %7468, label %7477, !dbg !346

7468:                                             ; preds = %7461
  %7469 = load i32, ptr %10, align 4, !dbg !347
  %7470 = sext i32 %7469 to i64, !dbg !348
  %7471 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7470, !dbg !348
  %7472 = getelementptr inbounds %struct.POINT, ptr %7471, i32 0, i32 1, !dbg !349
  %7473 = load double, ptr %7472, align 8, !dbg !349
  %7474 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7475 = load double, ptr %7474, align 8, !dbg !350
  %7476 = fcmp oeq double %7473, %7475, !dbg !351
  br i1 %7476, label %5429, label %7477, !dbg !352

7477:                                             ; preds = %7468, %7461
  br label %7478, !dbg !356

7478:                                             ; preds = %7477
  %7479 = load i32, ptr %10, align 4, !dbg !357
  %7480 = add nsw i32 %7479, 1, !dbg !357
  store i32 %7480, ptr %10, align 4, !dbg !357
  %7481 = load i32, ptr %10, align 4, !dbg !334
  %7482 = load i32, ptr %8, align 4, !dbg !336
  %7483 = icmp slt i32 %7481, %7482, !dbg !337
  br i1 %7483, label %7484, label %14243, !dbg !338

7484:                                             ; preds = %7478
  %7485 = load i32, ptr %10, align 4, !dbg !339
  %7486 = sext i32 %7485 to i64, !dbg !342
  %7487 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7486, !dbg !342
  %7488 = load double, ptr %7487, align 16, !dbg !343
  %7489 = load double, ptr %6, align 8, !dbg !344
  %7490 = fcmp oeq double %7488, %7489, !dbg !345
  br i1 %7490, label %7491, label %7500, !dbg !346

7491:                                             ; preds = %7484
  %7492 = load i32, ptr %10, align 4, !dbg !347
  %7493 = sext i32 %7492 to i64, !dbg !348
  %7494 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7493, !dbg !348
  %7495 = getelementptr inbounds %struct.POINT, ptr %7494, i32 0, i32 1, !dbg !349
  %7496 = load double, ptr %7495, align 8, !dbg !349
  %7497 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7498 = load double, ptr %7497, align 8, !dbg !350
  %7499 = fcmp oeq double %7496, %7498, !dbg !351
  br i1 %7499, label %5429, label %7500, !dbg !352

7500:                                             ; preds = %7491, %7484
  br label %7501, !dbg !356

7501:                                             ; preds = %7500
  %7502 = load i32, ptr %10, align 4, !dbg !357
  %7503 = add nsw i32 %7502, 1, !dbg !357
  store i32 %7503, ptr %10, align 4, !dbg !357
  %7504 = load i32, ptr %10, align 4, !dbg !334
  %7505 = load i32, ptr %8, align 4, !dbg !336
  %7506 = icmp slt i32 %7504, %7505, !dbg !337
  br i1 %7506, label %7507, label %14243, !dbg !338

7507:                                             ; preds = %7501
  %7508 = load i32, ptr %10, align 4, !dbg !339
  %7509 = sext i32 %7508 to i64, !dbg !342
  %7510 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7509, !dbg !342
  %7511 = load double, ptr %7510, align 16, !dbg !343
  %7512 = load double, ptr %6, align 8, !dbg !344
  %7513 = fcmp oeq double %7511, %7512, !dbg !345
  br i1 %7513, label %7514, label %7523, !dbg !346

7514:                                             ; preds = %7507
  %7515 = load i32, ptr %10, align 4, !dbg !347
  %7516 = sext i32 %7515 to i64, !dbg !348
  %7517 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7516, !dbg !348
  %7518 = getelementptr inbounds %struct.POINT, ptr %7517, i32 0, i32 1, !dbg !349
  %7519 = load double, ptr %7518, align 8, !dbg !349
  %7520 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7521 = load double, ptr %7520, align 8, !dbg !350
  %7522 = fcmp oeq double %7519, %7521, !dbg !351
  br i1 %7522, label %5429, label %7523, !dbg !352

7523:                                             ; preds = %7514, %7507
  br label %7524, !dbg !356

7524:                                             ; preds = %7523
  %7525 = load i32, ptr %10, align 4, !dbg !357
  %7526 = add nsw i32 %7525, 1, !dbg !357
  store i32 %7526, ptr %10, align 4, !dbg !357
  %7527 = load i32, ptr %10, align 4, !dbg !334
  %7528 = load i32, ptr %8, align 4, !dbg !336
  %7529 = icmp slt i32 %7527, %7528, !dbg !337
  br i1 %7529, label %7530, label %14243, !dbg !338

7530:                                             ; preds = %7524
  %7531 = load i32, ptr %10, align 4, !dbg !339
  %7532 = sext i32 %7531 to i64, !dbg !342
  %7533 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7532, !dbg !342
  %7534 = load double, ptr %7533, align 16, !dbg !343
  %7535 = load double, ptr %6, align 8, !dbg !344
  %7536 = fcmp oeq double %7534, %7535, !dbg !345
  br i1 %7536, label %7537, label %7546, !dbg !346

7537:                                             ; preds = %7530
  %7538 = load i32, ptr %10, align 4, !dbg !347
  %7539 = sext i32 %7538 to i64, !dbg !348
  %7540 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7539, !dbg !348
  %7541 = getelementptr inbounds %struct.POINT, ptr %7540, i32 0, i32 1, !dbg !349
  %7542 = load double, ptr %7541, align 8, !dbg !349
  %7543 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7544 = load double, ptr %7543, align 8, !dbg !350
  %7545 = fcmp oeq double %7542, %7544, !dbg !351
  br i1 %7545, label %5429, label %7546, !dbg !352

7546:                                             ; preds = %7537, %7530
  br label %7547, !dbg !356

7547:                                             ; preds = %7546
  %7548 = load i32, ptr %10, align 4, !dbg !357
  %7549 = add nsw i32 %7548, 1, !dbg !357
  store i32 %7549, ptr %10, align 4, !dbg !357
  %7550 = load i32, ptr %10, align 4, !dbg !334
  %7551 = load i32, ptr %8, align 4, !dbg !336
  %7552 = icmp slt i32 %7550, %7551, !dbg !337
  br i1 %7552, label %7553, label %14243, !dbg !338

7553:                                             ; preds = %7547
  %7554 = load i32, ptr %10, align 4, !dbg !339
  %7555 = sext i32 %7554 to i64, !dbg !342
  %7556 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7555, !dbg !342
  %7557 = load double, ptr %7556, align 16, !dbg !343
  %7558 = load double, ptr %6, align 8, !dbg !344
  %7559 = fcmp oeq double %7557, %7558, !dbg !345
  br i1 %7559, label %7560, label %7569, !dbg !346

7560:                                             ; preds = %7553
  %7561 = load i32, ptr %10, align 4, !dbg !347
  %7562 = sext i32 %7561 to i64, !dbg !348
  %7563 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7562, !dbg !348
  %7564 = getelementptr inbounds %struct.POINT, ptr %7563, i32 0, i32 1, !dbg !349
  %7565 = load double, ptr %7564, align 8, !dbg !349
  %7566 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7567 = load double, ptr %7566, align 8, !dbg !350
  %7568 = fcmp oeq double %7565, %7567, !dbg !351
  br i1 %7568, label %5429, label %7569, !dbg !352

7569:                                             ; preds = %7560, %7553
  br label %7570, !dbg !356

7570:                                             ; preds = %7569
  %7571 = load i32, ptr %10, align 4, !dbg !357
  %7572 = add nsw i32 %7571, 1, !dbg !357
  store i32 %7572, ptr %10, align 4, !dbg !357
  %7573 = load i32, ptr %10, align 4, !dbg !334
  %7574 = load i32, ptr %8, align 4, !dbg !336
  %7575 = icmp slt i32 %7573, %7574, !dbg !337
  br i1 %7575, label %7576, label %14243, !dbg !338

7576:                                             ; preds = %7570
  %7577 = load i32, ptr %10, align 4, !dbg !339
  %7578 = sext i32 %7577 to i64, !dbg !342
  %7579 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7578, !dbg !342
  %7580 = load double, ptr %7579, align 16, !dbg !343
  %7581 = load double, ptr %6, align 8, !dbg !344
  %7582 = fcmp oeq double %7580, %7581, !dbg !345
  br i1 %7582, label %7583, label %7592, !dbg !346

7583:                                             ; preds = %7576
  %7584 = load i32, ptr %10, align 4, !dbg !347
  %7585 = sext i32 %7584 to i64, !dbg !348
  %7586 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7585, !dbg !348
  %7587 = getelementptr inbounds %struct.POINT, ptr %7586, i32 0, i32 1, !dbg !349
  %7588 = load double, ptr %7587, align 8, !dbg !349
  %7589 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7590 = load double, ptr %7589, align 8, !dbg !350
  %7591 = fcmp oeq double %7588, %7590, !dbg !351
  br i1 %7591, label %5429, label %7592, !dbg !352

7592:                                             ; preds = %7583, %7576
  br label %7593, !dbg !356

7593:                                             ; preds = %7592
  %7594 = load i32, ptr %10, align 4, !dbg !357
  %7595 = add nsw i32 %7594, 1, !dbg !357
  store i32 %7595, ptr %10, align 4, !dbg !357
  %7596 = load i32, ptr %10, align 4, !dbg !334
  %7597 = load i32, ptr %8, align 4, !dbg !336
  %7598 = icmp slt i32 %7596, %7597, !dbg !337
  br i1 %7598, label %7599, label %14243, !dbg !338

7599:                                             ; preds = %7593
  %7600 = load i32, ptr %10, align 4, !dbg !339
  %7601 = sext i32 %7600 to i64, !dbg !342
  %7602 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7601, !dbg !342
  %7603 = load double, ptr %7602, align 16, !dbg !343
  %7604 = load double, ptr %6, align 8, !dbg !344
  %7605 = fcmp oeq double %7603, %7604, !dbg !345
  br i1 %7605, label %7606, label %7615, !dbg !346

7606:                                             ; preds = %7599
  %7607 = load i32, ptr %10, align 4, !dbg !347
  %7608 = sext i32 %7607 to i64, !dbg !348
  %7609 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7608, !dbg !348
  %7610 = getelementptr inbounds %struct.POINT, ptr %7609, i32 0, i32 1, !dbg !349
  %7611 = load double, ptr %7610, align 8, !dbg !349
  %7612 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7613 = load double, ptr %7612, align 8, !dbg !350
  %7614 = fcmp oeq double %7611, %7613, !dbg !351
  br i1 %7614, label %5429, label %7615, !dbg !352

7615:                                             ; preds = %7606, %7599
  br label %7616, !dbg !356

7616:                                             ; preds = %7615
  %7617 = load i32, ptr %10, align 4, !dbg !357
  %7618 = add nsw i32 %7617, 1, !dbg !357
  store i32 %7618, ptr %10, align 4, !dbg !357
  %7619 = load i32, ptr %10, align 4, !dbg !334
  %7620 = load i32, ptr %8, align 4, !dbg !336
  %7621 = icmp slt i32 %7619, %7620, !dbg !337
  br i1 %7621, label %7622, label %14243, !dbg !338

7622:                                             ; preds = %7616
  %7623 = load i32, ptr %10, align 4, !dbg !339
  %7624 = sext i32 %7623 to i64, !dbg !342
  %7625 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7624, !dbg !342
  %7626 = load double, ptr %7625, align 16, !dbg !343
  %7627 = load double, ptr %6, align 8, !dbg !344
  %7628 = fcmp oeq double %7626, %7627, !dbg !345
  br i1 %7628, label %7629, label %7638, !dbg !346

7629:                                             ; preds = %7622
  %7630 = load i32, ptr %10, align 4, !dbg !347
  %7631 = sext i32 %7630 to i64, !dbg !348
  %7632 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7631, !dbg !348
  %7633 = getelementptr inbounds %struct.POINT, ptr %7632, i32 0, i32 1, !dbg !349
  %7634 = load double, ptr %7633, align 8, !dbg !349
  %7635 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7636 = load double, ptr %7635, align 8, !dbg !350
  %7637 = fcmp oeq double %7634, %7636, !dbg !351
  br i1 %7637, label %5429, label %7638, !dbg !352

7638:                                             ; preds = %7629, %7622
  br label %7639, !dbg !356

7639:                                             ; preds = %7638
  %7640 = load i32, ptr %10, align 4, !dbg !357
  %7641 = add nsw i32 %7640, 1, !dbg !357
  store i32 %7641, ptr %10, align 4, !dbg !357
  %7642 = load i32, ptr %10, align 4, !dbg !334
  %7643 = load i32, ptr %8, align 4, !dbg !336
  %7644 = icmp slt i32 %7642, %7643, !dbg !337
  br i1 %7644, label %7645, label %14243, !dbg !338

7645:                                             ; preds = %7639
  %7646 = load i32, ptr %10, align 4, !dbg !339
  %7647 = sext i32 %7646 to i64, !dbg !342
  %7648 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7647, !dbg !342
  %7649 = load double, ptr %7648, align 16, !dbg !343
  %7650 = load double, ptr %6, align 8, !dbg !344
  %7651 = fcmp oeq double %7649, %7650, !dbg !345
  br i1 %7651, label %7652, label %7661, !dbg !346

7652:                                             ; preds = %7645
  %7653 = load i32, ptr %10, align 4, !dbg !347
  %7654 = sext i32 %7653 to i64, !dbg !348
  %7655 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7654, !dbg !348
  %7656 = getelementptr inbounds %struct.POINT, ptr %7655, i32 0, i32 1, !dbg !349
  %7657 = load double, ptr %7656, align 8, !dbg !349
  %7658 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7659 = load double, ptr %7658, align 8, !dbg !350
  %7660 = fcmp oeq double %7657, %7659, !dbg !351
  br i1 %7660, label %5429, label %7661, !dbg !352

7661:                                             ; preds = %7652, %7645
  br label %7662, !dbg !356

7662:                                             ; preds = %7661
  %7663 = load i32, ptr %10, align 4, !dbg !357
  %7664 = add nsw i32 %7663, 1, !dbg !357
  store i32 %7664, ptr %10, align 4, !dbg !357
  %7665 = load i32, ptr %10, align 4, !dbg !334
  %7666 = load i32, ptr %8, align 4, !dbg !336
  %7667 = icmp slt i32 %7665, %7666, !dbg !337
  br i1 %7667, label %7668, label %14243, !dbg !338

7668:                                             ; preds = %7662
  %7669 = load i32, ptr %10, align 4, !dbg !339
  %7670 = sext i32 %7669 to i64, !dbg !342
  %7671 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7670, !dbg !342
  %7672 = load double, ptr %7671, align 16, !dbg !343
  %7673 = load double, ptr %6, align 8, !dbg !344
  %7674 = fcmp oeq double %7672, %7673, !dbg !345
  br i1 %7674, label %7675, label %7684, !dbg !346

7675:                                             ; preds = %7668
  %7676 = load i32, ptr %10, align 4, !dbg !347
  %7677 = sext i32 %7676 to i64, !dbg !348
  %7678 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7677, !dbg !348
  %7679 = getelementptr inbounds %struct.POINT, ptr %7678, i32 0, i32 1, !dbg !349
  %7680 = load double, ptr %7679, align 8, !dbg !349
  %7681 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7682 = load double, ptr %7681, align 8, !dbg !350
  %7683 = fcmp oeq double %7680, %7682, !dbg !351
  br i1 %7683, label %5429, label %7684, !dbg !352

7684:                                             ; preds = %7675, %7668
  br label %7685, !dbg !356

7685:                                             ; preds = %7684
  %7686 = load i32, ptr %10, align 4, !dbg !357
  %7687 = add nsw i32 %7686, 1, !dbg !357
  store i32 %7687, ptr %10, align 4, !dbg !357
  %7688 = load i32, ptr %10, align 4, !dbg !334
  %7689 = load i32, ptr %8, align 4, !dbg !336
  %7690 = icmp slt i32 %7688, %7689, !dbg !337
  br i1 %7690, label %7691, label %14243, !dbg !338

7691:                                             ; preds = %7685
  %7692 = load i32, ptr %10, align 4, !dbg !339
  %7693 = sext i32 %7692 to i64, !dbg !342
  %7694 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7693, !dbg !342
  %7695 = load double, ptr %7694, align 16, !dbg !343
  %7696 = load double, ptr %6, align 8, !dbg !344
  %7697 = fcmp oeq double %7695, %7696, !dbg !345
  br i1 %7697, label %7698, label %7707, !dbg !346

7698:                                             ; preds = %7691
  %7699 = load i32, ptr %10, align 4, !dbg !347
  %7700 = sext i32 %7699 to i64, !dbg !348
  %7701 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7700, !dbg !348
  %7702 = getelementptr inbounds %struct.POINT, ptr %7701, i32 0, i32 1, !dbg !349
  %7703 = load double, ptr %7702, align 8, !dbg !349
  %7704 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7705 = load double, ptr %7704, align 8, !dbg !350
  %7706 = fcmp oeq double %7703, %7705, !dbg !351
  br i1 %7706, label %5429, label %7707, !dbg !352

7707:                                             ; preds = %7698, %7691
  br label %7708, !dbg !356

7708:                                             ; preds = %7707
  %7709 = load i32, ptr %10, align 4, !dbg !357
  %7710 = add nsw i32 %7709, 1, !dbg !357
  store i32 %7710, ptr %10, align 4, !dbg !357
  %7711 = load i32, ptr %10, align 4, !dbg !334
  %7712 = load i32, ptr %8, align 4, !dbg !336
  %7713 = icmp slt i32 %7711, %7712, !dbg !337
  br i1 %7713, label %7714, label %14243, !dbg !338

7714:                                             ; preds = %7708
  %7715 = load i32, ptr %10, align 4, !dbg !339
  %7716 = sext i32 %7715 to i64, !dbg !342
  %7717 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7716, !dbg !342
  %7718 = load double, ptr %7717, align 16, !dbg !343
  %7719 = load double, ptr %6, align 8, !dbg !344
  %7720 = fcmp oeq double %7718, %7719, !dbg !345
  br i1 %7720, label %7721, label %7730, !dbg !346

7721:                                             ; preds = %7714
  %7722 = load i32, ptr %10, align 4, !dbg !347
  %7723 = sext i32 %7722 to i64, !dbg !348
  %7724 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7723, !dbg !348
  %7725 = getelementptr inbounds %struct.POINT, ptr %7724, i32 0, i32 1, !dbg !349
  %7726 = load double, ptr %7725, align 8, !dbg !349
  %7727 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7728 = load double, ptr %7727, align 8, !dbg !350
  %7729 = fcmp oeq double %7726, %7728, !dbg !351
  br i1 %7729, label %5429, label %7730, !dbg !352

7730:                                             ; preds = %7721, %7714
  br label %7731, !dbg !356

7731:                                             ; preds = %7730
  %7732 = load i32, ptr %10, align 4, !dbg !357
  %7733 = add nsw i32 %7732, 1, !dbg !357
  store i32 %7733, ptr %10, align 4, !dbg !357
  %7734 = load i32, ptr %10, align 4, !dbg !334
  %7735 = load i32, ptr %8, align 4, !dbg !336
  %7736 = icmp slt i32 %7734, %7735, !dbg !337
  br i1 %7736, label %7737, label %14243, !dbg !338

7737:                                             ; preds = %7731
  %7738 = load i32, ptr %10, align 4, !dbg !339
  %7739 = sext i32 %7738 to i64, !dbg !342
  %7740 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7739, !dbg !342
  %7741 = load double, ptr %7740, align 16, !dbg !343
  %7742 = load double, ptr %6, align 8, !dbg !344
  %7743 = fcmp oeq double %7741, %7742, !dbg !345
  br i1 %7743, label %7744, label %7753, !dbg !346

7744:                                             ; preds = %7737
  %7745 = load i32, ptr %10, align 4, !dbg !347
  %7746 = sext i32 %7745 to i64, !dbg !348
  %7747 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7746, !dbg !348
  %7748 = getelementptr inbounds %struct.POINT, ptr %7747, i32 0, i32 1, !dbg !349
  %7749 = load double, ptr %7748, align 8, !dbg !349
  %7750 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7751 = load double, ptr %7750, align 8, !dbg !350
  %7752 = fcmp oeq double %7749, %7751, !dbg !351
  br i1 %7752, label %5429, label %7753, !dbg !352

7753:                                             ; preds = %7744, %7737
  br label %7754, !dbg !356

7754:                                             ; preds = %7753
  %7755 = load i32, ptr %10, align 4, !dbg !357
  %7756 = add nsw i32 %7755, 1, !dbg !357
  store i32 %7756, ptr %10, align 4, !dbg !357
  %7757 = load i32, ptr %10, align 4, !dbg !334
  %7758 = load i32, ptr %8, align 4, !dbg !336
  %7759 = icmp slt i32 %7757, %7758, !dbg !337
  br i1 %7759, label %7760, label %14243, !dbg !338

7760:                                             ; preds = %7754
  %7761 = load i32, ptr %10, align 4, !dbg !339
  %7762 = sext i32 %7761 to i64, !dbg !342
  %7763 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7762, !dbg !342
  %7764 = load double, ptr %7763, align 16, !dbg !343
  %7765 = load double, ptr %6, align 8, !dbg !344
  %7766 = fcmp oeq double %7764, %7765, !dbg !345
  br i1 %7766, label %7767, label %7776, !dbg !346

7767:                                             ; preds = %7760
  %7768 = load i32, ptr %10, align 4, !dbg !347
  %7769 = sext i32 %7768 to i64, !dbg !348
  %7770 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7769, !dbg !348
  %7771 = getelementptr inbounds %struct.POINT, ptr %7770, i32 0, i32 1, !dbg !349
  %7772 = load double, ptr %7771, align 8, !dbg !349
  %7773 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7774 = load double, ptr %7773, align 8, !dbg !350
  %7775 = fcmp oeq double %7772, %7774, !dbg !351
  br i1 %7775, label %5429, label %7776, !dbg !352

7776:                                             ; preds = %7767, %7760
  br label %7777, !dbg !356

7777:                                             ; preds = %7776
  %7778 = load i32, ptr %10, align 4, !dbg !357
  %7779 = add nsw i32 %7778, 1, !dbg !357
  store i32 %7779, ptr %10, align 4, !dbg !357
  %7780 = load i32, ptr %10, align 4, !dbg !334
  %7781 = load i32, ptr %8, align 4, !dbg !336
  %7782 = icmp slt i32 %7780, %7781, !dbg !337
  br i1 %7782, label %7783, label %14243, !dbg !338

7783:                                             ; preds = %7777
  %7784 = load i32, ptr %10, align 4, !dbg !339
  %7785 = sext i32 %7784 to i64, !dbg !342
  %7786 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7785, !dbg !342
  %7787 = load double, ptr %7786, align 16, !dbg !343
  %7788 = load double, ptr %6, align 8, !dbg !344
  %7789 = fcmp oeq double %7787, %7788, !dbg !345
  br i1 %7789, label %7790, label %7799, !dbg !346

7790:                                             ; preds = %7783
  %7791 = load i32, ptr %10, align 4, !dbg !347
  %7792 = sext i32 %7791 to i64, !dbg !348
  %7793 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7792, !dbg !348
  %7794 = getelementptr inbounds %struct.POINT, ptr %7793, i32 0, i32 1, !dbg !349
  %7795 = load double, ptr %7794, align 8, !dbg !349
  %7796 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7797 = load double, ptr %7796, align 8, !dbg !350
  %7798 = fcmp oeq double %7795, %7797, !dbg !351
  br i1 %7798, label %5429, label %7799, !dbg !352

7799:                                             ; preds = %7790, %7783
  br label %7800, !dbg !356

7800:                                             ; preds = %7799
  %7801 = load i32, ptr %10, align 4, !dbg !357
  %7802 = add nsw i32 %7801, 1, !dbg !357
  store i32 %7802, ptr %10, align 4, !dbg !357
  %7803 = load i32, ptr %10, align 4, !dbg !334
  %7804 = load i32, ptr %8, align 4, !dbg !336
  %7805 = icmp slt i32 %7803, %7804, !dbg !337
  br i1 %7805, label %7806, label %14243, !dbg !338

7806:                                             ; preds = %7800
  %7807 = load i32, ptr %10, align 4, !dbg !339
  %7808 = sext i32 %7807 to i64, !dbg !342
  %7809 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7808, !dbg !342
  %7810 = load double, ptr %7809, align 16, !dbg !343
  %7811 = load double, ptr %6, align 8, !dbg !344
  %7812 = fcmp oeq double %7810, %7811, !dbg !345
  br i1 %7812, label %7813, label %7822, !dbg !346

7813:                                             ; preds = %7806
  %7814 = load i32, ptr %10, align 4, !dbg !347
  %7815 = sext i32 %7814 to i64, !dbg !348
  %7816 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7815, !dbg !348
  %7817 = getelementptr inbounds %struct.POINT, ptr %7816, i32 0, i32 1, !dbg !349
  %7818 = load double, ptr %7817, align 8, !dbg !349
  %7819 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7820 = load double, ptr %7819, align 8, !dbg !350
  %7821 = fcmp oeq double %7818, %7820, !dbg !351
  br i1 %7821, label %5429, label %7822, !dbg !352

7822:                                             ; preds = %7813, %7806
  br label %7823, !dbg !356

7823:                                             ; preds = %7822
  %7824 = load i32, ptr %10, align 4, !dbg !357
  %7825 = add nsw i32 %7824, 1, !dbg !357
  store i32 %7825, ptr %10, align 4, !dbg !357
  %7826 = load i32, ptr %10, align 4, !dbg !334
  %7827 = load i32, ptr %8, align 4, !dbg !336
  %7828 = icmp slt i32 %7826, %7827, !dbg !337
  br i1 %7828, label %7829, label %14243, !dbg !338

7829:                                             ; preds = %7823
  %7830 = load i32, ptr %10, align 4, !dbg !339
  %7831 = sext i32 %7830 to i64, !dbg !342
  %7832 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7831, !dbg !342
  %7833 = load double, ptr %7832, align 16, !dbg !343
  %7834 = load double, ptr %6, align 8, !dbg !344
  %7835 = fcmp oeq double %7833, %7834, !dbg !345
  br i1 %7835, label %7836, label %7845, !dbg !346

7836:                                             ; preds = %7829
  %7837 = load i32, ptr %10, align 4, !dbg !347
  %7838 = sext i32 %7837 to i64, !dbg !348
  %7839 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7838, !dbg !348
  %7840 = getelementptr inbounds %struct.POINT, ptr %7839, i32 0, i32 1, !dbg !349
  %7841 = load double, ptr %7840, align 8, !dbg !349
  %7842 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7843 = load double, ptr %7842, align 8, !dbg !350
  %7844 = fcmp oeq double %7841, %7843, !dbg !351
  br i1 %7844, label %5429, label %7845, !dbg !352

7845:                                             ; preds = %7836, %7829
  br label %7846, !dbg !356

7846:                                             ; preds = %7845
  %7847 = load i32, ptr %10, align 4, !dbg !357
  %7848 = add nsw i32 %7847, 1, !dbg !357
  store i32 %7848, ptr %10, align 4, !dbg !357
  %7849 = load i32, ptr %10, align 4, !dbg !334
  %7850 = load i32, ptr %8, align 4, !dbg !336
  %7851 = icmp slt i32 %7849, %7850, !dbg !337
  br i1 %7851, label %7852, label %14243, !dbg !338

7852:                                             ; preds = %7846
  %7853 = load i32, ptr %10, align 4, !dbg !339
  %7854 = sext i32 %7853 to i64, !dbg !342
  %7855 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7854, !dbg !342
  %7856 = load double, ptr %7855, align 16, !dbg !343
  %7857 = load double, ptr %6, align 8, !dbg !344
  %7858 = fcmp oeq double %7856, %7857, !dbg !345
  br i1 %7858, label %7859, label %7868, !dbg !346

7859:                                             ; preds = %7852
  %7860 = load i32, ptr %10, align 4, !dbg !347
  %7861 = sext i32 %7860 to i64, !dbg !348
  %7862 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7861, !dbg !348
  %7863 = getelementptr inbounds %struct.POINT, ptr %7862, i32 0, i32 1, !dbg !349
  %7864 = load double, ptr %7863, align 8, !dbg !349
  %7865 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7866 = load double, ptr %7865, align 8, !dbg !350
  %7867 = fcmp oeq double %7864, %7866, !dbg !351
  br i1 %7867, label %5429, label %7868, !dbg !352

7868:                                             ; preds = %7859, %7852
  br label %7869, !dbg !356

7869:                                             ; preds = %7868
  %7870 = load i32, ptr %10, align 4, !dbg !357
  %7871 = add nsw i32 %7870, 1, !dbg !357
  store i32 %7871, ptr %10, align 4, !dbg !357
  %7872 = load i32, ptr %10, align 4, !dbg !334
  %7873 = load i32, ptr %8, align 4, !dbg !336
  %7874 = icmp slt i32 %7872, %7873, !dbg !337
  br i1 %7874, label %7875, label %14243, !dbg !338

7875:                                             ; preds = %7869
  %7876 = load i32, ptr %10, align 4, !dbg !339
  %7877 = sext i32 %7876 to i64, !dbg !342
  %7878 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7877, !dbg !342
  %7879 = load double, ptr %7878, align 16, !dbg !343
  %7880 = load double, ptr %6, align 8, !dbg !344
  %7881 = fcmp oeq double %7879, %7880, !dbg !345
  br i1 %7881, label %7882, label %7891, !dbg !346

7882:                                             ; preds = %7875
  %7883 = load i32, ptr %10, align 4, !dbg !347
  %7884 = sext i32 %7883 to i64, !dbg !348
  %7885 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7884, !dbg !348
  %7886 = getelementptr inbounds %struct.POINT, ptr %7885, i32 0, i32 1, !dbg !349
  %7887 = load double, ptr %7886, align 8, !dbg !349
  %7888 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7889 = load double, ptr %7888, align 8, !dbg !350
  %7890 = fcmp oeq double %7887, %7889, !dbg !351
  br i1 %7890, label %5429, label %7891, !dbg !352

7891:                                             ; preds = %7882, %7875
  br label %7892, !dbg !356

7892:                                             ; preds = %7891
  %7893 = load i32, ptr %10, align 4, !dbg !357
  %7894 = add nsw i32 %7893, 1, !dbg !357
  store i32 %7894, ptr %10, align 4, !dbg !357
  %7895 = load i32, ptr %10, align 4, !dbg !334
  %7896 = load i32, ptr %8, align 4, !dbg !336
  %7897 = icmp slt i32 %7895, %7896, !dbg !337
  br i1 %7897, label %7898, label %14243, !dbg !338

7898:                                             ; preds = %7892
  %7899 = load i32, ptr %10, align 4, !dbg !339
  %7900 = sext i32 %7899 to i64, !dbg !342
  %7901 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7900, !dbg !342
  %7902 = load double, ptr %7901, align 16, !dbg !343
  %7903 = load double, ptr %6, align 8, !dbg !344
  %7904 = fcmp oeq double %7902, %7903, !dbg !345
  br i1 %7904, label %7905, label %7914, !dbg !346

7905:                                             ; preds = %7898
  %7906 = load i32, ptr %10, align 4, !dbg !347
  %7907 = sext i32 %7906 to i64, !dbg !348
  %7908 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7907, !dbg !348
  %7909 = getelementptr inbounds %struct.POINT, ptr %7908, i32 0, i32 1, !dbg !349
  %7910 = load double, ptr %7909, align 8, !dbg !349
  %7911 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7912 = load double, ptr %7911, align 8, !dbg !350
  %7913 = fcmp oeq double %7910, %7912, !dbg !351
  br i1 %7913, label %5429, label %7914, !dbg !352

7914:                                             ; preds = %7905, %7898
  br label %7915, !dbg !356

7915:                                             ; preds = %7914
  %7916 = load i32, ptr %10, align 4, !dbg !357
  %7917 = add nsw i32 %7916, 1, !dbg !357
  store i32 %7917, ptr %10, align 4, !dbg !357
  %7918 = load i32, ptr %10, align 4, !dbg !334
  %7919 = load i32, ptr %8, align 4, !dbg !336
  %7920 = icmp slt i32 %7918, %7919, !dbg !337
  br i1 %7920, label %7921, label %14243, !dbg !338

7921:                                             ; preds = %7915
  %7922 = load i32, ptr %10, align 4, !dbg !339
  %7923 = sext i32 %7922 to i64, !dbg !342
  %7924 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7923, !dbg !342
  %7925 = load double, ptr %7924, align 16, !dbg !343
  %7926 = load double, ptr %6, align 8, !dbg !344
  %7927 = fcmp oeq double %7925, %7926, !dbg !345
  br i1 %7927, label %7928, label %7937, !dbg !346

7928:                                             ; preds = %7921
  %7929 = load i32, ptr %10, align 4, !dbg !347
  %7930 = sext i32 %7929 to i64, !dbg !348
  %7931 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7930, !dbg !348
  %7932 = getelementptr inbounds %struct.POINT, ptr %7931, i32 0, i32 1, !dbg !349
  %7933 = load double, ptr %7932, align 8, !dbg !349
  %7934 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7935 = load double, ptr %7934, align 8, !dbg !350
  %7936 = fcmp oeq double %7933, %7935, !dbg !351
  br i1 %7936, label %5429, label %7937, !dbg !352

7937:                                             ; preds = %7928, %7921
  br label %7938, !dbg !356

7938:                                             ; preds = %7937
  %7939 = load i32, ptr %10, align 4, !dbg !357
  %7940 = add nsw i32 %7939, 1, !dbg !357
  store i32 %7940, ptr %10, align 4, !dbg !357
  %7941 = load i32, ptr %10, align 4, !dbg !334
  %7942 = load i32, ptr %8, align 4, !dbg !336
  %7943 = icmp slt i32 %7941, %7942, !dbg !337
  br i1 %7943, label %7944, label %14243, !dbg !338

7944:                                             ; preds = %7938
  %7945 = load i32, ptr %10, align 4, !dbg !339
  %7946 = sext i32 %7945 to i64, !dbg !342
  %7947 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7946, !dbg !342
  %7948 = load double, ptr %7947, align 16, !dbg !343
  %7949 = load double, ptr %6, align 8, !dbg !344
  %7950 = fcmp oeq double %7948, %7949, !dbg !345
  br i1 %7950, label %7951, label %7960, !dbg !346

7951:                                             ; preds = %7944
  %7952 = load i32, ptr %10, align 4, !dbg !347
  %7953 = sext i32 %7952 to i64, !dbg !348
  %7954 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7953, !dbg !348
  %7955 = getelementptr inbounds %struct.POINT, ptr %7954, i32 0, i32 1, !dbg !349
  %7956 = load double, ptr %7955, align 8, !dbg !349
  %7957 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7958 = load double, ptr %7957, align 8, !dbg !350
  %7959 = fcmp oeq double %7956, %7958, !dbg !351
  br i1 %7959, label %5429, label %7960, !dbg !352

7960:                                             ; preds = %7951, %7944
  br label %7961, !dbg !356

7961:                                             ; preds = %7960
  %7962 = load i32, ptr %10, align 4, !dbg !357
  %7963 = add nsw i32 %7962, 1, !dbg !357
  store i32 %7963, ptr %10, align 4, !dbg !357
  %7964 = load i32, ptr %10, align 4, !dbg !334
  %7965 = load i32, ptr %8, align 4, !dbg !336
  %7966 = icmp slt i32 %7964, %7965, !dbg !337
  br i1 %7966, label %7967, label %14243, !dbg !338

7967:                                             ; preds = %7961
  %7968 = load i32, ptr %10, align 4, !dbg !339
  %7969 = sext i32 %7968 to i64, !dbg !342
  %7970 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7969, !dbg !342
  %7971 = load double, ptr %7970, align 16, !dbg !343
  %7972 = load double, ptr %6, align 8, !dbg !344
  %7973 = fcmp oeq double %7971, %7972, !dbg !345
  br i1 %7973, label %7974, label %7983, !dbg !346

7974:                                             ; preds = %7967
  %7975 = load i32, ptr %10, align 4, !dbg !347
  %7976 = sext i32 %7975 to i64, !dbg !348
  %7977 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7976, !dbg !348
  %7978 = getelementptr inbounds %struct.POINT, ptr %7977, i32 0, i32 1, !dbg !349
  %7979 = load double, ptr %7978, align 8, !dbg !349
  %7980 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %7981 = load double, ptr %7980, align 8, !dbg !350
  %7982 = fcmp oeq double %7979, %7981, !dbg !351
  br i1 %7982, label %5429, label %7983, !dbg !352

7983:                                             ; preds = %7974, %7967
  br label %7984, !dbg !356

7984:                                             ; preds = %7983
  %7985 = load i32, ptr %10, align 4, !dbg !357
  %7986 = add nsw i32 %7985, 1, !dbg !357
  store i32 %7986, ptr %10, align 4, !dbg !357
  %7987 = load i32, ptr %10, align 4, !dbg !334
  %7988 = load i32, ptr %8, align 4, !dbg !336
  %7989 = icmp slt i32 %7987, %7988, !dbg !337
  br i1 %7989, label %7990, label %14243, !dbg !338

7990:                                             ; preds = %7984
  %7991 = load i32, ptr %10, align 4, !dbg !339
  %7992 = sext i32 %7991 to i64, !dbg !342
  %7993 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7992, !dbg !342
  %7994 = load double, ptr %7993, align 16, !dbg !343
  %7995 = load double, ptr %6, align 8, !dbg !344
  %7996 = fcmp oeq double %7994, %7995, !dbg !345
  br i1 %7996, label %7997, label %8006, !dbg !346

7997:                                             ; preds = %7990
  %7998 = load i32, ptr %10, align 4, !dbg !347
  %7999 = sext i32 %7998 to i64, !dbg !348
  %8000 = getelementptr inbounds %struct.POINT, ptr %26, i64 %7999, !dbg !348
  %8001 = getelementptr inbounds %struct.POINT, ptr %8000, i32 0, i32 1, !dbg !349
  %8002 = load double, ptr %8001, align 8, !dbg !349
  %8003 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8004 = load double, ptr %8003, align 8, !dbg !350
  %8005 = fcmp oeq double %8002, %8004, !dbg !351
  br i1 %8005, label %5429, label %8006, !dbg !352

8006:                                             ; preds = %7997, %7990
  br label %8007, !dbg !356

8007:                                             ; preds = %8006
  %8008 = load i32, ptr %10, align 4, !dbg !357
  %8009 = add nsw i32 %8008, 1, !dbg !357
  store i32 %8009, ptr %10, align 4, !dbg !357
  %8010 = load i32, ptr %10, align 4, !dbg !334
  %8011 = load i32, ptr %8, align 4, !dbg !336
  %8012 = icmp slt i32 %8010, %8011, !dbg !337
  br i1 %8012, label %8013, label %14243, !dbg !338

8013:                                             ; preds = %8007
  %8014 = load i32, ptr %10, align 4, !dbg !339
  %8015 = sext i32 %8014 to i64, !dbg !342
  %8016 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8015, !dbg !342
  %8017 = load double, ptr %8016, align 16, !dbg !343
  %8018 = load double, ptr %6, align 8, !dbg !344
  %8019 = fcmp oeq double %8017, %8018, !dbg !345
  br i1 %8019, label %8020, label %8029, !dbg !346

8020:                                             ; preds = %8013
  %8021 = load i32, ptr %10, align 4, !dbg !347
  %8022 = sext i32 %8021 to i64, !dbg !348
  %8023 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8022, !dbg !348
  %8024 = getelementptr inbounds %struct.POINT, ptr %8023, i32 0, i32 1, !dbg !349
  %8025 = load double, ptr %8024, align 8, !dbg !349
  %8026 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8027 = load double, ptr %8026, align 8, !dbg !350
  %8028 = fcmp oeq double %8025, %8027, !dbg !351
  br i1 %8028, label %5429, label %8029, !dbg !352

8029:                                             ; preds = %8020, %8013
  br label %8030, !dbg !356

8030:                                             ; preds = %8029
  %8031 = load i32, ptr %10, align 4, !dbg !357
  %8032 = add nsw i32 %8031, 1, !dbg !357
  store i32 %8032, ptr %10, align 4, !dbg !357
  %8033 = load i32, ptr %10, align 4, !dbg !334
  %8034 = load i32, ptr %8, align 4, !dbg !336
  %8035 = icmp slt i32 %8033, %8034, !dbg !337
  br i1 %8035, label %8036, label %14243, !dbg !338

8036:                                             ; preds = %8030
  %8037 = load i32, ptr %10, align 4, !dbg !339
  %8038 = sext i32 %8037 to i64, !dbg !342
  %8039 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8038, !dbg !342
  %8040 = load double, ptr %8039, align 16, !dbg !343
  %8041 = load double, ptr %6, align 8, !dbg !344
  %8042 = fcmp oeq double %8040, %8041, !dbg !345
  br i1 %8042, label %8043, label %8052, !dbg !346

8043:                                             ; preds = %8036
  %8044 = load i32, ptr %10, align 4, !dbg !347
  %8045 = sext i32 %8044 to i64, !dbg !348
  %8046 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8045, !dbg !348
  %8047 = getelementptr inbounds %struct.POINT, ptr %8046, i32 0, i32 1, !dbg !349
  %8048 = load double, ptr %8047, align 8, !dbg !349
  %8049 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8050 = load double, ptr %8049, align 8, !dbg !350
  %8051 = fcmp oeq double %8048, %8050, !dbg !351
  br i1 %8051, label %5429, label %8052, !dbg !352

8052:                                             ; preds = %8043, %8036
  br label %8053, !dbg !356

8053:                                             ; preds = %8052
  %8054 = load i32, ptr %10, align 4, !dbg !357
  %8055 = add nsw i32 %8054, 1, !dbg !357
  store i32 %8055, ptr %10, align 4, !dbg !357
  %8056 = load i32, ptr %10, align 4, !dbg !334
  %8057 = load i32, ptr %8, align 4, !dbg !336
  %8058 = icmp slt i32 %8056, %8057, !dbg !337
  br i1 %8058, label %8059, label %14243, !dbg !338

8059:                                             ; preds = %8053
  %8060 = load i32, ptr %10, align 4, !dbg !339
  %8061 = sext i32 %8060 to i64, !dbg !342
  %8062 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8061, !dbg !342
  %8063 = load double, ptr %8062, align 16, !dbg !343
  %8064 = load double, ptr %6, align 8, !dbg !344
  %8065 = fcmp oeq double %8063, %8064, !dbg !345
  br i1 %8065, label %8066, label %8075, !dbg !346

8066:                                             ; preds = %8059
  %8067 = load i32, ptr %10, align 4, !dbg !347
  %8068 = sext i32 %8067 to i64, !dbg !348
  %8069 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8068, !dbg !348
  %8070 = getelementptr inbounds %struct.POINT, ptr %8069, i32 0, i32 1, !dbg !349
  %8071 = load double, ptr %8070, align 8, !dbg !349
  %8072 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8073 = load double, ptr %8072, align 8, !dbg !350
  %8074 = fcmp oeq double %8071, %8073, !dbg !351
  br i1 %8074, label %5429, label %8075, !dbg !352

8075:                                             ; preds = %8066, %8059
  br label %8076, !dbg !356

8076:                                             ; preds = %8075
  %8077 = load i32, ptr %10, align 4, !dbg !357
  %8078 = add nsw i32 %8077, 1, !dbg !357
  store i32 %8078, ptr %10, align 4, !dbg !357
  %8079 = load i32, ptr %10, align 4, !dbg !334
  %8080 = load i32, ptr %8, align 4, !dbg !336
  %8081 = icmp slt i32 %8079, %8080, !dbg !337
  br i1 %8081, label %8082, label %14243, !dbg !338

8082:                                             ; preds = %8076
  %8083 = load i32, ptr %10, align 4, !dbg !339
  %8084 = sext i32 %8083 to i64, !dbg !342
  %8085 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8084, !dbg !342
  %8086 = load double, ptr %8085, align 16, !dbg !343
  %8087 = load double, ptr %6, align 8, !dbg !344
  %8088 = fcmp oeq double %8086, %8087, !dbg !345
  br i1 %8088, label %8089, label %8098, !dbg !346

8089:                                             ; preds = %8082
  %8090 = load i32, ptr %10, align 4, !dbg !347
  %8091 = sext i32 %8090 to i64, !dbg !348
  %8092 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8091, !dbg !348
  %8093 = getelementptr inbounds %struct.POINT, ptr %8092, i32 0, i32 1, !dbg !349
  %8094 = load double, ptr %8093, align 8, !dbg !349
  %8095 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8096 = load double, ptr %8095, align 8, !dbg !350
  %8097 = fcmp oeq double %8094, %8096, !dbg !351
  br i1 %8097, label %5429, label %8098, !dbg !352

8098:                                             ; preds = %8089, %8082
  br label %8099, !dbg !356

8099:                                             ; preds = %8098
  %8100 = load i32, ptr %10, align 4, !dbg !357
  %8101 = add nsw i32 %8100, 1, !dbg !357
  store i32 %8101, ptr %10, align 4, !dbg !357
  %8102 = load i32, ptr %10, align 4, !dbg !334
  %8103 = load i32, ptr %8, align 4, !dbg !336
  %8104 = icmp slt i32 %8102, %8103, !dbg !337
  br i1 %8104, label %8105, label %14243, !dbg !338

8105:                                             ; preds = %8099
  %8106 = load i32, ptr %10, align 4, !dbg !339
  %8107 = sext i32 %8106 to i64, !dbg !342
  %8108 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8107, !dbg !342
  %8109 = load double, ptr %8108, align 16, !dbg !343
  %8110 = load double, ptr %6, align 8, !dbg !344
  %8111 = fcmp oeq double %8109, %8110, !dbg !345
  br i1 %8111, label %8112, label %8121, !dbg !346

8112:                                             ; preds = %8105
  %8113 = load i32, ptr %10, align 4, !dbg !347
  %8114 = sext i32 %8113 to i64, !dbg !348
  %8115 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8114, !dbg !348
  %8116 = getelementptr inbounds %struct.POINT, ptr %8115, i32 0, i32 1, !dbg !349
  %8117 = load double, ptr %8116, align 8, !dbg !349
  %8118 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8119 = load double, ptr %8118, align 8, !dbg !350
  %8120 = fcmp oeq double %8117, %8119, !dbg !351
  br i1 %8120, label %5429, label %8121, !dbg !352

8121:                                             ; preds = %8112, %8105
  br label %8122, !dbg !356

8122:                                             ; preds = %8121
  %8123 = load i32, ptr %10, align 4, !dbg !357
  %8124 = add nsw i32 %8123, 1, !dbg !357
  store i32 %8124, ptr %10, align 4, !dbg !357
  %8125 = load i32, ptr %10, align 4, !dbg !334
  %8126 = load i32, ptr %8, align 4, !dbg !336
  %8127 = icmp slt i32 %8125, %8126, !dbg !337
  br i1 %8127, label %8128, label %14243, !dbg !338

8128:                                             ; preds = %8122
  %8129 = load i32, ptr %10, align 4, !dbg !339
  %8130 = sext i32 %8129 to i64, !dbg !342
  %8131 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8130, !dbg !342
  %8132 = load double, ptr %8131, align 16, !dbg !343
  %8133 = load double, ptr %6, align 8, !dbg !344
  %8134 = fcmp oeq double %8132, %8133, !dbg !345
  br i1 %8134, label %8135, label %8144, !dbg !346

8135:                                             ; preds = %8128
  %8136 = load i32, ptr %10, align 4, !dbg !347
  %8137 = sext i32 %8136 to i64, !dbg !348
  %8138 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8137, !dbg !348
  %8139 = getelementptr inbounds %struct.POINT, ptr %8138, i32 0, i32 1, !dbg !349
  %8140 = load double, ptr %8139, align 8, !dbg !349
  %8141 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8142 = load double, ptr %8141, align 8, !dbg !350
  %8143 = fcmp oeq double %8140, %8142, !dbg !351
  br i1 %8143, label %5429, label %8144, !dbg !352

8144:                                             ; preds = %8135, %8128
  br label %8145, !dbg !356

8145:                                             ; preds = %8144
  %8146 = load i32, ptr %10, align 4, !dbg !357
  %8147 = add nsw i32 %8146, 1, !dbg !357
  store i32 %8147, ptr %10, align 4, !dbg !357
  %8148 = load i32, ptr %10, align 4, !dbg !334
  %8149 = load i32, ptr %8, align 4, !dbg !336
  %8150 = icmp slt i32 %8148, %8149, !dbg !337
  br i1 %8150, label %8151, label %14243, !dbg !338

8151:                                             ; preds = %8145
  %8152 = load i32, ptr %10, align 4, !dbg !339
  %8153 = sext i32 %8152 to i64, !dbg !342
  %8154 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8153, !dbg !342
  %8155 = load double, ptr %8154, align 16, !dbg !343
  %8156 = load double, ptr %6, align 8, !dbg !344
  %8157 = fcmp oeq double %8155, %8156, !dbg !345
  br i1 %8157, label %8158, label %8167, !dbg !346

8158:                                             ; preds = %8151
  %8159 = load i32, ptr %10, align 4, !dbg !347
  %8160 = sext i32 %8159 to i64, !dbg !348
  %8161 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8160, !dbg !348
  %8162 = getelementptr inbounds %struct.POINT, ptr %8161, i32 0, i32 1, !dbg !349
  %8163 = load double, ptr %8162, align 8, !dbg !349
  %8164 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8165 = load double, ptr %8164, align 8, !dbg !350
  %8166 = fcmp oeq double %8163, %8165, !dbg !351
  br i1 %8166, label %5429, label %8167, !dbg !352

8167:                                             ; preds = %8158, %8151
  br label %8168, !dbg !356

8168:                                             ; preds = %8167
  %8169 = load i32, ptr %10, align 4, !dbg !357
  %8170 = add nsw i32 %8169, 1, !dbg !357
  store i32 %8170, ptr %10, align 4, !dbg !357
  %8171 = load i32, ptr %10, align 4, !dbg !334
  %8172 = load i32, ptr %8, align 4, !dbg !336
  %8173 = icmp slt i32 %8171, %8172, !dbg !337
  br i1 %8173, label %8174, label %14243, !dbg !338

8174:                                             ; preds = %8168
  %8175 = load i32, ptr %10, align 4, !dbg !339
  %8176 = sext i32 %8175 to i64, !dbg !342
  %8177 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8176, !dbg !342
  %8178 = load double, ptr %8177, align 16, !dbg !343
  %8179 = load double, ptr %6, align 8, !dbg !344
  %8180 = fcmp oeq double %8178, %8179, !dbg !345
  br i1 %8180, label %8181, label %8190, !dbg !346

8181:                                             ; preds = %8174
  %8182 = load i32, ptr %10, align 4, !dbg !347
  %8183 = sext i32 %8182 to i64, !dbg !348
  %8184 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8183, !dbg !348
  %8185 = getelementptr inbounds %struct.POINT, ptr %8184, i32 0, i32 1, !dbg !349
  %8186 = load double, ptr %8185, align 8, !dbg !349
  %8187 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8188 = load double, ptr %8187, align 8, !dbg !350
  %8189 = fcmp oeq double %8186, %8188, !dbg !351
  br i1 %8189, label %5429, label %8190, !dbg !352

8190:                                             ; preds = %8181, %8174
  br label %8191, !dbg !356

8191:                                             ; preds = %8190
  %8192 = load i32, ptr %10, align 4, !dbg !357
  %8193 = add nsw i32 %8192, 1, !dbg !357
  store i32 %8193, ptr %10, align 4, !dbg !357
  %8194 = load i32, ptr %10, align 4, !dbg !334
  %8195 = load i32, ptr %8, align 4, !dbg !336
  %8196 = icmp slt i32 %8194, %8195, !dbg !337
  br i1 %8196, label %8197, label %14243, !dbg !338

8197:                                             ; preds = %8191
  %8198 = load i32, ptr %10, align 4, !dbg !339
  %8199 = sext i32 %8198 to i64, !dbg !342
  %8200 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8199, !dbg !342
  %8201 = load double, ptr %8200, align 16, !dbg !343
  %8202 = load double, ptr %6, align 8, !dbg !344
  %8203 = fcmp oeq double %8201, %8202, !dbg !345
  br i1 %8203, label %8204, label %8213, !dbg !346

8204:                                             ; preds = %8197
  %8205 = load i32, ptr %10, align 4, !dbg !347
  %8206 = sext i32 %8205 to i64, !dbg !348
  %8207 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8206, !dbg !348
  %8208 = getelementptr inbounds %struct.POINT, ptr %8207, i32 0, i32 1, !dbg !349
  %8209 = load double, ptr %8208, align 8, !dbg !349
  %8210 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8211 = load double, ptr %8210, align 8, !dbg !350
  %8212 = fcmp oeq double %8209, %8211, !dbg !351
  br i1 %8212, label %5429, label %8213, !dbg !352

8213:                                             ; preds = %8204, %8197
  br label %8214, !dbg !356

8214:                                             ; preds = %8213
  %8215 = load i32, ptr %10, align 4, !dbg !357
  %8216 = add nsw i32 %8215, 1, !dbg !357
  store i32 %8216, ptr %10, align 4, !dbg !357
  %8217 = load i32, ptr %10, align 4, !dbg !334
  %8218 = load i32, ptr %8, align 4, !dbg !336
  %8219 = icmp slt i32 %8217, %8218, !dbg !337
  br i1 %8219, label %8220, label %14243, !dbg !338

8220:                                             ; preds = %8214
  %8221 = load i32, ptr %10, align 4, !dbg !339
  %8222 = sext i32 %8221 to i64, !dbg !342
  %8223 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8222, !dbg !342
  %8224 = load double, ptr %8223, align 16, !dbg !343
  %8225 = load double, ptr %6, align 8, !dbg !344
  %8226 = fcmp oeq double %8224, %8225, !dbg !345
  br i1 %8226, label %8227, label %8236, !dbg !346

8227:                                             ; preds = %8220
  %8228 = load i32, ptr %10, align 4, !dbg !347
  %8229 = sext i32 %8228 to i64, !dbg !348
  %8230 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8229, !dbg !348
  %8231 = getelementptr inbounds %struct.POINT, ptr %8230, i32 0, i32 1, !dbg !349
  %8232 = load double, ptr %8231, align 8, !dbg !349
  %8233 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8234 = load double, ptr %8233, align 8, !dbg !350
  %8235 = fcmp oeq double %8232, %8234, !dbg !351
  br i1 %8235, label %5429, label %8236, !dbg !352

8236:                                             ; preds = %8227, %8220
  br label %8237, !dbg !356

8237:                                             ; preds = %8236
  %8238 = load i32, ptr %10, align 4, !dbg !357
  %8239 = add nsw i32 %8238, 1, !dbg !357
  store i32 %8239, ptr %10, align 4, !dbg !357
  %8240 = load i32, ptr %10, align 4, !dbg !334
  %8241 = load i32, ptr %8, align 4, !dbg !336
  %8242 = icmp slt i32 %8240, %8241, !dbg !337
  br i1 %8242, label %8243, label %14243, !dbg !338

8243:                                             ; preds = %8237
  %8244 = load i32, ptr %10, align 4, !dbg !339
  %8245 = sext i32 %8244 to i64, !dbg !342
  %8246 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8245, !dbg !342
  %8247 = load double, ptr %8246, align 16, !dbg !343
  %8248 = load double, ptr %6, align 8, !dbg !344
  %8249 = fcmp oeq double %8247, %8248, !dbg !345
  br i1 %8249, label %8250, label %8259, !dbg !346

8250:                                             ; preds = %8243
  %8251 = load i32, ptr %10, align 4, !dbg !347
  %8252 = sext i32 %8251 to i64, !dbg !348
  %8253 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8252, !dbg !348
  %8254 = getelementptr inbounds %struct.POINT, ptr %8253, i32 0, i32 1, !dbg !349
  %8255 = load double, ptr %8254, align 8, !dbg !349
  %8256 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8257 = load double, ptr %8256, align 8, !dbg !350
  %8258 = fcmp oeq double %8255, %8257, !dbg !351
  br i1 %8258, label %5429, label %8259, !dbg !352

8259:                                             ; preds = %8250, %8243
  br label %8260, !dbg !356

8260:                                             ; preds = %8259
  %8261 = load i32, ptr %10, align 4, !dbg !357
  %8262 = add nsw i32 %8261, 1, !dbg !357
  store i32 %8262, ptr %10, align 4, !dbg !357
  %8263 = load i32, ptr %10, align 4, !dbg !334
  %8264 = load i32, ptr %8, align 4, !dbg !336
  %8265 = icmp slt i32 %8263, %8264, !dbg !337
  br i1 %8265, label %8266, label %14243, !dbg !338

8266:                                             ; preds = %8260
  %8267 = load i32, ptr %10, align 4, !dbg !339
  %8268 = sext i32 %8267 to i64, !dbg !342
  %8269 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8268, !dbg !342
  %8270 = load double, ptr %8269, align 16, !dbg !343
  %8271 = load double, ptr %6, align 8, !dbg !344
  %8272 = fcmp oeq double %8270, %8271, !dbg !345
  br i1 %8272, label %8273, label %8282, !dbg !346

8273:                                             ; preds = %8266
  %8274 = load i32, ptr %10, align 4, !dbg !347
  %8275 = sext i32 %8274 to i64, !dbg !348
  %8276 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8275, !dbg !348
  %8277 = getelementptr inbounds %struct.POINT, ptr %8276, i32 0, i32 1, !dbg !349
  %8278 = load double, ptr %8277, align 8, !dbg !349
  %8279 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8280 = load double, ptr %8279, align 8, !dbg !350
  %8281 = fcmp oeq double %8278, %8280, !dbg !351
  br i1 %8281, label %5429, label %8282, !dbg !352

8282:                                             ; preds = %8273, %8266
  br label %8283, !dbg !356

8283:                                             ; preds = %8282
  %8284 = load i32, ptr %10, align 4, !dbg !357
  %8285 = add nsw i32 %8284, 1, !dbg !357
  store i32 %8285, ptr %10, align 4, !dbg !357
  %8286 = load i32, ptr %10, align 4, !dbg !334
  %8287 = load i32, ptr %8, align 4, !dbg !336
  %8288 = icmp slt i32 %8286, %8287, !dbg !337
  br i1 %8288, label %8289, label %14243, !dbg !338

8289:                                             ; preds = %8283
  %8290 = load i32, ptr %10, align 4, !dbg !339
  %8291 = sext i32 %8290 to i64, !dbg !342
  %8292 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8291, !dbg !342
  %8293 = load double, ptr %8292, align 16, !dbg !343
  %8294 = load double, ptr %6, align 8, !dbg !344
  %8295 = fcmp oeq double %8293, %8294, !dbg !345
  br i1 %8295, label %8296, label %8305, !dbg !346

8296:                                             ; preds = %8289
  %8297 = load i32, ptr %10, align 4, !dbg !347
  %8298 = sext i32 %8297 to i64, !dbg !348
  %8299 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8298, !dbg !348
  %8300 = getelementptr inbounds %struct.POINT, ptr %8299, i32 0, i32 1, !dbg !349
  %8301 = load double, ptr %8300, align 8, !dbg !349
  %8302 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8303 = load double, ptr %8302, align 8, !dbg !350
  %8304 = fcmp oeq double %8301, %8303, !dbg !351
  br i1 %8304, label %5429, label %8305, !dbg !352

8305:                                             ; preds = %8296, %8289
  br label %8306, !dbg !356

8306:                                             ; preds = %8305
  %8307 = load i32, ptr %10, align 4, !dbg !357
  %8308 = add nsw i32 %8307, 1, !dbg !357
  store i32 %8308, ptr %10, align 4, !dbg !357
  %8309 = load i32, ptr %10, align 4, !dbg !334
  %8310 = load i32, ptr %8, align 4, !dbg !336
  %8311 = icmp slt i32 %8309, %8310, !dbg !337
  br i1 %8311, label %8312, label %14243, !dbg !338

8312:                                             ; preds = %8306
  %8313 = load i32, ptr %10, align 4, !dbg !339
  %8314 = sext i32 %8313 to i64, !dbg !342
  %8315 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8314, !dbg !342
  %8316 = load double, ptr %8315, align 16, !dbg !343
  %8317 = load double, ptr %6, align 8, !dbg !344
  %8318 = fcmp oeq double %8316, %8317, !dbg !345
  br i1 %8318, label %8319, label %8328, !dbg !346

8319:                                             ; preds = %8312
  %8320 = load i32, ptr %10, align 4, !dbg !347
  %8321 = sext i32 %8320 to i64, !dbg !348
  %8322 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8321, !dbg !348
  %8323 = getelementptr inbounds %struct.POINT, ptr %8322, i32 0, i32 1, !dbg !349
  %8324 = load double, ptr %8323, align 8, !dbg !349
  %8325 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8326 = load double, ptr %8325, align 8, !dbg !350
  %8327 = fcmp oeq double %8324, %8326, !dbg !351
  br i1 %8327, label %5429, label %8328, !dbg !352

8328:                                             ; preds = %8319, %8312
  br label %8329, !dbg !356

8329:                                             ; preds = %8328
  %8330 = load i32, ptr %10, align 4, !dbg !357
  %8331 = add nsw i32 %8330, 1, !dbg !357
  store i32 %8331, ptr %10, align 4, !dbg !357
  %8332 = load i32, ptr %10, align 4, !dbg !334
  %8333 = load i32, ptr %8, align 4, !dbg !336
  %8334 = icmp slt i32 %8332, %8333, !dbg !337
  br i1 %8334, label %8335, label %14243, !dbg !338

8335:                                             ; preds = %8329
  %8336 = load i32, ptr %10, align 4, !dbg !339
  %8337 = sext i32 %8336 to i64, !dbg !342
  %8338 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8337, !dbg !342
  %8339 = load double, ptr %8338, align 16, !dbg !343
  %8340 = load double, ptr %6, align 8, !dbg !344
  %8341 = fcmp oeq double %8339, %8340, !dbg !345
  br i1 %8341, label %8342, label %8351, !dbg !346

8342:                                             ; preds = %8335
  %8343 = load i32, ptr %10, align 4, !dbg !347
  %8344 = sext i32 %8343 to i64, !dbg !348
  %8345 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8344, !dbg !348
  %8346 = getelementptr inbounds %struct.POINT, ptr %8345, i32 0, i32 1, !dbg !349
  %8347 = load double, ptr %8346, align 8, !dbg !349
  %8348 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8349 = load double, ptr %8348, align 8, !dbg !350
  %8350 = fcmp oeq double %8347, %8349, !dbg !351
  br i1 %8350, label %5429, label %8351, !dbg !352

8351:                                             ; preds = %8342, %8335
  br label %8352, !dbg !356

8352:                                             ; preds = %8351
  %8353 = load i32, ptr %10, align 4, !dbg !357
  %8354 = add nsw i32 %8353, 1, !dbg !357
  store i32 %8354, ptr %10, align 4, !dbg !357
  %8355 = load i32, ptr %10, align 4, !dbg !334
  %8356 = load i32, ptr %8, align 4, !dbg !336
  %8357 = icmp slt i32 %8355, %8356, !dbg !337
  br i1 %8357, label %8358, label %14243, !dbg !338

8358:                                             ; preds = %8352
  %8359 = load i32, ptr %10, align 4, !dbg !339
  %8360 = sext i32 %8359 to i64, !dbg !342
  %8361 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8360, !dbg !342
  %8362 = load double, ptr %8361, align 16, !dbg !343
  %8363 = load double, ptr %6, align 8, !dbg !344
  %8364 = fcmp oeq double %8362, %8363, !dbg !345
  br i1 %8364, label %8365, label %8374, !dbg !346

8365:                                             ; preds = %8358
  %8366 = load i32, ptr %10, align 4, !dbg !347
  %8367 = sext i32 %8366 to i64, !dbg !348
  %8368 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8367, !dbg !348
  %8369 = getelementptr inbounds %struct.POINT, ptr %8368, i32 0, i32 1, !dbg !349
  %8370 = load double, ptr %8369, align 8, !dbg !349
  %8371 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8372 = load double, ptr %8371, align 8, !dbg !350
  %8373 = fcmp oeq double %8370, %8372, !dbg !351
  br i1 %8373, label %5429, label %8374, !dbg !352

8374:                                             ; preds = %8365, %8358
  br label %8375, !dbg !356

8375:                                             ; preds = %8374
  %8376 = load i32, ptr %10, align 4, !dbg !357
  %8377 = add nsw i32 %8376, 1, !dbg !357
  store i32 %8377, ptr %10, align 4, !dbg !357
  %8378 = load i32, ptr %10, align 4, !dbg !334
  %8379 = load i32, ptr %8, align 4, !dbg !336
  %8380 = icmp slt i32 %8378, %8379, !dbg !337
  br i1 %8380, label %8381, label %14243, !dbg !338

8381:                                             ; preds = %8375
  %8382 = load i32, ptr %10, align 4, !dbg !339
  %8383 = sext i32 %8382 to i64, !dbg !342
  %8384 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8383, !dbg !342
  %8385 = load double, ptr %8384, align 16, !dbg !343
  %8386 = load double, ptr %6, align 8, !dbg !344
  %8387 = fcmp oeq double %8385, %8386, !dbg !345
  br i1 %8387, label %8388, label %8397, !dbg !346

8388:                                             ; preds = %8381
  %8389 = load i32, ptr %10, align 4, !dbg !347
  %8390 = sext i32 %8389 to i64, !dbg !348
  %8391 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8390, !dbg !348
  %8392 = getelementptr inbounds %struct.POINT, ptr %8391, i32 0, i32 1, !dbg !349
  %8393 = load double, ptr %8392, align 8, !dbg !349
  %8394 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8395 = load double, ptr %8394, align 8, !dbg !350
  %8396 = fcmp oeq double %8393, %8395, !dbg !351
  br i1 %8396, label %5429, label %8397, !dbg !352

8397:                                             ; preds = %8388, %8381
  br label %8398, !dbg !356

8398:                                             ; preds = %8397
  %8399 = load i32, ptr %10, align 4, !dbg !357
  %8400 = add nsw i32 %8399, 1, !dbg !357
  store i32 %8400, ptr %10, align 4, !dbg !357
  %8401 = load i32, ptr %10, align 4, !dbg !334
  %8402 = load i32, ptr %8, align 4, !dbg !336
  %8403 = icmp slt i32 %8401, %8402, !dbg !337
  br i1 %8403, label %8404, label %14243, !dbg !338

8404:                                             ; preds = %8398
  %8405 = load i32, ptr %10, align 4, !dbg !339
  %8406 = sext i32 %8405 to i64, !dbg !342
  %8407 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8406, !dbg !342
  %8408 = load double, ptr %8407, align 16, !dbg !343
  %8409 = load double, ptr %6, align 8, !dbg !344
  %8410 = fcmp oeq double %8408, %8409, !dbg !345
  br i1 %8410, label %8411, label %8420, !dbg !346

8411:                                             ; preds = %8404
  %8412 = load i32, ptr %10, align 4, !dbg !347
  %8413 = sext i32 %8412 to i64, !dbg !348
  %8414 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8413, !dbg !348
  %8415 = getelementptr inbounds %struct.POINT, ptr %8414, i32 0, i32 1, !dbg !349
  %8416 = load double, ptr %8415, align 8, !dbg !349
  %8417 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8418 = load double, ptr %8417, align 8, !dbg !350
  %8419 = fcmp oeq double %8416, %8418, !dbg !351
  br i1 %8419, label %5429, label %8420, !dbg !352

8420:                                             ; preds = %8411, %8404
  br label %8421, !dbg !356

8421:                                             ; preds = %8420
  %8422 = load i32, ptr %10, align 4, !dbg !357
  %8423 = add nsw i32 %8422, 1, !dbg !357
  store i32 %8423, ptr %10, align 4, !dbg !357
  %8424 = load i32, ptr %10, align 4, !dbg !334
  %8425 = load i32, ptr %8, align 4, !dbg !336
  %8426 = icmp slt i32 %8424, %8425, !dbg !337
  br i1 %8426, label %8427, label %14243, !dbg !338

8427:                                             ; preds = %8421
  %8428 = load i32, ptr %10, align 4, !dbg !339
  %8429 = sext i32 %8428 to i64, !dbg !342
  %8430 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8429, !dbg !342
  %8431 = load double, ptr %8430, align 16, !dbg !343
  %8432 = load double, ptr %6, align 8, !dbg !344
  %8433 = fcmp oeq double %8431, %8432, !dbg !345
  br i1 %8433, label %8434, label %8443, !dbg !346

8434:                                             ; preds = %8427
  %8435 = load i32, ptr %10, align 4, !dbg !347
  %8436 = sext i32 %8435 to i64, !dbg !348
  %8437 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8436, !dbg !348
  %8438 = getelementptr inbounds %struct.POINT, ptr %8437, i32 0, i32 1, !dbg !349
  %8439 = load double, ptr %8438, align 8, !dbg !349
  %8440 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8441 = load double, ptr %8440, align 8, !dbg !350
  %8442 = fcmp oeq double %8439, %8441, !dbg !351
  br i1 %8442, label %5429, label %8443, !dbg !352

8443:                                             ; preds = %8434, %8427
  br label %8444, !dbg !356

8444:                                             ; preds = %8443
  %8445 = load i32, ptr %10, align 4, !dbg !357
  %8446 = add nsw i32 %8445, 1, !dbg !357
  store i32 %8446, ptr %10, align 4, !dbg !357
  %8447 = load i32, ptr %10, align 4, !dbg !334
  %8448 = load i32, ptr %8, align 4, !dbg !336
  %8449 = icmp slt i32 %8447, %8448, !dbg !337
  br i1 %8449, label %8450, label %14243, !dbg !338

8450:                                             ; preds = %8444
  %8451 = load i32, ptr %10, align 4, !dbg !339
  %8452 = sext i32 %8451 to i64, !dbg !342
  %8453 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8452, !dbg !342
  %8454 = load double, ptr %8453, align 16, !dbg !343
  %8455 = load double, ptr %6, align 8, !dbg !344
  %8456 = fcmp oeq double %8454, %8455, !dbg !345
  br i1 %8456, label %8457, label %8466, !dbg !346

8457:                                             ; preds = %8450
  %8458 = load i32, ptr %10, align 4, !dbg !347
  %8459 = sext i32 %8458 to i64, !dbg !348
  %8460 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8459, !dbg !348
  %8461 = getelementptr inbounds %struct.POINT, ptr %8460, i32 0, i32 1, !dbg !349
  %8462 = load double, ptr %8461, align 8, !dbg !349
  %8463 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8464 = load double, ptr %8463, align 8, !dbg !350
  %8465 = fcmp oeq double %8462, %8464, !dbg !351
  br i1 %8465, label %5429, label %8466, !dbg !352

8466:                                             ; preds = %8457, %8450
  br label %8467, !dbg !356

8467:                                             ; preds = %8466
  %8468 = load i32, ptr %10, align 4, !dbg !357
  %8469 = add nsw i32 %8468, 1, !dbg !357
  store i32 %8469, ptr %10, align 4, !dbg !357
  %8470 = load i32, ptr %10, align 4, !dbg !334
  %8471 = load i32, ptr %8, align 4, !dbg !336
  %8472 = icmp slt i32 %8470, %8471, !dbg !337
  br i1 %8472, label %8473, label %14243, !dbg !338

8473:                                             ; preds = %8467
  %8474 = load i32, ptr %10, align 4, !dbg !339
  %8475 = sext i32 %8474 to i64, !dbg !342
  %8476 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8475, !dbg !342
  %8477 = load double, ptr %8476, align 16, !dbg !343
  %8478 = load double, ptr %6, align 8, !dbg !344
  %8479 = fcmp oeq double %8477, %8478, !dbg !345
  br i1 %8479, label %8480, label %8489, !dbg !346

8480:                                             ; preds = %8473
  %8481 = load i32, ptr %10, align 4, !dbg !347
  %8482 = sext i32 %8481 to i64, !dbg !348
  %8483 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8482, !dbg !348
  %8484 = getelementptr inbounds %struct.POINT, ptr %8483, i32 0, i32 1, !dbg !349
  %8485 = load double, ptr %8484, align 8, !dbg !349
  %8486 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8487 = load double, ptr %8486, align 8, !dbg !350
  %8488 = fcmp oeq double %8485, %8487, !dbg !351
  br i1 %8488, label %5429, label %8489, !dbg !352

8489:                                             ; preds = %8480, %8473
  br label %8490, !dbg !356

8490:                                             ; preds = %8489
  %8491 = load i32, ptr %10, align 4, !dbg !357
  %8492 = add nsw i32 %8491, 1, !dbg !357
  store i32 %8492, ptr %10, align 4, !dbg !357
  %8493 = load i32, ptr %10, align 4, !dbg !334
  %8494 = load i32, ptr %8, align 4, !dbg !336
  %8495 = icmp slt i32 %8493, %8494, !dbg !337
  br i1 %8495, label %8496, label %14243, !dbg !338

8496:                                             ; preds = %8490
  %8497 = load i32, ptr %10, align 4, !dbg !339
  %8498 = sext i32 %8497 to i64, !dbg !342
  %8499 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8498, !dbg !342
  %8500 = load double, ptr %8499, align 16, !dbg !343
  %8501 = load double, ptr %6, align 8, !dbg !344
  %8502 = fcmp oeq double %8500, %8501, !dbg !345
  br i1 %8502, label %8503, label %8512, !dbg !346

8503:                                             ; preds = %8496
  %8504 = load i32, ptr %10, align 4, !dbg !347
  %8505 = sext i32 %8504 to i64, !dbg !348
  %8506 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8505, !dbg !348
  %8507 = getelementptr inbounds %struct.POINT, ptr %8506, i32 0, i32 1, !dbg !349
  %8508 = load double, ptr %8507, align 8, !dbg !349
  %8509 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8510 = load double, ptr %8509, align 8, !dbg !350
  %8511 = fcmp oeq double %8508, %8510, !dbg !351
  br i1 %8511, label %5429, label %8512, !dbg !352

8512:                                             ; preds = %8503, %8496
  br label %8513, !dbg !356

8513:                                             ; preds = %8512
  %8514 = load i32, ptr %10, align 4, !dbg !357
  %8515 = add nsw i32 %8514, 1, !dbg !357
  store i32 %8515, ptr %10, align 4, !dbg !357
  %8516 = load i32, ptr %10, align 4, !dbg !334
  %8517 = load i32, ptr %8, align 4, !dbg !336
  %8518 = icmp slt i32 %8516, %8517, !dbg !337
  br i1 %8518, label %8519, label %14243, !dbg !338

8519:                                             ; preds = %8513
  %8520 = load i32, ptr %10, align 4, !dbg !339
  %8521 = sext i32 %8520 to i64, !dbg !342
  %8522 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8521, !dbg !342
  %8523 = load double, ptr %8522, align 16, !dbg !343
  %8524 = load double, ptr %6, align 8, !dbg !344
  %8525 = fcmp oeq double %8523, %8524, !dbg !345
  br i1 %8525, label %8526, label %8535, !dbg !346

8526:                                             ; preds = %8519
  %8527 = load i32, ptr %10, align 4, !dbg !347
  %8528 = sext i32 %8527 to i64, !dbg !348
  %8529 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8528, !dbg !348
  %8530 = getelementptr inbounds %struct.POINT, ptr %8529, i32 0, i32 1, !dbg !349
  %8531 = load double, ptr %8530, align 8, !dbg !349
  %8532 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8533 = load double, ptr %8532, align 8, !dbg !350
  %8534 = fcmp oeq double %8531, %8533, !dbg !351
  br i1 %8534, label %5429, label %8535, !dbg !352

8535:                                             ; preds = %8526, %8519
  br label %8536, !dbg !356

8536:                                             ; preds = %8535
  %8537 = load i32, ptr %10, align 4, !dbg !357
  %8538 = add nsw i32 %8537, 1, !dbg !357
  store i32 %8538, ptr %10, align 4, !dbg !357
  %8539 = load i32, ptr %10, align 4, !dbg !334
  %8540 = load i32, ptr %8, align 4, !dbg !336
  %8541 = icmp slt i32 %8539, %8540, !dbg !337
  br i1 %8541, label %8542, label %14243, !dbg !338

8542:                                             ; preds = %8536
  %8543 = load i32, ptr %10, align 4, !dbg !339
  %8544 = sext i32 %8543 to i64, !dbg !342
  %8545 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8544, !dbg !342
  %8546 = load double, ptr %8545, align 16, !dbg !343
  %8547 = load double, ptr %6, align 8, !dbg !344
  %8548 = fcmp oeq double %8546, %8547, !dbg !345
  br i1 %8548, label %8549, label %8558, !dbg !346

8549:                                             ; preds = %8542
  %8550 = load i32, ptr %10, align 4, !dbg !347
  %8551 = sext i32 %8550 to i64, !dbg !348
  %8552 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8551, !dbg !348
  %8553 = getelementptr inbounds %struct.POINT, ptr %8552, i32 0, i32 1, !dbg !349
  %8554 = load double, ptr %8553, align 8, !dbg !349
  %8555 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8556 = load double, ptr %8555, align 8, !dbg !350
  %8557 = fcmp oeq double %8554, %8556, !dbg !351
  br i1 %8557, label %5429, label %8558, !dbg !352

8558:                                             ; preds = %8549, %8542
  br label %8559, !dbg !356

8559:                                             ; preds = %8558
  %8560 = load i32, ptr %10, align 4, !dbg !357
  %8561 = add nsw i32 %8560, 1, !dbg !357
  store i32 %8561, ptr %10, align 4, !dbg !357
  %8562 = load i32, ptr %10, align 4, !dbg !334
  %8563 = load i32, ptr %8, align 4, !dbg !336
  %8564 = icmp slt i32 %8562, %8563, !dbg !337
  br i1 %8564, label %8565, label %14243, !dbg !338

8565:                                             ; preds = %8559
  %8566 = load i32, ptr %10, align 4, !dbg !339
  %8567 = sext i32 %8566 to i64, !dbg !342
  %8568 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8567, !dbg !342
  %8569 = load double, ptr %8568, align 16, !dbg !343
  %8570 = load double, ptr %6, align 8, !dbg !344
  %8571 = fcmp oeq double %8569, %8570, !dbg !345
  br i1 %8571, label %8572, label %8581, !dbg !346

8572:                                             ; preds = %8565
  %8573 = load i32, ptr %10, align 4, !dbg !347
  %8574 = sext i32 %8573 to i64, !dbg !348
  %8575 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8574, !dbg !348
  %8576 = getelementptr inbounds %struct.POINT, ptr %8575, i32 0, i32 1, !dbg !349
  %8577 = load double, ptr %8576, align 8, !dbg !349
  %8578 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8579 = load double, ptr %8578, align 8, !dbg !350
  %8580 = fcmp oeq double %8577, %8579, !dbg !351
  br i1 %8580, label %5429, label %8581, !dbg !352

8581:                                             ; preds = %8572, %8565
  br label %8582, !dbg !356

8582:                                             ; preds = %8581
  %8583 = load i32, ptr %10, align 4, !dbg !357
  %8584 = add nsw i32 %8583, 1, !dbg !357
  store i32 %8584, ptr %10, align 4, !dbg !357
  %8585 = load i32, ptr %10, align 4, !dbg !334
  %8586 = load i32, ptr %8, align 4, !dbg !336
  %8587 = icmp slt i32 %8585, %8586, !dbg !337
  br i1 %8587, label %8588, label %14243, !dbg !338

8588:                                             ; preds = %8582
  %8589 = load i32, ptr %10, align 4, !dbg !339
  %8590 = sext i32 %8589 to i64, !dbg !342
  %8591 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8590, !dbg !342
  %8592 = load double, ptr %8591, align 16, !dbg !343
  %8593 = load double, ptr %6, align 8, !dbg !344
  %8594 = fcmp oeq double %8592, %8593, !dbg !345
  br i1 %8594, label %8595, label %8604, !dbg !346

8595:                                             ; preds = %8588
  %8596 = load i32, ptr %10, align 4, !dbg !347
  %8597 = sext i32 %8596 to i64, !dbg !348
  %8598 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8597, !dbg !348
  %8599 = getelementptr inbounds %struct.POINT, ptr %8598, i32 0, i32 1, !dbg !349
  %8600 = load double, ptr %8599, align 8, !dbg !349
  %8601 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8602 = load double, ptr %8601, align 8, !dbg !350
  %8603 = fcmp oeq double %8600, %8602, !dbg !351
  br i1 %8603, label %5429, label %8604, !dbg !352

8604:                                             ; preds = %8595, %8588
  br label %8605, !dbg !356

8605:                                             ; preds = %8604
  %8606 = load i32, ptr %10, align 4, !dbg !357
  %8607 = add nsw i32 %8606, 1, !dbg !357
  store i32 %8607, ptr %10, align 4, !dbg !357
  %8608 = load i32, ptr %10, align 4, !dbg !334
  %8609 = load i32, ptr %8, align 4, !dbg !336
  %8610 = icmp slt i32 %8608, %8609, !dbg !337
  br i1 %8610, label %8611, label %14243, !dbg !338

8611:                                             ; preds = %8605
  %8612 = load i32, ptr %10, align 4, !dbg !339
  %8613 = sext i32 %8612 to i64, !dbg !342
  %8614 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8613, !dbg !342
  %8615 = load double, ptr %8614, align 16, !dbg !343
  %8616 = load double, ptr %6, align 8, !dbg !344
  %8617 = fcmp oeq double %8615, %8616, !dbg !345
  br i1 %8617, label %8618, label %8627, !dbg !346

8618:                                             ; preds = %8611
  %8619 = load i32, ptr %10, align 4, !dbg !347
  %8620 = sext i32 %8619 to i64, !dbg !348
  %8621 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8620, !dbg !348
  %8622 = getelementptr inbounds %struct.POINT, ptr %8621, i32 0, i32 1, !dbg !349
  %8623 = load double, ptr %8622, align 8, !dbg !349
  %8624 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8625 = load double, ptr %8624, align 8, !dbg !350
  %8626 = fcmp oeq double %8623, %8625, !dbg !351
  br i1 %8626, label %5429, label %8627, !dbg !352

8627:                                             ; preds = %8618, %8611
  br label %8628, !dbg !356

8628:                                             ; preds = %8627
  %8629 = load i32, ptr %10, align 4, !dbg !357
  %8630 = add nsw i32 %8629, 1, !dbg !357
  store i32 %8630, ptr %10, align 4, !dbg !357
  %8631 = load i32, ptr %10, align 4, !dbg !334
  %8632 = load i32, ptr %8, align 4, !dbg !336
  %8633 = icmp slt i32 %8631, %8632, !dbg !337
  br i1 %8633, label %8634, label %14243, !dbg !338

8634:                                             ; preds = %8628
  %8635 = load i32, ptr %10, align 4, !dbg !339
  %8636 = sext i32 %8635 to i64, !dbg !342
  %8637 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8636, !dbg !342
  %8638 = load double, ptr %8637, align 16, !dbg !343
  %8639 = load double, ptr %6, align 8, !dbg !344
  %8640 = fcmp oeq double %8638, %8639, !dbg !345
  br i1 %8640, label %8641, label %8650, !dbg !346

8641:                                             ; preds = %8634
  %8642 = load i32, ptr %10, align 4, !dbg !347
  %8643 = sext i32 %8642 to i64, !dbg !348
  %8644 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8643, !dbg !348
  %8645 = getelementptr inbounds %struct.POINT, ptr %8644, i32 0, i32 1, !dbg !349
  %8646 = load double, ptr %8645, align 8, !dbg !349
  %8647 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8648 = load double, ptr %8647, align 8, !dbg !350
  %8649 = fcmp oeq double %8646, %8648, !dbg !351
  br i1 %8649, label %5429, label %8650, !dbg !352

8650:                                             ; preds = %8641, %8634
  br label %8651, !dbg !356

8651:                                             ; preds = %8650
  %8652 = load i32, ptr %10, align 4, !dbg !357
  %8653 = add nsw i32 %8652, 1, !dbg !357
  store i32 %8653, ptr %10, align 4, !dbg !357
  %8654 = load i32, ptr %10, align 4, !dbg !334
  %8655 = load i32, ptr %8, align 4, !dbg !336
  %8656 = icmp slt i32 %8654, %8655, !dbg !337
  br i1 %8656, label %8657, label %14243, !dbg !338

8657:                                             ; preds = %8651
  %8658 = load i32, ptr %10, align 4, !dbg !339
  %8659 = sext i32 %8658 to i64, !dbg !342
  %8660 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8659, !dbg !342
  %8661 = load double, ptr %8660, align 16, !dbg !343
  %8662 = load double, ptr %6, align 8, !dbg !344
  %8663 = fcmp oeq double %8661, %8662, !dbg !345
  br i1 %8663, label %8664, label %8673, !dbg !346

8664:                                             ; preds = %8657
  %8665 = load i32, ptr %10, align 4, !dbg !347
  %8666 = sext i32 %8665 to i64, !dbg !348
  %8667 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8666, !dbg !348
  %8668 = getelementptr inbounds %struct.POINT, ptr %8667, i32 0, i32 1, !dbg !349
  %8669 = load double, ptr %8668, align 8, !dbg !349
  %8670 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8671 = load double, ptr %8670, align 8, !dbg !350
  %8672 = fcmp oeq double %8669, %8671, !dbg !351
  br i1 %8672, label %5429, label %8673, !dbg !352

8673:                                             ; preds = %8664, %8657
  br label %8674, !dbg !356

8674:                                             ; preds = %8673
  %8675 = load i32, ptr %10, align 4, !dbg !357
  %8676 = add nsw i32 %8675, 1, !dbg !357
  store i32 %8676, ptr %10, align 4, !dbg !357
  %8677 = load i32, ptr %10, align 4, !dbg !334
  %8678 = load i32, ptr %8, align 4, !dbg !336
  %8679 = icmp slt i32 %8677, %8678, !dbg !337
  br i1 %8679, label %8680, label %14243, !dbg !338

8680:                                             ; preds = %8674
  %8681 = load i32, ptr %10, align 4, !dbg !339
  %8682 = sext i32 %8681 to i64, !dbg !342
  %8683 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8682, !dbg !342
  %8684 = load double, ptr %8683, align 16, !dbg !343
  %8685 = load double, ptr %6, align 8, !dbg !344
  %8686 = fcmp oeq double %8684, %8685, !dbg !345
  br i1 %8686, label %8687, label %8696, !dbg !346

8687:                                             ; preds = %8680
  %8688 = load i32, ptr %10, align 4, !dbg !347
  %8689 = sext i32 %8688 to i64, !dbg !348
  %8690 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8689, !dbg !348
  %8691 = getelementptr inbounds %struct.POINT, ptr %8690, i32 0, i32 1, !dbg !349
  %8692 = load double, ptr %8691, align 8, !dbg !349
  %8693 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8694 = load double, ptr %8693, align 8, !dbg !350
  %8695 = fcmp oeq double %8692, %8694, !dbg !351
  br i1 %8695, label %5429, label %8696, !dbg !352

8696:                                             ; preds = %8687, %8680
  br label %8697, !dbg !356

8697:                                             ; preds = %8696
  %8698 = load i32, ptr %10, align 4, !dbg !357
  %8699 = add nsw i32 %8698, 1, !dbg !357
  store i32 %8699, ptr %10, align 4, !dbg !357
  %8700 = load i32, ptr %10, align 4, !dbg !334
  %8701 = load i32, ptr %8, align 4, !dbg !336
  %8702 = icmp slt i32 %8700, %8701, !dbg !337
  br i1 %8702, label %8703, label %14243, !dbg !338

8703:                                             ; preds = %8697
  %8704 = load i32, ptr %10, align 4, !dbg !339
  %8705 = sext i32 %8704 to i64, !dbg !342
  %8706 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8705, !dbg !342
  %8707 = load double, ptr %8706, align 16, !dbg !343
  %8708 = load double, ptr %6, align 8, !dbg !344
  %8709 = fcmp oeq double %8707, %8708, !dbg !345
  br i1 %8709, label %8710, label %8719, !dbg !346

8710:                                             ; preds = %8703
  %8711 = load i32, ptr %10, align 4, !dbg !347
  %8712 = sext i32 %8711 to i64, !dbg !348
  %8713 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8712, !dbg !348
  %8714 = getelementptr inbounds %struct.POINT, ptr %8713, i32 0, i32 1, !dbg !349
  %8715 = load double, ptr %8714, align 8, !dbg !349
  %8716 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8717 = load double, ptr %8716, align 8, !dbg !350
  %8718 = fcmp oeq double %8715, %8717, !dbg !351
  br i1 %8718, label %5429, label %8719, !dbg !352

8719:                                             ; preds = %8710, %8703
  br label %8720, !dbg !356

8720:                                             ; preds = %8719
  %8721 = load i32, ptr %10, align 4, !dbg !357
  %8722 = add nsw i32 %8721, 1, !dbg !357
  store i32 %8722, ptr %10, align 4, !dbg !357
  %8723 = load i32, ptr %10, align 4, !dbg !334
  %8724 = load i32, ptr %8, align 4, !dbg !336
  %8725 = icmp slt i32 %8723, %8724, !dbg !337
  br i1 %8725, label %8726, label %14243, !dbg !338

8726:                                             ; preds = %8720
  %8727 = load i32, ptr %10, align 4, !dbg !339
  %8728 = sext i32 %8727 to i64, !dbg !342
  %8729 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8728, !dbg !342
  %8730 = load double, ptr %8729, align 16, !dbg !343
  %8731 = load double, ptr %6, align 8, !dbg !344
  %8732 = fcmp oeq double %8730, %8731, !dbg !345
  br i1 %8732, label %8733, label %8742, !dbg !346

8733:                                             ; preds = %8726
  %8734 = load i32, ptr %10, align 4, !dbg !347
  %8735 = sext i32 %8734 to i64, !dbg !348
  %8736 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8735, !dbg !348
  %8737 = getelementptr inbounds %struct.POINT, ptr %8736, i32 0, i32 1, !dbg !349
  %8738 = load double, ptr %8737, align 8, !dbg !349
  %8739 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8740 = load double, ptr %8739, align 8, !dbg !350
  %8741 = fcmp oeq double %8738, %8740, !dbg !351
  br i1 %8741, label %5429, label %8742, !dbg !352

8742:                                             ; preds = %8733, %8726
  br label %8743, !dbg !356

8743:                                             ; preds = %8742
  %8744 = load i32, ptr %10, align 4, !dbg !357
  %8745 = add nsw i32 %8744, 1, !dbg !357
  store i32 %8745, ptr %10, align 4, !dbg !357
  %8746 = load i32, ptr %10, align 4, !dbg !334
  %8747 = load i32, ptr %8, align 4, !dbg !336
  %8748 = icmp slt i32 %8746, %8747, !dbg !337
  br i1 %8748, label %8749, label %14243, !dbg !338

8749:                                             ; preds = %8743
  %8750 = load i32, ptr %10, align 4, !dbg !339
  %8751 = sext i32 %8750 to i64, !dbg !342
  %8752 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8751, !dbg !342
  %8753 = load double, ptr %8752, align 16, !dbg !343
  %8754 = load double, ptr %6, align 8, !dbg !344
  %8755 = fcmp oeq double %8753, %8754, !dbg !345
  br i1 %8755, label %8756, label %8765, !dbg !346

8756:                                             ; preds = %8749
  %8757 = load i32, ptr %10, align 4, !dbg !347
  %8758 = sext i32 %8757 to i64, !dbg !348
  %8759 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8758, !dbg !348
  %8760 = getelementptr inbounds %struct.POINT, ptr %8759, i32 0, i32 1, !dbg !349
  %8761 = load double, ptr %8760, align 8, !dbg !349
  %8762 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8763 = load double, ptr %8762, align 8, !dbg !350
  %8764 = fcmp oeq double %8761, %8763, !dbg !351
  br i1 %8764, label %5429, label %8765, !dbg !352

8765:                                             ; preds = %8756, %8749
  br label %8766, !dbg !356

8766:                                             ; preds = %8765
  %8767 = load i32, ptr %10, align 4, !dbg !357
  %8768 = add nsw i32 %8767, 1, !dbg !357
  store i32 %8768, ptr %10, align 4, !dbg !357
  %8769 = load i32, ptr %10, align 4, !dbg !334
  %8770 = load i32, ptr %8, align 4, !dbg !336
  %8771 = icmp slt i32 %8769, %8770, !dbg !337
  br i1 %8771, label %8772, label %14243, !dbg !338

8772:                                             ; preds = %8766
  %8773 = load i32, ptr %10, align 4, !dbg !339
  %8774 = sext i32 %8773 to i64, !dbg !342
  %8775 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8774, !dbg !342
  %8776 = load double, ptr %8775, align 16, !dbg !343
  %8777 = load double, ptr %6, align 8, !dbg !344
  %8778 = fcmp oeq double %8776, %8777, !dbg !345
  br i1 %8778, label %8779, label %8788, !dbg !346

8779:                                             ; preds = %8772
  %8780 = load i32, ptr %10, align 4, !dbg !347
  %8781 = sext i32 %8780 to i64, !dbg !348
  %8782 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8781, !dbg !348
  %8783 = getelementptr inbounds %struct.POINT, ptr %8782, i32 0, i32 1, !dbg !349
  %8784 = load double, ptr %8783, align 8, !dbg !349
  %8785 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8786 = load double, ptr %8785, align 8, !dbg !350
  %8787 = fcmp oeq double %8784, %8786, !dbg !351
  br i1 %8787, label %5429, label %8788, !dbg !352

8788:                                             ; preds = %8779, %8772
  br label %8789, !dbg !356

8789:                                             ; preds = %8788
  %8790 = load i32, ptr %10, align 4, !dbg !357
  %8791 = add nsw i32 %8790, 1, !dbg !357
  store i32 %8791, ptr %10, align 4, !dbg !357
  %8792 = load i32, ptr %10, align 4, !dbg !334
  %8793 = load i32, ptr %8, align 4, !dbg !336
  %8794 = icmp slt i32 %8792, %8793, !dbg !337
  br i1 %8794, label %8795, label %14243, !dbg !338

8795:                                             ; preds = %8789
  %8796 = load i32, ptr %10, align 4, !dbg !339
  %8797 = sext i32 %8796 to i64, !dbg !342
  %8798 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8797, !dbg !342
  %8799 = load double, ptr %8798, align 16, !dbg !343
  %8800 = load double, ptr %6, align 8, !dbg !344
  %8801 = fcmp oeq double %8799, %8800, !dbg !345
  br i1 %8801, label %8802, label %8811, !dbg !346

8802:                                             ; preds = %8795
  %8803 = load i32, ptr %10, align 4, !dbg !347
  %8804 = sext i32 %8803 to i64, !dbg !348
  %8805 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8804, !dbg !348
  %8806 = getelementptr inbounds %struct.POINT, ptr %8805, i32 0, i32 1, !dbg !349
  %8807 = load double, ptr %8806, align 8, !dbg !349
  %8808 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8809 = load double, ptr %8808, align 8, !dbg !350
  %8810 = fcmp oeq double %8807, %8809, !dbg !351
  br i1 %8810, label %5429, label %8811, !dbg !352

8811:                                             ; preds = %8802, %8795
  br label %8812, !dbg !356

8812:                                             ; preds = %8811
  %8813 = load i32, ptr %10, align 4, !dbg !357
  %8814 = add nsw i32 %8813, 1, !dbg !357
  store i32 %8814, ptr %10, align 4, !dbg !357
  %8815 = load i32, ptr %10, align 4, !dbg !334
  %8816 = load i32, ptr %8, align 4, !dbg !336
  %8817 = icmp slt i32 %8815, %8816, !dbg !337
  br i1 %8817, label %8818, label %14243, !dbg !338

8818:                                             ; preds = %8812
  %8819 = load i32, ptr %10, align 4, !dbg !339
  %8820 = sext i32 %8819 to i64, !dbg !342
  %8821 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8820, !dbg !342
  %8822 = load double, ptr %8821, align 16, !dbg !343
  %8823 = load double, ptr %6, align 8, !dbg !344
  %8824 = fcmp oeq double %8822, %8823, !dbg !345
  br i1 %8824, label %8825, label %8834, !dbg !346

8825:                                             ; preds = %8818
  %8826 = load i32, ptr %10, align 4, !dbg !347
  %8827 = sext i32 %8826 to i64, !dbg !348
  %8828 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8827, !dbg !348
  %8829 = getelementptr inbounds %struct.POINT, ptr %8828, i32 0, i32 1, !dbg !349
  %8830 = load double, ptr %8829, align 8, !dbg !349
  %8831 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8832 = load double, ptr %8831, align 8, !dbg !350
  %8833 = fcmp oeq double %8830, %8832, !dbg !351
  br i1 %8833, label %5429, label %8834, !dbg !352

8834:                                             ; preds = %8825, %8818
  br label %8835, !dbg !356

8835:                                             ; preds = %8834
  %8836 = load i32, ptr %10, align 4, !dbg !357
  %8837 = add nsw i32 %8836, 1, !dbg !357
  store i32 %8837, ptr %10, align 4, !dbg !357
  %8838 = load i32, ptr %10, align 4, !dbg !334
  %8839 = load i32, ptr %8, align 4, !dbg !336
  %8840 = icmp slt i32 %8838, %8839, !dbg !337
  br i1 %8840, label %8841, label %14243, !dbg !338

8841:                                             ; preds = %8835
  %8842 = load i32, ptr %10, align 4, !dbg !339
  %8843 = sext i32 %8842 to i64, !dbg !342
  %8844 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8843, !dbg !342
  %8845 = load double, ptr %8844, align 16, !dbg !343
  %8846 = load double, ptr %6, align 8, !dbg !344
  %8847 = fcmp oeq double %8845, %8846, !dbg !345
  br i1 %8847, label %8848, label %8857, !dbg !346

8848:                                             ; preds = %8841
  %8849 = load i32, ptr %10, align 4, !dbg !347
  %8850 = sext i32 %8849 to i64, !dbg !348
  %8851 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8850, !dbg !348
  %8852 = getelementptr inbounds %struct.POINT, ptr %8851, i32 0, i32 1, !dbg !349
  %8853 = load double, ptr %8852, align 8, !dbg !349
  %8854 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8855 = load double, ptr %8854, align 8, !dbg !350
  %8856 = fcmp oeq double %8853, %8855, !dbg !351
  br i1 %8856, label %5429, label %8857, !dbg !352

8857:                                             ; preds = %8848, %8841
  br label %8858, !dbg !356

8858:                                             ; preds = %8857
  %8859 = load i32, ptr %10, align 4, !dbg !357
  %8860 = add nsw i32 %8859, 1, !dbg !357
  store i32 %8860, ptr %10, align 4, !dbg !357
  %8861 = load i32, ptr %10, align 4, !dbg !334
  %8862 = load i32, ptr %8, align 4, !dbg !336
  %8863 = icmp slt i32 %8861, %8862, !dbg !337
  br i1 %8863, label %8864, label %14243, !dbg !338

8864:                                             ; preds = %8858
  %8865 = load i32, ptr %10, align 4, !dbg !339
  %8866 = sext i32 %8865 to i64, !dbg !342
  %8867 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8866, !dbg !342
  %8868 = load double, ptr %8867, align 16, !dbg !343
  %8869 = load double, ptr %6, align 8, !dbg !344
  %8870 = fcmp oeq double %8868, %8869, !dbg !345
  br i1 %8870, label %8871, label %8880, !dbg !346

8871:                                             ; preds = %8864
  %8872 = load i32, ptr %10, align 4, !dbg !347
  %8873 = sext i32 %8872 to i64, !dbg !348
  %8874 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8873, !dbg !348
  %8875 = getelementptr inbounds %struct.POINT, ptr %8874, i32 0, i32 1, !dbg !349
  %8876 = load double, ptr %8875, align 8, !dbg !349
  %8877 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8878 = load double, ptr %8877, align 8, !dbg !350
  %8879 = fcmp oeq double %8876, %8878, !dbg !351
  br i1 %8879, label %5429, label %8880, !dbg !352

8880:                                             ; preds = %8871, %8864
  br label %8881, !dbg !356

8881:                                             ; preds = %8880
  %8882 = load i32, ptr %10, align 4, !dbg !357
  %8883 = add nsw i32 %8882, 1, !dbg !357
  store i32 %8883, ptr %10, align 4, !dbg !357
  %8884 = load i32, ptr %10, align 4, !dbg !334
  %8885 = load i32, ptr %8, align 4, !dbg !336
  %8886 = icmp slt i32 %8884, %8885, !dbg !337
  br i1 %8886, label %8887, label %14243, !dbg !338

8887:                                             ; preds = %8881
  %8888 = load i32, ptr %10, align 4, !dbg !339
  %8889 = sext i32 %8888 to i64, !dbg !342
  %8890 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8889, !dbg !342
  %8891 = load double, ptr %8890, align 16, !dbg !343
  %8892 = load double, ptr %6, align 8, !dbg !344
  %8893 = fcmp oeq double %8891, %8892, !dbg !345
  br i1 %8893, label %8894, label %8903, !dbg !346

8894:                                             ; preds = %8887
  %8895 = load i32, ptr %10, align 4, !dbg !347
  %8896 = sext i32 %8895 to i64, !dbg !348
  %8897 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8896, !dbg !348
  %8898 = getelementptr inbounds %struct.POINT, ptr %8897, i32 0, i32 1, !dbg !349
  %8899 = load double, ptr %8898, align 8, !dbg !349
  %8900 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8901 = load double, ptr %8900, align 8, !dbg !350
  %8902 = fcmp oeq double %8899, %8901, !dbg !351
  br i1 %8902, label %5429, label %8903, !dbg !352

8903:                                             ; preds = %8894, %8887
  br label %8904, !dbg !356

8904:                                             ; preds = %8903
  %8905 = load i32, ptr %10, align 4, !dbg !357
  %8906 = add nsw i32 %8905, 1, !dbg !357
  store i32 %8906, ptr %10, align 4, !dbg !357
  %8907 = load i32, ptr %10, align 4, !dbg !334
  %8908 = load i32, ptr %8, align 4, !dbg !336
  %8909 = icmp slt i32 %8907, %8908, !dbg !337
  br i1 %8909, label %8910, label %14243, !dbg !338

8910:                                             ; preds = %8904
  %8911 = load i32, ptr %10, align 4, !dbg !339
  %8912 = sext i32 %8911 to i64, !dbg !342
  %8913 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8912, !dbg !342
  %8914 = load double, ptr %8913, align 16, !dbg !343
  %8915 = load double, ptr %6, align 8, !dbg !344
  %8916 = fcmp oeq double %8914, %8915, !dbg !345
  br i1 %8916, label %8917, label %8926, !dbg !346

8917:                                             ; preds = %8910
  %8918 = load i32, ptr %10, align 4, !dbg !347
  %8919 = sext i32 %8918 to i64, !dbg !348
  %8920 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8919, !dbg !348
  %8921 = getelementptr inbounds %struct.POINT, ptr %8920, i32 0, i32 1, !dbg !349
  %8922 = load double, ptr %8921, align 8, !dbg !349
  %8923 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8924 = load double, ptr %8923, align 8, !dbg !350
  %8925 = fcmp oeq double %8922, %8924, !dbg !351
  br i1 %8925, label %5429, label %8926, !dbg !352

8926:                                             ; preds = %8917, %8910
  br label %8927, !dbg !356

8927:                                             ; preds = %8926
  %8928 = load i32, ptr %10, align 4, !dbg !357
  %8929 = add nsw i32 %8928, 1, !dbg !357
  store i32 %8929, ptr %10, align 4, !dbg !357
  %8930 = load i32, ptr %10, align 4, !dbg !334
  %8931 = load i32, ptr %8, align 4, !dbg !336
  %8932 = icmp slt i32 %8930, %8931, !dbg !337
  br i1 %8932, label %8933, label %14243, !dbg !338

8933:                                             ; preds = %8927
  %8934 = load i32, ptr %10, align 4, !dbg !339
  %8935 = sext i32 %8934 to i64, !dbg !342
  %8936 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8935, !dbg !342
  %8937 = load double, ptr %8936, align 16, !dbg !343
  %8938 = load double, ptr %6, align 8, !dbg !344
  %8939 = fcmp oeq double %8937, %8938, !dbg !345
  br i1 %8939, label %8940, label %8949, !dbg !346

8940:                                             ; preds = %8933
  %8941 = load i32, ptr %10, align 4, !dbg !347
  %8942 = sext i32 %8941 to i64, !dbg !348
  %8943 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8942, !dbg !348
  %8944 = getelementptr inbounds %struct.POINT, ptr %8943, i32 0, i32 1, !dbg !349
  %8945 = load double, ptr %8944, align 8, !dbg !349
  %8946 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8947 = load double, ptr %8946, align 8, !dbg !350
  %8948 = fcmp oeq double %8945, %8947, !dbg !351
  br i1 %8948, label %5429, label %8949, !dbg !352

8949:                                             ; preds = %8940, %8933
  br label %8950, !dbg !356

8950:                                             ; preds = %8949
  %8951 = load i32, ptr %10, align 4, !dbg !357
  %8952 = add nsw i32 %8951, 1, !dbg !357
  store i32 %8952, ptr %10, align 4, !dbg !357
  %8953 = load i32, ptr %10, align 4, !dbg !334
  %8954 = load i32, ptr %8, align 4, !dbg !336
  %8955 = icmp slt i32 %8953, %8954, !dbg !337
  br i1 %8955, label %8956, label %14243, !dbg !338

8956:                                             ; preds = %8950
  %8957 = load i32, ptr %10, align 4, !dbg !339
  %8958 = sext i32 %8957 to i64, !dbg !342
  %8959 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8958, !dbg !342
  %8960 = load double, ptr %8959, align 16, !dbg !343
  %8961 = load double, ptr %6, align 8, !dbg !344
  %8962 = fcmp oeq double %8960, %8961, !dbg !345
  br i1 %8962, label %8963, label %8972, !dbg !346

8963:                                             ; preds = %8956
  %8964 = load i32, ptr %10, align 4, !dbg !347
  %8965 = sext i32 %8964 to i64, !dbg !348
  %8966 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8965, !dbg !348
  %8967 = getelementptr inbounds %struct.POINT, ptr %8966, i32 0, i32 1, !dbg !349
  %8968 = load double, ptr %8967, align 8, !dbg !349
  %8969 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8970 = load double, ptr %8969, align 8, !dbg !350
  %8971 = fcmp oeq double %8968, %8970, !dbg !351
  br i1 %8971, label %5429, label %8972, !dbg !352

8972:                                             ; preds = %8963, %8956
  br label %8973, !dbg !356

8973:                                             ; preds = %8972
  %8974 = load i32, ptr %10, align 4, !dbg !357
  %8975 = add nsw i32 %8974, 1, !dbg !357
  store i32 %8975, ptr %10, align 4, !dbg !357
  %8976 = load i32, ptr %10, align 4, !dbg !334
  %8977 = load i32, ptr %8, align 4, !dbg !336
  %8978 = icmp slt i32 %8976, %8977, !dbg !337
  br i1 %8978, label %8979, label %14243, !dbg !338

8979:                                             ; preds = %8973
  %8980 = load i32, ptr %10, align 4, !dbg !339
  %8981 = sext i32 %8980 to i64, !dbg !342
  %8982 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8981, !dbg !342
  %8983 = load double, ptr %8982, align 16, !dbg !343
  %8984 = load double, ptr %6, align 8, !dbg !344
  %8985 = fcmp oeq double %8983, %8984, !dbg !345
  br i1 %8985, label %8986, label %8995, !dbg !346

8986:                                             ; preds = %8979
  %8987 = load i32, ptr %10, align 4, !dbg !347
  %8988 = sext i32 %8987 to i64, !dbg !348
  %8989 = getelementptr inbounds %struct.POINT, ptr %26, i64 %8988, !dbg !348
  %8990 = getelementptr inbounds %struct.POINT, ptr %8989, i32 0, i32 1, !dbg !349
  %8991 = load double, ptr %8990, align 8, !dbg !349
  %8992 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %8993 = load double, ptr %8992, align 8, !dbg !350
  %8994 = fcmp oeq double %8991, %8993, !dbg !351
  br i1 %8994, label %5429, label %8995, !dbg !352

8995:                                             ; preds = %8986, %8979
  br label %8996, !dbg !356

8996:                                             ; preds = %8995
  %8997 = load i32, ptr %10, align 4, !dbg !357
  %8998 = add nsw i32 %8997, 1, !dbg !357
  store i32 %8998, ptr %10, align 4, !dbg !357
  %8999 = load i32, ptr %10, align 4, !dbg !334
  %9000 = load i32, ptr %8, align 4, !dbg !336
  %9001 = icmp slt i32 %8999, %9000, !dbg !337
  br i1 %9001, label %9002, label %14243, !dbg !338

9002:                                             ; preds = %8996
  %9003 = load i32, ptr %10, align 4, !dbg !339
  %9004 = sext i32 %9003 to i64, !dbg !342
  %9005 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9004, !dbg !342
  %9006 = load double, ptr %9005, align 16, !dbg !343
  %9007 = load double, ptr %6, align 8, !dbg !344
  %9008 = fcmp oeq double %9006, %9007, !dbg !345
  br i1 %9008, label %9009, label %9018, !dbg !346

9009:                                             ; preds = %9002
  %9010 = load i32, ptr %10, align 4, !dbg !347
  %9011 = sext i32 %9010 to i64, !dbg !348
  %9012 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9011, !dbg !348
  %9013 = getelementptr inbounds %struct.POINT, ptr %9012, i32 0, i32 1, !dbg !349
  %9014 = load double, ptr %9013, align 8, !dbg !349
  %9015 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9016 = load double, ptr %9015, align 8, !dbg !350
  %9017 = fcmp oeq double %9014, %9016, !dbg !351
  br i1 %9017, label %5429, label %9018, !dbg !352

9018:                                             ; preds = %9009, %9002
  br label %9019, !dbg !356

9019:                                             ; preds = %9018
  %9020 = load i32, ptr %10, align 4, !dbg !357
  %9021 = add nsw i32 %9020, 1, !dbg !357
  store i32 %9021, ptr %10, align 4, !dbg !357
  %9022 = load i32, ptr %10, align 4, !dbg !334
  %9023 = load i32, ptr %8, align 4, !dbg !336
  %9024 = icmp slt i32 %9022, %9023, !dbg !337
  br i1 %9024, label %9025, label %14243, !dbg !338

9025:                                             ; preds = %9019
  %9026 = load i32, ptr %10, align 4, !dbg !339
  %9027 = sext i32 %9026 to i64, !dbg !342
  %9028 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9027, !dbg !342
  %9029 = load double, ptr %9028, align 16, !dbg !343
  %9030 = load double, ptr %6, align 8, !dbg !344
  %9031 = fcmp oeq double %9029, %9030, !dbg !345
  br i1 %9031, label %9032, label %9041, !dbg !346

9032:                                             ; preds = %9025
  %9033 = load i32, ptr %10, align 4, !dbg !347
  %9034 = sext i32 %9033 to i64, !dbg !348
  %9035 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9034, !dbg !348
  %9036 = getelementptr inbounds %struct.POINT, ptr %9035, i32 0, i32 1, !dbg !349
  %9037 = load double, ptr %9036, align 8, !dbg !349
  %9038 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9039 = load double, ptr %9038, align 8, !dbg !350
  %9040 = fcmp oeq double %9037, %9039, !dbg !351
  br i1 %9040, label %5429, label %9041, !dbg !352

9041:                                             ; preds = %9032, %9025
  br label %9042, !dbg !356

9042:                                             ; preds = %9041
  %9043 = load i32, ptr %10, align 4, !dbg !357
  %9044 = add nsw i32 %9043, 1, !dbg !357
  store i32 %9044, ptr %10, align 4, !dbg !357
  %9045 = load i32, ptr %10, align 4, !dbg !334
  %9046 = load i32, ptr %8, align 4, !dbg !336
  %9047 = icmp slt i32 %9045, %9046, !dbg !337
  br i1 %9047, label %9048, label %14243, !dbg !338

9048:                                             ; preds = %9042
  %9049 = load i32, ptr %10, align 4, !dbg !339
  %9050 = sext i32 %9049 to i64, !dbg !342
  %9051 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9050, !dbg !342
  %9052 = load double, ptr %9051, align 16, !dbg !343
  %9053 = load double, ptr %6, align 8, !dbg !344
  %9054 = fcmp oeq double %9052, %9053, !dbg !345
  br i1 %9054, label %9055, label %9064, !dbg !346

9055:                                             ; preds = %9048
  %9056 = load i32, ptr %10, align 4, !dbg !347
  %9057 = sext i32 %9056 to i64, !dbg !348
  %9058 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9057, !dbg !348
  %9059 = getelementptr inbounds %struct.POINT, ptr %9058, i32 0, i32 1, !dbg !349
  %9060 = load double, ptr %9059, align 8, !dbg !349
  %9061 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9062 = load double, ptr %9061, align 8, !dbg !350
  %9063 = fcmp oeq double %9060, %9062, !dbg !351
  br i1 %9063, label %5429, label %9064, !dbg !352

9064:                                             ; preds = %9055, %9048
  br label %9065, !dbg !356

9065:                                             ; preds = %9064
  %9066 = load i32, ptr %10, align 4, !dbg !357
  %9067 = add nsw i32 %9066, 1, !dbg !357
  store i32 %9067, ptr %10, align 4, !dbg !357
  %9068 = load i32, ptr %10, align 4, !dbg !334
  %9069 = load i32, ptr %8, align 4, !dbg !336
  %9070 = icmp slt i32 %9068, %9069, !dbg !337
  br i1 %9070, label %9071, label %14243, !dbg !338

9071:                                             ; preds = %9065
  %9072 = load i32, ptr %10, align 4, !dbg !339
  %9073 = sext i32 %9072 to i64, !dbg !342
  %9074 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9073, !dbg !342
  %9075 = load double, ptr %9074, align 16, !dbg !343
  %9076 = load double, ptr %6, align 8, !dbg !344
  %9077 = fcmp oeq double %9075, %9076, !dbg !345
  br i1 %9077, label %9078, label %9087, !dbg !346

9078:                                             ; preds = %9071
  %9079 = load i32, ptr %10, align 4, !dbg !347
  %9080 = sext i32 %9079 to i64, !dbg !348
  %9081 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9080, !dbg !348
  %9082 = getelementptr inbounds %struct.POINT, ptr %9081, i32 0, i32 1, !dbg !349
  %9083 = load double, ptr %9082, align 8, !dbg !349
  %9084 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9085 = load double, ptr %9084, align 8, !dbg !350
  %9086 = fcmp oeq double %9083, %9085, !dbg !351
  br i1 %9086, label %5429, label %9087, !dbg !352

9087:                                             ; preds = %9078, %9071
  br label %9088, !dbg !356

9088:                                             ; preds = %9087
  %9089 = load i32, ptr %10, align 4, !dbg !357
  %9090 = add nsw i32 %9089, 1, !dbg !357
  store i32 %9090, ptr %10, align 4, !dbg !357
  %9091 = load i32, ptr %10, align 4, !dbg !334
  %9092 = load i32, ptr %8, align 4, !dbg !336
  %9093 = icmp slt i32 %9091, %9092, !dbg !337
  br i1 %9093, label %9094, label %14243, !dbg !338

9094:                                             ; preds = %9088
  %9095 = load i32, ptr %10, align 4, !dbg !339
  %9096 = sext i32 %9095 to i64, !dbg !342
  %9097 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9096, !dbg !342
  %9098 = load double, ptr %9097, align 16, !dbg !343
  %9099 = load double, ptr %6, align 8, !dbg !344
  %9100 = fcmp oeq double %9098, %9099, !dbg !345
  br i1 %9100, label %9101, label %9110, !dbg !346

9101:                                             ; preds = %9094
  %9102 = load i32, ptr %10, align 4, !dbg !347
  %9103 = sext i32 %9102 to i64, !dbg !348
  %9104 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9103, !dbg !348
  %9105 = getelementptr inbounds %struct.POINT, ptr %9104, i32 0, i32 1, !dbg !349
  %9106 = load double, ptr %9105, align 8, !dbg !349
  %9107 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9108 = load double, ptr %9107, align 8, !dbg !350
  %9109 = fcmp oeq double %9106, %9108, !dbg !351
  br i1 %9109, label %5429, label %9110, !dbg !352

9110:                                             ; preds = %9101, %9094
  br label %9111, !dbg !356

9111:                                             ; preds = %9110
  %9112 = load i32, ptr %10, align 4, !dbg !357
  %9113 = add nsw i32 %9112, 1, !dbg !357
  store i32 %9113, ptr %10, align 4, !dbg !357
  %9114 = load i32, ptr %10, align 4, !dbg !334
  %9115 = load i32, ptr %8, align 4, !dbg !336
  %9116 = icmp slt i32 %9114, %9115, !dbg !337
  br i1 %9116, label %9117, label %14243, !dbg !338

9117:                                             ; preds = %9111
  %9118 = load i32, ptr %10, align 4, !dbg !339
  %9119 = sext i32 %9118 to i64, !dbg !342
  %9120 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9119, !dbg !342
  %9121 = load double, ptr %9120, align 16, !dbg !343
  %9122 = load double, ptr %6, align 8, !dbg !344
  %9123 = fcmp oeq double %9121, %9122, !dbg !345
  br i1 %9123, label %9124, label %9133, !dbg !346

9124:                                             ; preds = %9117
  %9125 = load i32, ptr %10, align 4, !dbg !347
  %9126 = sext i32 %9125 to i64, !dbg !348
  %9127 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9126, !dbg !348
  %9128 = getelementptr inbounds %struct.POINT, ptr %9127, i32 0, i32 1, !dbg !349
  %9129 = load double, ptr %9128, align 8, !dbg !349
  %9130 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9131 = load double, ptr %9130, align 8, !dbg !350
  %9132 = fcmp oeq double %9129, %9131, !dbg !351
  br i1 %9132, label %5429, label %9133, !dbg !352

9133:                                             ; preds = %9124, %9117
  br label %9134, !dbg !356

9134:                                             ; preds = %9133
  %9135 = load i32, ptr %10, align 4, !dbg !357
  %9136 = add nsw i32 %9135, 1, !dbg !357
  store i32 %9136, ptr %10, align 4, !dbg !357
  %9137 = load i32, ptr %10, align 4, !dbg !334
  %9138 = load i32, ptr %8, align 4, !dbg !336
  %9139 = icmp slt i32 %9137, %9138, !dbg !337
  br i1 %9139, label %9140, label %14243, !dbg !338

9140:                                             ; preds = %9134
  %9141 = load i32, ptr %10, align 4, !dbg !339
  %9142 = sext i32 %9141 to i64, !dbg !342
  %9143 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9142, !dbg !342
  %9144 = load double, ptr %9143, align 16, !dbg !343
  %9145 = load double, ptr %6, align 8, !dbg !344
  %9146 = fcmp oeq double %9144, %9145, !dbg !345
  br i1 %9146, label %9147, label %9156, !dbg !346

9147:                                             ; preds = %9140
  %9148 = load i32, ptr %10, align 4, !dbg !347
  %9149 = sext i32 %9148 to i64, !dbg !348
  %9150 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9149, !dbg !348
  %9151 = getelementptr inbounds %struct.POINT, ptr %9150, i32 0, i32 1, !dbg !349
  %9152 = load double, ptr %9151, align 8, !dbg !349
  %9153 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9154 = load double, ptr %9153, align 8, !dbg !350
  %9155 = fcmp oeq double %9152, %9154, !dbg !351
  br i1 %9155, label %5429, label %9156, !dbg !352

9156:                                             ; preds = %9147, %9140
  br label %9157, !dbg !356

9157:                                             ; preds = %9156
  %9158 = load i32, ptr %10, align 4, !dbg !357
  %9159 = add nsw i32 %9158, 1, !dbg !357
  store i32 %9159, ptr %10, align 4, !dbg !357
  %9160 = load i32, ptr %10, align 4, !dbg !334
  %9161 = load i32, ptr %8, align 4, !dbg !336
  %9162 = icmp slt i32 %9160, %9161, !dbg !337
  br i1 %9162, label %9163, label %14243, !dbg !338

9163:                                             ; preds = %9157
  %9164 = load i32, ptr %10, align 4, !dbg !339
  %9165 = sext i32 %9164 to i64, !dbg !342
  %9166 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9165, !dbg !342
  %9167 = load double, ptr %9166, align 16, !dbg !343
  %9168 = load double, ptr %6, align 8, !dbg !344
  %9169 = fcmp oeq double %9167, %9168, !dbg !345
  br i1 %9169, label %9170, label %9179, !dbg !346

9170:                                             ; preds = %9163
  %9171 = load i32, ptr %10, align 4, !dbg !347
  %9172 = sext i32 %9171 to i64, !dbg !348
  %9173 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9172, !dbg !348
  %9174 = getelementptr inbounds %struct.POINT, ptr %9173, i32 0, i32 1, !dbg !349
  %9175 = load double, ptr %9174, align 8, !dbg !349
  %9176 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9177 = load double, ptr %9176, align 8, !dbg !350
  %9178 = fcmp oeq double %9175, %9177, !dbg !351
  br i1 %9178, label %5429, label %9179, !dbg !352

9179:                                             ; preds = %9170, %9163
  br label %9180, !dbg !356

9180:                                             ; preds = %9179
  %9181 = load i32, ptr %10, align 4, !dbg !357
  %9182 = add nsw i32 %9181, 1, !dbg !357
  store i32 %9182, ptr %10, align 4, !dbg !357
  %9183 = load i32, ptr %10, align 4, !dbg !334
  %9184 = load i32, ptr %8, align 4, !dbg !336
  %9185 = icmp slt i32 %9183, %9184, !dbg !337
  br i1 %9185, label %9186, label %14243, !dbg !338

9186:                                             ; preds = %9180
  %9187 = load i32, ptr %10, align 4, !dbg !339
  %9188 = sext i32 %9187 to i64, !dbg !342
  %9189 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9188, !dbg !342
  %9190 = load double, ptr %9189, align 16, !dbg !343
  %9191 = load double, ptr %6, align 8, !dbg !344
  %9192 = fcmp oeq double %9190, %9191, !dbg !345
  br i1 %9192, label %9193, label %9202, !dbg !346

9193:                                             ; preds = %9186
  %9194 = load i32, ptr %10, align 4, !dbg !347
  %9195 = sext i32 %9194 to i64, !dbg !348
  %9196 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9195, !dbg !348
  %9197 = getelementptr inbounds %struct.POINT, ptr %9196, i32 0, i32 1, !dbg !349
  %9198 = load double, ptr %9197, align 8, !dbg !349
  %9199 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9200 = load double, ptr %9199, align 8, !dbg !350
  %9201 = fcmp oeq double %9198, %9200, !dbg !351
  br i1 %9201, label %5429, label %9202, !dbg !352

9202:                                             ; preds = %9193, %9186
  br label %9203, !dbg !356

9203:                                             ; preds = %9202
  %9204 = load i32, ptr %10, align 4, !dbg !357
  %9205 = add nsw i32 %9204, 1, !dbg !357
  store i32 %9205, ptr %10, align 4, !dbg !357
  %9206 = load i32, ptr %10, align 4, !dbg !334
  %9207 = load i32, ptr %8, align 4, !dbg !336
  %9208 = icmp slt i32 %9206, %9207, !dbg !337
  br i1 %9208, label %9209, label %14243, !dbg !338

9209:                                             ; preds = %9203
  %9210 = load i32, ptr %10, align 4, !dbg !339
  %9211 = sext i32 %9210 to i64, !dbg !342
  %9212 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9211, !dbg !342
  %9213 = load double, ptr %9212, align 16, !dbg !343
  %9214 = load double, ptr %6, align 8, !dbg !344
  %9215 = fcmp oeq double %9213, %9214, !dbg !345
  br i1 %9215, label %9216, label %9225, !dbg !346

9216:                                             ; preds = %9209
  %9217 = load i32, ptr %10, align 4, !dbg !347
  %9218 = sext i32 %9217 to i64, !dbg !348
  %9219 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9218, !dbg !348
  %9220 = getelementptr inbounds %struct.POINT, ptr %9219, i32 0, i32 1, !dbg !349
  %9221 = load double, ptr %9220, align 8, !dbg !349
  %9222 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9223 = load double, ptr %9222, align 8, !dbg !350
  %9224 = fcmp oeq double %9221, %9223, !dbg !351
  br i1 %9224, label %5429, label %9225, !dbg !352

9225:                                             ; preds = %9216, %9209
  br label %9226, !dbg !356

9226:                                             ; preds = %9225
  %9227 = load i32, ptr %10, align 4, !dbg !357
  %9228 = add nsw i32 %9227, 1, !dbg !357
  store i32 %9228, ptr %10, align 4, !dbg !357
  %9229 = load i32, ptr %10, align 4, !dbg !334
  %9230 = load i32, ptr %8, align 4, !dbg !336
  %9231 = icmp slt i32 %9229, %9230, !dbg !337
  br i1 %9231, label %9232, label %14243, !dbg !338

9232:                                             ; preds = %9226
  %9233 = load i32, ptr %10, align 4, !dbg !339
  %9234 = sext i32 %9233 to i64, !dbg !342
  %9235 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9234, !dbg !342
  %9236 = load double, ptr %9235, align 16, !dbg !343
  %9237 = load double, ptr %6, align 8, !dbg !344
  %9238 = fcmp oeq double %9236, %9237, !dbg !345
  br i1 %9238, label %9239, label %9248, !dbg !346

9239:                                             ; preds = %9232
  %9240 = load i32, ptr %10, align 4, !dbg !347
  %9241 = sext i32 %9240 to i64, !dbg !348
  %9242 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9241, !dbg !348
  %9243 = getelementptr inbounds %struct.POINT, ptr %9242, i32 0, i32 1, !dbg !349
  %9244 = load double, ptr %9243, align 8, !dbg !349
  %9245 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9246 = load double, ptr %9245, align 8, !dbg !350
  %9247 = fcmp oeq double %9244, %9246, !dbg !351
  br i1 %9247, label %5429, label %9248, !dbg !352

9248:                                             ; preds = %9239, %9232
  br label %9249, !dbg !356

9249:                                             ; preds = %9248
  %9250 = load i32, ptr %10, align 4, !dbg !357
  %9251 = add nsw i32 %9250, 1, !dbg !357
  store i32 %9251, ptr %10, align 4, !dbg !357
  %9252 = load i32, ptr %10, align 4, !dbg !334
  %9253 = load i32, ptr %8, align 4, !dbg !336
  %9254 = icmp slt i32 %9252, %9253, !dbg !337
  br i1 %9254, label %9255, label %14243, !dbg !338

9255:                                             ; preds = %9249
  %9256 = load i32, ptr %10, align 4, !dbg !339
  %9257 = sext i32 %9256 to i64, !dbg !342
  %9258 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9257, !dbg !342
  %9259 = load double, ptr %9258, align 16, !dbg !343
  %9260 = load double, ptr %6, align 8, !dbg !344
  %9261 = fcmp oeq double %9259, %9260, !dbg !345
  br i1 %9261, label %9262, label %9271, !dbg !346

9262:                                             ; preds = %9255
  %9263 = load i32, ptr %10, align 4, !dbg !347
  %9264 = sext i32 %9263 to i64, !dbg !348
  %9265 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9264, !dbg !348
  %9266 = getelementptr inbounds %struct.POINT, ptr %9265, i32 0, i32 1, !dbg !349
  %9267 = load double, ptr %9266, align 8, !dbg !349
  %9268 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9269 = load double, ptr %9268, align 8, !dbg !350
  %9270 = fcmp oeq double %9267, %9269, !dbg !351
  br i1 %9270, label %5429, label %9271, !dbg !352

9271:                                             ; preds = %9262, %9255
  br label %9272, !dbg !356

9272:                                             ; preds = %9271
  %9273 = load i32, ptr %10, align 4, !dbg !357
  %9274 = add nsw i32 %9273, 1, !dbg !357
  store i32 %9274, ptr %10, align 4, !dbg !357
  %9275 = load i32, ptr %10, align 4, !dbg !334
  %9276 = load i32, ptr %8, align 4, !dbg !336
  %9277 = icmp slt i32 %9275, %9276, !dbg !337
  br i1 %9277, label %9278, label %14243, !dbg !338

9278:                                             ; preds = %9272
  %9279 = load i32, ptr %10, align 4, !dbg !339
  %9280 = sext i32 %9279 to i64, !dbg !342
  %9281 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9280, !dbg !342
  %9282 = load double, ptr %9281, align 16, !dbg !343
  %9283 = load double, ptr %6, align 8, !dbg !344
  %9284 = fcmp oeq double %9282, %9283, !dbg !345
  br i1 %9284, label %9285, label %9294, !dbg !346

9285:                                             ; preds = %9278
  %9286 = load i32, ptr %10, align 4, !dbg !347
  %9287 = sext i32 %9286 to i64, !dbg !348
  %9288 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9287, !dbg !348
  %9289 = getelementptr inbounds %struct.POINT, ptr %9288, i32 0, i32 1, !dbg !349
  %9290 = load double, ptr %9289, align 8, !dbg !349
  %9291 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9292 = load double, ptr %9291, align 8, !dbg !350
  %9293 = fcmp oeq double %9290, %9292, !dbg !351
  br i1 %9293, label %5429, label %9294, !dbg !352

9294:                                             ; preds = %9285, %9278
  br label %9295, !dbg !356

9295:                                             ; preds = %9294
  %9296 = load i32, ptr %10, align 4, !dbg !357
  %9297 = add nsw i32 %9296, 1, !dbg !357
  store i32 %9297, ptr %10, align 4, !dbg !357
  %9298 = load i32, ptr %10, align 4, !dbg !334
  %9299 = load i32, ptr %8, align 4, !dbg !336
  %9300 = icmp slt i32 %9298, %9299, !dbg !337
  br i1 %9300, label %9301, label %14243, !dbg !338

9301:                                             ; preds = %9295
  %9302 = load i32, ptr %10, align 4, !dbg !339
  %9303 = sext i32 %9302 to i64, !dbg !342
  %9304 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9303, !dbg !342
  %9305 = load double, ptr %9304, align 16, !dbg !343
  %9306 = load double, ptr %6, align 8, !dbg !344
  %9307 = fcmp oeq double %9305, %9306, !dbg !345
  br i1 %9307, label %9308, label %9317, !dbg !346

9308:                                             ; preds = %9301
  %9309 = load i32, ptr %10, align 4, !dbg !347
  %9310 = sext i32 %9309 to i64, !dbg !348
  %9311 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9310, !dbg !348
  %9312 = getelementptr inbounds %struct.POINT, ptr %9311, i32 0, i32 1, !dbg !349
  %9313 = load double, ptr %9312, align 8, !dbg !349
  %9314 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9315 = load double, ptr %9314, align 8, !dbg !350
  %9316 = fcmp oeq double %9313, %9315, !dbg !351
  br i1 %9316, label %5429, label %9317, !dbg !352

9317:                                             ; preds = %9308, %9301
  br label %9318, !dbg !356

9318:                                             ; preds = %9317
  %9319 = load i32, ptr %10, align 4, !dbg !357
  %9320 = add nsw i32 %9319, 1, !dbg !357
  store i32 %9320, ptr %10, align 4, !dbg !357
  %9321 = load i32, ptr %10, align 4, !dbg !334
  %9322 = load i32, ptr %8, align 4, !dbg !336
  %9323 = icmp slt i32 %9321, %9322, !dbg !337
  br i1 %9323, label %9324, label %14243, !dbg !338

9324:                                             ; preds = %9318
  %9325 = load i32, ptr %10, align 4, !dbg !339
  %9326 = sext i32 %9325 to i64, !dbg !342
  %9327 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9326, !dbg !342
  %9328 = load double, ptr %9327, align 16, !dbg !343
  %9329 = load double, ptr %6, align 8, !dbg !344
  %9330 = fcmp oeq double %9328, %9329, !dbg !345
  br i1 %9330, label %9331, label %9340, !dbg !346

9331:                                             ; preds = %9324
  %9332 = load i32, ptr %10, align 4, !dbg !347
  %9333 = sext i32 %9332 to i64, !dbg !348
  %9334 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9333, !dbg !348
  %9335 = getelementptr inbounds %struct.POINT, ptr %9334, i32 0, i32 1, !dbg !349
  %9336 = load double, ptr %9335, align 8, !dbg !349
  %9337 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9338 = load double, ptr %9337, align 8, !dbg !350
  %9339 = fcmp oeq double %9336, %9338, !dbg !351
  br i1 %9339, label %5429, label %9340, !dbg !352

9340:                                             ; preds = %9331, %9324
  br label %9341, !dbg !356

9341:                                             ; preds = %9340
  %9342 = load i32, ptr %10, align 4, !dbg !357
  %9343 = add nsw i32 %9342, 1, !dbg !357
  store i32 %9343, ptr %10, align 4, !dbg !357
  %9344 = load i32, ptr %10, align 4, !dbg !334
  %9345 = load i32, ptr %8, align 4, !dbg !336
  %9346 = icmp slt i32 %9344, %9345, !dbg !337
  br i1 %9346, label %9347, label %14243, !dbg !338

9347:                                             ; preds = %9341
  %9348 = load i32, ptr %10, align 4, !dbg !339
  %9349 = sext i32 %9348 to i64, !dbg !342
  %9350 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9349, !dbg !342
  %9351 = load double, ptr %9350, align 16, !dbg !343
  %9352 = load double, ptr %6, align 8, !dbg !344
  %9353 = fcmp oeq double %9351, %9352, !dbg !345
  br i1 %9353, label %9354, label %9363, !dbg !346

9354:                                             ; preds = %9347
  %9355 = load i32, ptr %10, align 4, !dbg !347
  %9356 = sext i32 %9355 to i64, !dbg !348
  %9357 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9356, !dbg !348
  %9358 = getelementptr inbounds %struct.POINT, ptr %9357, i32 0, i32 1, !dbg !349
  %9359 = load double, ptr %9358, align 8, !dbg !349
  %9360 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9361 = load double, ptr %9360, align 8, !dbg !350
  %9362 = fcmp oeq double %9359, %9361, !dbg !351
  br i1 %9362, label %5429, label %9363, !dbg !352

9363:                                             ; preds = %9354, %9347
  br label %9364, !dbg !356

9364:                                             ; preds = %9363
  %9365 = load i32, ptr %10, align 4, !dbg !357
  %9366 = add nsw i32 %9365, 1, !dbg !357
  store i32 %9366, ptr %10, align 4, !dbg !357
  %9367 = load i32, ptr %10, align 4, !dbg !334
  %9368 = load i32, ptr %8, align 4, !dbg !336
  %9369 = icmp slt i32 %9367, %9368, !dbg !337
  br i1 %9369, label %9370, label %14243, !dbg !338

9370:                                             ; preds = %9364
  %9371 = load i32, ptr %10, align 4, !dbg !339
  %9372 = sext i32 %9371 to i64, !dbg !342
  %9373 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9372, !dbg !342
  %9374 = load double, ptr %9373, align 16, !dbg !343
  %9375 = load double, ptr %6, align 8, !dbg !344
  %9376 = fcmp oeq double %9374, %9375, !dbg !345
  br i1 %9376, label %9377, label %9386, !dbg !346

9377:                                             ; preds = %9370
  %9378 = load i32, ptr %10, align 4, !dbg !347
  %9379 = sext i32 %9378 to i64, !dbg !348
  %9380 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9379, !dbg !348
  %9381 = getelementptr inbounds %struct.POINT, ptr %9380, i32 0, i32 1, !dbg !349
  %9382 = load double, ptr %9381, align 8, !dbg !349
  %9383 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9384 = load double, ptr %9383, align 8, !dbg !350
  %9385 = fcmp oeq double %9382, %9384, !dbg !351
  br i1 %9385, label %5429, label %9386, !dbg !352

9386:                                             ; preds = %9377, %9370
  br label %9387, !dbg !356

9387:                                             ; preds = %9386
  %9388 = load i32, ptr %10, align 4, !dbg !357
  %9389 = add nsw i32 %9388, 1, !dbg !357
  store i32 %9389, ptr %10, align 4, !dbg !357
  %9390 = load i32, ptr %10, align 4, !dbg !334
  %9391 = load i32, ptr %8, align 4, !dbg !336
  %9392 = icmp slt i32 %9390, %9391, !dbg !337
  br i1 %9392, label %9393, label %14243, !dbg !338

9393:                                             ; preds = %9387
  %9394 = load i32, ptr %10, align 4, !dbg !339
  %9395 = sext i32 %9394 to i64, !dbg !342
  %9396 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9395, !dbg !342
  %9397 = load double, ptr %9396, align 16, !dbg !343
  %9398 = load double, ptr %6, align 8, !dbg !344
  %9399 = fcmp oeq double %9397, %9398, !dbg !345
  br i1 %9399, label %9400, label %9409, !dbg !346

9400:                                             ; preds = %9393
  %9401 = load i32, ptr %10, align 4, !dbg !347
  %9402 = sext i32 %9401 to i64, !dbg !348
  %9403 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9402, !dbg !348
  %9404 = getelementptr inbounds %struct.POINT, ptr %9403, i32 0, i32 1, !dbg !349
  %9405 = load double, ptr %9404, align 8, !dbg !349
  %9406 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9407 = load double, ptr %9406, align 8, !dbg !350
  %9408 = fcmp oeq double %9405, %9407, !dbg !351
  br i1 %9408, label %5429, label %9409, !dbg !352

9409:                                             ; preds = %9400, %9393
  br label %9410, !dbg !356

9410:                                             ; preds = %9409
  %9411 = load i32, ptr %10, align 4, !dbg !357
  %9412 = add nsw i32 %9411, 1, !dbg !357
  store i32 %9412, ptr %10, align 4, !dbg !357
  %9413 = load i32, ptr %10, align 4, !dbg !334
  %9414 = load i32, ptr %8, align 4, !dbg !336
  %9415 = icmp slt i32 %9413, %9414, !dbg !337
  br i1 %9415, label %9416, label %14243, !dbg !338

9416:                                             ; preds = %9410
  %9417 = load i32, ptr %10, align 4, !dbg !339
  %9418 = sext i32 %9417 to i64, !dbg !342
  %9419 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9418, !dbg !342
  %9420 = load double, ptr %9419, align 16, !dbg !343
  %9421 = load double, ptr %6, align 8, !dbg !344
  %9422 = fcmp oeq double %9420, %9421, !dbg !345
  br i1 %9422, label %9423, label %9432, !dbg !346

9423:                                             ; preds = %9416
  %9424 = load i32, ptr %10, align 4, !dbg !347
  %9425 = sext i32 %9424 to i64, !dbg !348
  %9426 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9425, !dbg !348
  %9427 = getelementptr inbounds %struct.POINT, ptr %9426, i32 0, i32 1, !dbg !349
  %9428 = load double, ptr %9427, align 8, !dbg !349
  %9429 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9430 = load double, ptr %9429, align 8, !dbg !350
  %9431 = fcmp oeq double %9428, %9430, !dbg !351
  br i1 %9431, label %5429, label %9432, !dbg !352

9432:                                             ; preds = %9423, %9416
  br label %9433, !dbg !356

9433:                                             ; preds = %9432
  %9434 = load i32, ptr %10, align 4, !dbg !357
  %9435 = add nsw i32 %9434, 1, !dbg !357
  store i32 %9435, ptr %10, align 4, !dbg !357
  %9436 = load i32, ptr %10, align 4, !dbg !334
  %9437 = load i32, ptr %8, align 4, !dbg !336
  %9438 = icmp slt i32 %9436, %9437, !dbg !337
  br i1 %9438, label %9439, label %14243, !dbg !338

9439:                                             ; preds = %9433
  %9440 = load i32, ptr %10, align 4, !dbg !339
  %9441 = sext i32 %9440 to i64, !dbg !342
  %9442 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9441, !dbg !342
  %9443 = load double, ptr %9442, align 16, !dbg !343
  %9444 = load double, ptr %6, align 8, !dbg !344
  %9445 = fcmp oeq double %9443, %9444, !dbg !345
  br i1 %9445, label %9446, label %9455, !dbg !346

9446:                                             ; preds = %9439
  %9447 = load i32, ptr %10, align 4, !dbg !347
  %9448 = sext i32 %9447 to i64, !dbg !348
  %9449 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9448, !dbg !348
  %9450 = getelementptr inbounds %struct.POINT, ptr %9449, i32 0, i32 1, !dbg !349
  %9451 = load double, ptr %9450, align 8, !dbg !349
  %9452 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9453 = load double, ptr %9452, align 8, !dbg !350
  %9454 = fcmp oeq double %9451, %9453, !dbg !351
  br i1 %9454, label %5429, label %9455, !dbg !352

9455:                                             ; preds = %9446, %9439
  br label %9456, !dbg !356

9456:                                             ; preds = %9455
  %9457 = load i32, ptr %10, align 4, !dbg !357
  %9458 = add nsw i32 %9457, 1, !dbg !357
  store i32 %9458, ptr %10, align 4, !dbg !357
  %9459 = load i32, ptr %10, align 4, !dbg !334
  %9460 = load i32, ptr %8, align 4, !dbg !336
  %9461 = icmp slt i32 %9459, %9460, !dbg !337
  br i1 %9461, label %9462, label %14243, !dbg !338

9462:                                             ; preds = %9456
  %9463 = load i32, ptr %10, align 4, !dbg !339
  %9464 = sext i32 %9463 to i64, !dbg !342
  %9465 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9464, !dbg !342
  %9466 = load double, ptr %9465, align 16, !dbg !343
  %9467 = load double, ptr %6, align 8, !dbg !344
  %9468 = fcmp oeq double %9466, %9467, !dbg !345
  br i1 %9468, label %9469, label %9478, !dbg !346

9469:                                             ; preds = %9462
  %9470 = load i32, ptr %10, align 4, !dbg !347
  %9471 = sext i32 %9470 to i64, !dbg !348
  %9472 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9471, !dbg !348
  %9473 = getelementptr inbounds %struct.POINT, ptr %9472, i32 0, i32 1, !dbg !349
  %9474 = load double, ptr %9473, align 8, !dbg !349
  %9475 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9476 = load double, ptr %9475, align 8, !dbg !350
  %9477 = fcmp oeq double %9474, %9476, !dbg !351
  br i1 %9477, label %5429, label %9478, !dbg !352

9478:                                             ; preds = %9469, %9462
  br label %9479, !dbg !356

9479:                                             ; preds = %9478
  %9480 = load i32, ptr %10, align 4, !dbg !357
  %9481 = add nsw i32 %9480, 1, !dbg !357
  store i32 %9481, ptr %10, align 4, !dbg !357
  %9482 = load i32, ptr %10, align 4, !dbg !334
  %9483 = load i32, ptr %8, align 4, !dbg !336
  %9484 = icmp slt i32 %9482, %9483, !dbg !337
  br i1 %9484, label %9485, label %14243, !dbg !338

9485:                                             ; preds = %9479
  %9486 = load i32, ptr %10, align 4, !dbg !339
  %9487 = sext i32 %9486 to i64, !dbg !342
  %9488 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9487, !dbg !342
  %9489 = load double, ptr %9488, align 16, !dbg !343
  %9490 = load double, ptr %6, align 8, !dbg !344
  %9491 = fcmp oeq double %9489, %9490, !dbg !345
  br i1 %9491, label %9492, label %9501, !dbg !346

9492:                                             ; preds = %9485
  %9493 = load i32, ptr %10, align 4, !dbg !347
  %9494 = sext i32 %9493 to i64, !dbg !348
  %9495 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9494, !dbg !348
  %9496 = getelementptr inbounds %struct.POINT, ptr %9495, i32 0, i32 1, !dbg !349
  %9497 = load double, ptr %9496, align 8, !dbg !349
  %9498 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9499 = load double, ptr %9498, align 8, !dbg !350
  %9500 = fcmp oeq double %9497, %9499, !dbg !351
  br i1 %9500, label %5429, label %9501, !dbg !352

9501:                                             ; preds = %9492, %9485
  br label %9502, !dbg !356

9502:                                             ; preds = %9501
  %9503 = load i32, ptr %10, align 4, !dbg !357
  %9504 = add nsw i32 %9503, 1, !dbg !357
  store i32 %9504, ptr %10, align 4, !dbg !357
  %9505 = load i32, ptr %10, align 4, !dbg !334
  %9506 = load i32, ptr %8, align 4, !dbg !336
  %9507 = icmp slt i32 %9505, %9506, !dbg !337
  br i1 %9507, label %9508, label %14243, !dbg !338

9508:                                             ; preds = %9502
  %9509 = load i32, ptr %10, align 4, !dbg !339
  %9510 = sext i32 %9509 to i64, !dbg !342
  %9511 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9510, !dbg !342
  %9512 = load double, ptr %9511, align 16, !dbg !343
  %9513 = load double, ptr %6, align 8, !dbg !344
  %9514 = fcmp oeq double %9512, %9513, !dbg !345
  br i1 %9514, label %9515, label %9524, !dbg !346

9515:                                             ; preds = %9508
  %9516 = load i32, ptr %10, align 4, !dbg !347
  %9517 = sext i32 %9516 to i64, !dbg !348
  %9518 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9517, !dbg !348
  %9519 = getelementptr inbounds %struct.POINT, ptr %9518, i32 0, i32 1, !dbg !349
  %9520 = load double, ptr %9519, align 8, !dbg !349
  %9521 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9522 = load double, ptr %9521, align 8, !dbg !350
  %9523 = fcmp oeq double %9520, %9522, !dbg !351
  br i1 %9523, label %5429, label %9524, !dbg !352

9524:                                             ; preds = %9515, %9508
  br label %9525, !dbg !356

9525:                                             ; preds = %9524
  %9526 = load i32, ptr %10, align 4, !dbg !357
  %9527 = add nsw i32 %9526, 1, !dbg !357
  store i32 %9527, ptr %10, align 4, !dbg !357
  %9528 = load i32, ptr %10, align 4, !dbg !334
  %9529 = load i32, ptr %8, align 4, !dbg !336
  %9530 = icmp slt i32 %9528, %9529, !dbg !337
  br i1 %9530, label %9531, label %14243, !dbg !338

9531:                                             ; preds = %9525
  %9532 = load i32, ptr %10, align 4, !dbg !339
  %9533 = sext i32 %9532 to i64, !dbg !342
  %9534 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9533, !dbg !342
  %9535 = load double, ptr %9534, align 16, !dbg !343
  %9536 = load double, ptr %6, align 8, !dbg !344
  %9537 = fcmp oeq double %9535, %9536, !dbg !345
  br i1 %9537, label %9538, label %9547, !dbg !346

9538:                                             ; preds = %9531
  %9539 = load i32, ptr %10, align 4, !dbg !347
  %9540 = sext i32 %9539 to i64, !dbg !348
  %9541 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9540, !dbg !348
  %9542 = getelementptr inbounds %struct.POINT, ptr %9541, i32 0, i32 1, !dbg !349
  %9543 = load double, ptr %9542, align 8, !dbg !349
  %9544 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9545 = load double, ptr %9544, align 8, !dbg !350
  %9546 = fcmp oeq double %9543, %9545, !dbg !351
  br i1 %9546, label %5429, label %9547, !dbg !352

9547:                                             ; preds = %9538, %9531
  br label %9548, !dbg !356

9548:                                             ; preds = %9547
  %9549 = load i32, ptr %10, align 4, !dbg !357
  %9550 = add nsw i32 %9549, 1, !dbg !357
  store i32 %9550, ptr %10, align 4, !dbg !357
  %9551 = load i32, ptr %10, align 4, !dbg !334
  %9552 = load i32, ptr %8, align 4, !dbg !336
  %9553 = icmp slt i32 %9551, %9552, !dbg !337
  br i1 %9553, label %9554, label %14243, !dbg !338

9554:                                             ; preds = %9548
  %9555 = load i32, ptr %10, align 4, !dbg !339
  %9556 = sext i32 %9555 to i64, !dbg !342
  %9557 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9556, !dbg !342
  %9558 = load double, ptr %9557, align 16, !dbg !343
  %9559 = load double, ptr %6, align 8, !dbg !344
  %9560 = fcmp oeq double %9558, %9559, !dbg !345
  br i1 %9560, label %9561, label %9570, !dbg !346

9561:                                             ; preds = %9554
  %9562 = load i32, ptr %10, align 4, !dbg !347
  %9563 = sext i32 %9562 to i64, !dbg !348
  %9564 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9563, !dbg !348
  %9565 = getelementptr inbounds %struct.POINT, ptr %9564, i32 0, i32 1, !dbg !349
  %9566 = load double, ptr %9565, align 8, !dbg !349
  %9567 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9568 = load double, ptr %9567, align 8, !dbg !350
  %9569 = fcmp oeq double %9566, %9568, !dbg !351
  br i1 %9569, label %5429, label %9570, !dbg !352

9570:                                             ; preds = %9561, %9554
  br label %9571, !dbg !356

9571:                                             ; preds = %9570
  %9572 = load i32, ptr %10, align 4, !dbg !357
  %9573 = add nsw i32 %9572, 1, !dbg !357
  store i32 %9573, ptr %10, align 4, !dbg !357
  %9574 = load i32, ptr %10, align 4, !dbg !334
  %9575 = load i32, ptr %8, align 4, !dbg !336
  %9576 = icmp slt i32 %9574, %9575, !dbg !337
  br i1 %9576, label %9577, label %14243, !dbg !338

9577:                                             ; preds = %9571
  %9578 = load i32, ptr %10, align 4, !dbg !339
  %9579 = sext i32 %9578 to i64, !dbg !342
  %9580 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9579, !dbg !342
  %9581 = load double, ptr %9580, align 16, !dbg !343
  %9582 = load double, ptr %6, align 8, !dbg !344
  %9583 = fcmp oeq double %9581, %9582, !dbg !345
  br i1 %9583, label %9584, label %9593, !dbg !346

9584:                                             ; preds = %9577
  %9585 = load i32, ptr %10, align 4, !dbg !347
  %9586 = sext i32 %9585 to i64, !dbg !348
  %9587 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9586, !dbg !348
  %9588 = getelementptr inbounds %struct.POINT, ptr %9587, i32 0, i32 1, !dbg !349
  %9589 = load double, ptr %9588, align 8, !dbg !349
  %9590 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9591 = load double, ptr %9590, align 8, !dbg !350
  %9592 = fcmp oeq double %9589, %9591, !dbg !351
  br i1 %9592, label %5429, label %9593, !dbg !352

9593:                                             ; preds = %9584, %9577
  br label %9594, !dbg !356

9594:                                             ; preds = %9593
  %9595 = load i32, ptr %10, align 4, !dbg !357
  %9596 = add nsw i32 %9595, 1, !dbg !357
  store i32 %9596, ptr %10, align 4, !dbg !357
  %9597 = load i32, ptr %10, align 4, !dbg !334
  %9598 = load i32, ptr %8, align 4, !dbg !336
  %9599 = icmp slt i32 %9597, %9598, !dbg !337
  br i1 %9599, label %9600, label %14243, !dbg !338

9600:                                             ; preds = %9594
  %9601 = load i32, ptr %10, align 4, !dbg !339
  %9602 = sext i32 %9601 to i64, !dbg !342
  %9603 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9602, !dbg !342
  %9604 = load double, ptr %9603, align 16, !dbg !343
  %9605 = load double, ptr %6, align 8, !dbg !344
  %9606 = fcmp oeq double %9604, %9605, !dbg !345
  br i1 %9606, label %9607, label %9616, !dbg !346

9607:                                             ; preds = %9600
  %9608 = load i32, ptr %10, align 4, !dbg !347
  %9609 = sext i32 %9608 to i64, !dbg !348
  %9610 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9609, !dbg !348
  %9611 = getelementptr inbounds %struct.POINT, ptr %9610, i32 0, i32 1, !dbg !349
  %9612 = load double, ptr %9611, align 8, !dbg !349
  %9613 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9614 = load double, ptr %9613, align 8, !dbg !350
  %9615 = fcmp oeq double %9612, %9614, !dbg !351
  br i1 %9615, label %5429, label %9616, !dbg !352

9616:                                             ; preds = %9607, %9600
  br label %9617, !dbg !356

9617:                                             ; preds = %9616
  %9618 = load i32, ptr %10, align 4, !dbg !357
  %9619 = add nsw i32 %9618, 1, !dbg !357
  store i32 %9619, ptr %10, align 4, !dbg !357
  %9620 = load i32, ptr %10, align 4, !dbg !334
  %9621 = load i32, ptr %8, align 4, !dbg !336
  %9622 = icmp slt i32 %9620, %9621, !dbg !337
  br i1 %9622, label %9623, label %14243, !dbg !338

9623:                                             ; preds = %9617
  %9624 = load i32, ptr %10, align 4, !dbg !339
  %9625 = sext i32 %9624 to i64, !dbg !342
  %9626 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9625, !dbg !342
  %9627 = load double, ptr %9626, align 16, !dbg !343
  %9628 = load double, ptr %6, align 8, !dbg !344
  %9629 = fcmp oeq double %9627, %9628, !dbg !345
  br i1 %9629, label %9630, label %9639, !dbg !346

9630:                                             ; preds = %9623
  %9631 = load i32, ptr %10, align 4, !dbg !347
  %9632 = sext i32 %9631 to i64, !dbg !348
  %9633 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9632, !dbg !348
  %9634 = getelementptr inbounds %struct.POINT, ptr %9633, i32 0, i32 1, !dbg !349
  %9635 = load double, ptr %9634, align 8, !dbg !349
  %9636 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9637 = load double, ptr %9636, align 8, !dbg !350
  %9638 = fcmp oeq double %9635, %9637, !dbg !351
  br i1 %9638, label %5429, label %9639, !dbg !352

9639:                                             ; preds = %9630, %9623
  br label %9640, !dbg !356

9640:                                             ; preds = %9639
  %9641 = load i32, ptr %10, align 4, !dbg !357
  %9642 = add nsw i32 %9641, 1, !dbg !357
  store i32 %9642, ptr %10, align 4, !dbg !357
  %9643 = load i32, ptr %10, align 4, !dbg !334
  %9644 = load i32, ptr %8, align 4, !dbg !336
  %9645 = icmp slt i32 %9643, %9644, !dbg !337
  br i1 %9645, label %9646, label %14243, !dbg !338

9646:                                             ; preds = %9640
  %9647 = load i32, ptr %10, align 4, !dbg !339
  %9648 = sext i32 %9647 to i64, !dbg !342
  %9649 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9648, !dbg !342
  %9650 = load double, ptr %9649, align 16, !dbg !343
  %9651 = load double, ptr %6, align 8, !dbg !344
  %9652 = fcmp oeq double %9650, %9651, !dbg !345
  br i1 %9652, label %9653, label %9662, !dbg !346

9653:                                             ; preds = %9646
  %9654 = load i32, ptr %10, align 4, !dbg !347
  %9655 = sext i32 %9654 to i64, !dbg !348
  %9656 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9655, !dbg !348
  %9657 = getelementptr inbounds %struct.POINT, ptr %9656, i32 0, i32 1, !dbg !349
  %9658 = load double, ptr %9657, align 8, !dbg !349
  %9659 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9660 = load double, ptr %9659, align 8, !dbg !350
  %9661 = fcmp oeq double %9658, %9660, !dbg !351
  br i1 %9661, label %5429, label %9662, !dbg !352

9662:                                             ; preds = %9653, %9646
  br label %9663, !dbg !356

9663:                                             ; preds = %9662
  %9664 = load i32, ptr %10, align 4, !dbg !357
  %9665 = add nsw i32 %9664, 1, !dbg !357
  store i32 %9665, ptr %10, align 4, !dbg !357
  %9666 = load i32, ptr %10, align 4, !dbg !334
  %9667 = load i32, ptr %8, align 4, !dbg !336
  %9668 = icmp slt i32 %9666, %9667, !dbg !337
  br i1 %9668, label %9669, label %14243, !dbg !338

9669:                                             ; preds = %9663
  %9670 = load i32, ptr %10, align 4, !dbg !339
  %9671 = sext i32 %9670 to i64, !dbg !342
  %9672 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9671, !dbg !342
  %9673 = load double, ptr %9672, align 16, !dbg !343
  %9674 = load double, ptr %6, align 8, !dbg !344
  %9675 = fcmp oeq double %9673, %9674, !dbg !345
  br i1 %9675, label %9676, label %9685, !dbg !346

9676:                                             ; preds = %9669
  %9677 = load i32, ptr %10, align 4, !dbg !347
  %9678 = sext i32 %9677 to i64, !dbg !348
  %9679 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9678, !dbg !348
  %9680 = getelementptr inbounds %struct.POINT, ptr %9679, i32 0, i32 1, !dbg !349
  %9681 = load double, ptr %9680, align 8, !dbg !349
  %9682 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9683 = load double, ptr %9682, align 8, !dbg !350
  %9684 = fcmp oeq double %9681, %9683, !dbg !351
  br i1 %9684, label %5429, label %9685, !dbg !352

9685:                                             ; preds = %9676, %9669
  br label %9686, !dbg !356

9686:                                             ; preds = %9685
  %9687 = load i32, ptr %10, align 4, !dbg !357
  %9688 = add nsw i32 %9687, 1, !dbg !357
  store i32 %9688, ptr %10, align 4, !dbg !357
  %9689 = load i32, ptr %10, align 4, !dbg !334
  %9690 = load i32, ptr %8, align 4, !dbg !336
  %9691 = icmp slt i32 %9689, %9690, !dbg !337
  br i1 %9691, label %9692, label %14243, !dbg !338

9692:                                             ; preds = %9686
  %9693 = load i32, ptr %10, align 4, !dbg !339
  %9694 = sext i32 %9693 to i64, !dbg !342
  %9695 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9694, !dbg !342
  %9696 = load double, ptr %9695, align 16, !dbg !343
  %9697 = load double, ptr %6, align 8, !dbg !344
  %9698 = fcmp oeq double %9696, %9697, !dbg !345
  br i1 %9698, label %9699, label %9708, !dbg !346

9699:                                             ; preds = %9692
  %9700 = load i32, ptr %10, align 4, !dbg !347
  %9701 = sext i32 %9700 to i64, !dbg !348
  %9702 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9701, !dbg !348
  %9703 = getelementptr inbounds %struct.POINT, ptr %9702, i32 0, i32 1, !dbg !349
  %9704 = load double, ptr %9703, align 8, !dbg !349
  %9705 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9706 = load double, ptr %9705, align 8, !dbg !350
  %9707 = fcmp oeq double %9704, %9706, !dbg !351
  br i1 %9707, label %5429, label %9708, !dbg !352

9708:                                             ; preds = %9699, %9692
  br label %9709, !dbg !356

9709:                                             ; preds = %9708
  %9710 = load i32, ptr %10, align 4, !dbg !357
  %9711 = add nsw i32 %9710, 1, !dbg !357
  store i32 %9711, ptr %10, align 4, !dbg !357
  %9712 = load i32, ptr %10, align 4, !dbg !334
  %9713 = load i32, ptr %8, align 4, !dbg !336
  %9714 = icmp slt i32 %9712, %9713, !dbg !337
  br i1 %9714, label %9715, label %14243, !dbg !338

9715:                                             ; preds = %9709
  %9716 = load i32, ptr %10, align 4, !dbg !339
  %9717 = sext i32 %9716 to i64, !dbg !342
  %9718 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9717, !dbg !342
  %9719 = load double, ptr %9718, align 16, !dbg !343
  %9720 = load double, ptr %6, align 8, !dbg !344
  %9721 = fcmp oeq double %9719, %9720, !dbg !345
  br i1 %9721, label %9722, label %9731, !dbg !346

9722:                                             ; preds = %9715
  %9723 = load i32, ptr %10, align 4, !dbg !347
  %9724 = sext i32 %9723 to i64, !dbg !348
  %9725 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9724, !dbg !348
  %9726 = getelementptr inbounds %struct.POINT, ptr %9725, i32 0, i32 1, !dbg !349
  %9727 = load double, ptr %9726, align 8, !dbg !349
  %9728 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9729 = load double, ptr %9728, align 8, !dbg !350
  %9730 = fcmp oeq double %9727, %9729, !dbg !351
  br i1 %9730, label %5429, label %9731, !dbg !352

9731:                                             ; preds = %9722, %9715
  br label %9732, !dbg !356

9732:                                             ; preds = %9731
  %9733 = load i32, ptr %10, align 4, !dbg !357
  %9734 = add nsw i32 %9733, 1, !dbg !357
  store i32 %9734, ptr %10, align 4, !dbg !357
  %9735 = load i32, ptr %10, align 4, !dbg !334
  %9736 = load i32, ptr %8, align 4, !dbg !336
  %9737 = icmp slt i32 %9735, %9736, !dbg !337
  br i1 %9737, label %9738, label %14243, !dbg !338

9738:                                             ; preds = %9732
  %9739 = load i32, ptr %10, align 4, !dbg !339
  %9740 = sext i32 %9739 to i64, !dbg !342
  %9741 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9740, !dbg !342
  %9742 = load double, ptr %9741, align 16, !dbg !343
  %9743 = load double, ptr %6, align 8, !dbg !344
  %9744 = fcmp oeq double %9742, %9743, !dbg !345
  br i1 %9744, label %9745, label %9754, !dbg !346

9745:                                             ; preds = %9738
  %9746 = load i32, ptr %10, align 4, !dbg !347
  %9747 = sext i32 %9746 to i64, !dbg !348
  %9748 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9747, !dbg !348
  %9749 = getelementptr inbounds %struct.POINT, ptr %9748, i32 0, i32 1, !dbg !349
  %9750 = load double, ptr %9749, align 8, !dbg !349
  %9751 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9752 = load double, ptr %9751, align 8, !dbg !350
  %9753 = fcmp oeq double %9750, %9752, !dbg !351
  br i1 %9753, label %5429, label %9754, !dbg !352

9754:                                             ; preds = %9745, %9738
  br label %9755, !dbg !356

9755:                                             ; preds = %9754
  %9756 = load i32, ptr %10, align 4, !dbg !357
  %9757 = add nsw i32 %9756, 1, !dbg !357
  store i32 %9757, ptr %10, align 4, !dbg !357
  %9758 = load i32, ptr %10, align 4, !dbg !334
  %9759 = load i32, ptr %8, align 4, !dbg !336
  %9760 = icmp slt i32 %9758, %9759, !dbg !337
  br i1 %9760, label %9761, label %14243, !dbg !338

9761:                                             ; preds = %9755
  %9762 = load i32, ptr %10, align 4, !dbg !339
  %9763 = sext i32 %9762 to i64, !dbg !342
  %9764 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9763, !dbg !342
  %9765 = load double, ptr %9764, align 16, !dbg !343
  %9766 = load double, ptr %6, align 8, !dbg !344
  %9767 = fcmp oeq double %9765, %9766, !dbg !345
  br i1 %9767, label %9768, label %9777, !dbg !346

9768:                                             ; preds = %9761
  %9769 = load i32, ptr %10, align 4, !dbg !347
  %9770 = sext i32 %9769 to i64, !dbg !348
  %9771 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9770, !dbg !348
  %9772 = getelementptr inbounds %struct.POINT, ptr %9771, i32 0, i32 1, !dbg !349
  %9773 = load double, ptr %9772, align 8, !dbg !349
  %9774 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9775 = load double, ptr %9774, align 8, !dbg !350
  %9776 = fcmp oeq double %9773, %9775, !dbg !351
  br i1 %9776, label %5429, label %9777, !dbg !352

9777:                                             ; preds = %9768, %9761
  br label %9778, !dbg !356

9778:                                             ; preds = %9777
  %9779 = load i32, ptr %10, align 4, !dbg !357
  %9780 = add nsw i32 %9779, 1, !dbg !357
  store i32 %9780, ptr %10, align 4, !dbg !357
  %9781 = load i32, ptr %10, align 4, !dbg !334
  %9782 = load i32, ptr %8, align 4, !dbg !336
  %9783 = icmp slt i32 %9781, %9782, !dbg !337
  br i1 %9783, label %9784, label %14243, !dbg !338

9784:                                             ; preds = %9778
  %9785 = load i32, ptr %10, align 4, !dbg !339
  %9786 = sext i32 %9785 to i64, !dbg !342
  %9787 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9786, !dbg !342
  %9788 = load double, ptr %9787, align 16, !dbg !343
  %9789 = load double, ptr %6, align 8, !dbg !344
  %9790 = fcmp oeq double %9788, %9789, !dbg !345
  br i1 %9790, label %9791, label %9800, !dbg !346

9791:                                             ; preds = %9784
  %9792 = load i32, ptr %10, align 4, !dbg !347
  %9793 = sext i32 %9792 to i64, !dbg !348
  %9794 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9793, !dbg !348
  %9795 = getelementptr inbounds %struct.POINT, ptr %9794, i32 0, i32 1, !dbg !349
  %9796 = load double, ptr %9795, align 8, !dbg !349
  %9797 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9798 = load double, ptr %9797, align 8, !dbg !350
  %9799 = fcmp oeq double %9796, %9798, !dbg !351
  br i1 %9799, label %5429, label %9800, !dbg !352

9800:                                             ; preds = %9791, %9784
  br label %9801, !dbg !356

9801:                                             ; preds = %9800
  %9802 = load i32, ptr %10, align 4, !dbg !357
  %9803 = add nsw i32 %9802, 1, !dbg !357
  store i32 %9803, ptr %10, align 4, !dbg !357
  %9804 = load i32, ptr %10, align 4, !dbg !334
  %9805 = load i32, ptr %8, align 4, !dbg !336
  %9806 = icmp slt i32 %9804, %9805, !dbg !337
  br i1 %9806, label %9807, label %14243, !dbg !338

9807:                                             ; preds = %9801
  %9808 = load i32, ptr %10, align 4, !dbg !339
  %9809 = sext i32 %9808 to i64, !dbg !342
  %9810 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9809, !dbg !342
  %9811 = load double, ptr %9810, align 16, !dbg !343
  %9812 = load double, ptr %6, align 8, !dbg !344
  %9813 = fcmp oeq double %9811, %9812, !dbg !345
  br i1 %9813, label %9814, label %9823, !dbg !346

9814:                                             ; preds = %9807
  %9815 = load i32, ptr %10, align 4, !dbg !347
  %9816 = sext i32 %9815 to i64, !dbg !348
  %9817 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9816, !dbg !348
  %9818 = getelementptr inbounds %struct.POINT, ptr %9817, i32 0, i32 1, !dbg !349
  %9819 = load double, ptr %9818, align 8, !dbg !349
  %9820 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9821 = load double, ptr %9820, align 8, !dbg !350
  %9822 = fcmp oeq double %9819, %9821, !dbg !351
  br i1 %9822, label %5429, label %9823, !dbg !352

9823:                                             ; preds = %9814, %9807
  br label %9824, !dbg !356

9824:                                             ; preds = %9823
  %9825 = load i32, ptr %10, align 4, !dbg !357
  %9826 = add nsw i32 %9825, 1, !dbg !357
  store i32 %9826, ptr %10, align 4, !dbg !357
  %9827 = load i32, ptr %10, align 4, !dbg !334
  %9828 = load i32, ptr %8, align 4, !dbg !336
  %9829 = icmp slt i32 %9827, %9828, !dbg !337
  br i1 %9829, label %9830, label %14243, !dbg !338

9830:                                             ; preds = %9824
  %9831 = load i32, ptr %10, align 4, !dbg !339
  %9832 = sext i32 %9831 to i64, !dbg !342
  %9833 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9832, !dbg !342
  %9834 = load double, ptr %9833, align 16, !dbg !343
  %9835 = load double, ptr %6, align 8, !dbg !344
  %9836 = fcmp oeq double %9834, %9835, !dbg !345
  br i1 %9836, label %9837, label %9846, !dbg !346

9837:                                             ; preds = %9830
  %9838 = load i32, ptr %10, align 4, !dbg !347
  %9839 = sext i32 %9838 to i64, !dbg !348
  %9840 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9839, !dbg !348
  %9841 = getelementptr inbounds %struct.POINT, ptr %9840, i32 0, i32 1, !dbg !349
  %9842 = load double, ptr %9841, align 8, !dbg !349
  %9843 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9844 = load double, ptr %9843, align 8, !dbg !350
  %9845 = fcmp oeq double %9842, %9844, !dbg !351
  br i1 %9845, label %5429, label %9846, !dbg !352

9846:                                             ; preds = %9837, %9830
  br label %9847, !dbg !356

9847:                                             ; preds = %9846
  %9848 = load i32, ptr %10, align 4, !dbg !357
  %9849 = add nsw i32 %9848, 1, !dbg !357
  store i32 %9849, ptr %10, align 4, !dbg !357
  %9850 = load i32, ptr %10, align 4, !dbg !334
  %9851 = load i32, ptr %8, align 4, !dbg !336
  %9852 = icmp slt i32 %9850, %9851, !dbg !337
  br i1 %9852, label %9853, label %14243, !dbg !338

9853:                                             ; preds = %9847
  %9854 = load i32, ptr %10, align 4, !dbg !339
  %9855 = sext i32 %9854 to i64, !dbg !342
  %9856 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9855, !dbg !342
  %9857 = load double, ptr %9856, align 16, !dbg !343
  %9858 = load double, ptr %6, align 8, !dbg !344
  %9859 = fcmp oeq double %9857, %9858, !dbg !345
  br i1 %9859, label %9860, label %9869, !dbg !346

9860:                                             ; preds = %9853
  %9861 = load i32, ptr %10, align 4, !dbg !347
  %9862 = sext i32 %9861 to i64, !dbg !348
  %9863 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9862, !dbg !348
  %9864 = getelementptr inbounds %struct.POINT, ptr %9863, i32 0, i32 1, !dbg !349
  %9865 = load double, ptr %9864, align 8, !dbg !349
  %9866 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9867 = load double, ptr %9866, align 8, !dbg !350
  %9868 = fcmp oeq double %9865, %9867, !dbg !351
  br i1 %9868, label %5429, label %9869, !dbg !352

9869:                                             ; preds = %9860, %9853
  br label %9870, !dbg !356

9870:                                             ; preds = %9869
  %9871 = load i32, ptr %10, align 4, !dbg !357
  %9872 = add nsw i32 %9871, 1, !dbg !357
  store i32 %9872, ptr %10, align 4, !dbg !357
  %9873 = load i32, ptr %10, align 4, !dbg !334
  %9874 = load i32, ptr %8, align 4, !dbg !336
  %9875 = icmp slt i32 %9873, %9874, !dbg !337
  br i1 %9875, label %9876, label %14243, !dbg !338

9876:                                             ; preds = %9870
  %9877 = load i32, ptr %10, align 4, !dbg !339
  %9878 = sext i32 %9877 to i64, !dbg !342
  %9879 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9878, !dbg !342
  %9880 = load double, ptr %9879, align 16, !dbg !343
  %9881 = load double, ptr %6, align 8, !dbg !344
  %9882 = fcmp oeq double %9880, %9881, !dbg !345
  br i1 %9882, label %9883, label %9892, !dbg !346

9883:                                             ; preds = %9876
  %9884 = load i32, ptr %10, align 4, !dbg !347
  %9885 = sext i32 %9884 to i64, !dbg !348
  %9886 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9885, !dbg !348
  %9887 = getelementptr inbounds %struct.POINT, ptr %9886, i32 0, i32 1, !dbg !349
  %9888 = load double, ptr %9887, align 8, !dbg !349
  %9889 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9890 = load double, ptr %9889, align 8, !dbg !350
  %9891 = fcmp oeq double %9888, %9890, !dbg !351
  br i1 %9891, label %5429, label %9892, !dbg !352

9892:                                             ; preds = %9883, %9876
  br label %9893, !dbg !356

9893:                                             ; preds = %9892
  %9894 = load i32, ptr %10, align 4, !dbg !357
  %9895 = add nsw i32 %9894, 1, !dbg !357
  store i32 %9895, ptr %10, align 4, !dbg !357
  %9896 = load i32, ptr %10, align 4, !dbg !334
  %9897 = load i32, ptr %8, align 4, !dbg !336
  %9898 = icmp slt i32 %9896, %9897, !dbg !337
  br i1 %9898, label %9899, label %14243, !dbg !338

9899:                                             ; preds = %9893
  %9900 = load i32, ptr %10, align 4, !dbg !339
  %9901 = sext i32 %9900 to i64, !dbg !342
  %9902 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9901, !dbg !342
  %9903 = load double, ptr %9902, align 16, !dbg !343
  %9904 = load double, ptr %6, align 8, !dbg !344
  %9905 = fcmp oeq double %9903, %9904, !dbg !345
  br i1 %9905, label %9906, label %9915, !dbg !346

9906:                                             ; preds = %9899
  %9907 = load i32, ptr %10, align 4, !dbg !347
  %9908 = sext i32 %9907 to i64, !dbg !348
  %9909 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9908, !dbg !348
  %9910 = getelementptr inbounds %struct.POINT, ptr %9909, i32 0, i32 1, !dbg !349
  %9911 = load double, ptr %9910, align 8, !dbg !349
  %9912 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9913 = load double, ptr %9912, align 8, !dbg !350
  %9914 = fcmp oeq double %9911, %9913, !dbg !351
  br i1 %9914, label %5429, label %9915, !dbg !352

9915:                                             ; preds = %9906, %9899
  br label %9916, !dbg !356

9916:                                             ; preds = %9915
  %9917 = load i32, ptr %10, align 4, !dbg !357
  %9918 = add nsw i32 %9917, 1, !dbg !357
  store i32 %9918, ptr %10, align 4, !dbg !357
  %9919 = load i32, ptr %10, align 4, !dbg !334
  %9920 = load i32, ptr %8, align 4, !dbg !336
  %9921 = icmp slt i32 %9919, %9920, !dbg !337
  br i1 %9921, label %9922, label %14243, !dbg !338

9922:                                             ; preds = %9916
  %9923 = load i32, ptr %10, align 4, !dbg !339
  %9924 = sext i32 %9923 to i64, !dbg !342
  %9925 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9924, !dbg !342
  %9926 = load double, ptr %9925, align 16, !dbg !343
  %9927 = load double, ptr %6, align 8, !dbg !344
  %9928 = fcmp oeq double %9926, %9927, !dbg !345
  br i1 %9928, label %9929, label %9938, !dbg !346

9929:                                             ; preds = %9922
  %9930 = load i32, ptr %10, align 4, !dbg !347
  %9931 = sext i32 %9930 to i64, !dbg !348
  %9932 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9931, !dbg !348
  %9933 = getelementptr inbounds %struct.POINT, ptr %9932, i32 0, i32 1, !dbg !349
  %9934 = load double, ptr %9933, align 8, !dbg !349
  %9935 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9936 = load double, ptr %9935, align 8, !dbg !350
  %9937 = fcmp oeq double %9934, %9936, !dbg !351
  br i1 %9937, label %5429, label %9938, !dbg !352

9938:                                             ; preds = %9929, %9922
  br label %9939, !dbg !356

9939:                                             ; preds = %9938
  %9940 = load i32, ptr %10, align 4, !dbg !357
  %9941 = add nsw i32 %9940, 1, !dbg !357
  store i32 %9941, ptr %10, align 4, !dbg !357
  %9942 = load i32, ptr %10, align 4, !dbg !334
  %9943 = load i32, ptr %8, align 4, !dbg !336
  %9944 = icmp slt i32 %9942, %9943, !dbg !337
  br i1 %9944, label %9945, label %14243, !dbg !338

9945:                                             ; preds = %9939
  %9946 = load i32, ptr %10, align 4, !dbg !339
  %9947 = sext i32 %9946 to i64, !dbg !342
  %9948 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9947, !dbg !342
  %9949 = load double, ptr %9948, align 16, !dbg !343
  %9950 = load double, ptr %6, align 8, !dbg !344
  %9951 = fcmp oeq double %9949, %9950, !dbg !345
  br i1 %9951, label %9952, label %9961, !dbg !346

9952:                                             ; preds = %9945
  %9953 = load i32, ptr %10, align 4, !dbg !347
  %9954 = sext i32 %9953 to i64, !dbg !348
  %9955 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9954, !dbg !348
  %9956 = getelementptr inbounds %struct.POINT, ptr %9955, i32 0, i32 1, !dbg !349
  %9957 = load double, ptr %9956, align 8, !dbg !349
  %9958 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9959 = load double, ptr %9958, align 8, !dbg !350
  %9960 = fcmp oeq double %9957, %9959, !dbg !351
  br i1 %9960, label %5429, label %9961, !dbg !352

9961:                                             ; preds = %9952, %9945
  br label %9962, !dbg !356

9962:                                             ; preds = %9961
  %9963 = load i32, ptr %10, align 4, !dbg !357
  %9964 = add nsw i32 %9963, 1, !dbg !357
  store i32 %9964, ptr %10, align 4, !dbg !357
  %9965 = load i32, ptr %10, align 4, !dbg !334
  %9966 = load i32, ptr %8, align 4, !dbg !336
  %9967 = icmp slt i32 %9965, %9966, !dbg !337
  br i1 %9967, label %9968, label %14243, !dbg !338

9968:                                             ; preds = %9962
  %9969 = load i32, ptr %10, align 4, !dbg !339
  %9970 = sext i32 %9969 to i64, !dbg !342
  %9971 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9970, !dbg !342
  %9972 = load double, ptr %9971, align 16, !dbg !343
  %9973 = load double, ptr %6, align 8, !dbg !344
  %9974 = fcmp oeq double %9972, %9973, !dbg !345
  br i1 %9974, label %9975, label %9984, !dbg !346

9975:                                             ; preds = %9968
  %9976 = load i32, ptr %10, align 4, !dbg !347
  %9977 = sext i32 %9976 to i64, !dbg !348
  %9978 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9977, !dbg !348
  %9979 = getelementptr inbounds %struct.POINT, ptr %9978, i32 0, i32 1, !dbg !349
  %9980 = load double, ptr %9979, align 8, !dbg !349
  %9981 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %9982 = load double, ptr %9981, align 8, !dbg !350
  %9983 = fcmp oeq double %9980, %9982, !dbg !351
  br i1 %9983, label %5429, label %9984, !dbg !352

9984:                                             ; preds = %9975, %9968
  br label %9985, !dbg !356

9985:                                             ; preds = %9984
  %9986 = load i32, ptr %10, align 4, !dbg !357
  %9987 = add nsw i32 %9986, 1, !dbg !357
  store i32 %9987, ptr %10, align 4, !dbg !357
  %9988 = load i32, ptr %10, align 4, !dbg !334
  %9989 = load i32, ptr %8, align 4, !dbg !336
  %9990 = icmp slt i32 %9988, %9989, !dbg !337
  br i1 %9990, label %9991, label %14243, !dbg !338

9991:                                             ; preds = %9985
  %9992 = load i32, ptr %10, align 4, !dbg !339
  %9993 = sext i32 %9992 to i64, !dbg !342
  %9994 = getelementptr inbounds %struct.POINT, ptr %26, i64 %9993, !dbg !342
  %9995 = load double, ptr %9994, align 16, !dbg !343
  %9996 = load double, ptr %6, align 8, !dbg !344
  %9997 = fcmp oeq double %9995, %9996, !dbg !345
  br i1 %9997, label %9998, label %10007, !dbg !346

9998:                                             ; preds = %9991
  %9999 = load i32, ptr %10, align 4, !dbg !347
  %10000 = sext i32 %9999 to i64, !dbg !348
  %10001 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10000, !dbg !348
  %10002 = getelementptr inbounds %struct.POINT, ptr %10001, i32 0, i32 1, !dbg !349
  %10003 = load double, ptr %10002, align 8, !dbg !349
  %10004 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10005 = load double, ptr %10004, align 8, !dbg !350
  %10006 = fcmp oeq double %10003, %10005, !dbg !351
  br i1 %10006, label %5429, label %10007, !dbg !352

10007:                                            ; preds = %9998, %9991
  br label %10008, !dbg !356

10008:                                            ; preds = %10007
  %10009 = load i32, ptr %10, align 4, !dbg !357
  %10010 = add nsw i32 %10009, 1, !dbg !357
  store i32 %10010, ptr %10, align 4, !dbg !357
  %10011 = load i32, ptr %10, align 4, !dbg !334
  %10012 = load i32, ptr %8, align 4, !dbg !336
  %10013 = icmp slt i32 %10011, %10012, !dbg !337
  br i1 %10013, label %10014, label %14243, !dbg !338

10014:                                            ; preds = %10008
  %10015 = load i32, ptr %10, align 4, !dbg !339
  %10016 = sext i32 %10015 to i64, !dbg !342
  %10017 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10016, !dbg !342
  %10018 = load double, ptr %10017, align 16, !dbg !343
  %10019 = load double, ptr %6, align 8, !dbg !344
  %10020 = fcmp oeq double %10018, %10019, !dbg !345
  br i1 %10020, label %10021, label %10030, !dbg !346

10021:                                            ; preds = %10014
  %10022 = load i32, ptr %10, align 4, !dbg !347
  %10023 = sext i32 %10022 to i64, !dbg !348
  %10024 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10023, !dbg !348
  %10025 = getelementptr inbounds %struct.POINT, ptr %10024, i32 0, i32 1, !dbg !349
  %10026 = load double, ptr %10025, align 8, !dbg !349
  %10027 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10028 = load double, ptr %10027, align 8, !dbg !350
  %10029 = fcmp oeq double %10026, %10028, !dbg !351
  br i1 %10029, label %5429, label %10030, !dbg !352

10030:                                            ; preds = %10021, %10014
  br label %10031, !dbg !356

10031:                                            ; preds = %10030
  %10032 = load i32, ptr %10, align 4, !dbg !357
  %10033 = add nsw i32 %10032, 1, !dbg !357
  store i32 %10033, ptr %10, align 4, !dbg !357
  %10034 = load i32, ptr %10, align 4, !dbg !334
  %10035 = load i32, ptr %8, align 4, !dbg !336
  %10036 = icmp slt i32 %10034, %10035, !dbg !337
  br i1 %10036, label %10037, label %14243, !dbg !338

10037:                                            ; preds = %10031
  %10038 = load i32, ptr %10, align 4, !dbg !339
  %10039 = sext i32 %10038 to i64, !dbg !342
  %10040 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10039, !dbg !342
  %10041 = load double, ptr %10040, align 16, !dbg !343
  %10042 = load double, ptr %6, align 8, !dbg !344
  %10043 = fcmp oeq double %10041, %10042, !dbg !345
  br i1 %10043, label %10044, label %10053, !dbg !346

10044:                                            ; preds = %10037
  %10045 = load i32, ptr %10, align 4, !dbg !347
  %10046 = sext i32 %10045 to i64, !dbg !348
  %10047 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10046, !dbg !348
  %10048 = getelementptr inbounds %struct.POINT, ptr %10047, i32 0, i32 1, !dbg !349
  %10049 = load double, ptr %10048, align 8, !dbg !349
  %10050 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10051 = load double, ptr %10050, align 8, !dbg !350
  %10052 = fcmp oeq double %10049, %10051, !dbg !351
  br i1 %10052, label %5429, label %10053, !dbg !352

10053:                                            ; preds = %10044, %10037
  br label %10054, !dbg !356

10054:                                            ; preds = %10053
  %10055 = load i32, ptr %10, align 4, !dbg !357
  %10056 = add nsw i32 %10055, 1, !dbg !357
  store i32 %10056, ptr %10, align 4, !dbg !357
  %10057 = load i32, ptr %10, align 4, !dbg !334
  %10058 = load i32, ptr %8, align 4, !dbg !336
  %10059 = icmp slt i32 %10057, %10058, !dbg !337
  br i1 %10059, label %10060, label %14243, !dbg !338

10060:                                            ; preds = %10054
  %10061 = load i32, ptr %10, align 4, !dbg !339
  %10062 = sext i32 %10061 to i64, !dbg !342
  %10063 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10062, !dbg !342
  %10064 = load double, ptr %10063, align 16, !dbg !343
  %10065 = load double, ptr %6, align 8, !dbg !344
  %10066 = fcmp oeq double %10064, %10065, !dbg !345
  br i1 %10066, label %10067, label %10076, !dbg !346

10067:                                            ; preds = %10060
  %10068 = load i32, ptr %10, align 4, !dbg !347
  %10069 = sext i32 %10068 to i64, !dbg !348
  %10070 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10069, !dbg !348
  %10071 = getelementptr inbounds %struct.POINT, ptr %10070, i32 0, i32 1, !dbg !349
  %10072 = load double, ptr %10071, align 8, !dbg !349
  %10073 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10074 = load double, ptr %10073, align 8, !dbg !350
  %10075 = fcmp oeq double %10072, %10074, !dbg !351
  br i1 %10075, label %5429, label %10076, !dbg !352

10076:                                            ; preds = %10067, %10060
  br label %10077, !dbg !356

10077:                                            ; preds = %10076
  %10078 = load i32, ptr %10, align 4, !dbg !357
  %10079 = add nsw i32 %10078, 1, !dbg !357
  store i32 %10079, ptr %10, align 4, !dbg !357
  %10080 = load i32, ptr %10, align 4, !dbg !334
  %10081 = load i32, ptr %8, align 4, !dbg !336
  %10082 = icmp slt i32 %10080, %10081, !dbg !337
  br i1 %10082, label %10083, label %14243, !dbg !338

10083:                                            ; preds = %10077
  %10084 = load i32, ptr %10, align 4, !dbg !339
  %10085 = sext i32 %10084 to i64, !dbg !342
  %10086 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10085, !dbg !342
  %10087 = load double, ptr %10086, align 16, !dbg !343
  %10088 = load double, ptr %6, align 8, !dbg !344
  %10089 = fcmp oeq double %10087, %10088, !dbg !345
  br i1 %10089, label %10090, label %10099, !dbg !346

10090:                                            ; preds = %10083
  %10091 = load i32, ptr %10, align 4, !dbg !347
  %10092 = sext i32 %10091 to i64, !dbg !348
  %10093 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10092, !dbg !348
  %10094 = getelementptr inbounds %struct.POINT, ptr %10093, i32 0, i32 1, !dbg !349
  %10095 = load double, ptr %10094, align 8, !dbg !349
  %10096 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10097 = load double, ptr %10096, align 8, !dbg !350
  %10098 = fcmp oeq double %10095, %10097, !dbg !351
  br i1 %10098, label %5429, label %10099, !dbg !352

10099:                                            ; preds = %10090, %10083
  br label %10100, !dbg !356

10100:                                            ; preds = %10099
  %10101 = load i32, ptr %10, align 4, !dbg !357
  %10102 = add nsw i32 %10101, 1, !dbg !357
  store i32 %10102, ptr %10, align 4, !dbg !357
  %10103 = load i32, ptr %10, align 4, !dbg !334
  %10104 = load i32, ptr %8, align 4, !dbg !336
  %10105 = icmp slt i32 %10103, %10104, !dbg !337
  br i1 %10105, label %10106, label %14243, !dbg !338

10106:                                            ; preds = %10100
  %10107 = load i32, ptr %10, align 4, !dbg !339
  %10108 = sext i32 %10107 to i64, !dbg !342
  %10109 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10108, !dbg !342
  %10110 = load double, ptr %10109, align 16, !dbg !343
  %10111 = load double, ptr %6, align 8, !dbg !344
  %10112 = fcmp oeq double %10110, %10111, !dbg !345
  br i1 %10112, label %10113, label %10122, !dbg !346

10113:                                            ; preds = %10106
  %10114 = load i32, ptr %10, align 4, !dbg !347
  %10115 = sext i32 %10114 to i64, !dbg !348
  %10116 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10115, !dbg !348
  %10117 = getelementptr inbounds %struct.POINT, ptr %10116, i32 0, i32 1, !dbg !349
  %10118 = load double, ptr %10117, align 8, !dbg !349
  %10119 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10120 = load double, ptr %10119, align 8, !dbg !350
  %10121 = fcmp oeq double %10118, %10120, !dbg !351
  br i1 %10121, label %5429, label %10122, !dbg !352

10122:                                            ; preds = %10113, %10106
  br label %10123, !dbg !356

10123:                                            ; preds = %10122
  %10124 = load i32, ptr %10, align 4, !dbg !357
  %10125 = add nsw i32 %10124, 1, !dbg !357
  store i32 %10125, ptr %10, align 4, !dbg !357
  %10126 = load i32, ptr %10, align 4, !dbg !334
  %10127 = load i32, ptr %8, align 4, !dbg !336
  %10128 = icmp slt i32 %10126, %10127, !dbg !337
  br i1 %10128, label %10129, label %14243, !dbg !338

10129:                                            ; preds = %10123
  %10130 = load i32, ptr %10, align 4, !dbg !339
  %10131 = sext i32 %10130 to i64, !dbg !342
  %10132 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10131, !dbg !342
  %10133 = load double, ptr %10132, align 16, !dbg !343
  %10134 = load double, ptr %6, align 8, !dbg !344
  %10135 = fcmp oeq double %10133, %10134, !dbg !345
  br i1 %10135, label %10136, label %10145, !dbg !346

10136:                                            ; preds = %10129
  %10137 = load i32, ptr %10, align 4, !dbg !347
  %10138 = sext i32 %10137 to i64, !dbg !348
  %10139 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10138, !dbg !348
  %10140 = getelementptr inbounds %struct.POINT, ptr %10139, i32 0, i32 1, !dbg !349
  %10141 = load double, ptr %10140, align 8, !dbg !349
  %10142 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10143 = load double, ptr %10142, align 8, !dbg !350
  %10144 = fcmp oeq double %10141, %10143, !dbg !351
  br i1 %10144, label %5429, label %10145, !dbg !352

10145:                                            ; preds = %10136, %10129
  br label %10146, !dbg !356

10146:                                            ; preds = %10145
  %10147 = load i32, ptr %10, align 4, !dbg !357
  %10148 = add nsw i32 %10147, 1, !dbg !357
  store i32 %10148, ptr %10, align 4, !dbg !357
  %10149 = load i32, ptr %10, align 4, !dbg !334
  %10150 = load i32, ptr %8, align 4, !dbg !336
  %10151 = icmp slt i32 %10149, %10150, !dbg !337
  br i1 %10151, label %10152, label %14243, !dbg !338

10152:                                            ; preds = %10146
  %10153 = load i32, ptr %10, align 4, !dbg !339
  %10154 = sext i32 %10153 to i64, !dbg !342
  %10155 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10154, !dbg !342
  %10156 = load double, ptr %10155, align 16, !dbg !343
  %10157 = load double, ptr %6, align 8, !dbg !344
  %10158 = fcmp oeq double %10156, %10157, !dbg !345
  br i1 %10158, label %10159, label %10168, !dbg !346

10159:                                            ; preds = %10152
  %10160 = load i32, ptr %10, align 4, !dbg !347
  %10161 = sext i32 %10160 to i64, !dbg !348
  %10162 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10161, !dbg !348
  %10163 = getelementptr inbounds %struct.POINT, ptr %10162, i32 0, i32 1, !dbg !349
  %10164 = load double, ptr %10163, align 8, !dbg !349
  %10165 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10166 = load double, ptr %10165, align 8, !dbg !350
  %10167 = fcmp oeq double %10164, %10166, !dbg !351
  br i1 %10167, label %5429, label %10168, !dbg !352

10168:                                            ; preds = %10159, %10152
  br label %10169, !dbg !356

10169:                                            ; preds = %10168
  %10170 = load i32, ptr %10, align 4, !dbg !357
  %10171 = add nsw i32 %10170, 1, !dbg !357
  store i32 %10171, ptr %10, align 4, !dbg !357
  %10172 = load i32, ptr %10, align 4, !dbg !334
  %10173 = load i32, ptr %8, align 4, !dbg !336
  %10174 = icmp slt i32 %10172, %10173, !dbg !337
  br i1 %10174, label %10175, label %14243, !dbg !338

10175:                                            ; preds = %10169
  %10176 = load i32, ptr %10, align 4, !dbg !339
  %10177 = sext i32 %10176 to i64, !dbg !342
  %10178 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10177, !dbg !342
  %10179 = load double, ptr %10178, align 16, !dbg !343
  %10180 = load double, ptr %6, align 8, !dbg !344
  %10181 = fcmp oeq double %10179, %10180, !dbg !345
  br i1 %10181, label %10182, label %10191, !dbg !346

10182:                                            ; preds = %10175
  %10183 = load i32, ptr %10, align 4, !dbg !347
  %10184 = sext i32 %10183 to i64, !dbg !348
  %10185 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10184, !dbg !348
  %10186 = getelementptr inbounds %struct.POINT, ptr %10185, i32 0, i32 1, !dbg !349
  %10187 = load double, ptr %10186, align 8, !dbg !349
  %10188 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10189 = load double, ptr %10188, align 8, !dbg !350
  %10190 = fcmp oeq double %10187, %10189, !dbg !351
  br i1 %10190, label %5429, label %10191, !dbg !352

10191:                                            ; preds = %10182, %10175
  br label %10192, !dbg !356

10192:                                            ; preds = %10191
  %10193 = load i32, ptr %10, align 4, !dbg !357
  %10194 = add nsw i32 %10193, 1, !dbg !357
  store i32 %10194, ptr %10, align 4, !dbg !357
  %10195 = load i32, ptr %10, align 4, !dbg !334
  %10196 = load i32, ptr %8, align 4, !dbg !336
  %10197 = icmp slt i32 %10195, %10196, !dbg !337
  br i1 %10197, label %10198, label %14243, !dbg !338

10198:                                            ; preds = %10192
  %10199 = load i32, ptr %10, align 4, !dbg !339
  %10200 = sext i32 %10199 to i64, !dbg !342
  %10201 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10200, !dbg !342
  %10202 = load double, ptr %10201, align 16, !dbg !343
  %10203 = load double, ptr %6, align 8, !dbg !344
  %10204 = fcmp oeq double %10202, %10203, !dbg !345
  br i1 %10204, label %10205, label %10214, !dbg !346

10205:                                            ; preds = %10198
  %10206 = load i32, ptr %10, align 4, !dbg !347
  %10207 = sext i32 %10206 to i64, !dbg !348
  %10208 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10207, !dbg !348
  %10209 = getelementptr inbounds %struct.POINT, ptr %10208, i32 0, i32 1, !dbg !349
  %10210 = load double, ptr %10209, align 8, !dbg !349
  %10211 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10212 = load double, ptr %10211, align 8, !dbg !350
  %10213 = fcmp oeq double %10210, %10212, !dbg !351
  br i1 %10213, label %5429, label %10214, !dbg !352

10214:                                            ; preds = %10205, %10198
  br label %10215, !dbg !356

10215:                                            ; preds = %10214
  %10216 = load i32, ptr %10, align 4, !dbg !357
  %10217 = add nsw i32 %10216, 1, !dbg !357
  store i32 %10217, ptr %10, align 4, !dbg !357
  %10218 = load i32, ptr %10, align 4, !dbg !334
  %10219 = load i32, ptr %8, align 4, !dbg !336
  %10220 = icmp slt i32 %10218, %10219, !dbg !337
  br i1 %10220, label %10221, label %14243, !dbg !338

10221:                                            ; preds = %10215
  %10222 = load i32, ptr %10, align 4, !dbg !339
  %10223 = sext i32 %10222 to i64, !dbg !342
  %10224 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10223, !dbg !342
  %10225 = load double, ptr %10224, align 16, !dbg !343
  %10226 = load double, ptr %6, align 8, !dbg !344
  %10227 = fcmp oeq double %10225, %10226, !dbg !345
  br i1 %10227, label %10228, label %10237, !dbg !346

10228:                                            ; preds = %10221
  %10229 = load i32, ptr %10, align 4, !dbg !347
  %10230 = sext i32 %10229 to i64, !dbg !348
  %10231 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10230, !dbg !348
  %10232 = getelementptr inbounds %struct.POINT, ptr %10231, i32 0, i32 1, !dbg !349
  %10233 = load double, ptr %10232, align 8, !dbg !349
  %10234 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10235 = load double, ptr %10234, align 8, !dbg !350
  %10236 = fcmp oeq double %10233, %10235, !dbg !351
  br i1 %10236, label %5429, label %10237, !dbg !352

10237:                                            ; preds = %10228, %10221
  br label %10238, !dbg !356

10238:                                            ; preds = %10237
  %10239 = load i32, ptr %10, align 4, !dbg !357
  %10240 = add nsw i32 %10239, 1, !dbg !357
  store i32 %10240, ptr %10, align 4, !dbg !357
  %10241 = load i32, ptr %10, align 4, !dbg !334
  %10242 = load i32, ptr %8, align 4, !dbg !336
  %10243 = icmp slt i32 %10241, %10242, !dbg !337
  br i1 %10243, label %10244, label %14243, !dbg !338

10244:                                            ; preds = %10238
  %10245 = load i32, ptr %10, align 4, !dbg !339
  %10246 = sext i32 %10245 to i64, !dbg !342
  %10247 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10246, !dbg !342
  %10248 = load double, ptr %10247, align 16, !dbg !343
  %10249 = load double, ptr %6, align 8, !dbg !344
  %10250 = fcmp oeq double %10248, %10249, !dbg !345
  br i1 %10250, label %10251, label %10260, !dbg !346

10251:                                            ; preds = %10244
  %10252 = load i32, ptr %10, align 4, !dbg !347
  %10253 = sext i32 %10252 to i64, !dbg !348
  %10254 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10253, !dbg !348
  %10255 = getelementptr inbounds %struct.POINT, ptr %10254, i32 0, i32 1, !dbg !349
  %10256 = load double, ptr %10255, align 8, !dbg !349
  %10257 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10258 = load double, ptr %10257, align 8, !dbg !350
  %10259 = fcmp oeq double %10256, %10258, !dbg !351
  br i1 %10259, label %5429, label %10260, !dbg !352

10260:                                            ; preds = %10251, %10244
  br label %10261, !dbg !356

10261:                                            ; preds = %10260
  %10262 = load i32, ptr %10, align 4, !dbg !357
  %10263 = add nsw i32 %10262, 1, !dbg !357
  store i32 %10263, ptr %10, align 4, !dbg !357
  %10264 = load i32, ptr %10, align 4, !dbg !334
  %10265 = load i32, ptr %8, align 4, !dbg !336
  %10266 = icmp slt i32 %10264, %10265, !dbg !337
  br i1 %10266, label %10267, label %14243, !dbg !338

10267:                                            ; preds = %10261
  %10268 = load i32, ptr %10, align 4, !dbg !339
  %10269 = sext i32 %10268 to i64, !dbg !342
  %10270 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10269, !dbg !342
  %10271 = load double, ptr %10270, align 16, !dbg !343
  %10272 = load double, ptr %6, align 8, !dbg !344
  %10273 = fcmp oeq double %10271, %10272, !dbg !345
  br i1 %10273, label %10274, label %10283, !dbg !346

10274:                                            ; preds = %10267
  %10275 = load i32, ptr %10, align 4, !dbg !347
  %10276 = sext i32 %10275 to i64, !dbg !348
  %10277 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10276, !dbg !348
  %10278 = getelementptr inbounds %struct.POINT, ptr %10277, i32 0, i32 1, !dbg !349
  %10279 = load double, ptr %10278, align 8, !dbg !349
  %10280 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10281 = load double, ptr %10280, align 8, !dbg !350
  %10282 = fcmp oeq double %10279, %10281, !dbg !351
  br i1 %10282, label %5429, label %10283, !dbg !352

10283:                                            ; preds = %10274, %10267
  br label %10284, !dbg !356

10284:                                            ; preds = %10283
  %10285 = load i32, ptr %10, align 4, !dbg !357
  %10286 = add nsw i32 %10285, 1, !dbg !357
  store i32 %10286, ptr %10, align 4, !dbg !357
  %10287 = load i32, ptr %10, align 4, !dbg !334
  %10288 = load i32, ptr %8, align 4, !dbg !336
  %10289 = icmp slt i32 %10287, %10288, !dbg !337
  br i1 %10289, label %10290, label %14243, !dbg !338

10290:                                            ; preds = %10284
  %10291 = load i32, ptr %10, align 4, !dbg !339
  %10292 = sext i32 %10291 to i64, !dbg !342
  %10293 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10292, !dbg !342
  %10294 = load double, ptr %10293, align 16, !dbg !343
  %10295 = load double, ptr %6, align 8, !dbg !344
  %10296 = fcmp oeq double %10294, %10295, !dbg !345
  br i1 %10296, label %10297, label %10306, !dbg !346

10297:                                            ; preds = %10290
  %10298 = load i32, ptr %10, align 4, !dbg !347
  %10299 = sext i32 %10298 to i64, !dbg !348
  %10300 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10299, !dbg !348
  %10301 = getelementptr inbounds %struct.POINT, ptr %10300, i32 0, i32 1, !dbg !349
  %10302 = load double, ptr %10301, align 8, !dbg !349
  %10303 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10304 = load double, ptr %10303, align 8, !dbg !350
  %10305 = fcmp oeq double %10302, %10304, !dbg !351
  br i1 %10305, label %5429, label %10306, !dbg !352

10306:                                            ; preds = %10297, %10290
  br label %10307, !dbg !356

10307:                                            ; preds = %10306
  %10308 = load i32, ptr %10, align 4, !dbg !357
  %10309 = add nsw i32 %10308, 1, !dbg !357
  store i32 %10309, ptr %10, align 4, !dbg !357
  %10310 = load i32, ptr %10, align 4, !dbg !334
  %10311 = load i32, ptr %8, align 4, !dbg !336
  %10312 = icmp slt i32 %10310, %10311, !dbg !337
  br i1 %10312, label %10313, label %14243, !dbg !338

10313:                                            ; preds = %10307
  %10314 = load i32, ptr %10, align 4, !dbg !339
  %10315 = sext i32 %10314 to i64, !dbg !342
  %10316 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10315, !dbg !342
  %10317 = load double, ptr %10316, align 16, !dbg !343
  %10318 = load double, ptr %6, align 8, !dbg !344
  %10319 = fcmp oeq double %10317, %10318, !dbg !345
  br i1 %10319, label %10320, label %10329, !dbg !346

10320:                                            ; preds = %10313
  %10321 = load i32, ptr %10, align 4, !dbg !347
  %10322 = sext i32 %10321 to i64, !dbg !348
  %10323 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10322, !dbg !348
  %10324 = getelementptr inbounds %struct.POINT, ptr %10323, i32 0, i32 1, !dbg !349
  %10325 = load double, ptr %10324, align 8, !dbg !349
  %10326 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10327 = load double, ptr %10326, align 8, !dbg !350
  %10328 = fcmp oeq double %10325, %10327, !dbg !351
  br i1 %10328, label %5429, label %10329, !dbg !352

10329:                                            ; preds = %10320, %10313
  br label %10330, !dbg !356

10330:                                            ; preds = %10329
  %10331 = load i32, ptr %10, align 4, !dbg !357
  %10332 = add nsw i32 %10331, 1, !dbg !357
  store i32 %10332, ptr %10, align 4, !dbg !357
  %10333 = load i32, ptr %10, align 4, !dbg !334
  %10334 = load i32, ptr %8, align 4, !dbg !336
  %10335 = icmp slt i32 %10333, %10334, !dbg !337
  br i1 %10335, label %10336, label %14243, !dbg !338

10336:                                            ; preds = %10330
  %10337 = load i32, ptr %10, align 4, !dbg !339
  %10338 = sext i32 %10337 to i64, !dbg !342
  %10339 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10338, !dbg !342
  %10340 = load double, ptr %10339, align 16, !dbg !343
  %10341 = load double, ptr %6, align 8, !dbg !344
  %10342 = fcmp oeq double %10340, %10341, !dbg !345
  br i1 %10342, label %10343, label %10352, !dbg !346

10343:                                            ; preds = %10336
  %10344 = load i32, ptr %10, align 4, !dbg !347
  %10345 = sext i32 %10344 to i64, !dbg !348
  %10346 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10345, !dbg !348
  %10347 = getelementptr inbounds %struct.POINT, ptr %10346, i32 0, i32 1, !dbg !349
  %10348 = load double, ptr %10347, align 8, !dbg !349
  %10349 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10350 = load double, ptr %10349, align 8, !dbg !350
  %10351 = fcmp oeq double %10348, %10350, !dbg !351
  br i1 %10351, label %5429, label %10352, !dbg !352

10352:                                            ; preds = %10343, %10336
  br label %10353, !dbg !356

10353:                                            ; preds = %10352
  %10354 = load i32, ptr %10, align 4, !dbg !357
  %10355 = add nsw i32 %10354, 1, !dbg !357
  store i32 %10355, ptr %10, align 4, !dbg !357
  %10356 = load i32, ptr %10, align 4, !dbg !334
  %10357 = load i32, ptr %8, align 4, !dbg !336
  %10358 = icmp slt i32 %10356, %10357, !dbg !337
  br i1 %10358, label %10359, label %14243, !dbg !338

10359:                                            ; preds = %10353
  %10360 = load i32, ptr %10, align 4, !dbg !339
  %10361 = sext i32 %10360 to i64, !dbg !342
  %10362 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10361, !dbg !342
  %10363 = load double, ptr %10362, align 16, !dbg !343
  %10364 = load double, ptr %6, align 8, !dbg !344
  %10365 = fcmp oeq double %10363, %10364, !dbg !345
  br i1 %10365, label %10366, label %10375, !dbg !346

10366:                                            ; preds = %10359
  %10367 = load i32, ptr %10, align 4, !dbg !347
  %10368 = sext i32 %10367 to i64, !dbg !348
  %10369 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10368, !dbg !348
  %10370 = getelementptr inbounds %struct.POINT, ptr %10369, i32 0, i32 1, !dbg !349
  %10371 = load double, ptr %10370, align 8, !dbg !349
  %10372 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10373 = load double, ptr %10372, align 8, !dbg !350
  %10374 = fcmp oeq double %10371, %10373, !dbg !351
  br i1 %10374, label %5429, label %10375, !dbg !352

10375:                                            ; preds = %10366, %10359
  br label %10376, !dbg !356

10376:                                            ; preds = %10375
  %10377 = load i32, ptr %10, align 4, !dbg !357
  %10378 = add nsw i32 %10377, 1, !dbg !357
  store i32 %10378, ptr %10, align 4, !dbg !357
  %10379 = load i32, ptr %10, align 4, !dbg !334
  %10380 = load i32, ptr %8, align 4, !dbg !336
  %10381 = icmp slt i32 %10379, %10380, !dbg !337
  br i1 %10381, label %10382, label %14243, !dbg !338

10382:                                            ; preds = %10376
  %10383 = load i32, ptr %10, align 4, !dbg !339
  %10384 = sext i32 %10383 to i64, !dbg !342
  %10385 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10384, !dbg !342
  %10386 = load double, ptr %10385, align 16, !dbg !343
  %10387 = load double, ptr %6, align 8, !dbg !344
  %10388 = fcmp oeq double %10386, %10387, !dbg !345
  br i1 %10388, label %10389, label %10398, !dbg !346

10389:                                            ; preds = %10382
  %10390 = load i32, ptr %10, align 4, !dbg !347
  %10391 = sext i32 %10390 to i64, !dbg !348
  %10392 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10391, !dbg !348
  %10393 = getelementptr inbounds %struct.POINT, ptr %10392, i32 0, i32 1, !dbg !349
  %10394 = load double, ptr %10393, align 8, !dbg !349
  %10395 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10396 = load double, ptr %10395, align 8, !dbg !350
  %10397 = fcmp oeq double %10394, %10396, !dbg !351
  br i1 %10397, label %5429, label %10398, !dbg !352

10398:                                            ; preds = %10389, %10382
  br label %10399, !dbg !356

10399:                                            ; preds = %10398
  %10400 = load i32, ptr %10, align 4, !dbg !357
  %10401 = add nsw i32 %10400, 1, !dbg !357
  store i32 %10401, ptr %10, align 4, !dbg !357
  %10402 = load i32, ptr %10, align 4, !dbg !334
  %10403 = load i32, ptr %8, align 4, !dbg !336
  %10404 = icmp slt i32 %10402, %10403, !dbg !337
  br i1 %10404, label %10405, label %14243, !dbg !338

10405:                                            ; preds = %10399
  %10406 = load i32, ptr %10, align 4, !dbg !339
  %10407 = sext i32 %10406 to i64, !dbg !342
  %10408 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10407, !dbg !342
  %10409 = load double, ptr %10408, align 16, !dbg !343
  %10410 = load double, ptr %6, align 8, !dbg !344
  %10411 = fcmp oeq double %10409, %10410, !dbg !345
  br i1 %10411, label %10412, label %10421, !dbg !346

10412:                                            ; preds = %10405
  %10413 = load i32, ptr %10, align 4, !dbg !347
  %10414 = sext i32 %10413 to i64, !dbg !348
  %10415 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10414, !dbg !348
  %10416 = getelementptr inbounds %struct.POINT, ptr %10415, i32 0, i32 1, !dbg !349
  %10417 = load double, ptr %10416, align 8, !dbg !349
  %10418 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10419 = load double, ptr %10418, align 8, !dbg !350
  %10420 = fcmp oeq double %10417, %10419, !dbg !351
  br i1 %10420, label %5429, label %10421, !dbg !352

10421:                                            ; preds = %10412, %10405
  br label %10422, !dbg !356

10422:                                            ; preds = %10421
  %10423 = load i32, ptr %10, align 4, !dbg !357
  %10424 = add nsw i32 %10423, 1, !dbg !357
  store i32 %10424, ptr %10, align 4, !dbg !357
  %10425 = load i32, ptr %10, align 4, !dbg !334
  %10426 = load i32, ptr %8, align 4, !dbg !336
  %10427 = icmp slt i32 %10425, %10426, !dbg !337
  br i1 %10427, label %10428, label %14243, !dbg !338

10428:                                            ; preds = %10422
  %10429 = load i32, ptr %10, align 4, !dbg !339
  %10430 = sext i32 %10429 to i64, !dbg !342
  %10431 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10430, !dbg !342
  %10432 = load double, ptr %10431, align 16, !dbg !343
  %10433 = load double, ptr %6, align 8, !dbg !344
  %10434 = fcmp oeq double %10432, %10433, !dbg !345
  br i1 %10434, label %10435, label %10444, !dbg !346

10435:                                            ; preds = %10428
  %10436 = load i32, ptr %10, align 4, !dbg !347
  %10437 = sext i32 %10436 to i64, !dbg !348
  %10438 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10437, !dbg !348
  %10439 = getelementptr inbounds %struct.POINT, ptr %10438, i32 0, i32 1, !dbg !349
  %10440 = load double, ptr %10439, align 8, !dbg !349
  %10441 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10442 = load double, ptr %10441, align 8, !dbg !350
  %10443 = fcmp oeq double %10440, %10442, !dbg !351
  br i1 %10443, label %5429, label %10444, !dbg !352

10444:                                            ; preds = %10435, %10428
  br label %10445, !dbg !356

10445:                                            ; preds = %10444
  %10446 = load i32, ptr %10, align 4, !dbg !357
  %10447 = add nsw i32 %10446, 1, !dbg !357
  store i32 %10447, ptr %10, align 4, !dbg !357
  %10448 = load i32, ptr %10, align 4, !dbg !334
  %10449 = load i32, ptr %8, align 4, !dbg !336
  %10450 = icmp slt i32 %10448, %10449, !dbg !337
  br i1 %10450, label %10451, label %14243, !dbg !338

10451:                                            ; preds = %10445
  %10452 = load i32, ptr %10, align 4, !dbg !339
  %10453 = sext i32 %10452 to i64, !dbg !342
  %10454 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10453, !dbg !342
  %10455 = load double, ptr %10454, align 16, !dbg !343
  %10456 = load double, ptr %6, align 8, !dbg !344
  %10457 = fcmp oeq double %10455, %10456, !dbg !345
  br i1 %10457, label %10458, label %10467, !dbg !346

10458:                                            ; preds = %10451
  %10459 = load i32, ptr %10, align 4, !dbg !347
  %10460 = sext i32 %10459 to i64, !dbg !348
  %10461 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10460, !dbg !348
  %10462 = getelementptr inbounds %struct.POINT, ptr %10461, i32 0, i32 1, !dbg !349
  %10463 = load double, ptr %10462, align 8, !dbg !349
  %10464 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10465 = load double, ptr %10464, align 8, !dbg !350
  %10466 = fcmp oeq double %10463, %10465, !dbg !351
  br i1 %10466, label %5429, label %10467, !dbg !352

10467:                                            ; preds = %10458, %10451
  br label %10468, !dbg !356

10468:                                            ; preds = %10467
  %10469 = load i32, ptr %10, align 4, !dbg !357
  %10470 = add nsw i32 %10469, 1, !dbg !357
  store i32 %10470, ptr %10, align 4, !dbg !357
  %10471 = load i32, ptr %10, align 4, !dbg !334
  %10472 = load i32, ptr %8, align 4, !dbg !336
  %10473 = icmp slt i32 %10471, %10472, !dbg !337
  br i1 %10473, label %10474, label %14243, !dbg !338

10474:                                            ; preds = %10468
  %10475 = load i32, ptr %10, align 4, !dbg !339
  %10476 = sext i32 %10475 to i64, !dbg !342
  %10477 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10476, !dbg !342
  %10478 = load double, ptr %10477, align 16, !dbg !343
  %10479 = load double, ptr %6, align 8, !dbg !344
  %10480 = fcmp oeq double %10478, %10479, !dbg !345
  br i1 %10480, label %10481, label %10490, !dbg !346

10481:                                            ; preds = %10474
  %10482 = load i32, ptr %10, align 4, !dbg !347
  %10483 = sext i32 %10482 to i64, !dbg !348
  %10484 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10483, !dbg !348
  %10485 = getelementptr inbounds %struct.POINT, ptr %10484, i32 0, i32 1, !dbg !349
  %10486 = load double, ptr %10485, align 8, !dbg !349
  %10487 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10488 = load double, ptr %10487, align 8, !dbg !350
  %10489 = fcmp oeq double %10486, %10488, !dbg !351
  br i1 %10489, label %5429, label %10490, !dbg !352

10490:                                            ; preds = %10481, %10474
  br label %10491, !dbg !356

10491:                                            ; preds = %10490
  %10492 = load i32, ptr %10, align 4, !dbg !357
  %10493 = add nsw i32 %10492, 1, !dbg !357
  store i32 %10493, ptr %10, align 4, !dbg !357
  %10494 = load i32, ptr %10, align 4, !dbg !334
  %10495 = load i32, ptr %8, align 4, !dbg !336
  %10496 = icmp slt i32 %10494, %10495, !dbg !337
  br i1 %10496, label %10497, label %14243, !dbg !338

10497:                                            ; preds = %10491
  %10498 = load i32, ptr %10, align 4, !dbg !339
  %10499 = sext i32 %10498 to i64, !dbg !342
  %10500 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10499, !dbg !342
  %10501 = load double, ptr %10500, align 16, !dbg !343
  %10502 = load double, ptr %6, align 8, !dbg !344
  %10503 = fcmp oeq double %10501, %10502, !dbg !345
  br i1 %10503, label %10504, label %10513, !dbg !346

10504:                                            ; preds = %10497
  %10505 = load i32, ptr %10, align 4, !dbg !347
  %10506 = sext i32 %10505 to i64, !dbg !348
  %10507 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10506, !dbg !348
  %10508 = getelementptr inbounds %struct.POINT, ptr %10507, i32 0, i32 1, !dbg !349
  %10509 = load double, ptr %10508, align 8, !dbg !349
  %10510 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10511 = load double, ptr %10510, align 8, !dbg !350
  %10512 = fcmp oeq double %10509, %10511, !dbg !351
  br i1 %10512, label %5429, label %10513, !dbg !352

10513:                                            ; preds = %10504, %10497
  br label %10514, !dbg !356

10514:                                            ; preds = %10513
  %10515 = load i32, ptr %10, align 4, !dbg !357
  %10516 = add nsw i32 %10515, 1, !dbg !357
  store i32 %10516, ptr %10, align 4, !dbg !357
  %10517 = load i32, ptr %10, align 4, !dbg !334
  %10518 = load i32, ptr %8, align 4, !dbg !336
  %10519 = icmp slt i32 %10517, %10518, !dbg !337
  br i1 %10519, label %10520, label %14243, !dbg !338

10520:                                            ; preds = %10514
  %10521 = load i32, ptr %10, align 4, !dbg !339
  %10522 = sext i32 %10521 to i64, !dbg !342
  %10523 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10522, !dbg !342
  %10524 = load double, ptr %10523, align 16, !dbg !343
  %10525 = load double, ptr %6, align 8, !dbg !344
  %10526 = fcmp oeq double %10524, %10525, !dbg !345
  br i1 %10526, label %10527, label %10536, !dbg !346

10527:                                            ; preds = %10520
  %10528 = load i32, ptr %10, align 4, !dbg !347
  %10529 = sext i32 %10528 to i64, !dbg !348
  %10530 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10529, !dbg !348
  %10531 = getelementptr inbounds %struct.POINT, ptr %10530, i32 0, i32 1, !dbg !349
  %10532 = load double, ptr %10531, align 8, !dbg !349
  %10533 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10534 = load double, ptr %10533, align 8, !dbg !350
  %10535 = fcmp oeq double %10532, %10534, !dbg !351
  br i1 %10535, label %5429, label %10536, !dbg !352

10536:                                            ; preds = %10527, %10520
  br label %10537, !dbg !356

10537:                                            ; preds = %10536
  %10538 = load i32, ptr %10, align 4, !dbg !357
  %10539 = add nsw i32 %10538, 1, !dbg !357
  store i32 %10539, ptr %10, align 4, !dbg !357
  %10540 = load i32, ptr %10, align 4, !dbg !334
  %10541 = load i32, ptr %8, align 4, !dbg !336
  %10542 = icmp slt i32 %10540, %10541, !dbg !337
  br i1 %10542, label %10543, label %14243, !dbg !338

10543:                                            ; preds = %10537
  %10544 = load i32, ptr %10, align 4, !dbg !339
  %10545 = sext i32 %10544 to i64, !dbg !342
  %10546 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10545, !dbg !342
  %10547 = load double, ptr %10546, align 16, !dbg !343
  %10548 = load double, ptr %6, align 8, !dbg !344
  %10549 = fcmp oeq double %10547, %10548, !dbg !345
  br i1 %10549, label %10550, label %10559, !dbg !346

10550:                                            ; preds = %10543
  %10551 = load i32, ptr %10, align 4, !dbg !347
  %10552 = sext i32 %10551 to i64, !dbg !348
  %10553 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10552, !dbg !348
  %10554 = getelementptr inbounds %struct.POINT, ptr %10553, i32 0, i32 1, !dbg !349
  %10555 = load double, ptr %10554, align 8, !dbg !349
  %10556 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10557 = load double, ptr %10556, align 8, !dbg !350
  %10558 = fcmp oeq double %10555, %10557, !dbg !351
  br i1 %10558, label %5429, label %10559, !dbg !352

10559:                                            ; preds = %10550, %10543
  br label %10560, !dbg !356

10560:                                            ; preds = %10559
  %10561 = load i32, ptr %10, align 4, !dbg !357
  %10562 = add nsw i32 %10561, 1, !dbg !357
  store i32 %10562, ptr %10, align 4, !dbg !357
  %10563 = load i32, ptr %10, align 4, !dbg !334
  %10564 = load i32, ptr %8, align 4, !dbg !336
  %10565 = icmp slt i32 %10563, %10564, !dbg !337
  br i1 %10565, label %10566, label %14243, !dbg !338

10566:                                            ; preds = %10560
  %10567 = load i32, ptr %10, align 4, !dbg !339
  %10568 = sext i32 %10567 to i64, !dbg !342
  %10569 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10568, !dbg !342
  %10570 = load double, ptr %10569, align 16, !dbg !343
  %10571 = load double, ptr %6, align 8, !dbg !344
  %10572 = fcmp oeq double %10570, %10571, !dbg !345
  br i1 %10572, label %10573, label %10582, !dbg !346

10573:                                            ; preds = %10566
  %10574 = load i32, ptr %10, align 4, !dbg !347
  %10575 = sext i32 %10574 to i64, !dbg !348
  %10576 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10575, !dbg !348
  %10577 = getelementptr inbounds %struct.POINT, ptr %10576, i32 0, i32 1, !dbg !349
  %10578 = load double, ptr %10577, align 8, !dbg !349
  %10579 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10580 = load double, ptr %10579, align 8, !dbg !350
  %10581 = fcmp oeq double %10578, %10580, !dbg !351
  br i1 %10581, label %5429, label %10582, !dbg !352

10582:                                            ; preds = %10573, %10566
  br label %10583, !dbg !356

10583:                                            ; preds = %10582
  %10584 = load i32, ptr %10, align 4, !dbg !357
  %10585 = add nsw i32 %10584, 1, !dbg !357
  store i32 %10585, ptr %10, align 4, !dbg !357
  %10586 = load i32, ptr %10, align 4, !dbg !334
  %10587 = load i32, ptr %8, align 4, !dbg !336
  %10588 = icmp slt i32 %10586, %10587, !dbg !337
  br i1 %10588, label %10589, label %14243, !dbg !338

10589:                                            ; preds = %10583
  %10590 = load i32, ptr %10, align 4, !dbg !339
  %10591 = sext i32 %10590 to i64, !dbg !342
  %10592 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10591, !dbg !342
  %10593 = load double, ptr %10592, align 16, !dbg !343
  %10594 = load double, ptr %6, align 8, !dbg !344
  %10595 = fcmp oeq double %10593, %10594, !dbg !345
  br i1 %10595, label %10596, label %10605, !dbg !346

10596:                                            ; preds = %10589
  %10597 = load i32, ptr %10, align 4, !dbg !347
  %10598 = sext i32 %10597 to i64, !dbg !348
  %10599 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10598, !dbg !348
  %10600 = getelementptr inbounds %struct.POINT, ptr %10599, i32 0, i32 1, !dbg !349
  %10601 = load double, ptr %10600, align 8, !dbg !349
  %10602 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10603 = load double, ptr %10602, align 8, !dbg !350
  %10604 = fcmp oeq double %10601, %10603, !dbg !351
  br i1 %10604, label %5429, label %10605, !dbg !352

10605:                                            ; preds = %10596, %10589
  br label %10606, !dbg !356

10606:                                            ; preds = %10605
  %10607 = load i32, ptr %10, align 4, !dbg !357
  %10608 = add nsw i32 %10607, 1, !dbg !357
  store i32 %10608, ptr %10, align 4, !dbg !357
  %10609 = load i32, ptr %10, align 4, !dbg !334
  %10610 = load i32, ptr %8, align 4, !dbg !336
  %10611 = icmp slt i32 %10609, %10610, !dbg !337
  br i1 %10611, label %10612, label %14243, !dbg !338

10612:                                            ; preds = %10606
  %10613 = load i32, ptr %10, align 4, !dbg !339
  %10614 = sext i32 %10613 to i64, !dbg !342
  %10615 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10614, !dbg !342
  %10616 = load double, ptr %10615, align 16, !dbg !343
  %10617 = load double, ptr %6, align 8, !dbg !344
  %10618 = fcmp oeq double %10616, %10617, !dbg !345
  br i1 %10618, label %10619, label %10628, !dbg !346

10619:                                            ; preds = %10612
  %10620 = load i32, ptr %10, align 4, !dbg !347
  %10621 = sext i32 %10620 to i64, !dbg !348
  %10622 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10621, !dbg !348
  %10623 = getelementptr inbounds %struct.POINT, ptr %10622, i32 0, i32 1, !dbg !349
  %10624 = load double, ptr %10623, align 8, !dbg !349
  %10625 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10626 = load double, ptr %10625, align 8, !dbg !350
  %10627 = fcmp oeq double %10624, %10626, !dbg !351
  br i1 %10627, label %5429, label %10628, !dbg !352

10628:                                            ; preds = %10619, %10612
  br label %10629, !dbg !356

10629:                                            ; preds = %10628
  %10630 = load i32, ptr %10, align 4, !dbg !357
  %10631 = add nsw i32 %10630, 1, !dbg !357
  store i32 %10631, ptr %10, align 4, !dbg !357
  %10632 = load i32, ptr %10, align 4, !dbg !334
  %10633 = load i32, ptr %8, align 4, !dbg !336
  %10634 = icmp slt i32 %10632, %10633, !dbg !337
  br i1 %10634, label %10635, label %14243, !dbg !338

10635:                                            ; preds = %10629
  %10636 = load i32, ptr %10, align 4, !dbg !339
  %10637 = sext i32 %10636 to i64, !dbg !342
  %10638 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10637, !dbg !342
  %10639 = load double, ptr %10638, align 16, !dbg !343
  %10640 = load double, ptr %6, align 8, !dbg !344
  %10641 = fcmp oeq double %10639, %10640, !dbg !345
  br i1 %10641, label %10642, label %10651, !dbg !346

10642:                                            ; preds = %10635
  %10643 = load i32, ptr %10, align 4, !dbg !347
  %10644 = sext i32 %10643 to i64, !dbg !348
  %10645 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10644, !dbg !348
  %10646 = getelementptr inbounds %struct.POINT, ptr %10645, i32 0, i32 1, !dbg !349
  %10647 = load double, ptr %10646, align 8, !dbg !349
  %10648 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10649 = load double, ptr %10648, align 8, !dbg !350
  %10650 = fcmp oeq double %10647, %10649, !dbg !351
  br i1 %10650, label %5429, label %10651, !dbg !352

10651:                                            ; preds = %10642, %10635
  br label %10652, !dbg !356

10652:                                            ; preds = %10651
  %10653 = load i32, ptr %10, align 4, !dbg !357
  %10654 = add nsw i32 %10653, 1, !dbg !357
  store i32 %10654, ptr %10, align 4, !dbg !357
  %10655 = load i32, ptr %10, align 4, !dbg !334
  %10656 = load i32, ptr %8, align 4, !dbg !336
  %10657 = icmp slt i32 %10655, %10656, !dbg !337
  br i1 %10657, label %10658, label %14243, !dbg !338

10658:                                            ; preds = %10652
  %10659 = load i32, ptr %10, align 4, !dbg !339
  %10660 = sext i32 %10659 to i64, !dbg !342
  %10661 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10660, !dbg !342
  %10662 = load double, ptr %10661, align 16, !dbg !343
  %10663 = load double, ptr %6, align 8, !dbg !344
  %10664 = fcmp oeq double %10662, %10663, !dbg !345
  br i1 %10664, label %10665, label %10674, !dbg !346

10665:                                            ; preds = %10658
  %10666 = load i32, ptr %10, align 4, !dbg !347
  %10667 = sext i32 %10666 to i64, !dbg !348
  %10668 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10667, !dbg !348
  %10669 = getelementptr inbounds %struct.POINT, ptr %10668, i32 0, i32 1, !dbg !349
  %10670 = load double, ptr %10669, align 8, !dbg !349
  %10671 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10672 = load double, ptr %10671, align 8, !dbg !350
  %10673 = fcmp oeq double %10670, %10672, !dbg !351
  br i1 %10673, label %5429, label %10674, !dbg !352

10674:                                            ; preds = %10665, %10658
  br label %10675, !dbg !356

10675:                                            ; preds = %10674
  %10676 = load i32, ptr %10, align 4, !dbg !357
  %10677 = add nsw i32 %10676, 1, !dbg !357
  store i32 %10677, ptr %10, align 4, !dbg !357
  %10678 = load i32, ptr %10, align 4, !dbg !334
  %10679 = load i32, ptr %8, align 4, !dbg !336
  %10680 = icmp slt i32 %10678, %10679, !dbg !337
  br i1 %10680, label %10681, label %14243, !dbg !338

10681:                                            ; preds = %10675
  %10682 = load i32, ptr %10, align 4, !dbg !339
  %10683 = sext i32 %10682 to i64, !dbg !342
  %10684 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10683, !dbg !342
  %10685 = load double, ptr %10684, align 16, !dbg !343
  %10686 = load double, ptr %6, align 8, !dbg !344
  %10687 = fcmp oeq double %10685, %10686, !dbg !345
  br i1 %10687, label %10688, label %10697, !dbg !346

10688:                                            ; preds = %10681
  %10689 = load i32, ptr %10, align 4, !dbg !347
  %10690 = sext i32 %10689 to i64, !dbg !348
  %10691 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10690, !dbg !348
  %10692 = getelementptr inbounds %struct.POINT, ptr %10691, i32 0, i32 1, !dbg !349
  %10693 = load double, ptr %10692, align 8, !dbg !349
  %10694 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10695 = load double, ptr %10694, align 8, !dbg !350
  %10696 = fcmp oeq double %10693, %10695, !dbg !351
  br i1 %10696, label %5429, label %10697, !dbg !352

10697:                                            ; preds = %10688, %10681
  br label %10698, !dbg !356

10698:                                            ; preds = %10697
  %10699 = load i32, ptr %10, align 4, !dbg !357
  %10700 = add nsw i32 %10699, 1, !dbg !357
  store i32 %10700, ptr %10, align 4, !dbg !357
  %10701 = load i32, ptr %10, align 4, !dbg !334
  %10702 = load i32, ptr %8, align 4, !dbg !336
  %10703 = icmp slt i32 %10701, %10702, !dbg !337
  br i1 %10703, label %10704, label %14243, !dbg !338

10704:                                            ; preds = %10698
  %10705 = load i32, ptr %10, align 4, !dbg !339
  %10706 = sext i32 %10705 to i64, !dbg !342
  %10707 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10706, !dbg !342
  %10708 = load double, ptr %10707, align 16, !dbg !343
  %10709 = load double, ptr %6, align 8, !dbg !344
  %10710 = fcmp oeq double %10708, %10709, !dbg !345
  br i1 %10710, label %10711, label %10720, !dbg !346

10711:                                            ; preds = %10704
  %10712 = load i32, ptr %10, align 4, !dbg !347
  %10713 = sext i32 %10712 to i64, !dbg !348
  %10714 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10713, !dbg !348
  %10715 = getelementptr inbounds %struct.POINT, ptr %10714, i32 0, i32 1, !dbg !349
  %10716 = load double, ptr %10715, align 8, !dbg !349
  %10717 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10718 = load double, ptr %10717, align 8, !dbg !350
  %10719 = fcmp oeq double %10716, %10718, !dbg !351
  br i1 %10719, label %5429, label %10720, !dbg !352

10720:                                            ; preds = %10711, %10704
  br label %10721, !dbg !356

10721:                                            ; preds = %10720
  %10722 = load i32, ptr %10, align 4, !dbg !357
  %10723 = add nsw i32 %10722, 1, !dbg !357
  store i32 %10723, ptr %10, align 4, !dbg !357
  %10724 = load i32, ptr %10, align 4, !dbg !334
  %10725 = load i32, ptr %8, align 4, !dbg !336
  %10726 = icmp slt i32 %10724, %10725, !dbg !337
  br i1 %10726, label %10727, label %14243, !dbg !338

10727:                                            ; preds = %10721
  %10728 = load i32, ptr %10, align 4, !dbg !339
  %10729 = sext i32 %10728 to i64, !dbg !342
  %10730 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10729, !dbg !342
  %10731 = load double, ptr %10730, align 16, !dbg !343
  %10732 = load double, ptr %6, align 8, !dbg !344
  %10733 = fcmp oeq double %10731, %10732, !dbg !345
  br i1 %10733, label %10734, label %10743, !dbg !346

10734:                                            ; preds = %10727
  %10735 = load i32, ptr %10, align 4, !dbg !347
  %10736 = sext i32 %10735 to i64, !dbg !348
  %10737 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10736, !dbg !348
  %10738 = getelementptr inbounds %struct.POINT, ptr %10737, i32 0, i32 1, !dbg !349
  %10739 = load double, ptr %10738, align 8, !dbg !349
  %10740 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10741 = load double, ptr %10740, align 8, !dbg !350
  %10742 = fcmp oeq double %10739, %10741, !dbg !351
  br i1 %10742, label %5429, label %10743, !dbg !352

10743:                                            ; preds = %10734, %10727
  br label %10744, !dbg !356

10744:                                            ; preds = %10743
  %10745 = load i32, ptr %10, align 4, !dbg !357
  %10746 = add nsw i32 %10745, 1, !dbg !357
  store i32 %10746, ptr %10, align 4, !dbg !357
  %10747 = load i32, ptr %10, align 4, !dbg !334
  %10748 = load i32, ptr %8, align 4, !dbg !336
  %10749 = icmp slt i32 %10747, %10748, !dbg !337
  br i1 %10749, label %10750, label %14243, !dbg !338

10750:                                            ; preds = %10744
  %10751 = load i32, ptr %10, align 4, !dbg !339
  %10752 = sext i32 %10751 to i64, !dbg !342
  %10753 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10752, !dbg !342
  %10754 = load double, ptr %10753, align 16, !dbg !343
  %10755 = load double, ptr %6, align 8, !dbg !344
  %10756 = fcmp oeq double %10754, %10755, !dbg !345
  br i1 %10756, label %10757, label %10766, !dbg !346

10757:                                            ; preds = %10750
  %10758 = load i32, ptr %10, align 4, !dbg !347
  %10759 = sext i32 %10758 to i64, !dbg !348
  %10760 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10759, !dbg !348
  %10761 = getelementptr inbounds %struct.POINT, ptr %10760, i32 0, i32 1, !dbg !349
  %10762 = load double, ptr %10761, align 8, !dbg !349
  %10763 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10764 = load double, ptr %10763, align 8, !dbg !350
  %10765 = fcmp oeq double %10762, %10764, !dbg !351
  br i1 %10765, label %5429, label %10766, !dbg !352

10766:                                            ; preds = %10757, %10750
  br label %10767, !dbg !356

10767:                                            ; preds = %10766
  %10768 = load i32, ptr %10, align 4, !dbg !357
  %10769 = add nsw i32 %10768, 1, !dbg !357
  store i32 %10769, ptr %10, align 4, !dbg !357
  %10770 = load i32, ptr %10, align 4, !dbg !334
  %10771 = load i32, ptr %8, align 4, !dbg !336
  %10772 = icmp slt i32 %10770, %10771, !dbg !337
  br i1 %10772, label %10773, label %14243, !dbg !338

10773:                                            ; preds = %10767
  %10774 = load i32, ptr %10, align 4, !dbg !339
  %10775 = sext i32 %10774 to i64, !dbg !342
  %10776 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10775, !dbg !342
  %10777 = load double, ptr %10776, align 16, !dbg !343
  %10778 = load double, ptr %6, align 8, !dbg !344
  %10779 = fcmp oeq double %10777, %10778, !dbg !345
  br i1 %10779, label %10780, label %10789, !dbg !346

10780:                                            ; preds = %10773
  %10781 = load i32, ptr %10, align 4, !dbg !347
  %10782 = sext i32 %10781 to i64, !dbg !348
  %10783 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10782, !dbg !348
  %10784 = getelementptr inbounds %struct.POINT, ptr %10783, i32 0, i32 1, !dbg !349
  %10785 = load double, ptr %10784, align 8, !dbg !349
  %10786 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10787 = load double, ptr %10786, align 8, !dbg !350
  %10788 = fcmp oeq double %10785, %10787, !dbg !351
  br i1 %10788, label %5429, label %10789, !dbg !352

10789:                                            ; preds = %10780, %10773
  br label %10790, !dbg !356

10790:                                            ; preds = %10789
  %10791 = load i32, ptr %10, align 4, !dbg !357
  %10792 = add nsw i32 %10791, 1, !dbg !357
  store i32 %10792, ptr %10, align 4, !dbg !357
  %10793 = load i32, ptr %10, align 4, !dbg !334
  %10794 = load i32, ptr %8, align 4, !dbg !336
  %10795 = icmp slt i32 %10793, %10794, !dbg !337
  br i1 %10795, label %10796, label %14243, !dbg !338

10796:                                            ; preds = %10790
  %10797 = load i32, ptr %10, align 4, !dbg !339
  %10798 = sext i32 %10797 to i64, !dbg !342
  %10799 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10798, !dbg !342
  %10800 = load double, ptr %10799, align 16, !dbg !343
  %10801 = load double, ptr %6, align 8, !dbg !344
  %10802 = fcmp oeq double %10800, %10801, !dbg !345
  br i1 %10802, label %10803, label %10812, !dbg !346

10803:                                            ; preds = %10796
  %10804 = load i32, ptr %10, align 4, !dbg !347
  %10805 = sext i32 %10804 to i64, !dbg !348
  %10806 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10805, !dbg !348
  %10807 = getelementptr inbounds %struct.POINT, ptr %10806, i32 0, i32 1, !dbg !349
  %10808 = load double, ptr %10807, align 8, !dbg !349
  %10809 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10810 = load double, ptr %10809, align 8, !dbg !350
  %10811 = fcmp oeq double %10808, %10810, !dbg !351
  br i1 %10811, label %5429, label %10812, !dbg !352

10812:                                            ; preds = %10803, %10796
  br label %10813, !dbg !356

10813:                                            ; preds = %10812
  %10814 = load i32, ptr %10, align 4, !dbg !357
  %10815 = add nsw i32 %10814, 1, !dbg !357
  store i32 %10815, ptr %10, align 4, !dbg !357
  %10816 = load i32, ptr %10, align 4, !dbg !334
  %10817 = load i32, ptr %8, align 4, !dbg !336
  %10818 = icmp slt i32 %10816, %10817, !dbg !337
  br i1 %10818, label %10819, label %14243, !dbg !338

10819:                                            ; preds = %10813
  %10820 = load i32, ptr %10, align 4, !dbg !339
  %10821 = sext i32 %10820 to i64, !dbg !342
  %10822 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10821, !dbg !342
  %10823 = load double, ptr %10822, align 16, !dbg !343
  %10824 = load double, ptr %6, align 8, !dbg !344
  %10825 = fcmp oeq double %10823, %10824, !dbg !345
  br i1 %10825, label %10826, label %10835, !dbg !346

10826:                                            ; preds = %10819
  %10827 = load i32, ptr %10, align 4, !dbg !347
  %10828 = sext i32 %10827 to i64, !dbg !348
  %10829 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10828, !dbg !348
  %10830 = getelementptr inbounds %struct.POINT, ptr %10829, i32 0, i32 1, !dbg !349
  %10831 = load double, ptr %10830, align 8, !dbg !349
  %10832 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10833 = load double, ptr %10832, align 8, !dbg !350
  %10834 = fcmp oeq double %10831, %10833, !dbg !351
  br i1 %10834, label %5429, label %10835, !dbg !352

10835:                                            ; preds = %10826, %10819
  br label %10836, !dbg !356

10836:                                            ; preds = %10835
  %10837 = load i32, ptr %10, align 4, !dbg !357
  %10838 = add nsw i32 %10837, 1, !dbg !357
  store i32 %10838, ptr %10, align 4, !dbg !357
  %10839 = load i32, ptr %10, align 4, !dbg !334
  %10840 = load i32, ptr %8, align 4, !dbg !336
  %10841 = icmp slt i32 %10839, %10840, !dbg !337
  br i1 %10841, label %10842, label %14243, !dbg !338

10842:                                            ; preds = %10836
  %10843 = load i32, ptr %10, align 4, !dbg !339
  %10844 = sext i32 %10843 to i64, !dbg !342
  %10845 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10844, !dbg !342
  %10846 = load double, ptr %10845, align 16, !dbg !343
  %10847 = load double, ptr %6, align 8, !dbg !344
  %10848 = fcmp oeq double %10846, %10847, !dbg !345
  br i1 %10848, label %10849, label %10858, !dbg !346

10849:                                            ; preds = %10842
  %10850 = load i32, ptr %10, align 4, !dbg !347
  %10851 = sext i32 %10850 to i64, !dbg !348
  %10852 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10851, !dbg !348
  %10853 = getelementptr inbounds %struct.POINT, ptr %10852, i32 0, i32 1, !dbg !349
  %10854 = load double, ptr %10853, align 8, !dbg !349
  %10855 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10856 = load double, ptr %10855, align 8, !dbg !350
  %10857 = fcmp oeq double %10854, %10856, !dbg !351
  br i1 %10857, label %5429, label %10858, !dbg !352

10858:                                            ; preds = %10849, %10842
  br label %10859, !dbg !356

10859:                                            ; preds = %10858
  %10860 = load i32, ptr %10, align 4, !dbg !357
  %10861 = add nsw i32 %10860, 1, !dbg !357
  store i32 %10861, ptr %10, align 4, !dbg !357
  %10862 = load i32, ptr %10, align 4, !dbg !334
  %10863 = load i32, ptr %8, align 4, !dbg !336
  %10864 = icmp slt i32 %10862, %10863, !dbg !337
  br i1 %10864, label %10865, label %14243, !dbg !338

10865:                                            ; preds = %10859
  %10866 = load i32, ptr %10, align 4, !dbg !339
  %10867 = sext i32 %10866 to i64, !dbg !342
  %10868 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10867, !dbg !342
  %10869 = load double, ptr %10868, align 16, !dbg !343
  %10870 = load double, ptr %6, align 8, !dbg !344
  %10871 = fcmp oeq double %10869, %10870, !dbg !345
  br i1 %10871, label %10872, label %10881, !dbg !346

10872:                                            ; preds = %10865
  %10873 = load i32, ptr %10, align 4, !dbg !347
  %10874 = sext i32 %10873 to i64, !dbg !348
  %10875 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10874, !dbg !348
  %10876 = getelementptr inbounds %struct.POINT, ptr %10875, i32 0, i32 1, !dbg !349
  %10877 = load double, ptr %10876, align 8, !dbg !349
  %10878 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10879 = load double, ptr %10878, align 8, !dbg !350
  %10880 = fcmp oeq double %10877, %10879, !dbg !351
  br i1 %10880, label %5429, label %10881, !dbg !352

10881:                                            ; preds = %10872, %10865
  br label %10882, !dbg !356

10882:                                            ; preds = %10881
  %10883 = load i32, ptr %10, align 4, !dbg !357
  %10884 = add nsw i32 %10883, 1, !dbg !357
  store i32 %10884, ptr %10, align 4, !dbg !357
  %10885 = load i32, ptr %10, align 4, !dbg !334
  %10886 = load i32, ptr %8, align 4, !dbg !336
  %10887 = icmp slt i32 %10885, %10886, !dbg !337
  br i1 %10887, label %10888, label %14243, !dbg !338

10888:                                            ; preds = %10882
  %10889 = load i32, ptr %10, align 4, !dbg !339
  %10890 = sext i32 %10889 to i64, !dbg !342
  %10891 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10890, !dbg !342
  %10892 = load double, ptr %10891, align 16, !dbg !343
  %10893 = load double, ptr %6, align 8, !dbg !344
  %10894 = fcmp oeq double %10892, %10893, !dbg !345
  br i1 %10894, label %10895, label %10904, !dbg !346

10895:                                            ; preds = %10888
  %10896 = load i32, ptr %10, align 4, !dbg !347
  %10897 = sext i32 %10896 to i64, !dbg !348
  %10898 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10897, !dbg !348
  %10899 = getelementptr inbounds %struct.POINT, ptr %10898, i32 0, i32 1, !dbg !349
  %10900 = load double, ptr %10899, align 8, !dbg !349
  %10901 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10902 = load double, ptr %10901, align 8, !dbg !350
  %10903 = fcmp oeq double %10900, %10902, !dbg !351
  br i1 %10903, label %5429, label %10904, !dbg !352

10904:                                            ; preds = %10895, %10888
  br label %10905, !dbg !356

10905:                                            ; preds = %10904
  %10906 = load i32, ptr %10, align 4, !dbg !357
  %10907 = add nsw i32 %10906, 1, !dbg !357
  store i32 %10907, ptr %10, align 4, !dbg !357
  %10908 = load i32, ptr %10, align 4, !dbg !334
  %10909 = load i32, ptr %8, align 4, !dbg !336
  %10910 = icmp slt i32 %10908, %10909, !dbg !337
  br i1 %10910, label %10911, label %14243, !dbg !338

10911:                                            ; preds = %10905
  %10912 = load i32, ptr %10, align 4, !dbg !339
  %10913 = sext i32 %10912 to i64, !dbg !342
  %10914 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10913, !dbg !342
  %10915 = load double, ptr %10914, align 16, !dbg !343
  %10916 = load double, ptr %6, align 8, !dbg !344
  %10917 = fcmp oeq double %10915, %10916, !dbg !345
  br i1 %10917, label %10918, label %10927, !dbg !346

10918:                                            ; preds = %10911
  %10919 = load i32, ptr %10, align 4, !dbg !347
  %10920 = sext i32 %10919 to i64, !dbg !348
  %10921 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10920, !dbg !348
  %10922 = getelementptr inbounds %struct.POINT, ptr %10921, i32 0, i32 1, !dbg !349
  %10923 = load double, ptr %10922, align 8, !dbg !349
  %10924 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10925 = load double, ptr %10924, align 8, !dbg !350
  %10926 = fcmp oeq double %10923, %10925, !dbg !351
  br i1 %10926, label %5429, label %10927, !dbg !352

10927:                                            ; preds = %10918, %10911
  br label %10928, !dbg !356

10928:                                            ; preds = %10927
  %10929 = load i32, ptr %10, align 4, !dbg !357
  %10930 = add nsw i32 %10929, 1, !dbg !357
  store i32 %10930, ptr %10, align 4, !dbg !357
  %10931 = load i32, ptr %10, align 4, !dbg !334
  %10932 = load i32, ptr %8, align 4, !dbg !336
  %10933 = icmp slt i32 %10931, %10932, !dbg !337
  br i1 %10933, label %10934, label %14243, !dbg !338

10934:                                            ; preds = %10928
  %10935 = load i32, ptr %10, align 4, !dbg !339
  %10936 = sext i32 %10935 to i64, !dbg !342
  %10937 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10936, !dbg !342
  %10938 = load double, ptr %10937, align 16, !dbg !343
  %10939 = load double, ptr %6, align 8, !dbg !344
  %10940 = fcmp oeq double %10938, %10939, !dbg !345
  br i1 %10940, label %10941, label %10950, !dbg !346

10941:                                            ; preds = %10934
  %10942 = load i32, ptr %10, align 4, !dbg !347
  %10943 = sext i32 %10942 to i64, !dbg !348
  %10944 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10943, !dbg !348
  %10945 = getelementptr inbounds %struct.POINT, ptr %10944, i32 0, i32 1, !dbg !349
  %10946 = load double, ptr %10945, align 8, !dbg !349
  %10947 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10948 = load double, ptr %10947, align 8, !dbg !350
  %10949 = fcmp oeq double %10946, %10948, !dbg !351
  br i1 %10949, label %5429, label %10950, !dbg !352

10950:                                            ; preds = %10941, %10934
  br label %10951, !dbg !356

10951:                                            ; preds = %10950
  %10952 = load i32, ptr %10, align 4, !dbg !357
  %10953 = add nsw i32 %10952, 1, !dbg !357
  store i32 %10953, ptr %10, align 4, !dbg !357
  %10954 = load i32, ptr %10, align 4, !dbg !334
  %10955 = load i32, ptr %8, align 4, !dbg !336
  %10956 = icmp slt i32 %10954, %10955, !dbg !337
  br i1 %10956, label %10957, label %14243, !dbg !338

10957:                                            ; preds = %10951
  %10958 = load i32, ptr %10, align 4, !dbg !339
  %10959 = sext i32 %10958 to i64, !dbg !342
  %10960 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10959, !dbg !342
  %10961 = load double, ptr %10960, align 16, !dbg !343
  %10962 = load double, ptr %6, align 8, !dbg !344
  %10963 = fcmp oeq double %10961, %10962, !dbg !345
  br i1 %10963, label %10964, label %10973, !dbg !346

10964:                                            ; preds = %10957
  %10965 = load i32, ptr %10, align 4, !dbg !347
  %10966 = sext i32 %10965 to i64, !dbg !348
  %10967 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10966, !dbg !348
  %10968 = getelementptr inbounds %struct.POINT, ptr %10967, i32 0, i32 1, !dbg !349
  %10969 = load double, ptr %10968, align 8, !dbg !349
  %10970 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10971 = load double, ptr %10970, align 8, !dbg !350
  %10972 = fcmp oeq double %10969, %10971, !dbg !351
  br i1 %10972, label %5429, label %10973, !dbg !352

10973:                                            ; preds = %10964, %10957
  br label %10974, !dbg !356

10974:                                            ; preds = %10973
  %10975 = load i32, ptr %10, align 4, !dbg !357
  %10976 = add nsw i32 %10975, 1, !dbg !357
  store i32 %10976, ptr %10, align 4, !dbg !357
  %10977 = load i32, ptr %10, align 4, !dbg !334
  %10978 = load i32, ptr %8, align 4, !dbg !336
  %10979 = icmp slt i32 %10977, %10978, !dbg !337
  br i1 %10979, label %10980, label %14243, !dbg !338

10980:                                            ; preds = %10974
  %10981 = load i32, ptr %10, align 4, !dbg !339
  %10982 = sext i32 %10981 to i64, !dbg !342
  %10983 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10982, !dbg !342
  %10984 = load double, ptr %10983, align 16, !dbg !343
  %10985 = load double, ptr %6, align 8, !dbg !344
  %10986 = fcmp oeq double %10984, %10985, !dbg !345
  br i1 %10986, label %10987, label %10996, !dbg !346

10987:                                            ; preds = %10980
  %10988 = load i32, ptr %10, align 4, !dbg !347
  %10989 = sext i32 %10988 to i64, !dbg !348
  %10990 = getelementptr inbounds %struct.POINT, ptr %26, i64 %10989, !dbg !348
  %10991 = getelementptr inbounds %struct.POINT, ptr %10990, i32 0, i32 1, !dbg !349
  %10992 = load double, ptr %10991, align 8, !dbg !349
  %10993 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %10994 = load double, ptr %10993, align 8, !dbg !350
  %10995 = fcmp oeq double %10992, %10994, !dbg !351
  br i1 %10995, label %5429, label %10996, !dbg !352

10996:                                            ; preds = %10987, %10980
  br label %10997, !dbg !356

10997:                                            ; preds = %10996
  %10998 = load i32, ptr %10, align 4, !dbg !357
  %10999 = add nsw i32 %10998, 1, !dbg !357
  store i32 %10999, ptr %10, align 4, !dbg !357
  %11000 = load i32, ptr %10, align 4, !dbg !334
  %11001 = load i32, ptr %8, align 4, !dbg !336
  %11002 = icmp slt i32 %11000, %11001, !dbg !337
  br i1 %11002, label %11003, label %14243, !dbg !338

11003:                                            ; preds = %10997
  %11004 = load i32, ptr %10, align 4, !dbg !339
  %11005 = sext i32 %11004 to i64, !dbg !342
  %11006 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11005, !dbg !342
  %11007 = load double, ptr %11006, align 16, !dbg !343
  %11008 = load double, ptr %6, align 8, !dbg !344
  %11009 = fcmp oeq double %11007, %11008, !dbg !345
  br i1 %11009, label %11010, label %11019, !dbg !346

11010:                                            ; preds = %11003
  %11011 = load i32, ptr %10, align 4, !dbg !347
  %11012 = sext i32 %11011 to i64, !dbg !348
  %11013 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11012, !dbg !348
  %11014 = getelementptr inbounds %struct.POINT, ptr %11013, i32 0, i32 1, !dbg !349
  %11015 = load double, ptr %11014, align 8, !dbg !349
  %11016 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11017 = load double, ptr %11016, align 8, !dbg !350
  %11018 = fcmp oeq double %11015, %11017, !dbg !351
  br i1 %11018, label %5429, label %11019, !dbg !352

11019:                                            ; preds = %11010, %11003
  br label %11020, !dbg !356

11020:                                            ; preds = %11019
  %11021 = load i32, ptr %10, align 4, !dbg !357
  %11022 = add nsw i32 %11021, 1, !dbg !357
  store i32 %11022, ptr %10, align 4, !dbg !357
  %11023 = load i32, ptr %10, align 4, !dbg !334
  %11024 = load i32, ptr %8, align 4, !dbg !336
  %11025 = icmp slt i32 %11023, %11024, !dbg !337
  br i1 %11025, label %11026, label %14243, !dbg !338

11026:                                            ; preds = %11020
  %11027 = load i32, ptr %10, align 4, !dbg !339
  %11028 = sext i32 %11027 to i64, !dbg !342
  %11029 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11028, !dbg !342
  %11030 = load double, ptr %11029, align 16, !dbg !343
  %11031 = load double, ptr %6, align 8, !dbg !344
  %11032 = fcmp oeq double %11030, %11031, !dbg !345
  br i1 %11032, label %11033, label %11042, !dbg !346

11033:                                            ; preds = %11026
  %11034 = load i32, ptr %10, align 4, !dbg !347
  %11035 = sext i32 %11034 to i64, !dbg !348
  %11036 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11035, !dbg !348
  %11037 = getelementptr inbounds %struct.POINT, ptr %11036, i32 0, i32 1, !dbg !349
  %11038 = load double, ptr %11037, align 8, !dbg !349
  %11039 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11040 = load double, ptr %11039, align 8, !dbg !350
  %11041 = fcmp oeq double %11038, %11040, !dbg !351
  br i1 %11041, label %5429, label %11042, !dbg !352

11042:                                            ; preds = %11033, %11026
  br label %11043, !dbg !356

11043:                                            ; preds = %11042
  %11044 = load i32, ptr %10, align 4, !dbg !357
  %11045 = add nsw i32 %11044, 1, !dbg !357
  store i32 %11045, ptr %10, align 4, !dbg !357
  %11046 = load i32, ptr %10, align 4, !dbg !334
  %11047 = load i32, ptr %8, align 4, !dbg !336
  %11048 = icmp slt i32 %11046, %11047, !dbg !337
  br i1 %11048, label %11049, label %14243, !dbg !338

11049:                                            ; preds = %11043
  %11050 = load i32, ptr %10, align 4, !dbg !339
  %11051 = sext i32 %11050 to i64, !dbg !342
  %11052 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11051, !dbg !342
  %11053 = load double, ptr %11052, align 16, !dbg !343
  %11054 = load double, ptr %6, align 8, !dbg !344
  %11055 = fcmp oeq double %11053, %11054, !dbg !345
  br i1 %11055, label %11056, label %11065, !dbg !346

11056:                                            ; preds = %11049
  %11057 = load i32, ptr %10, align 4, !dbg !347
  %11058 = sext i32 %11057 to i64, !dbg !348
  %11059 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11058, !dbg !348
  %11060 = getelementptr inbounds %struct.POINT, ptr %11059, i32 0, i32 1, !dbg !349
  %11061 = load double, ptr %11060, align 8, !dbg !349
  %11062 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11063 = load double, ptr %11062, align 8, !dbg !350
  %11064 = fcmp oeq double %11061, %11063, !dbg !351
  br i1 %11064, label %5429, label %11065, !dbg !352

11065:                                            ; preds = %11056, %11049
  br label %11066, !dbg !356

11066:                                            ; preds = %11065
  %11067 = load i32, ptr %10, align 4, !dbg !357
  %11068 = add nsw i32 %11067, 1, !dbg !357
  store i32 %11068, ptr %10, align 4, !dbg !357
  %11069 = load i32, ptr %10, align 4, !dbg !334
  %11070 = load i32, ptr %8, align 4, !dbg !336
  %11071 = icmp slt i32 %11069, %11070, !dbg !337
  br i1 %11071, label %11072, label %14243, !dbg !338

11072:                                            ; preds = %11066
  %11073 = load i32, ptr %10, align 4, !dbg !339
  %11074 = sext i32 %11073 to i64, !dbg !342
  %11075 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11074, !dbg !342
  %11076 = load double, ptr %11075, align 16, !dbg !343
  %11077 = load double, ptr %6, align 8, !dbg !344
  %11078 = fcmp oeq double %11076, %11077, !dbg !345
  br i1 %11078, label %11079, label %11088, !dbg !346

11079:                                            ; preds = %11072
  %11080 = load i32, ptr %10, align 4, !dbg !347
  %11081 = sext i32 %11080 to i64, !dbg !348
  %11082 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11081, !dbg !348
  %11083 = getelementptr inbounds %struct.POINT, ptr %11082, i32 0, i32 1, !dbg !349
  %11084 = load double, ptr %11083, align 8, !dbg !349
  %11085 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11086 = load double, ptr %11085, align 8, !dbg !350
  %11087 = fcmp oeq double %11084, %11086, !dbg !351
  br i1 %11087, label %5429, label %11088, !dbg !352

11088:                                            ; preds = %11079, %11072
  br label %11089, !dbg !356

11089:                                            ; preds = %11088
  %11090 = load i32, ptr %10, align 4, !dbg !357
  %11091 = add nsw i32 %11090, 1, !dbg !357
  store i32 %11091, ptr %10, align 4, !dbg !357
  %11092 = load i32, ptr %10, align 4, !dbg !334
  %11093 = load i32, ptr %8, align 4, !dbg !336
  %11094 = icmp slt i32 %11092, %11093, !dbg !337
  br i1 %11094, label %11095, label %14243, !dbg !338

11095:                                            ; preds = %11089
  %11096 = load i32, ptr %10, align 4, !dbg !339
  %11097 = sext i32 %11096 to i64, !dbg !342
  %11098 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11097, !dbg !342
  %11099 = load double, ptr %11098, align 16, !dbg !343
  %11100 = load double, ptr %6, align 8, !dbg !344
  %11101 = fcmp oeq double %11099, %11100, !dbg !345
  br i1 %11101, label %11102, label %11111, !dbg !346

11102:                                            ; preds = %11095
  %11103 = load i32, ptr %10, align 4, !dbg !347
  %11104 = sext i32 %11103 to i64, !dbg !348
  %11105 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11104, !dbg !348
  %11106 = getelementptr inbounds %struct.POINT, ptr %11105, i32 0, i32 1, !dbg !349
  %11107 = load double, ptr %11106, align 8, !dbg !349
  %11108 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11109 = load double, ptr %11108, align 8, !dbg !350
  %11110 = fcmp oeq double %11107, %11109, !dbg !351
  br i1 %11110, label %5429, label %11111, !dbg !352

11111:                                            ; preds = %11102, %11095
  br label %11112, !dbg !356

11112:                                            ; preds = %11111
  %11113 = load i32, ptr %10, align 4, !dbg !357
  %11114 = add nsw i32 %11113, 1, !dbg !357
  store i32 %11114, ptr %10, align 4, !dbg !357
  %11115 = load i32, ptr %10, align 4, !dbg !334
  %11116 = load i32, ptr %8, align 4, !dbg !336
  %11117 = icmp slt i32 %11115, %11116, !dbg !337
  br i1 %11117, label %11118, label %14243, !dbg !338

11118:                                            ; preds = %11112
  %11119 = load i32, ptr %10, align 4, !dbg !339
  %11120 = sext i32 %11119 to i64, !dbg !342
  %11121 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11120, !dbg !342
  %11122 = load double, ptr %11121, align 16, !dbg !343
  %11123 = load double, ptr %6, align 8, !dbg !344
  %11124 = fcmp oeq double %11122, %11123, !dbg !345
  br i1 %11124, label %11125, label %11134, !dbg !346

11125:                                            ; preds = %11118
  %11126 = load i32, ptr %10, align 4, !dbg !347
  %11127 = sext i32 %11126 to i64, !dbg !348
  %11128 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11127, !dbg !348
  %11129 = getelementptr inbounds %struct.POINT, ptr %11128, i32 0, i32 1, !dbg !349
  %11130 = load double, ptr %11129, align 8, !dbg !349
  %11131 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11132 = load double, ptr %11131, align 8, !dbg !350
  %11133 = fcmp oeq double %11130, %11132, !dbg !351
  br i1 %11133, label %5429, label %11134, !dbg !352

11134:                                            ; preds = %11125, %11118
  br label %11135, !dbg !356

11135:                                            ; preds = %11134
  %11136 = load i32, ptr %10, align 4, !dbg !357
  %11137 = add nsw i32 %11136, 1, !dbg !357
  store i32 %11137, ptr %10, align 4, !dbg !357
  %11138 = load i32, ptr %10, align 4, !dbg !334
  %11139 = load i32, ptr %8, align 4, !dbg !336
  %11140 = icmp slt i32 %11138, %11139, !dbg !337
  br i1 %11140, label %11141, label %14243, !dbg !338

11141:                                            ; preds = %11135
  %11142 = load i32, ptr %10, align 4, !dbg !339
  %11143 = sext i32 %11142 to i64, !dbg !342
  %11144 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11143, !dbg !342
  %11145 = load double, ptr %11144, align 16, !dbg !343
  %11146 = load double, ptr %6, align 8, !dbg !344
  %11147 = fcmp oeq double %11145, %11146, !dbg !345
  br i1 %11147, label %11148, label %11157, !dbg !346

11148:                                            ; preds = %11141
  %11149 = load i32, ptr %10, align 4, !dbg !347
  %11150 = sext i32 %11149 to i64, !dbg !348
  %11151 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11150, !dbg !348
  %11152 = getelementptr inbounds %struct.POINT, ptr %11151, i32 0, i32 1, !dbg !349
  %11153 = load double, ptr %11152, align 8, !dbg !349
  %11154 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11155 = load double, ptr %11154, align 8, !dbg !350
  %11156 = fcmp oeq double %11153, %11155, !dbg !351
  br i1 %11156, label %5429, label %11157, !dbg !352

11157:                                            ; preds = %11148, %11141
  br label %11158, !dbg !356

11158:                                            ; preds = %11157
  %11159 = load i32, ptr %10, align 4, !dbg !357
  %11160 = add nsw i32 %11159, 1, !dbg !357
  store i32 %11160, ptr %10, align 4, !dbg !357
  %11161 = load i32, ptr %10, align 4, !dbg !334
  %11162 = load i32, ptr %8, align 4, !dbg !336
  %11163 = icmp slt i32 %11161, %11162, !dbg !337
  br i1 %11163, label %11164, label %14243, !dbg !338

11164:                                            ; preds = %11158
  %11165 = load i32, ptr %10, align 4, !dbg !339
  %11166 = sext i32 %11165 to i64, !dbg !342
  %11167 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11166, !dbg !342
  %11168 = load double, ptr %11167, align 16, !dbg !343
  %11169 = load double, ptr %6, align 8, !dbg !344
  %11170 = fcmp oeq double %11168, %11169, !dbg !345
  br i1 %11170, label %11171, label %11180, !dbg !346

11171:                                            ; preds = %11164
  %11172 = load i32, ptr %10, align 4, !dbg !347
  %11173 = sext i32 %11172 to i64, !dbg !348
  %11174 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11173, !dbg !348
  %11175 = getelementptr inbounds %struct.POINT, ptr %11174, i32 0, i32 1, !dbg !349
  %11176 = load double, ptr %11175, align 8, !dbg !349
  %11177 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11178 = load double, ptr %11177, align 8, !dbg !350
  %11179 = fcmp oeq double %11176, %11178, !dbg !351
  br i1 %11179, label %5429, label %11180, !dbg !352

11180:                                            ; preds = %11171, %11164
  br label %11181, !dbg !356

11181:                                            ; preds = %11180
  %11182 = load i32, ptr %10, align 4, !dbg !357
  %11183 = add nsw i32 %11182, 1, !dbg !357
  store i32 %11183, ptr %10, align 4, !dbg !357
  %11184 = load i32, ptr %10, align 4, !dbg !334
  %11185 = load i32, ptr %8, align 4, !dbg !336
  %11186 = icmp slt i32 %11184, %11185, !dbg !337
  br i1 %11186, label %11187, label %14243, !dbg !338

11187:                                            ; preds = %11181
  %11188 = load i32, ptr %10, align 4, !dbg !339
  %11189 = sext i32 %11188 to i64, !dbg !342
  %11190 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11189, !dbg !342
  %11191 = load double, ptr %11190, align 16, !dbg !343
  %11192 = load double, ptr %6, align 8, !dbg !344
  %11193 = fcmp oeq double %11191, %11192, !dbg !345
  br i1 %11193, label %11194, label %11203, !dbg !346

11194:                                            ; preds = %11187
  %11195 = load i32, ptr %10, align 4, !dbg !347
  %11196 = sext i32 %11195 to i64, !dbg !348
  %11197 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11196, !dbg !348
  %11198 = getelementptr inbounds %struct.POINT, ptr %11197, i32 0, i32 1, !dbg !349
  %11199 = load double, ptr %11198, align 8, !dbg !349
  %11200 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11201 = load double, ptr %11200, align 8, !dbg !350
  %11202 = fcmp oeq double %11199, %11201, !dbg !351
  br i1 %11202, label %5429, label %11203, !dbg !352

11203:                                            ; preds = %11194, %11187
  br label %11204, !dbg !356

11204:                                            ; preds = %11203
  %11205 = load i32, ptr %10, align 4, !dbg !357
  %11206 = add nsw i32 %11205, 1, !dbg !357
  store i32 %11206, ptr %10, align 4, !dbg !357
  %11207 = load i32, ptr %10, align 4, !dbg !334
  %11208 = load i32, ptr %8, align 4, !dbg !336
  %11209 = icmp slt i32 %11207, %11208, !dbg !337
  br i1 %11209, label %11210, label %14243, !dbg !338

11210:                                            ; preds = %11204
  %11211 = load i32, ptr %10, align 4, !dbg !339
  %11212 = sext i32 %11211 to i64, !dbg !342
  %11213 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11212, !dbg !342
  %11214 = load double, ptr %11213, align 16, !dbg !343
  %11215 = load double, ptr %6, align 8, !dbg !344
  %11216 = fcmp oeq double %11214, %11215, !dbg !345
  br i1 %11216, label %11217, label %11226, !dbg !346

11217:                                            ; preds = %11210
  %11218 = load i32, ptr %10, align 4, !dbg !347
  %11219 = sext i32 %11218 to i64, !dbg !348
  %11220 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11219, !dbg !348
  %11221 = getelementptr inbounds %struct.POINT, ptr %11220, i32 0, i32 1, !dbg !349
  %11222 = load double, ptr %11221, align 8, !dbg !349
  %11223 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11224 = load double, ptr %11223, align 8, !dbg !350
  %11225 = fcmp oeq double %11222, %11224, !dbg !351
  br i1 %11225, label %5429, label %11226, !dbg !352

11226:                                            ; preds = %11217, %11210
  br label %11227, !dbg !356

11227:                                            ; preds = %11226
  %11228 = load i32, ptr %10, align 4, !dbg !357
  %11229 = add nsw i32 %11228, 1, !dbg !357
  store i32 %11229, ptr %10, align 4, !dbg !357
  %11230 = load i32, ptr %10, align 4, !dbg !334
  %11231 = load i32, ptr %8, align 4, !dbg !336
  %11232 = icmp slt i32 %11230, %11231, !dbg !337
  br i1 %11232, label %11233, label %14243, !dbg !338

11233:                                            ; preds = %11227
  %11234 = load i32, ptr %10, align 4, !dbg !339
  %11235 = sext i32 %11234 to i64, !dbg !342
  %11236 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11235, !dbg !342
  %11237 = load double, ptr %11236, align 16, !dbg !343
  %11238 = load double, ptr %6, align 8, !dbg !344
  %11239 = fcmp oeq double %11237, %11238, !dbg !345
  br i1 %11239, label %11240, label %11249, !dbg !346

11240:                                            ; preds = %11233
  %11241 = load i32, ptr %10, align 4, !dbg !347
  %11242 = sext i32 %11241 to i64, !dbg !348
  %11243 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11242, !dbg !348
  %11244 = getelementptr inbounds %struct.POINT, ptr %11243, i32 0, i32 1, !dbg !349
  %11245 = load double, ptr %11244, align 8, !dbg !349
  %11246 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11247 = load double, ptr %11246, align 8, !dbg !350
  %11248 = fcmp oeq double %11245, %11247, !dbg !351
  br i1 %11248, label %5429, label %11249, !dbg !352

11249:                                            ; preds = %11240, %11233
  br label %11250, !dbg !356

11250:                                            ; preds = %11249
  %11251 = load i32, ptr %10, align 4, !dbg !357
  %11252 = add nsw i32 %11251, 1, !dbg !357
  store i32 %11252, ptr %10, align 4, !dbg !357
  %11253 = load i32, ptr %10, align 4, !dbg !334
  %11254 = load i32, ptr %8, align 4, !dbg !336
  %11255 = icmp slt i32 %11253, %11254, !dbg !337
  br i1 %11255, label %11256, label %14243, !dbg !338

11256:                                            ; preds = %11250
  %11257 = load i32, ptr %10, align 4, !dbg !339
  %11258 = sext i32 %11257 to i64, !dbg !342
  %11259 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11258, !dbg !342
  %11260 = load double, ptr %11259, align 16, !dbg !343
  %11261 = load double, ptr %6, align 8, !dbg !344
  %11262 = fcmp oeq double %11260, %11261, !dbg !345
  br i1 %11262, label %11263, label %11272, !dbg !346

11263:                                            ; preds = %11256
  %11264 = load i32, ptr %10, align 4, !dbg !347
  %11265 = sext i32 %11264 to i64, !dbg !348
  %11266 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11265, !dbg !348
  %11267 = getelementptr inbounds %struct.POINT, ptr %11266, i32 0, i32 1, !dbg !349
  %11268 = load double, ptr %11267, align 8, !dbg !349
  %11269 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11270 = load double, ptr %11269, align 8, !dbg !350
  %11271 = fcmp oeq double %11268, %11270, !dbg !351
  br i1 %11271, label %5429, label %11272, !dbg !352

11272:                                            ; preds = %11263, %11256
  br label %11273, !dbg !356

11273:                                            ; preds = %11272
  %11274 = load i32, ptr %10, align 4, !dbg !357
  %11275 = add nsw i32 %11274, 1, !dbg !357
  store i32 %11275, ptr %10, align 4, !dbg !357
  %11276 = load i32, ptr %10, align 4, !dbg !334
  %11277 = load i32, ptr %8, align 4, !dbg !336
  %11278 = icmp slt i32 %11276, %11277, !dbg !337
  br i1 %11278, label %11279, label %14243, !dbg !338

11279:                                            ; preds = %11273
  %11280 = load i32, ptr %10, align 4, !dbg !339
  %11281 = sext i32 %11280 to i64, !dbg !342
  %11282 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11281, !dbg !342
  %11283 = load double, ptr %11282, align 16, !dbg !343
  %11284 = load double, ptr %6, align 8, !dbg !344
  %11285 = fcmp oeq double %11283, %11284, !dbg !345
  br i1 %11285, label %11286, label %11295, !dbg !346

11286:                                            ; preds = %11279
  %11287 = load i32, ptr %10, align 4, !dbg !347
  %11288 = sext i32 %11287 to i64, !dbg !348
  %11289 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11288, !dbg !348
  %11290 = getelementptr inbounds %struct.POINT, ptr %11289, i32 0, i32 1, !dbg !349
  %11291 = load double, ptr %11290, align 8, !dbg !349
  %11292 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11293 = load double, ptr %11292, align 8, !dbg !350
  %11294 = fcmp oeq double %11291, %11293, !dbg !351
  br i1 %11294, label %5429, label %11295, !dbg !352

11295:                                            ; preds = %11286, %11279
  br label %11296, !dbg !356

11296:                                            ; preds = %11295
  %11297 = load i32, ptr %10, align 4, !dbg !357
  %11298 = add nsw i32 %11297, 1, !dbg !357
  store i32 %11298, ptr %10, align 4, !dbg !357
  %11299 = load i32, ptr %10, align 4, !dbg !334
  %11300 = load i32, ptr %8, align 4, !dbg !336
  %11301 = icmp slt i32 %11299, %11300, !dbg !337
  br i1 %11301, label %11302, label %14243, !dbg !338

11302:                                            ; preds = %11296
  %11303 = load i32, ptr %10, align 4, !dbg !339
  %11304 = sext i32 %11303 to i64, !dbg !342
  %11305 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11304, !dbg !342
  %11306 = load double, ptr %11305, align 16, !dbg !343
  %11307 = load double, ptr %6, align 8, !dbg !344
  %11308 = fcmp oeq double %11306, %11307, !dbg !345
  br i1 %11308, label %11309, label %11318, !dbg !346

11309:                                            ; preds = %11302
  %11310 = load i32, ptr %10, align 4, !dbg !347
  %11311 = sext i32 %11310 to i64, !dbg !348
  %11312 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11311, !dbg !348
  %11313 = getelementptr inbounds %struct.POINT, ptr %11312, i32 0, i32 1, !dbg !349
  %11314 = load double, ptr %11313, align 8, !dbg !349
  %11315 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11316 = load double, ptr %11315, align 8, !dbg !350
  %11317 = fcmp oeq double %11314, %11316, !dbg !351
  br i1 %11317, label %5429, label %11318, !dbg !352

11318:                                            ; preds = %11309, %11302
  br label %11319, !dbg !356

11319:                                            ; preds = %11318
  %11320 = load i32, ptr %10, align 4, !dbg !357
  %11321 = add nsw i32 %11320, 1, !dbg !357
  store i32 %11321, ptr %10, align 4, !dbg !357
  %11322 = load i32, ptr %10, align 4, !dbg !334
  %11323 = load i32, ptr %8, align 4, !dbg !336
  %11324 = icmp slt i32 %11322, %11323, !dbg !337
  br i1 %11324, label %11325, label %14243, !dbg !338

11325:                                            ; preds = %11319
  %11326 = load i32, ptr %10, align 4, !dbg !339
  %11327 = sext i32 %11326 to i64, !dbg !342
  %11328 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11327, !dbg !342
  %11329 = load double, ptr %11328, align 16, !dbg !343
  %11330 = load double, ptr %6, align 8, !dbg !344
  %11331 = fcmp oeq double %11329, %11330, !dbg !345
  br i1 %11331, label %11332, label %11341, !dbg !346

11332:                                            ; preds = %11325
  %11333 = load i32, ptr %10, align 4, !dbg !347
  %11334 = sext i32 %11333 to i64, !dbg !348
  %11335 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11334, !dbg !348
  %11336 = getelementptr inbounds %struct.POINT, ptr %11335, i32 0, i32 1, !dbg !349
  %11337 = load double, ptr %11336, align 8, !dbg !349
  %11338 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11339 = load double, ptr %11338, align 8, !dbg !350
  %11340 = fcmp oeq double %11337, %11339, !dbg !351
  br i1 %11340, label %5429, label %11341, !dbg !352

11341:                                            ; preds = %11332, %11325
  br label %11342, !dbg !356

11342:                                            ; preds = %11341
  %11343 = load i32, ptr %10, align 4, !dbg !357
  %11344 = add nsw i32 %11343, 1, !dbg !357
  store i32 %11344, ptr %10, align 4, !dbg !357
  %11345 = load i32, ptr %10, align 4, !dbg !334
  %11346 = load i32, ptr %8, align 4, !dbg !336
  %11347 = icmp slt i32 %11345, %11346, !dbg !337
  br i1 %11347, label %11348, label %14243, !dbg !338

11348:                                            ; preds = %11342
  %11349 = load i32, ptr %10, align 4, !dbg !339
  %11350 = sext i32 %11349 to i64, !dbg !342
  %11351 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11350, !dbg !342
  %11352 = load double, ptr %11351, align 16, !dbg !343
  %11353 = load double, ptr %6, align 8, !dbg !344
  %11354 = fcmp oeq double %11352, %11353, !dbg !345
  br i1 %11354, label %11355, label %11364, !dbg !346

11355:                                            ; preds = %11348
  %11356 = load i32, ptr %10, align 4, !dbg !347
  %11357 = sext i32 %11356 to i64, !dbg !348
  %11358 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11357, !dbg !348
  %11359 = getelementptr inbounds %struct.POINT, ptr %11358, i32 0, i32 1, !dbg !349
  %11360 = load double, ptr %11359, align 8, !dbg !349
  %11361 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11362 = load double, ptr %11361, align 8, !dbg !350
  %11363 = fcmp oeq double %11360, %11362, !dbg !351
  br i1 %11363, label %5429, label %11364, !dbg !352

11364:                                            ; preds = %11355, %11348
  br label %11365, !dbg !356

11365:                                            ; preds = %11364
  %11366 = load i32, ptr %10, align 4, !dbg !357
  %11367 = add nsw i32 %11366, 1, !dbg !357
  store i32 %11367, ptr %10, align 4, !dbg !357
  %11368 = load i32, ptr %10, align 4, !dbg !334
  %11369 = load i32, ptr %8, align 4, !dbg !336
  %11370 = icmp slt i32 %11368, %11369, !dbg !337
  br i1 %11370, label %11371, label %14243, !dbg !338

11371:                                            ; preds = %11365
  %11372 = load i32, ptr %10, align 4, !dbg !339
  %11373 = sext i32 %11372 to i64, !dbg !342
  %11374 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11373, !dbg !342
  %11375 = load double, ptr %11374, align 16, !dbg !343
  %11376 = load double, ptr %6, align 8, !dbg !344
  %11377 = fcmp oeq double %11375, %11376, !dbg !345
  br i1 %11377, label %11378, label %11387, !dbg !346

11378:                                            ; preds = %11371
  %11379 = load i32, ptr %10, align 4, !dbg !347
  %11380 = sext i32 %11379 to i64, !dbg !348
  %11381 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11380, !dbg !348
  %11382 = getelementptr inbounds %struct.POINT, ptr %11381, i32 0, i32 1, !dbg !349
  %11383 = load double, ptr %11382, align 8, !dbg !349
  %11384 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11385 = load double, ptr %11384, align 8, !dbg !350
  %11386 = fcmp oeq double %11383, %11385, !dbg !351
  br i1 %11386, label %5429, label %11387, !dbg !352

11387:                                            ; preds = %11378, %11371
  br label %11388, !dbg !356

11388:                                            ; preds = %11387
  %11389 = load i32, ptr %10, align 4, !dbg !357
  %11390 = add nsw i32 %11389, 1, !dbg !357
  store i32 %11390, ptr %10, align 4, !dbg !357
  %11391 = load i32, ptr %10, align 4, !dbg !334
  %11392 = load i32, ptr %8, align 4, !dbg !336
  %11393 = icmp slt i32 %11391, %11392, !dbg !337
  br i1 %11393, label %11394, label %14243, !dbg !338

11394:                                            ; preds = %11388
  %11395 = load i32, ptr %10, align 4, !dbg !339
  %11396 = sext i32 %11395 to i64, !dbg !342
  %11397 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11396, !dbg !342
  %11398 = load double, ptr %11397, align 16, !dbg !343
  %11399 = load double, ptr %6, align 8, !dbg !344
  %11400 = fcmp oeq double %11398, %11399, !dbg !345
  br i1 %11400, label %11401, label %11410, !dbg !346

11401:                                            ; preds = %11394
  %11402 = load i32, ptr %10, align 4, !dbg !347
  %11403 = sext i32 %11402 to i64, !dbg !348
  %11404 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11403, !dbg !348
  %11405 = getelementptr inbounds %struct.POINT, ptr %11404, i32 0, i32 1, !dbg !349
  %11406 = load double, ptr %11405, align 8, !dbg !349
  %11407 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11408 = load double, ptr %11407, align 8, !dbg !350
  %11409 = fcmp oeq double %11406, %11408, !dbg !351
  br i1 %11409, label %5429, label %11410, !dbg !352

11410:                                            ; preds = %11401, %11394
  br label %11411, !dbg !356

11411:                                            ; preds = %11410
  %11412 = load i32, ptr %10, align 4, !dbg !357
  %11413 = add nsw i32 %11412, 1, !dbg !357
  store i32 %11413, ptr %10, align 4, !dbg !357
  %11414 = load i32, ptr %10, align 4, !dbg !334
  %11415 = load i32, ptr %8, align 4, !dbg !336
  %11416 = icmp slt i32 %11414, %11415, !dbg !337
  br i1 %11416, label %11417, label %14243, !dbg !338

11417:                                            ; preds = %11411
  %11418 = load i32, ptr %10, align 4, !dbg !339
  %11419 = sext i32 %11418 to i64, !dbg !342
  %11420 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11419, !dbg !342
  %11421 = load double, ptr %11420, align 16, !dbg !343
  %11422 = load double, ptr %6, align 8, !dbg !344
  %11423 = fcmp oeq double %11421, %11422, !dbg !345
  br i1 %11423, label %11424, label %11433, !dbg !346

11424:                                            ; preds = %11417
  %11425 = load i32, ptr %10, align 4, !dbg !347
  %11426 = sext i32 %11425 to i64, !dbg !348
  %11427 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11426, !dbg !348
  %11428 = getelementptr inbounds %struct.POINT, ptr %11427, i32 0, i32 1, !dbg !349
  %11429 = load double, ptr %11428, align 8, !dbg !349
  %11430 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11431 = load double, ptr %11430, align 8, !dbg !350
  %11432 = fcmp oeq double %11429, %11431, !dbg !351
  br i1 %11432, label %5429, label %11433, !dbg !352

11433:                                            ; preds = %11424, %11417
  br label %11434, !dbg !356

11434:                                            ; preds = %11433
  %11435 = load i32, ptr %10, align 4, !dbg !357
  %11436 = add nsw i32 %11435, 1, !dbg !357
  store i32 %11436, ptr %10, align 4, !dbg !357
  %11437 = load i32, ptr %10, align 4, !dbg !334
  %11438 = load i32, ptr %8, align 4, !dbg !336
  %11439 = icmp slt i32 %11437, %11438, !dbg !337
  br i1 %11439, label %11440, label %14243, !dbg !338

11440:                                            ; preds = %11434
  %11441 = load i32, ptr %10, align 4, !dbg !339
  %11442 = sext i32 %11441 to i64, !dbg !342
  %11443 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11442, !dbg !342
  %11444 = load double, ptr %11443, align 16, !dbg !343
  %11445 = load double, ptr %6, align 8, !dbg !344
  %11446 = fcmp oeq double %11444, %11445, !dbg !345
  br i1 %11446, label %11447, label %11456, !dbg !346

11447:                                            ; preds = %11440
  %11448 = load i32, ptr %10, align 4, !dbg !347
  %11449 = sext i32 %11448 to i64, !dbg !348
  %11450 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11449, !dbg !348
  %11451 = getelementptr inbounds %struct.POINT, ptr %11450, i32 0, i32 1, !dbg !349
  %11452 = load double, ptr %11451, align 8, !dbg !349
  %11453 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11454 = load double, ptr %11453, align 8, !dbg !350
  %11455 = fcmp oeq double %11452, %11454, !dbg !351
  br i1 %11455, label %5429, label %11456, !dbg !352

11456:                                            ; preds = %11447, %11440
  br label %11457, !dbg !356

11457:                                            ; preds = %11456
  %11458 = load i32, ptr %10, align 4, !dbg !357
  %11459 = add nsw i32 %11458, 1, !dbg !357
  store i32 %11459, ptr %10, align 4, !dbg !357
  %11460 = load i32, ptr %10, align 4, !dbg !334
  %11461 = load i32, ptr %8, align 4, !dbg !336
  %11462 = icmp slt i32 %11460, %11461, !dbg !337
  br i1 %11462, label %11463, label %14243, !dbg !338

11463:                                            ; preds = %11457
  %11464 = load i32, ptr %10, align 4, !dbg !339
  %11465 = sext i32 %11464 to i64, !dbg !342
  %11466 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11465, !dbg !342
  %11467 = load double, ptr %11466, align 16, !dbg !343
  %11468 = load double, ptr %6, align 8, !dbg !344
  %11469 = fcmp oeq double %11467, %11468, !dbg !345
  br i1 %11469, label %11470, label %11479, !dbg !346

11470:                                            ; preds = %11463
  %11471 = load i32, ptr %10, align 4, !dbg !347
  %11472 = sext i32 %11471 to i64, !dbg !348
  %11473 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11472, !dbg !348
  %11474 = getelementptr inbounds %struct.POINT, ptr %11473, i32 0, i32 1, !dbg !349
  %11475 = load double, ptr %11474, align 8, !dbg !349
  %11476 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11477 = load double, ptr %11476, align 8, !dbg !350
  %11478 = fcmp oeq double %11475, %11477, !dbg !351
  br i1 %11478, label %5429, label %11479, !dbg !352

11479:                                            ; preds = %11470, %11463
  br label %11480, !dbg !356

11480:                                            ; preds = %11479
  %11481 = load i32, ptr %10, align 4, !dbg !357
  %11482 = add nsw i32 %11481, 1, !dbg !357
  store i32 %11482, ptr %10, align 4, !dbg !357
  %11483 = load i32, ptr %10, align 4, !dbg !334
  %11484 = load i32, ptr %8, align 4, !dbg !336
  %11485 = icmp slt i32 %11483, %11484, !dbg !337
  br i1 %11485, label %11486, label %14243, !dbg !338

11486:                                            ; preds = %11480
  %11487 = load i32, ptr %10, align 4, !dbg !339
  %11488 = sext i32 %11487 to i64, !dbg !342
  %11489 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11488, !dbg !342
  %11490 = load double, ptr %11489, align 16, !dbg !343
  %11491 = load double, ptr %6, align 8, !dbg !344
  %11492 = fcmp oeq double %11490, %11491, !dbg !345
  br i1 %11492, label %11493, label %11502, !dbg !346

11493:                                            ; preds = %11486
  %11494 = load i32, ptr %10, align 4, !dbg !347
  %11495 = sext i32 %11494 to i64, !dbg !348
  %11496 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11495, !dbg !348
  %11497 = getelementptr inbounds %struct.POINT, ptr %11496, i32 0, i32 1, !dbg !349
  %11498 = load double, ptr %11497, align 8, !dbg !349
  %11499 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11500 = load double, ptr %11499, align 8, !dbg !350
  %11501 = fcmp oeq double %11498, %11500, !dbg !351
  br i1 %11501, label %5429, label %11502, !dbg !352

11502:                                            ; preds = %11493, %11486
  br label %11503, !dbg !356

11503:                                            ; preds = %11502
  %11504 = load i32, ptr %10, align 4, !dbg !357
  %11505 = add nsw i32 %11504, 1, !dbg !357
  store i32 %11505, ptr %10, align 4, !dbg !357
  %11506 = load i32, ptr %10, align 4, !dbg !334
  %11507 = load i32, ptr %8, align 4, !dbg !336
  %11508 = icmp slt i32 %11506, %11507, !dbg !337
  br i1 %11508, label %11509, label %14243, !dbg !338

11509:                                            ; preds = %11503
  %11510 = load i32, ptr %10, align 4, !dbg !339
  %11511 = sext i32 %11510 to i64, !dbg !342
  %11512 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11511, !dbg !342
  %11513 = load double, ptr %11512, align 16, !dbg !343
  %11514 = load double, ptr %6, align 8, !dbg !344
  %11515 = fcmp oeq double %11513, %11514, !dbg !345
  br i1 %11515, label %11516, label %11525, !dbg !346

11516:                                            ; preds = %11509
  %11517 = load i32, ptr %10, align 4, !dbg !347
  %11518 = sext i32 %11517 to i64, !dbg !348
  %11519 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11518, !dbg !348
  %11520 = getelementptr inbounds %struct.POINT, ptr %11519, i32 0, i32 1, !dbg !349
  %11521 = load double, ptr %11520, align 8, !dbg !349
  %11522 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11523 = load double, ptr %11522, align 8, !dbg !350
  %11524 = fcmp oeq double %11521, %11523, !dbg !351
  br i1 %11524, label %5429, label %11525, !dbg !352

11525:                                            ; preds = %11516, %11509
  br label %11526, !dbg !356

11526:                                            ; preds = %11525
  %11527 = load i32, ptr %10, align 4, !dbg !357
  %11528 = add nsw i32 %11527, 1, !dbg !357
  store i32 %11528, ptr %10, align 4, !dbg !357
  %11529 = load i32, ptr %10, align 4, !dbg !334
  %11530 = load i32, ptr %8, align 4, !dbg !336
  %11531 = icmp slt i32 %11529, %11530, !dbg !337
  br i1 %11531, label %11532, label %14243, !dbg !338

11532:                                            ; preds = %11526
  %11533 = load i32, ptr %10, align 4, !dbg !339
  %11534 = sext i32 %11533 to i64, !dbg !342
  %11535 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11534, !dbg !342
  %11536 = load double, ptr %11535, align 16, !dbg !343
  %11537 = load double, ptr %6, align 8, !dbg !344
  %11538 = fcmp oeq double %11536, %11537, !dbg !345
  br i1 %11538, label %11539, label %11548, !dbg !346

11539:                                            ; preds = %11532
  %11540 = load i32, ptr %10, align 4, !dbg !347
  %11541 = sext i32 %11540 to i64, !dbg !348
  %11542 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11541, !dbg !348
  %11543 = getelementptr inbounds %struct.POINT, ptr %11542, i32 0, i32 1, !dbg !349
  %11544 = load double, ptr %11543, align 8, !dbg !349
  %11545 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11546 = load double, ptr %11545, align 8, !dbg !350
  %11547 = fcmp oeq double %11544, %11546, !dbg !351
  br i1 %11547, label %5429, label %11548, !dbg !352

11548:                                            ; preds = %11539, %11532
  br label %11549, !dbg !356

11549:                                            ; preds = %11548
  %11550 = load i32, ptr %10, align 4, !dbg !357
  %11551 = add nsw i32 %11550, 1, !dbg !357
  store i32 %11551, ptr %10, align 4, !dbg !357
  %11552 = load i32, ptr %10, align 4, !dbg !334
  %11553 = load i32, ptr %8, align 4, !dbg !336
  %11554 = icmp slt i32 %11552, %11553, !dbg !337
  br i1 %11554, label %11555, label %14243, !dbg !338

11555:                                            ; preds = %11549
  %11556 = load i32, ptr %10, align 4, !dbg !339
  %11557 = sext i32 %11556 to i64, !dbg !342
  %11558 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11557, !dbg !342
  %11559 = load double, ptr %11558, align 16, !dbg !343
  %11560 = load double, ptr %6, align 8, !dbg !344
  %11561 = fcmp oeq double %11559, %11560, !dbg !345
  br i1 %11561, label %11562, label %11571, !dbg !346

11562:                                            ; preds = %11555
  %11563 = load i32, ptr %10, align 4, !dbg !347
  %11564 = sext i32 %11563 to i64, !dbg !348
  %11565 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11564, !dbg !348
  %11566 = getelementptr inbounds %struct.POINT, ptr %11565, i32 0, i32 1, !dbg !349
  %11567 = load double, ptr %11566, align 8, !dbg !349
  %11568 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11569 = load double, ptr %11568, align 8, !dbg !350
  %11570 = fcmp oeq double %11567, %11569, !dbg !351
  br i1 %11570, label %5429, label %11571, !dbg !352

11571:                                            ; preds = %11562, %11555
  br label %11572, !dbg !356

11572:                                            ; preds = %11571
  %11573 = load i32, ptr %10, align 4, !dbg !357
  %11574 = add nsw i32 %11573, 1, !dbg !357
  store i32 %11574, ptr %10, align 4, !dbg !357
  %11575 = load i32, ptr %10, align 4, !dbg !334
  %11576 = load i32, ptr %8, align 4, !dbg !336
  %11577 = icmp slt i32 %11575, %11576, !dbg !337
  br i1 %11577, label %11578, label %14243, !dbg !338

11578:                                            ; preds = %11572
  %11579 = load i32, ptr %10, align 4, !dbg !339
  %11580 = sext i32 %11579 to i64, !dbg !342
  %11581 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11580, !dbg !342
  %11582 = load double, ptr %11581, align 16, !dbg !343
  %11583 = load double, ptr %6, align 8, !dbg !344
  %11584 = fcmp oeq double %11582, %11583, !dbg !345
  br i1 %11584, label %11585, label %11594, !dbg !346

11585:                                            ; preds = %11578
  %11586 = load i32, ptr %10, align 4, !dbg !347
  %11587 = sext i32 %11586 to i64, !dbg !348
  %11588 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11587, !dbg !348
  %11589 = getelementptr inbounds %struct.POINT, ptr %11588, i32 0, i32 1, !dbg !349
  %11590 = load double, ptr %11589, align 8, !dbg !349
  %11591 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11592 = load double, ptr %11591, align 8, !dbg !350
  %11593 = fcmp oeq double %11590, %11592, !dbg !351
  br i1 %11593, label %5429, label %11594, !dbg !352

11594:                                            ; preds = %11585, %11578
  br label %11595, !dbg !356

11595:                                            ; preds = %11594
  %11596 = load i32, ptr %10, align 4, !dbg !357
  %11597 = add nsw i32 %11596, 1, !dbg !357
  store i32 %11597, ptr %10, align 4, !dbg !357
  %11598 = load i32, ptr %10, align 4, !dbg !334
  %11599 = load i32, ptr %8, align 4, !dbg !336
  %11600 = icmp slt i32 %11598, %11599, !dbg !337
  br i1 %11600, label %11601, label %14243, !dbg !338

11601:                                            ; preds = %11595
  %11602 = load i32, ptr %10, align 4, !dbg !339
  %11603 = sext i32 %11602 to i64, !dbg !342
  %11604 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11603, !dbg !342
  %11605 = load double, ptr %11604, align 16, !dbg !343
  %11606 = load double, ptr %6, align 8, !dbg !344
  %11607 = fcmp oeq double %11605, %11606, !dbg !345
  br i1 %11607, label %11608, label %11617, !dbg !346

11608:                                            ; preds = %11601
  %11609 = load i32, ptr %10, align 4, !dbg !347
  %11610 = sext i32 %11609 to i64, !dbg !348
  %11611 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11610, !dbg !348
  %11612 = getelementptr inbounds %struct.POINT, ptr %11611, i32 0, i32 1, !dbg !349
  %11613 = load double, ptr %11612, align 8, !dbg !349
  %11614 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11615 = load double, ptr %11614, align 8, !dbg !350
  %11616 = fcmp oeq double %11613, %11615, !dbg !351
  br i1 %11616, label %5429, label %11617, !dbg !352

11617:                                            ; preds = %11608, %11601
  br label %11618, !dbg !356

11618:                                            ; preds = %11617
  %11619 = load i32, ptr %10, align 4, !dbg !357
  %11620 = add nsw i32 %11619, 1, !dbg !357
  store i32 %11620, ptr %10, align 4, !dbg !357
  %11621 = load i32, ptr %10, align 4, !dbg !334
  %11622 = load i32, ptr %8, align 4, !dbg !336
  %11623 = icmp slt i32 %11621, %11622, !dbg !337
  br i1 %11623, label %11624, label %14243, !dbg !338

11624:                                            ; preds = %11618
  %11625 = load i32, ptr %10, align 4, !dbg !339
  %11626 = sext i32 %11625 to i64, !dbg !342
  %11627 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11626, !dbg !342
  %11628 = load double, ptr %11627, align 16, !dbg !343
  %11629 = load double, ptr %6, align 8, !dbg !344
  %11630 = fcmp oeq double %11628, %11629, !dbg !345
  br i1 %11630, label %11631, label %11640, !dbg !346

11631:                                            ; preds = %11624
  %11632 = load i32, ptr %10, align 4, !dbg !347
  %11633 = sext i32 %11632 to i64, !dbg !348
  %11634 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11633, !dbg !348
  %11635 = getelementptr inbounds %struct.POINT, ptr %11634, i32 0, i32 1, !dbg !349
  %11636 = load double, ptr %11635, align 8, !dbg !349
  %11637 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11638 = load double, ptr %11637, align 8, !dbg !350
  %11639 = fcmp oeq double %11636, %11638, !dbg !351
  br i1 %11639, label %5429, label %11640, !dbg !352

11640:                                            ; preds = %11631, %11624
  br label %11641, !dbg !356

11641:                                            ; preds = %11640
  %11642 = load i32, ptr %10, align 4, !dbg !357
  %11643 = add nsw i32 %11642, 1, !dbg !357
  store i32 %11643, ptr %10, align 4, !dbg !357
  %11644 = load i32, ptr %10, align 4, !dbg !334
  %11645 = load i32, ptr %8, align 4, !dbg !336
  %11646 = icmp slt i32 %11644, %11645, !dbg !337
  br i1 %11646, label %11647, label %14243, !dbg !338

11647:                                            ; preds = %11641
  %11648 = load i32, ptr %10, align 4, !dbg !339
  %11649 = sext i32 %11648 to i64, !dbg !342
  %11650 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11649, !dbg !342
  %11651 = load double, ptr %11650, align 16, !dbg !343
  %11652 = load double, ptr %6, align 8, !dbg !344
  %11653 = fcmp oeq double %11651, %11652, !dbg !345
  br i1 %11653, label %11654, label %11663, !dbg !346

11654:                                            ; preds = %11647
  %11655 = load i32, ptr %10, align 4, !dbg !347
  %11656 = sext i32 %11655 to i64, !dbg !348
  %11657 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11656, !dbg !348
  %11658 = getelementptr inbounds %struct.POINT, ptr %11657, i32 0, i32 1, !dbg !349
  %11659 = load double, ptr %11658, align 8, !dbg !349
  %11660 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11661 = load double, ptr %11660, align 8, !dbg !350
  %11662 = fcmp oeq double %11659, %11661, !dbg !351
  br i1 %11662, label %5429, label %11663, !dbg !352

11663:                                            ; preds = %11654, %11647
  br label %11664, !dbg !356

11664:                                            ; preds = %11663
  %11665 = load i32, ptr %10, align 4, !dbg !357
  %11666 = add nsw i32 %11665, 1, !dbg !357
  store i32 %11666, ptr %10, align 4, !dbg !357
  %11667 = load i32, ptr %10, align 4, !dbg !334
  %11668 = load i32, ptr %8, align 4, !dbg !336
  %11669 = icmp slt i32 %11667, %11668, !dbg !337
  br i1 %11669, label %11670, label %14243, !dbg !338

11670:                                            ; preds = %11664
  %11671 = load i32, ptr %10, align 4, !dbg !339
  %11672 = sext i32 %11671 to i64, !dbg !342
  %11673 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11672, !dbg !342
  %11674 = load double, ptr %11673, align 16, !dbg !343
  %11675 = load double, ptr %6, align 8, !dbg !344
  %11676 = fcmp oeq double %11674, %11675, !dbg !345
  br i1 %11676, label %11677, label %11686, !dbg !346

11677:                                            ; preds = %11670
  %11678 = load i32, ptr %10, align 4, !dbg !347
  %11679 = sext i32 %11678 to i64, !dbg !348
  %11680 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11679, !dbg !348
  %11681 = getelementptr inbounds %struct.POINT, ptr %11680, i32 0, i32 1, !dbg !349
  %11682 = load double, ptr %11681, align 8, !dbg !349
  %11683 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11684 = load double, ptr %11683, align 8, !dbg !350
  %11685 = fcmp oeq double %11682, %11684, !dbg !351
  br i1 %11685, label %5429, label %11686, !dbg !352

11686:                                            ; preds = %11677, %11670
  br label %11687, !dbg !356

11687:                                            ; preds = %11686
  %11688 = load i32, ptr %10, align 4, !dbg !357
  %11689 = add nsw i32 %11688, 1, !dbg !357
  store i32 %11689, ptr %10, align 4, !dbg !357
  %11690 = load i32, ptr %10, align 4, !dbg !334
  %11691 = load i32, ptr %8, align 4, !dbg !336
  %11692 = icmp slt i32 %11690, %11691, !dbg !337
  br i1 %11692, label %11693, label %14243, !dbg !338

11693:                                            ; preds = %11687
  %11694 = load i32, ptr %10, align 4, !dbg !339
  %11695 = sext i32 %11694 to i64, !dbg !342
  %11696 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11695, !dbg !342
  %11697 = load double, ptr %11696, align 16, !dbg !343
  %11698 = load double, ptr %6, align 8, !dbg !344
  %11699 = fcmp oeq double %11697, %11698, !dbg !345
  br i1 %11699, label %11700, label %11709, !dbg !346

11700:                                            ; preds = %11693
  %11701 = load i32, ptr %10, align 4, !dbg !347
  %11702 = sext i32 %11701 to i64, !dbg !348
  %11703 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11702, !dbg !348
  %11704 = getelementptr inbounds %struct.POINT, ptr %11703, i32 0, i32 1, !dbg !349
  %11705 = load double, ptr %11704, align 8, !dbg !349
  %11706 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11707 = load double, ptr %11706, align 8, !dbg !350
  %11708 = fcmp oeq double %11705, %11707, !dbg !351
  br i1 %11708, label %5429, label %11709, !dbg !352

11709:                                            ; preds = %11700, %11693
  br label %11710, !dbg !356

11710:                                            ; preds = %11709
  %11711 = load i32, ptr %10, align 4, !dbg !357
  %11712 = add nsw i32 %11711, 1, !dbg !357
  store i32 %11712, ptr %10, align 4, !dbg !357
  %11713 = load i32, ptr %10, align 4, !dbg !334
  %11714 = load i32, ptr %8, align 4, !dbg !336
  %11715 = icmp slt i32 %11713, %11714, !dbg !337
  br i1 %11715, label %11716, label %14243, !dbg !338

11716:                                            ; preds = %11710
  %11717 = load i32, ptr %10, align 4, !dbg !339
  %11718 = sext i32 %11717 to i64, !dbg !342
  %11719 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11718, !dbg !342
  %11720 = load double, ptr %11719, align 16, !dbg !343
  %11721 = load double, ptr %6, align 8, !dbg !344
  %11722 = fcmp oeq double %11720, %11721, !dbg !345
  br i1 %11722, label %11723, label %11732, !dbg !346

11723:                                            ; preds = %11716
  %11724 = load i32, ptr %10, align 4, !dbg !347
  %11725 = sext i32 %11724 to i64, !dbg !348
  %11726 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11725, !dbg !348
  %11727 = getelementptr inbounds %struct.POINT, ptr %11726, i32 0, i32 1, !dbg !349
  %11728 = load double, ptr %11727, align 8, !dbg !349
  %11729 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11730 = load double, ptr %11729, align 8, !dbg !350
  %11731 = fcmp oeq double %11728, %11730, !dbg !351
  br i1 %11731, label %5429, label %11732, !dbg !352

11732:                                            ; preds = %11723, %11716
  br label %11733, !dbg !356

11733:                                            ; preds = %11732
  %11734 = load i32, ptr %10, align 4, !dbg !357
  %11735 = add nsw i32 %11734, 1, !dbg !357
  store i32 %11735, ptr %10, align 4, !dbg !357
  %11736 = load i32, ptr %10, align 4, !dbg !334
  %11737 = load i32, ptr %8, align 4, !dbg !336
  %11738 = icmp slt i32 %11736, %11737, !dbg !337
  br i1 %11738, label %11739, label %14243, !dbg !338

11739:                                            ; preds = %11733
  %11740 = load i32, ptr %10, align 4, !dbg !339
  %11741 = sext i32 %11740 to i64, !dbg !342
  %11742 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11741, !dbg !342
  %11743 = load double, ptr %11742, align 16, !dbg !343
  %11744 = load double, ptr %6, align 8, !dbg !344
  %11745 = fcmp oeq double %11743, %11744, !dbg !345
  br i1 %11745, label %11746, label %11755, !dbg !346

11746:                                            ; preds = %11739
  %11747 = load i32, ptr %10, align 4, !dbg !347
  %11748 = sext i32 %11747 to i64, !dbg !348
  %11749 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11748, !dbg !348
  %11750 = getelementptr inbounds %struct.POINT, ptr %11749, i32 0, i32 1, !dbg !349
  %11751 = load double, ptr %11750, align 8, !dbg !349
  %11752 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11753 = load double, ptr %11752, align 8, !dbg !350
  %11754 = fcmp oeq double %11751, %11753, !dbg !351
  br i1 %11754, label %5429, label %11755, !dbg !352

11755:                                            ; preds = %11746, %11739
  br label %11756, !dbg !356

11756:                                            ; preds = %11755
  %11757 = load i32, ptr %10, align 4, !dbg !357
  %11758 = add nsw i32 %11757, 1, !dbg !357
  store i32 %11758, ptr %10, align 4, !dbg !357
  %11759 = load i32, ptr %10, align 4, !dbg !334
  %11760 = load i32, ptr %8, align 4, !dbg !336
  %11761 = icmp slt i32 %11759, %11760, !dbg !337
  br i1 %11761, label %11762, label %14243, !dbg !338

11762:                                            ; preds = %11756
  %11763 = load i32, ptr %10, align 4, !dbg !339
  %11764 = sext i32 %11763 to i64, !dbg !342
  %11765 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11764, !dbg !342
  %11766 = load double, ptr %11765, align 16, !dbg !343
  %11767 = load double, ptr %6, align 8, !dbg !344
  %11768 = fcmp oeq double %11766, %11767, !dbg !345
  br i1 %11768, label %11769, label %11778, !dbg !346

11769:                                            ; preds = %11762
  %11770 = load i32, ptr %10, align 4, !dbg !347
  %11771 = sext i32 %11770 to i64, !dbg !348
  %11772 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11771, !dbg !348
  %11773 = getelementptr inbounds %struct.POINT, ptr %11772, i32 0, i32 1, !dbg !349
  %11774 = load double, ptr %11773, align 8, !dbg !349
  %11775 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11776 = load double, ptr %11775, align 8, !dbg !350
  %11777 = fcmp oeq double %11774, %11776, !dbg !351
  br i1 %11777, label %5429, label %11778, !dbg !352

11778:                                            ; preds = %11769, %11762
  br label %11779, !dbg !356

11779:                                            ; preds = %11778
  %11780 = load i32, ptr %10, align 4, !dbg !357
  %11781 = add nsw i32 %11780, 1, !dbg !357
  store i32 %11781, ptr %10, align 4, !dbg !357
  %11782 = load i32, ptr %10, align 4, !dbg !334
  %11783 = load i32, ptr %8, align 4, !dbg !336
  %11784 = icmp slt i32 %11782, %11783, !dbg !337
  br i1 %11784, label %11785, label %14243, !dbg !338

11785:                                            ; preds = %11779
  %11786 = load i32, ptr %10, align 4, !dbg !339
  %11787 = sext i32 %11786 to i64, !dbg !342
  %11788 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11787, !dbg !342
  %11789 = load double, ptr %11788, align 16, !dbg !343
  %11790 = load double, ptr %6, align 8, !dbg !344
  %11791 = fcmp oeq double %11789, %11790, !dbg !345
  br i1 %11791, label %11792, label %11801, !dbg !346

11792:                                            ; preds = %11785
  %11793 = load i32, ptr %10, align 4, !dbg !347
  %11794 = sext i32 %11793 to i64, !dbg !348
  %11795 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11794, !dbg !348
  %11796 = getelementptr inbounds %struct.POINT, ptr %11795, i32 0, i32 1, !dbg !349
  %11797 = load double, ptr %11796, align 8, !dbg !349
  %11798 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11799 = load double, ptr %11798, align 8, !dbg !350
  %11800 = fcmp oeq double %11797, %11799, !dbg !351
  br i1 %11800, label %5429, label %11801, !dbg !352

11801:                                            ; preds = %11792, %11785
  br label %11802, !dbg !356

11802:                                            ; preds = %11801
  %11803 = load i32, ptr %10, align 4, !dbg !357
  %11804 = add nsw i32 %11803, 1, !dbg !357
  store i32 %11804, ptr %10, align 4, !dbg !357
  %11805 = load i32, ptr %10, align 4, !dbg !334
  %11806 = load i32, ptr %8, align 4, !dbg !336
  %11807 = icmp slt i32 %11805, %11806, !dbg !337
  br i1 %11807, label %11808, label %14243, !dbg !338

11808:                                            ; preds = %11802
  %11809 = load i32, ptr %10, align 4, !dbg !339
  %11810 = sext i32 %11809 to i64, !dbg !342
  %11811 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11810, !dbg !342
  %11812 = load double, ptr %11811, align 16, !dbg !343
  %11813 = load double, ptr %6, align 8, !dbg !344
  %11814 = fcmp oeq double %11812, %11813, !dbg !345
  br i1 %11814, label %11815, label %11824, !dbg !346

11815:                                            ; preds = %11808
  %11816 = load i32, ptr %10, align 4, !dbg !347
  %11817 = sext i32 %11816 to i64, !dbg !348
  %11818 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11817, !dbg !348
  %11819 = getelementptr inbounds %struct.POINT, ptr %11818, i32 0, i32 1, !dbg !349
  %11820 = load double, ptr %11819, align 8, !dbg !349
  %11821 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11822 = load double, ptr %11821, align 8, !dbg !350
  %11823 = fcmp oeq double %11820, %11822, !dbg !351
  br i1 %11823, label %5429, label %11824, !dbg !352

11824:                                            ; preds = %11815, %11808
  br label %11825, !dbg !356

11825:                                            ; preds = %11824
  %11826 = load i32, ptr %10, align 4, !dbg !357
  %11827 = add nsw i32 %11826, 1, !dbg !357
  store i32 %11827, ptr %10, align 4, !dbg !357
  %11828 = load i32, ptr %10, align 4, !dbg !334
  %11829 = load i32, ptr %8, align 4, !dbg !336
  %11830 = icmp slt i32 %11828, %11829, !dbg !337
  br i1 %11830, label %11831, label %14243, !dbg !338

11831:                                            ; preds = %11825
  %11832 = load i32, ptr %10, align 4, !dbg !339
  %11833 = sext i32 %11832 to i64, !dbg !342
  %11834 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11833, !dbg !342
  %11835 = load double, ptr %11834, align 16, !dbg !343
  %11836 = load double, ptr %6, align 8, !dbg !344
  %11837 = fcmp oeq double %11835, %11836, !dbg !345
  br i1 %11837, label %11838, label %11847, !dbg !346

11838:                                            ; preds = %11831
  %11839 = load i32, ptr %10, align 4, !dbg !347
  %11840 = sext i32 %11839 to i64, !dbg !348
  %11841 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11840, !dbg !348
  %11842 = getelementptr inbounds %struct.POINT, ptr %11841, i32 0, i32 1, !dbg !349
  %11843 = load double, ptr %11842, align 8, !dbg !349
  %11844 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11845 = load double, ptr %11844, align 8, !dbg !350
  %11846 = fcmp oeq double %11843, %11845, !dbg !351
  br i1 %11846, label %5429, label %11847, !dbg !352

11847:                                            ; preds = %11838, %11831
  br label %11848, !dbg !356

11848:                                            ; preds = %11847
  %11849 = load i32, ptr %10, align 4, !dbg !357
  %11850 = add nsw i32 %11849, 1, !dbg !357
  store i32 %11850, ptr %10, align 4, !dbg !357
  %11851 = load i32, ptr %10, align 4, !dbg !334
  %11852 = load i32, ptr %8, align 4, !dbg !336
  %11853 = icmp slt i32 %11851, %11852, !dbg !337
  br i1 %11853, label %11854, label %14243, !dbg !338

11854:                                            ; preds = %11848
  %11855 = load i32, ptr %10, align 4, !dbg !339
  %11856 = sext i32 %11855 to i64, !dbg !342
  %11857 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11856, !dbg !342
  %11858 = load double, ptr %11857, align 16, !dbg !343
  %11859 = load double, ptr %6, align 8, !dbg !344
  %11860 = fcmp oeq double %11858, %11859, !dbg !345
  br i1 %11860, label %11861, label %11870, !dbg !346

11861:                                            ; preds = %11854
  %11862 = load i32, ptr %10, align 4, !dbg !347
  %11863 = sext i32 %11862 to i64, !dbg !348
  %11864 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11863, !dbg !348
  %11865 = getelementptr inbounds %struct.POINT, ptr %11864, i32 0, i32 1, !dbg !349
  %11866 = load double, ptr %11865, align 8, !dbg !349
  %11867 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11868 = load double, ptr %11867, align 8, !dbg !350
  %11869 = fcmp oeq double %11866, %11868, !dbg !351
  br i1 %11869, label %5429, label %11870, !dbg !352

11870:                                            ; preds = %11861, %11854
  br label %11871, !dbg !356

11871:                                            ; preds = %11870
  %11872 = load i32, ptr %10, align 4, !dbg !357
  %11873 = add nsw i32 %11872, 1, !dbg !357
  store i32 %11873, ptr %10, align 4, !dbg !357
  %11874 = load i32, ptr %10, align 4, !dbg !334
  %11875 = load i32, ptr %8, align 4, !dbg !336
  %11876 = icmp slt i32 %11874, %11875, !dbg !337
  br i1 %11876, label %11877, label %14243, !dbg !338

11877:                                            ; preds = %11871
  %11878 = load i32, ptr %10, align 4, !dbg !339
  %11879 = sext i32 %11878 to i64, !dbg !342
  %11880 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11879, !dbg !342
  %11881 = load double, ptr %11880, align 16, !dbg !343
  %11882 = load double, ptr %6, align 8, !dbg !344
  %11883 = fcmp oeq double %11881, %11882, !dbg !345
  br i1 %11883, label %11884, label %11893, !dbg !346

11884:                                            ; preds = %11877
  %11885 = load i32, ptr %10, align 4, !dbg !347
  %11886 = sext i32 %11885 to i64, !dbg !348
  %11887 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11886, !dbg !348
  %11888 = getelementptr inbounds %struct.POINT, ptr %11887, i32 0, i32 1, !dbg !349
  %11889 = load double, ptr %11888, align 8, !dbg !349
  %11890 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11891 = load double, ptr %11890, align 8, !dbg !350
  %11892 = fcmp oeq double %11889, %11891, !dbg !351
  br i1 %11892, label %5429, label %11893, !dbg !352

11893:                                            ; preds = %11884, %11877
  br label %11894, !dbg !356

11894:                                            ; preds = %11893
  %11895 = load i32, ptr %10, align 4, !dbg !357
  %11896 = add nsw i32 %11895, 1, !dbg !357
  store i32 %11896, ptr %10, align 4, !dbg !357
  %11897 = load i32, ptr %10, align 4, !dbg !334
  %11898 = load i32, ptr %8, align 4, !dbg !336
  %11899 = icmp slt i32 %11897, %11898, !dbg !337
  br i1 %11899, label %11900, label %14243, !dbg !338

11900:                                            ; preds = %11894
  %11901 = load i32, ptr %10, align 4, !dbg !339
  %11902 = sext i32 %11901 to i64, !dbg !342
  %11903 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11902, !dbg !342
  %11904 = load double, ptr %11903, align 16, !dbg !343
  %11905 = load double, ptr %6, align 8, !dbg !344
  %11906 = fcmp oeq double %11904, %11905, !dbg !345
  br i1 %11906, label %11907, label %11916, !dbg !346

11907:                                            ; preds = %11900
  %11908 = load i32, ptr %10, align 4, !dbg !347
  %11909 = sext i32 %11908 to i64, !dbg !348
  %11910 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11909, !dbg !348
  %11911 = getelementptr inbounds %struct.POINT, ptr %11910, i32 0, i32 1, !dbg !349
  %11912 = load double, ptr %11911, align 8, !dbg !349
  %11913 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11914 = load double, ptr %11913, align 8, !dbg !350
  %11915 = fcmp oeq double %11912, %11914, !dbg !351
  br i1 %11915, label %5429, label %11916, !dbg !352

11916:                                            ; preds = %11907, %11900
  br label %11917, !dbg !356

11917:                                            ; preds = %11916
  %11918 = load i32, ptr %10, align 4, !dbg !357
  %11919 = add nsw i32 %11918, 1, !dbg !357
  store i32 %11919, ptr %10, align 4, !dbg !357
  %11920 = load i32, ptr %10, align 4, !dbg !334
  %11921 = load i32, ptr %8, align 4, !dbg !336
  %11922 = icmp slt i32 %11920, %11921, !dbg !337
  br i1 %11922, label %11923, label %14243, !dbg !338

11923:                                            ; preds = %11917
  %11924 = load i32, ptr %10, align 4, !dbg !339
  %11925 = sext i32 %11924 to i64, !dbg !342
  %11926 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11925, !dbg !342
  %11927 = load double, ptr %11926, align 16, !dbg !343
  %11928 = load double, ptr %6, align 8, !dbg !344
  %11929 = fcmp oeq double %11927, %11928, !dbg !345
  br i1 %11929, label %11930, label %11939, !dbg !346

11930:                                            ; preds = %11923
  %11931 = load i32, ptr %10, align 4, !dbg !347
  %11932 = sext i32 %11931 to i64, !dbg !348
  %11933 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11932, !dbg !348
  %11934 = getelementptr inbounds %struct.POINT, ptr %11933, i32 0, i32 1, !dbg !349
  %11935 = load double, ptr %11934, align 8, !dbg !349
  %11936 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11937 = load double, ptr %11936, align 8, !dbg !350
  %11938 = fcmp oeq double %11935, %11937, !dbg !351
  br i1 %11938, label %5429, label %11939, !dbg !352

11939:                                            ; preds = %11930, %11923
  br label %11940, !dbg !356

11940:                                            ; preds = %11939
  %11941 = load i32, ptr %10, align 4, !dbg !357
  %11942 = add nsw i32 %11941, 1, !dbg !357
  store i32 %11942, ptr %10, align 4, !dbg !357
  %11943 = load i32, ptr %10, align 4, !dbg !334
  %11944 = load i32, ptr %8, align 4, !dbg !336
  %11945 = icmp slt i32 %11943, %11944, !dbg !337
  br i1 %11945, label %11946, label %14243, !dbg !338

11946:                                            ; preds = %11940
  %11947 = load i32, ptr %10, align 4, !dbg !339
  %11948 = sext i32 %11947 to i64, !dbg !342
  %11949 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11948, !dbg !342
  %11950 = load double, ptr %11949, align 16, !dbg !343
  %11951 = load double, ptr %6, align 8, !dbg !344
  %11952 = fcmp oeq double %11950, %11951, !dbg !345
  br i1 %11952, label %11953, label %11962, !dbg !346

11953:                                            ; preds = %11946
  %11954 = load i32, ptr %10, align 4, !dbg !347
  %11955 = sext i32 %11954 to i64, !dbg !348
  %11956 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11955, !dbg !348
  %11957 = getelementptr inbounds %struct.POINT, ptr %11956, i32 0, i32 1, !dbg !349
  %11958 = load double, ptr %11957, align 8, !dbg !349
  %11959 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11960 = load double, ptr %11959, align 8, !dbg !350
  %11961 = fcmp oeq double %11958, %11960, !dbg !351
  br i1 %11961, label %5429, label %11962, !dbg !352

11962:                                            ; preds = %11953, %11946
  br label %11963, !dbg !356

11963:                                            ; preds = %11962
  %11964 = load i32, ptr %10, align 4, !dbg !357
  %11965 = add nsw i32 %11964, 1, !dbg !357
  store i32 %11965, ptr %10, align 4, !dbg !357
  %11966 = load i32, ptr %10, align 4, !dbg !334
  %11967 = load i32, ptr %8, align 4, !dbg !336
  %11968 = icmp slt i32 %11966, %11967, !dbg !337
  br i1 %11968, label %11969, label %14243, !dbg !338

11969:                                            ; preds = %11963
  %11970 = load i32, ptr %10, align 4, !dbg !339
  %11971 = sext i32 %11970 to i64, !dbg !342
  %11972 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11971, !dbg !342
  %11973 = load double, ptr %11972, align 16, !dbg !343
  %11974 = load double, ptr %6, align 8, !dbg !344
  %11975 = fcmp oeq double %11973, %11974, !dbg !345
  br i1 %11975, label %11976, label %11985, !dbg !346

11976:                                            ; preds = %11969
  %11977 = load i32, ptr %10, align 4, !dbg !347
  %11978 = sext i32 %11977 to i64, !dbg !348
  %11979 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11978, !dbg !348
  %11980 = getelementptr inbounds %struct.POINT, ptr %11979, i32 0, i32 1, !dbg !349
  %11981 = load double, ptr %11980, align 8, !dbg !349
  %11982 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %11983 = load double, ptr %11982, align 8, !dbg !350
  %11984 = fcmp oeq double %11981, %11983, !dbg !351
  br i1 %11984, label %5429, label %11985, !dbg !352

11985:                                            ; preds = %11976, %11969
  br label %11986, !dbg !356

11986:                                            ; preds = %11985
  %11987 = load i32, ptr %10, align 4, !dbg !357
  %11988 = add nsw i32 %11987, 1, !dbg !357
  store i32 %11988, ptr %10, align 4, !dbg !357
  %11989 = load i32, ptr %10, align 4, !dbg !334
  %11990 = load i32, ptr %8, align 4, !dbg !336
  %11991 = icmp slt i32 %11989, %11990, !dbg !337
  br i1 %11991, label %11992, label %14243, !dbg !338

11992:                                            ; preds = %11986
  %11993 = load i32, ptr %10, align 4, !dbg !339
  %11994 = sext i32 %11993 to i64, !dbg !342
  %11995 = getelementptr inbounds %struct.POINT, ptr %26, i64 %11994, !dbg !342
  %11996 = load double, ptr %11995, align 16, !dbg !343
  %11997 = load double, ptr %6, align 8, !dbg !344
  %11998 = fcmp oeq double %11996, %11997, !dbg !345
  br i1 %11998, label %11999, label %12008, !dbg !346

11999:                                            ; preds = %11992
  %12000 = load i32, ptr %10, align 4, !dbg !347
  %12001 = sext i32 %12000 to i64, !dbg !348
  %12002 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12001, !dbg !348
  %12003 = getelementptr inbounds %struct.POINT, ptr %12002, i32 0, i32 1, !dbg !349
  %12004 = load double, ptr %12003, align 8, !dbg !349
  %12005 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12006 = load double, ptr %12005, align 8, !dbg !350
  %12007 = fcmp oeq double %12004, %12006, !dbg !351
  br i1 %12007, label %5429, label %12008, !dbg !352

12008:                                            ; preds = %11999, %11992
  br label %12009, !dbg !356

12009:                                            ; preds = %12008
  %12010 = load i32, ptr %10, align 4, !dbg !357
  %12011 = add nsw i32 %12010, 1, !dbg !357
  store i32 %12011, ptr %10, align 4, !dbg !357
  %12012 = load i32, ptr %10, align 4, !dbg !334
  %12013 = load i32, ptr %8, align 4, !dbg !336
  %12014 = icmp slt i32 %12012, %12013, !dbg !337
  br i1 %12014, label %12015, label %14243, !dbg !338

12015:                                            ; preds = %12009
  %12016 = load i32, ptr %10, align 4, !dbg !339
  %12017 = sext i32 %12016 to i64, !dbg !342
  %12018 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12017, !dbg !342
  %12019 = load double, ptr %12018, align 16, !dbg !343
  %12020 = load double, ptr %6, align 8, !dbg !344
  %12021 = fcmp oeq double %12019, %12020, !dbg !345
  br i1 %12021, label %12022, label %12031, !dbg !346

12022:                                            ; preds = %12015
  %12023 = load i32, ptr %10, align 4, !dbg !347
  %12024 = sext i32 %12023 to i64, !dbg !348
  %12025 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12024, !dbg !348
  %12026 = getelementptr inbounds %struct.POINT, ptr %12025, i32 0, i32 1, !dbg !349
  %12027 = load double, ptr %12026, align 8, !dbg !349
  %12028 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12029 = load double, ptr %12028, align 8, !dbg !350
  %12030 = fcmp oeq double %12027, %12029, !dbg !351
  br i1 %12030, label %5429, label %12031, !dbg !352

12031:                                            ; preds = %12022, %12015
  br label %12032, !dbg !356

12032:                                            ; preds = %12031
  %12033 = load i32, ptr %10, align 4, !dbg !357
  %12034 = add nsw i32 %12033, 1, !dbg !357
  store i32 %12034, ptr %10, align 4, !dbg !357
  %12035 = load i32, ptr %10, align 4, !dbg !334
  %12036 = load i32, ptr %8, align 4, !dbg !336
  %12037 = icmp slt i32 %12035, %12036, !dbg !337
  br i1 %12037, label %12038, label %14243, !dbg !338

12038:                                            ; preds = %12032
  %12039 = load i32, ptr %10, align 4, !dbg !339
  %12040 = sext i32 %12039 to i64, !dbg !342
  %12041 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12040, !dbg !342
  %12042 = load double, ptr %12041, align 16, !dbg !343
  %12043 = load double, ptr %6, align 8, !dbg !344
  %12044 = fcmp oeq double %12042, %12043, !dbg !345
  br i1 %12044, label %12045, label %12054, !dbg !346

12045:                                            ; preds = %12038
  %12046 = load i32, ptr %10, align 4, !dbg !347
  %12047 = sext i32 %12046 to i64, !dbg !348
  %12048 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12047, !dbg !348
  %12049 = getelementptr inbounds %struct.POINT, ptr %12048, i32 0, i32 1, !dbg !349
  %12050 = load double, ptr %12049, align 8, !dbg !349
  %12051 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12052 = load double, ptr %12051, align 8, !dbg !350
  %12053 = fcmp oeq double %12050, %12052, !dbg !351
  br i1 %12053, label %5429, label %12054, !dbg !352

12054:                                            ; preds = %12045, %12038
  br label %12055, !dbg !356

12055:                                            ; preds = %12054
  %12056 = load i32, ptr %10, align 4, !dbg !357
  %12057 = add nsw i32 %12056, 1, !dbg !357
  store i32 %12057, ptr %10, align 4, !dbg !357
  %12058 = load i32, ptr %10, align 4, !dbg !334
  %12059 = load i32, ptr %8, align 4, !dbg !336
  %12060 = icmp slt i32 %12058, %12059, !dbg !337
  br i1 %12060, label %12061, label %14243, !dbg !338

12061:                                            ; preds = %12055
  %12062 = load i32, ptr %10, align 4, !dbg !339
  %12063 = sext i32 %12062 to i64, !dbg !342
  %12064 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12063, !dbg !342
  %12065 = load double, ptr %12064, align 16, !dbg !343
  %12066 = load double, ptr %6, align 8, !dbg !344
  %12067 = fcmp oeq double %12065, %12066, !dbg !345
  br i1 %12067, label %12068, label %12077, !dbg !346

12068:                                            ; preds = %12061
  %12069 = load i32, ptr %10, align 4, !dbg !347
  %12070 = sext i32 %12069 to i64, !dbg !348
  %12071 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12070, !dbg !348
  %12072 = getelementptr inbounds %struct.POINT, ptr %12071, i32 0, i32 1, !dbg !349
  %12073 = load double, ptr %12072, align 8, !dbg !349
  %12074 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12075 = load double, ptr %12074, align 8, !dbg !350
  %12076 = fcmp oeq double %12073, %12075, !dbg !351
  br i1 %12076, label %5429, label %12077, !dbg !352

12077:                                            ; preds = %12068, %12061
  br label %12078, !dbg !356

12078:                                            ; preds = %12077
  %12079 = load i32, ptr %10, align 4, !dbg !357
  %12080 = add nsw i32 %12079, 1, !dbg !357
  store i32 %12080, ptr %10, align 4, !dbg !357
  %12081 = load i32, ptr %10, align 4, !dbg !334
  %12082 = load i32, ptr %8, align 4, !dbg !336
  %12083 = icmp slt i32 %12081, %12082, !dbg !337
  br i1 %12083, label %12084, label %14243, !dbg !338

12084:                                            ; preds = %12078
  %12085 = load i32, ptr %10, align 4, !dbg !339
  %12086 = sext i32 %12085 to i64, !dbg !342
  %12087 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12086, !dbg !342
  %12088 = load double, ptr %12087, align 16, !dbg !343
  %12089 = load double, ptr %6, align 8, !dbg !344
  %12090 = fcmp oeq double %12088, %12089, !dbg !345
  br i1 %12090, label %12091, label %12100, !dbg !346

12091:                                            ; preds = %12084
  %12092 = load i32, ptr %10, align 4, !dbg !347
  %12093 = sext i32 %12092 to i64, !dbg !348
  %12094 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12093, !dbg !348
  %12095 = getelementptr inbounds %struct.POINT, ptr %12094, i32 0, i32 1, !dbg !349
  %12096 = load double, ptr %12095, align 8, !dbg !349
  %12097 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12098 = load double, ptr %12097, align 8, !dbg !350
  %12099 = fcmp oeq double %12096, %12098, !dbg !351
  br i1 %12099, label %5429, label %12100, !dbg !352

12100:                                            ; preds = %12091, %12084
  br label %12101, !dbg !356

12101:                                            ; preds = %12100
  %12102 = load i32, ptr %10, align 4, !dbg !357
  %12103 = add nsw i32 %12102, 1, !dbg !357
  store i32 %12103, ptr %10, align 4, !dbg !357
  %12104 = load i32, ptr %10, align 4, !dbg !334
  %12105 = load i32, ptr %8, align 4, !dbg !336
  %12106 = icmp slt i32 %12104, %12105, !dbg !337
  br i1 %12106, label %12107, label %14243, !dbg !338

12107:                                            ; preds = %12101
  %12108 = load i32, ptr %10, align 4, !dbg !339
  %12109 = sext i32 %12108 to i64, !dbg !342
  %12110 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12109, !dbg !342
  %12111 = load double, ptr %12110, align 16, !dbg !343
  %12112 = load double, ptr %6, align 8, !dbg !344
  %12113 = fcmp oeq double %12111, %12112, !dbg !345
  br i1 %12113, label %12114, label %12123, !dbg !346

12114:                                            ; preds = %12107
  %12115 = load i32, ptr %10, align 4, !dbg !347
  %12116 = sext i32 %12115 to i64, !dbg !348
  %12117 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12116, !dbg !348
  %12118 = getelementptr inbounds %struct.POINT, ptr %12117, i32 0, i32 1, !dbg !349
  %12119 = load double, ptr %12118, align 8, !dbg !349
  %12120 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12121 = load double, ptr %12120, align 8, !dbg !350
  %12122 = fcmp oeq double %12119, %12121, !dbg !351
  br i1 %12122, label %5429, label %12123, !dbg !352

12123:                                            ; preds = %12114, %12107
  br label %12124, !dbg !356

12124:                                            ; preds = %12123
  %12125 = load i32, ptr %10, align 4, !dbg !357
  %12126 = add nsw i32 %12125, 1, !dbg !357
  store i32 %12126, ptr %10, align 4, !dbg !357
  %12127 = load i32, ptr %10, align 4, !dbg !334
  %12128 = load i32, ptr %8, align 4, !dbg !336
  %12129 = icmp slt i32 %12127, %12128, !dbg !337
  br i1 %12129, label %12130, label %14243, !dbg !338

12130:                                            ; preds = %12124
  %12131 = load i32, ptr %10, align 4, !dbg !339
  %12132 = sext i32 %12131 to i64, !dbg !342
  %12133 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12132, !dbg !342
  %12134 = load double, ptr %12133, align 16, !dbg !343
  %12135 = load double, ptr %6, align 8, !dbg !344
  %12136 = fcmp oeq double %12134, %12135, !dbg !345
  br i1 %12136, label %12137, label %12146, !dbg !346

12137:                                            ; preds = %12130
  %12138 = load i32, ptr %10, align 4, !dbg !347
  %12139 = sext i32 %12138 to i64, !dbg !348
  %12140 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12139, !dbg !348
  %12141 = getelementptr inbounds %struct.POINT, ptr %12140, i32 0, i32 1, !dbg !349
  %12142 = load double, ptr %12141, align 8, !dbg !349
  %12143 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12144 = load double, ptr %12143, align 8, !dbg !350
  %12145 = fcmp oeq double %12142, %12144, !dbg !351
  br i1 %12145, label %5429, label %12146, !dbg !352

12146:                                            ; preds = %12137, %12130
  br label %12147, !dbg !356

12147:                                            ; preds = %12146
  %12148 = load i32, ptr %10, align 4, !dbg !357
  %12149 = add nsw i32 %12148, 1, !dbg !357
  store i32 %12149, ptr %10, align 4, !dbg !357
  %12150 = load i32, ptr %10, align 4, !dbg !334
  %12151 = load i32, ptr %8, align 4, !dbg !336
  %12152 = icmp slt i32 %12150, %12151, !dbg !337
  br i1 %12152, label %12153, label %14243, !dbg !338

12153:                                            ; preds = %12147
  %12154 = load i32, ptr %10, align 4, !dbg !339
  %12155 = sext i32 %12154 to i64, !dbg !342
  %12156 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12155, !dbg !342
  %12157 = load double, ptr %12156, align 16, !dbg !343
  %12158 = load double, ptr %6, align 8, !dbg !344
  %12159 = fcmp oeq double %12157, %12158, !dbg !345
  br i1 %12159, label %12160, label %12169, !dbg !346

12160:                                            ; preds = %12153
  %12161 = load i32, ptr %10, align 4, !dbg !347
  %12162 = sext i32 %12161 to i64, !dbg !348
  %12163 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12162, !dbg !348
  %12164 = getelementptr inbounds %struct.POINT, ptr %12163, i32 0, i32 1, !dbg !349
  %12165 = load double, ptr %12164, align 8, !dbg !349
  %12166 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12167 = load double, ptr %12166, align 8, !dbg !350
  %12168 = fcmp oeq double %12165, %12167, !dbg !351
  br i1 %12168, label %5429, label %12169, !dbg !352

12169:                                            ; preds = %12160, %12153
  br label %12170, !dbg !356

12170:                                            ; preds = %12169
  %12171 = load i32, ptr %10, align 4, !dbg !357
  %12172 = add nsw i32 %12171, 1, !dbg !357
  store i32 %12172, ptr %10, align 4, !dbg !357
  %12173 = load i32, ptr %10, align 4, !dbg !334
  %12174 = load i32, ptr %8, align 4, !dbg !336
  %12175 = icmp slt i32 %12173, %12174, !dbg !337
  br i1 %12175, label %12176, label %14243, !dbg !338

12176:                                            ; preds = %12170
  %12177 = load i32, ptr %10, align 4, !dbg !339
  %12178 = sext i32 %12177 to i64, !dbg !342
  %12179 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12178, !dbg !342
  %12180 = load double, ptr %12179, align 16, !dbg !343
  %12181 = load double, ptr %6, align 8, !dbg !344
  %12182 = fcmp oeq double %12180, %12181, !dbg !345
  br i1 %12182, label %12183, label %12192, !dbg !346

12183:                                            ; preds = %12176
  %12184 = load i32, ptr %10, align 4, !dbg !347
  %12185 = sext i32 %12184 to i64, !dbg !348
  %12186 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12185, !dbg !348
  %12187 = getelementptr inbounds %struct.POINT, ptr %12186, i32 0, i32 1, !dbg !349
  %12188 = load double, ptr %12187, align 8, !dbg !349
  %12189 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12190 = load double, ptr %12189, align 8, !dbg !350
  %12191 = fcmp oeq double %12188, %12190, !dbg !351
  br i1 %12191, label %5429, label %12192, !dbg !352

12192:                                            ; preds = %12183, %12176
  br label %12193, !dbg !356

12193:                                            ; preds = %12192
  %12194 = load i32, ptr %10, align 4, !dbg !357
  %12195 = add nsw i32 %12194, 1, !dbg !357
  store i32 %12195, ptr %10, align 4, !dbg !357
  %12196 = load i32, ptr %10, align 4, !dbg !334
  %12197 = load i32, ptr %8, align 4, !dbg !336
  %12198 = icmp slt i32 %12196, %12197, !dbg !337
  br i1 %12198, label %12199, label %14243, !dbg !338

12199:                                            ; preds = %12193
  %12200 = load i32, ptr %10, align 4, !dbg !339
  %12201 = sext i32 %12200 to i64, !dbg !342
  %12202 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12201, !dbg !342
  %12203 = load double, ptr %12202, align 16, !dbg !343
  %12204 = load double, ptr %6, align 8, !dbg !344
  %12205 = fcmp oeq double %12203, %12204, !dbg !345
  br i1 %12205, label %12206, label %12215, !dbg !346

12206:                                            ; preds = %12199
  %12207 = load i32, ptr %10, align 4, !dbg !347
  %12208 = sext i32 %12207 to i64, !dbg !348
  %12209 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12208, !dbg !348
  %12210 = getelementptr inbounds %struct.POINT, ptr %12209, i32 0, i32 1, !dbg !349
  %12211 = load double, ptr %12210, align 8, !dbg !349
  %12212 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12213 = load double, ptr %12212, align 8, !dbg !350
  %12214 = fcmp oeq double %12211, %12213, !dbg !351
  br i1 %12214, label %5429, label %12215, !dbg !352

12215:                                            ; preds = %12206, %12199
  br label %12216, !dbg !356

12216:                                            ; preds = %12215
  %12217 = load i32, ptr %10, align 4, !dbg !357
  %12218 = add nsw i32 %12217, 1, !dbg !357
  store i32 %12218, ptr %10, align 4, !dbg !357
  %12219 = load i32, ptr %10, align 4, !dbg !334
  %12220 = load i32, ptr %8, align 4, !dbg !336
  %12221 = icmp slt i32 %12219, %12220, !dbg !337
  br i1 %12221, label %12222, label %14243, !dbg !338

12222:                                            ; preds = %12216
  %12223 = load i32, ptr %10, align 4, !dbg !339
  %12224 = sext i32 %12223 to i64, !dbg !342
  %12225 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12224, !dbg !342
  %12226 = load double, ptr %12225, align 16, !dbg !343
  %12227 = load double, ptr %6, align 8, !dbg !344
  %12228 = fcmp oeq double %12226, %12227, !dbg !345
  br i1 %12228, label %12229, label %12238, !dbg !346

12229:                                            ; preds = %12222
  %12230 = load i32, ptr %10, align 4, !dbg !347
  %12231 = sext i32 %12230 to i64, !dbg !348
  %12232 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12231, !dbg !348
  %12233 = getelementptr inbounds %struct.POINT, ptr %12232, i32 0, i32 1, !dbg !349
  %12234 = load double, ptr %12233, align 8, !dbg !349
  %12235 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12236 = load double, ptr %12235, align 8, !dbg !350
  %12237 = fcmp oeq double %12234, %12236, !dbg !351
  br i1 %12237, label %5429, label %12238, !dbg !352

12238:                                            ; preds = %12229, %12222
  br label %12239, !dbg !356

12239:                                            ; preds = %12238
  %12240 = load i32, ptr %10, align 4, !dbg !357
  %12241 = add nsw i32 %12240, 1, !dbg !357
  store i32 %12241, ptr %10, align 4, !dbg !357
  %12242 = load i32, ptr %10, align 4, !dbg !334
  %12243 = load i32, ptr %8, align 4, !dbg !336
  %12244 = icmp slt i32 %12242, %12243, !dbg !337
  br i1 %12244, label %12245, label %14243, !dbg !338

12245:                                            ; preds = %12239
  %12246 = load i32, ptr %10, align 4, !dbg !339
  %12247 = sext i32 %12246 to i64, !dbg !342
  %12248 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12247, !dbg !342
  %12249 = load double, ptr %12248, align 16, !dbg !343
  %12250 = load double, ptr %6, align 8, !dbg !344
  %12251 = fcmp oeq double %12249, %12250, !dbg !345
  br i1 %12251, label %12252, label %12261, !dbg !346

12252:                                            ; preds = %12245
  %12253 = load i32, ptr %10, align 4, !dbg !347
  %12254 = sext i32 %12253 to i64, !dbg !348
  %12255 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12254, !dbg !348
  %12256 = getelementptr inbounds %struct.POINT, ptr %12255, i32 0, i32 1, !dbg !349
  %12257 = load double, ptr %12256, align 8, !dbg !349
  %12258 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12259 = load double, ptr %12258, align 8, !dbg !350
  %12260 = fcmp oeq double %12257, %12259, !dbg !351
  br i1 %12260, label %5429, label %12261, !dbg !352

12261:                                            ; preds = %12252, %12245
  br label %12262, !dbg !356

12262:                                            ; preds = %12261
  %12263 = load i32, ptr %10, align 4, !dbg !357
  %12264 = add nsw i32 %12263, 1, !dbg !357
  store i32 %12264, ptr %10, align 4, !dbg !357
  %12265 = load i32, ptr %10, align 4, !dbg !334
  %12266 = load i32, ptr %8, align 4, !dbg !336
  %12267 = icmp slt i32 %12265, %12266, !dbg !337
  br i1 %12267, label %12268, label %14243, !dbg !338

12268:                                            ; preds = %12262
  %12269 = load i32, ptr %10, align 4, !dbg !339
  %12270 = sext i32 %12269 to i64, !dbg !342
  %12271 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12270, !dbg !342
  %12272 = load double, ptr %12271, align 16, !dbg !343
  %12273 = load double, ptr %6, align 8, !dbg !344
  %12274 = fcmp oeq double %12272, %12273, !dbg !345
  br i1 %12274, label %12275, label %12284, !dbg !346

12275:                                            ; preds = %12268
  %12276 = load i32, ptr %10, align 4, !dbg !347
  %12277 = sext i32 %12276 to i64, !dbg !348
  %12278 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12277, !dbg !348
  %12279 = getelementptr inbounds %struct.POINT, ptr %12278, i32 0, i32 1, !dbg !349
  %12280 = load double, ptr %12279, align 8, !dbg !349
  %12281 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12282 = load double, ptr %12281, align 8, !dbg !350
  %12283 = fcmp oeq double %12280, %12282, !dbg !351
  br i1 %12283, label %5429, label %12284, !dbg !352

12284:                                            ; preds = %12275, %12268
  br label %12285, !dbg !356

12285:                                            ; preds = %12284
  %12286 = load i32, ptr %10, align 4, !dbg !357
  %12287 = add nsw i32 %12286, 1, !dbg !357
  store i32 %12287, ptr %10, align 4, !dbg !357
  %12288 = load i32, ptr %10, align 4, !dbg !334
  %12289 = load i32, ptr %8, align 4, !dbg !336
  %12290 = icmp slt i32 %12288, %12289, !dbg !337
  br i1 %12290, label %12291, label %14243, !dbg !338

12291:                                            ; preds = %12285
  %12292 = load i32, ptr %10, align 4, !dbg !339
  %12293 = sext i32 %12292 to i64, !dbg !342
  %12294 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12293, !dbg !342
  %12295 = load double, ptr %12294, align 16, !dbg !343
  %12296 = load double, ptr %6, align 8, !dbg !344
  %12297 = fcmp oeq double %12295, %12296, !dbg !345
  br i1 %12297, label %12298, label %12307, !dbg !346

12298:                                            ; preds = %12291
  %12299 = load i32, ptr %10, align 4, !dbg !347
  %12300 = sext i32 %12299 to i64, !dbg !348
  %12301 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12300, !dbg !348
  %12302 = getelementptr inbounds %struct.POINT, ptr %12301, i32 0, i32 1, !dbg !349
  %12303 = load double, ptr %12302, align 8, !dbg !349
  %12304 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12305 = load double, ptr %12304, align 8, !dbg !350
  %12306 = fcmp oeq double %12303, %12305, !dbg !351
  br i1 %12306, label %5429, label %12307, !dbg !352

12307:                                            ; preds = %12298, %12291
  br label %12308, !dbg !356

12308:                                            ; preds = %12307
  %12309 = load i32, ptr %10, align 4, !dbg !357
  %12310 = add nsw i32 %12309, 1, !dbg !357
  store i32 %12310, ptr %10, align 4, !dbg !357
  %12311 = load i32, ptr %10, align 4, !dbg !334
  %12312 = load i32, ptr %8, align 4, !dbg !336
  %12313 = icmp slt i32 %12311, %12312, !dbg !337
  br i1 %12313, label %12314, label %14243, !dbg !338

12314:                                            ; preds = %12308
  %12315 = load i32, ptr %10, align 4, !dbg !339
  %12316 = sext i32 %12315 to i64, !dbg !342
  %12317 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12316, !dbg !342
  %12318 = load double, ptr %12317, align 16, !dbg !343
  %12319 = load double, ptr %6, align 8, !dbg !344
  %12320 = fcmp oeq double %12318, %12319, !dbg !345
  br i1 %12320, label %12321, label %12330, !dbg !346

12321:                                            ; preds = %12314
  %12322 = load i32, ptr %10, align 4, !dbg !347
  %12323 = sext i32 %12322 to i64, !dbg !348
  %12324 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12323, !dbg !348
  %12325 = getelementptr inbounds %struct.POINT, ptr %12324, i32 0, i32 1, !dbg !349
  %12326 = load double, ptr %12325, align 8, !dbg !349
  %12327 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12328 = load double, ptr %12327, align 8, !dbg !350
  %12329 = fcmp oeq double %12326, %12328, !dbg !351
  br i1 %12329, label %5429, label %12330, !dbg !352

12330:                                            ; preds = %12321, %12314
  br label %12331, !dbg !356

12331:                                            ; preds = %12330
  %12332 = load i32, ptr %10, align 4, !dbg !357
  %12333 = add nsw i32 %12332, 1, !dbg !357
  store i32 %12333, ptr %10, align 4, !dbg !357
  %12334 = load i32, ptr %10, align 4, !dbg !334
  %12335 = load i32, ptr %8, align 4, !dbg !336
  %12336 = icmp slt i32 %12334, %12335, !dbg !337
  br i1 %12336, label %12337, label %14243, !dbg !338

12337:                                            ; preds = %12331
  %12338 = load i32, ptr %10, align 4, !dbg !339
  %12339 = sext i32 %12338 to i64, !dbg !342
  %12340 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12339, !dbg !342
  %12341 = load double, ptr %12340, align 16, !dbg !343
  %12342 = load double, ptr %6, align 8, !dbg !344
  %12343 = fcmp oeq double %12341, %12342, !dbg !345
  br i1 %12343, label %12344, label %12353, !dbg !346

12344:                                            ; preds = %12337
  %12345 = load i32, ptr %10, align 4, !dbg !347
  %12346 = sext i32 %12345 to i64, !dbg !348
  %12347 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12346, !dbg !348
  %12348 = getelementptr inbounds %struct.POINT, ptr %12347, i32 0, i32 1, !dbg !349
  %12349 = load double, ptr %12348, align 8, !dbg !349
  %12350 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12351 = load double, ptr %12350, align 8, !dbg !350
  %12352 = fcmp oeq double %12349, %12351, !dbg !351
  br i1 %12352, label %5429, label %12353, !dbg !352

12353:                                            ; preds = %12344, %12337
  br label %12354, !dbg !356

12354:                                            ; preds = %12353
  %12355 = load i32, ptr %10, align 4, !dbg !357
  %12356 = add nsw i32 %12355, 1, !dbg !357
  store i32 %12356, ptr %10, align 4, !dbg !357
  %12357 = load i32, ptr %10, align 4, !dbg !334
  %12358 = load i32, ptr %8, align 4, !dbg !336
  %12359 = icmp slt i32 %12357, %12358, !dbg !337
  br i1 %12359, label %12360, label %14243, !dbg !338

12360:                                            ; preds = %12354
  %12361 = load i32, ptr %10, align 4, !dbg !339
  %12362 = sext i32 %12361 to i64, !dbg !342
  %12363 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12362, !dbg !342
  %12364 = load double, ptr %12363, align 16, !dbg !343
  %12365 = load double, ptr %6, align 8, !dbg !344
  %12366 = fcmp oeq double %12364, %12365, !dbg !345
  br i1 %12366, label %12367, label %12376, !dbg !346

12367:                                            ; preds = %12360
  %12368 = load i32, ptr %10, align 4, !dbg !347
  %12369 = sext i32 %12368 to i64, !dbg !348
  %12370 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12369, !dbg !348
  %12371 = getelementptr inbounds %struct.POINT, ptr %12370, i32 0, i32 1, !dbg !349
  %12372 = load double, ptr %12371, align 8, !dbg !349
  %12373 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12374 = load double, ptr %12373, align 8, !dbg !350
  %12375 = fcmp oeq double %12372, %12374, !dbg !351
  br i1 %12375, label %5429, label %12376, !dbg !352

12376:                                            ; preds = %12367, %12360
  br label %12377, !dbg !356

12377:                                            ; preds = %12376
  %12378 = load i32, ptr %10, align 4, !dbg !357
  %12379 = add nsw i32 %12378, 1, !dbg !357
  store i32 %12379, ptr %10, align 4, !dbg !357
  %12380 = load i32, ptr %10, align 4, !dbg !334
  %12381 = load i32, ptr %8, align 4, !dbg !336
  %12382 = icmp slt i32 %12380, %12381, !dbg !337
  br i1 %12382, label %12383, label %14243, !dbg !338

12383:                                            ; preds = %12377
  %12384 = load i32, ptr %10, align 4, !dbg !339
  %12385 = sext i32 %12384 to i64, !dbg !342
  %12386 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12385, !dbg !342
  %12387 = load double, ptr %12386, align 16, !dbg !343
  %12388 = load double, ptr %6, align 8, !dbg !344
  %12389 = fcmp oeq double %12387, %12388, !dbg !345
  br i1 %12389, label %12390, label %12399, !dbg !346

12390:                                            ; preds = %12383
  %12391 = load i32, ptr %10, align 4, !dbg !347
  %12392 = sext i32 %12391 to i64, !dbg !348
  %12393 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12392, !dbg !348
  %12394 = getelementptr inbounds %struct.POINT, ptr %12393, i32 0, i32 1, !dbg !349
  %12395 = load double, ptr %12394, align 8, !dbg !349
  %12396 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12397 = load double, ptr %12396, align 8, !dbg !350
  %12398 = fcmp oeq double %12395, %12397, !dbg !351
  br i1 %12398, label %5429, label %12399, !dbg !352

12399:                                            ; preds = %12390, %12383
  br label %12400, !dbg !356

12400:                                            ; preds = %12399
  %12401 = load i32, ptr %10, align 4, !dbg !357
  %12402 = add nsw i32 %12401, 1, !dbg !357
  store i32 %12402, ptr %10, align 4, !dbg !357
  %12403 = load i32, ptr %10, align 4, !dbg !334
  %12404 = load i32, ptr %8, align 4, !dbg !336
  %12405 = icmp slt i32 %12403, %12404, !dbg !337
  br i1 %12405, label %12406, label %14243, !dbg !338

12406:                                            ; preds = %12400
  %12407 = load i32, ptr %10, align 4, !dbg !339
  %12408 = sext i32 %12407 to i64, !dbg !342
  %12409 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12408, !dbg !342
  %12410 = load double, ptr %12409, align 16, !dbg !343
  %12411 = load double, ptr %6, align 8, !dbg !344
  %12412 = fcmp oeq double %12410, %12411, !dbg !345
  br i1 %12412, label %12413, label %12422, !dbg !346

12413:                                            ; preds = %12406
  %12414 = load i32, ptr %10, align 4, !dbg !347
  %12415 = sext i32 %12414 to i64, !dbg !348
  %12416 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12415, !dbg !348
  %12417 = getelementptr inbounds %struct.POINT, ptr %12416, i32 0, i32 1, !dbg !349
  %12418 = load double, ptr %12417, align 8, !dbg !349
  %12419 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12420 = load double, ptr %12419, align 8, !dbg !350
  %12421 = fcmp oeq double %12418, %12420, !dbg !351
  br i1 %12421, label %5429, label %12422, !dbg !352

12422:                                            ; preds = %12413, %12406
  br label %12423, !dbg !356

12423:                                            ; preds = %12422
  %12424 = load i32, ptr %10, align 4, !dbg !357
  %12425 = add nsw i32 %12424, 1, !dbg !357
  store i32 %12425, ptr %10, align 4, !dbg !357
  %12426 = load i32, ptr %10, align 4, !dbg !334
  %12427 = load i32, ptr %8, align 4, !dbg !336
  %12428 = icmp slt i32 %12426, %12427, !dbg !337
  br i1 %12428, label %12429, label %14243, !dbg !338

12429:                                            ; preds = %12423
  %12430 = load i32, ptr %10, align 4, !dbg !339
  %12431 = sext i32 %12430 to i64, !dbg !342
  %12432 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12431, !dbg !342
  %12433 = load double, ptr %12432, align 16, !dbg !343
  %12434 = load double, ptr %6, align 8, !dbg !344
  %12435 = fcmp oeq double %12433, %12434, !dbg !345
  br i1 %12435, label %12436, label %12445, !dbg !346

12436:                                            ; preds = %12429
  %12437 = load i32, ptr %10, align 4, !dbg !347
  %12438 = sext i32 %12437 to i64, !dbg !348
  %12439 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12438, !dbg !348
  %12440 = getelementptr inbounds %struct.POINT, ptr %12439, i32 0, i32 1, !dbg !349
  %12441 = load double, ptr %12440, align 8, !dbg !349
  %12442 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12443 = load double, ptr %12442, align 8, !dbg !350
  %12444 = fcmp oeq double %12441, %12443, !dbg !351
  br i1 %12444, label %5429, label %12445, !dbg !352

12445:                                            ; preds = %12436, %12429
  br label %12446, !dbg !356

12446:                                            ; preds = %12445
  %12447 = load i32, ptr %10, align 4, !dbg !357
  %12448 = add nsw i32 %12447, 1, !dbg !357
  store i32 %12448, ptr %10, align 4, !dbg !357
  %12449 = load i32, ptr %10, align 4, !dbg !334
  %12450 = load i32, ptr %8, align 4, !dbg !336
  %12451 = icmp slt i32 %12449, %12450, !dbg !337
  br i1 %12451, label %12452, label %14243, !dbg !338

12452:                                            ; preds = %12446
  %12453 = load i32, ptr %10, align 4, !dbg !339
  %12454 = sext i32 %12453 to i64, !dbg !342
  %12455 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12454, !dbg !342
  %12456 = load double, ptr %12455, align 16, !dbg !343
  %12457 = load double, ptr %6, align 8, !dbg !344
  %12458 = fcmp oeq double %12456, %12457, !dbg !345
  br i1 %12458, label %12459, label %12468, !dbg !346

12459:                                            ; preds = %12452
  %12460 = load i32, ptr %10, align 4, !dbg !347
  %12461 = sext i32 %12460 to i64, !dbg !348
  %12462 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12461, !dbg !348
  %12463 = getelementptr inbounds %struct.POINT, ptr %12462, i32 0, i32 1, !dbg !349
  %12464 = load double, ptr %12463, align 8, !dbg !349
  %12465 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12466 = load double, ptr %12465, align 8, !dbg !350
  %12467 = fcmp oeq double %12464, %12466, !dbg !351
  br i1 %12467, label %5429, label %12468, !dbg !352

12468:                                            ; preds = %12459, %12452
  br label %12469, !dbg !356

12469:                                            ; preds = %12468
  %12470 = load i32, ptr %10, align 4, !dbg !357
  %12471 = add nsw i32 %12470, 1, !dbg !357
  store i32 %12471, ptr %10, align 4, !dbg !357
  %12472 = load i32, ptr %10, align 4, !dbg !334
  %12473 = load i32, ptr %8, align 4, !dbg !336
  %12474 = icmp slt i32 %12472, %12473, !dbg !337
  br i1 %12474, label %12475, label %14243, !dbg !338

12475:                                            ; preds = %12469
  %12476 = load i32, ptr %10, align 4, !dbg !339
  %12477 = sext i32 %12476 to i64, !dbg !342
  %12478 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12477, !dbg !342
  %12479 = load double, ptr %12478, align 16, !dbg !343
  %12480 = load double, ptr %6, align 8, !dbg !344
  %12481 = fcmp oeq double %12479, %12480, !dbg !345
  br i1 %12481, label %12482, label %12491, !dbg !346

12482:                                            ; preds = %12475
  %12483 = load i32, ptr %10, align 4, !dbg !347
  %12484 = sext i32 %12483 to i64, !dbg !348
  %12485 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12484, !dbg !348
  %12486 = getelementptr inbounds %struct.POINT, ptr %12485, i32 0, i32 1, !dbg !349
  %12487 = load double, ptr %12486, align 8, !dbg !349
  %12488 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12489 = load double, ptr %12488, align 8, !dbg !350
  %12490 = fcmp oeq double %12487, %12489, !dbg !351
  br i1 %12490, label %5429, label %12491, !dbg !352

12491:                                            ; preds = %12482, %12475
  br label %12492, !dbg !356

12492:                                            ; preds = %12491
  %12493 = load i32, ptr %10, align 4, !dbg !357
  %12494 = add nsw i32 %12493, 1, !dbg !357
  store i32 %12494, ptr %10, align 4, !dbg !357
  %12495 = load i32, ptr %10, align 4, !dbg !334
  %12496 = load i32, ptr %8, align 4, !dbg !336
  %12497 = icmp slt i32 %12495, %12496, !dbg !337
  br i1 %12497, label %12498, label %14243, !dbg !338

12498:                                            ; preds = %12492
  %12499 = load i32, ptr %10, align 4, !dbg !339
  %12500 = sext i32 %12499 to i64, !dbg !342
  %12501 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12500, !dbg !342
  %12502 = load double, ptr %12501, align 16, !dbg !343
  %12503 = load double, ptr %6, align 8, !dbg !344
  %12504 = fcmp oeq double %12502, %12503, !dbg !345
  br i1 %12504, label %12505, label %12514, !dbg !346

12505:                                            ; preds = %12498
  %12506 = load i32, ptr %10, align 4, !dbg !347
  %12507 = sext i32 %12506 to i64, !dbg !348
  %12508 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12507, !dbg !348
  %12509 = getelementptr inbounds %struct.POINT, ptr %12508, i32 0, i32 1, !dbg !349
  %12510 = load double, ptr %12509, align 8, !dbg !349
  %12511 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12512 = load double, ptr %12511, align 8, !dbg !350
  %12513 = fcmp oeq double %12510, %12512, !dbg !351
  br i1 %12513, label %5429, label %12514, !dbg !352

12514:                                            ; preds = %12505, %12498
  br label %12515, !dbg !356

12515:                                            ; preds = %12514
  %12516 = load i32, ptr %10, align 4, !dbg !357
  %12517 = add nsw i32 %12516, 1, !dbg !357
  store i32 %12517, ptr %10, align 4, !dbg !357
  %12518 = load i32, ptr %10, align 4, !dbg !334
  %12519 = load i32, ptr %8, align 4, !dbg !336
  %12520 = icmp slt i32 %12518, %12519, !dbg !337
  br i1 %12520, label %12521, label %14243, !dbg !338

12521:                                            ; preds = %12515
  %12522 = load i32, ptr %10, align 4, !dbg !339
  %12523 = sext i32 %12522 to i64, !dbg !342
  %12524 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12523, !dbg !342
  %12525 = load double, ptr %12524, align 16, !dbg !343
  %12526 = load double, ptr %6, align 8, !dbg !344
  %12527 = fcmp oeq double %12525, %12526, !dbg !345
  br i1 %12527, label %12528, label %12537, !dbg !346

12528:                                            ; preds = %12521
  %12529 = load i32, ptr %10, align 4, !dbg !347
  %12530 = sext i32 %12529 to i64, !dbg !348
  %12531 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12530, !dbg !348
  %12532 = getelementptr inbounds %struct.POINT, ptr %12531, i32 0, i32 1, !dbg !349
  %12533 = load double, ptr %12532, align 8, !dbg !349
  %12534 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12535 = load double, ptr %12534, align 8, !dbg !350
  %12536 = fcmp oeq double %12533, %12535, !dbg !351
  br i1 %12536, label %5429, label %12537, !dbg !352

12537:                                            ; preds = %12528, %12521
  br label %12538, !dbg !356

12538:                                            ; preds = %12537
  %12539 = load i32, ptr %10, align 4, !dbg !357
  %12540 = add nsw i32 %12539, 1, !dbg !357
  store i32 %12540, ptr %10, align 4, !dbg !357
  %12541 = load i32, ptr %10, align 4, !dbg !334
  %12542 = load i32, ptr %8, align 4, !dbg !336
  %12543 = icmp slt i32 %12541, %12542, !dbg !337
  br i1 %12543, label %12544, label %14243, !dbg !338

12544:                                            ; preds = %12538
  %12545 = load i32, ptr %10, align 4, !dbg !339
  %12546 = sext i32 %12545 to i64, !dbg !342
  %12547 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12546, !dbg !342
  %12548 = load double, ptr %12547, align 16, !dbg !343
  %12549 = load double, ptr %6, align 8, !dbg !344
  %12550 = fcmp oeq double %12548, %12549, !dbg !345
  br i1 %12550, label %12551, label %12560, !dbg !346

12551:                                            ; preds = %12544
  %12552 = load i32, ptr %10, align 4, !dbg !347
  %12553 = sext i32 %12552 to i64, !dbg !348
  %12554 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12553, !dbg !348
  %12555 = getelementptr inbounds %struct.POINT, ptr %12554, i32 0, i32 1, !dbg !349
  %12556 = load double, ptr %12555, align 8, !dbg !349
  %12557 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12558 = load double, ptr %12557, align 8, !dbg !350
  %12559 = fcmp oeq double %12556, %12558, !dbg !351
  br i1 %12559, label %5429, label %12560, !dbg !352

12560:                                            ; preds = %12551, %12544
  br label %12561, !dbg !356

12561:                                            ; preds = %12560
  %12562 = load i32, ptr %10, align 4, !dbg !357
  %12563 = add nsw i32 %12562, 1, !dbg !357
  store i32 %12563, ptr %10, align 4, !dbg !357
  %12564 = load i32, ptr %10, align 4, !dbg !334
  %12565 = load i32, ptr %8, align 4, !dbg !336
  %12566 = icmp slt i32 %12564, %12565, !dbg !337
  br i1 %12566, label %12567, label %14243, !dbg !338

12567:                                            ; preds = %12561
  %12568 = load i32, ptr %10, align 4, !dbg !339
  %12569 = sext i32 %12568 to i64, !dbg !342
  %12570 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12569, !dbg !342
  %12571 = load double, ptr %12570, align 16, !dbg !343
  %12572 = load double, ptr %6, align 8, !dbg !344
  %12573 = fcmp oeq double %12571, %12572, !dbg !345
  br i1 %12573, label %12574, label %12583, !dbg !346

12574:                                            ; preds = %12567
  %12575 = load i32, ptr %10, align 4, !dbg !347
  %12576 = sext i32 %12575 to i64, !dbg !348
  %12577 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12576, !dbg !348
  %12578 = getelementptr inbounds %struct.POINT, ptr %12577, i32 0, i32 1, !dbg !349
  %12579 = load double, ptr %12578, align 8, !dbg !349
  %12580 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12581 = load double, ptr %12580, align 8, !dbg !350
  %12582 = fcmp oeq double %12579, %12581, !dbg !351
  br i1 %12582, label %5429, label %12583, !dbg !352

12583:                                            ; preds = %12574, %12567
  br label %12584, !dbg !356

12584:                                            ; preds = %12583
  %12585 = load i32, ptr %10, align 4, !dbg !357
  %12586 = add nsw i32 %12585, 1, !dbg !357
  store i32 %12586, ptr %10, align 4, !dbg !357
  %12587 = load i32, ptr %10, align 4, !dbg !334
  %12588 = load i32, ptr %8, align 4, !dbg !336
  %12589 = icmp slt i32 %12587, %12588, !dbg !337
  br i1 %12589, label %12590, label %14243, !dbg !338

12590:                                            ; preds = %12584
  %12591 = load i32, ptr %10, align 4, !dbg !339
  %12592 = sext i32 %12591 to i64, !dbg !342
  %12593 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12592, !dbg !342
  %12594 = load double, ptr %12593, align 16, !dbg !343
  %12595 = load double, ptr %6, align 8, !dbg !344
  %12596 = fcmp oeq double %12594, %12595, !dbg !345
  br i1 %12596, label %12597, label %12606, !dbg !346

12597:                                            ; preds = %12590
  %12598 = load i32, ptr %10, align 4, !dbg !347
  %12599 = sext i32 %12598 to i64, !dbg !348
  %12600 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12599, !dbg !348
  %12601 = getelementptr inbounds %struct.POINT, ptr %12600, i32 0, i32 1, !dbg !349
  %12602 = load double, ptr %12601, align 8, !dbg !349
  %12603 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12604 = load double, ptr %12603, align 8, !dbg !350
  %12605 = fcmp oeq double %12602, %12604, !dbg !351
  br i1 %12605, label %5429, label %12606, !dbg !352

12606:                                            ; preds = %12597, %12590
  br label %12607, !dbg !356

12607:                                            ; preds = %12606
  %12608 = load i32, ptr %10, align 4, !dbg !357
  %12609 = add nsw i32 %12608, 1, !dbg !357
  store i32 %12609, ptr %10, align 4, !dbg !357
  %12610 = load i32, ptr %10, align 4, !dbg !334
  %12611 = load i32, ptr %8, align 4, !dbg !336
  %12612 = icmp slt i32 %12610, %12611, !dbg !337
  br i1 %12612, label %12613, label %14243, !dbg !338

12613:                                            ; preds = %12607
  %12614 = load i32, ptr %10, align 4, !dbg !339
  %12615 = sext i32 %12614 to i64, !dbg !342
  %12616 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12615, !dbg !342
  %12617 = load double, ptr %12616, align 16, !dbg !343
  %12618 = load double, ptr %6, align 8, !dbg !344
  %12619 = fcmp oeq double %12617, %12618, !dbg !345
  br i1 %12619, label %12620, label %12629, !dbg !346

12620:                                            ; preds = %12613
  %12621 = load i32, ptr %10, align 4, !dbg !347
  %12622 = sext i32 %12621 to i64, !dbg !348
  %12623 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12622, !dbg !348
  %12624 = getelementptr inbounds %struct.POINT, ptr %12623, i32 0, i32 1, !dbg !349
  %12625 = load double, ptr %12624, align 8, !dbg !349
  %12626 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12627 = load double, ptr %12626, align 8, !dbg !350
  %12628 = fcmp oeq double %12625, %12627, !dbg !351
  br i1 %12628, label %5429, label %12629, !dbg !352

12629:                                            ; preds = %12620, %12613
  br label %12630, !dbg !356

12630:                                            ; preds = %12629
  %12631 = load i32, ptr %10, align 4, !dbg !357
  %12632 = add nsw i32 %12631, 1, !dbg !357
  store i32 %12632, ptr %10, align 4, !dbg !357
  %12633 = load i32, ptr %10, align 4, !dbg !334
  %12634 = load i32, ptr %8, align 4, !dbg !336
  %12635 = icmp slt i32 %12633, %12634, !dbg !337
  br i1 %12635, label %12636, label %14243, !dbg !338

12636:                                            ; preds = %12630
  %12637 = load i32, ptr %10, align 4, !dbg !339
  %12638 = sext i32 %12637 to i64, !dbg !342
  %12639 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12638, !dbg !342
  %12640 = load double, ptr %12639, align 16, !dbg !343
  %12641 = load double, ptr %6, align 8, !dbg !344
  %12642 = fcmp oeq double %12640, %12641, !dbg !345
  br i1 %12642, label %12643, label %12652, !dbg !346

12643:                                            ; preds = %12636
  %12644 = load i32, ptr %10, align 4, !dbg !347
  %12645 = sext i32 %12644 to i64, !dbg !348
  %12646 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12645, !dbg !348
  %12647 = getelementptr inbounds %struct.POINT, ptr %12646, i32 0, i32 1, !dbg !349
  %12648 = load double, ptr %12647, align 8, !dbg !349
  %12649 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12650 = load double, ptr %12649, align 8, !dbg !350
  %12651 = fcmp oeq double %12648, %12650, !dbg !351
  br i1 %12651, label %5429, label %12652, !dbg !352

12652:                                            ; preds = %12643, %12636
  br label %12653, !dbg !356

12653:                                            ; preds = %12652
  %12654 = load i32, ptr %10, align 4, !dbg !357
  %12655 = add nsw i32 %12654, 1, !dbg !357
  store i32 %12655, ptr %10, align 4, !dbg !357
  %12656 = load i32, ptr %10, align 4, !dbg !334
  %12657 = load i32, ptr %8, align 4, !dbg !336
  %12658 = icmp slt i32 %12656, %12657, !dbg !337
  br i1 %12658, label %12659, label %14243, !dbg !338

12659:                                            ; preds = %12653
  %12660 = load i32, ptr %10, align 4, !dbg !339
  %12661 = sext i32 %12660 to i64, !dbg !342
  %12662 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12661, !dbg !342
  %12663 = load double, ptr %12662, align 16, !dbg !343
  %12664 = load double, ptr %6, align 8, !dbg !344
  %12665 = fcmp oeq double %12663, %12664, !dbg !345
  br i1 %12665, label %12666, label %12675, !dbg !346

12666:                                            ; preds = %12659
  %12667 = load i32, ptr %10, align 4, !dbg !347
  %12668 = sext i32 %12667 to i64, !dbg !348
  %12669 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12668, !dbg !348
  %12670 = getelementptr inbounds %struct.POINT, ptr %12669, i32 0, i32 1, !dbg !349
  %12671 = load double, ptr %12670, align 8, !dbg !349
  %12672 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12673 = load double, ptr %12672, align 8, !dbg !350
  %12674 = fcmp oeq double %12671, %12673, !dbg !351
  br i1 %12674, label %5429, label %12675, !dbg !352

12675:                                            ; preds = %12666, %12659
  br label %12676, !dbg !356

12676:                                            ; preds = %12675
  %12677 = load i32, ptr %10, align 4, !dbg !357
  %12678 = add nsw i32 %12677, 1, !dbg !357
  store i32 %12678, ptr %10, align 4, !dbg !357
  %12679 = load i32, ptr %10, align 4, !dbg !334
  %12680 = load i32, ptr %8, align 4, !dbg !336
  %12681 = icmp slt i32 %12679, %12680, !dbg !337
  br i1 %12681, label %12682, label %14243, !dbg !338

12682:                                            ; preds = %12676
  %12683 = load i32, ptr %10, align 4, !dbg !339
  %12684 = sext i32 %12683 to i64, !dbg !342
  %12685 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12684, !dbg !342
  %12686 = load double, ptr %12685, align 16, !dbg !343
  %12687 = load double, ptr %6, align 8, !dbg !344
  %12688 = fcmp oeq double %12686, %12687, !dbg !345
  br i1 %12688, label %12689, label %12698, !dbg !346

12689:                                            ; preds = %12682
  %12690 = load i32, ptr %10, align 4, !dbg !347
  %12691 = sext i32 %12690 to i64, !dbg !348
  %12692 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12691, !dbg !348
  %12693 = getelementptr inbounds %struct.POINT, ptr %12692, i32 0, i32 1, !dbg !349
  %12694 = load double, ptr %12693, align 8, !dbg !349
  %12695 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12696 = load double, ptr %12695, align 8, !dbg !350
  %12697 = fcmp oeq double %12694, %12696, !dbg !351
  br i1 %12697, label %5429, label %12698, !dbg !352

12698:                                            ; preds = %12689, %12682
  br label %12699, !dbg !356

12699:                                            ; preds = %12698
  %12700 = load i32, ptr %10, align 4, !dbg !357
  %12701 = add nsw i32 %12700, 1, !dbg !357
  store i32 %12701, ptr %10, align 4, !dbg !357
  %12702 = load i32, ptr %10, align 4, !dbg !334
  %12703 = load i32, ptr %8, align 4, !dbg !336
  %12704 = icmp slt i32 %12702, %12703, !dbg !337
  br i1 %12704, label %12705, label %14243, !dbg !338

12705:                                            ; preds = %12699
  %12706 = load i32, ptr %10, align 4, !dbg !339
  %12707 = sext i32 %12706 to i64, !dbg !342
  %12708 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12707, !dbg !342
  %12709 = load double, ptr %12708, align 16, !dbg !343
  %12710 = load double, ptr %6, align 8, !dbg !344
  %12711 = fcmp oeq double %12709, %12710, !dbg !345
  br i1 %12711, label %12712, label %12721, !dbg !346

12712:                                            ; preds = %12705
  %12713 = load i32, ptr %10, align 4, !dbg !347
  %12714 = sext i32 %12713 to i64, !dbg !348
  %12715 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12714, !dbg !348
  %12716 = getelementptr inbounds %struct.POINT, ptr %12715, i32 0, i32 1, !dbg !349
  %12717 = load double, ptr %12716, align 8, !dbg !349
  %12718 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12719 = load double, ptr %12718, align 8, !dbg !350
  %12720 = fcmp oeq double %12717, %12719, !dbg !351
  br i1 %12720, label %5429, label %12721, !dbg !352

12721:                                            ; preds = %12712, %12705
  br label %12722, !dbg !356

12722:                                            ; preds = %12721
  %12723 = load i32, ptr %10, align 4, !dbg !357
  %12724 = add nsw i32 %12723, 1, !dbg !357
  store i32 %12724, ptr %10, align 4, !dbg !357
  %12725 = load i32, ptr %10, align 4, !dbg !334
  %12726 = load i32, ptr %8, align 4, !dbg !336
  %12727 = icmp slt i32 %12725, %12726, !dbg !337
  br i1 %12727, label %12728, label %14243, !dbg !338

12728:                                            ; preds = %12722
  %12729 = load i32, ptr %10, align 4, !dbg !339
  %12730 = sext i32 %12729 to i64, !dbg !342
  %12731 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12730, !dbg !342
  %12732 = load double, ptr %12731, align 16, !dbg !343
  %12733 = load double, ptr %6, align 8, !dbg !344
  %12734 = fcmp oeq double %12732, %12733, !dbg !345
  br i1 %12734, label %12735, label %12744, !dbg !346

12735:                                            ; preds = %12728
  %12736 = load i32, ptr %10, align 4, !dbg !347
  %12737 = sext i32 %12736 to i64, !dbg !348
  %12738 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12737, !dbg !348
  %12739 = getelementptr inbounds %struct.POINT, ptr %12738, i32 0, i32 1, !dbg !349
  %12740 = load double, ptr %12739, align 8, !dbg !349
  %12741 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12742 = load double, ptr %12741, align 8, !dbg !350
  %12743 = fcmp oeq double %12740, %12742, !dbg !351
  br i1 %12743, label %5429, label %12744, !dbg !352

12744:                                            ; preds = %12735, %12728
  br label %12745, !dbg !356

12745:                                            ; preds = %12744
  %12746 = load i32, ptr %10, align 4, !dbg !357
  %12747 = add nsw i32 %12746, 1, !dbg !357
  store i32 %12747, ptr %10, align 4, !dbg !357
  %12748 = load i32, ptr %10, align 4, !dbg !334
  %12749 = load i32, ptr %8, align 4, !dbg !336
  %12750 = icmp slt i32 %12748, %12749, !dbg !337
  br i1 %12750, label %12751, label %14243, !dbg !338

12751:                                            ; preds = %12745
  %12752 = load i32, ptr %10, align 4, !dbg !339
  %12753 = sext i32 %12752 to i64, !dbg !342
  %12754 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12753, !dbg !342
  %12755 = load double, ptr %12754, align 16, !dbg !343
  %12756 = load double, ptr %6, align 8, !dbg !344
  %12757 = fcmp oeq double %12755, %12756, !dbg !345
  br i1 %12757, label %12758, label %12767, !dbg !346

12758:                                            ; preds = %12751
  %12759 = load i32, ptr %10, align 4, !dbg !347
  %12760 = sext i32 %12759 to i64, !dbg !348
  %12761 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12760, !dbg !348
  %12762 = getelementptr inbounds %struct.POINT, ptr %12761, i32 0, i32 1, !dbg !349
  %12763 = load double, ptr %12762, align 8, !dbg !349
  %12764 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12765 = load double, ptr %12764, align 8, !dbg !350
  %12766 = fcmp oeq double %12763, %12765, !dbg !351
  br i1 %12766, label %5429, label %12767, !dbg !352

12767:                                            ; preds = %12758, %12751
  br label %12768, !dbg !356

12768:                                            ; preds = %12767
  %12769 = load i32, ptr %10, align 4, !dbg !357
  %12770 = add nsw i32 %12769, 1, !dbg !357
  store i32 %12770, ptr %10, align 4, !dbg !357
  %12771 = load i32, ptr %10, align 4, !dbg !334
  %12772 = load i32, ptr %8, align 4, !dbg !336
  %12773 = icmp slt i32 %12771, %12772, !dbg !337
  br i1 %12773, label %12774, label %14243, !dbg !338

12774:                                            ; preds = %12768
  %12775 = load i32, ptr %10, align 4, !dbg !339
  %12776 = sext i32 %12775 to i64, !dbg !342
  %12777 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12776, !dbg !342
  %12778 = load double, ptr %12777, align 16, !dbg !343
  %12779 = load double, ptr %6, align 8, !dbg !344
  %12780 = fcmp oeq double %12778, %12779, !dbg !345
  br i1 %12780, label %12781, label %12790, !dbg !346

12781:                                            ; preds = %12774
  %12782 = load i32, ptr %10, align 4, !dbg !347
  %12783 = sext i32 %12782 to i64, !dbg !348
  %12784 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12783, !dbg !348
  %12785 = getelementptr inbounds %struct.POINT, ptr %12784, i32 0, i32 1, !dbg !349
  %12786 = load double, ptr %12785, align 8, !dbg !349
  %12787 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12788 = load double, ptr %12787, align 8, !dbg !350
  %12789 = fcmp oeq double %12786, %12788, !dbg !351
  br i1 %12789, label %5429, label %12790, !dbg !352

12790:                                            ; preds = %12781, %12774
  br label %12791, !dbg !356

12791:                                            ; preds = %12790
  %12792 = load i32, ptr %10, align 4, !dbg !357
  %12793 = add nsw i32 %12792, 1, !dbg !357
  store i32 %12793, ptr %10, align 4, !dbg !357
  %12794 = load i32, ptr %10, align 4, !dbg !334
  %12795 = load i32, ptr %8, align 4, !dbg !336
  %12796 = icmp slt i32 %12794, %12795, !dbg !337
  br i1 %12796, label %12797, label %14243, !dbg !338

12797:                                            ; preds = %12791
  %12798 = load i32, ptr %10, align 4, !dbg !339
  %12799 = sext i32 %12798 to i64, !dbg !342
  %12800 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12799, !dbg !342
  %12801 = load double, ptr %12800, align 16, !dbg !343
  %12802 = load double, ptr %6, align 8, !dbg !344
  %12803 = fcmp oeq double %12801, %12802, !dbg !345
  br i1 %12803, label %12804, label %12813, !dbg !346

12804:                                            ; preds = %12797
  %12805 = load i32, ptr %10, align 4, !dbg !347
  %12806 = sext i32 %12805 to i64, !dbg !348
  %12807 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12806, !dbg !348
  %12808 = getelementptr inbounds %struct.POINT, ptr %12807, i32 0, i32 1, !dbg !349
  %12809 = load double, ptr %12808, align 8, !dbg !349
  %12810 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12811 = load double, ptr %12810, align 8, !dbg !350
  %12812 = fcmp oeq double %12809, %12811, !dbg !351
  br i1 %12812, label %5429, label %12813, !dbg !352

12813:                                            ; preds = %12804, %12797
  br label %12814, !dbg !356

12814:                                            ; preds = %12813
  %12815 = load i32, ptr %10, align 4, !dbg !357
  %12816 = add nsw i32 %12815, 1, !dbg !357
  store i32 %12816, ptr %10, align 4, !dbg !357
  %12817 = load i32, ptr %10, align 4, !dbg !334
  %12818 = load i32, ptr %8, align 4, !dbg !336
  %12819 = icmp slt i32 %12817, %12818, !dbg !337
  br i1 %12819, label %12820, label %14243, !dbg !338

12820:                                            ; preds = %12814
  %12821 = load i32, ptr %10, align 4, !dbg !339
  %12822 = sext i32 %12821 to i64, !dbg !342
  %12823 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12822, !dbg !342
  %12824 = load double, ptr %12823, align 16, !dbg !343
  %12825 = load double, ptr %6, align 8, !dbg !344
  %12826 = fcmp oeq double %12824, %12825, !dbg !345
  br i1 %12826, label %12827, label %12836, !dbg !346

12827:                                            ; preds = %12820
  %12828 = load i32, ptr %10, align 4, !dbg !347
  %12829 = sext i32 %12828 to i64, !dbg !348
  %12830 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12829, !dbg !348
  %12831 = getelementptr inbounds %struct.POINT, ptr %12830, i32 0, i32 1, !dbg !349
  %12832 = load double, ptr %12831, align 8, !dbg !349
  %12833 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12834 = load double, ptr %12833, align 8, !dbg !350
  %12835 = fcmp oeq double %12832, %12834, !dbg !351
  br i1 %12835, label %5429, label %12836, !dbg !352

12836:                                            ; preds = %12827, %12820
  br label %12837, !dbg !356

12837:                                            ; preds = %12836
  %12838 = load i32, ptr %10, align 4, !dbg !357
  %12839 = add nsw i32 %12838, 1, !dbg !357
  store i32 %12839, ptr %10, align 4, !dbg !357
  %12840 = load i32, ptr %10, align 4, !dbg !334
  %12841 = load i32, ptr %8, align 4, !dbg !336
  %12842 = icmp slt i32 %12840, %12841, !dbg !337
  br i1 %12842, label %12843, label %14243, !dbg !338

12843:                                            ; preds = %12837
  %12844 = load i32, ptr %10, align 4, !dbg !339
  %12845 = sext i32 %12844 to i64, !dbg !342
  %12846 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12845, !dbg !342
  %12847 = load double, ptr %12846, align 16, !dbg !343
  %12848 = load double, ptr %6, align 8, !dbg !344
  %12849 = fcmp oeq double %12847, %12848, !dbg !345
  br i1 %12849, label %12850, label %12859, !dbg !346

12850:                                            ; preds = %12843
  %12851 = load i32, ptr %10, align 4, !dbg !347
  %12852 = sext i32 %12851 to i64, !dbg !348
  %12853 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12852, !dbg !348
  %12854 = getelementptr inbounds %struct.POINT, ptr %12853, i32 0, i32 1, !dbg !349
  %12855 = load double, ptr %12854, align 8, !dbg !349
  %12856 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12857 = load double, ptr %12856, align 8, !dbg !350
  %12858 = fcmp oeq double %12855, %12857, !dbg !351
  br i1 %12858, label %5429, label %12859, !dbg !352

12859:                                            ; preds = %12850, %12843
  br label %12860, !dbg !356

12860:                                            ; preds = %12859
  %12861 = load i32, ptr %10, align 4, !dbg !357
  %12862 = add nsw i32 %12861, 1, !dbg !357
  store i32 %12862, ptr %10, align 4, !dbg !357
  %12863 = load i32, ptr %10, align 4, !dbg !334
  %12864 = load i32, ptr %8, align 4, !dbg !336
  %12865 = icmp slt i32 %12863, %12864, !dbg !337
  br i1 %12865, label %12866, label %14243, !dbg !338

12866:                                            ; preds = %12860
  %12867 = load i32, ptr %10, align 4, !dbg !339
  %12868 = sext i32 %12867 to i64, !dbg !342
  %12869 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12868, !dbg !342
  %12870 = load double, ptr %12869, align 16, !dbg !343
  %12871 = load double, ptr %6, align 8, !dbg !344
  %12872 = fcmp oeq double %12870, %12871, !dbg !345
  br i1 %12872, label %12873, label %12882, !dbg !346

12873:                                            ; preds = %12866
  %12874 = load i32, ptr %10, align 4, !dbg !347
  %12875 = sext i32 %12874 to i64, !dbg !348
  %12876 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12875, !dbg !348
  %12877 = getelementptr inbounds %struct.POINT, ptr %12876, i32 0, i32 1, !dbg !349
  %12878 = load double, ptr %12877, align 8, !dbg !349
  %12879 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12880 = load double, ptr %12879, align 8, !dbg !350
  %12881 = fcmp oeq double %12878, %12880, !dbg !351
  br i1 %12881, label %5429, label %12882, !dbg !352

12882:                                            ; preds = %12873, %12866
  br label %12883, !dbg !356

12883:                                            ; preds = %12882
  %12884 = load i32, ptr %10, align 4, !dbg !357
  %12885 = add nsw i32 %12884, 1, !dbg !357
  store i32 %12885, ptr %10, align 4, !dbg !357
  %12886 = load i32, ptr %10, align 4, !dbg !334
  %12887 = load i32, ptr %8, align 4, !dbg !336
  %12888 = icmp slt i32 %12886, %12887, !dbg !337
  br i1 %12888, label %12889, label %14243, !dbg !338

12889:                                            ; preds = %12883
  %12890 = load i32, ptr %10, align 4, !dbg !339
  %12891 = sext i32 %12890 to i64, !dbg !342
  %12892 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12891, !dbg !342
  %12893 = load double, ptr %12892, align 16, !dbg !343
  %12894 = load double, ptr %6, align 8, !dbg !344
  %12895 = fcmp oeq double %12893, %12894, !dbg !345
  br i1 %12895, label %12896, label %12905, !dbg !346

12896:                                            ; preds = %12889
  %12897 = load i32, ptr %10, align 4, !dbg !347
  %12898 = sext i32 %12897 to i64, !dbg !348
  %12899 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12898, !dbg !348
  %12900 = getelementptr inbounds %struct.POINT, ptr %12899, i32 0, i32 1, !dbg !349
  %12901 = load double, ptr %12900, align 8, !dbg !349
  %12902 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12903 = load double, ptr %12902, align 8, !dbg !350
  %12904 = fcmp oeq double %12901, %12903, !dbg !351
  br i1 %12904, label %5429, label %12905, !dbg !352

12905:                                            ; preds = %12896, %12889
  br label %12906, !dbg !356

12906:                                            ; preds = %12905
  %12907 = load i32, ptr %10, align 4, !dbg !357
  %12908 = add nsw i32 %12907, 1, !dbg !357
  store i32 %12908, ptr %10, align 4, !dbg !357
  %12909 = load i32, ptr %10, align 4, !dbg !334
  %12910 = load i32, ptr %8, align 4, !dbg !336
  %12911 = icmp slt i32 %12909, %12910, !dbg !337
  br i1 %12911, label %12912, label %14243, !dbg !338

12912:                                            ; preds = %12906
  %12913 = load i32, ptr %10, align 4, !dbg !339
  %12914 = sext i32 %12913 to i64, !dbg !342
  %12915 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12914, !dbg !342
  %12916 = load double, ptr %12915, align 16, !dbg !343
  %12917 = load double, ptr %6, align 8, !dbg !344
  %12918 = fcmp oeq double %12916, %12917, !dbg !345
  br i1 %12918, label %12919, label %12928, !dbg !346

12919:                                            ; preds = %12912
  %12920 = load i32, ptr %10, align 4, !dbg !347
  %12921 = sext i32 %12920 to i64, !dbg !348
  %12922 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12921, !dbg !348
  %12923 = getelementptr inbounds %struct.POINT, ptr %12922, i32 0, i32 1, !dbg !349
  %12924 = load double, ptr %12923, align 8, !dbg !349
  %12925 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12926 = load double, ptr %12925, align 8, !dbg !350
  %12927 = fcmp oeq double %12924, %12926, !dbg !351
  br i1 %12927, label %5429, label %12928, !dbg !352

12928:                                            ; preds = %12919, %12912
  br label %12929, !dbg !356

12929:                                            ; preds = %12928
  %12930 = load i32, ptr %10, align 4, !dbg !357
  %12931 = add nsw i32 %12930, 1, !dbg !357
  store i32 %12931, ptr %10, align 4, !dbg !357
  %12932 = load i32, ptr %10, align 4, !dbg !334
  %12933 = load i32, ptr %8, align 4, !dbg !336
  %12934 = icmp slt i32 %12932, %12933, !dbg !337
  br i1 %12934, label %12935, label %14243, !dbg !338

12935:                                            ; preds = %12929
  %12936 = load i32, ptr %10, align 4, !dbg !339
  %12937 = sext i32 %12936 to i64, !dbg !342
  %12938 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12937, !dbg !342
  %12939 = load double, ptr %12938, align 16, !dbg !343
  %12940 = load double, ptr %6, align 8, !dbg !344
  %12941 = fcmp oeq double %12939, %12940, !dbg !345
  br i1 %12941, label %12942, label %12951, !dbg !346

12942:                                            ; preds = %12935
  %12943 = load i32, ptr %10, align 4, !dbg !347
  %12944 = sext i32 %12943 to i64, !dbg !348
  %12945 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12944, !dbg !348
  %12946 = getelementptr inbounds %struct.POINT, ptr %12945, i32 0, i32 1, !dbg !349
  %12947 = load double, ptr %12946, align 8, !dbg !349
  %12948 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12949 = load double, ptr %12948, align 8, !dbg !350
  %12950 = fcmp oeq double %12947, %12949, !dbg !351
  br i1 %12950, label %5429, label %12951, !dbg !352

12951:                                            ; preds = %12942, %12935
  br label %12952, !dbg !356

12952:                                            ; preds = %12951
  %12953 = load i32, ptr %10, align 4, !dbg !357
  %12954 = add nsw i32 %12953, 1, !dbg !357
  store i32 %12954, ptr %10, align 4, !dbg !357
  %12955 = load i32, ptr %10, align 4, !dbg !334
  %12956 = load i32, ptr %8, align 4, !dbg !336
  %12957 = icmp slt i32 %12955, %12956, !dbg !337
  br i1 %12957, label %12958, label %14243, !dbg !338

12958:                                            ; preds = %12952
  %12959 = load i32, ptr %10, align 4, !dbg !339
  %12960 = sext i32 %12959 to i64, !dbg !342
  %12961 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12960, !dbg !342
  %12962 = load double, ptr %12961, align 16, !dbg !343
  %12963 = load double, ptr %6, align 8, !dbg !344
  %12964 = fcmp oeq double %12962, %12963, !dbg !345
  br i1 %12964, label %12965, label %12974, !dbg !346

12965:                                            ; preds = %12958
  %12966 = load i32, ptr %10, align 4, !dbg !347
  %12967 = sext i32 %12966 to i64, !dbg !348
  %12968 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12967, !dbg !348
  %12969 = getelementptr inbounds %struct.POINT, ptr %12968, i32 0, i32 1, !dbg !349
  %12970 = load double, ptr %12969, align 8, !dbg !349
  %12971 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12972 = load double, ptr %12971, align 8, !dbg !350
  %12973 = fcmp oeq double %12970, %12972, !dbg !351
  br i1 %12973, label %5429, label %12974, !dbg !352

12974:                                            ; preds = %12965, %12958
  br label %12975, !dbg !356

12975:                                            ; preds = %12974
  %12976 = load i32, ptr %10, align 4, !dbg !357
  %12977 = add nsw i32 %12976, 1, !dbg !357
  store i32 %12977, ptr %10, align 4, !dbg !357
  %12978 = load i32, ptr %10, align 4, !dbg !334
  %12979 = load i32, ptr %8, align 4, !dbg !336
  %12980 = icmp slt i32 %12978, %12979, !dbg !337
  br i1 %12980, label %12981, label %14243, !dbg !338

12981:                                            ; preds = %12975
  %12982 = load i32, ptr %10, align 4, !dbg !339
  %12983 = sext i32 %12982 to i64, !dbg !342
  %12984 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12983, !dbg !342
  %12985 = load double, ptr %12984, align 16, !dbg !343
  %12986 = load double, ptr %6, align 8, !dbg !344
  %12987 = fcmp oeq double %12985, %12986, !dbg !345
  br i1 %12987, label %12988, label %12997, !dbg !346

12988:                                            ; preds = %12981
  %12989 = load i32, ptr %10, align 4, !dbg !347
  %12990 = sext i32 %12989 to i64, !dbg !348
  %12991 = getelementptr inbounds %struct.POINT, ptr %26, i64 %12990, !dbg !348
  %12992 = getelementptr inbounds %struct.POINT, ptr %12991, i32 0, i32 1, !dbg !349
  %12993 = load double, ptr %12992, align 8, !dbg !349
  %12994 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %12995 = load double, ptr %12994, align 8, !dbg !350
  %12996 = fcmp oeq double %12993, %12995, !dbg !351
  br i1 %12996, label %5429, label %12997, !dbg !352

12997:                                            ; preds = %12988, %12981
  br label %12998, !dbg !356

12998:                                            ; preds = %12997
  %12999 = load i32, ptr %10, align 4, !dbg !357
  %13000 = add nsw i32 %12999, 1, !dbg !357
  store i32 %13000, ptr %10, align 4, !dbg !357
  %13001 = load i32, ptr %10, align 4, !dbg !334
  %13002 = load i32, ptr %8, align 4, !dbg !336
  %13003 = icmp slt i32 %13001, %13002, !dbg !337
  br i1 %13003, label %13004, label %14243, !dbg !338

13004:                                            ; preds = %12998
  %13005 = load i32, ptr %10, align 4, !dbg !339
  %13006 = sext i32 %13005 to i64, !dbg !342
  %13007 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13006, !dbg !342
  %13008 = load double, ptr %13007, align 16, !dbg !343
  %13009 = load double, ptr %6, align 8, !dbg !344
  %13010 = fcmp oeq double %13008, %13009, !dbg !345
  br i1 %13010, label %13011, label %13020, !dbg !346

13011:                                            ; preds = %13004
  %13012 = load i32, ptr %10, align 4, !dbg !347
  %13013 = sext i32 %13012 to i64, !dbg !348
  %13014 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13013, !dbg !348
  %13015 = getelementptr inbounds %struct.POINT, ptr %13014, i32 0, i32 1, !dbg !349
  %13016 = load double, ptr %13015, align 8, !dbg !349
  %13017 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13018 = load double, ptr %13017, align 8, !dbg !350
  %13019 = fcmp oeq double %13016, %13018, !dbg !351
  br i1 %13019, label %5429, label %13020, !dbg !352

13020:                                            ; preds = %13011, %13004
  br label %13021, !dbg !356

13021:                                            ; preds = %13020
  %13022 = load i32, ptr %10, align 4, !dbg !357
  %13023 = add nsw i32 %13022, 1, !dbg !357
  store i32 %13023, ptr %10, align 4, !dbg !357
  %13024 = load i32, ptr %10, align 4, !dbg !334
  %13025 = load i32, ptr %8, align 4, !dbg !336
  %13026 = icmp slt i32 %13024, %13025, !dbg !337
  br i1 %13026, label %13027, label %14243, !dbg !338

13027:                                            ; preds = %13021
  %13028 = load i32, ptr %10, align 4, !dbg !339
  %13029 = sext i32 %13028 to i64, !dbg !342
  %13030 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13029, !dbg !342
  %13031 = load double, ptr %13030, align 16, !dbg !343
  %13032 = load double, ptr %6, align 8, !dbg !344
  %13033 = fcmp oeq double %13031, %13032, !dbg !345
  br i1 %13033, label %13034, label %13043, !dbg !346

13034:                                            ; preds = %13027
  %13035 = load i32, ptr %10, align 4, !dbg !347
  %13036 = sext i32 %13035 to i64, !dbg !348
  %13037 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13036, !dbg !348
  %13038 = getelementptr inbounds %struct.POINT, ptr %13037, i32 0, i32 1, !dbg !349
  %13039 = load double, ptr %13038, align 8, !dbg !349
  %13040 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13041 = load double, ptr %13040, align 8, !dbg !350
  %13042 = fcmp oeq double %13039, %13041, !dbg !351
  br i1 %13042, label %5429, label %13043, !dbg !352

13043:                                            ; preds = %13034, %13027
  br label %13044, !dbg !356

13044:                                            ; preds = %13043
  %13045 = load i32, ptr %10, align 4, !dbg !357
  %13046 = add nsw i32 %13045, 1, !dbg !357
  store i32 %13046, ptr %10, align 4, !dbg !357
  %13047 = load i32, ptr %10, align 4, !dbg !334
  %13048 = load i32, ptr %8, align 4, !dbg !336
  %13049 = icmp slt i32 %13047, %13048, !dbg !337
  br i1 %13049, label %13050, label %14243, !dbg !338

13050:                                            ; preds = %13044
  %13051 = load i32, ptr %10, align 4, !dbg !339
  %13052 = sext i32 %13051 to i64, !dbg !342
  %13053 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13052, !dbg !342
  %13054 = load double, ptr %13053, align 16, !dbg !343
  %13055 = load double, ptr %6, align 8, !dbg !344
  %13056 = fcmp oeq double %13054, %13055, !dbg !345
  br i1 %13056, label %13057, label %13066, !dbg !346

13057:                                            ; preds = %13050
  %13058 = load i32, ptr %10, align 4, !dbg !347
  %13059 = sext i32 %13058 to i64, !dbg !348
  %13060 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13059, !dbg !348
  %13061 = getelementptr inbounds %struct.POINT, ptr %13060, i32 0, i32 1, !dbg !349
  %13062 = load double, ptr %13061, align 8, !dbg !349
  %13063 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13064 = load double, ptr %13063, align 8, !dbg !350
  %13065 = fcmp oeq double %13062, %13064, !dbg !351
  br i1 %13065, label %5429, label %13066, !dbg !352

13066:                                            ; preds = %13057, %13050
  br label %13067, !dbg !356

13067:                                            ; preds = %13066
  %13068 = load i32, ptr %10, align 4, !dbg !357
  %13069 = add nsw i32 %13068, 1, !dbg !357
  store i32 %13069, ptr %10, align 4, !dbg !357
  %13070 = load i32, ptr %10, align 4, !dbg !334
  %13071 = load i32, ptr %8, align 4, !dbg !336
  %13072 = icmp slt i32 %13070, %13071, !dbg !337
  br i1 %13072, label %13073, label %14243, !dbg !338

13073:                                            ; preds = %13067
  %13074 = load i32, ptr %10, align 4, !dbg !339
  %13075 = sext i32 %13074 to i64, !dbg !342
  %13076 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13075, !dbg !342
  %13077 = load double, ptr %13076, align 16, !dbg !343
  %13078 = load double, ptr %6, align 8, !dbg !344
  %13079 = fcmp oeq double %13077, %13078, !dbg !345
  br i1 %13079, label %13080, label %13089, !dbg !346

13080:                                            ; preds = %13073
  %13081 = load i32, ptr %10, align 4, !dbg !347
  %13082 = sext i32 %13081 to i64, !dbg !348
  %13083 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13082, !dbg !348
  %13084 = getelementptr inbounds %struct.POINT, ptr %13083, i32 0, i32 1, !dbg !349
  %13085 = load double, ptr %13084, align 8, !dbg !349
  %13086 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13087 = load double, ptr %13086, align 8, !dbg !350
  %13088 = fcmp oeq double %13085, %13087, !dbg !351
  br i1 %13088, label %5429, label %13089, !dbg !352

13089:                                            ; preds = %13080, %13073
  br label %13090, !dbg !356

13090:                                            ; preds = %13089
  %13091 = load i32, ptr %10, align 4, !dbg !357
  %13092 = add nsw i32 %13091, 1, !dbg !357
  store i32 %13092, ptr %10, align 4, !dbg !357
  %13093 = load i32, ptr %10, align 4, !dbg !334
  %13094 = load i32, ptr %8, align 4, !dbg !336
  %13095 = icmp slt i32 %13093, %13094, !dbg !337
  br i1 %13095, label %13096, label %14243, !dbg !338

13096:                                            ; preds = %13090
  %13097 = load i32, ptr %10, align 4, !dbg !339
  %13098 = sext i32 %13097 to i64, !dbg !342
  %13099 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13098, !dbg !342
  %13100 = load double, ptr %13099, align 16, !dbg !343
  %13101 = load double, ptr %6, align 8, !dbg !344
  %13102 = fcmp oeq double %13100, %13101, !dbg !345
  br i1 %13102, label %13103, label %13112, !dbg !346

13103:                                            ; preds = %13096
  %13104 = load i32, ptr %10, align 4, !dbg !347
  %13105 = sext i32 %13104 to i64, !dbg !348
  %13106 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13105, !dbg !348
  %13107 = getelementptr inbounds %struct.POINT, ptr %13106, i32 0, i32 1, !dbg !349
  %13108 = load double, ptr %13107, align 8, !dbg !349
  %13109 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13110 = load double, ptr %13109, align 8, !dbg !350
  %13111 = fcmp oeq double %13108, %13110, !dbg !351
  br i1 %13111, label %5429, label %13112, !dbg !352

13112:                                            ; preds = %13103, %13096
  br label %13113, !dbg !356

13113:                                            ; preds = %13112
  %13114 = load i32, ptr %10, align 4, !dbg !357
  %13115 = add nsw i32 %13114, 1, !dbg !357
  store i32 %13115, ptr %10, align 4, !dbg !357
  %13116 = load i32, ptr %10, align 4, !dbg !334
  %13117 = load i32, ptr %8, align 4, !dbg !336
  %13118 = icmp slt i32 %13116, %13117, !dbg !337
  br i1 %13118, label %13119, label %14243, !dbg !338

13119:                                            ; preds = %13113
  %13120 = load i32, ptr %10, align 4, !dbg !339
  %13121 = sext i32 %13120 to i64, !dbg !342
  %13122 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13121, !dbg !342
  %13123 = load double, ptr %13122, align 16, !dbg !343
  %13124 = load double, ptr %6, align 8, !dbg !344
  %13125 = fcmp oeq double %13123, %13124, !dbg !345
  br i1 %13125, label %13126, label %13135, !dbg !346

13126:                                            ; preds = %13119
  %13127 = load i32, ptr %10, align 4, !dbg !347
  %13128 = sext i32 %13127 to i64, !dbg !348
  %13129 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13128, !dbg !348
  %13130 = getelementptr inbounds %struct.POINT, ptr %13129, i32 0, i32 1, !dbg !349
  %13131 = load double, ptr %13130, align 8, !dbg !349
  %13132 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13133 = load double, ptr %13132, align 8, !dbg !350
  %13134 = fcmp oeq double %13131, %13133, !dbg !351
  br i1 %13134, label %5429, label %13135, !dbg !352

13135:                                            ; preds = %13126, %13119
  br label %13136, !dbg !356

13136:                                            ; preds = %13135
  %13137 = load i32, ptr %10, align 4, !dbg !357
  %13138 = add nsw i32 %13137, 1, !dbg !357
  store i32 %13138, ptr %10, align 4, !dbg !357
  %13139 = load i32, ptr %10, align 4, !dbg !334
  %13140 = load i32, ptr %8, align 4, !dbg !336
  %13141 = icmp slt i32 %13139, %13140, !dbg !337
  br i1 %13141, label %13142, label %14243, !dbg !338

13142:                                            ; preds = %13136
  %13143 = load i32, ptr %10, align 4, !dbg !339
  %13144 = sext i32 %13143 to i64, !dbg !342
  %13145 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13144, !dbg !342
  %13146 = load double, ptr %13145, align 16, !dbg !343
  %13147 = load double, ptr %6, align 8, !dbg !344
  %13148 = fcmp oeq double %13146, %13147, !dbg !345
  br i1 %13148, label %13149, label %13158, !dbg !346

13149:                                            ; preds = %13142
  %13150 = load i32, ptr %10, align 4, !dbg !347
  %13151 = sext i32 %13150 to i64, !dbg !348
  %13152 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13151, !dbg !348
  %13153 = getelementptr inbounds %struct.POINT, ptr %13152, i32 0, i32 1, !dbg !349
  %13154 = load double, ptr %13153, align 8, !dbg !349
  %13155 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13156 = load double, ptr %13155, align 8, !dbg !350
  %13157 = fcmp oeq double %13154, %13156, !dbg !351
  br i1 %13157, label %5429, label %13158, !dbg !352

13158:                                            ; preds = %13149, %13142
  br label %13159, !dbg !356

13159:                                            ; preds = %13158
  %13160 = load i32, ptr %10, align 4, !dbg !357
  %13161 = add nsw i32 %13160, 1, !dbg !357
  store i32 %13161, ptr %10, align 4, !dbg !357
  %13162 = load i32, ptr %10, align 4, !dbg !334
  %13163 = load i32, ptr %8, align 4, !dbg !336
  %13164 = icmp slt i32 %13162, %13163, !dbg !337
  br i1 %13164, label %13165, label %14243, !dbg !338

13165:                                            ; preds = %13159
  %13166 = load i32, ptr %10, align 4, !dbg !339
  %13167 = sext i32 %13166 to i64, !dbg !342
  %13168 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13167, !dbg !342
  %13169 = load double, ptr %13168, align 16, !dbg !343
  %13170 = load double, ptr %6, align 8, !dbg !344
  %13171 = fcmp oeq double %13169, %13170, !dbg !345
  br i1 %13171, label %13172, label %13181, !dbg !346

13172:                                            ; preds = %13165
  %13173 = load i32, ptr %10, align 4, !dbg !347
  %13174 = sext i32 %13173 to i64, !dbg !348
  %13175 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13174, !dbg !348
  %13176 = getelementptr inbounds %struct.POINT, ptr %13175, i32 0, i32 1, !dbg !349
  %13177 = load double, ptr %13176, align 8, !dbg !349
  %13178 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13179 = load double, ptr %13178, align 8, !dbg !350
  %13180 = fcmp oeq double %13177, %13179, !dbg !351
  br i1 %13180, label %5429, label %13181, !dbg !352

13181:                                            ; preds = %13172, %13165
  br label %13182, !dbg !356

13182:                                            ; preds = %13181
  %13183 = load i32, ptr %10, align 4, !dbg !357
  %13184 = add nsw i32 %13183, 1, !dbg !357
  store i32 %13184, ptr %10, align 4, !dbg !357
  %13185 = load i32, ptr %10, align 4, !dbg !334
  %13186 = load i32, ptr %8, align 4, !dbg !336
  %13187 = icmp slt i32 %13185, %13186, !dbg !337
  br i1 %13187, label %13188, label %14243, !dbg !338

13188:                                            ; preds = %13182
  %13189 = load i32, ptr %10, align 4, !dbg !339
  %13190 = sext i32 %13189 to i64, !dbg !342
  %13191 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13190, !dbg !342
  %13192 = load double, ptr %13191, align 16, !dbg !343
  %13193 = load double, ptr %6, align 8, !dbg !344
  %13194 = fcmp oeq double %13192, %13193, !dbg !345
  br i1 %13194, label %13195, label %13204, !dbg !346

13195:                                            ; preds = %13188
  %13196 = load i32, ptr %10, align 4, !dbg !347
  %13197 = sext i32 %13196 to i64, !dbg !348
  %13198 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13197, !dbg !348
  %13199 = getelementptr inbounds %struct.POINT, ptr %13198, i32 0, i32 1, !dbg !349
  %13200 = load double, ptr %13199, align 8, !dbg !349
  %13201 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13202 = load double, ptr %13201, align 8, !dbg !350
  %13203 = fcmp oeq double %13200, %13202, !dbg !351
  br i1 %13203, label %5429, label %13204, !dbg !352

13204:                                            ; preds = %13195, %13188
  br label %13205, !dbg !356

13205:                                            ; preds = %13204
  %13206 = load i32, ptr %10, align 4, !dbg !357
  %13207 = add nsw i32 %13206, 1, !dbg !357
  store i32 %13207, ptr %10, align 4, !dbg !357
  %13208 = load i32, ptr %10, align 4, !dbg !334
  %13209 = load i32, ptr %8, align 4, !dbg !336
  %13210 = icmp slt i32 %13208, %13209, !dbg !337
  br i1 %13210, label %13211, label %14243, !dbg !338

13211:                                            ; preds = %13205
  %13212 = load i32, ptr %10, align 4, !dbg !339
  %13213 = sext i32 %13212 to i64, !dbg !342
  %13214 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13213, !dbg !342
  %13215 = load double, ptr %13214, align 16, !dbg !343
  %13216 = load double, ptr %6, align 8, !dbg !344
  %13217 = fcmp oeq double %13215, %13216, !dbg !345
  br i1 %13217, label %13218, label %13227, !dbg !346

13218:                                            ; preds = %13211
  %13219 = load i32, ptr %10, align 4, !dbg !347
  %13220 = sext i32 %13219 to i64, !dbg !348
  %13221 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13220, !dbg !348
  %13222 = getelementptr inbounds %struct.POINT, ptr %13221, i32 0, i32 1, !dbg !349
  %13223 = load double, ptr %13222, align 8, !dbg !349
  %13224 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13225 = load double, ptr %13224, align 8, !dbg !350
  %13226 = fcmp oeq double %13223, %13225, !dbg !351
  br i1 %13226, label %5429, label %13227, !dbg !352

13227:                                            ; preds = %13218, %13211
  br label %13228, !dbg !356

13228:                                            ; preds = %13227
  %13229 = load i32, ptr %10, align 4, !dbg !357
  %13230 = add nsw i32 %13229, 1, !dbg !357
  store i32 %13230, ptr %10, align 4, !dbg !357
  %13231 = load i32, ptr %10, align 4, !dbg !334
  %13232 = load i32, ptr %8, align 4, !dbg !336
  %13233 = icmp slt i32 %13231, %13232, !dbg !337
  br i1 %13233, label %13234, label %14243, !dbg !338

13234:                                            ; preds = %13228
  %13235 = load i32, ptr %10, align 4, !dbg !339
  %13236 = sext i32 %13235 to i64, !dbg !342
  %13237 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13236, !dbg !342
  %13238 = load double, ptr %13237, align 16, !dbg !343
  %13239 = load double, ptr %6, align 8, !dbg !344
  %13240 = fcmp oeq double %13238, %13239, !dbg !345
  br i1 %13240, label %13241, label %13250, !dbg !346

13241:                                            ; preds = %13234
  %13242 = load i32, ptr %10, align 4, !dbg !347
  %13243 = sext i32 %13242 to i64, !dbg !348
  %13244 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13243, !dbg !348
  %13245 = getelementptr inbounds %struct.POINT, ptr %13244, i32 0, i32 1, !dbg !349
  %13246 = load double, ptr %13245, align 8, !dbg !349
  %13247 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13248 = load double, ptr %13247, align 8, !dbg !350
  %13249 = fcmp oeq double %13246, %13248, !dbg !351
  br i1 %13249, label %5429, label %13250, !dbg !352

13250:                                            ; preds = %13241, %13234
  br label %13251, !dbg !356

13251:                                            ; preds = %13250
  %13252 = load i32, ptr %10, align 4, !dbg !357
  %13253 = add nsw i32 %13252, 1, !dbg !357
  store i32 %13253, ptr %10, align 4, !dbg !357
  %13254 = load i32, ptr %10, align 4, !dbg !334
  %13255 = load i32, ptr %8, align 4, !dbg !336
  %13256 = icmp slt i32 %13254, %13255, !dbg !337
  br i1 %13256, label %13257, label %14243, !dbg !338

13257:                                            ; preds = %13251
  %13258 = load i32, ptr %10, align 4, !dbg !339
  %13259 = sext i32 %13258 to i64, !dbg !342
  %13260 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13259, !dbg !342
  %13261 = load double, ptr %13260, align 16, !dbg !343
  %13262 = load double, ptr %6, align 8, !dbg !344
  %13263 = fcmp oeq double %13261, %13262, !dbg !345
  br i1 %13263, label %13264, label %13273, !dbg !346

13264:                                            ; preds = %13257
  %13265 = load i32, ptr %10, align 4, !dbg !347
  %13266 = sext i32 %13265 to i64, !dbg !348
  %13267 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13266, !dbg !348
  %13268 = getelementptr inbounds %struct.POINT, ptr %13267, i32 0, i32 1, !dbg !349
  %13269 = load double, ptr %13268, align 8, !dbg !349
  %13270 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13271 = load double, ptr %13270, align 8, !dbg !350
  %13272 = fcmp oeq double %13269, %13271, !dbg !351
  br i1 %13272, label %5429, label %13273, !dbg !352

13273:                                            ; preds = %13264, %13257
  br label %13274, !dbg !356

13274:                                            ; preds = %13273
  %13275 = load i32, ptr %10, align 4, !dbg !357
  %13276 = add nsw i32 %13275, 1, !dbg !357
  store i32 %13276, ptr %10, align 4, !dbg !357
  %13277 = load i32, ptr %10, align 4, !dbg !334
  %13278 = load i32, ptr %8, align 4, !dbg !336
  %13279 = icmp slt i32 %13277, %13278, !dbg !337
  br i1 %13279, label %13280, label %14243, !dbg !338

13280:                                            ; preds = %13274
  %13281 = load i32, ptr %10, align 4, !dbg !339
  %13282 = sext i32 %13281 to i64, !dbg !342
  %13283 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13282, !dbg !342
  %13284 = load double, ptr %13283, align 16, !dbg !343
  %13285 = load double, ptr %6, align 8, !dbg !344
  %13286 = fcmp oeq double %13284, %13285, !dbg !345
  br i1 %13286, label %13287, label %13296, !dbg !346

13287:                                            ; preds = %13280
  %13288 = load i32, ptr %10, align 4, !dbg !347
  %13289 = sext i32 %13288 to i64, !dbg !348
  %13290 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13289, !dbg !348
  %13291 = getelementptr inbounds %struct.POINT, ptr %13290, i32 0, i32 1, !dbg !349
  %13292 = load double, ptr %13291, align 8, !dbg !349
  %13293 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13294 = load double, ptr %13293, align 8, !dbg !350
  %13295 = fcmp oeq double %13292, %13294, !dbg !351
  br i1 %13295, label %5429, label %13296, !dbg !352

13296:                                            ; preds = %13287, %13280
  br label %13297, !dbg !356

13297:                                            ; preds = %13296
  %13298 = load i32, ptr %10, align 4, !dbg !357
  %13299 = add nsw i32 %13298, 1, !dbg !357
  store i32 %13299, ptr %10, align 4, !dbg !357
  %13300 = load i32, ptr %10, align 4, !dbg !334
  %13301 = load i32, ptr %8, align 4, !dbg !336
  %13302 = icmp slt i32 %13300, %13301, !dbg !337
  br i1 %13302, label %13303, label %14243, !dbg !338

13303:                                            ; preds = %13297
  %13304 = load i32, ptr %10, align 4, !dbg !339
  %13305 = sext i32 %13304 to i64, !dbg !342
  %13306 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13305, !dbg !342
  %13307 = load double, ptr %13306, align 16, !dbg !343
  %13308 = load double, ptr %6, align 8, !dbg !344
  %13309 = fcmp oeq double %13307, %13308, !dbg !345
  br i1 %13309, label %13310, label %13319, !dbg !346

13310:                                            ; preds = %13303
  %13311 = load i32, ptr %10, align 4, !dbg !347
  %13312 = sext i32 %13311 to i64, !dbg !348
  %13313 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13312, !dbg !348
  %13314 = getelementptr inbounds %struct.POINT, ptr %13313, i32 0, i32 1, !dbg !349
  %13315 = load double, ptr %13314, align 8, !dbg !349
  %13316 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13317 = load double, ptr %13316, align 8, !dbg !350
  %13318 = fcmp oeq double %13315, %13317, !dbg !351
  br i1 %13318, label %5429, label %13319, !dbg !352

13319:                                            ; preds = %13310, %13303
  br label %13320, !dbg !356

13320:                                            ; preds = %13319
  %13321 = load i32, ptr %10, align 4, !dbg !357
  %13322 = add nsw i32 %13321, 1, !dbg !357
  store i32 %13322, ptr %10, align 4, !dbg !357
  %13323 = load i32, ptr %10, align 4, !dbg !334
  %13324 = load i32, ptr %8, align 4, !dbg !336
  %13325 = icmp slt i32 %13323, %13324, !dbg !337
  br i1 %13325, label %13326, label %14243, !dbg !338

13326:                                            ; preds = %13320
  %13327 = load i32, ptr %10, align 4, !dbg !339
  %13328 = sext i32 %13327 to i64, !dbg !342
  %13329 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13328, !dbg !342
  %13330 = load double, ptr %13329, align 16, !dbg !343
  %13331 = load double, ptr %6, align 8, !dbg !344
  %13332 = fcmp oeq double %13330, %13331, !dbg !345
  br i1 %13332, label %13333, label %13342, !dbg !346

13333:                                            ; preds = %13326
  %13334 = load i32, ptr %10, align 4, !dbg !347
  %13335 = sext i32 %13334 to i64, !dbg !348
  %13336 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13335, !dbg !348
  %13337 = getelementptr inbounds %struct.POINT, ptr %13336, i32 0, i32 1, !dbg !349
  %13338 = load double, ptr %13337, align 8, !dbg !349
  %13339 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13340 = load double, ptr %13339, align 8, !dbg !350
  %13341 = fcmp oeq double %13338, %13340, !dbg !351
  br i1 %13341, label %5429, label %13342, !dbg !352

13342:                                            ; preds = %13333, %13326
  br label %13343, !dbg !356

13343:                                            ; preds = %13342
  %13344 = load i32, ptr %10, align 4, !dbg !357
  %13345 = add nsw i32 %13344, 1, !dbg !357
  store i32 %13345, ptr %10, align 4, !dbg !357
  %13346 = load i32, ptr %10, align 4, !dbg !334
  %13347 = load i32, ptr %8, align 4, !dbg !336
  %13348 = icmp slt i32 %13346, %13347, !dbg !337
  br i1 %13348, label %13349, label %14243, !dbg !338

13349:                                            ; preds = %13343
  %13350 = load i32, ptr %10, align 4, !dbg !339
  %13351 = sext i32 %13350 to i64, !dbg !342
  %13352 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13351, !dbg !342
  %13353 = load double, ptr %13352, align 16, !dbg !343
  %13354 = load double, ptr %6, align 8, !dbg !344
  %13355 = fcmp oeq double %13353, %13354, !dbg !345
  br i1 %13355, label %13356, label %13365, !dbg !346

13356:                                            ; preds = %13349
  %13357 = load i32, ptr %10, align 4, !dbg !347
  %13358 = sext i32 %13357 to i64, !dbg !348
  %13359 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13358, !dbg !348
  %13360 = getelementptr inbounds %struct.POINT, ptr %13359, i32 0, i32 1, !dbg !349
  %13361 = load double, ptr %13360, align 8, !dbg !349
  %13362 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13363 = load double, ptr %13362, align 8, !dbg !350
  %13364 = fcmp oeq double %13361, %13363, !dbg !351
  br i1 %13364, label %5429, label %13365, !dbg !352

13365:                                            ; preds = %13356, %13349
  br label %13366, !dbg !356

13366:                                            ; preds = %13365
  %13367 = load i32, ptr %10, align 4, !dbg !357
  %13368 = add nsw i32 %13367, 1, !dbg !357
  store i32 %13368, ptr %10, align 4, !dbg !357
  %13369 = load i32, ptr %10, align 4, !dbg !334
  %13370 = load i32, ptr %8, align 4, !dbg !336
  %13371 = icmp slt i32 %13369, %13370, !dbg !337
  br i1 %13371, label %13372, label %14243, !dbg !338

13372:                                            ; preds = %13366
  %13373 = load i32, ptr %10, align 4, !dbg !339
  %13374 = sext i32 %13373 to i64, !dbg !342
  %13375 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13374, !dbg !342
  %13376 = load double, ptr %13375, align 16, !dbg !343
  %13377 = load double, ptr %6, align 8, !dbg !344
  %13378 = fcmp oeq double %13376, %13377, !dbg !345
  br i1 %13378, label %13379, label %13388, !dbg !346

13379:                                            ; preds = %13372
  %13380 = load i32, ptr %10, align 4, !dbg !347
  %13381 = sext i32 %13380 to i64, !dbg !348
  %13382 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13381, !dbg !348
  %13383 = getelementptr inbounds %struct.POINT, ptr %13382, i32 0, i32 1, !dbg !349
  %13384 = load double, ptr %13383, align 8, !dbg !349
  %13385 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13386 = load double, ptr %13385, align 8, !dbg !350
  %13387 = fcmp oeq double %13384, %13386, !dbg !351
  br i1 %13387, label %5429, label %13388, !dbg !352

13388:                                            ; preds = %13379, %13372
  br label %13389, !dbg !356

13389:                                            ; preds = %13388
  %13390 = load i32, ptr %10, align 4, !dbg !357
  %13391 = add nsw i32 %13390, 1, !dbg !357
  store i32 %13391, ptr %10, align 4, !dbg !357
  %13392 = load i32, ptr %10, align 4, !dbg !334
  %13393 = load i32, ptr %8, align 4, !dbg !336
  %13394 = icmp slt i32 %13392, %13393, !dbg !337
  br i1 %13394, label %13395, label %14243, !dbg !338

13395:                                            ; preds = %13389
  %13396 = load i32, ptr %10, align 4, !dbg !339
  %13397 = sext i32 %13396 to i64, !dbg !342
  %13398 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13397, !dbg !342
  %13399 = load double, ptr %13398, align 16, !dbg !343
  %13400 = load double, ptr %6, align 8, !dbg !344
  %13401 = fcmp oeq double %13399, %13400, !dbg !345
  br i1 %13401, label %13402, label %13411, !dbg !346

13402:                                            ; preds = %13395
  %13403 = load i32, ptr %10, align 4, !dbg !347
  %13404 = sext i32 %13403 to i64, !dbg !348
  %13405 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13404, !dbg !348
  %13406 = getelementptr inbounds %struct.POINT, ptr %13405, i32 0, i32 1, !dbg !349
  %13407 = load double, ptr %13406, align 8, !dbg !349
  %13408 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13409 = load double, ptr %13408, align 8, !dbg !350
  %13410 = fcmp oeq double %13407, %13409, !dbg !351
  br i1 %13410, label %5429, label %13411, !dbg !352

13411:                                            ; preds = %13402, %13395
  br label %13412, !dbg !356

13412:                                            ; preds = %13411
  %13413 = load i32, ptr %10, align 4, !dbg !357
  %13414 = add nsw i32 %13413, 1, !dbg !357
  store i32 %13414, ptr %10, align 4, !dbg !357
  %13415 = load i32, ptr %10, align 4, !dbg !334
  %13416 = load i32, ptr %8, align 4, !dbg !336
  %13417 = icmp slt i32 %13415, %13416, !dbg !337
  br i1 %13417, label %13418, label %14243, !dbg !338

13418:                                            ; preds = %13412
  %13419 = load i32, ptr %10, align 4, !dbg !339
  %13420 = sext i32 %13419 to i64, !dbg !342
  %13421 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13420, !dbg !342
  %13422 = load double, ptr %13421, align 16, !dbg !343
  %13423 = load double, ptr %6, align 8, !dbg !344
  %13424 = fcmp oeq double %13422, %13423, !dbg !345
  br i1 %13424, label %13425, label %13434, !dbg !346

13425:                                            ; preds = %13418
  %13426 = load i32, ptr %10, align 4, !dbg !347
  %13427 = sext i32 %13426 to i64, !dbg !348
  %13428 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13427, !dbg !348
  %13429 = getelementptr inbounds %struct.POINT, ptr %13428, i32 0, i32 1, !dbg !349
  %13430 = load double, ptr %13429, align 8, !dbg !349
  %13431 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13432 = load double, ptr %13431, align 8, !dbg !350
  %13433 = fcmp oeq double %13430, %13432, !dbg !351
  br i1 %13433, label %5429, label %13434, !dbg !352

13434:                                            ; preds = %13425, %13418
  br label %13435, !dbg !356

13435:                                            ; preds = %13434
  %13436 = load i32, ptr %10, align 4, !dbg !357
  %13437 = add nsw i32 %13436, 1, !dbg !357
  store i32 %13437, ptr %10, align 4, !dbg !357
  %13438 = load i32, ptr %10, align 4, !dbg !334
  %13439 = load i32, ptr %8, align 4, !dbg !336
  %13440 = icmp slt i32 %13438, %13439, !dbg !337
  br i1 %13440, label %13441, label %14243, !dbg !338

13441:                                            ; preds = %13435
  %13442 = load i32, ptr %10, align 4, !dbg !339
  %13443 = sext i32 %13442 to i64, !dbg !342
  %13444 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13443, !dbg !342
  %13445 = load double, ptr %13444, align 16, !dbg !343
  %13446 = load double, ptr %6, align 8, !dbg !344
  %13447 = fcmp oeq double %13445, %13446, !dbg !345
  br i1 %13447, label %13448, label %13457, !dbg !346

13448:                                            ; preds = %13441
  %13449 = load i32, ptr %10, align 4, !dbg !347
  %13450 = sext i32 %13449 to i64, !dbg !348
  %13451 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13450, !dbg !348
  %13452 = getelementptr inbounds %struct.POINT, ptr %13451, i32 0, i32 1, !dbg !349
  %13453 = load double, ptr %13452, align 8, !dbg !349
  %13454 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13455 = load double, ptr %13454, align 8, !dbg !350
  %13456 = fcmp oeq double %13453, %13455, !dbg !351
  br i1 %13456, label %5429, label %13457, !dbg !352

13457:                                            ; preds = %13448, %13441
  br label %13458, !dbg !356

13458:                                            ; preds = %13457
  %13459 = load i32, ptr %10, align 4, !dbg !357
  %13460 = add nsw i32 %13459, 1, !dbg !357
  store i32 %13460, ptr %10, align 4, !dbg !357
  %13461 = load i32, ptr %10, align 4, !dbg !334
  %13462 = load i32, ptr %8, align 4, !dbg !336
  %13463 = icmp slt i32 %13461, %13462, !dbg !337
  br i1 %13463, label %13464, label %14243, !dbg !338

13464:                                            ; preds = %13458
  %13465 = load i32, ptr %10, align 4, !dbg !339
  %13466 = sext i32 %13465 to i64, !dbg !342
  %13467 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13466, !dbg !342
  %13468 = load double, ptr %13467, align 16, !dbg !343
  %13469 = load double, ptr %6, align 8, !dbg !344
  %13470 = fcmp oeq double %13468, %13469, !dbg !345
  br i1 %13470, label %13471, label %13480, !dbg !346

13471:                                            ; preds = %13464
  %13472 = load i32, ptr %10, align 4, !dbg !347
  %13473 = sext i32 %13472 to i64, !dbg !348
  %13474 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13473, !dbg !348
  %13475 = getelementptr inbounds %struct.POINT, ptr %13474, i32 0, i32 1, !dbg !349
  %13476 = load double, ptr %13475, align 8, !dbg !349
  %13477 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13478 = load double, ptr %13477, align 8, !dbg !350
  %13479 = fcmp oeq double %13476, %13478, !dbg !351
  br i1 %13479, label %5429, label %13480, !dbg !352

13480:                                            ; preds = %13471, %13464
  br label %13481, !dbg !356

13481:                                            ; preds = %13480
  %13482 = load i32, ptr %10, align 4, !dbg !357
  %13483 = add nsw i32 %13482, 1, !dbg !357
  store i32 %13483, ptr %10, align 4, !dbg !357
  %13484 = load i32, ptr %10, align 4, !dbg !334
  %13485 = load i32, ptr %8, align 4, !dbg !336
  %13486 = icmp slt i32 %13484, %13485, !dbg !337
  br i1 %13486, label %13487, label %14243, !dbg !338

13487:                                            ; preds = %13481
  %13488 = load i32, ptr %10, align 4, !dbg !339
  %13489 = sext i32 %13488 to i64, !dbg !342
  %13490 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13489, !dbg !342
  %13491 = load double, ptr %13490, align 16, !dbg !343
  %13492 = load double, ptr %6, align 8, !dbg !344
  %13493 = fcmp oeq double %13491, %13492, !dbg !345
  br i1 %13493, label %13494, label %13503, !dbg !346

13494:                                            ; preds = %13487
  %13495 = load i32, ptr %10, align 4, !dbg !347
  %13496 = sext i32 %13495 to i64, !dbg !348
  %13497 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13496, !dbg !348
  %13498 = getelementptr inbounds %struct.POINT, ptr %13497, i32 0, i32 1, !dbg !349
  %13499 = load double, ptr %13498, align 8, !dbg !349
  %13500 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13501 = load double, ptr %13500, align 8, !dbg !350
  %13502 = fcmp oeq double %13499, %13501, !dbg !351
  br i1 %13502, label %5429, label %13503, !dbg !352

13503:                                            ; preds = %13494, %13487
  br label %13504, !dbg !356

13504:                                            ; preds = %13503
  %13505 = load i32, ptr %10, align 4, !dbg !357
  %13506 = add nsw i32 %13505, 1, !dbg !357
  store i32 %13506, ptr %10, align 4, !dbg !357
  %13507 = load i32, ptr %10, align 4, !dbg !334
  %13508 = load i32, ptr %8, align 4, !dbg !336
  %13509 = icmp slt i32 %13507, %13508, !dbg !337
  br i1 %13509, label %13510, label %14243, !dbg !338

13510:                                            ; preds = %13504
  %13511 = load i32, ptr %10, align 4, !dbg !339
  %13512 = sext i32 %13511 to i64, !dbg !342
  %13513 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13512, !dbg !342
  %13514 = load double, ptr %13513, align 16, !dbg !343
  %13515 = load double, ptr %6, align 8, !dbg !344
  %13516 = fcmp oeq double %13514, %13515, !dbg !345
  br i1 %13516, label %13517, label %13526, !dbg !346

13517:                                            ; preds = %13510
  %13518 = load i32, ptr %10, align 4, !dbg !347
  %13519 = sext i32 %13518 to i64, !dbg !348
  %13520 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13519, !dbg !348
  %13521 = getelementptr inbounds %struct.POINT, ptr %13520, i32 0, i32 1, !dbg !349
  %13522 = load double, ptr %13521, align 8, !dbg !349
  %13523 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13524 = load double, ptr %13523, align 8, !dbg !350
  %13525 = fcmp oeq double %13522, %13524, !dbg !351
  br i1 %13525, label %5429, label %13526, !dbg !352

13526:                                            ; preds = %13517, %13510
  br label %13527, !dbg !356

13527:                                            ; preds = %13526
  %13528 = load i32, ptr %10, align 4, !dbg !357
  %13529 = add nsw i32 %13528, 1, !dbg !357
  store i32 %13529, ptr %10, align 4, !dbg !357
  %13530 = load i32, ptr %10, align 4, !dbg !334
  %13531 = load i32, ptr %8, align 4, !dbg !336
  %13532 = icmp slt i32 %13530, %13531, !dbg !337
  br i1 %13532, label %13533, label %14243, !dbg !338

13533:                                            ; preds = %13527
  %13534 = load i32, ptr %10, align 4, !dbg !339
  %13535 = sext i32 %13534 to i64, !dbg !342
  %13536 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13535, !dbg !342
  %13537 = load double, ptr %13536, align 16, !dbg !343
  %13538 = load double, ptr %6, align 8, !dbg !344
  %13539 = fcmp oeq double %13537, %13538, !dbg !345
  br i1 %13539, label %13540, label %13549, !dbg !346

13540:                                            ; preds = %13533
  %13541 = load i32, ptr %10, align 4, !dbg !347
  %13542 = sext i32 %13541 to i64, !dbg !348
  %13543 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13542, !dbg !348
  %13544 = getelementptr inbounds %struct.POINT, ptr %13543, i32 0, i32 1, !dbg !349
  %13545 = load double, ptr %13544, align 8, !dbg !349
  %13546 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13547 = load double, ptr %13546, align 8, !dbg !350
  %13548 = fcmp oeq double %13545, %13547, !dbg !351
  br i1 %13548, label %5429, label %13549, !dbg !352

13549:                                            ; preds = %13540, %13533
  br label %13550, !dbg !356

13550:                                            ; preds = %13549
  %13551 = load i32, ptr %10, align 4, !dbg !357
  %13552 = add nsw i32 %13551, 1, !dbg !357
  store i32 %13552, ptr %10, align 4, !dbg !357
  %13553 = load i32, ptr %10, align 4, !dbg !334
  %13554 = load i32, ptr %8, align 4, !dbg !336
  %13555 = icmp slt i32 %13553, %13554, !dbg !337
  br i1 %13555, label %13556, label %14243, !dbg !338

13556:                                            ; preds = %13550
  %13557 = load i32, ptr %10, align 4, !dbg !339
  %13558 = sext i32 %13557 to i64, !dbg !342
  %13559 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13558, !dbg !342
  %13560 = load double, ptr %13559, align 16, !dbg !343
  %13561 = load double, ptr %6, align 8, !dbg !344
  %13562 = fcmp oeq double %13560, %13561, !dbg !345
  br i1 %13562, label %13563, label %13572, !dbg !346

13563:                                            ; preds = %13556
  %13564 = load i32, ptr %10, align 4, !dbg !347
  %13565 = sext i32 %13564 to i64, !dbg !348
  %13566 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13565, !dbg !348
  %13567 = getelementptr inbounds %struct.POINT, ptr %13566, i32 0, i32 1, !dbg !349
  %13568 = load double, ptr %13567, align 8, !dbg !349
  %13569 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13570 = load double, ptr %13569, align 8, !dbg !350
  %13571 = fcmp oeq double %13568, %13570, !dbg !351
  br i1 %13571, label %5429, label %13572, !dbg !352

13572:                                            ; preds = %13563, %13556
  br label %13573, !dbg !356

13573:                                            ; preds = %13572
  %13574 = load i32, ptr %10, align 4, !dbg !357
  %13575 = add nsw i32 %13574, 1, !dbg !357
  store i32 %13575, ptr %10, align 4, !dbg !357
  %13576 = load i32, ptr %10, align 4, !dbg !334
  %13577 = load i32, ptr %8, align 4, !dbg !336
  %13578 = icmp slt i32 %13576, %13577, !dbg !337
  br i1 %13578, label %13579, label %14243, !dbg !338

13579:                                            ; preds = %13573
  %13580 = load i32, ptr %10, align 4, !dbg !339
  %13581 = sext i32 %13580 to i64, !dbg !342
  %13582 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13581, !dbg !342
  %13583 = load double, ptr %13582, align 16, !dbg !343
  %13584 = load double, ptr %6, align 8, !dbg !344
  %13585 = fcmp oeq double %13583, %13584, !dbg !345
  br i1 %13585, label %13586, label %13595, !dbg !346

13586:                                            ; preds = %13579
  %13587 = load i32, ptr %10, align 4, !dbg !347
  %13588 = sext i32 %13587 to i64, !dbg !348
  %13589 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13588, !dbg !348
  %13590 = getelementptr inbounds %struct.POINT, ptr %13589, i32 0, i32 1, !dbg !349
  %13591 = load double, ptr %13590, align 8, !dbg !349
  %13592 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13593 = load double, ptr %13592, align 8, !dbg !350
  %13594 = fcmp oeq double %13591, %13593, !dbg !351
  br i1 %13594, label %5429, label %13595, !dbg !352

13595:                                            ; preds = %13586, %13579
  br label %13596, !dbg !356

13596:                                            ; preds = %13595
  %13597 = load i32, ptr %10, align 4, !dbg !357
  %13598 = add nsw i32 %13597, 1, !dbg !357
  store i32 %13598, ptr %10, align 4, !dbg !357
  %13599 = load i32, ptr %10, align 4, !dbg !334
  %13600 = load i32, ptr %8, align 4, !dbg !336
  %13601 = icmp slt i32 %13599, %13600, !dbg !337
  br i1 %13601, label %13602, label %14243, !dbg !338

13602:                                            ; preds = %13596
  %13603 = load i32, ptr %10, align 4, !dbg !339
  %13604 = sext i32 %13603 to i64, !dbg !342
  %13605 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13604, !dbg !342
  %13606 = load double, ptr %13605, align 16, !dbg !343
  %13607 = load double, ptr %6, align 8, !dbg !344
  %13608 = fcmp oeq double %13606, %13607, !dbg !345
  br i1 %13608, label %13609, label %13618, !dbg !346

13609:                                            ; preds = %13602
  %13610 = load i32, ptr %10, align 4, !dbg !347
  %13611 = sext i32 %13610 to i64, !dbg !348
  %13612 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13611, !dbg !348
  %13613 = getelementptr inbounds %struct.POINT, ptr %13612, i32 0, i32 1, !dbg !349
  %13614 = load double, ptr %13613, align 8, !dbg !349
  %13615 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13616 = load double, ptr %13615, align 8, !dbg !350
  %13617 = fcmp oeq double %13614, %13616, !dbg !351
  br i1 %13617, label %5429, label %13618, !dbg !352

13618:                                            ; preds = %13609, %13602
  br label %13619, !dbg !356

13619:                                            ; preds = %13618
  %13620 = load i32, ptr %10, align 4, !dbg !357
  %13621 = add nsw i32 %13620, 1, !dbg !357
  store i32 %13621, ptr %10, align 4, !dbg !357
  %13622 = load i32, ptr %10, align 4, !dbg !334
  %13623 = load i32, ptr %8, align 4, !dbg !336
  %13624 = icmp slt i32 %13622, %13623, !dbg !337
  br i1 %13624, label %13625, label %14243, !dbg !338

13625:                                            ; preds = %13619
  %13626 = load i32, ptr %10, align 4, !dbg !339
  %13627 = sext i32 %13626 to i64, !dbg !342
  %13628 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13627, !dbg !342
  %13629 = load double, ptr %13628, align 16, !dbg !343
  %13630 = load double, ptr %6, align 8, !dbg !344
  %13631 = fcmp oeq double %13629, %13630, !dbg !345
  br i1 %13631, label %13632, label %13641, !dbg !346

13632:                                            ; preds = %13625
  %13633 = load i32, ptr %10, align 4, !dbg !347
  %13634 = sext i32 %13633 to i64, !dbg !348
  %13635 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13634, !dbg !348
  %13636 = getelementptr inbounds %struct.POINT, ptr %13635, i32 0, i32 1, !dbg !349
  %13637 = load double, ptr %13636, align 8, !dbg !349
  %13638 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13639 = load double, ptr %13638, align 8, !dbg !350
  %13640 = fcmp oeq double %13637, %13639, !dbg !351
  br i1 %13640, label %5429, label %13641, !dbg !352

13641:                                            ; preds = %13632, %13625
  br label %13642, !dbg !356

13642:                                            ; preds = %13641
  %13643 = load i32, ptr %10, align 4, !dbg !357
  %13644 = add nsw i32 %13643, 1, !dbg !357
  store i32 %13644, ptr %10, align 4, !dbg !357
  %13645 = load i32, ptr %10, align 4, !dbg !334
  %13646 = load i32, ptr %8, align 4, !dbg !336
  %13647 = icmp slt i32 %13645, %13646, !dbg !337
  br i1 %13647, label %13648, label %14243, !dbg !338

13648:                                            ; preds = %13642
  %13649 = load i32, ptr %10, align 4, !dbg !339
  %13650 = sext i32 %13649 to i64, !dbg !342
  %13651 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13650, !dbg !342
  %13652 = load double, ptr %13651, align 16, !dbg !343
  %13653 = load double, ptr %6, align 8, !dbg !344
  %13654 = fcmp oeq double %13652, %13653, !dbg !345
  br i1 %13654, label %13655, label %13664, !dbg !346

13655:                                            ; preds = %13648
  %13656 = load i32, ptr %10, align 4, !dbg !347
  %13657 = sext i32 %13656 to i64, !dbg !348
  %13658 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13657, !dbg !348
  %13659 = getelementptr inbounds %struct.POINT, ptr %13658, i32 0, i32 1, !dbg !349
  %13660 = load double, ptr %13659, align 8, !dbg !349
  %13661 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13662 = load double, ptr %13661, align 8, !dbg !350
  %13663 = fcmp oeq double %13660, %13662, !dbg !351
  br i1 %13663, label %5429, label %13664, !dbg !352

13664:                                            ; preds = %13655, %13648
  br label %13665, !dbg !356

13665:                                            ; preds = %13664
  %13666 = load i32, ptr %10, align 4, !dbg !357
  %13667 = add nsw i32 %13666, 1, !dbg !357
  store i32 %13667, ptr %10, align 4, !dbg !357
  %13668 = load i32, ptr %10, align 4, !dbg !334
  %13669 = load i32, ptr %8, align 4, !dbg !336
  %13670 = icmp slt i32 %13668, %13669, !dbg !337
  br i1 %13670, label %13671, label %14243, !dbg !338

13671:                                            ; preds = %13665
  %13672 = load i32, ptr %10, align 4, !dbg !339
  %13673 = sext i32 %13672 to i64, !dbg !342
  %13674 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13673, !dbg !342
  %13675 = load double, ptr %13674, align 16, !dbg !343
  %13676 = load double, ptr %6, align 8, !dbg !344
  %13677 = fcmp oeq double %13675, %13676, !dbg !345
  br i1 %13677, label %13678, label %13687, !dbg !346

13678:                                            ; preds = %13671
  %13679 = load i32, ptr %10, align 4, !dbg !347
  %13680 = sext i32 %13679 to i64, !dbg !348
  %13681 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13680, !dbg !348
  %13682 = getelementptr inbounds %struct.POINT, ptr %13681, i32 0, i32 1, !dbg !349
  %13683 = load double, ptr %13682, align 8, !dbg !349
  %13684 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13685 = load double, ptr %13684, align 8, !dbg !350
  %13686 = fcmp oeq double %13683, %13685, !dbg !351
  br i1 %13686, label %5429, label %13687, !dbg !352

13687:                                            ; preds = %13678, %13671
  br label %13688, !dbg !356

13688:                                            ; preds = %13687
  %13689 = load i32, ptr %10, align 4, !dbg !357
  %13690 = add nsw i32 %13689, 1, !dbg !357
  store i32 %13690, ptr %10, align 4, !dbg !357
  %13691 = load i32, ptr %10, align 4, !dbg !334
  %13692 = load i32, ptr %8, align 4, !dbg !336
  %13693 = icmp slt i32 %13691, %13692, !dbg !337
  br i1 %13693, label %13694, label %14243, !dbg !338

13694:                                            ; preds = %13688
  %13695 = load i32, ptr %10, align 4, !dbg !339
  %13696 = sext i32 %13695 to i64, !dbg !342
  %13697 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13696, !dbg !342
  %13698 = load double, ptr %13697, align 16, !dbg !343
  %13699 = load double, ptr %6, align 8, !dbg !344
  %13700 = fcmp oeq double %13698, %13699, !dbg !345
  br i1 %13700, label %13701, label %13710, !dbg !346

13701:                                            ; preds = %13694
  %13702 = load i32, ptr %10, align 4, !dbg !347
  %13703 = sext i32 %13702 to i64, !dbg !348
  %13704 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13703, !dbg !348
  %13705 = getelementptr inbounds %struct.POINT, ptr %13704, i32 0, i32 1, !dbg !349
  %13706 = load double, ptr %13705, align 8, !dbg !349
  %13707 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13708 = load double, ptr %13707, align 8, !dbg !350
  %13709 = fcmp oeq double %13706, %13708, !dbg !351
  br i1 %13709, label %5429, label %13710, !dbg !352

13710:                                            ; preds = %13701, %13694
  br label %13711, !dbg !356

13711:                                            ; preds = %13710
  %13712 = load i32, ptr %10, align 4, !dbg !357
  %13713 = add nsw i32 %13712, 1, !dbg !357
  store i32 %13713, ptr %10, align 4, !dbg !357
  %13714 = load i32, ptr %10, align 4, !dbg !334
  %13715 = load i32, ptr %8, align 4, !dbg !336
  %13716 = icmp slt i32 %13714, %13715, !dbg !337
  br i1 %13716, label %13717, label %14243, !dbg !338

13717:                                            ; preds = %13711
  %13718 = load i32, ptr %10, align 4, !dbg !339
  %13719 = sext i32 %13718 to i64, !dbg !342
  %13720 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13719, !dbg !342
  %13721 = load double, ptr %13720, align 16, !dbg !343
  %13722 = load double, ptr %6, align 8, !dbg !344
  %13723 = fcmp oeq double %13721, %13722, !dbg !345
  br i1 %13723, label %13724, label %13733, !dbg !346

13724:                                            ; preds = %13717
  %13725 = load i32, ptr %10, align 4, !dbg !347
  %13726 = sext i32 %13725 to i64, !dbg !348
  %13727 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13726, !dbg !348
  %13728 = getelementptr inbounds %struct.POINT, ptr %13727, i32 0, i32 1, !dbg !349
  %13729 = load double, ptr %13728, align 8, !dbg !349
  %13730 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13731 = load double, ptr %13730, align 8, !dbg !350
  %13732 = fcmp oeq double %13729, %13731, !dbg !351
  br i1 %13732, label %5429, label %13733, !dbg !352

13733:                                            ; preds = %13724, %13717
  br label %13734, !dbg !356

13734:                                            ; preds = %13733
  %13735 = load i32, ptr %10, align 4, !dbg !357
  %13736 = add nsw i32 %13735, 1, !dbg !357
  store i32 %13736, ptr %10, align 4, !dbg !357
  %13737 = load i32, ptr %10, align 4, !dbg !334
  %13738 = load i32, ptr %8, align 4, !dbg !336
  %13739 = icmp slt i32 %13737, %13738, !dbg !337
  br i1 %13739, label %13740, label %14243, !dbg !338

13740:                                            ; preds = %13734
  %13741 = load i32, ptr %10, align 4, !dbg !339
  %13742 = sext i32 %13741 to i64, !dbg !342
  %13743 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13742, !dbg !342
  %13744 = load double, ptr %13743, align 16, !dbg !343
  %13745 = load double, ptr %6, align 8, !dbg !344
  %13746 = fcmp oeq double %13744, %13745, !dbg !345
  br i1 %13746, label %13747, label %13756, !dbg !346

13747:                                            ; preds = %13740
  %13748 = load i32, ptr %10, align 4, !dbg !347
  %13749 = sext i32 %13748 to i64, !dbg !348
  %13750 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13749, !dbg !348
  %13751 = getelementptr inbounds %struct.POINT, ptr %13750, i32 0, i32 1, !dbg !349
  %13752 = load double, ptr %13751, align 8, !dbg !349
  %13753 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13754 = load double, ptr %13753, align 8, !dbg !350
  %13755 = fcmp oeq double %13752, %13754, !dbg !351
  br i1 %13755, label %5429, label %13756, !dbg !352

13756:                                            ; preds = %13747, %13740
  br label %13757, !dbg !356

13757:                                            ; preds = %13756
  %13758 = load i32, ptr %10, align 4, !dbg !357
  %13759 = add nsw i32 %13758, 1, !dbg !357
  store i32 %13759, ptr %10, align 4, !dbg !357
  %13760 = load i32, ptr %10, align 4, !dbg !334
  %13761 = load i32, ptr %8, align 4, !dbg !336
  %13762 = icmp slt i32 %13760, %13761, !dbg !337
  br i1 %13762, label %13763, label %14243, !dbg !338

13763:                                            ; preds = %13757
  %13764 = load i32, ptr %10, align 4, !dbg !339
  %13765 = sext i32 %13764 to i64, !dbg !342
  %13766 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13765, !dbg !342
  %13767 = load double, ptr %13766, align 16, !dbg !343
  %13768 = load double, ptr %6, align 8, !dbg !344
  %13769 = fcmp oeq double %13767, %13768, !dbg !345
  br i1 %13769, label %13770, label %13779, !dbg !346

13770:                                            ; preds = %13763
  %13771 = load i32, ptr %10, align 4, !dbg !347
  %13772 = sext i32 %13771 to i64, !dbg !348
  %13773 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13772, !dbg !348
  %13774 = getelementptr inbounds %struct.POINT, ptr %13773, i32 0, i32 1, !dbg !349
  %13775 = load double, ptr %13774, align 8, !dbg !349
  %13776 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13777 = load double, ptr %13776, align 8, !dbg !350
  %13778 = fcmp oeq double %13775, %13777, !dbg !351
  br i1 %13778, label %5429, label %13779, !dbg !352

13779:                                            ; preds = %13770, %13763
  br label %13780, !dbg !356

13780:                                            ; preds = %13779
  %13781 = load i32, ptr %10, align 4, !dbg !357
  %13782 = add nsw i32 %13781, 1, !dbg !357
  store i32 %13782, ptr %10, align 4, !dbg !357
  %13783 = load i32, ptr %10, align 4, !dbg !334
  %13784 = load i32, ptr %8, align 4, !dbg !336
  %13785 = icmp slt i32 %13783, %13784, !dbg !337
  br i1 %13785, label %13786, label %14243, !dbg !338

13786:                                            ; preds = %13780
  %13787 = load i32, ptr %10, align 4, !dbg !339
  %13788 = sext i32 %13787 to i64, !dbg !342
  %13789 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13788, !dbg !342
  %13790 = load double, ptr %13789, align 16, !dbg !343
  %13791 = load double, ptr %6, align 8, !dbg !344
  %13792 = fcmp oeq double %13790, %13791, !dbg !345
  br i1 %13792, label %13793, label %13802, !dbg !346

13793:                                            ; preds = %13786
  %13794 = load i32, ptr %10, align 4, !dbg !347
  %13795 = sext i32 %13794 to i64, !dbg !348
  %13796 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13795, !dbg !348
  %13797 = getelementptr inbounds %struct.POINT, ptr %13796, i32 0, i32 1, !dbg !349
  %13798 = load double, ptr %13797, align 8, !dbg !349
  %13799 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13800 = load double, ptr %13799, align 8, !dbg !350
  %13801 = fcmp oeq double %13798, %13800, !dbg !351
  br i1 %13801, label %5429, label %13802, !dbg !352

13802:                                            ; preds = %13793, %13786
  br label %13803, !dbg !356

13803:                                            ; preds = %13802
  %13804 = load i32, ptr %10, align 4, !dbg !357
  %13805 = add nsw i32 %13804, 1, !dbg !357
  store i32 %13805, ptr %10, align 4, !dbg !357
  %13806 = load i32, ptr %10, align 4, !dbg !334
  %13807 = load i32, ptr %8, align 4, !dbg !336
  %13808 = icmp slt i32 %13806, %13807, !dbg !337
  br i1 %13808, label %13809, label %14243, !dbg !338

13809:                                            ; preds = %13803
  %13810 = load i32, ptr %10, align 4, !dbg !339
  %13811 = sext i32 %13810 to i64, !dbg !342
  %13812 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13811, !dbg !342
  %13813 = load double, ptr %13812, align 16, !dbg !343
  %13814 = load double, ptr %6, align 8, !dbg !344
  %13815 = fcmp oeq double %13813, %13814, !dbg !345
  br i1 %13815, label %13816, label %13825, !dbg !346

13816:                                            ; preds = %13809
  %13817 = load i32, ptr %10, align 4, !dbg !347
  %13818 = sext i32 %13817 to i64, !dbg !348
  %13819 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13818, !dbg !348
  %13820 = getelementptr inbounds %struct.POINT, ptr %13819, i32 0, i32 1, !dbg !349
  %13821 = load double, ptr %13820, align 8, !dbg !349
  %13822 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13823 = load double, ptr %13822, align 8, !dbg !350
  %13824 = fcmp oeq double %13821, %13823, !dbg !351
  br i1 %13824, label %5429, label %13825, !dbg !352

13825:                                            ; preds = %13816, %13809
  br label %13826, !dbg !356

13826:                                            ; preds = %13825
  %13827 = load i32, ptr %10, align 4, !dbg !357
  %13828 = add nsw i32 %13827, 1, !dbg !357
  store i32 %13828, ptr %10, align 4, !dbg !357
  %13829 = load i32, ptr %10, align 4, !dbg !334
  %13830 = load i32, ptr %8, align 4, !dbg !336
  %13831 = icmp slt i32 %13829, %13830, !dbg !337
  br i1 %13831, label %13832, label %14243, !dbg !338

13832:                                            ; preds = %13826
  %13833 = load i32, ptr %10, align 4, !dbg !339
  %13834 = sext i32 %13833 to i64, !dbg !342
  %13835 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13834, !dbg !342
  %13836 = load double, ptr %13835, align 16, !dbg !343
  %13837 = load double, ptr %6, align 8, !dbg !344
  %13838 = fcmp oeq double %13836, %13837, !dbg !345
  br i1 %13838, label %13839, label %13848, !dbg !346

13839:                                            ; preds = %13832
  %13840 = load i32, ptr %10, align 4, !dbg !347
  %13841 = sext i32 %13840 to i64, !dbg !348
  %13842 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13841, !dbg !348
  %13843 = getelementptr inbounds %struct.POINT, ptr %13842, i32 0, i32 1, !dbg !349
  %13844 = load double, ptr %13843, align 8, !dbg !349
  %13845 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13846 = load double, ptr %13845, align 8, !dbg !350
  %13847 = fcmp oeq double %13844, %13846, !dbg !351
  br i1 %13847, label %5429, label %13848, !dbg !352

13848:                                            ; preds = %13839, %13832
  br label %13849, !dbg !356

13849:                                            ; preds = %13848
  %13850 = load i32, ptr %10, align 4, !dbg !357
  %13851 = add nsw i32 %13850, 1, !dbg !357
  store i32 %13851, ptr %10, align 4, !dbg !357
  %13852 = load i32, ptr %10, align 4, !dbg !334
  %13853 = load i32, ptr %8, align 4, !dbg !336
  %13854 = icmp slt i32 %13852, %13853, !dbg !337
  br i1 %13854, label %13855, label %14243, !dbg !338

13855:                                            ; preds = %13849
  %13856 = load i32, ptr %10, align 4, !dbg !339
  %13857 = sext i32 %13856 to i64, !dbg !342
  %13858 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13857, !dbg !342
  %13859 = load double, ptr %13858, align 16, !dbg !343
  %13860 = load double, ptr %6, align 8, !dbg !344
  %13861 = fcmp oeq double %13859, %13860, !dbg !345
  br i1 %13861, label %13862, label %13871, !dbg !346

13862:                                            ; preds = %13855
  %13863 = load i32, ptr %10, align 4, !dbg !347
  %13864 = sext i32 %13863 to i64, !dbg !348
  %13865 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13864, !dbg !348
  %13866 = getelementptr inbounds %struct.POINT, ptr %13865, i32 0, i32 1, !dbg !349
  %13867 = load double, ptr %13866, align 8, !dbg !349
  %13868 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13869 = load double, ptr %13868, align 8, !dbg !350
  %13870 = fcmp oeq double %13867, %13869, !dbg !351
  br i1 %13870, label %5429, label %13871, !dbg !352

13871:                                            ; preds = %13862, %13855
  br label %13872, !dbg !356

13872:                                            ; preds = %13871
  %13873 = load i32, ptr %10, align 4, !dbg !357
  %13874 = add nsw i32 %13873, 1, !dbg !357
  store i32 %13874, ptr %10, align 4, !dbg !357
  %13875 = load i32, ptr %10, align 4, !dbg !334
  %13876 = load i32, ptr %8, align 4, !dbg !336
  %13877 = icmp slt i32 %13875, %13876, !dbg !337
  br i1 %13877, label %13878, label %14243, !dbg !338

13878:                                            ; preds = %13872
  %13879 = load i32, ptr %10, align 4, !dbg !339
  %13880 = sext i32 %13879 to i64, !dbg !342
  %13881 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13880, !dbg !342
  %13882 = load double, ptr %13881, align 16, !dbg !343
  %13883 = load double, ptr %6, align 8, !dbg !344
  %13884 = fcmp oeq double %13882, %13883, !dbg !345
  br i1 %13884, label %13885, label %13894, !dbg !346

13885:                                            ; preds = %13878
  %13886 = load i32, ptr %10, align 4, !dbg !347
  %13887 = sext i32 %13886 to i64, !dbg !348
  %13888 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13887, !dbg !348
  %13889 = getelementptr inbounds %struct.POINT, ptr %13888, i32 0, i32 1, !dbg !349
  %13890 = load double, ptr %13889, align 8, !dbg !349
  %13891 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13892 = load double, ptr %13891, align 8, !dbg !350
  %13893 = fcmp oeq double %13890, %13892, !dbg !351
  br i1 %13893, label %5429, label %13894, !dbg !352

13894:                                            ; preds = %13885, %13878
  br label %13895, !dbg !356

13895:                                            ; preds = %13894
  %13896 = load i32, ptr %10, align 4, !dbg !357
  %13897 = add nsw i32 %13896, 1, !dbg !357
  store i32 %13897, ptr %10, align 4, !dbg !357
  %13898 = load i32, ptr %10, align 4, !dbg !334
  %13899 = load i32, ptr %8, align 4, !dbg !336
  %13900 = icmp slt i32 %13898, %13899, !dbg !337
  br i1 %13900, label %13901, label %14243, !dbg !338

13901:                                            ; preds = %13895
  %13902 = load i32, ptr %10, align 4, !dbg !339
  %13903 = sext i32 %13902 to i64, !dbg !342
  %13904 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13903, !dbg !342
  %13905 = load double, ptr %13904, align 16, !dbg !343
  %13906 = load double, ptr %6, align 8, !dbg !344
  %13907 = fcmp oeq double %13905, %13906, !dbg !345
  br i1 %13907, label %13908, label %13917, !dbg !346

13908:                                            ; preds = %13901
  %13909 = load i32, ptr %10, align 4, !dbg !347
  %13910 = sext i32 %13909 to i64, !dbg !348
  %13911 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13910, !dbg !348
  %13912 = getelementptr inbounds %struct.POINT, ptr %13911, i32 0, i32 1, !dbg !349
  %13913 = load double, ptr %13912, align 8, !dbg !349
  %13914 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13915 = load double, ptr %13914, align 8, !dbg !350
  %13916 = fcmp oeq double %13913, %13915, !dbg !351
  br i1 %13916, label %5429, label %13917, !dbg !352

13917:                                            ; preds = %13908, %13901
  br label %13918, !dbg !356

13918:                                            ; preds = %13917
  %13919 = load i32, ptr %10, align 4, !dbg !357
  %13920 = add nsw i32 %13919, 1, !dbg !357
  store i32 %13920, ptr %10, align 4, !dbg !357
  %13921 = load i32, ptr %10, align 4, !dbg !334
  %13922 = load i32, ptr %8, align 4, !dbg !336
  %13923 = icmp slt i32 %13921, %13922, !dbg !337
  br i1 %13923, label %13924, label %14243, !dbg !338

13924:                                            ; preds = %13918
  %13925 = load i32, ptr %10, align 4, !dbg !339
  %13926 = sext i32 %13925 to i64, !dbg !342
  %13927 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13926, !dbg !342
  %13928 = load double, ptr %13927, align 16, !dbg !343
  %13929 = load double, ptr %6, align 8, !dbg !344
  %13930 = fcmp oeq double %13928, %13929, !dbg !345
  br i1 %13930, label %13931, label %13940, !dbg !346

13931:                                            ; preds = %13924
  %13932 = load i32, ptr %10, align 4, !dbg !347
  %13933 = sext i32 %13932 to i64, !dbg !348
  %13934 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13933, !dbg !348
  %13935 = getelementptr inbounds %struct.POINT, ptr %13934, i32 0, i32 1, !dbg !349
  %13936 = load double, ptr %13935, align 8, !dbg !349
  %13937 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13938 = load double, ptr %13937, align 8, !dbg !350
  %13939 = fcmp oeq double %13936, %13938, !dbg !351
  br i1 %13939, label %5429, label %13940, !dbg !352

13940:                                            ; preds = %13931, %13924
  br label %13941, !dbg !356

13941:                                            ; preds = %13940
  %13942 = load i32, ptr %10, align 4, !dbg !357
  %13943 = add nsw i32 %13942, 1, !dbg !357
  store i32 %13943, ptr %10, align 4, !dbg !357
  %13944 = load i32, ptr %10, align 4, !dbg !334
  %13945 = load i32, ptr %8, align 4, !dbg !336
  %13946 = icmp slt i32 %13944, %13945, !dbg !337
  br i1 %13946, label %13947, label %14243, !dbg !338

13947:                                            ; preds = %13941
  %13948 = load i32, ptr %10, align 4, !dbg !339
  %13949 = sext i32 %13948 to i64, !dbg !342
  %13950 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13949, !dbg !342
  %13951 = load double, ptr %13950, align 16, !dbg !343
  %13952 = load double, ptr %6, align 8, !dbg !344
  %13953 = fcmp oeq double %13951, %13952, !dbg !345
  br i1 %13953, label %13954, label %13963, !dbg !346

13954:                                            ; preds = %13947
  %13955 = load i32, ptr %10, align 4, !dbg !347
  %13956 = sext i32 %13955 to i64, !dbg !348
  %13957 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13956, !dbg !348
  %13958 = getelementptr inbounds %struct.POINT, ptr %13957, i32 0, i32 1, !dbg !349
  %13959 = load double, ptr %13958, align 8, !dbg !349
  %13960 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13961 = load double, ptr %13960, align 8, !dbg !350
  %13962 = fcmp oeq double %13959, %13961, !dbg !351
  br i1 %13962, label %5429, label %13963, !dbg !352

13963:                                            ; preds = %13954, %13947
  br label %13964, !dbg !356

13964:                                            ; preds = %13963
  %13965 = load i32, ptr %10, align 4, !dbg !357
  %13966 = add nsw i32 %13965, 1, !dbg !357
  store i32 %13966, ptr %10, align 4, !dbg !357
  %13967 = load i32, ptr %10, align 4, !dbg !334
  %13968 = load i32, ptr %8, align 4, !dbg !336
  %13969 = icmp slt i32 %13967, %13968, !dbg !337
  br i1 %13969, label %13970, label %14243, !dbg !338

13970:                                            ; preds = %13964
  %13971 = load i32, ptr %10, align 4, !dbg !339
  %13972 = sext i32 %13971 to i64, !dbg !342
  %13973 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13972, !dbg !342
  %13974 = load double, ptr %13973, align 16, !dbg !343
  %13975 = load double, ptr %6, align 8, !dbg !344
  %13976 = fcmp oeq double %13974, %13975, !dbg !345
  br i1 %13976, label %13977, label %13986, !dbg !346

13977:                                            ; preds = %13970
  %13978 = load i32, ptr %10, align 4, !dbg !347
  %13979 = sext i32 %13978 to i64, !dbg !348
  %13980 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13979, !dbg !348
  %13981 = getelementptr inbounds %struct.POINT, ptr %13980, i32 0, i32 1, !dbg !349
  %13982 = load double, ptr %13981, align 8, !dbg !349
  %13983 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %13984 = load double, ptr %13983, align 8, !dbg !350
  %13985 = fcmp oeq double %13982, %13984, !dbg !351
  br i1 %13985, label %5429, label %13986, !dbg !352

13986:                                            ; preds = %13977, %13970
  br label %13987, !dbg !356

13987:                                            ; preds = %13986
  %13988 = load i32, ptr %10, align 4, !dbg !357
  %13989 = add nsw i32 %13988, 1, !dbg !357
  store i32 %13989, ptr %10, align 4, !dbg !357
  %13990 = load i32, ptr %10, align 4, !dbg !334
  %13991 = load i32, ptr %8, align 4, !dbg !336
  %13992 = icmp slt i32 %13990, %13991, !dbg !337
  br i1 %13992, label %13993, label %14243, !dbg !338

13993:                                            ; preds = %13987
  %13994 = load i32, ptr %10, align 4, !dbg !339
  %13995 = sext i32 %13994 to i64, !dbg !342
  %13996 = getelementptr inbounds %struct.POINT, ptr %26, i64 %13995, !dbg !342
  %13997 = load double, ptr %13996, align 16, !dbg !343
  %13998 = load double, ptr %6, align 8, !dbg !344
  %13999 = fcmp oeq double %13997, %13998, !dbg !345
  br i1 %13999, label %14000, label %14009, !dbg !346

14000:                                            ; preds = %13993
  %14001 = load i32, ptr %10, align 4, !dbg !347
  %14002 = sext i32 %14001 to i64, !dbg !348
  %14003 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14002, !dbg !348
  %14004 = getelementptr inbounds %struct.POINT, ptr %14003, i32 0, i32 1, !dbg !349
  %14005 = load double, ptr %14004, align 8, !dbg !349
  %14006 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14007 = load double, ptr %14006, align 8, !dbg !350
  %14008 = fcmp oeq double %14005, %14007, !dbg !351
  br i1 %14008, label %5429, label %14009, !dbg !352

14009:                                            ; preds = %14000, %13993
  br label %14010, !dbg !356

14010:                                            ; preds = %14009
  %14011 = load i32, ptr %10, align 4, !dbg !357
  %14012 = add nsw i32 %14011, 1, !dbg !357
  store i32 %14012, ptr %10, align 4, !dbg !357
  %14013 = load i32, ptr %10, align 4, !dbg !334
  %14014 = load i32, ptr %8, align 4, !dbg !336
  %14015 = icmp slt i32 %14013, %14014, !dbg !337
  br i1 %14015, label %14016, label %14243, !dbg !338

14016:                                            ; preds = %14010
  %14017 = load i32, ptr %10, align 4, !dbg !339
  %14018 = sext i32 %14017 to i64, !dbg !342
  %14019 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14018, !dbg !342
  %14020 = load double, ptr %14019, align 16, !dbg !343
  %14021 = load double, ptr %6, align 8, !dbg !344
  %14022 = fcmp oeq double %14020, %14021, !dbg !345
  br i1 %14022, label %14023, label %14032, !dbg !346

14023:                                            ; preds = %14016
  %14024 = load i32, ptr %10, align 4, !dbg !347
  %14025 = sext i32 %14024 to i64, !dbg !348
  %14026 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14025, !dbg !348
  %14027 = getelementptr inbounds %struct.POINT, ptr %14026, i32 0, i32 1, !dbg !349
  %14028 = load double, ptr %14027, align 8, !dbg !349
  %14029 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14030 = load double, ptr %14029, align 8, !dbg !350
  %14031 = fcmp oeq double %14028, %14030, !dbg !351
  br i1 %14031, label %5429, label %14032, !dbg !352

14032:                                            ; preds = %14023, %14016
  br label %14033, !dbg !356

14033:                                            ; preds = %14032
  %14034 = load i32, ptr %10, align 4, !dbg !357
  %14035 = add nsw i32 %14034, 1, !dbg !357
  store i32 %14035, ptr %10, align 4, !dbg !357
  %14036 = load i32, ptr %10, align 4, !dbg !334
  %14037 = load i32, ptr %8, align 4, !dbg !336
  %14038 = icmp slt i32 %14036, %14037, !dbg !337
  br i1 %14038, label %14039, label %14243, !dbg !338

14039:                                            ; preds = %14033
  %14040 = load i32, ptr %10, align 4, !dbg !339
  %14041 = sext i32 %14040 to i64, !dbg !342
  %14042 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14041, !dbg !342
  %14043 = load double, ptr %14042, align 16, !dbg !343
  %14044 = load double, ptr %6, align 8, !dbg !344
  %14045 = fcmp oeq double %14043, %14044, !dbg !345
  br i1 %14045, label %14046, label %14055, !dbg !346

14046:                                            ; preds = %14039
  %14047 = load i32, ptr %10, align 4, !dbg !347
  %14048 = sext i32 %14047 to i64, !dbg !348
  %14049 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14048, !dbg !348
  %14050 = getelementptr inbounds %struct.POINT, ptr %14049, i32 0, i32 1, !dbg !349
  %14051 = load double, ptr %14050, align 8, !dbg !349
  %14052 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14053 = load double, ptr %14052, align 8, !dbg !350
  %14054 = fcmp oeq double %14051, %14053, !dbg !351
  br i1 %14054, label %5429, label %14055, !dbg !352

14055:                                            ; preds = %14046, %14039
  br label %14056, !dbg !356

14056:                                            ; preds = %14055
  %14057 = load i32, ptr %10, align 4, !dbg !357
  %14058 = add nsw i32 %14057, 1, !dbg !357
  store i32 %14058, ptr %10, align 4, !dbg !357
  %14059 = load i32, ptr %10, align 4, !dbg !334
  %14060 = load i32, ptr %8, align 4, !dbg !336
  %14061 = icmp slt i32 %14059, %14060, !dbg !337
  br i1 %14061, label %14062, label %14243, !dbg !338

14062:                                            ; preds = %14056
  %14063 = load i32, ptr %10, align 4, !dbg !339
  %14064 = sext i32 %14063 to i64, !dbg !342
  %14065 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14064, !dbg !342
  %14066 = load double, ptr %14065, align 16, !dbg !343
  %14067 = load double, ptr %6, align 8, !dbg !344
  %14068 = fcmp oeq double %14066, %14067, !dbg !345
  br i1 %14068, label %14069, label %14078, !dbg !346

14069:                                            ; preds = %14062
  %14070 = load i32, ptr %10, align 4, !dbg !347
  %14071 = sext i32 %14070 to i64, !dbg !348
  %14072 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14071, !dbg !348
  %14073 = getelementptr inbounds %struct.POINT, ptr %14072, i32 0, i32 1, !dbg !349
  %14074 = load double, ptr %14073, align 8, !dbg !349
  %14075 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14076 = load double, ptr %14075, align 8, !dbg !350
  %14077 = fcmp oeq double %14074, %14076, !dbg !351
  br i1 %14077, label %5429, label %14078, !dbg !352

14078:                                            ; preds = %14069, %14062
  br label %14079, !dbg !356

14079:                                            ; preds = %14078
  %14080 = load i32, ptr %10, align 4, !dbg !357
  %14081 = add nsw i32 %14080, 1, !dbg !357
  store i32 %14081, ptr %10, align 4, !dbg !357
  %14082 = load i32, ptr %10, align 4, !dbg !334
  %14083 = load i32, ptr %8, align 4, !dbg !336
  %14084 = icmp slt i32 %14082, %14083, !dbg !337
  br i1 %14084, label %14085, label %14243, !dbg !338

14085:                                            ; preds = %14079
  %14086 = load i32, ptr %10, align 4, !dbg !339
  %14087 = sext i32 %14086 to i64, !dbg !342
  %14088 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14087, !dbg !342
  %14089 = load double, ptr %14088, align 16, !dbg !343
  %14090 = load double, ptr %6, align 8, !dbg !344
  %14091 = fcmp oeq double %14089, %14090, !dbg !345
  br i1 %14091, label %14092, label %14101, !dbg !346

14092:                                            ; preds = %14085
  %14093 = load i32, ptr %10, align 4, !dbg !347
  %14094 = sext i32 %14093 to i64, !dbg !348
  %14095 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14094, !dbg !348
  %14096 = getelementptr inbounds %struct.POINT, ptr %14095, i32 0, i32 1, !dbg !349
  %14097 = load double, ptr %14096, align 8, !dbg !349
  %14098 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14099 = load double, ptr %14098, align 8, !dbg !350
  %14100 = fcmp oeq double %14097, %14099, !dbg !351
  br i1 %14100, label %5429, label %14101, !dbg !352

14101:                                            ; preds = %14092, %14085
  br label %14102, !dbg !356

14102:                                            ; preds = %14101
  %14103 = load i32, ptr %10, align 4, !dbg !357
  %14104 = add nsw i32 %14103, 1, !dbg !357
  store i32 %14104, ptr %10, align 4, !dbg !357
  %14105 = load i32, ptr %10, align 4, !dbg !334
  %14106 = load i32, ptr %8, align 4, !dbg !336
  %14107 = icmp slt i32 %14105, %14106, !dbg !337
  br i1 %14107, label %14108, label %14243, !dbg !338

14108:                                            ; preds = %14102
  %14109 = load i32, ptr %10, align 4, !dbg !339
  %14110 = sext i32 %14109 to i64, !dbg !342
  %14111 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14110, !dbg !342
  %14112 = load double, ptr %14111, align 16, !dbg !343
  %14113 = load double, ptr %6, align 8, !dbg !344
  %14114 = fcmp oeq double %14112, %14113, !dbg !345
  br i1 %14114, label %14115, label %14124, !dbg !346

14115:                                            ; preds = %14108
  %14116 = load i32, ptr %10, align 4, !dbg !347
  %14117 = sext i32 %14116 to i64, !dbg !348
  %14118 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14117, !dbg !348
  %14119 = getelementptr inbounds %struct.POINT, ptr %14118, i32 0, i32 1, !dbg !349
  %14120 = load double, ptr %14119, align 8, !dbg !349
  %14121 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14122 = load double, ptr %14121, align 8, !dbg !350
  %14123 = fcmp oeq double %14120, %14122, !dbg !351
  br i1 %14123, label %5429, label %14124, !dbg !352

14124:                                            ; preds = %14115, %14108
  br label %14125, !dbg !356

14125:                                            ; preds = %14124
  %14126 = load i32, ptr %10, align 4, !dbg !357
  %14127 = add nsw i32 %14126, 1, !dbg !357
  store i32 %14127, ptr %10, align 4, !dbg !357
  %14128 = load i32, ptr %10, align 4, !dbg !334
  %14129 = load i32, ptr %8, align 4, !dbg !336
  %14130 = icmp slt i32 %14128, %14129, !dbg !337
  br i1 %14130, label %14131, label %14243, !dbg !338

14131:                                            ; preds = %14125
  %14132 = load i32, ptr %10, align 4, !dbg !339
  %14133 = sext i32 %14132 to i64, !dbg !342
  %14134 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14133, !dbg !342
  %14135 = load double, ptr %14134, align 16, !dbg !343
  %14136 = load double, ptr %6, align 8, !dbg !344
  %14137 = fcmp oeq double %14135, %14136, !dbg !345
  br i1 %14137, label %14138, label %14147, !dbg !346

14138:                                            ; preds = %14131
  %14139 = load i32, ptr %10, align 4, !dbg !347
  %14140 = sext i32 %14139 to i64, !dbg !348
  %14141 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14140, !dbg !348
  %14142 = getelementptr inbounds %struct.POINT, ptr %14141, i32 0, i32 1, !dbg !349
  %14143 = load double, ptr %14142, align 8, !dbg !349
  %14144 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14145 = load double, ptr %14144, align 8, !dbg !350
  %14146 = fcmp oeq double %14143, %14145, !dbg !351
  br i1 %14146, label %5429, label %14147, !dbg !352

14147:                                            ; preds = %14138, %14131
  br label %14148, !dbg !356

14148:                                            ; preds = %14147
  %14149 = load i32, ptr %10, align 4, !dbg !357
  %14150 = add nsw i32 %14149, 1, !dbg !357
  store i32 %14150, ptr %10, align 4, !dbg !357
  %14151 = load i32, ptr %10, align 4, !dbg !334
  %14152 = load i32, ptr %8, align 4, !dbg !336
  %14153 = icmp slt i32 %14151, %14152, !dbg !337
  br i1 %14153, label %14154, label %14243, !dbg !338

14154:                                            ; preds = %14148
  %14155 = load i32, ptr %10, align 4, !dbg !339
  %14156 = sext i32 %14155 to i64, !dbg !342
  %14157 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14156, !dbg !342
  %14158 = load double, ptr %14157, align 16, !dbg !343
  %14159 = load double, ptr %6, align 8, !dbg !344
  %14160 = fcmp oeq double %14158, %14159, !dbg !345
  br i1 %14160, label %14161, label %14170, !dbg !346

14161:                                            ; preds = %14154
  %14162 = load i32, ptr %10, align 4, !dbg !347
  %14163 = sext i32 %14162 to i64, !dbg !348
  %14164 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14163, !dbg !348
  %14165 = getelementptr inbounds %struct.POINT, ptr %14164, i32 0, i32 1, !dbg !349
  %14166 = load double, ptr %14165, align 8, !dbg !349
  %14167 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14168 = load double, ptr %14167, align 8, !dbg !350
  %14169 = fcmp oeq double %14166, %14168, !dbg !351
  br i1 %14169, label %5429, label %14170, !dbg !352

14170:                                            ; preds = %14161, %14154
  br label %14171, !dbg !356

14171:                                            ; preds = %14170
  %14172 = load i32, ptr %10, align 4, !dbg !357
  %14173 = add nsw i32 %14172, 1, !dbg !357
  store i32 %14173, ptr %10, align 4, !dbg !357
  %14174 = load i32, ptr %10, align 4, !dbg !334
  %14175 = load i32, ptr %8, align 4, !dbg !336
  %14176 = icmp slt i32 %14174, %14175, !dbg !337
  br i1 %14176, label %14177, label %14243, !dbg !338

14177:                                            ; preds = %14171
  %14178 = load i32, ptr %10, align 4, !dbg !339
  %14179 = sext i32 %14178 to i64, !dbg !342
  %14180 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14179, !dbg !342
  %14181 = load double, ptr %14180, align 16, !dbg !343
  %14182 = load double, ptr %6, align 8, !dbg !344
  %14183 = fcmp oeq double %14181, %14182, !dbg !345
  br i1 %14183, label %14184, label %14193, !dbg !346

14184:                                            ; preds = %14177
  %14185 = load i32, ptr %10, align 4, !dbg !347
  %14186 = sext i32 %14185 to i64, !dbg !348
  %14187 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14186, !dbg !348
  %14188 = getelementptr inbounds %struct.POINT, ptr %14187, i32 0, i32 1, !dbg !349
  %14189 = load double, ptr %14188, align 8, !dbg !349
  %14190 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14191 = load double, ptr %14190, align 8, !dbg !350
  %14192 = fcmp oeq double %14189, %14191, !dbg !351
  br i1 %14192, label %5429, label %14193, !dbg !352

14193:                                            ; preds = %14184, %14177
  br label %14194, !dbg !356

14194:                                            ; preds = %14193
  %14195 = load i32, ptr %10, align 4, !dbg !357
  %14196 = add nsw i32 %14195, 1, !dbg !357
  store i32 %14196, ptr %10, align 4, !dbg !357
  %14197 = load i32, ptr %10, align 4, !dbg !334
  %14198 = load i32, ptr %8, align 4, !dbg !336
  %14199 = icmp slt i32 %14197, %14198, !dbg !337
  br i1 %14199, label %14200, label %14243, !dbg !338

14200:                                            ; preds = %14194
  %14201 = load i32, ptr %10, align 4, !dbg !339
  %14202 = sext i32 %14201 to i64, !dbg !342
  %14203 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14202, !dbg !342
  %14204 = load double, ptr %14203, align 16, !dbg !343
  %14205 = load double, ptr %6, align 8, !dbg !344
  %14206 = fcmp oeq double %14204, %14205, !dbg !345
  br i1 %14206, label %14207, label %14216, !dbg !346

14207:                                            ; preds = %14200
  %14208 = load i32, ptr %10, align 4, !dbg !347
  %14209 = sext i32 %14208 to i64, !dbg !348
  %14210 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14209, !dbg !348
  %14211 = getelementptr inbounds %struct.POINT, ptr %14210, i32 0, i32 1, !dbg !349
  %14212 = load double, ptr %14211, align 8, !dbg !349
  %14213 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14214 = load double, ptr %14213, align 8, !dbg !350
  %14215 = fcmp oeq double %14212, %14214, !dbg !351
  br i1 %14215, label %5429, label %14216, !dbg !352

14216:                                            ; preds = %14207, %14200
  br label %14217, !dbg !356

14217:                                            ; preds = %14216
  %14218 = load i32, ptr %10, align 4, !dbg !357
  %14219 = add nsw i32 %14218, 1, !dbg !357
  store i32 %14219, ptr %10, align 4, !dbg !357
  %14220 = load i32, ptr %10, align 4, !dbg !334
  %14221 = load i32, ptr %8, align 4, !dbg !336
  %14222 = icmp slt i32 %14220, %14221, !dbg !337
  br i1 %14222, label %14223, label %14243, !dbg !338

14223:                                            ; preds = %14217
  %14224 = load i32, ptr %10, align 4, !dbg !339
  %14225 = sext i32 %14224 to i64, !dbg !342
  %14226 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14225, !dbg !342
  %14227 = load double, ptr %14226, align 16, !dbg !343
  %14228 = load double, ptr %6, align 8, !dbg !344
  %14229 = fcmp oeq double %14227, %14228, !dbg !345
  br i1 %14229, label %14230, label %14239, !dbg !346

14230:                                            ; preds = %14223
  %14231 = load i32, ptr %10, align 4, !dbg !347
  %14232 = sext i32 %14231 to i64, !dbg !348
  %14233 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14232, !dbg !348
  %14234 = getelementptr inbounds %struct.POINT, ptr %14233, i32 0, i32 1, !dbg !349
  %14235 = load double, ptr %14234, align 8, !dbg !349
  %14236 = getelementptr inbounds %struct.POINT, ptr %6, i32 0, i32 1, !dbg !350
  %14237 = load double, ptr %14236, align 8, !dbg !350
  %14238 = fcmp oeq double %14235, %14237, !dbg !351
  br i1 %14238, label %5429, label %14239, !dbg !352

14239:                                            ; preds = %14230, %14223
  br label %14240, !dbg !356

14240:                                            ; preds = %14239
  %14241 = load i32, ptr %10, align 4, !dbg !357
  %14242 = add nsw i32 %14241, 1, !dbg !357
  store i32 %14242, ptr %10, align 4, !dbg !357
  br label %5409, !dbg !358, !llvm.loop !359

14243:                                            ; preds = %14217, %14194, %14171, %14148, %14125, %14102, %14079, %14056, %14033, %14010, %13987, %13964, %13941, %13918, %13895, %13872, %13849, %13826, %13803, %13780, %13757, %13734, %13711, %13688, %13665, %13642, %13619, %13596, %13573, %13550, %13527, %13504, %13481, %13458, %13435, %13412, %13389, %13366, %13343, %13320, %13297, %13274, %13251, %13228, %13205, %13182, %13159, %13136, %13113, %13090, %13067, %13044, %13021, %12998, %12975, %12952, %12929, %12906, %12883, %12860, %12837, %12814, %12791, %12768, %12745, %12722, %12699, %12676, %12653, %12630, %12607, %12584, %12561, %12538, %12515, %12492, %12469, %12446, %12423, %12400, %12377, %12354, %12331, %12308, %12285, %12262, %12239, %12216, %12193, %12170, %12147, %12124, %12101, %12078, %12055, %12032, %12009, %11986, %11963, %11940, %11917, %11894, %11871, %11848, %11825, %11802, %11779, %11756, %11733, %11710, %11687, %11664, %11641, %11618, %11595, %11572, %11549, %11526, %11503, %11480, %11457, %11434, %11411, %11388, %11365, %11342, %11319, %11296, %11273, %11250, %11227, %11204, %11181, %11158, %11135, %11112, %11089, %11066, %11043, %11020, %10997, %10974, %10951, %10928, %10905, %10882, %10859, %10836, %10813, %10790, %10767, %10744, %10721, %10698, %10675, %10652, %10629, %10606, %10583, %10560, %10537, %10514, %10491, %10468, %10445, %10422, %10399, %10376, %10353, %10330, %10307, %10284, %10261, %10238, %10215, %10192, %10169, %10146, %10123, %10100, %10077, %10054, %10031, %10008, %9985, %9962, %9939, %9916, %9893, %9870, %9847, %9824, %9801, %9778, %9755, %9732, %9709, %9686, %9663, %9640, %9617, %9594, %9571, %9548, %9525, %9502, %9479, %9456, %9433, %9410, %9387, %9364, %9341, %9318, %9295, %9272, %9249, %9226, %9203, %9180, %9157, %9134, %9111, %9088, %9065, %9042, %9019, %8996, %8973, %8950, %8927, %8904, %8881, %8858, %8835, %8812, %8789, %8766, %8743, %8720, %8697, %8674, %8651, %8628, %8605, %8582, %8559, %8536, %8513, %8490, %8467, %8444, %8421, %8398, %8375, %8352, %8329, %8306, %8283, %8260, %8237, %8214, %8191, %8168, %8145, %8122, %8099, %8076, %8053, %8030, %8007, %7984, %7961, %7938, %7915, %7892, %7869, %7846, %7823, %7800, %7777, %7754, %7731, %7708, %7685, %7662, %7639, %7616, %7593, %7570, %7547, %7524, %7501, %7478, %7455, %7432, %7409, %7386, %7363, %7340, %7317, %7294, %7271, %7248, %7225, %7202, %7179, %7156, %7133, %7110, %7087, %7064, %7041, %7018, %6995, %6972, %6949, %6926, %6903, %6880, %6857, %6834, %6811, %6788, %6765, %6742, %6719, %6696, %6673, %6650, %6627, %6604, %6581, %6558, %6535, %6512, %6489, %6466, %6443, %6420, %6397, %6374, %6351, %6328, %6305, %6282, %6259, %6236, %6213, %6190, %6167, %6144, %6121, %6098, %6075, %6052, %6029, %6006, %5983, %5960, %5937, %5914, %5891, %5868, %5845, %5822, %5799, %5776, %5753, %5730, %5707, %5684, %5661, %5638, %5615, %5592, %5569, %5546, %5523, %5500, %5477, %5454, %5431, %5409
  store i32 0, ptr %10, align 4, !dbg !361
  br label %14244, !dbg !363

14244:                                            ; preds = %48419, %14243
  %14245 = load i32, ptr %10, align 4, !dbg !364
  %14246 = load i32, ptr %8, align 4, !dbg !366
  %14247 = icmp slt i32 %14245, %14246, !dbg !367
  br i1 %14247, label %14248, label %48422, !dbg !368

14248:                                            ; preds = %14244
  %14249 = load i32, ptr %10, align 4, !dbg !369
  %14250 = sext i32 %14249 to i64, !dbg !371
  %14251 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14250, !dbg !371
  %14252 = load double, ptr %6, align 8, !dbg !372
  %14253 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14254 = load double, ptr %14253, align 8, !dbg !372
  %14255 = load double, ptr %14251, align 16, !dbg !372
  %14256 = getelementptr inbounds { double, double }, ptr %14251, i32 0, i32 1, !dbg !372
  %14257 = load double, ptr %14256, align 8, !dbg !372
  %14258 = call { double, double } @make_vec(double %14252, double %14254, double %14255, double %14257), !dbg !372
  %14259 = extractvalue { double, double } %14258, 0, !dbg !372
  store double %14259, ptr %16, align 8, !dbg !372
  %14260 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14261 = extractvalue { double, double } %14258, 1, !dbg !372
  store double %14261, ptr %14260, align 8, !dbg !372
  %14262 = load i32, ptr %10, align 4, !dbg !373
  %14263 = add nsw i32 %14262, 1, !dbg !374
  %14264 = sext i32 %14263 to i64, !dbg !375
  %14265 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14264, !dbg !375
  %14266 = load double, ptr %6, align 8, !dbg !376
  %14267 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14268 = load double, ptr %14267, align 8, !dbg !376
  %14269 = load double, ptr %14265, align 16, !dbg !376
  %14270 = getelementptr inbounds { double, double }, ptr %14265, i32 0, i32 1, !dbg !376
  %14271 = load double, ptr %14270, align 8, !dbg !376
  %14272 = call { double, double } @make_vec(double %14266, double %14268, double %14269, double %14271), !dbg !376
  %14273 = extractvalue { double, double } %14272, 0, !dbg !376
  store double %14273, ptr %17, align 8, !dbg !376
  %14274 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14275 = extractvalue { double, double } %14272, 1, !dbg !376
  store double %14275, ptr %14274, align 8, !dbg !376
  %14276 = load double, ptr %16, align 8, !dbg !377
  %14277 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14278 = load double, ptr %14277, align 8, !dbg !377
  %14279 = load double, ptr %17, align 8, !dbg !377
  %14280 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14281 = load double, ptr %14280, align 8, !dbg !377
  %14282 = call double @cross(double %14276, double %14278, double %14279, double %14281), !dbg !377
  %14283 = load i32, ptr %10, align 4, !dbg !378
  %14284 = sext i32 %14283 to i64, !dbg !379
  %14285 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14284, !dbg !379
  %14286 = load double, ptr %6, align 8, !dbg !380
  %14287 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14288 = load double, ptr %14287, align 8, !dbg !380
  %14289 = load double, ptr %14285, align 16, !dbg !380
  %14290 = getelementptr inbounds { double, double }, ptr %14285, i32 0, i32 1, !dbg !380
  %14291 = load double, ptr %14290, align 8, !dbg !380
  %14292 = call { double, double } @make_vec(double %14286, double %14288, double %14289, double %14291), !dbg !380
  %14293 = extractvalue { double, double } %14292, 0, !dbg !380
  store double %14293, ptr %18, align 8, !dbg !380
  %14294 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14295 = extractvalue { double, double } %14292, 1, !dbg !380
  store double %14295, ptr %14294, align 8, !dbg !380
  %14296 = load i32, ptr %10, align 4, !dbg !381
  %14297 = add nsw i32 %14296, 1, !dbg !382
  %14298 = sext i32 %14297 to i64, !dbg !383
  %14299 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14298, !dbg !383
  %14300 = load double, ptr %6, align 8, !dbg !384
  %14301 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14302 = load double, ptr %14301, align 8, !dbg !384
  %14303 = load double, ptr %14299, align 16, !dbg !384
  %14304 = getelementptr inbounds { double, double }, ptr %14299, i32 0, i32 1, !dbg !384
  %14305 = load double, ptr %14304, align 8, !dbg !384
  %14306 = call { double, double } @make_vec(double %14300, double %14302, double %14303, double %14305), !dbg !384
  %14307 = extractvalue { double, double } %14306, 0, !dbg !384
  store double %14307, ptr %19, align 8, !dbg !384
  %14308 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14309 = extractvalue { double, double } %14306, 1, !dbg !384
  store double %14309, ptr %14308, align 8, !dbg !384
  %14310 = load double, ptr %18, align 8, !dbg !385
  %14311 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14312 = load double, ptr %14311, align 8, !dbg !385
  %14313 = load double, ptr %19, align 8, !dbg !385
  %14314 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14315 = load double, ptr %14314, align 8, !dbg !385
  %14316 = call double @dot(double %14310, double %14312, double %14313, double %14315), !dbg !385
  %14317 = call double @atan2(double noundef %14282, double noundef %14316) #6, !dbg !386
  store double %14317, ptr %13, align 8, !dbg !387
  %14318 = load double, ptr %13, align 8, !dbg !388
  %14319 = load double, ptr %14, align 8, !dbg !389
  %14320 = fadd double %14319, %14318, !dbg !389
  store double %14320, ptr %14, align 8, !dbg !389
  %14321 = load double, ptr %13, align 8, !dbg !390
  %14322 = fsub double %14321, 0x400921FB54442D18, !dbg !392
  %14323 = call double @llvm.fabs.f64(double %14322), !dbg !393
  %14324 = fcmp ole double %14323, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14324, label %14330, label %14325, !dbg !395

14325:                                            ; preds = %14248
  %14326 = load double, ptr %13, align 8, !dbg !396
  %14327 = fadd double %14326, 0x400921FB54442D18, !dbg !397
  %14328 = call double @llvm.fabs.f64(double %14327), !dbg !398
  %14329 = fcmp ole double %14328, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14329, label %14330, label %14331, !dbg !400

14330:                                            ; preds = %48413, %48336, %48324, %48247, %48235, %48158, %48146, %48069, %48057, %47980, %47968, %47891, %47879, %47802, %47790, %47713, %47701, %47624, %47612, %47535, %47523, %47446, %47434, %47357, %47345, %47268, %47256, %47179, %47167, %47090, %47078, %47001, %46989, %46912, %46900, %46823, %46811, %46734, %46722, %46645, %46633, %46556, %46544, %46467, %46455, %46378, %46366, %46289, %46277, %46200, %46188, %46111, %46099, %46022, %46010, %45933, %45921, %45844, %45832, %45755, %45743, %45666, %45654, %45577, %45565, %45488, %45476, %45399, %45387, %45310, %45298, %45221, %45209, %45132, %45120, %45043, %45031, %44954, %44942, %44865, %44853, %44776, %44764, %44687, %44675, %44598, %44586, %44509, %44497, %44420, %44408, %44331, %44319, %44242, %44230, %44153, %44141, %44064, %44052, %43975, %43963, %43886, %43874, %43797, %43785, %43708, %43696, %43619, %43607, %43530, %43518, %43441, %43429, %43352, %43340, %43263, %43251, %43174, %43162, %43085, %43073, %42996, %42984, %42907, %42895, %42818, %42806, %42729, %42717, %42640, %42628, %42551, %42539, %42462, %42450, %42373, %42361, %42284, %42272, %42195, %42183, %42106, %42094, %42017, %42005, %41928, %41916, %41839, %41827, %41750, %41738, %41661, %41649, %41572, %41560, %41483, %41471, %41394, %41382, %41305, %41293, %41216, %41204, %41127, %41115, %41038, %41026, %40949, %40937, %40860, %40848, %40771, %40759, %40682, %40670, %40593, %40581, %40504, %40492, %40415, %40403, %40326, %40314, %40237, %40225, %40148, %40136, %40059, %40047, %39970, %39958, %39881, %39869, %39792, %39780, %39703, %39691, %39614, %39602, %39525, %39513, %39436, %39424, %39347, %39335, %39258, %39246, %39169, %39157, %39080, %39068, %38991, %38979, %38902, %38890, %38813, %38801, %38724, %38712, %38635, %38623, %38546, %38534, %38457, %38445, %38368, %38356, %38279, %38267, %38190, %38178, %38101, %38089, %38012, %38000, %37923, %37911, %37834, %37822, %37745, %37733, %37656, %37644, %37567, %37555, %37478, %37466, %37389, %37377, %37300, %37288, %37211, %37199, %37122, %37110, %37033, %37021, %36944, %36932, %36855, %36843, %36766, %36754, %36677, %36665, %36588, %36576, %36499, %36487, %36410, %36398, %36321, %36309, %36232, %36220, %36143, %36131, %36054, %36042, %35965, %35953, %35876, %35864, %35787, %35775, %35698, %35686, %35609, %35597, %35520, %35508, %35431, %35419, %35342, %35330, %35253, %35241, %35164, %35152, %35075, %35063, %34986, %34974, %34897, %34885, %34808, %34796, %34719, %34707, %34630, %34618, %34541, %34529, %34452, %34440, %34363, %34351, %34274, %34262, %34185, %34173, %34096, %34084, %34007, %33995, %33918, %33906, %33829, %33817, %33740, %33728, %33651, %33639, %33562, %33550, %33473, %33461, %33384, %33372, %33295, %33283, %33206, %33194, %33117, %33105, %33028, %33016, %32939, %32927, %32850, %32838, %32761, %32749, %32672, %32660, %32583, %32571, %32494, %32482, %32405, %32393, %32316, %32304, %32227, %32215, %32138, %32126, %32049, %32037, %31960, %31948, %31871, %31859, %31782, %31770, %31693, %31681, %31604, %31592, %31515, %31503, %31426, %31414, %31337, %31325, %31248, %31236, %31159, %31147, %31070, %31058, %30981, %30969, %30892, %30880, %30803, %30791, %30714, %30702, %30625, %30613, %30536, %30524, %30447, %30435, %30358, %30346, %30269, %30257, %30180, %30168, %30091, %30079, %30002, %29990, %29913, %29901, %29824, %29812, %29735, %29723, %29646, %29634, %29557, %29545, %29468, %29456, %29379, %29367, %29290, %29278, %29201, %29189, %29112, %29100, %29023, %29011, %28934, %28922, %28845, %28833, %28756, %28744, %28667, %28655, %28578, %28566, %28489, %28477, %28400, %28388, %28311, %28299, %28222, %28210, %28133, %28121, %28044, %28032, %27955, %27943, %27866, %27854, %27777, %27765, %27688, %27676, %27599, %27587, %27510, %27498, %27421, %27409, %27332, %27320, %27243, %27231, %27154, %27142, %27065, %27053, %26976, %26964, %26887, %26875, %26798, %26786, %26709, %26697, %26620, %26608, %26531, %26519, %26442, %26430, %26353, %26341, %26264, %26252, %26175, %26163, %26086, %26074, %25997, %25985, %25908, %25896, %25819, %25807, %25730, %25718, %25641, %25629, %25552, %25540, %25463, %25451, %25374, %25362, %25285, %25273, %25196, %25184, %25107, %25095, %25018, %25006, %24929, %24917, %24840, %24828, %24751, %24739, %24662, %24650, %24573, %24561, %24484, %24472, %24395, %24383, %24306, %24294, %24217, %24205, %24128, %24116, %24039, %24027, %23950, %23938, %23861, %23849, %23772, %23760, %23683, %23671, %23594, %23582, %23505, %23493, %23416, %23404, %23327, %23315, %23238, %23226, %23149, %23137, %23060, %23048, %22971, %22959, %22882, %22870, %22793, %22781, %22704, %22692, %22615, %22603, %22526, %22514, %22437, %22425, %22348, %22336, %22259, %22247, %22170, %22158, %22081, %22069, %21992, %21980, %21903, %21891, %21814, %21802, %21725, %21713, %21636, %21624, %21547, %21535, %21458, %21446, %21369, %21357, %21280, %21268, %21191, %21179, %21102, %21090, %21013, %21001, %20924, %20912, %20835, %20823, %20746, %20734, %20657, %20645, %20568, %20556, %20479, %20467, %20390, %20378, %20301, %20289, %20212, %20200, %20123, %20111, %20034, %20022, %19945, %19933, %19856, %19844, %19767, %19755, %19678, %19666, %19589, %19577, %19500, %19488, %19411, %19399, %19322, %19310, %19233, %19221, %19144, %19132, %19055, %19043, %18966, %18954, %18877, %18865, %18788, %18776, %18699, %18687, %18610, %18598, %18521, %18509, %18432, %18420, %18343, %18331, %18254, %18242, %18165, %18153, %18076, %18064, %17987, %17975, %17898, %17886, %17809, %17797, %17720, %17708, %17631, %17619, %17542, %17530, %17453, %17441, %17364, %17352, %17275, %17263, %17186, %17174, %17097, %17085, %17008, %16996, %16919, %16907, %16830, %16818, %16741, %16729, %16652, %16640, %16563, %16551, %16474, %16462, %16385, %16373, %16296, %16284, %16207, %16195, %16118, %16106, %16029, %16017, %15940, %15928, %15851, %15839, %15762, %15750, %15673, %15661, %15584, %15572, %15495, %15483, %15406, %15394, %15317, %15305, %15228, %15216, %15139, %15127, %15050, %15038, %14961, %14949, %14872, %14860, %14783, %14771, %14694, %14682, %14605, %14593, %14516, %14504, %14427, %14415, %14338, %14325, %14248
  store i32 1, ptr %9, align 4, !dbg !401
  store i32 1, ptr %5, align 4, !dbg !402
  store i32 1, ptr %15, align 4
  br label %48430, !dbg !402

14331:                                            ; preds = %14325
  br label %14332, !dbg !403

14332:                                            ; preds = %14331
  %14333 = load i32, ptr %10, align 4, !dbg !404
  %14334 = add nsw i32 %14333, 1, !dbg !404
  store i32 %14334, ptr %10, align 4, !dbg !404
  %14335 = load i32, ptr %10, align 4, !dbg !364
  %14336 = load i32, ptr %8, align 4, !dbg !366
  %14337 = icmp slt i32 %14335, %14336, !dbg !367
  br i1 %14337, label %14338, label %48422, !dbg !368

14338:                                            ; preds = %14332
  %14339 = load i32, ptr %10, align 4, !dbg !369
  %14340 = sext i32 %14339 to i64, !dbg !371
  %14341 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14340, !dbg !371
  %14342 = load double, ptr %6, align 8, !dbg !372
  %14343 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14344 = load double, ptr %14343, align 8, !dbg !372
  %14345 = load double, ptr %14341, align 16, !dbg !372
  %14346 = getelementptr inbounds { double, double }, ptr %14341, i32 0, i32 1, !dbg !372
  %14347 = load double, ptr %14346, align 8, !dbg !372
  %14348 = call { double, double } @make_vec(double %14342, double %14344, double %14345, double %14347), !dbg !372
  %14349 = extractvalue { double, double } %14348, 0, !dbg !372
  store double %14349, ptr %16, align 8, !dbg !372
  %14350 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14351 = extractvalue { double, double } %14348, 1, !dbg !372
  store double %14351, ptr %14350, align 8, !dbg !372
  %14352 = load i32, ptr %10, align 4, !dbg !373
  %14353 = add nsw i32 %14352, 1, !dbg !374
  %14354 = sext i32 %14353 to i64, !dbg !375
  %14355 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14354, !dbg !375
  %14356 = load double, ptr %6, align 8, !dbg !376
  %14357 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14358 = load double, ptr %14357, align 8, !dbg !376
  %14359 = load double, ptr %14355, align 16, !dbg !376
  %14360 = getelementptr inbounds { double, double }, ptr %14355, i32 0, i32 1, !dbg !376
  %14361 = load double, ptr %14360, align 8, !dbg !376
  %14362 = call { double, double } @make_vec(double %14356, double %14358, double %14359, double %14361), !dbg !376
  %14363 = extractvalue { double, double } %14362, 0, !dbg !376
  store double %14363, ptr %17, align 8, !dbg !376
  %14364 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14365 = extractvalue { double, double } %14362, 1, !dbg !376
  store double %14365, ptr %14364, align 8, !dbg !376
  %14366 = load double, ptr %16, align 8, !dbg !377
  %14367 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14368 = load double, ptr %14367, align 8, !dbg !377
  %14369 = load double, ptr %17, align 8, !dbg !377
  %14370 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14371 = load double, ptr %14370, align 8, !dbg !377
  %14372 = call double @cross(double %14366, double %14368, double %14369, double %14371), !dbg !377
  %14373 = load i32, ptr %10, align 4, !dbg !378
  %14374 = sext i32 %14373 to i64, !dbg !379
  %14375 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14374, !dbg !379
  %14376 = load double, ptr %6, align 8, !dbg !380
  %14377 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14378 = load double, ptr %14377, align 8, !dbg !380
  %14379 = load double, ptr %14375, align 16, !dbg !380
  %14380 = getelementptr inbounds { double, double }, ptr %14375, i32 0, i32 1, !dbg !380
  %14381 = load double, ptr %14380, align 8, !dbg !380
  %14382 = call { double, double } @make_vec(double %14376, double %14378, double %14379, double %14381), !dbg !380
  %14383 = extractvalue { double, double } %14382, 0, !dbg !380
  store double %14383, ptr %18, align 8, !dbg !380
  %14384 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14385 = extractvalue { double, double } %14382, 1, !dbg !380
  store double %14385, ptr %14384, align 8, !dbg !380
  %14386 = load i32, ptr %10, align 4, !dbg !381
  %14387 = add nsw i32 %14386, 1, !dbg !382
  %14388 = sext i32 %14387 to i64, !dbg !383
  %14389 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14388, !dbg !383
  %14390 = load double, ptr %6, align 8, !dbg !384
  %14391 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14392 = load double, ptr %14391, align 8, !dbg !384
  %14393 = load double, ptr %14389, align 16, !dbg !384
  %14394 = getelementptr inbounds { double, double }, ptr %14389, i32 0, i32 1, !dbg !384
  %14395 = load double, ptr %14394, align 8, !dbg !384
  %14396 = call { double, double } @make_vec(double %14390, double %14392, double %14393, double %14395), !dbg !384
  %14397 = extractvalue { double, double } %14396, 0, !dbg !384
  store double %14397, ptr %19, align 8, !dbg !384
  %14398 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14399 = extractvalue { double, double } %14396, 1, !dbg !384
  store double %14399, ptr %14398, align 8, !dbg !384
  %14400 = load double, ptr %18, align 8, !dbg !385
  %14401 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14402 = load double, ptr %14401, align 8, !dbg !385
  %14403 = load double, ptr %19, align 8, !dbg !385
  %14404 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14405 = load double, ptr %14404, align 8, !dbg !385
  %14406 = call double @dot(double %14400, double %14402, double %14403, double %14405), !dbg !385
  %14407 = call double @atan2(double noundef %14372, double noundef %14406) #6, !dbg !386
  store double %14407, ptr %13, align 8, !dbg !387
  %14408 = load double, ptr %13, align 8, !dbg !388
  %14409 = load double, ptr %14, align 8, !dbg !389
  %14410 = fadd double %14409, %14408, !dbg !389
  store double %14410, ptr %14, align 8, !dbg !389
  %14411 = load double, ptr %13, align 8, !dbg !390
  %14412 = fsub double %14411, 0x400921FB54442D18, !dbg !392
  %14413 = call double @llvm.fabs.f64(double %14412), !dbg !393
  %14414 = fcmp ole double %14413, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14414, label %14330, label %14415, !dbg !395

14415:                                            ; preds = %14338
  %14416 = load double, ptr %13, align 8, !dbg !396
  %14417 = fadd double %14416, 0x400921FB54442D18, !dbg !397
  %14418 = call double @llvm.fabs.f64(double %14417), !dbg !398
  %14419 = fcmp ole double %14418, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14419, label %14330, label %14420, !dbg !400

14420:                                            ; preds = %14415
  br label %14421, !dbg !403

14421:                                            ; preds = %14420
  %14422 = load i32, ptr %10, align 4, !dbg !404
  %14423 = add nsw i32 %14422, 1, !dbg !404
  store i32 %14423, ptr %10, align 4, !dbg !404
  %14424 = load i32, ptr %10, align 4, !dbg !364
  %14425 = load i32, ptr %8, align 4, !dbg !366
  %14426 = icmp slt i32 %14424, %14425, !dbg !367
  br i1 %14426, label %14427, label %48422, !dbg !368

14427:                                            ; preds = %14421
  %14428 = load i32, ptr %10, align 4, !dbg !369
  %14429 = sext i32 %14428 to i64, !dbg !371
  %14430 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14429, !dbg !371
  %14431 = load double, ptr %6, align 8, !dbg !372
  %14432 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14433 = load double, ptr %14432, align 8, !dbg !372
  %14434 = load double, ptr %14430, align 16, !dbg !372
  %14435 = getelementptr inbounds { double, double }, ptr %14430, i32 0, i32 1, !dbg !372
  %14436 = load double, ptr %14435, align 8, !dbg !372
  %14437 = call { double, double } @make_vec(double %14431, double %14433, double %14434, double %14436), !dbg !372
  %14438 = extractvalue { double, double } %14437, 0, !dbg !372
  store double %14438, ptr %16, align 8, !dbg !372
  %14439 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14440 = extractvalue { double, double } %14437, 1, !dbg !372
  store double %14440, ptr %14439, align 8, !dbg !372
  %14441 = load i32, ptr %10, align 4, !dbg !373
  %14442 = add nsw i32 %14441, 1, !dbg !374
  %14443 = sext i32 %14442 to i64, !dbg !375
  %14444 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14443, !dbg !375
  %14445 = load double, ptr %6, align 8, !dbg !376
  %14446 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14447 = load double, ptr %14446, align 8, !dbg !376
  %14448 = load double, ptr %14444, align 16, !dbg !376
  %14449 = getelementptr inbounds { double, double }, ptr %14444, i32 0, i32 1, !dbg !376
  %14450 = load double, ptr %14449, align 8, !dbg !376
  %14451 = call { double, double } @make_vec(double %14445, double %14447, double %14448, double %14450), !dbg !376
  %14452 = extractvalue { double, double } %14451, 0, !dbg !376
  store double %14452, ptr %17, align 8, !dbg !376
  %14453 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14454 = extractvalue { double, double } %14451, 1, !dbg !376
  store double %14454, ptr %14453, align 8, !dbg !376
  %14455 = load double, ptr %16, align 8, !dbg !377
  %14456 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14457 = load double, ptr %14456, align 8, !dbg !377
  %14458 = load double, ptr %17, align 8, !dbg !377
  %14459 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14460 = load double, ptr %14459, align 8, !dbg !377
  %14461 = call double @cross(double %14455, double %14457, double %14458, double %14460), !dbg !377
  %14462 = load i32, ptr %10, align 4, !dbg !378
  %14463 = sext i32 %14462 to i64, !dbg !379
  %14464 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14463, !dbg !379
  %14465 = load double, ptr %6, align 8, !dbg !380
  %14466 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14467 = load double, ptr %14466, align 8, !dbg !380
  %14468 = load double, ptr %14464, align 16, !dbg !380
  %14469 = getelementptr inbounds { double, double }, ptr %14464, i32 0, i32 1, !dbg !380
  %14470 = load double, ptr %14469, align 8, !dbg !380
  %14471 = call { double, double } @make_vec(double %14465, double %14467, double %14468, double %14470), !dbg !380
  %14472 = extractvalue { double, double } %14471, 0, !dbg !380
  store double %14472, ptr %18, align 8, !dbg !380
  %14473 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14474 = extractvalue { double, double } %14471, 1, !dbg !380
  store double %14474, ptr %14473, align 8, !dbg !380
  %14475 = load i32, ptr %10, align 4, !dbg !381
  %14476 = add nsw i32 %14475, 1, !dbg !382
  %14477 = sext i32 %14476 to i64, !dbg !383
  %14478 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14477, !dbg !383
  %14479 = load double, ptr %6, align 8, !dbg !384
  %14480 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14481 = load double, ptr %14480, align 8, !dbg !384
  %14482 = load double, ptr %14478, align 16, !dbg !384
  %14483 = getelementptr inbounds { double, double }, ptr %14478, i32 0, i32 1, !dbg !384
  %14484 = load double, ptr %14483, align 8, !dbg !384
  %14485 = call { double, double } @make_vec(double %14479, double %14481, double %14482, double %14484), !dbg !384
  %14486 = extractvalue { double, double } %14485, 0, !dbg !384
  store double %14486, ptr %19, align 8, !dbg !384
  %14487 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14488 = extractvalue { double, double } %14485, 1, !dbg !384
  store double %14488, ptr %14487, align 8, !dbg !384
  %14489 = load double, ptr %18, align 8, !dbg !385
  %14490 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14491 = load double, ptr %14490, align 8, !dbg !385
  %14492 = load double, ptr %19, align 8, !dbg !385
  %14493 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14494 = load double, ptr %14493, align 8, !dbg !385
  %14495 = call double @dot(double %14489, double %14491, double %14492, double %14494), !dbg !385
  %14496 = call double @atan2(double noundef %14461, double noundef %14495) #6, !dbg !386
  store double %14496, ptr %13, align 8, !dbg !387
  %14497 = load double, ptr %13, align 8, !dbg !388
  %14498 = load double, ptr %14, align 8, !dbg !389
  %14499 = fadd double %14498, %14497, !dbg !389
  store double %14499, ptr %14, align 8, !dbg !389
  %14500 = load double, ptr %13, align 8, !dbg !390
  %14501 = fsub double %14500, 0x400921FB54442D18, !dbg !392
  %14502 = call double @llvm.fabs.f64(double %14501), !dbg !393
  %14503 = fcmp ole double %14502, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14503, label %14330, label %14504, !dbg !395

14504:                                            ; preds = %14427
  %14505 = load double, ptr %13, align 8, !dbg !396
  %14506 = fadd double %14505, 0x400921FB54442D18, !dbg !397
  %14507 = call double @llvm.fabs.f64(double %14506), !dbg !398
  %14508 = fcmp ole double %14507, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14508, label %14330, label %14509, !dbg !400

14509:                                            ; preds = %14504
  br label %14510, !dbg !403

14510:                                            ; preds = %14509
  %14511 = load i32, ptr %10, align 4, !dbg !404
  %14512 = add nsw i32 %14511, 1, !dbg !404
  store i32 %14512, ptr %10, align 4, !dbg !404
  %14513 = load i32, ptr %10, align 4, !dbg !364
  %14514 = load i32, ptr %8, align 4, !dbg !366
  %14515 = icmp slt i32 %14513, %14514, !dbg !367
  br i1 %14515, label %14516, label %48422, !dbg !368

14516:                                            ; preds = %14510
  %14517 = load i32, ptr %10, align 4, !dbg !369
  %14518 = sext i32 %14517 to i64, !dbg !371
  %14519 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14518, !dbg !371
  %14520 = load double, ptr %6, align 8, !dbg !372
  %14521 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14522 = load double, ptr %14521, align 8, !dbg !372
  %14523 = load double, ptr %14519, align 16, !dbg !372
  %14524 = getelementptr inbounds { double, double }, ptr %14519, i32 0, i32 1, !dbg !372
  %14525 = load double, ptr %14524, align 8, !dbg !372
  %14526 = call { double, double } @make_vec(double %14520, double %14522, double %14523, double %14525), !dbg !372
  %14527 = extractvalue { double, double } %14526, 0, !dbg !372
  store double %14527, ptr %16, align 8, !dbg !372
  %14528 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14529 = extractvalue { double, double } %14526, 1, !dbg !372
  store double %14529, ptr %14528, align 8, !dbg !372
  %14530 = load i32, ptr %10, align 4, !dbg !373
  %14531 = add nsw i32 %14530, 1, !dbg !374
  %14532 = sext i32 %14531 to i64, !dbg !375
  %14533 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14532, !dbg !375
  %14534 = load double, ptr %6, align 8, !dbg !376
  %14535 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14536 = load double, ptr %14535, align 8, !dbg !376
  %14537 = load double, ptr %14533, align 16, !dbg !376
  %14538 = getelementptr inbounds { double, double }, ptr %14533, i32 0, i32 1, !dbg !376
  %14539 = load double, ptr %14538, align 8, !dbg !376
  %14540 = call { double, double } @make_vec(double %14534, double %14536, double %14537, double %14539), !dbg !376
  %14541 = extractvalue { double, double } %14540, 0, !dbg !376
  store double %14541, ptr %17, align 8, !dbg !376
  %14542 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14543 = extractvalue { double, double } %14540, 1, !dbg !376
  store double %14543, ptr %14542, align 8, !dbg !376
  %14544 = load double, ptr %16, align 8, !dbg !377
  %14545 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14546 = load double, ptr %14545, align 8, !dbg !377
  %14547 = load double, ptr %17, align 8, !dbg !377
  %14548 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14549 = load double, ptr %14548, align 8, !dbg !377
  %14550 = call double @cross(double %14544, double %14546, double %14547, double %14549), !dbg !377
  %14551 = load i32, ptr %10, align 4, !dbg !378
  %14552 = sext i32 %14551 to i64, !dbg !379
  %14553 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14552, !dbg !379
  %14554 = load double, ptr %6, align 8, !dbg !380
  %14555 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14556 = load double, ptr %14555, align 8, !dbg !380
  %14557 = load double, ptr %14553, align 16, !dbg !380
  %14558 = getelementptr inbounds { double, double }, ptr %14553, i32 0, i32 1, !dbg !380
  %14559 = load double, ptr %14558, align 8, !dbg !380
  %14560 = call { double, double } @make_vec(double %14554, double %14556, double %14557, double %14559), !dbg !380
  %14561 = extractvalue { double, double } %14560, 0, !dbg !380
  store double %14561, ptr %18, align 8, !dbg !380
  %14562 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14563 = extractvalue { double, double } %14560, 1, !dbg !380
  store double %14563, ptr %14562, align 8, !dbg !380
  %14564 = load i32, ptr %10, align 4, !dbg !381
  %14565 = add nsw i32 %14564, 1, !dbg !382
  %14566 = sext i32 %14565 to i64, !dbg !383
  %14567 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14566, !dbg !383
  %14568 = load double, ptr %6, align 8, !dbg !384
  %14569 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14570 = load double, ptr %14569, align 8, !dbg !384
  %14571 = load double, ptr %14567, align 16, !dbg !384
  %14572 = getelementptr inbounds { double, double }, ptr %14567, i32 0, i32 1, !dbg !384
  %14573 = load double, ptr %14572, align 8, !dbg !384
  %14574 = call { double, double } @make_vec(double %14568, double %14570, double %14571, double %14573), !dbg !384
  %14575 = extractvalue { double, double } %14574, 0, !dbg !384
  store double %14575, ptr %19, align 8, !dbg !384
  %14576 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14577 = extractvalue { double, double } %14574, 1, !dbg !384
  store double %14577, ptr %14576, align 8, !dbg !384
  %14578 = load double, ptr %18, align 8, !dbg !385
  %14579 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14580 = load double, ptr %14579, align 8, !dbg !385
  %14581 = load double, ptr %19, align 8, !dbg !385
  %14582 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14583 = load double, ptr %14582, align 8, !dbg !385
  %14584 = call double @dot(double %14578, double %14580, double %14581, double %14583), !dbg !385
  %14585 = call double @atan2(double noundef %14550, double noundef %14584) #6, !dbg !386
  store double %14585, ptr %13, align 8, !dbg !387
  %14586 = load double, ptr %13, align 8, !dbg !388
  %14587 = load double, ptr %14, align 8, !dbg !389
  %14588 = fadd double %14587, %14586, !dbg !389
  store double %14588, ptr %14, align 8, !dbg !389
  %14589 = load double, ptr %13, align 8, !dbg !390
  %14590 = fsub double %14589, 0x400921FB54442D18, !dbg !392
  %14591 = call double @llvm.fabs.f64(double %14590), !dbg !393
  %14592 = fcmp ole double %14591, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14592, label %14330, label %14593, !dbg !395

14593:                                            ; preds = %14516
  %14594 = load double, ptr %13, align 8, !dbg !396
  %14595 = fadd double %14594, 0x400921FB54442D18, !dbg !397
  %14596 = call double @llvm.fabs.f64(double %14595), !dbg !398
  %14597 = fcmp ole double %14596, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14597, label %14330, label %14598, !dbg !400

14598:                                            ; preds = %14593
  br label %14599, !dbg !403

14599:                                            ; preds = %14598
  %14600 = load i32, ptr %10, align 4, !dbg !404
  %14601 = add nsw i32 %14600, 1, !dbg !404
  store i32 %14601, ptr %10, align 4, !dbg !404
  %14602 = load i32, ptr %10, align 4, !dbg !364
  %14603 = load i32, ptr %8, align 4, !dbg !366
  %14604 = icmp slt i32 %14602, %14603, !dbg !367
  br i1 %14604, label %14605, label %48422, !dbg !368

14605:                                            ; preds = %14599
  %14606 = load i32, ptr %10, align 4, !dbg !369
  %14607 = sext i32 %14606 to i64, !dbg !371
  %14608 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14607, !dbg !371
  %14609 = load double, ptr %6, align 8, !dbg !372
  %14610 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14611 = load double, ptr %14610, align 8, !dbg !372
  %14612 = load double, ptr %14608, align 16, !dbg !372
  %14613 = getelementptr inbounds { double, double }, ptr %14608, i32 0, i32 1, !dbg !372
  %14614 = load double, ptr %14613, align 8, !dbg !372
  %14615 = call { double, double } @make_vec(double %14609, double %14611, double %14612, double %14614), !dbg !372
  %14616 = extractvalue { double, double } %14615, 0, !dbg !372
  store double %14616, ptr %16, align 8, !dbg !372
  %14617 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14618 = extractvalue { double, double } %14615, 1, !dbg !372
  store double %14618, ptr %14617, align 8, !dbg !372
  %14619 = load i32, ptr %10, align 4, !dbg !373
  %14620 = add nsw i32 %14619, 1, !dbg !374
  %14621 = sext i32 %14620 to i64, !dbg !375
  %14622 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14621, !dbg !375
  %14623 = load double, ptr %6, align 8, !dbg !376
  %14624 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14625 = load double, ptr %14624, align 8, !dbg !376
  %14626 = load double, ptr %14622, align 16, !dbg !376
  %14627 = getelementptr inbounds { double, double }, ptr %14622, i32 0, i32 1, !dbg !376
  %14628 = load double, ptr %14627, align 8, !dbg !376
  %14629 = call { double, double } @make_vec(double %14623, double %14625, double %14626, double %14628), !dbg !376
  %14630 = extractvalue { double, double } %14629, 0, !dbg !376
  store double %14630, ptr %17, align 8, !dbg !376
  %14631 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14632 = extractvalue { double, double } %14629, 1, !dbg !376
  store double %14632, ptr %14631, align 8, !dbg !376
  %14633 = load double, ptr %16, align 8, !dbg !377
  %14634 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14635 = load double, ptr %14634, align 8, !dbg !377
  %14636 = load double, ptr %17, align 8, !dbg !377
  %14637 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14638 = load double, ptr %14637, align 8, !dbg !377
  %14639 = call double @cross(double %14633, double %14635, double %14636, double %14638), !dbg !377
  %14640 = load i32, ptr %10, align 4, !dbg !378
  %14641 = sext i32 %14640 to i64, !dbg !379
  %14642 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14641, !dbg !379
  %14643 = load double, ptr %6, align 8, !dbg !380
  %14644 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14645 = load double, ptr %14644, align 8, !dbg !380
  %14646 = load double, ptr %14642, align 16, !dbg !380
  %14647 = getelementptr inbounds { double, double }, ptr %14642, i32 0, i32 1, !dbg !380
  %14648 = load double, ptr %14647, align 8, !dbg !380
  %14649 = call { double, double } @make_vec(double %14643, double %14645, double %14646, double %14648), !dbg !380
  %14650 = extractvalue { double, double } %14649, 0, !dbg !380
  store double %14650, ptr %18, align 8, !dbg !380
  %14651 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14652 = extractvalue { double, double } %14649, 1, !dbg !380
  store double %14652, ptr %14651, align 8, !dbg !380
  %14653 = load i32, ptr %10, align 4, !dbg !381
  %14654 = add nsw i32 %14653, 1, !dbg !382
  %14655 = sext i32 %14654 to i64, !dbg !383
  %14656 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14655, !dbg !383
  %14657 = load double, ptr %6, align 8, !dbg !384
  %14658 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14659 = load double, ptr %14658, align 8, !dbg !384
  %14660 = load double, ptr %14656, align 16, !dbg !384
  %14661 = getelementptr inbounds { double, double }, ptr %14656, i32 0, i32 1, !dbg !384
  %14662 = load double, ptr %14661, align 8, !dbg !384
  %14663 = call { double, double } @make_vec(double %14657, double %14659, double %14660, double %14662), !dbg !384
  %14664 = extractvalue { double, double } %14663, 0, !dbg !384
  store double %14664, ptr %19, align 8, !dbg !384
  %14665 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14666 = extractvalue { double, double } %14663, 1, !dbg !384
  store double %14666, ptr %14665, align 8, !dbg !384
  %14667 = load double, ptr %18, align 8, !dbg !385
  %14668 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14669 = load double, ptr %14668, align 8, !dbg !385
  %14670 = load double, ptr %19, align 8, !dbg !385
  %14671 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14672 = load double, ptr %14671, align 8, !dbg !385
  %14673 = call double @dot(double %14667, double %14669, double %14670, double %14672), !dbg !385
  %14674 = call double @atan2(double noundef %14639, double noundef %14673) #6, !dbg !386
  store double %14674, ptr %13, align 8, !dbg !387
  %14675 = load double, ptr %13, align 8, !dbg !388
  %14676 = load double, ptr %14, align 8, !dbg !389
  %14677 = fadd double %14676, %14675, !dbg !389
  store double %14677, ptr %14, align 8, !dbg !389
  %14678 = load double, ptr %13, align 8, !dbg !390
  %14679 = fsub double %14678, 0x400921FB54442D18, !dbg !392
  %14680 = call double @llvm.fabs.f64(double %14679), !dbg !393
  %14681 = fcmp ole double %14680, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14681, label %14330, label %14682, !dbg !395

14682:                                            ; preds = %14605
  %14683 = load double, ptr %13, align 8, !dbg !396
  %14684 = fadd double %14683, 0x400921FB54442D18, !dbg !397
  %14685 = call double @llvm.fabs.f64(double %14684), !dbg !398
  %14686 = fcmp ole double %14685, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14686, label %14330, label %14687, !dbg !400

14687:                                            ; preds = %14682
  br label %14688, !dbg !403

14688:                                            ; preds = %14687
  %14689 = load i32, ptr %10, align 4, !dbg !404
  %14690 = add nsw i32 %14689, 1, !dbg !404
  store i32 %14690, ptr %10, align 4, !dbg !404
  %14691 = load i32, ptr %10, align 4, !dbg !364
  %14692 = load i32, ptr %8, align 4, !dbg !366
  %14693 = icmp slt i32 %14691, %14692, !dbg !367
  br i1 %14693, label %14694, label %48422, !dbg !368

14694:                                            ; preds = %14688
  %14695 = load i32, ptr %10, align 4, !dbg !369
  %14696 = sext i32 %14695 to i64, !dbg !371
  %14697 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14696, !dbg !371
  %14698 = load double, ptr %6, align 8, !dbg !372
  %14699 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14700 = load double, ptr %14699, align 8, !dbg !372
  %14701 = load double, ptr %14697, align 16, !dbg !372
  %14702 = getelementptr inbounds { double, double }, ptr %14697, i32 0, i32 1, !dbg !372
  %14703 = load double, ptr %14702, align 8, !dbg !372
  %14704 = call { double, double } @make_vec(double %14698, double %14700, double %14701, double %14703), !dbg !372
  %14705 = extractvalue { double, double } %14704, 0, !dbg !372
  store double %14705, ptr %16, align 8, !dbg !372
  %14706 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14707 = extractvalue { double, double } %14704, 1, !dbg !372
  store double %14707, ptr %14706, align 8, !dbg !372
  %14708 = load i32, ptr %10, align 4, !dbg !373
  %14709 = add nsw i32 %14708, 1, !dbg !374
  %14710 = sext i32 %14709 to i64, !dbg !375
  %14711 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14710, !dbg !375
  %14712 = load double, ptr %6, align 8, !dbg !376
  %14713 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14714 = load double, ptr %14713, align 8, !dbg !376
  %14715 = load double, ptr %14711, align 16, !dbg !376
  %14716 = getelementptr inbounds { double, double }, ptr %14711, i32 0, i32 1, !dbg !376
  %14717 = load double, ptr %14716, align 8, !dbg !376
  %14718 = call { double, double } @make_vec(double %14712, double %14714, double %14715, double %14717), !dbg !376
  %14719 = extractvalue { double, double } %14718, 0, !dbg !376
  store double %14719, ptr %17, align 8, !dbg !376
  %14720 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14721 = extractvalue { double, double } %14718, 1, !dbg !376
  store double %14721, ptr %14720, align 8, !dbg !376
  %14722 = load double, ptr %16, align 8, !dbg !377
  %14723 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14724 = load double, ptr %14723, align 8, !dbg !377
  %14725 = load double, ptr %17, align 8, !dbg !377
  %14726 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14727 = load double, ptr %14726, align 8, !dbg !377
  %14728 = call double @cross(double %14722, double %14724, double %14725, double %14727), !dbg !377
  %14729 = load i32, ptr %10, align 4, !dbg !378
  %14730 = sext i32 %14729 to i64, !dbg !379
  %14731 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14730, !dbg !379
  %14732 = load double, ptr %6, align 8, !dbg !380
  %14733 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14734 = load double, ptr %14733, align 8, !dbg !380
  %14735 = load double, ptr %14731, align 16, !dbg !380
  %14736 = getelementptr inbounds { double, double }, ptr %14731, i32 0, i32 1, !dbg !380
  %14737 = load double, ptr %14736, align 8, !dbg !380
  %14738 = call { double, double } @make_vec(double %14732, double %14734, double %14735, double %14737), !dbg !380
  %14739 = extractvalue { double, double } %14738, 0, !dbg !380
  store double %14739, ptr %18, align 8, !dbg !380
  %14740 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14741 = extractvalue { double, double } %14738, 1, !dbg !380
  store double %14741, ptr %14740, align 8, !dbg !380
  %14742 = load i32, ptr %10, align 4, !dbg !381
  %14743 = add nsw i32 %14742, 1, !dbg !382
  %14744 = sext i32 %14743 to i64, !dbg !383
  %14745 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14744, !dbg !383
  %14746 = load double, ptr %6, align 8, !dbg !384
  %14747 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14748 = load double, ptr %14747, align 8, !dbg !384
  %14749 = load double, ptr %14745, align 16, !dbg !384
  %14750 = getelementptr inbounds { double, double }, ptr %14745, i32 0, i32 1, !dbg !384
  %14751 = load double, ptr %14750, align 8, !dbg !384
  %14752 = call { double, double } @make_vec(double %14746, double %14748, double %14749, double %14751), !dbg !384
  %14753 = extractvalue { double, double } %14752, 0, !dbg !384
  store double %14753, ptr %19, align 8, !dbg !384
  %14754 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14755 = extractvalue { double, double } %14752, 1, !dbg !384
  store double %14755, ptr %14754, align 8, !dbg !384
  %14756 = load double, ptr %18, align 8, !dbg !385
  %14757 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14758 = load double, ptr %14757, align 8, !dbg !385
  %14759 = load double, ptr %19, align 8, !dbg !385
  %14760 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14761 = load double, ptr %14760, align 8, !dbg !385
  %14762 = call double @dot(double %14756, double %14758, double %14759, double %14761), !dbg !385
  %14763 = call double @atan2(double noundef %14728, double noundef %14762) #6, !dbg !386
  store double %14763, ptr %13, align 8, !dbg !387
  %14764 = load double, ptr %13, align 8, !dbg !388
  %14765 = load double, ptr %14, align 8, !dbg !389
  %14766 = fadd double %14765, %14764, !dbg !389
  store double %14766, ptr %14, align 8, !dbg !389
  %14767 = load double, ptr %13, align 8, !dbg !390
  %14768 = fsub double %14767, 0x400921FB54442D18, !dbg !392
  %14769 = call double @llvm.fabs.f64(double %14768), !dbg !393
  %14770 = fcmp ole double %14769, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14770, label %14330, label %14771, !dbg !395

14771:                                            ; preds = %14694
  %14772 = load double, ptr %13, align 8, !dbg !396
  %14773 = fadd double %14772, 0x400921FB54442D18, !dbg !397
  %14774 = call double @llvm.fabs.f64(double %14773), !dbg !398
  %14775 = fcmp ole double %14774, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14775, label %14330, label %14776, !dbg !400

14776:                                            ; preds = %14771
  br label %14777, !dbg !403

14777:                                            ; preds = %14776
  %14778 = load i32, ptr %10, align 4, !dbg !404
  %14779 = add nsw i32 %14778, 1, !dbg !404
  store i32 %14779, ptr %10, align 4, !dbg !404
  %14780 = load i32, ptr %10, align 4, !dbg !364
  %14781 = load i32, ptr %8, align 4, !dbg !366
  %14782 = icmp slt i32 %14780, %14781, !dbg !367
  br i1 %14782, label %14783, label %48422, !dbg !368

14783:                                            ; preds = %14777
  %14784 = load i32, ptr %10, align 4, !dbg !369
  %14785 = sext i32 %14784 to i64, !dbg !371
  %14786 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14785, !dbg !371
  %14787 = load double, ptr %6, align 8, !dbg !372
  %14788 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14789 = load double, ptr %14788, align 8, !dbg !372
  %14790 = load double, ptr %14786, align 16, !dbg !372
  %14791 = getelementptr inbounds { double, double }, ptr %14786, i32 0, i32 1, !dbg !372
  %14792 = load double, ptr %14791, align 8, !dbg !372
  %14793 = call { double, double } @make_vec(double %14787, double %14789, double %14790, double %14792), !dbg !372
  %14794 = extractvalue { double, double } %14793, 0, !dbg !372
  store double %14794, ptr %16, align 8, !dbg !372
  %14795 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14796 = extractvalue { double, double } %14793, 1, !dbg !372
  store double %14796, ptr %14795, align 8, !dbg !372
  %14797 = load i32, ptr %10, align 4, !dbg !373
  %14798 = add nsw i32 %14797, 1, !dbg !374
  %14799 = sext i32 %14798 to i64, !dbg !375
  %14800 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14799, !dbg !375
  %14801 = load double, ptr %6, align 8, !dbg !376
  %14802 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14803 = load double, ptr %14802, align 8, !dbg !376
  %14804 = load double, ptr %14800, align 16, !dbg !376
  %14805 = getelementptr inbounds { double, double }, ptr %14800, i32 0, i32 1, !dbg !376
  %14806 = load double, ptr %14805, align 8, !dbg !376
  %14807 = call { double, double } @make_vec(double %14801, double %14803, double %14804, double %14806), !dbg !376
  %14808 = extractvalue { double, double } %14807, 0, !dbg !376
  store double %14808, ptr %17, align 8, !dbg !376
  %14809 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14810 = extractvalue { double, double } %14807, 1, !dbg !376
  store double %14810, ptr %14809, align 8, !dbg !376
  %14811 = load double, ptr %16, align 8, !dbg !377
  %14812 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14813 = load double, ptr %14812, align 8, !dbg !377
  %14814 = load double, ptr %17, align 8, !dbg !377
  %14815 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14816 = load double, ptr %14815, align 8, !dbg !377
  %14817 = call double @cross(double %14811, double %14813, double %14814, double %14816), !dbg !377
  %14818 = load i32, ptr %10, align 4, !dbg !378
  %14819 = sext i32 %14818 to i64, !dbg !379
  %14820 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14819, !dbg !379
  %14821 = load double, ptr %6, align 8, !dbg !380
  %14822 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14823 = load double, ptr %14822, align 8, !dbg !380
  %14824 = load double, ptr %14820, align 16, !dbg !380
  %14825 = getelementptr inbounds { double, double }, ptr %14820, i32 0, i32 1, !dbg !380
  %14826 = load double, ptr %14825, align 8, !dbg !380
  %14827 = call { double, double } @make_vec(double %14821, double %14823, double %14824, double %14826), !dbg !380
  %14828 = extractvalue { double, double } %14827, 0, !dbg !380
  store double %14828, ptr %18, align 8, !dbg !380
  %14829 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14830 = extractvalue { double, double } %14827, 1, !dbg !380
  store double %14830, ptr %14829, align 8, !dbg !380
  %14831 = load i32, ptr %10, align 4, !dbg !381
  %14832 = add nsw i32 %14831, 1, !dbg !382
  %14833 = sext i32 %14832 to i64, !dbg !383
  %14834 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14833, !dbg !383
  %14835 = load double, ptr %6, align 8, !dbg !384
  %14836 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14837 = load double, ptr %14836, align 8, !dbg !384
  %14838 = load double, ptr %14834, align 16, !dbg !384
  %14839 = getelementptr inbounds { double, double }, ptr %14834, i32 0, i32 1, !dbg !384
  %14840 = load double, ptr %14839, align 8, !dbg !384
  %14841 = call { double, double } @make_vec(double %14835, double %14837, double %14838, double %14840), !dbg !384
  %14842 = extractvalue { double, double } %14841, 0, !dbg !384
  store double %14842, ptr %19, align 8, !dbg !384
  %14843 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14844 = extractvalue { double, double } %14841, 1, !dbg !384
  store double %14844, ptr %14843, align 8, !dbg !384
  %14845 = load double, ptr %18, align 8, !dbg !385
  %14846 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14847 = load double, ptr %14846, align 8, !dbg !385
  %14848 = load double, ptr %19, align 8, !dbg !385
  %14849 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14850 = load double, ptr %14849, align 8, !dbg !385
  %14851 = call double @dot(double %14845, double %14847, double %14848, double %14850), !dbg !385
  %14852 = call double @atan2(double noundef %14817, double noundef %14851) #6, !dbg !386
  store double %14852, ptr %13, align 8, !dbg !387
  %14853 = load double, ptr %13, align 8, !dbg !388
  %14854 = load double, ptr %14, align 8, !dbg !389
  %14855 = fadd double %14854, %14853, !dbg !389
  store double %14855, ptr %14, align 8, !dbg !389
  %14856 = load double, ptr %13, align 8, !dbg !390
  %14857 = fsub double %14856, 0x400921FB54442D18, !dbg !392
  %14858 = call double @llvm.fabs.f64(double %14857), !dbg !393
  %14859 = fcmp ole double %14858, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14859, label %14330, label %14860, !dbg !395

14860:                                            ; preds = %14783
  %14861 = load double, ptr %13, align 8, !dbg !396
  %14862 = fadd double %14861, 0x400921FB54442D18, !dbg !397
  %14863 = call double @llvm.fabs.f64(double %14862), !dbg !398
  %14864 = fcmp ole double %14863, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14864, label %14330, label %14865, !dbg !400

14865:                                            ; preds = %14860
  br label %14866, !dbg !403

14866:                                            ; preds = %14865
  %14867 = load i32, ptr %10, align 4, !dbg !404
  %14868 = add nsw i32 %14867, 1, !dbg !404
  store i32 %14868, ptr %10, align 4, !dbg !404
  %14869 = load i32, ptr %10, align 4, !dbg !364
  %14870 = load i32, ptr %8, align 4, !dbg !366
  %14871 = icmp slt i32 %14869, %14870, !dbg !367
  br i1 %14871, label %14872, label %48422, !dbg !368

14872:                                            ; preds = %14866
  %14873 = load i32, ptr %10, align 4, !dbg !369
  %14874 = sext i32 %14873 to i64, !dbg !371
  %14875 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14874, !dbg !371
  %14876 = load double, ptr %6, align 8, !dbg !372
  %14877 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14878 = load double, ptr %14877, align 8, !dbg !372
  %14879 = load double, ptr %14875, align 16, !dbg !372
  %14880 = getelementptr inbounds { double, double }, ptr %14875, i32 0, i32 1, !dbg !372
  %14881 = load double, ptr %14880, align 8, !dbg !372
  %14882 = call { double, double } @make_vec(double %14876, double %14878, double %14879, double %14881), !dbg !372
  %14883 = extractvalue { double, double } %14882, 0, !dbg !372
  store double %14883, ptr %16, align 8, !dbg !372
  %14884 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14885 = extractvalue { double, double } %14882, 1, !dbg !372
  store double %14885, ptr %14884, align 8, !dbg !372
  %14886 = load i32, ptr %10, align 4, !dbg !373
  %14887 = add nsw i32 %14886, 1, !dbg !374
  %14888 = sext i32 %14887 to i64, !dbg !375
  %14889 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14888, !dbg !375
  %14890 = load double, ptr %6, align 8, !dbg !376
  %14891 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14892 = load double, ptr %14891, align 8, !dbg !376
  %14893 = load double, ptr %14889, align 16, !dbg !376
  %14894 = getelementptr inbounds { double, double }, ptr %14889, i32 0, i32 1, !dbg !376
  %14895 = load double, ptr %14894, align 8, !dbg !376
  %14896 = call { double, double } @make_vec(double %14890, double %14892, double %14893, double %14895), !dbg !376
  %14897 = extractvalue { double, double } %14896, 0, !dbg !376
  store double %14897, ptr %17, align 8, !dbg !376
  %14898 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14899 = extractvalue { double, double } %14896, 1, !dbg !376
  store double %14899, ptr %14898, align 8, !dbg !376
  %14900 = load double, ptr %16, align 8, !dbg !377
  %14901 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14902 = load double, ptr %14901, align 8, !dbg !377
  %14903 = load double, ptr %17, align 8, !dbg !377
  %14904 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14905 = load double, ptr %14904, align 8, !dbg !377
  %14906 = call double @cross(double %14900, double %14902, double %14903, double %14905), !dbg !377
  %14907 = load i32, ptr %10, align 4, !dbg !378
  %14908 = sext i32 %14907 to i64, !dbg !379
  %14909 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14908, !dbg !379
  %14910 = load double, ptr %6, align 8, !dbg !380
  %14911 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %14912 = load double, ptr %14911, align 8, !dbg !380
  %14913 = load double, ptr %14909, align 16, !dbg !380
  %14914 = getelementptr inbounds { double, double }, ptr %14909, i32 0, i32 1, !dbg !380
  %14915 = load double, ptr %14914, align 8, !dbg !380
  %14916 = call { double, double } @make_vec(double %14910, double %14912, double %14913, double %14915), !dbg !380
  %14917 = extractvalue { double, double } %14916, 0, !dbg !380
  store double %14917, ptr %18, align 8, !dbg !380
  %14918 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %14919 = extractvalue { double, double } %14916, 1, !dbg !380
  store double %14919, ptr %14918, align 8, !dbg !380
  %14920 = load i32, ptr %10, align 4, !dbg !381
  %14921 = add nsw i32 %14920, 1, !dbg !382
  %14922 = sext i32 %14921 to i64, !dbg !383
  %14923 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14922, !dbg !383
  %14924 = load double, ptr %6, align 8, !dbg !384
  %14925 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %14926 = load double, ptr %14925, align 8, !dbg !384
  %14927 = load double, ptr %14923, align 16, !dbg !384
  %14928 = getelementptr inbounds { double, double }, ptr %14923, i32 0, i32 1, !dbg !384
  %14929 = load double, ptr %14928, align 8, !dbg !384
  %14930 = call { double, double } @make_vec(double %14924, double %14926, double %14927, double %14929), !dbg !384
  %14931 = extractvalue { double, double } %14930, 0, !dbg !384
  store double %14931, ptr %19, align 8, !dbg !384
  %14932 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %14933 = extractvalue { double, double } %14930, 1, !dbg !384
  store double %14933, ptr %14932, align 8, !dbg !384
  %14934 = load double, ptr %18, align 8, !dbg !385
  %14935 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %14936 = load double, ptr %14935, align 8, !dbg !385
  %14937 = load double, ptr %19, align 8, !dbg !385
  %14938 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %14939 = load double, ptr %14938, align 8, !dbg !385
  %14940 = call double @dot(double %14934, double %14936, double %14937, double %14939), !dbg !385
  %14941 = call double @atan2(double noundef %14906, double noundef %14940) #6, !dbg !386
  store double %14941, ptr %13, align 8, !dbg !387
  %14942 = load double, ptr %13, align 8, !dbg !388
  %14943 = load double, ptr %14, align 8, !dbg !389
  %14944 = fadd double %14943, %14942, !dbg !389
  store double %14944, ptr %14, align 8, !dbg !389
  %14945 = load double, ptr %13, align 8, !dbg !390
  %14946 = fsub double %14945, 0x400921FB54442D18, !dbg !392
  %14947 = call double @llvm.fabs.f64(double %14946), !dbg !393
  %14948 = fcmp ole double %14947, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %14948, label %14330, label %14949, !dbg !395

14949:                                            ; preds = %14872
  %14950 = load double, ptr %13, align 8, !dbg !396
  %14951 = fadd double %14950, 0x400921FB54442D18, !dbg !397
  %14952 = call double @llvm.fabs.f64(double %14951), !dbg !398
  %14953 = fcmp ole double %14952, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %14953, label %14330, label %14954, !dbg !400

14954:                                            ; preds = %14949
  br label %14955, !dbg !403

14955:                                            ; preds = %14954
  %14956 = load i32, ptr %10, align 4, !dbg !404
  %14957 = add nsw i32 %14956, 1, !dbg !404
  store i32 %14957, ptr %10, align 4, !dbg !404
  %14958 = load i32, ptr %10, align 4, !dbg !364
  %14959 = load i32, ptr %8, align 4, !dbg !366
  %14960 = icmp slt i32 %14958, %14959, !dbg !367
  br i1 %14960, label %14961, label %48422, !dbg !368

14961:                                            ; preds = %14955
  %14962 = load i32, ptr %10, align 4, !dbg !369
  %14963 = sext i32 %14962 to i64, !dbg !371
  %14964 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14963, !dbg !371
  %14965 = load double, ptr %6, align 8, !dbg !372
  %14966 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %14967 = load double, ptr %14966, align 8, !dbg !372
  %14968 = load double, ptr %14964, align 16, !dbg !372
  %14969 = getelementptr inbounds { double, double }, ptr %14964, i32 0, i32 1, !dbg !372
  %14970 = load double, ptr %14969, align 8, !dbg !372
  %14971 = call { double, double } @make_vec(double %14965, double %14967, double %14968, double %14970), !dbg !372
  %14972 = extractvalue { double, double } %14971, 0, !dbg !372
  store double %14972, ptr %16, align 8, !dbg !372
  %14973 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %14974 = extractvalue { double, double } %14971, 1, !dbg !372
  store double %14974, ptr %14973, align 8, !dbg !372
  %14975 = load i32, ptr %10, align 4, !dbg !373
  %14976 = add nsw i32 %14975, 1, !dbg !374
  %14977 = sext i32 %14976 to i64, !dbg !375
  %14978 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14977, !dbg !375
  %14979 = load double, ptr %6, align 8, !dbg !376
  %14980 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %14981 = load double, ptr %14980, align 8, !dbg !376
  %14982 = load double, ptr %14978, align 16, !dbg !376
  %14983 = getelementptr inbounds { double, double }, ptr %14978, i32 0, i32 1, !dbg !376
  %14984 = load double, ptr %14983, align 8, !dbg !376
  %14985 = call { double, double } @make_vec(double %14979, double %14981, double %14982, double %14984), !dbg !376
  %14986 = extractvalue { double, double } %14985, 0, !dbg !376
  store double %14986, ptr %17, align 8, !dbg !376
  %14987 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %14988 = extractvalue { double, double } %14985, 1, !dbg !376
  store double %14988, ptr %14987, align 8, !dbg !376
  %14989 = load double, ptr %16, align 8, !dbg !377
  %14990 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %14991 = load double, ptr %14990, align 8, !dbg !377
  %14992 = load double, ptr %17, align 8, !dbg !377
  %14993 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %14994 = load double, ptr %14993, align 8, !dbg !377
  %14995 = call double @cross(double %14989, double %14991, double %14992, double %14994), !dbg !377
  %14996 = load i32, ptr %10, align 4, !dbg !378
  %14997 = sext i32 %14996 to i64, !dbg !379
  %14998 = getelementptr inbounds %struct.POINT, ptr %26, i64 %14997, !dbg !379
  %14999 = load double, ptr %6, align 8, !dbg !380
  %15000 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15001 = load double, ptr %15000, align 8, !dbg !380
  %15002 = load double, ptr %14998, align 16, !dbg !380
  %15003 = getelementptr inbounds { double, double }, ptr %14998, i32 0, i32 1, !dbg !380
  %15004 = load double, ptr %15003, align 8, !dbg !380
  %15005 = call { double, double } @make_vec(double %14999, double %15001, double %15002, double %15004), !dbg !380
  %15006 = extractvalue { double, double } %15005, 0, !dbg !380
  store double %15006, ptr %18, align 8, !dbg !380
  %15007 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15008 = extractvalue { double, double } %15005, 1, !dbg !380
  store double %15008, ptr %15007, align 8, !dbg !380
  %15009 = load i32, ptr %10, align 4, !dbg !381
  %15010 = add nsw i32 %15009, 1, !dbg !382
  %15011 = sext i32 %15010 to i64, !dbg !383
  %15012 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15011, !dbg !383
  %15013 = load double, ptr %6, align 8, !dbg !384
  %15014 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15015 = load double, ptr %15014, align 8, !dbg !384
  %15016 = load double, ptr %15012, align 16, !dbg !384
  %15017 = getelementptr inbounds { double, double }, ptr %15012, i32 0, i32 1, !dbg !384
  %15018 = load double, ptr %15017, align 8, !dbg !384
  %15019 = call { double, double } @make_vec(double %15013, double %15015, double %15016, double %15018), !dbg !384
  %15020 = extractvalue { double, double } %15019, 0, !dbg !384
  store double %15020, ptr %19, align 8, !dbg !384
  %15021 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15022 = extractvalue { double, double } %15019, 1, !dbg !384
  store double %15022, ptr %15021, align 8, !dbg !384
  %15023 = load double, ptr %18, align 8, !dbg !385
  %15024 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15025 = load double, ptr %15024, align 8, !dbg !385
  %15026 = load double, ptr %19, align 8, !dbg !385
  %15027 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15028 = load double, ptr %15027, align 8, !dbg !385
  %15029 = call double @dot(double %15023, double %15025, double %15026, double %15028), !dbg !385
  %15030 = call double @atan2(double noundef %14995, double noundef %15029) #6, !dbg !386
  store double %15030, ptr %13, align 8, !dbg !387
  %15031 = load double, ptr %13, align 8, !dbg !388
  %15032 = load double, ptr %14, align 8, !dbg !389
  %15033 = fadd double %15032, %15031, !dbg !389
  store double %15033, ptr %14, align 8, !dbg !389
  %15034 = load double, ptr %13, align 8, !dbg !390
  %15035 = fsub double %15034, 0x400921FB54442D18, !dbg !392
  %15036 = call double @llvm.fabs.f64(double %15035), !dbg !393
  %15037 = fcmp ole double %15036, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15037, label %14330, label %15038, !dbg !395

15038:                                            ; preds = %14961
  %15039 = load double, ptr %13, align 8, !dbg !396
  %15040 = fadd double %15039, 0x400921FB54442D18, !dbg !397
  %15041 = call double @llvm.fabs.f64(double %15040), !dbg !398
  %15042 = fcmp ole double %15041, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15042, label %14330, label %15043, !dbg !400

15043:                                            ; preds = %15038
  br label %15044, !dbg !403

15044:                                            ; preds = %15043
  %15045 = load i32, ptr %10, align 4, !dbg !404
  %15046 = add nsw i32 %15045, 1, !dbg !404
  store i32 %15046, ptr %10, align 4, !dbg !404
  %15047 = load i32, ptr %10, align 4, !dbg !364
  %15048 = load i32, ptr %8, align 4, !dbg !366
  %15049 = icmp slt i32 %15047, %15048, !dbg !367
  br i1 %15049, label %15050, label %48422, !dbg !368

15050:                                            ; preds = %15044
  %15051 = load i32, ptr %10, align 4, !dbg !369
  %15052 = sext i32 %15051 to i64, !dbg !371
  %15053 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15052, !dbg !371
  %15054 = load double, ptr %6, align 8, !dbg !372
  %15055 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15056 = load double, ptr %15055, align 8, !dbg !372
  %15057 = load double, ptr %15053, align 16, !dbg !372
  %15058 = getelementptr inbounds { double, double }, ptr %15053, i32 0, i32 1, !dbg !372
  %15059 = load double, ptr %15058, align 8, !dbg !372
  %15060 = call { double, double } @make_vec(double %15054, double %15056, double %15057, double %15059), !dbg !372
  %15061 = extractvalue { double, double } %15060, 0, !dbg !372
  store double %15061, ptr %16, align 8, !dbg !372
  %15062 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15063 = extractvalue { double, double } %15060, 1, !dbg !372
  store double %15063, ptr %15062, align 8, !dbg !372
  %15064 = load i32, ptr %10, align 4, !dbg !373
  %15065 = add nsw i32 %15064, 1, !dbg !374
  %15066 = sext i32 %15065 to i64, !dbg !375
  %15067 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15066, !dbg !375
  %15068 = load double, ptr %6, align 8, !dbg !376
  %15069 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15070 = load double, ptr %15069, align 8, !dbg !376
  %15071 = load double, ptr %15067, align 16, !dbg !376
  %15072 = getelementptr inbounds { double, double }, ptr %15067, i32 0, i32 1, !dbg !376
  %15073 = load double, ptr %15072, align 8, !dbg !376
  %15074 = call { double, double } @make_vec(double %15068, double %15070, double %15071, double %15073), !dbg !376
  %15075 = extractvalue { double, double } %15074, 0, !dbg !376
  store double %15075, ptr %17, align 8, !dbg !376
  %15076 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15077 = extractvalue { double, double } %15074, 1, !dbg !376
  store double %15077, ptr %15076, align 8, !dbg !376
  %15078 = load double, ptr %16, align 8, !dbg !377
  %15079 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15080 = load double, ptr %15079, align 8, !dbg !377
  %15081 = load double, ptr %17, align 8, !dbg !377
  %15082 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15083 = load double, ptr %15082, align 8, !dbg !377
  %15084 = call double @cross(double %15078, double %15080, double %15081, double %15083), !dbg !377
  %15085 = load i32, ptr %10, align 4, !dbg !378
  %15086 = sext i32 %15085 to i64, !dbg !379
  %15087 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15086, !dbg !379
  %15088 = load double, ptr %6, align 8, !dbg !380
  %15089 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15090 = load double, ptr %15089, align 8, !dbg !380
  %15091 = load double, ptr %15087, align 16, !dbg !380
  %15092 = getelementptr inbounds { double, double }, ptr %15087, i32 0, i32 1, !dbg !380
  %15093 = load double, ptr %15092, align 8, !dbg !380
  %15094 = call { double, double } @make_vec(double %15088, double %15090, double %15091, double %15093), !dbg !380
  %15095 = extractvalue { double, double } %15094, 0, !dbg !380
  store double %15095, ptr %18, align 8, !dbg !380
  %15096 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15097 = extractvalue { double, double } %15094, 1, !dbg !380
  store double %15097, ptr %15096, align 8, !dbg !380
  %15098 = load i32, ptr %10, align 4, !dbg !381
  %15099 = add nsw i32 %15098, 1, !dbg !382
  %15100 = sext i32 %15099 to i64, !dbg !383
  %15101 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15100, !dbg !383
  %15102 = load double, ptr %6, align 8, !dbg !384
  %15103 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15104 = load double, ptr %15103, align 8, !dbg !384
  %15105 = load double, ptr %15101, align 16, !dbg !384
  %15106 = getelementptr inbounds { double, double }, ptr %15101, i32 0, i32 1, !dbg !384
  %15107 = load double, ptr %15106, align 8, !dbg !384
  %15108 = call { double, double } @make_vec(double %15102, double %15104, double %15105, double %15107), !dbg !384
  %15109 = extractvalue { double, double } %15108, 0, !dbg !384
  store double %15109, ptr %19, align 8, !dbg !384
  %15110 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15111 = extractvalue { double, double } %15108, 1, !dbg !384
  store double %15111, ptr %15110, align 8, !dbg !384
  %15112 = load double, ptr %18, align 8, !dbg !385
  %15113 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15114 = load double, ptr %15113, align 8, !dbg !385
  %15115 = load double, ptr %19, align 8, !dbg !385
  %15116 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15117 = load double, ptr %15116, align 8, !dbg !385
  %15118 = call double @dot(double %15112, double %15114, double %15115, double %15117), !dbg !385
  %15119 = call double @atan2(double noundef %15084, double noundef %15118) #6, !dbg !386
  store double %15119, ptr %13, align 8, !dbg !387
  %15120 = load double, ptr %13, align 8, !dbg !388
  %15121 = load double, ptr %14, align 8, !dbg !389
  %15122 = fadd double %15121, %15120, !dbg !389
  store double %15122, ptr %14, align 8, !dbg !389
  %15123 = load double, ptr %13, align 8, !dbg !390
  %15124 = fsub double %15123, 0x400921FB54442D18, !dbg !392
  %15125 = call double @llvm.fabs.f64(double %15124), !dbg !393
  %15126 = fcmp ole double %15125, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15126, label %14330, label %15127, !dbg !395

15127:                                            ; preds = %15050
  %15128 = load double, ptr %13, align 8, !dbg !396
  %15129 = fadd double %15128, 0x400921FB54442D18, !dbg !397
  %15130 = call double @llvm.fabs.f64(double %15129), !dbg !398
  %15131 = fcmp ole double %15130, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15131, label %14330, label %15132, !dbg !400

15132:                                            ; preds = %15127
  br label %15133, !dbg !403

15133:                                            ; preds = %15132
  %15134 = load i32, ptr %10, align 4, !dbg !404
  %15135 = add nsw i32 %15134, 1, !dbg !404
  store i32 %15135, ptr %10, align 4, !dbg !404
  %15136 = load i32, ptr %10, align 4, !dbg !364
  %15137 = load i32, ptr %8, align 4, !dbg !366
  %15138 = icmp slt i32 %15136, %15137, !dbg !367
  br i1 %15138, label %15139, label %48422, !dbg !368

15139:                                            ; preds = %15133
  %15140 = load i32, ptr %10, align 4, !dbg !369
  %15141 = sext i32 %15140 to i64, !dbg !371
  %15142 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15141, !dbg !371
  %15143 = load double, ptr %6, align 8, !dbg !372
  %15144 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15145 = load double, ptr %15144, align 8, !dbg !372
  %15146 = load double, ptr %15142, align 16, !dbg !372
  %15147 = getelementptr inbounds { double, double }, ptr %15142, i32 0, i32 1, !dbg !372
  %15148 = load double, ptr %15147, align 8, !dbg !372
  %15149 = call { double, double } @make_vec(double %15143, double %15145, double %15146, double %15148), !dbg !372
  %15150 = extractvalue { double, double } %15149, 0, !dbg !372
  store double %15150, ptr %16, align 8, !dbg !372
  %15151 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15152 = extractvalue { double, double } %15149, 1, !dbg !372
  store double %15152, ptr %15151, align 8, !dbg !372
  %15153 = load i32, ptr %10, align 4, !dbg !373
  %15154 = add nsw i32 %15153, 1, !dbg !374
  %15155 = sext i32 %15154 to i64, !dbg !375
  %15156 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15155, !dbg !375
  %15157 = load double, ptr %6, align 8, !dbg !376
  %15158 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15159 = load double, ptr %15158, align 8, !dbg !376
  %15160 = load double, ptr %15156, align 16, !dbg !376
  %15161 = getelementptr inbounds { double, double }, ptr %15156, i32 0, i32 1, !dbg !376
  %15162 = load double, ptr %15161, align 8, !dbg !376
  %15163 = call { double, double } @make_vec(double %15157, double %15159, double %15160, double %15162), !dbg !376
  %15164 = extractvalue { double, double } %15163, 0, !dbg !376
  store double %15164, ptr %17, align 8, !dbg !376
  %15165 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15166 = extractvalue { double, double } %15163, 1, !dbg !376
  store double %15166, ptr %15165, align 8, !dbg !376
  %15167 = load double, ptr %16, align 8, !dbg !377
  %15168 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15169 = load double, ptr %15168, align 8, !dbg !377
  %15170 = load double, ptr %17, align 8, !dbg !377
  %15171 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15172 = load double, ptr %15171, align 8, !dbg !377
  %15173 = call double @cross(double %15167, double %15169, double %15170, double %15172), !dbg !377
  %15174 = load i32, ptr %10, align 4, !dbg !378
  %15175 = sext i32 %15174 to i64, !dbg !379
  %15176 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15175, !dbg !379
  %15177 = load double, ptr %6, align 8, !dbg !380
  %15178 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15179 = load double, ptr %15178, align 8, !dbg !380
  %15180 = load double, ptr %15176, align 16, !dbg !380
  %15181 = getelementptr inbounds { double, double }, ptr %15176, i32 0, i32 1, !dbg !380
  %15182 = load double, ptr %15181, align 8, !dbg !380
  %15183 = call { double, double } @make_vec(double %15177, double %15179, double %15180, double %15182), !dbg !380
  %15184 = extractvalue { double, double } %15183, 0, !dbg !380
  store double %15184, ptr %18, align 8, !dbg !380
  %15185 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15186 = extractvalue { double, double } %15183, 1, !dbg !380
  store double %15186, ptr %15185, align 8, !dbg !380
  %15187 = load i32, ptr %10, align 4, !dbg !381
  %15188 = add nsw i32 %15187, 1, !dbg !382
  %15189 = sext i32 %15188 to i64, !dbg !383
  %15190 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15189, !dbg !383
  %15191 = load double, ptr %6, align 8, !dbg !384
  %15192 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15193 = load double, ptr %15192, align 8, !dbg !384
  %15194 = load double, ptr %15190, align 16, !dbg !384
  %15195 = getelementptr inbounds { double, double }, ptr %15190, i32 0, i32 1, !dbg !384
  %15196 = load double, ptr %15195, align 8, !dbg !384
  %15197 = call { double, double } @make_vec(double %15191, double %15193, double %15194, double %15196), !dbg !384
  %15198 = extractvalue { double, double } %15197, 0, !dbg !384
  store double %15198, ptr %19, align 8, !dbg !384
  %15199 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15200 = extractvalue { double, double } %15197, 1, !dbg !384
  store double %15200, ptr %15199, align 8, !dbg !384
  %15201 = load double, ptr %18, align 8, !dbg !385
  %15202 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15203 = load double, ptr %15202, align 8, !dbg !385
  %15204 = load double, ptr %19, align 8, !dbg !385
  %15205 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15206 = load double, ptr %15205, align 8, !dbg !385
  %15207 = call double @dot(double %15201, double %15203, double %15204, double %15206), !dbg !385
  %15208 = call double @atan2(double noundef %15173, double noundef %15207) #6, !dbg !386
  store double %15208, ptr %13, align 8, !dbg !387
  %15209 = load double, ptr %13, align 8, !dbg !388
  %15210 = load double, ptr %14, align 8, !dbg !389
  %15211 = fadd double %15210, %15209, !dbg !389
  store double %15211, ptr %14, align 8, !dbg !389
  %15212 = load double, ptr %13, align 8, !dbg !390
  %15213 = fsub double %15212, 0x400921FB54442D18, !dbg !392
  %15214 = call double @llvm.fabs.f64(double %15213), !dbg !393
  %15215 = fcmp ole double %15214, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15215, label %14330, label %15216, !dbg !395

15216:                                            ; preds = %15139
  %15217 = load double, ptr %13, align 8, !dbg !396
  %15218 = fadd double %15217, 0x400921FB54442D18, !dbg !397
  %15219 = call double @llvm.fabs.f64(double %15218), !dbg !398
  %15220 = fcmp ole double %15219, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15220, label %14330, label %15221, !dbg !400

15221:                                            ; preds = %15216
  br label %15222, !dbg !403

15222:                                            ; preds = %15221
  %15223 = load i32, ptr %10, align 4, !dbg !404
  %15224 = add nsw i32 %15223, 1, !dbg !404
  store i32 %15224, ptr %10, align 4, !dbg !404
  %15225 = load i32, ptr %10, align 4, !dbg !364
  %15226 = load i32, ptr %8, align 4, !dbg !366
  %15227 = icmp slt i32 %15225, %15226, !dbg !367
  br i1 %15227, label %15228, label %48422, !dbg !368

15228:                                            ; preds = %15222
  %15229 = load i32, ptr %10, align 4, !dbg !369
  %15230 = sext i32 %15229 to i64, !dbg !371
  %15231 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15230, !dbg !371
  %15232 = load double, ptr %6, align 8, !dbg !372
  %15233 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15234 = load double, ptr %15233, align 8, !dbg !372
  %15235 = load double, ptr %15231, align 16, !dbg !372
  %15236 = getelementptr inbounds { double, double }, ptr %15231, i32 0, i32 1, !dbg !372
  %15237 = load double, ptr %15236, align 8, !dbg !372
  %15238 = call { double, double } @make_vec(double %15232, double %15234, double %15235, double %15237), !dbg !372
  %15239 = extractvalue { double, double } %15238, 0, !dbg !372
  store double %15239, ptr %16, align 8, !dbg !372
  %15240 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15241 = extractvalue { double, double } %15238, 1, !dbg !372
  store double %15241, ptr %15240, align 8, !dbg !372
  %15242 = load i32, ptr %10, align 4, !dbg !373
  %15243 = add nsw i32 %15242, 1, !dbg !374
  %15244 = sext i32 %15243 to i64, !dbg !375
  %15245 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15244, !dbg !375
  %15246 = load double, ptr %6, align 8, !dbg !376
  %15247 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15248 = load double, ptr %15247, align 8, !dbg !376
  %15249 = load double, ptr %15245, align 16, !dbg !376
  %15250 = getelementptr inbounds { double, double }, ptr %15245, i32 0, i32 1, !dbg !376
  %15251 = load double, ptr %15250, align 8, !dbg !376
  %15252 = call { double, double } @make_vec(double %15246, double %15248, double %15249, double %15251), !dbg !376
  %15253 = extractvalue { double, double } %15252, 0, !dbg !376
  store double %15253, ptr %17, align 8, !dbg !376
  %15254 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15255 = extractvalue { double, double } %15252, 1, !dbg !376
  store double %15255, ptr %15254, align 8, !dbg !376
  %15256 = load double, ptr %16, align 8, !dbg !377
  %15257 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15258 = load double, ptr %15257, align 8, !dbg !377
  %15259 = load double, ptr %17, align 8, !dbg !377
  %15260 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15261 = load double, ptr %15260, align 8, !dbg !377
  %15262 = call double @cross(double %15256, double %15258, double %15259, double %15261), !dbg !377
  %15263 = load i32, ptr %10, align 4, !dbg !378
  %15264 = sext i32 %15263 to i64, !dbg !379
  %15265 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15264, !dbg !379
  %15266 = load double, ptr %6, align 8, !dbg !380
  %15267 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15268 = load double, ptr %15267, align 8, !dbg !380
  %15269 = load double, ptr %15265, align 16, !dbg !380
  %15270 = getelementptr inbounds { double, double }, ptr %15265, i32 0, i32 1, !dbg !380
  %15271 = load double, ptr %15270, align 8, !dbg !380
  %15272 = call { double, double } @make_vec(double %15266, double %15268, double %15269, double %15271), !dbg !380
  %15273 = extractvalue { double, double } %15272, 0, !dbg !380
  store double %15273, ptr %18, align 8, !dbg !380
  %15274 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15275 = extractvalue { double, double } %15272, 1, !dbg !380
  store double %15275, ptr %15274, align 8, !dbg !380
  %15276 = load i32, ptr %10, align 4, !dbg !381
  %15277 = add nsw i32 %15276, 1, !dbg !382
  %15278 = sext i32 %15277 to i64, !dbg !383
  %15279 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15278, !dbg !383
  %15280 = load double, ptr %6, align 8, !dbg !384
  %15281 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15282 = load double, ptr %15281, align 8, !dbg !384
  %15283 = load double, ptr %15279, align 16, !dbg !384
  %15284 = getelementptr inbounds { double, double }, ptr %15279, i32 0, i32 1, !dbg !384
  %15285 = load double, ptr %15284, align 8, !dbg !384
  %15286 = call { double, double } @make_vec(double %15280, double %15282, double %15283, double %15285), !dbg !384
  %15287 = extractvalue { double, double } %15286, 0, !dbg !384
  store double %15287, ptr %19, align 8, !dbg !384
  %15288 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15289 = extractvalue { double, double } %15286, 1, !dbg !384
  store double %15289, ptr %15288, align 8, !dbg !384
  %15290 = load double, ptr %18, align 8, !dbg !385
  %15291 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15292 = load double, ptr %15291, align 8, !dbg !385
  %15293 = load double, ptr %19, align 8, !dbg !385
  %15294 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15295 = load double, ptr %15294, align 8, !dbg !385
  %15296 = call double @dot(double %15290, double %15292, double %15293, double %15295), !dbg !385
  %15297 = call double @atan2(double noundef %15262, double noundef %15296) #6, !dbg !386
  store double %15297, ptr %13, align 8, !dbg !387
  %15298 = load double, ptr %13, align 8, !dbg !388
  %15299 = load double, ptr %14, align 8, !dbg !389
  %15300 = fadd double %15299, %15298, !dbg !389
  store double %15300, ptr %14, align 8, !dbg !389
  %15301 = load double, ptr %13, align 8, !dbg !390
  %15302 = fsub double %15301, 0x400921FB54442D18, !dbg !392
  %15303 = call double @llvm.fabs.f64(double %15302), !dbg !393
  %15304 = fcmp ole double %15303, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15304, label %14330, label %15305, !dbg !395

15305:                                            ; preds = %15228
  %15306 = load double, ptr %13, align 8, !dbg !396
  %15307 = fadd double %15306, 0x400921FB54442D18, !dbg !397
  %15308 = call double @llvm.fabs.f64(double %15307), !dbg !398
  %15309 = fcmp ole double %15308, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15309, label %14330, label %15310, !dbg !400

15310:                                            ; preds = %15305
  br label %15311, !dbg !403

15311:                                            ; preds = %15310
  %15312 = load i32, ptr %10, align 4, !dbg !404
  %15313 = add nsw i32 %15312, 1, !dbg !404
  store i32 %15313, ptr %10, align 4, !dbg !404
  %15314 = load i32, ptr %10, align 4, !dbg !364
  %15315 = load i32, ptr %8, align 4, !dbg !366
  %15316 = icmp slt i32 %15314, %15315, !dbg !367
  br i1 %15316, label %15317, label %48422, !dbg !368

15317:                                            ; preds = %15311
  %15318 = load i32, ptr %10, align 4, !dbg !369
  %15319 = sext i32 %15318 to i64, !dbg !371
  %15320 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15319, !dbg !371
  %15321 = load double, ptr %6, align 8, !dbg !372
  %15322 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15323 = load double, ptr %15322, align 8, !dbg !372
  %15324 = load double, ptr %15320, align 16, !dbg !372
  %15325 = getelementptr inbounds { double, double }, ptr %15320, i32 0, i32 1, !dbg !372
  %15326 = load double, ptr %15325, align 8, !dbg !372
  %15327 = call { double, double } @make_vec(double %15321, double %15323, double %15324, double %15326), !dbg !372
  %15328 = extractvalue { double, double } %15327, 0, !dbg !372
  store double %15328, ptr %16, align 8, !dbg !372
  %15329 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15330 = extractvalue { double, double } %15327, 1, !dbg !372
  store double %15330, ptr %15329, align 8, !dbg !372
  %15331 = load i32, ptr %10, align 4, !dbg !373
  %15332 = add nsw i32 %15331, 1, !dbg !374
  %15333 = sext i32 %15332 to i64, !dbg !375
  %15334 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15333, !dbg !375
  %15335 = load double, ptr %6, align 8, !dbg !376
  %15336 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15337 = load double, ptr %15336, align 8, !dbg !376
  %15338 = load double, ptr %15334, align 16, !dbg !376
  %15339 = getelementptr inbounds { double, double }, ptr %15334, i32 0, i32 1, !dbg !376
  %15340 = load double, ptr %15339, align 8, !dbg !376
  %15341 = call { double, double } @make_vec(double %15335, double %15337, double %15338, double %15340), !dbg !376
  %15342 = extractvalue { double, double } %15341, 0, !dbg !376
  store double %15342, ptr %17, align 8, !dbg !376
  %15343 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15344 = extractvalue { double, double } %15341, 1, !dbg !376
  store double %15344, ptr %15343, align 8, !dbg !376
  %15345 = load double, ptr %16, align 8, !dbg !377
  %15346 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15347 = load double, ptr %15346, align 8, !dbg !377
  %15348 = load double, ptr %17, align 8, !dbg !377
  %15349 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15350 = load double, ptr %15349, align 8, !dbg !377
  %15351 = call double @cross(double %15345, double %15347, double %15348, double %15350), !dbg !377
  %15352 = load i32, ptr %10, align 4, !dbg !378
  %15353 = sext i32 %15352 to i64, !dbg !379
  %15354 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15353, !dbg !379
  %15355 = load double, ptr %6, align 8, !dbg !380
  %15356 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15357 = load double, ptr %15356, align 8, !dbg !380
  %15358 = load double, ptr %15354, align 16, !dbg !380
  %15359 = getelementptr inbounds { double, double }, ptr %15354, i32 0, i32 1, !dbg !380
  %15360 = load double, ptr %15359, align 8, !dbg !380
  %15361 = call { double, double } @make_vec(double %15355, double %15357, double %15358, double %15360), !dbg !380
  %15362 = extractvalue { double, double } %15361, 0, !dbg !380
  store double %15362, ptr %18, align 8, !dbg !380
  %15363 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15364 = extractvalue { double, double } %15361, 1, !dbg !380
  store double %15364, ptr %15363, align 8, !dbg !380
  %15365 = load i32, ptr %10, align 4, !dbg !381
  %15366 = add nsw i32 %15365, 1, !dbg !382
  %15367 = sext i32 %15366 to i64, !dbg !383
  %15368 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15367, !dbg !383
  %15369 = load double, ptr %6, align 8, !dbg !384
  %15370 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15371 = load double, ptr %15370, align 8, !dbg !384
  %15372 = load double, ptr %15368, align 16, !dbg !384
  %15373 = getelementptr inbounds { double, double }, ptr %15368, i32 0, i32 1, !dbg !384
  %15374 = load double, ptr %15373, align 8, !dbg !384
  %15375 = call { double, double } @make_vec(double %15369, double %15371, double %15372, double %15374), !dbg !384
  %15376 = extractvalue { double, double } %15375, 0, !dbg !384
  store double %15376, ptr %19, align 8, !dbg !384
  %15377 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15378 = extractvalue { double, double } %15375, 1, !dbg !384
  store double %15378, ptr %15377, align 8, !dbg !384
  %15379 = load double, ptr %18, align 8, !dbg !385
  %15380 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15381 = load double, ptr %15380, align 8, !dbg !385
  %15382 = load double, ptr %19, align 8, !dbg !385
  %15383 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15384 = load double, ptr %15383, align 8, !dbg !385
  %15385 = call double @dot(double %15379, double %15381, double %15382, double %15384), !dbg !385
  %15386 = call double @atan2(double noundef %15351, double noundef %15385) #6, !dbg !386
  store double %15386, ptr %13, align 8, !dbg !387
  %15387 = load double, ptr %13, align 8, !dbg !388
  %15388 = load double, ptr %14, align 8, !dbg !389
  %15389 = fadd double %15388, %15387, !dbg !389
  store double %15389, ptr %14, align 8, !dbg !389
  %15390 = load double, ptr %13, align 8, !dbg !390
  %15391 = fsub double %15390, 0x400921FB54442D18, !dbg !392
  %15392 = call double @llvm.fabs.f64(double %15391), !dbg !393
  %15393 = fcmp ole double %15392, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15393, label %14330, label %15394, !dbg !395

15394:                                            ; preds = %15317
  %15395 = load double, ptr %13, align 8, !dbg !396
  %15396 = fadd double %15395, 0x400921FB54442D18, !dbg !397
  %15397 = call double @llvm.fabs.f64(double %15396), !dbg !398
  %15398 = fcmp ole double %15397, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15398, label %14330, label %15399, !dbg !400

15399:                                            ; preds = %15394
  br label %15400, !dbg !403

15400:                                            ; preds = %15399
  %15401 = load i32, ptr %10, align 4, !dbg !404
  %15402 = add nsw i32 %15401, 1, !dbg !404
  store i32 %15402, ptr %10, align 4, !dbg !404
  %15403 = load i32, ptr %10, align 4, !dbg !364
  %15404 = load i32, ptr %8, align 4, !dbg !366
  %15405 = icmp slt i32 %15403, %15404, !dbg !367
  br i1 %15405, label %15406, label %48422, !dbg !368

15406:                                            ; preds = %15400
  %15407 = load i32, ptr %10, align 4, !dbg !369
  %15408 = sext i32 %15407 to i64, !dbg !371
  %15409 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15408, !dbg !371
  %15410 = load double, ptr %6, align 8, !dbg !372
  %15411 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15412 = load double, ptr %15411, align 8, !dbg !372
  %15413 = load double, ptr %15409, align 16, !dbg !372
  %15414 = getelementptr inbounds { double, double }, ptr %15409, i32 0, i32 1, !dbg !372
  %15415 = load double, ptr %15414, align 8, !dbg !372
  %15416 = call { double, double } @make_vec(double %15410, double %15412, double %15413, double %15415), !dbg !372
  %15417 = extractvalue { double, double } %15416, 0, !dbg !372
  store double %15417, ptr %16, align 8, !dbg !372
  %15418 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15419 = extractvalue { double, double } %15416, 1, !dbg !372
  store double %15419, ptr %15418, align 8, !dbg !372
  %15420 = load i32, ptr %10, align 4, !dbg !373
  %15421 = add nsw i32 %15420, 1, !dbg !374
  %15422 = sext i32 %15421 to i64, !dbg !375
  %15423 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15422, !dbg !375
  %15424 = load double, ptr %6, align 8, !dbg !376
  %15425 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15426 = load double, ptr %15425, align 8, !dbg !376
  %15427 = load double, ptr %15423, align 16, !dbg !376
  %15428 = getelementptr inbounds { double, double }, ptr %15423, i32 0, i32 1, !dbg !376
  %15429 = load double, ptr %15428, align 8, !dbg !376
  %15430 = call { double, double } @make_vec(double %15424, double %15426, double %15427, double %15429), !dbg !376
  %15431 = extractvalue { double, double } %15430, 0, !dbg !376
  store double %15431, ptr %17, align 8, !dbg !376
  %15432 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15433 = extractvalue { double, double } %15430, 1, !dbg !376
  store double %15433, ptr %15432, align 8, !dbg !376
  %15434 = load double, ptr %16, align 8, !dbg !377
  %15435 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15436 = load double, ptr %15435, align 8, !dbg !377
  %15437 = load double, ptr %17, align 8, !dbg !377
  %15438 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15439 = load double, ptr %15438, align 8, !dbg !377
  %15440 = call double @cross(double %15434, double %15436, double %15437, double %15439), !dbg !377
  %15441 = load i32, ptr %10, align 4, !dbg !378
  %15442 = sext i32 %15441 to i64, !dbg !379
  %15443 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15442, !dbg !379
  %15444 = load double, ptr %6, align 8, !dbg !380
  %15445 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15446 = load double, ptr %15445, align 8, !dbg !380
  %15447 = load double, ptr %15443, align 16, !dbg !380
  %15448 = getelementptr inbounds { double, double }, ptr %15443, i32 0, i32 1, !dbg !380
  %15449 = load double, ptr %15448, align 8, !dbg !380
  %15450 = call { double, double } @make_vec(double %15444, double %15446, double %15447, double %15449), !dbg !380
  %15451 = extractvalue { double, double } %15450, 0, !dbg !380
  store double %15451, ptr %18, align 8, !dbg !380
  %15452 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15453 = extractvalue { double, double } %15450, 1, !dbg !380
  store double %15453, ptr %15452, align 8, !dbg !380
  %15454 = load i32, ptr %10, align 4, !dbg !381
  %15455 = add nsw i32 %15454, 1, !dbg !382
  %15456 = sext i32 %15455 to i64, !dbg !383
  %15457 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15456, !dbg !383
  %15458 = load double, ptr %6, align 8, !dbg !384
  %15459 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15460 = load double, ptr %15459, align 8, !dbg !384
  %15461 = load double, ptr %15457, align 16, !dbg !384
  %15462 = getelementptr inbounds { double, double }, ptr %15457, i32 0, i32 1, !dbg !384
  %15463 = load double, ptr %15462, align 8, !dbg !384
  %15464 = call { double, double } @make_vec(double %15458, double %15460, double %15461, double %15463), !dbg !384
  %15465 = extractvalue { double, double } %15464, 0, !dbg !384
  store double %15465, ptr %19, align 8, !dbg !384
  %15466 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15467 = extractvalue { double, double } %15464, 1, !dbg !384
  store double %15467, ptr %15466, align 8, !dbg !384
  %15468 = load double, ptr %18, align 8, !dbg !385
  %15469 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15470 = load double, ptr %15469, align 8, !dbg !385
  %15471 = load double, ptr %19, align 8, !dbg !385
  %15472 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15473 = load double, ptr %15472, align 8, !dbg !385
  %15474 = call double @dot(double %15468, double %15470, double %15471, double %15473), !dbg !385
  %15475 = call double @atan2(double noundef %15440, double noundef %15474) #6, !dbg !386
  store double %15475, ptr %13, align 8, !dbg !387
  %15476 = load double, ptr %13, align 8, !dbg !388
  %15477 = load double, ptr %14, align 8, !dbg !389
  %15478 = fadd double %15477, %15476, !dbg !389
  store double %15478, ptr %14, align 8, !dbg !389
  %15479 = load double, ptr %13, align 8, !dbg !390
  %15480 = fsub double %15479, 0x400921FB54442D18, !dbg !392
  %15481 = call double @llvm.fabs.f64(double %15480), !dbg !393
  %15482 = fcmp ole double %15481, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15482, label %14330, label %15483, !dbg !395

15483:                                            ; preds = %15406
  %15484 = load double, ptr %13, align 8, !dbg !396
  %15485 = fadd double %15484, 0x400921FB54442D18, !dbg !397
  %15486 = call double @llvm.fabs.f64(double %15485), !dbg !398
  %15487 = fcmp ole double %15486, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15487, label %14330, label %15488, !dbg !400

15488:                                            ; preds = %15483
  br label %15489, !dbg !403

15489:                                            ; preds = %15488
  %15490 = load i32, ptr %10, align 4, !dbg !404
  %15491 = add nsw i32 %15490, 1, !dbg !404
  store i32 %15491, ptr %10, align 4, !dbg !404
  %15492 = load i32, ptr %10, align 4, !dbg !364
  %15493 = load i32, ptr %8, align 4, !dbg !366
  %15494 = icmp slt i32 %15492, %15493, !dbg !367
  br i1 %15494, label %15495, label %48422, !dbg !368

15495:                                            ; preds = %15489
  %15496 = load i32, ptr %10, align 4, !dbg !369
  %15497 = sext i32 %15496 to i64, !dbg !371
  %15498 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15497, !dbg !371
  %15499 = load double, ptr %6, align 8, !dbg !372
  %15500 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15501 = load double, ptr %15500, align 8, !dbg !372
  %15502 = load double, ptr %15498, align 16, !dbg !372
  %15503 = getelementptr inbounds { double, double }, ptr %15498, i32 0, i32 1, !dbg !372
  %15504 = load double, ptr %15503, align 8, !dbg !372
  %15505 = call { double, double } @make_vec(double %15499, double %15501, double %15502, double %15504), !dbg !372
  %15506 = extractvalue { double, double } %15505, 0, !dbg !372
  store double %15506, ptr %16, align 8, !dbg !372
  %15507 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15508 = extractvalue { double, double } %15505, 1, !dbg !372
  store double %15508, ptr %15507, align 8, !dbg !372
  %15509 = load i32, ptr %10, align 4, !dbg !373
  %15510 = add nsw i32 %15509, 1, !dbg !374
  %15511 = sext i32 %15510 to i64, !dbg !375
  %15512 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15511, !dbg !375
  %15513 = load double, ptr %6, align 8, !dbg !376
  %15514 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15515 = load double, ptr %15514, align 8, !dbg !376
  %15516 = load double, ptr %15512, align 16, !dbg !376
  %15517 = getelementptr inbounds { double, double }, ptr %15512, i32 0, i32 1, !dbg !376
  %15518 = load double, ptr %15517, align 8, !dbg !376
  %15519 = call { double, double } @make_vec(double %15513, double %15515, double %15516, double %15518), !dbg !376
  %15520 = extractvalue { double, double } %15519, 0, !dbg !376
  store double %15520, ptr %17, align 8, !dbg !376
  %15521 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15522 = extractvalue { double, double } %15519, 1, !dbg !376
  store double %15522, ptr %15521, align 8, !dbg !376
  %15523 = load double, ptr %16, align 8, !dbg !377
  %15524 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15525 = load double, ptr %15524, align 8, !dbg !377
  %15526 = load double, ptr %17, align 8, !dbg !377
  %15527 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15528 = load double, ptr %15527, align 8, !dbg !377
  %15529 = call double @cross(double %15523, double %15525, double %15526, double %15528), !dbg !377
  %15530 = load i32, ptr %10, align 4, !dbg !378
  %15531 = sext i32 %15530 to i64, !dbg !379
  %15532 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15531, !dbg !379
  %15533 = load double, ptr %6, align 8, !dbg !380
  %15534 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15535 = load double, ptr %15534, align 8, !dbg !380
  %15536 = load double, ptr %15532, align 16, !dbg !380
  %15537 = getelementptr inbounds { double, double }, ptr %15532, i32 0, i32 1, !dbg !380
  %15538 = load double, ptr %15537, align 8, !dbg !380
  %15539 = call { double, double } @make_vec(double %15533, double %15535, double %15536, double %15538), !dbg !380
  %15540 = extractvalue { double, double } %15539, 0, !dbg !380
  store double %15540, ptr %18, align 8, !dbg !380
  %15541 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15542 = extractvalue { double, double } %15539, 1, !dbg !380
  store double %15542, ptr %15541, align 8, !dbg !380
  %15543 = load i32, ptr %10, align 4, !dbg !381
  %15544 = add nsw i32 %15543, 1, !dbg !382
  %15545 = sext i32 %15544 to i64, !dbg !383
  %15546 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15545, !dbg !383
  %15547 = load double, ptr %6, align 8, !dbg !384
  %15548 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15549 = load double, ptr %15548, align 8, !dbg !384
  %15550 = load double, ptr %15546, align 16, !dbg !384
  %15551 = getelementptr inbounds { double, double }, ptr %15546, i32 0, i32 1, !dbg !384
  %15552 = load double, ptr %15551, align 8, !dbg !384
  %15553 = call { double, double } @make_vec(double %15547, double %15549, double %15550, double %15552), !dbg !384
  %15554 = extractvalue { double, double } %15553, 0, !dbg !384
  store double %15554, ptr %19, align 8, !dbg !384
  %15555 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15556 = extractvalue { double, double } %15553, 1, !dbg !384
  store double %15556, ptr %15555, align 8, !dbg !384
  %15557 = load double, ptr %18, align 8, !dbg !385
  %15558 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15559 = load double, ptr %15558, align 8, !dbg !385
  %15560 = load double, ptr %19, align 8, !dbg !385
  %15561 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15562 = load double, ptr %15561, align 8, !dbg !385
  %15563 = call double @dot(double %15557, double %15559, double %15560, double %15562), !dbg !385
  %15564 = call double @atan2(double noundef %15529, double noundef %15563) #6, !dbg !386
  store double %15564, ptr %13, align 8, !dbg !387
  %15565 = load double, ptr %13, align 8, !dbg !388
  %15566 = load double, ptr %14, align 8, !dbg !389
  %15567 = fadd double %15566, %15565, !dbg !389
  store double %15567, ptr %14, align 8, !dbg !389
  %15568 = load double, ptr %13, align 8, !dbg !390
  %15569 = fsub double %15568, 0x400921FB54442D18, !dbg !392
  %15570 = call double @llvm.fabs.f64(double %15569), !dbg !393
  %15571 = fcmp ole double %15570, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15571, label %14330, label %15572, !dbg !395

15572:                                            ; preds = %15495
  %15573 = load double, ptr %13, align 8, !dbg !396
  %15574 = fadd double %15573, 0x400921FB54442D18, !dbg !397
  %15575 = call double @llvm.fabs.f64(double %15574), !dbg !398
  %15576 = fcmp ole double %15575, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15576, label %14330, label %15577, !dbg !400

15577:                                            ; preds = %15572
  br label %15578, !dbg !403

15578:                                            ; preds = %15577
  %15579 = load i32, ptr %10, align 4, !dbg !404
  %15580 = add nsw i32 %15579, 1, !dbg !404
  store i32 %15580, ptr %10, align 4, !dbg !404
  %15581 = load i32, ptr %10, align 4, !dbg !364
  %15582 = load i32, ptr %8, align 4, !dbg !366
  %15583 = icmp slt i32 %15581, %15582, !dbg !367
  br i1 %15583, label %15584, label %48422, !dbg !368

15584:                                            ; preds = %15578
  %15585 = load i32, ptr %10, align 4, !dbg !369
  %15586 = sext i32 %15585 to i64, !dbg !371
  %15587 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15586, !dbg !371
  %15588 = load double, ptr %6, align 8, !dbg !372
  %15589 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15590 = load double, ptr %15589, align 8, !dbg !372
  %15591 = load double, ptr %15587, align 16, !dbg !372
  %15592 = getelementptr inbounds { double, double }, ptr %15587, i32 0, i32 1, !dbg !372
  %15593 = load double, ptr %15592, align 8, !dbg !372
  %15594 = call { double, double } @make_vec(double %15588, double %15590, double %15591, double %15593), !dbg !372
  %15595 = extractvalue { double, double } %15594, 0, !dbg !372
  store double %15595, ptr %16, align 8, !dbg !372
  %15596 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15597 = extractvalue { double, double } %15594, 1, !dbg !372
  store double %15597, ptr %15596, align 8, !dbg !372
  %15598 = load i32, ptr %10, align 4, !dbg !373
  %15599 = add nsw i32 %15598, 1, !dbg !374
  %15600 = sext i32 %15599 to i64, !dbg !375
  %15601 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15600, !dbg !375
  %15602 = load double, ptr %6, align 8, !dbg !376
  %15603 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15604 = load double, ptr %15603, align 8, !dbg !376
  %15605 = load double, ptr %15601, align 16, !dbg !376
  %15606 = getelementptr inbounds { double, double }, ptr %15601, i32 0, i32 1, !dbg !376
  %15607 = load double, ptr %15606, align 8, !dbg !376
  %15608 = call { double, double } @make_vec(double %15602, double %15604, double %15605, double %15607), !dbg !376
  %15609 = extractvalue { double, double } %15608, 0, !dbg !376
  store double %15609, ptr %17, align 8, !dbg !376
  %15610 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15611 = extractvalue { double, double } %15608, 1, !dbg !376
  store double %15611, ptr %15610, align 8, !dbg !376
  %15612 = load double, ptr %16, align 8, !dbg !377
  %15613 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15614 = load double, ptr %15613, align 8, !dbg !377
  %15615 = load double, ptr %17, align 8, !dbg !377
  %15616 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15617 = load double, ptr %15616, align 8, !dbg !377
  %15618 = call double @cross(double %15612, double %15614, double %15615, double %15617), !dbg !377
  %15619 = load i32, ptr %10, align 4, !dbg !378
  %15620 = sext i32 %15619 to i64, !dbg !379
  %15621 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15620, !dbg !379
  %15622 = load double, ptr %6, align 8, !dbg !380
  %15623 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15624 = load double, ptr %15623, align 8, !dbg !380
  %15625 = load double, ptr %15621, align 16, !dbg !380
  %15626 = getelementptr inbounds { double, double }, ptr %15621, i32 0, i32 1, !dbg !380
  %15627 = load double, ptr %15626, align 8, !dbg !380
  %15628 = call { double, double } @make_vec(double %15622, double %15624, double %15625, double %15627), !dbg !380
  %15629 = extractvalue { double, double } %15628, 0, !dbg !380
  store double %15629, ptr %18, align 8, !dbg !380
  %15630 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15631 = extractvalue { double, double } %15628, 1, !dbg !380
  store double %15631, ptr %15630, align 8, !dbg !380
  %15632 = load i32, ptr %10, align 4, !dbg !381
  %15633 = add nsw i32 %15632, 1, !dbg !382
  %15634 = sext i32 %15633 to i64, !dbg !383
  %15635 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15634, !dbg !383
  %15636 = load double, ptr %6, align 8, !dbg !384
  %15637 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15638 = load double, ptr %15637, align 8, !dbg !384
  %15639 = load double, ptr %15635, align 16, !dbg !384
  %15640 = getelementptr inbounds { double, double }, ptr %15635, i32 0, i32 1, !dbg !384
  %15641 = load double, ptr %15640, align 8, !dbg !384
  %15642 = call { double, double } @make_vec(double %15636, double %15638, double %15639, double %15641), !dbg !384
  %15643 = extractvalue { double, double } %15642, 0, !dbg !384
  store double %15643, ptr %19, align 8, !dbg !384
  %15644 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15645 = extractvalue { double, double } %15642, 1, !dbg !384
  store double %15645, ptr %15644, align 8, !dbg !384
  %15646 = load double, ptr %18, align 8, !dbg !385
  %15647 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15648 = load double, ptr %15647, align 8, !dbg !385
  %15649 = load double, ptr %19, align 8, !dbg !385
  %15650 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15651 = load double, ptr %15650, align 8, !dbg !385
  %15652 = call double @dot(double %15646, double %15648, double %15649, double %15651), !dbg !385
  %15653 = call double @atan2(double noundef %15618, double noundef %15652) #6, !dbg !386
  store double %15653, ptr %13, align 8, !dbg !387
  %15654 = load double, ptr %13, align 8, !dbg !388
  %15655 = load double, ptr %14, align 8, !dbg !389
  %15656 = fadd double %15655, %15654, !dbg !389
  store double %15656, ptr %14, align 8, !dbg !389
  %15657 = load double, ptr %13, align 8, !dbg !390
  %15658 = fsub double %15657, 0x400921FB54442D18, !dbg !392
  %15659 = call double @llvm.fabs.f64(double %15658), !dbg !393
  %15660 = fcmp ole double %15659, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15660, label %14330, label %15661, !dbg !395

15661:                                            ; preds = %15584
  %15662 = load double, ptr %13, align 8, !dbg !396
  %15663 = fadd double %15662, 0x400921FB54442D18, !dbg !397
  %15664 = call double @llvm.fabs.f64(double %15663), !dbg !398
  %15665 = fcmp ole double %15664, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15665, label %14330, label %15666, !dbg !400

15666:                                            ; preds = %15661
  br label %15667, !dbg !403

15667:                                            ; preds = %15666
  %15668 = load i32, ptr %10, align 4, !dbg !404
  %15669 = add nsw i32 %15668, 1, !dbg !404
  store i32 %15669, ptr %10, align 4, !dbg !404
  %15670 = load i32, ptr %10, align 4, !dbg !364
  %15671 = load i32, ptr %8, align 4, !dbg !366
  %15672 = icmp slt i32 %15670, %15671, !dbg !367
  br i1 %15672, label %15673, label %48422, !dbg !368

15673:                                            ; preds = %15667
  %15674 = load i32, ptr %10, align 4, !dbg !369
  %15675 = sext i32 %15674 to i64, !dbg !371
  %15676 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15675, !dbg !371
  %15677 = load double, ptr %6, align 8, !dbg !372
  %15678 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15679 = load double, ptr %15678, align 8, !dbg !372
  %15680 = load double, ptr %15676, align 16, !dbg !372
  %15681 = getelementptr inbounds { double, double }, ptr %15676, i32 0, i32 1, !dbg !372
  %15682 = load double, ptr %15681, align 8, !dbg !372
  %15683 = call { double, double } @make_vec(double %15677, double %15679, double %15680, double %15682), !dbg !372
  %15684 = extractvalue { double, double } %15683, 0, !dbg !372
  store double %15684, ptr %16, align 8, !dbg !372
  %15685 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15686 = extractvalue { double, double } %15683, 1, !dbg !372
  store double %15686, ptr %15685, align 8, !dbg !372
  %15687 = load i32, ptr %10, align 4, !dbg !373
  %15688 = add nsw i32 %15687, 1, !dbg !374
  %15689 = sext i32 %15688 to i64, !dbg !375
  %15690 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15689, !dbg !375
  %15691 = load double, ptr %6, align 8, !dbg !376
  %15692 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15693 = load double, ptr %15692, align 8, !dbg !376
  %15694 = load double, ptr %15690, align 16, !dbg !376
  %15695 = getelementptr inbounds { double, double }, ptr %15690, i32 0, i32 1, !dbg !376
  %15696 = load double, ptr %15695, align 8, !dbg !376
  %15697 = call { double, double } @make_vec(double %15691, double %15693, double %15694, double %15696), !dbg !376
  %15698 = extractvalue { double, double } %15697, 0, !dbg !376
  store double %15698, ptr %17, align 8, !dbg !376
  %15699 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15700 = extractvalue { double, double } %15697, 1, !dbg !376
  store double %15700, ptr %15699, align 8, !dbg !376
  %15701 = load double, ptr %16, align 8, !dbg !377
  %15702 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15703 = load double, ptr %15702, align 8, !dbg !377
  %15704 = load double, ptr %17, align 8, !dbg !377
  %15705 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15706 = load double, ptr %15705, align 8, !dbg !377
  %15707 = call double @cross(double %15701, double %15703, double %15704, double %15706), !dbg !377
  %15708 = load i32, ptr %10, align 4, !dbg !378
  %15709 = sext i32 %15708 to i64, !dbg !379
  %15710 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15709, !dbg !379
  %15711 = load double, ptr %6, align 8, !dbg !380
  %15712 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15713 = load double, ptr %15712, align 8, !dbg !380
  %15714 = load double, ptr %15710, align 16, !dbg !380
  %15715 = getelementptr inbounds { double, double }, ptr %15710, i32 0, i32 1, !dbg !380
  %15716 = load double, ptr %15715, align 8, !dbg !380
  %15717 = call { double, double } @make_vec(double %15711, double %15713, double %15714, double %15716), !dbg !380
  %15718 = extractvalue { double, double } %15717, 0, !dbg !380
  store double %15718, ptr %18, align 8, !dbg !380
  %15719 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15720 = extractvalue { double, double } %15717, 1, !dbg !380
  store double %15720, ptr %15719, align 8, !dbg !380
  %15721 = load i32, ptr %10, align 4, !dbg !381
  %15722 = add nsw i32 %15721, 1, !dbg !382
  %15723 = sext i32 %15722 to i64, !dbg !383
  %15724 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15723, !dbg !383
  %15725 = load double, ptr %6, align 8, !dbg !384
  %15726 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15727 = load double, ptr %15726, align 8, !dbg !384
  %15728 = load double, ptr %15724, align 16, !dbg !384
  %15729 = getelementptr inbounds { double, double }, ptr %15724, i32 0, i32 1, !dbg !384
  %15730 = load double, ptr %15729, align 8, !dbg !384
  %15731 = call { double, double } @make_vec(double %15725, double %15727, double %15728, double %15730), !dbg !384
  %15732 = extractvalue { double, double } %15731, 0, !dbg !384
  store double %15732, ptr %19, align 8, !dbg !384
  %15733 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15734 = extractvalue { double, double } %15731, 1, !dbg !384
  store double %15734, ptr %15733, align 8, !dbg !384
  %15735 = load double, ptr %18, align 8, !dbg !385
  %15736 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15737 = load double, ptr %15736, align 8, !dbg !385
  %15738 = load double, ptr %19, align 8, !dbg !385
  %15739 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15740 = load double, ptr %15739, align 8, !dbg !385
  %15741 = call double @dot(double %15735, double %15737, double %15738, double %15740), !dbg !385
  %15742 = call double @atan2(double noundef %15707, double noundef %15741) #6, !dbg !386
  store double %15742, ptr %13, align 8, !dbg !387
  %15743 = load double, ptr %13, align 8, !dbg !388
  %15744 = load double, ptr %14, align 8, !dbg !389
  %15745 = fadd double %15744, %15743, !dbg !389
  store double %15745, ptr %14, align 8, !dbg !389
  %15746 = load double, ptr %13, align 8, !dbg !390
  %15747 = fsub double %15746, 0x400921FB54442D18, !dbg !392
  %15748 = call double @llvm.fabs.f64(double %15747), !dbg !393
  %15749 = fcmp ole double %15748, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15749, label %14330, label %15750, !dbg !395

15750:                                            ; preds = %15673
  %15751 = load double, ptr %13, align 8, !dbg !396
  %15752 = fadd double %15751, 0x400921FB54442D18, !dbg !397
  %15753 = call double @llvm.fabs.f64(double %15752), !dbg !398
  %15754 = fcmp ole double %15753, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15754, label %14330, label %15755, !dbg !400

15755:                                            ; preds = %15750
  br label %15756, !dbg !403

15756:                                            ; preds = %15755
  %15757 = load i32, ptr %10, align 4, !dbg !404
  %15758 = add nsw i32 %15757, 1, !dbg !404
  store i32 %15758, ptr %10, align 4, !dbg !404
  %15759 = load i32, ptr %10, align 4, !dbg !364
  %15760 = load i32, ptr %8, align 4, !dbg !366
  %15761 = icmp slt i32 %15759, %15760, !dbg !367
  br i1 %15761, label %15762, label %48422, !dbg !368

15762:                                            ; preds = %15756
  %15763 = load i32, ptr %10, align 4, !dbg !369
  %15764 = sext i32 %15763 to i64, !dbg !371
  %15765 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15764, !dbg !371
  %15766 = load double, ptr %6, align 8, !dbg !372
  %15767 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15768 = load double, ptr %15767, align 8, !dbg !372
  %15769 = load double, ptr %15765, align 16, !dbg !372
  %15770 = getelementptr inbounds { double, double }, ptr %15765, i32 0, i32 1, !dbg !372
  %15771 = load double, ptr %15770, align 8, !dbg !372
  %15772 = call { double, double } @make_vec(double %15766, double %15768, double %15769, double %15771), !dbg !372
  %15773 = extractvalue { double, double } %15772, 0, !dbg !372
  store double %15773, ptr %16, align 8, !dbg !372
  %15774 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15775 = extractvalue { double, double } %15772, 1, !dbg !372
  store double %15775, ptr %15774, align 8, !dbg !372
  %15776 = load i32, ptr %10, align 4, !dbg !373
  %15777 = add nsw i32 %15776, 1, !dbg !374
  %15778 = sext i32 %15777 to i64, !dbg !375
  %15779 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15778, !dbg !375
  %15780 = load double, ptr %6, align 8, !dbg !376
  %15781 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15782 = load double, ptr %15781, align 8, !dbg !376
  %15783 = load double, ptr %15779, align 16, !dbg !376
  %15784 = getelementptr inbounds { double, double }, ptr %15779, i32 0, i32 1, !dbg !376
  %15785 = load double, ptr %15784, align 8, !dbg !376
  %15786 = call { double, double } @make_vec(double %15780, double %15782, double %15783, double %15785), !dbg !376
  %15787 = extractvalue { double, double } %15786, 0, !dbg !376
  store double %15787, ptr %17, align 8, !dbg !376
  %15788 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15789 = extractvalue { double, double } %15786, 1, !dbg !376
  store double %15789, ptr %15788, align 8, !dbg !376
  %15790 = load double, ptr %16, align 8, !dbg !377
  %15791 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15792 = load double, ptr %15791, align 8, !dbg !377
  %15793 = load double, ptr %17, align 8, !dbg !377
  %15794 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15795 = load double, ptr %15794, align 8, !dbg !377
  %15796 = call double @cross(double %15790, double %15792, double %15793, double %15795), !dbg !377
  %15797 = load i32, ptr %10, align 4, !dbg !378
  %15798 = sext i32 %15797 to i64, !dbg !379
  %15799 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15798, !dbg !379
  %15800 = load double, ptr %6, align 8, !dbg !380
  %15801 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15802 = load double, ptr %15801, align 8, !dbg !380
  %15803 = load double, ptr %15799, align 16, !dbg !380
  %15804 = getelementptr inbounds { double, double }, ptr %15799, i32 0, i32 1, !dbg !380
  %15805 = load double, ptr %15804, align 8, !dbg !380
  %15806 = call { double, double } @make_vec(double %15800, double %15802, double %15803, double %15805), !dbg !380
  %15807 = extractvalue { double, double } %15806, 0, !dbg !380
  store double %15807, ptr %18, align 8, !dbg !380
  %15808 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15809 = extractvalue { double, double } %15806, 1, !dbg !380
  store double %15809, ptr %15808, align 8, !dbg !380
  %15810 = load i32, ptr %10, align 4, !dbg !381
  %15811 = add nsw i32 %15810, 1, !dbg !382
  %15812 = sext i32 %15811 to i64, !dbg !383
  %15813 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15812, !dbg !383
  %15814 = load double, ptr %6, align 8, !dbg !384
  %15815 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15816 = load double, ptr %15815, align 8, !dbg !384
  %15817 = load double, ptr %15813, align 16, !dbg !384
  %15818 = getelementptr inbounds { double, double }, ptr %15813, i32 0, i32 1, !dbg !384
  %15819 = load double, ptr %15818, align 8, !dbg !384
  %15820 = call { double, double } @make_vec(double %15814, double %15816, double %15817, double %15819), !dbg !384
  %15821 = extractvalue { double, double } %15820, 0, !dbg !384
  store double %15821, ptr %19, align 8, !dbg !384
  %15822 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15823 = extractvalue { double, double } %15820, 1, !dbg !384
  store double %15823, ptr %15822, align 8, !dbg !384
  %15824 = load double, ptr %18, align 8, !dbg !385
  %15825 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15826 = load double, ptr %15825, align 8, !dbg !385
  %15827 = load double, ptr %19, align 8, !dbg !385
  %15828 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15829 = load double, ptr %15828, align 8, !dbg !385
  %15830 = call double @dot(double %15824, double %15826, double %15827, double %15829), !dbg !385
  %15831 = call double @atan2(double noundef %15796, double noundef %15830) #6, !dbg !386
  store double %15831, ptr %13, align 8, !dbg !387
  %15832 = load double, ptr %13, align 8, !dbg !388
  %15833 = load double, ptr %14, align 8, !dbg !389
  %15834 = fadd double %15833, %15832, !dbg !389
  store double %15834, ptr %14, align 8, !dbg !389
  %15835 = load double, ptr %13, align 8, !dbg !390
  %15836 = fsub double %15835, 0x400921FB54442D18, !dbg !392
  %15837 = call double @llvm.fabs.f64(double %15836), !dbg !393
  %15838 = fcmp ole double %15837, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15838, label %14330, label %15839, !dbg !395

15839:                                            ; preds = %15762
  %15840 = load double, ptr %13, align 8, !dbg !396
  %15841 = fadd double %15840, 0x400921FB54442D18, !dbg !397
  %15842 = call double @llvm.fabs.f64(double %15841), !dbg !398
  %15843 = fcmp ole double %15842, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15843, label %14330, label %15844, !dbg !400

15844:                                            ; preds = %15839
  br label %15845, !dbg !403

15845:                                            ; preds = %15844
  %15846 = load i32, ptr %10, align 4, !dbg !404
  %15847 = add nsw i32 %15846, 1, !dbg !404
  store i32 %15847, ptr %10, align 4, !dbg !404
  %15848 = load i32, ptr %10, align 4, !dbg !364
  %15849 = load i32, ptr %8, align 4, !dbg !366
  %15850 = icmp slt i32 %15848, %15849, !dbg !367
  br i1 %15850, label %15851, label %48422, !dbg !368

15851:                                            ; preds = %15845
  %15852 = load i32, ptr %10, align 4, !dbg !369
  %15853 = sext i32 %15852 to i64, !dbg !371
  %15854 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15853, !dbg !371
  %15855 = load double, ptr %6, align 8, !dbg !372
  %15856 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15857 = load double, ptr %15856, align 8, !dbg !372
  %15858 = load double, ptr %15854, align 16, !dbg !372
  %15859 = getelementptr inbounds { double, double }, ptr %15854, i32 0, i32 1, !dbg !372
  %15860 = load double, ptr %15859, align 8, !dbg !372
  %15861 = call { double, double } @make_vec(double %15855, double %15857, double %15858, double %15860), !dbg !372
  %15862 = extractvalue { double, double } %15861, 0, !dbg !372
  store double %15862, ptr %16, align 8, !dbg !372
  %15863 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15864 = extractvalue { double, double } %15861, 1, !dbg !372
  store double %15864, ptr %15863, align 8, !dbg !372
  %15865 = load i32, ptr %10, align 4, !dbg !373
  %15866 = add nsw i32 %15865, 1, !dbg !374
  %15867 = sext i32 %15866 to i64, !dbg !375
  %15868 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15867, !dbg !375
  %15869 = load double, ptr %6, align 8, !dbg !376
  %15870 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15871 = load double, ptr %15870, align 8, !dbg !376
  %15872 = load double, ptr %15868, align 16, !dbg !376
  %15873 = getelementptr inbounds { double, double }, ptr %15868, i32 0, i32 1, !dbg !376
  %15874 = load double, ptr %15873, align 8, !dbg !376
  %15875 = call { double, double } @make_vec(double %15869, double %15871, double %15872, double %15874), !dbg !376
  %15876 = extractvalue { double, double } %15875, 0, !dbg !376
  store double %15876, ptr %17, align 8, !dbg !376
  %15877 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15878 = extractvalue { double, double } %15875, 1, !dbg !376
  store double %15878, ptr %15877, align 8, !dbg !376
  %15879 = load double, ptr %16, align 8, !dbg !377
  %15880 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15881 = load double, ptr %15880, align 8, !dbg !377
  %15882 = load double, ptr %17, align 8, !dbg !377
  %15883 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15884 = load double, ptr %15883, align 8, !dbg !377
  %15885 = call double @cross(double %15879, double %15881, double %15882, double %15884), !dbg !377
  %15886 = load i32, ptr %10, align 4, !dbg !378
  %15887 = sext i32 %15886 to i64, !dbg !379
  %15888 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15887, !dbg !379
  %15889 = load double, ptr %6, align 8, !dbg !380
  %15890 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15891 = load double, ptr %15890, align 8, !dbg !380
  %15892 = load double, ptr %15888, align 16, !dbg !380
  %15893 = getelementptr inbounds { double, double }, ptr %15888, i32 0, i32 1, !dbg !380
  %15894 = load double, ptr %15893, align 8, !dbg !380
  %15895 = call { double, double } @make_vec(double %15889, double %15891, double %15892, double %15894), !dbg !380
  %15896 = extractvalue { double, double } %15895, 0, !dbg !380
  store double %15896, ptr %18, align 8, !dbg !380
  %15897 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15898 = extractvalue { double, double } %15895, 1, !dbg !380
  store double %15898, ptr %15897, align 8, !dbg !380
  %15899 = load i32, ptr %10, align 4, !dbg !381
  %15900 = add nsw i32 %15899, 1, !dbg !382
  %15901 = sext i32 %15900 to i64, !dbg !383
  %15902 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15901, !dbg !383
  %15903 = load double, ptr %6, align 8, !dbg !384
  %15904 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15905 = load double, ptr %15904, align 8, !dbg !384
  %15906 = load double, ptr %15902, align 16, !dbg !384
  %15907 = getelementptr inbounds { double, double }, ptr %15902, i32 0, i32 1, !dbg !384
  %15908 = load double, ptr %15907, align 8, !dbg !384
  %15909 = call { double, double } @make_vec(double %15903, double %15905, double %15906, double %15908), !dbg !384
  %15910 = extractvalue { double, double } %15909, 0, !dbg !384
  store double %15910, ptr %19, align 8, !dbg !384
  %15911 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %15912 = extractvalue { double, double } %15909, 1, !dbg !384
  store double %15912, ptr %15911, align 8, !dbg !384
  %15913 = load double, ptr %18, align 8, !dbg !385
  %15914 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %15915 = load double, ptr %15914, align 8, !dbg !385
  %15916 = load double, ptr %19, align 8, !dbg !385
  %15917 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %15918 = load double, ptr %15917, align 8, !dbg !385
  %15919 = call double @dot(double %15913, double %15915, double %15916, double %15918), !dbg !385
  %15920 = call double @atan2(double noundef %15885, double noundef %15919) #6, !dbg !386
  store double %15920, ptr %13, align 8, !dbg !387
  %15921 = load double, ptr %13, align 8, !dbg !388
  %15922 = load double, ptr %14, align 8, !dbg !389
  %15923 = fadd double %15922, %15921, !dbg !389
  store double %15923, ptr %14, align 8, !dbg !389
  %15924 = load double, ptr %13, align 8, !dbg !390
  %15925 = fsub double %15924, 0x400921FB54442D18, !dbg !392
  %15926 = call double @llvm.fabs.f64(double %15925), !dbg !393
  %15927 = fcmp ole double %15926, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %15927, label %14330, label %15928, !dbg !395

15928:                                            ; preds = %15851
  %15929 = load double, ptr %13, align 8, !dbg !396
  %15930 = fadd double %15929, 0x400921FB54442D18, !dbg !397
  %15931 = call double @llvm.fabs.f64(double %15930), !dbg !398
  %15932 = fcmp ole double %15931, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %15932, label %14330, label %15933, !dbg !400

15933:                                            ; preds = %15928
  br label %15934, !dbg !403

15934:                                            ; preds = %15933
  %15935 = load i32, ptr %10, align 4, !dbg !404
  %15936 = add nsw i32 %15935, 1, !dbg !404
  store i32 %15936, ptr %10, align 4, !dbg !404
  %15937 = load i32, ptr %10, align 4, !dbg !364
  %15938 = load i32, ptr %8, align 4, !dbg !366
  %15939 = icmp slt i32 %15937, %15938, !dbg !367
  br i1 %15939, label %15940, label %48422, !dbg !368

15940:                                            ; preds = %15934
  %15941 = load i32, ptr %10, align 4, !dbg !369
  %15942 = sext i32 %15941 to i64, !dbg !371
  %15943 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15942, !dbg !371
  %15944 = load double, ptr %6, align 8, !dbg !372
  %15945 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %15946 = load double, ptr %15945, align 8, !dbg !372
  %15947 = load double, ptr %15943, align 16, !dbg !372
  %15948 = getelementptr inbounds { double, double }, ptr %15943, i32 0, i32 1, !dbg !372
  %15949 = load double, ptr %15948, align 8, !dbg !372
  %15950 = call { double, double } @make_vec(double %15944, double %15946, double %15947, double %15949), !dbg !372
  %15951 = extractvalue { double, double } %15950, 0, !dbg !372
  store double %15951, ptr %16, align 8, !dbg !372
  %15952 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %15953 = extractvalue { double, double } %15950, 1, !dbg !372
  store double %15953, ptr %15952, align 8, !dbg !372
  %15954 = load i32, ptr %10, align 4, !dbg !373
  %15955 = add nsw i32 %15954, 1, !dbg !374
  %15956 = sext i32 %15955 to i64, !dbg !375
  %15957 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15956, !dbg !375
  %15958 = load double, ptr %6, align 8, !dbg !376
  %15959 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %15960 = load double, ptr %15959, align 8, !dbg !376
  %15961 = load double, ptr %15957, align 16, !dbg !376
  %15962 = getelementptr inbounds { double, double }, ptr %15957, i32 0, i32 1, !dbg !376
  %15963 = load double, ptr %15962, align 8, !dbg !376
  %15964 = call { double, double } @make_vec(double %15958, double %15960, double %15961, double %15963), !dbg !376
  %15965 = extractvalue { double, double } %15964, 0, !dbg !376
  store double %15965, ptr %17, align 8, !dbg !376
  %15966 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %15967 = extractvalue { double, double } %15964, 1, !dbg !376
  store double %15967, ptr %15966, align 8, !dbg !376
  %15968 = load double, ptr %16, align 8, !dbg !377
  %15969 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %15970 = load double, ptr %15969, align 8, !dbg !377
  %15971 = load double, ptr %17, align 8, !dbg !377
  %15972 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %15973 = load double, ptr %15972, align 8, !dbg !377
  %15974 = call double @cross(double %15968, double %15970, double %15971, double %15973), !dbg !377
  %15975 = load i32, ptr %10, align 4, !dbg !378
  %15976 = sext i32 %15975 to i64, !dbg !379
  %15977 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15976, !dbg !379
  %15978 = load double, ptr %6, align 8, !dbg !380
  %15979 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %15980 = load double, ptr %15979, align 8, !dbg !380
  %15981 = load double, ptr %15977, align 16, !dbg !380
  %15982 = getelementptr inbounds { double, double }, ptr %15977, i32 0, i32 1, !dbg !380
  %15983 = load double, ptr %15982, align 8, !dbg !380
  %15984 = call { double, double } @make_vec(double %15978, double %15980, double %15981, double %15983), !dbg !380
  %15985 = extractvalue { double, double } %15984, 0, !dbg !380
  store double %15985, ptr %18, align 8, !dbg !380
  %15986 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %15987 = extractvalue { double, double } %15984, 1, !dbg !380
  store double %15987, ptr %15986, align 8, !dbg !380
  %15988 = load i32, ptr %10, align 4, !dbg !381
  %15989 = add nsw i32 %15988, 1, !dbg !382
  %15990 = sext i32 %15989 to i64, !dbg !383
  %15991 = getelementptr inbounds %struct.POINT, ptr %26, i64 %15990, !dbg !383
  %15992 = load double, ptr %6, align 8, !dbg !384
  %15993 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %15994 = load double, ptr %15993, align 8, !dbg !384
  %15995 = load double, ptr %15991, align 16, !dbg !384
  %15996 = getelementptr inbounds { double, double }, ptr %15991, i32 0, i32 1, !dbg !384
  %15997 = load double, ptr %15996, align 8, !dbg !384
  %15998 = call { double, double } @make_vec(double %15992, double %15994, double %15995, double %15997), !dbg !384
  %15999 = extractvalue { double, double } %15998, 0, !dbg !384
  store double %15999, ptr %19, align 8, !dbg !384
  %16000 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16001 = extractvalue { double, double } %15998, 1, !dbg !384
  store double %16001, ptr %16000, align 8, !dbg !384
  %16002 = load double, ptr %18, align 8, !dbg !385
  %16003 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16004 = load double, ptr %16003, align 8, !dbg !385
  %16005 = load double, ptr %19, align 8, !dbg !385
  %16006 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16007 = load double, ptr %16006, align 8, !dbg !385
  %16008 = call double @dot(double %16002, double %16004, double %16005, double %16007), !dbg !385
  %16009 = call double @atan2(double noundef %15974, double noundef %16008) #6, !dbg !386
  store double %16009, ptr %13, align 8, !dbg !387
  %16010 = load double, ptr %13, align 8, !dbg !388
  %16011 = load double, ptr %14, align 8, !dbg !389
  %16012 = fadd double %16011, %16010, !dbg !389
  store double %16012, ptr %14, align 8, !dbg !389
  %16013 = load double, ptr %13, align 8, !dbg !390
  %16014 = fsub double %16013, 0x400921FB54442D18, !dbg !392
  %16015 = call double @llvm.fabs.f64(double %16014), !dbg !393
  %16016 = fcmp ole double %16015, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16016, label %14330, label %16017, !dbg !395

16017:                                            ; preds = %15940
  %16018 = load double, ptr %13, align 8, !dbg !396
  %16019 = fadd double %16018, 0x400921FB54442D18, !dbg !397
  %16020 = call double @llvm.fabs.f64(double %16019), !dbg !398
  %16021 = fcmp ole double %16020, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16021, label %14330, label %16022, !dbg !400

16022:                                            ; preds = %16017
  br label %16023, !dbg !403

16023:                                            ; preds = %16022
  %16024 = load i32, ptr %10, align 4, !dbg !404
  %16025 = add nsw i32 %16024, 1, !dbg !404
  store i32 %16025, ptr %10, align 4, !dbg !404
  %16026 = load i32, ptr %10, align 4, !dbg !364
  %16027 = load i32, ptr %8, align 4, !dbg !366
  %16028 = icmp slt i32 %16026, %16027, !dbg !367
  br i1 %16028, label %16029, label %48422, !dbg !368

16029:                                            ; preds = %16023
  %16030 = load i32, ptr %10, align 4, !dbg !369
  %16031 = sext i32 %16030 to i64, !dbg !371
  %16032 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16031, !dbg !371
  %16033 = load double, ptr %6, align 8, !dbg !372
  %16034 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16035 = load double, ptr %16034, align 8, !dbg !372
  %16036 = load double, ptr %16032, align 16, !dbg !372
  %16037 = getelementptr inbounds { double, double }, ptr %16032, i32 0, i32 1, !dbg !372
  %16038 = load double, ptr %16037, align 8, !dbg !372
  %16039 = call { double, double } @make_vec(double %16033, double %16035, double %16036, double %16038), !dbg !372
  %16040 = extractvalue { double, double } %16039, 0, !dbg !372
  store double %16040, ptr %16, align 8, !dbg !372
  %16041 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16042 = extractvalue { double, double } %16039, 1, !dbg !372
  store double %16042, ptr %16041, align 8, !dbg !372
  %16043 = load i32, ptr %10, align 4, !dbg !373
  %16044 = add nsw i32 %16043, 1, !dbg !374
  %16045 = sext i32 %16044 to i64, !dbg !375
  %16046 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16045, !dbg !375
  %16047 = load double, ptr %6, align 8, !dbg !376
  %16048 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16049 = load double, ptr %16048, align 8, !dbg !376
  %16050 = load double, ptr %16046, align 16, !dbg !376
  %16051 = getelementptr inbounds { double, double }, ptr %16046, i32 0, i32 1, !dbg !376
  %16052 = load double, ptr %16051, align 8, !dbg !376
  %16053 = call { double, double } @make_vec(double %16047, double %16049, double %16050, double %16052), !dbg !376
  %16054 = extractvalue { double, double } %16053, 0, !dbg !376
  store double %16054, ptr %17, align 8, !dbg !376
  %16055 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16056 = extractvalue { double, double } %16053, 1, !dbg !376
  store double %16056, ptr %16055, align 8, !dbg !376
  %16057 = load double, ptr %16, align 8, !dbg !377
  %16058 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16059 = load double, ptr %16058, align 8, !dbg !377
  %16060 = load double, ptr %17, align 8, !dbg !377
  %16061 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16062 = load double, ptr %16061, align 8, !dbg !377
  %16063 = call double @cross(double %16057, double %16059, double %16060, double %16062), !dbg !377
  %16064 = load i32, ptr %10, align 4, !dbg !378
  %16065 = sext i32 %16064 to i64, !dbg !379
  %16066 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16065, !dbg !379
  %16067 = load double, ptr %6, align 8, !dbg !380
  %16068 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16069 = load double, ptr %16068, align 8, !dbg !380
  %16070 = load double, ptr %16066, align 16, !dbg !380
  %16071 = getelementptr inbounds { double, double }, ptr %16066, i32 0, i32 1, !dbg !380
  %16072 = load double, ptr %16071, align 8, !dbg !380
  %16073 = call { double, double } @make_vec(double %16067, double %16069, double %16070, double %16072), !dbg !380
  %16074 = extractvalue { double, double } %16073, 0, !dbg !380
  store double %16074, ptr %18, align 8, !dbg !380
  %16075 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16076 = extractvalue { double, double } %16073, 1, !dbg !380
  store double %16076, ptr %16075, align 8, !dbg !380
  %16077 = load i32, ptr %10, align 4, !dbg !381
  %16078 = add nsw i32 %16077, 1, !dbg !382
  %16079 = sext i32 %16078 to i64, !dbg !383
  %16080 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16079, !dbg !383
  %16081 = load double, ptr %6, align 8, !dbg !384
  %16082 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16083 = load double, ptr %16082, align 8, !dbg !384
  %16084 = load double, ptr %16080, align 16, !dbg !384
  %16085 = getelementptr inbounds { double, double }, ptr %16080, i32 0, i32 1, !dbg !384
  %16086 = load double, ptr %16085, align 8, !dbg !384
  %16087 = call { double, double } @make_vec(double %16081, double %16083, double %16084, double %16086), !dbg !384
  %16088 = extractvalue { double, double } %16087, 0, !dbg !384
  store double %16088, ptr %19, align 8, !dbg !384
  %16089 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16090 = extractvalue { double, double } %16087, 1, !dbg !384
  store double %16090, ptr %16089, align 8, !dbg !384
  %16091 = load double, ptr %18, align 8, !dbg !385
  %16092 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16093 = load double, ptr %16092, align 8, !dbg !385
  %16094 = load double, ptr %19, align 8, !dbg !385
  %16095 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16096 = load double, ptr %16095, align 8, !dbg !385
  %16097 = call double @dot(double %16091, double %16093, double %16094, double %16096), !dbg !385
  %16098 = call double @atan2(double noundef %16063, double noundef %16097) #6, !dbg !386
  store double %16098, ptr %13, align 8, !dbg !387
  %16099 = load double, ptr %13, align 8, !dbg !388
  %16100 = load double, ptr %14, align 8, !dbg !389
  %16101 = fadd double %16100, %16099, !dbg !389
  store double %16101, ptr %14, align 8, !dbg !389
  %16102 = load double, ptr %13, align 8, !dbg !390
  %16103 = fsub double %16102, 0x400921FB54442D18, !dbg !392
  %16104 = call double @llvm.fabs.f64(double %16103), !dbg !393
  %16105 = fcmp ole double %16104, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16105, label %14330, label %16106, !dbg !395

16106:                                            ; preds = %16029
  %16107 = load double, ptr %13, align 8, !dbg !396
  %16108 = fadd double %16107, 0x400921FB54442D18, !dbg !397
  %16109 = call double @llvm.fabs.f64(double %16108), !dbg !398
  %16110 = fcmp ole double %16109, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16110, label %14330, label %16111, !dbg !400

16111:                                            ; preds = %16106
  br label %16112, !dbg !403

16112:                                            ; preds = %16111
  %16113 = load i32, ptr %10, align 4, !dbg !404
  %16114 = add nsw i32 %16113, 1, !dbg !404
  store i32 %16114, ptr %10, align 4, !dbg !404
  %16115 = load i32, ptr %10, align 4, !dbg !364
  %16116 = load i32, ptr %8, align 4, !dbg !366
  %16117 = icmp slt i32 %16115, %16116, !dbg !367
  br i1 %16117, label %16118, label %48422, !dbg !368

16118:                                            ; preds = %16112
  %16119 = load i32, ptr %10, align 4, !dbg !369
  %16120 = sext i32 %16119 to i64, !dbg !371
  %16121 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16120, !dbg !371
  %16122 = load double, ptr %6, align 8, !dbg !372
  %16123 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16124 = load double, ptr %16123, align 8, !dbg !372
  %16125 = load double, ptr %16121, align 16, !dbg !372
  %16126 = getelementptr inbounds { double, double }, ptr %16121, i32 0, i32 1, !dbg !372
  %16127 = load double, ptr %16126, align 8, !dbg !372
  %16128 = call { double, double } @make_vec(double %16122, double %16124, double %16125, double %16127), !dbg !372
  %16129 = extractvalue { double, double } %16128, 0, !dbg !372
  store double %16129, ptr %16, align 8, !dbg !372
  %16130 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16131 = extractvalue { double, double } %16128, 1, !dbg !372
  store double %16131, ptr %16130, align 8, !dbg !372
  %16132 = load i32, ptr %10, align 4, !dbg !373
  %16133 = add nsw i32 %16132, 1, !dbg !374
  %16134 = sext i32 %16133 to i64, !dbg !375
  %16135 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16134, !dbg !375
  %16136 = load double, ptr %6, align 8, !dbg !376
  %16137 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16138 = load double, ptr %16137, align 8, !dbg !376
  %16139 = load double, ptr %16135, align 16, !dbg !376
  %16140 = getelementptr inbounds { double, double }, ptr %16135, i32 0, i32 1, !dbg !376
  %16141 = load double, ptr %16140, align 8, !dbg !376
  %16142 = call { double, double } @make_vec(double %16136, double %16138, double %16139, double %16141), !dbg !376
  %16143 = extractvalue { double, double } %16142, 0, !dbg !376
  store double %16143, ptr %17, align 8, !dbg !376
  %16144 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16145 = extractvalue { double, double } %16142, 1, !dbg !376
  store double %16145, ptr %16144, align 8, !dbg !376
  %16146 = load double, ptr %16, align 8, !dbg !377
  %16147 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16148 = load double, ptr %16147, align 8, !dbg !377
  %16149 = load double, ptr %17, align 8, !dbg !377
  %16150 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16151 = load double, ptr %16150, align 8, !dbg !377
  %16152 = call double @cross(double %16146, double %16148, double %16149, double %16151), !dbg !377
  %16153 = load i32, ptr %10, align 4, !dbg !378
  %16154 = sext i32 %16153 to i64, !dbg !379
  %16155 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16154, !dbg !379
  %16156 = load double, ptr %6, align 8, !dbg !380
  %16157 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16158 = load double, ptr %16157, align 8, !dbg !380
  %16159 = load double, ptr %16155, align 16, !dbg !380
  %16160 = getelementptr inbounds { double, double }, ptr %16155, i32 0, i32 1, !dbg !380
  %16161 = load double, ptr %16160, align 8, !dbg !380
  %16162 = call { double, double } @make_vec(double %16156, double %16158, double %16159, double %16161), !dbg !380
  %16163 = extractvalue { double, double } %16162, 0, !dbg !380
  store double %16163, ptr %18, align 8, !dbg !380
  %16164 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16165 = extractvalue { double, double } %16162, 1, !dbg !380
  store double %16165, ptr %16164, align 8, !dbg !380
  %16166 = load i32, ptr %10, align 4, !dbg !381
  %16167 = add nsw i32 %16166, 1, !dbg !382
  %16168 = sext i32 %16167 to i64, !dbg !383
  %16169 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16168, !dbg !383
  %16170 = load double, ptr %6, align 8, !dbg !384
  %16171 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16172 = load double, ptr %16171, align 8, !dbg !384
  %16173 = load double, ptr %16169, align 16, !dbg !384
  %16174 = getelementptr inbounds { double, double }, ptr %16169, i32 0, i32 1, !dbg !384
  %16175 = load double, ptr %16174, align 8, !dbg !384
  %16176 = call { double, double } @make_vec(double %16170, double %16172, double %16173, double %16175), !dbg !384
  %16177 = extractvalue { double, double } %16176, 0, !dbg !384
  store double %16177, ptr %19, align 8, !dbg !384
  %16178 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16179 = extractvalue { double, double } %16176, 1, !dbg !384
  store double %16179, ptr %16178, align 8, !dbg !384
  %16180 = load double, ptr %18, align 8, !dbg !385
  %16181 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16182 = load double, ptr %16181, align 8, !dbg !385
  %16183 = load double, ptr %19, align 8, !dbg !385
  %16184 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16185 = load double, ptr %16184, align 8, !dbg !385
  %16186 = call double @dot(double %16180, double %16182, double %16183, double %16185), !dbg !385
  %16187 = call double @atan2(double noundef %16152, double noundef %16186) #6, !dbg !386
  store double %16187, ptr %13, align 8, !dbg !387
  %16188 = load double, ptr %13, align 8, !dbg !388
  %16189 = load double, ptr %14, align 8, !dbg !389
  %16190 = fadd double %16189, %16188, !dbg !389
  store double %16190, ptr %14, align 8, !dbg !389
  %16191 = load double, ptr %13, align 8, !dbg !390
  %16192 = fsub double %16191, 0x400921FB54442D18, !dbg !392
  %16193 = call double @llvm.fabs.f64(double %16192), !dbg !393
  %16194 = fcmp ole double %16193, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16194, label %14330, label %16195, !dbg !395

16195:                                            ; preds = %16118
  %16196 = load double, ptr %13, align 8, !dbg !396
  %16197 = fadd double %16196, 0x400921FB54442D18, !dbg !397
  %16198 = call double @llvm.fabs.f64(double %16197), !dbg !398
  %16199 = fcmp ole double %16198, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16199, label %14330, label %16200, !dbg !400

16200:                                            ; preds = %16195
  br label %16201, !dbg !403

16201:                                            ; preds = %16200
  %16202 = load i32, ptr %10, align 4, !dbg !404
  %16203 = add nsw i32 %16202, 1, !dbg !404
  store i32 %16203, ptr %10, align 4, !dbg !404
  %16204 = load i32, ptr %10, align 4, !dbg !364
  %16205 = load i32, ptr %8, align 4, !dbg !366
  %16206 = icmp slt i32 %16204, %16205, !dbg !367
  br i1 %16206, label %16207, label %48422, !dbg !368

16207:                                            ; preds = %16201
  %16208 = load i32, ptr %10, align 4, !dbg !369
  %16209 = sext i32 %16208 to i64, !dbg !371
  %16210 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16209, !dbg !371
  %16211 = load double, ptr %6, align 8, !dbg !372
  %16212 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16213 = load double, ptr %16212, align 8, !dbg !372
  %16214 = load double, ptr %16210, align 16, !dbg !372
  %16215 = getelementptr inbounds { double, double }, ptr %16210, i32 0, i32 1, !dbg !372
  %16216 = load double, ptr %16215, align 8, !dbg !372
  %16217 = call { double, double } @make_vec(double %16211, double %16213, double %16214, double %16216), !dbg !372
  %16218 = extractvalue { double, double } %16217, 0, !dbg !372
  store double %16218, ptr %16, align 8, !dbg !372
  %16219 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16220 = extractvalue { double, double } %16217, 1, !dbg !372
  store double %16220, ptr %16219, align 8, !dbg !372
  %16221 = load i32, ptr %10, align 4, !dbg !373
  %16222 = add nsw i32 %16221, 1, !dbg !374
  %16223 = sext i32 %16222 to i64, !dbg !375
  %16224 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16223, !dbg !375
  %16225 = load double, ptr %6, align 8, !dbg !376
  %16226 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16227 = load double, ptr %16226, align 8, !dbg !376
  %16228 = load double, ptr %16224, align 16, !dbg !376
  %16229 = getelementptr inbounds { double, double }, ptr %16224, i32 0, i32 1, !dbg !376
  %16230 = load double, ptr %16229, align 8, !dbg !376
  %16231 = call { double, double } @make_vec(double %16225, double %16227, double %16228, double %16230), !dbg !376
  %16232 = extractvalue { double, double } %16231, 0, !dbg !376
  store double %16232, ptr %17, align 8, !dbg !376
  %16233 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16234 = extractvalue { double, double } %16231, 1, !dbg !376
  store double %16234, ptr %16233, align 8, !dbg !376
  %16235 = load double, ptr %16, align 8, !dbg !377
  %16236 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16237 = load double, ptr %16236, align 8, !dbg !377
  %16238 = load double, ptr %17, align 8, !dbg !377
  %16239 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16240 = load double, ptr %16239, align 8, !dbg !377
  %16241 = call double @cross(double %16235, double %16237, double %16238, double %16240), !dbg !377
  %16242 = load i32, ptr %10, align 4, !dbg !378
  %16243 = sext i32 %16242 to i64, !dbg !379
  %16244 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16243, !dbg !379
  %16245 = load double, ptr %6, align 8, !dbg !380
  %16246 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16247 = load double, ptr %16246, align 8, !dbg !380
  %16248 = load double, ptr %16244, align 16, !dbg !380
  %16249 = getelementptr inbounds { double, double }, ptr %16244, i32 0, i32 1, !dbg !380
  %16250 = load double, ptr %16249, align 8, !dbg !380
  %16251 = call { double, double } @make_vec(double %16245, double %16247, double %16248, double %16250), !dbg !380
  %16252 = extractvalue { double, double } %16251, 0, !dbg !380
  store double %16252, ptr %18, align 8, !dbg !380
  %16253 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16254 = extractvalue { double, double } %16251, 1, !dbg !380
  store double %16254, ptr %16253, align 8, !dbg !380
  %16255 = load i32, ptr %10, align 4, !dbg !381
  %16256 = add nsw i32 %16255, 1, !dbg !382
  %16257 = sext i32 %16256 to i64, !dbg !383
  %16258 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16257, !dbg !383
  %16259 = load double, ptr %6, align 8, !dbg !384
  %16260 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16261 = load double, ptr %16260, align 8, !dbg !384
  %16262 = load double, ptr %16258, align 16, !dbg !384
  %16263 = getelementptr inbounds { double, double }, ptr %16258, i32 0, i32 1, !dbg !384
  %16264 = load double, ptr %16263, align 8, !dbg !384
  %16265 = call { double, double } @make_vec(double %16259, double %16261, double %16262, double %16264), !dbg !384
  %16266 = extractvalue { double, double } %16265, 0, !dbg !384
  store double %16266, ptr %19, align 8, !dbg !384
  %16267 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16268 = extractvalue { double, double } %16265, 1, !dbg !384
  store double %16268, ptr %16267, align 8, !dbg !384
  %16269 = load double, ptr %18, align 8, !dbg !385
  %16270 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16271 = load double, ptr %16270, align 8, !dbg !385
  %16272 = load double, ptr %19, align 8, !dbg !385
  %16273 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16274 = load double, ptr %16273, align 8, !dbg !385
  %16275 = call double @dot(double %16269, double %16271, double %16272, double %16274), !dbg !385
  %16276 = call double @atan2(double noundef %16241, double noundef %16275) #6, !dbg !386
  store double %16276, ptr %13, align 8, !dbg !387
  %16277 = load double, ptr %13, align 8, !dbg !388
  %16278 = load double, ptr %14, align 8, !dbg !389
  %16279 = fadd double %16278, %16277, !dbg !389
  store double %16279, ptr %14, align 8, !dbg !389
  %16280 = load double, ptr %13, align 8, !dbg !390
  %16281 = fsub double %16280, 0x400921FB54442D18, !dbg !392
  %16282 = call double @llvm.fabs.f64(double %16281), !dbg !393
  %16283 = fcmp ole double %16282, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16283, label %14330, label %16284, !dbg !395

16284:                                            ; preds = %16207
  %16285 = load double, ptr %13, align 8, !dbg !396
  %16286 = fadd double %16285, 0x400921FB54442D18, !dbg !397
  %16287 = call double @llvm.fabs.f64(double %16286), !dbg !398
  %16288 = fcmp ole double %16287, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16288, label %14330, label %16289, !dbg !400

16289:                                            ; preds = %16284
  br label %16290, !dbg !403

16290:                                            ; preds = %16289
  %16291 = load i32, ptr %10, align 4, !dbg !404
  %16292 = add nsw i32 %16291, 1, !dbg !404
  store i32 %16292, ptr %10, align 4, !dbg !404
  %16293 = load i32, ptr %10, align 4, !dbg !364
  %16294 = load i32, ptr %8, align 4, !dbg !366
  %16295 = icmp slt i32 %16293, %16294, !dbg !367
  br i1 %16295, label %16296, label %48422, !dbg !368

16296:                                            ; preds = %16290
  %16297 = load i32, ptr %10, align 4, !dbg !369
  %16298 = sext i32 %16297 to i64, !dbg !371
  %16299 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16298, !dbg !371
  %16300 = load double, ptr %6, align 8, !dbg !372
  %16301 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16302 = load double, ptr %16301, align 8, !dbg !372
  %16303 = load double, ptr %16299, align 16, !dbg !372
  %16304 = getelementptr inbounds { double, double }, ptr %16299, i32 0, i32 1, !dbg !372
  %16305 = load double, ptr %16304, align 8, !dbg !372
  %16306 = call { double, double } @make_vec(double %16300, double %16302, double %16303, double %16305), !dbg !372
  %16307 = extractvalue { double, double } %16306, 0, !dbg !372
  store double %16307, ptr %16, align 8, !dbg !372
  %16308 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16309 = extractvalue { double, double } %16306, 1, !dbg !372
  store double %16309, ptr %16308, align 8, !dbg !372
  %16310 = load i32, ptr %10, align 4, !dbg !373
  %16311 = add nsw i32 %16310, 1, !dbg !374
  %16312 = sext i32 %16311 to i64, !dbg !375
  %16313 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16312, !dbg !375
  %16314 = load double, ptr %6, align 8, !dbg !376
  %16315 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16316 = load double, ptr %16315, align 8, !dbg !376
  %16317 = load double, ptr %16313, align 16, !dbg !376
  %16318 = getelementptr inbounds { double, double }, ptr %16313, i32 0, i32 1, !dbg !376
  %16319 = load double, ptr %16318, align 8, !dbg !376
  %16320 = call { double, double } @make_vec(double %16314, double %16316, double %16317, double %16319), !dbg !376
  %16321 = extractvalue { double, double } %16320, 0, !dbg !376
  store double %16321, ptr %17, align 8, !dbg !376
  %16322 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16323 = extractvalue { double, double } %16320, 1, !dbg !376
  store double %16323, ptr %16322, align 8, !dbg !376
  %16324 = load double, ptr %16, align 8, !dbg !377
  %16325 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16326 = load double, ptr %16325, align 8, !dbg !377
  %16327 = load double, ptr %17, align 8, !dbg !377
  %16328 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16329 = load double, ptr %16328, align 8, !dbg !377
  %16330 = call double @cross(double %16324, double %16326, double %16327, double %16329), !dbg !377
  %16331 = load i32, ptr %10, align 4, !dbg !378
  %16332 = sext i32 %16331 to i64, !dbg !379
  %16333 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16332, !dbg !379
  %16334 = load double, ptr %6, align 8, !dbg !380
  %16335 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16336 = load double, ptr %16335, align 8, !dbg !380
  %16337 = load double, ptr %16333, align 16, !dbg !380
  %16338 = getelementptr inbounds { double, double }, ptr %16333, i32 0, i32 1, !dbg !380
  %16339 = load double, ptr %16338, align 8, !dbg !380
  %16340 = call { double, double } @make_vec(double %16334, double %16336, double %16337, double %16339), !dbg !380
  %16341 = extractvalue { double, double } %16340, 0, !dbg !380
  store double %16341, ptr %18, align 8, !dbg !380
  %16342 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16343 = extractvalue { double, double } %16340, 1, !dbg !380
  store double %16343, ptr %16342, align 8, !dbg !380
  %16344 = load i32, ptr %10, align 4, !dbg !381
  %16345 = add nsw i32 %16344, 1, !dbg !382
  %16346 = sext i32 %16345 to i64, !dbg !383
  %16347 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16346, !dbg !383
  %16348 = load double, ptr %6, align 8, !dbg !384
  %16349 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16350 = load double, ptr %16349, align 8, !dbg !384
  %16351 = load double, ptr %16347, align 16, !dbg !384
  %16352 = getelementptr inbounds { double, double }, ptr %16347, i32 0, i32 1, !dbg !384
  %16353 = load double, ptr %16352, align 8, !dbg !384
  %16354 = call { double, double } @make_vec(double %16348, double %16350, double %16351, double %16353), !dbg !384
  %16355 = extractvalue { double, double } %16354, 0, !dbg !384
  store double %16355, ptr %19, align 8, !dbg !384
  %16356 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16357 = extractvalue { double, double } %16354, 1, !dbg !384
  store double %16357, ptr %16356, align 8, !dbg !384
  %16358 = load double, ptr %18, align 8, !dbg !385
  %16359 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16360 = load double, ptr %16359, align 8, !dbg !385
  %16361 = load double, ptr %19, align 8, !dbg !385
  %16362 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16363 = load double, ptr %16362, align 8, !dbg !385
  %16364 = call double @dot(double %16358, double %16360, double %16361, double %16363), !dbg !385
  %16365 = call double @atan2(double noundef %16330, double noundef %16364) #6, !dbg !386
  store double %16365, ptr %13, align 8, !dbg !387
  %16366 = load double, ptr %13, align 8, !dbg !388
  %16367 = load double, ptr %14, align 8, !dbg !389
  %16368 = fadd double %16367, %16366, !dbg !389
  store double %16368, ptr %14, align 8, !dbg !389
  %16369 = load double, ptr %13, align 8, !dbg !390
  %16370 = fsub double %16369, 0x400921FB54442D18, !dbg !392
  %16371 = call double @llvm.fabs.f64(double %16370), !dbg !393
  %16372 = fcmp ole double %16371, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16372, label %14330, label %16373, !dbg !395

16373:                                            ; preds = %16296
  %16374 = load double, ptr %13, align 8, !dbg !396
  %16375 = fadd double %16374, 0x400921FB54442D18, !dbg !397
  %16376 = call double @llvm.fabs.f64(double %16375), !dbg !398
  %16377 = fcmp ole double %16376, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16377, label %14330, label %16378, !dbg !400

16378:                                            ; preds = %16373
  br label %16379, !dbg !403

16379:                                            ; preds = %16378
  %16380 = load i32, ptr %10, align 4, !dbg !404
  %16381 = add nsw i32 %16380, 1, !dbg !404
  store i32 %16381, ptr %10, align 4, !dbg !404
  %16382 = load i32, ptr %10, align 4, !dbg !364
  %16383 = load i32, ptr %8, align 4, !dbg !366
  %16384 = icmp slt i32 %16382, %16383, !dbg !367
  br i1 %16384, label %16385, label %48422, !dbg !368

16385:                                            ; preds = %16379
  %16386 = load i32, ptr %10, align 4, !dbg !369
  %16387 = sext i32 %16386 to i64, !dbg !371
  %16388 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16387, !dbg !371
  %16389 = load double, ptr %6, align 8, !dbg !372
  %16390 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16391 = load double, ptr %16390, align 8, !dbg !372
  %16392 = load double, ptr %16388, align 16, !dbg !372
  %16393 = getelementptr inbounds { double, double }, ptr %16388, i32 0, i32 1, !dbg !372
  %16394 = load double, ptr %16393, align 8, !dbg !372
  %16395 = call { double, double } @make_vec(double %16389, double %16391, double %16392, double %16394), !dbg !372
  %16396 = extractvalue { double, double } %16395, 0, !dbg !372
  store double %16396, ptr %16, align 8, !dbg !372
  %16397 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16398 = extractvalue { double, double } %16395, 1, !dbg !372
  store double %16398, ptr %16397, align 8, !dbg !372
  %16399 = load i32, ptr %10, align 4, !dbg !373
  %16400 = add nsw i32 %16399, 1, !dbg !374
  %16401 = sext i32 %16400 to i64, !dbg !375
  %16402 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16401, !dbg !375
  %16403 = load double, ptr %6, align 8, !dbg !376
  %16404 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16405 = load double, ptr %16404, align 8, !dbg !376
  %16406 = load double, ptr %16402, align 16, !dbg !376
  %16407 = getelementptr inbounds { double, double }, ptr %16402, i32 0, i32 1, !dbg !376
  %16408 = load double, ptr %16407, align 8, !dbg !376
  %16409 = call { double, double } @make_vec(double %16403, double %16405, double %16406, double %16408), !dbg !376
  %16410 = extractvalue { double, double } %16409, 0, !dbg !376
  store double %16410, ptr %17, align 8, !dbg !376
  %16411 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16412 = extractvalue { double, double } %16409, 1, !dbg !376
  store double %16412, ptr %16411, align 8, !dbg !376
  %16413 = load double, ptr %16, align 8, !dbg !377
  %16414 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16415 = load double, ptr %16414, align 8, !dbg !377
  %16416 = load double, ptr %17, align 8, !dbg !377
  %16417 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16418 = load double, ptr %16417, align 8, !dbg !377
  %16419 = call double @cross(double %16413, double %16415, double %16416, double %16418), !dbg !377
  %16420 = load i32, ptr %10, align 4, !dbg !378
  %16421 = sext i32 %16420 to i64, !dbg !379
  %16422 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16421, !dbg !379
  %16423 = load double, ptr %6, align 8, !dbg !380
  %16424 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16425 = load double, ptr %16424, align 8, !dbg !380
  %16426 = load double, ptr %16422, align 16, !dbg !380
  %16427 = getelementptr inbounds { double, double }, ptr %16422, i32 0, i32 1, !dbg !380
  %16428 = load double, ptr %16427, align 8, !dbg !380
  %16429 = call { double, double } @make_vec(double %16423, double %16425, double %16426, double %16428), !dbg !380
  %16430 = extractvalue { double, double } %16429, 0, !dbg !380
  store double %16430, ptr %18, align 8, !dbg !380
  %16431 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16432 = extractvalue { double, double } %16429, 1, !dbg !380
  store double %16432, ptr %16431, align 8, !dbg !380
  %16433 = load i32, ptr %10, align 4, !dbg !381
  %16434 = add nsw i32 %16433, 1, !dbg !382
  %16435 = sext i32 %16434 to i64, !dbg !383
  %16436 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16435, !dbg !383
  %16437 = load double, ptr %6, align 8, !dbg !384
  %16438 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16439 = load double, ptr %16438, align 8, !dbg !384
  %16440 = load double, ptr %16436, align 16, !dbg !384
  %16441 = getelementptr inbounds { double, double }, ptr %16436, i32 0, i32 1, !dbg !384
  %16442 = load double, ptr %16441, align 8, !dbg !384
  %16443 = call { double, double } @make_vec(double %16437, double %16439, double %16440, double %16442), !dbg !384
  %16444 = extractvalue { double, double } %16443, 0, !dbg !384
  store double %16444, ptr %19, align 8, !dbg !384
  %16445 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16446 = extractvalue { double, double } %16443, 1, !dbg !384
  store double %16446, ptr %16445, align 8, !dbg !384
  %16447 = load double, ptr %18, align 8, !dbg !385
  %16448 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16449 = load double, ptr %16448, align 8, !dbg !385
  %16450 = load double, ptr %19, align 8, !dbg !385
  %16451 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16452 = load double, ptr %16451, align 8, !dbg !385
  %16453 = call double @dot(double %16447, double %16449, double %16450, double %16452), !dbg !385
  %16454 = call double @atan2(double noundef %16419, double noundef %16453) #6, !dbg !386
  store double %16454, ptr %13, align 8, !dbg !387
  %16455 = load double, ptr %13, align 8, !dbg !388
  %16456 = load double, ptr %14, align 8, !dbg !389
  %16457 = fadd double %16456, %16455, !dbg !389
  store double %16457, ptr %14, align 8, !dbg !389
  %16458 = load double, ptr %13, align 8, !dbg !390
  %16459 = fsub double %16458, 0x400921FB54442D18, !dbg !392
  %16460 = call double @llvm.fabs.f64(double %16459), !dbg !393
  %16461 = fcmp ole double %16460, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16461, label %14330, label %16462, !dbg !395

16462:                                            ; preds = %16385
  %16463 = load double, ptr %13, align 8, !dbg !396
  %16464 = fadd double %16463, 0x400921FB54442D18, !dbg !397
  %16465 = call double @llvm.fabs.f64(double %16464), !dbg !398
  %16466 = fcmp ole double %16465, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16466, label %14330, label %16467, !dbg !400

16467:                                            ; preds = %16462
  br label %16468, !dbg !403

16468:                                            ; preds = %16467
  %16469 = load i32, ptr %10, align 4, !dbg !404
  %16470 = add nsw i32 %16469, 1, !dbg !404
  store i32 %16470, ptr %10, align 4, !dbg !404
  %16471 = load i32, ptr %10, align 4, !dbg !364
  %16472 = load i32, ptr %8, align 4, !dbg !366
  %16473 = icmp slt i32 %16471, %16472, !dbg !367
  br i1 %16473, label %16474, label %48422, !dbg !368

16474:                                            ; preds = %16468
  %16475 = load i32, ptr %10, align 4, !dbg !369
  %16476 = sext i32 %16475 to i64, !dbg !371
  %16477 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16476, !dbg !371
  %16478 = load double, ptr %6, align 8, !dbg !372
  %16479 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16480 = load double, ptr %16479, align 8, !dbg !372
  %16481 = load double, ptr %16477, align 16, !dbg !372
  %16482 = getelementptr inbounds { double, double }, ptr %16477, i32 0, i32 1, !dbg !372
  %16483 = load double, ptr %16482, align 8, !dbg !372
  %16484 = call { double, double } @make_vec(double %16478, double %16480, double %16481, double %16483), !dbg !372
  %16485 = extractvalue { double, double } %16484, 0, !dbg !372
  store double %16485, ptr %16, align 8, !dbg !372
  %16486 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16487 = extractvalue { double, double } %16484, 1, !dbg !372
  store double %16487, ptr %16486, align 8, !dbg !372
  %16488 = load i32, ptr %10, align 4, !dbg !373
  %16489 = add nsw i32 %16488, 1, !dbg !374
  %16490 = sext i32 %16489 to i64, !dbg !375
  %16491 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16490, !dbg !375
  %16492 = load double, ptr %6, align 8, !dbg !376
  %16493 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16494 = load double, ptr %16493, align 8, !dbg !376
  %16495 = load double, ptr %16491, align 16, !dbg !376
  %16496 = getelementptr inbounds { double, double }, ptr %16491, i32 0, i32 1, !dbg !376
  %16497 = load double, ptr %16496, align 8, !dbg !376
  %16498 = call { double, double } @make_vec(double %16492, double %16494, double %16495, double %16497), !dbg !376
  %16499 = extractvalue { double, double } %16498, 0, !dbg !376
  store double %16499, ptr %17, align 8, !dbg !376
  %16500 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16501 = extractvalue { double, double } %16498, 1, !dbg !376
  store double %16501, ptr %16500, align 8, !dbg !376
  %16502 = load double, ptr %16, align 8, !dbg !377
  %16503 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16504 = load double, ptr %16503, align 8, !dbg !377
  %16505 = load double, ptr %17, align 8, !dbg !377
  %16506 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16507 = load double, ptr %16506, align 8, !dbg !377
  %16508 = call double @cross(double %16502, double %16504, double %16505, double %16507), !dbg !377
  %16509 = load i32, ptr %10, align 4, !dbg !378
  %16510 = sext i32 %16509 to i64, !dbg !379
  %16511 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16510, !dbg !379
  %16512 = load double, ptr %6, align 8, !dbg !380
  %16513 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16514 = load double, ptr %16513, align 8, !dbg !380
  %16515 = load double, ptr %16511, align 16, !dbg !380
  %16516 = getelementptr inbounds { double, double }, ptr %16511, i32 0, i32 1, !dbg !380
  %16517 = load double, ptr %16516, align 8, !dbg !380
  %16518 = call { double, double } @make_vec(double %16512, double %16514, double %16515, double %16517), !dbg !380
  %16519 = extractvalue { double, double } %16518, 0, !dbg !380
  store double %16519, ptr %18, align 8, !dbg !380
  %16520 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16521 = extractvalue { double, double } %16518, 1, !dbg !380
  store double %16521, ptr %16520, align 8, !dbg !380
  %16522 = load i32, ptr %10, align 4, !dbg !381
  %16523 = add nsw i32 %16522, 1, !dbg !382
  %16524 = sext i32 %16523 to i64, !dbg !383
  %16525 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16524, !dbg !383
  %16526 = load double, ptr %6, align 8, !dbg !384
  %16527 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16528 = load double, ptr %16527, align 8, !dbg !384
  %16529 = load double, ptr %16525, align 16, !dbg !384
  %16530 = getelementptr inbounds { double, double }, ptr %16525, i32 0, i32 1, !dbg !384
  %16531 = load double, ptr %16530, align 8, !dbg !384
  %16532 = call { double, double } @make_vec(double %16526, double %16528, double %16529, double %16531), !dbg !384
  %16533 = extractvalue { double, double } %16532, 0, !dbg !384
  store double %16533, ptr %19, align 8, !dbg !384
  %16534 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16535 = extractvalue { double, double } %16532, 1, !dbg !384
  store double %16535, ptr %16534, align 8, !dbg !384
  %16536 = load double, ptr %18, align 8, !dbg !385
  %16537 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16538 = load double, ptr %16537, align 8, !dbg !385
  %16539 = load double, ptr %19, align 8, !dbg !385
  %16540 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16541 = load double, ptr %16540, align 8, !dbg !385
  %16542 = call double @dot(double %16536, double %16538, double %16539, double %16541), !dbg !385
  %16543 = call double @atan2(double noundef %16508, double noundef %16542) #6, !dbg !386
  store double %16543, ptr %13, align 8, !dbg !387
  %16544 = load double, ptr %13, align 8, !dbg !388
  %16545 = load double, ptr %14, align 8, !dbg !389
  %16546 = fadd double %16545, %16544, !dbg !389
  store double %16546, ptr %14, align 8, !dbg !389
  %16547 = load double, ptr %13, align 8, !dbg !390
  %16548 = fsub double %16547, 0x400921FB54442D18, !dbg !392
  %16549 = call double @llvm.fabs.f64(double %16548), !dbg !393
  %16550 = fcmp ole double %16549, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16550, label %14330, label %16551, !dbg !395

16551:                                            ; preds = %16474
  %16552 = load double, ptr %13, align 8, !dbg !396
  %16553 = fadd double %16552, 0x400921FB54442D18, !dbg !397
  %16554 = call double @llvm.fabs.f64(double %16553), !dbg !398
  %16555 = fcmp ole double %16554, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16555, label %14330, label %16556, !dbg !400

16556:                                            ; preds = %16551
  br label %16557, !dbg !403

16557:                                            ; preds = %16556
  %16558 = load i32, ptr %10, align 4, !dbg !404
  %16559 = add nsw i32 %16558, 1, !dbg !404
  store i32 %16559, ptr %10, align 4, !dbg !404
  %16560 = load i32, ptr %10, align 4, !dbg !364
  %16561 = load i32, ptr %8, align 4, !dbg !366
  %16562 = icmp slt i32 %16560, %16561, !dbg !367
  br i1 %16562, label %16563, label %48422, !dbg !368

16563:                                            ; preds = %16557
  %16564 = load i32, ptr %10, align 4, !dbg !369
  %16565 = sext i32 %16564 to i64, !dbg !371
  %16566 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16565, !dbg !371
  %16567 = load double, ptr %6, align 8, !dbg !372
  %16568 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16569 = load double, ptr %16568, align 8, !dbg !372
  %16570 = load double, ptr %16566, align 16, !dbg !372
  %16571 = getelementptr inbounds { double, double }, ptr %16566, i32 0, i32 1, !dbg !372
  %16572 = load double, ptr %16571, align 8, !dbg !372
  %16573 = call { double, double } @make_vec(double %16567, double %16569, double %16570, double %16572), !dbg !372
  %16574 = extractvalue { double, double } %16573, 0, !dbg !372
  store double %16574, ptr %16, align 8, !dbg !372
  %16575 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16576 = extractvalue { double, double } %16573, 1, !dbg !372
  store double %16576, ptr %16575, align 8, !dbg !372
  %16577 = load i32, ptr %10, align 4, !dbg !373
  %16578 = add nsw i32 %16577, 1, !dbg !374
  %16579 = sext i32 %16578 to i64, !dbg !375
  %16580 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16579, !dbg !375
  %16581 = load double, ptr %6, align 8, !dbg !376
  %16582 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16583 = load double, ptr %16582, align 8, !dbg !376
  %16584 = load double, ptr %16580, align 16, !dbg !376
  %16585 = getelementptr inbounds { double, double }, ptr %16580, i32 0, i32 1, !dbg !376
  %16586 = load double, ptr %16585, align 8, !dbg !376
  %16587 = call { double, double } @make_vec(double %16581, double %16583, double %16584, double %16586), !dbg !376
  %16588 = extractvalue { double, double } %16587, 0, !dbg !376
  store double %16588, ptr %17, align 8, !dbg !376
  %16589 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16590 = extractvalue { double, double } %16587, 1, !dbg !376
  store double %16590, ptr %16589, align 8, !dbg !376
  %16591 = load double, ptr %16, align 8, !dbg !377
  %16592 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16593 = load double, ptr %16592, align 8, !dbg !377
  %16594 = load double, ptr %17, align 8, !dbg !377
  %16595 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16596 = load double, ptr %16595, align 8, !dbg !377
  %16597 = call double @cross(double %16591, double %16593, double %16594, double %16596), !dbg !377
  %16598 = load i32, ptr %10, align 4, !dbg !378
  %16599 = sext i32 %16598 to i64, !dbg !379
  %16600 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16599, !dbg !379
  %16601 = load double, ptr %6, align 8, !dbg !380
  %16602 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16603 = load double, ptr %16602, align 8, !dbg !380
  %16604 = load double, ptr %16600, align 16, !dbg !380
  %16605 = getelementptr inbounds { double, double }, ptr %16600, i32 0, i32 1, !dbg !380
  %16606 = load double, ptr %16605, align 8, !dbg !380
  %16607 = call { double, double } @make_vec(double %16601, double %16603, double %16604, double %16606), !dbg !380
  %16608 = extractvalue { double, double } %16607, 0, !dbg !380
  store double %16608, ptr %18, align 8, !dbg !380
  %16609 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16610 = extractvalue { double, double } %16607, 1, !dbg !380
  store double %16610, ptr %16609, align 8, !dbg !380
  %16611 = load i32, ptr %10, align 4, !dbg !381
  %16612 = add nsw i32 %16611, 1, !dbg !382
  %16613 = sext i32 %16612 to i64, !dbg !383
  %16614 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16613, !dbg !383
  %16615 = load double, ptr %6, align 8, !dbg !384
  %16616 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16617 = load double, ptr %16616, align 8, !dbg !384
  %16618 = load double, ptr %16614, align 16, !dbg !384
  %16619 = getelementptr inbounds { double, double }, ptr %16614, i32 0, i32 1, !dbg !384
  %16620 = load double, ptr %16619, align 8, !dbg !384
  %16621 = call { double, double } @make_vec(double %16615, double %16617, double %16618, double %16620), !dbg !384
  %16622 = extractvalue { double, double } %16621, 0, !dbg !384
  store double %16622, ptr %19, align 8, !dbg !384
  %16623 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16624 = extractvalue { double, double } %16621, 1, !dbg !384
  store double %16624, ptr %16623, align 8, !dbg !384
  %16625 = load double, ptr %18, align 8, !dbg !385
  %16626 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16627 = load double, ptr %16626, align 8, !dbg !385
  %16628 = load double, ptr %19, align 8, !dbg !385
  %16629 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16630 = load double, ptr %16629, align 8, !dbg !385
  %16631 = call double @dot(double %16625, double %16627, double %16628, double %16630), !dbg !385
  %16632 = call double @atan2(double noundef %16597, double noundef %16631) #6, !dbg !386
  store double %16632, ptr %13, align 8, !dbg !387
  %16633 = load double, ptr %13, align 8, !dbg !388
  %16634 = load double, ptr %14, align 8, !dbg !389
  %16635 = fadd double %16634, %16633, !dbg !389
  store double %16635, ptr %14, align 8, !dbg !389
  %16636 = load double, ptr %13, align 8, !dbg !390
  %16637 = fsub double %16636, 0x400921FB54442D18, !dbg !392
  %16638 = call double @llvm.fabs.f64(double %16637), !dbg !393
  %16639 = fcmp ole double %16638, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16639, label %14330, label %16640, !dbg !395

16640:                                            ; preds = %16563
  %16641 = load double, ptr %13, align 8, !dbg !396
  %16642 = fadd double %16641, 0x400921FB54442D18, !dbg !397
  %16643 = call double @llvm.fabs.f64(double %16642), !dbg !398
  %16644 = fcmp ole double %16643, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16644, label %14330, label %16645, !dbg !400

16645:                                            ; preds = %16640
  br label %16646, !dbg !403

16646:                                            ; preds = %16645
  %16647 = load i32, ptr %10, align 4, !dbg !404
  %16648 = add nsw i32 %16647, 1, !dbg !404
  store i32 %16648, ptr %10, align 4, !dbg !404
  %16649 = load i32, ptr %10, align 4, !dbg !364
  %16650 = load i32, ptr %8, align 4, !dbg !366
  %16651 = icmp slt i32 %16649, %16650, !dbg !367
  br i1 %16651, label %16652, label %48422, !dbg !368

16652:                                            ; preds = %16646
  %16653 = load i32, ptr %10, align 4, !dbg !369
  %16654 = sext i32 %16653 to i64, !dbg !371
  %16655 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16654, !dbg !371
  %16656 = load double, ptr %6, align 8, !dbg !372
  %16657 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16658 = load double, ptr %16657, align 8, !dbg !372
  %16659 = load double, ptr %16655, align 16, !dbg !372
  %16660 = getelementptr inbounds { double, double }, ptr %16655, i32 0, i32 1, !dbg !372
  %16661 = load double, ptr %16660, align 8, !dbg !372
  %16662 = call { double, double } @make_vec(double %16656, double %16658, double %16659, double %16661), !dbg !372
  %16663 = extractvalue { double, double } %16662, 0, !dbg !372
  store double %16663, ptr %16, align 8, !dbg !372
  %16664 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16665 = extractvalue { double, double } %16662, 1, !dbg !372
  store double %16665, ptr %16664, align 8, !dbg !372
  %16666 = load i32, ptr %10, align 4, !dbg !373
  %16667 = add nsw i32 %16666, 1, !dbg !374
  %16668 = sext i32 %16667 to i64, !dbg !375
  %16669 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16668, !dbg !375
  %16670 = load double, ptr %6, align 8, !dbg !376
  %16671 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16672 = load double, ptr %16671, align 8, !dbg !376
  %16673 = load double, ptr %16669, align 16, !dbg !376
  %16674 = getelementptr inbounds { double, double }, ptr %16669, i32 0, i32 1, !dbg !376
  %16675 = load double, ptr %16674, align 8, !dbg !376
  %16676 = call { double, double } @make_vec(double %16670, double %16672, double %16673, double %16675), !dbg !376
  %16677 = extractvalue { double, double } %16676, 0, !dbg !376
  store double %16677, ptr %17, align 8, !dbg !376
  %16678 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16679 = extractvalue { double, double } %16676, 1, !dbg !376
  store double %16679, ptr %16678, align 8, !dbg !376
  %16680 = load double, ptr %16, align 8, !dbg !377
  %16681 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16682 = load double, ptr %16681, align 8, !dbg !377
  %16683 = load double, ptr %17, align 8, !dbg !377
  %16684 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16685 = load double, ptr %16684, align 8, !dbg !377
  %16686 = call double @cross(double %16680, double %16682, double %16683, double %16685), !dbg !377
  %16687 = load i32, ptr %10, align 4, !dbg !378
  %16688 = sext i32 %16687 to i64, !dbg !379
  %16689 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16688, !dbg !379
  %16690 = load double, ptr %6, align 8, !dbg !380
  %16691 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16692 = load double, ptr %16691, align 8, !dbg !380
  %16693 = load double, ptr %16689, align 16, !dbg !380
  %16694 = getelementptr inbounds { double, double }, ptr %16689, i32 0, i32 1, !dbg !380
  %16695 = load double, ptr %16694, align 8, !dbg !380
  %16696 = call { double, double } @make_vec(double %16690, double %16692, double %16693, double %16695), !dbg !380
  %16697 = extractvalue { double, double } %16696, 0, !dbg !380
  store double %16697, ptr %18, align 8, !dbg !380
  %16698 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16699 = extractvalue { double, double } %16696, 1, !dbg !380
  store double %16699, ptr %16698, align 8, !dbg !380
  %16700 = load i32, ptr %10, align 4, !dbg !381
  %16701 = add nsw i32 %16700, 1, !dbg !382
  %16702 = sext i32 %16701 to i64, !dbg !383
  %16703 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16702, !dbg !383
  %16704 = load double, ptr %6, align 8, !dbg !384
  %16705 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16706 = load double, ptr %16705, align 8, !dbg !384
  %16707 = load double, ptr %16703, align 16, !dbg !384
  %16708 = getelementptr inbounds { double, double }, ptr %16703, i32 0, i32 1, !dbg !384
  %16709 = load double, ptr %16708, align 8, !dbg !384
  %16710 = call { double, double } @make_vec(double %16704, double %16706, double %16707, double %16709), !dbg !384
  %16711 = extractvalue { double, double } %16710, 0, !dbg !384
  store double %16711, ptr %19, align 8, !dbg !384
  %16712 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16713 = extractvalue { double, double } %16710, 1, !dbg !384
  store double %16713, ptr %16712, align 8, !dbg !384
  %16714 = load double, ptr %18, align 8, !dbg !385
  %16715 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16716 = load double, ptr %16715, align 8, !dbg !385
  %16717 = load double, ptr %19, align 8, !dbg !385
  %16718 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16719 = load double, ptr %16718, align 8, !dbg !385
  %16720 = call double @dot(double %16714, double %16716, double %16717, double %16719), !dbg !385
  %16721 = call double @atan2(double noundef %16686, double noundef %16720) #6, !dbg !386
  store double %16721, ptr %13, align 8, !dbg !387
  %16722 = load double, ptr %13, align 8, !dbg !388
  %16723 = load double, ptr %14, align 8, !dbg !389
  %16724 = fadd double %16723, %16722, !dbg !389
  store double %16724, ptr %14, align 8, !dbg !389
  %16725 = load double, ptr %13, align 8, !dbg !390
  %16726 = fsub double %16725, 0x400921FB54442D18, !dbg !392
  %16727 = call double @llvm.fabs.f64(double %16726), !dbg !393
  %16728 = fcmp ole double %16727, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16728, label %14330, label %16729, !dbg !395

16729:                                            ; preds = %16652
  %16730 = load double, ptr %13, align 8, !dbg !396
  %16731 = fadd double %16730, 0x400921FB54442D18, !dbg !397
  %16732 = call double @llvm.fabs.f64(double %16731), !dbg !398
  %16733 = fcmp ole double %16732, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16733, label %14330, label %16734, !dbg !400

16734:                                            ; preds = %16729
  br label %16735, !dbg !403

16735:                                            ; preds = %16734
  %16736 = load i32, ptr %10, align 4, !dbg !404
  %16737 = add nsw i32 %16736, 1, !dbg !404
  store i32 %16737, ptr %10, align 4, !dbg !404
  %16738 = load i32, ptr %10, align 4, !dbg !364
  %16739 = load i32, ptr %8, align 4, !dbg !366
  %16740 = icmp slt i32 %16738, %16739, !dbg !367
  br i1 %16740, label %16741, label %48422, !dbg !368

16741:                                            ; preds = %16735
  %16742 = load i32, ptr %10, align 4, !dbg !369
  %16743 = sext i32 %16742 to i64, !dbg !371
  %16744 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16743, !dbg !371
  %16745 = load double, ptr %6, align 8, !dbg !372
  %16746 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16747 = load double, ptr %16746, align 8, !dbg !372
  %16748 = load double, ptr %16744, align 16, !dbg !372
  %16749 = getelementptr inbounds { double, double }, ptr %16744, i32 0, i32 1, !dbg !372
  %16750 = load double, ptr %16749, align 8, !dbg !372
  %16751 = call { double, double } @make_vec(double %16745, double %16747, double %16748, double %16750), !dbg !372
  %16752 = extractvalue { double, double } %16751, 0, !dbg !372
  store double %16752, ptr %16, align 8, !dbg !372
  %16753 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16754 = extractvalue { double, double } %16751, 1, !dbg !372
  store double %16754, ptr %16753, align 8, !dbg !372
  %16755 = load i32, ptr %10, align 4, !dbg !373
  %16756 = add nsw i32 %16755, 1, !dbg !374
  %16757 = sext i32 %16756 to i64, !dbg !375
  %16758 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16757, !dbg !375
  %16759 = load double, ptr %6, align 8, !dbg !376
  %16760 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16761 = load double, ptr %16760, align 8, !dbg !376
  %16762 = load double, ptr %16758, align 16, !dbg !376
  %16763 = getelementptr inbounds { double, double }, ptr %16758, i32 0, i32 1, !dbg !376
  %16764 = load double, ptr %16763, align 8, !dbg !376
  %16765 = call { double, double } @make_vec(double %16759, double %16761, double %16762, double %16764), !dbg !376
  %16766 = extractvalue { double, double } %16765, 0, !dbg !376
  store double %16766, ptr %17, align 8, !dbg !376
  %16767 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16768 = extractvalue { double, double } %16765, 1, !dbg !376
  store double %16768, ptr %16767, align 8, !dbg !376
  %16769 = load double, ptr %16, align 8, !dbg !377
  %16770 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16771 = load double, ptr %16770, align 8, !dbg !377
  %16772 = load double, ptr %17, align 8, !dbg !377
  %16773 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16774 = load double, ptr %16773, align 8, !dbg !377
  %16775 = call double @cross(double %16769, double %16771, double %16772, double %16774), !dbg !377
  %16776 = load i32, ptr %10, align 4, !dbg !378
  %16777 = sext i32 %16776 to i64, !dbg !379
  %16778 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16777, !dbg !379
  %16779 = load double, ptr %6, align 8, !dbg !380
  %16780 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16781 = load double, ptr %16780, align 8, !dbg !380
  %16782 = load double, ptr %16778, align 16, !dbg !380
  %16783 = getelementptr inbounds { double, double }, ptr %16778, i32 0, i32 1, !dbg !380
  %16784 = load double, ptr %16783, align 8, !dbg !380
  %16785 = call { double, double } @make_vec(double %16779, double %16781, double %16782, double %16784), !dbg !380
  %16786 = extractvalue { double, double } %16785, 0, !dbg !380
  store double %16786, ptr %18, align 8, !dbg !380
  %16787 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16788 = extractvalue { double, double } %16785, 1, !dbg !380
  store double %16788, ptr %16787, align 8, !dbg !380
  %16789 = load i32, ptr %10, align 4, !dbg !381
  %16790 = add nsw i32 %16789, 1, !dbg !382
  %16791 = sext i32 %16790 to i64, !dbg !383
  %16792 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16791, !dbg !383
  %16793 = load double, ptr %6, align 8, !dbg !384
  %16794 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16795 = load double, ptr %16794, align 8, !dbg !384
  %16796 = load double, ptr %16792, align 16, !dbg !384
  %16797 = getelementptr inbounds { double, double }, ptr %16792, i32 0, i32 1, !dbg !384
  %16798 = load double, ptr %16797, align 8, !dbg !384
  %16799 = call { double, double } @make_vec(double %16793, double %16795, double %16796, double %16798), !dbg !384
  %16800 = extractvalue { double, double } %16799, 0, !dbg !384
  store double %16800, ptr %19, align 8, !dbg !384
  %16801 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16802 = extractvalue { double, double } %16799, 1, !dbg !384
  store double %16802, ptr %16801, align 8, !dbg !384
  %16803 = load double, ptr %18, align 8, !dbg !385
  %16804 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16805 = load double, ptr %16804, align 8, !dbg !385
  %16806 = load double, ptr %19, align 8, !dbg !385
  %16807 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16808 = load double, ptr %16807, align 8, !dbg !385
  %16809 = call double @dot(double %16803, double %16805, double %16806, double %16808), !dbg !385
  %16810 = call double @atan2(double noundef %16775, double noundef %16809) #6, !dbg !386
  store double %16810, ptr %13, align 8, !dbg !387
  %16811 = load double, ptr %13, align 8, !dbg !388
  %16812 = load double, ptr %14, align 8, !dbg !389
  %16813 = fadd double %16812, %16811, !dbg !389
  store double %16813, ptr %14, align 8, !dbg !389
  %16814 = load double, ptr %13, align 8, !dbg !390
  %16815 = fsub double %16814, 0x400921FB54442D18, !dbg !392
  %16816 = call double @llvm.fabs.f64(double %16815), !dbg !393
  %16817 = fcmp ole double %16816, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16817, label %14330, label %16818, !dbg !395

16818:                                            ; preds = %16741
  %16819 = load double, ptr %13, align 8, !dbg !396
  %16820 = fadd double %16819, 0x400921FB54442D18, !dbg !397
  %16821 = call double @llvm.fabs.f64(double %16820), !dbg !398
  %16822 = fcmp ole double %16821, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16822, label %14330, label %16823, !dbg !400

16823:                                            ; preds = %16818
  br label %16824, !dbg !403

16824:                                            ; preds = %16823
  %16825 = load i32, ptr %10, align 4, !dbg !404
  %16826 = add nsw i32 %16825, 1, !dbg !404
  store i32 %16826, ptr %10, align 4, !dbg !404
  %16827 = load i32, ptr %10, align 4, !dbg !364
  %16828 = load i32, ptr %8, align 4, !dbg !366
  %16829 = icmp slt i32 %16827, %16828, !dbg !367
  br i1 %16829, label %16830, label %48422, !dbg !368

16830:                                            ; preds = %16824
  %16831 = load i32, ptr %10, align 4, !dbg !369
  %16832 = sext i32 %16831 to i64, !dbg !371
  %16833 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16832, !dbg !371
  %16834 = load double, ptr %6, align 8, !dbg !372
  %16835 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16836 = load double, ptr %16835, align 8, !dbg !372
  %16837 = load double, ptr %16833, align 16, !dbg !372
  %16838 = getelementptr inbounds { double, double }, ptr %16833, i32 0, i32 1, !dbg !372
  %16839 = load double, ptr %16838, align 8, !dbg !372
  %16840 = call { double, double } @make_vec(double %16834, double %16836, double %16837, double %16839), !dbg !372
  %16841 = extractvalue { double, double } %16840, 0, !dbg !372
  store double %16841, ptr %16, align 8, !dbg !372
  %16842 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16843 = extractvalue { double, double } %16840, 1, !dbg !372
  store double %16843, ptr %16842, align 8, !dbg !372
  %16844 = load i32, ptr %10, align 4, !dbg !373
  %16845 = add nsw i32 %16844, 1, !dbg !374
  %16846 = sext i32 %16845 to i64, !dbg !375
  %16847 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16846, !dbg !375
  %16848 = load double, ptr %6, align 8, !dbg !376
  %16849 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16850 = load double, ptr %16849, align 8, !dbg !376
  %16851 = load double, ptr %16847, align 16, !dbg !376
  %16852 = getelementptr inbounds { double, double }, ptr %16847, i32 0, i32 1, !dbg !376
  %16853 = load double, ptr %16852, align 8, !dbg !376
  %16854 = call { double, double } @make_vec(double %16848, double %16850, double %16851, double %16853), !dbg !376
  %16855 = extractvalue { double, double } %16854, 0, !dbg !376
  store double %16855, ptr %17, align 8, !dbg !376
  %16856 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16857 = extractvalue { double, double } %16854, 1, !dbg !376
  store double %16857, ptr %16856, align 8, !dbg !376
  %16858 = load double, ptr %16, align 8, !dbg !377
  %16859 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16860 = load double, ptr %16859, align 8, !dbg !377
  %16861 = load double, ptr %17, align 8, !dbg !377
  %16862 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16863 = load double, ptr %16862, align 8, !dbg !377
  %16864 = call double @cross(double %16858, double %16860, double %16861, double %16863), !dbg !377
  %16865 = load i32, ptr %10, align 4, !dbg !378
  %16866 = sext i32 %16865 to i64, !dbg !379
  %16867 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16866, !dbg !379
  %16868 = load double, ptr %6, align 8, !dbg !380
  %16869 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16870 = load double, ptr %16869, align 8, !dbg !380
  %16871 = load double, ptr %16867, align 16, !dbg !380
  %16872 = getelementptr inbounds { double, double }, ptr %16867, i32 0, i32 1, !dbg !380
  %16873 = load double, ptr %16872, align 8, !dbg !380
  %16874 = call { double, double } @make_vec(double %16868, double %16870, double %16871, double %16873), !dbg !380
  %16875 = extractvalue { double, double } %16874, 0, !dbg !380
  store double %16875, ptr %18, align 8, !dbg !380
  %16876 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16877 = extractvalue { double, double } %16874, 1, !dbg !380
  store double %16877, ptr %16876, align 8, !dbg !380
  %16878 = load i32, ptr %10, align 4, !dbg !381
  %16879 = add nsw i32 %16878, 1, !dbg !382
  %16880 = sext i32 %16879 to i64, !dbg !383
  %16881 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16880, !dbg !383
  %16882 = load double, ptr %6, align 8, !dbg !384
  %16883 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16884 = load double, ptr %16883, align 8, !dbg !384
  %16885 = load double, ptr %16881, align 16, !dbg !384
  %16886 = getelementptr inbounds { double, double }, ptr %16881, i32 0, i32 1, !dbg !384
  %16887 = load double, ptr %16886, align 8, !dbg !384
  %16888 = call { double, double } @make_vec(double %16882, double %16884, double %16885, double %16887), !dbg !384
  %16889 = extractvalue { double, double } %16888, 0, !dbg !384
  store double %16889, ptr %19, align 8, !dbg !384
  %16890 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16891 = extractvalue { double, double } %16888, 1, !dbg !384
  store double %16891, ptr %16890, align 8, !dbg !384
  %16892 = load double, ptr %18, align 8, !dbg !385
  %16893 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16894 = load double, ptr %16893, align 8, !dbg !385
  %16895 = load double, ptr %19, align 8, !dbg !385
  %16896 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16897 = load double, ptr %16896, align 8, !dbg !385
  %16898 = call double @dot(double %16892, double %16894, double %16895, double %16897), !dbg !385
  %16899 = call double @atan2(double noundef %16864, double noundef %16898) #6, !dbg !386
  store double %16899, ptr %13, align 8, !dbg !387
  %16900 = load double, ptr %13, align 8, !dbg !388
  %16901 = load double, ptr %14, align 8, !dbg !389
  %16902 = fadd double %16901, %16900, !dbg !389
  store double %16902, ptr %14, align 8, !dbg !389
  %16903 = load double, ptr %13, align 8, !dbg !390
  %16904 = fsub double %16903, 0x400921FB54442D18, !dbg !392
  %16905 = call double @llvm.fabs.f64(double %16904), !dbg !393
  %16906 = fcmp ole double %16905, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16906, label %14330, label %16907, !dbg !395

16907:                                            ; preds = %16830
  %16908 = load double, ptr %13, align 8, !dbg !396
  %16909 = fadd double %16908, 0x400921FB54442D18, !dbg !397
  %16910 = call double @llvm.fabs.f64(double %16909), !dbg !398
  %16911 = fcmp ole double %16910, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %16911, label %14330, label %16912, !dbg !400

16912:                                            ; preds = %16907
  br label %16913, !dbg !403

16913:                                            ; preds = %16912
  %16914 = load i32, ptr %10, align 4, !dbg !404
  %16915 = add nsw i32 %16914, 1, !dbg !404
  store i32 %16915, ptr %10, align 4, !dbg !404
  %16916 = load i32, ptr %10, align 4, !dbg !364
  %16917 = load i32, ptr %8, align 4, !dbg !366
  %16918 = icmp slt i32 %16916, %16917, !dbg !367
  br i1 %16918, label %16919, label %48422, !dbg !368

16919:                                            ; preds = %16913
  %16920 = load i32, ptr %10, align 4, !dbg !369
  %16921 = sext i32 %16920 to i64, !dbg !371
  %16922 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16921, !dbg !371
  %16923 = load double, ptr %6, align 8, !dbg !372
  %16924 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %16925 = load double, ptr %16924, align 8, !dbg !372
  %16926 = load double, ptr %16922, align 16, !dbg !372
  %16927 = getelementptr inbounds { double, double }, ptr %16922, i32 0, i32 1, !dbg !372
  %16928 = load double, ptr %16927, align 8, !dbg !372
  %16929 = call { double, double } @make_vec(double %16923, double %16925, double %16926, double %16928), !dbg !372
  %16930 = extractvalue { double, double } %16929, 0, !dbg !372
  store double %16930, ptr %16, align 8, !dbg !372
  %16931 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %16932 = extractvalue { double, double } %16929, 1, !dbg !372
  store double %16932, ptr %16931, align 8, !dbg !372
  %16933 = load i32, ptr %10, align 4, !dbg !373
  %16934 = add nsw i32 %16933, 1, !dbg !374
  %16935 = sext i32 %16934 to i64, !dbg !375
  %16936 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16935, !dbg !375
  %16937 = load double, ptr %6, align 8, !dbg !376
  %16938 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %16939 = load double, ptr %16938, align 8, !dbg !376
  %16940 = load double, ptr %16936, align 16, !dbg !376
  %16941 = getelementptr inbounds { double, double }, ptr %16936, i32 0, i32 1, !dbg !376
  %16942 = load double, ptr %16941, align 8, !dbg !376
  %16943 = call { double, double } @make_vec(double %16937, double %16939, double %16940, double %16942), !dbg !376
  %16944 = extractvalue { double, double } %16943, 0, !dbg !376
  store double %16944, ptr %17, align 8, !dbg !376
  %16945 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %16946 = extractvalue { double, double } %16943, 1, !dbg !376
  store double %16946, ptr %16945, align 8, !dbg !376
  %16947 = load double, ptr %16, align 8, !dbg !377
  %16948 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %16949 = load double, ptr %16948, align 8, !dbg !377
  %16950 = load double, ptr %17, align 8, !dbg !377
  %16951 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %16952 = load double, ptr %16951, align 8, !dbg !377
  %16953 = call double @cross(double %16947, double %16949, double %16950, double %16952), !dbg !377
  %16954 = load i32, ptr %10, align 4, !dbg !378
  %16955 = sext i32 %16954 to i64, !dbg !379
  %16956 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16955, !dbg !379
  %16957 = load double, ptr %6, align 8, !dbg !380
  %16958 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %16959 = load double, ptr %16958, align 8, !dbg !380
  %16960 = load double, ptr %16956, align 16, !dbg !380
  %16961 = getelementptr inbounds { double, double }, ptr %16956, i32 0, i32 1, !dbg !380
  %16962 = load double, ptr %16961, align 8, !dbg !380
  %16963 = call { double, double } @make_vec(double %16957, double %16959, double %16960, double %16962), !dbg !380
  %16964 = extractvalue { double, double } %16963, 0, !dbg !380
  store double %16964, ptr %18, align 8, !dbg !380
  %16965 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %16966 = extractvalue { double, double } %16963, 1, !dbg !380
  store double %16966, ptr %16965, align 8, !dbg !380
  %16967 = load i32, ptr %10, align 4, !dbg !381
  %16968 = add nsw i32 %16967, 1, !dbg !382
  %16969 = sext i32 %16968 to i64, !dbg !383
  %16970 = getelementptr inbounds %struct.POINT, ptr %26, i64 %16969, !dbg !383
  %16971 = load double, ptr %6, align 8, !dbg !384
  %16972 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %16973 = load double, ptr %16972, align 8, !dbg !384
  %16974 = load double, ptr %16970, align 16, !dbg !384
  %16975 = getelementptr inbounds { double, double }, ptr %16970, i32 0, i32 1, !dbg !384
  %16976 = load double, ptr %16975, align 8, !dbg !384
  %16977 = call { double, double } @make_vec(double %16971, double %16973, double %16974, double %16976), !dbg !384
  %16978 = extractvalue { double, double } %16977, 0, !dbg !384
  store double %16978, ptr %19, align 8, !dbg !384
  %16979 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %16980 = extractvalue { double, double } %16977, 1, !dbg !384
  store double %16980, ptr %16979, align 8, !dbg !384
  %16981 = load double, ptr %18, align 8, !dbg !385
  %16982 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %16983 = load double, ptr %16982, align 8, !dbg !385
  %16984 = load double, ptr %19, align 8, !dbg !385
  %16985 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %16986 = load double, ptr %16985, align 8, !dbg !385
  %16987 = call double @dot(double %16981, double %16983, double %16984, double %16986), !dbg !385
  %16988 = call double @atan2(double noundef %16953, double noundef %16987) #6, !dbg !386
  store double %16988, ptr %13, align 8, !dbg !387
  %16989 = load double, ptr %13, align 8, !dbg !388
  %16990 = load double, ptr %14, align 8, !dbg !389
  %16991 = fadd double %16990, %16989, !dbg !389
  store double %16991, ptr %14, align 8, !dbg !389
  %16992 = load double, ptr %13, align 8, !dbg !390
  %16993 = fsub double %16992, 0x400921FB54442D18, !dbg !392
  %16994 = call double @llvm.fabs.f64(double %16993), !dbg !393
  %16995 = fcmp ole double %16994, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %16995, label %14330, label %16996, !dbg !395

16996:                                            ; preds = %16919
  %16997 = load double, ptr %13, align 8, !dbg !396
  %16998 = fadd double %16997, 0x400921FB54442D18, !dbg !397
  %16999 = call double @llvm.fabs.f64(double %16998), !dbg !398
  %17000 = fcmp ole double %16999, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17000, label %14330, label %17001, !dbg !400

17001:                                            ; preds = %16996
  br label %17002, !dbg !403

17002:                                            ; preds = %17001
  %17003 = load i32, ptr %10, align 4, !dbg !404
  %17004 = add nsw i32 %17003, 1, !dbg !404
  store i32 %17004, ptr %10, align 4, !dbg !404
  %17005 = load i32, ptr %10, align 4, !dbg !364
  %17006 = load i32, ptr %8, align 4, !dbg !366
  %17007 = icmp slt i32 %17005, %17006, !dbg !367
  br i1 %17007, label %17008, label %48422, !dbg !368

17008:                                            ; preds = %17002
  %17009 = load i32, ptr %10, align 4, !dbg !369
  %17010 = sext i32 %17009 to i64, !dbg !371
  %17011 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17010, !dbg !371
  %17012 = load double, ptr %6, align 8, !dbg !372
  %17013 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17014 = load double, ptr %17013, align 8, !dbg !372
  %17015 = load double, ptr %17011, align 16, !dbg !372
  %17016 = getelementptr inbounds { double, double }, ptr %17011, i32 0, i32 1, !dbg !372
  %17017 = load double, ptr %17016, align 8, !dbg !372
  %17018 = call { double, double } @make_vec(double %17012, double %17014, double %17015, double %17017), !dbg !372
  %17019 = extractvalue { double, double } %17018, 0, !dbg !372
  store double %17019, ptr %16, align 8, !dbg !372
  %17020 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17021 = extractvalue { double, double } %17018, 1, !dbg !372
  store double %17021, ptr %17020, align 8, !dbg !372
  %17022 = load i32, ptr %10, align 4, !dbg !373
  %17023 = add nsw i32 %17022, 1, !dbg !374
  %17024 = sext i32 %17023 to i64, !dbg !375
  %17025 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17024, !dbg !375
  %17026 = load double, ptr %6, align 8, !dbg !376
  %17027 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17028 = load double, ptr %17027, align 8, !dbg !376
  %17029 = load double, ptr %17025, align 16, !dbg !376
  %17030 = getelementptr inbounds { double, double }, ptr %17025, i32 0, i32 1, !dbg !376
  %17031 = load double, ptr %17030, align 8, !dbg !376
  %17032 = call { double, double } @make_vec(double %17026, double %17028, double %17029, double %17031), !dbg !376
  %17033 = extractvalue { double, double } %17032, 0, !dbg !376
  store double %17033, ptr %17, align 8, !dbg !376
  %17034 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17035 = extractvalue { double, double } %17032, 1, !dbg !376
  store double %17035, ptr %17034, align 8, !dbg !376
  %17036 = load double, ptr %16, align 8, !dbg !377
  %17037 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17038 = load double, ptr %17037, align 8, !dbg !377
  %17039 = load double, ptr %17, align 8, !dbg !377
  %17040 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17041 = load double, ptr %17040, align 8, !dbg !377
  %17042 = call double @cross(double %17036, double %17038, double %17039, double %17041), !dbg !377
  %17043 = load i32, ptr %10, align 4, !dbg !378
  %17044 = sext i32 %17043 to i64, !dbg !379
  %17045 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17044, !dbg !379
  %17046 = load double, ptr %6, align 8, !dbg !380
  %17047 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17048 = load double, ptr %17047, align 8, !dbg !380
  %17049 = load double, ptr %17045, align 16, !dbg !380
  %17050 = getelementptr inbounds { double, double }, ptr %17045, i32 0, i32 1, !dbg !380
  %17051 = load double, ptr %17050, align 8, !dbg !380
  %17052 = call { double, double } @make_vec(double %17046, double %17048, double %17049, double %17051), !dbg !380
  %17053 = extractvalue { double, double } %17052, 0, !dbg !380
  store double %17053, ptr %18, align 8, !dbg !380
  %17054 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17055 = extractvalue { double, double } %17052, 1, !dbg !380
  store double %17055, ptr %17054, align 8, !dbg !380
  %17056 = load i32, ptr %10, align 4, !dbg !381
  %17057 = add nsw i32 %17056, 1, !dbg !382
  %17058 = sext i32 %17057 to i64, !dbg !383
  %17059 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17058, !dbg !383
  %17060 = load double, ptr %6, align 8, !dbg !384
  %17061 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17062 = load double, ptr %17061, align 8, !dbg !384
  %17063 = load double, ptr %17059, align 16, !dbg !384
  %17064 = getelementptr inbounds { double, double }, ptr %17059, i32 0, i32 1, !dbg !384
  %17065 = load double, ptr %17064, align 8, !dbg !384
  %17066 = call { double, double } @make_vec(double %17060, double %17062, double %17063, double %17065), !dbg !384
  %17067 = extractvalue { double, double } %17066, 0, !dbg !384
  store double %17067, ptr %19, align 8, !dbg !384
  %17068 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17069 = extractvalue { double, double } %17066, 1, !dbg !384
  store double %17069, ptr %17068, align 8, !dbg !384
  %17070 = load double, ptr %18, align 8, !dbg !385
  %17071 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17072 = load double, ptr %17071, align 8, !dbg !385
  %17073 = load double, ptr %19, align 8, !dbg !385
  %17074 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17075 = load double, ptr %17074, align 8, !dbg !385
  %17076 = call double @dot(double %17070, double %17072, double %17073, double %17075), !dbg !385
  %17077 = call double @atan2(double noundef %17042, double noundef %17076) #6, !dbg !386
  store double %17077, ptr %13, align 8, !dbg !387
  %17078 = load double, ptr %13, align 8, !dbg !388
  %17079 = load double, ptr %14, align 8, !dbg !389
  %17080 = fadd double %17079, %17078, !dbg !389
  store double %17080, ptr %14, align 8, !dbg !389
  %17081 = load double, ptr %13, align 8, !dbg !390
  %17082 = fsub double %17081, 0x400921FB54442D18, !dbg !392
  %17083 = call double @llvm.fabs.f64(double %17082), !dbg !393
  %17084 = fcmp ole double %17083, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17084, label %14330, label %17085, !dbg !395

17085:                                            ; preds = %17008
  %17086 = load double, ptr %13, align 8, !dbg !396
  %17087 = fadd double %17086, 0x400921FB54442D18, !dbg !397
  %17088 = call double @llvm.fabs.f64(double %17087), !dbg !398
  %17089 = fcmp ole double %17088, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17089, label %14330, label %17090, !dbg !400

17090:                                            ; preds = %17085
  br label %17091, !dbg !403

17091:                                            ; preds = %17090
  %17092 = load i32, ptr %10, align 4, !dbg !404
  %17093 = add nsw i32 %17092, 1, !dbg !404
  store i32 %17093, ptr %10, align 4, !dbg !404
  %17094 = load i32, ptr %10, align 4, !dbg !364
  %17095 = load i32, ptr %8, align 4, !dbg !366
  %17096 = icmp slt i32 %17094, %17095, !dbg !367
  br i1 %17096, label %17097, label %48422, !dbg !368

17097:                                            ; preds = %17091
  %17098 = load i32, ptr %10, align 4, !dbg !369
  %17099 = sext i32 %17098 to i64, !dbg !371
  %17100 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17099, !dbg !371
  %17101 = load double, ptr %6, align 8, !dbg !372
  %17102 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17103 = load double, ptr %17102, align 8, !dbg !372
  %17104 = load double, ptr %17100, align 16, !dbg !372
  %17105 = getelementptr inbounds { double, double }, ptr %17100, i32 0, i32 1, !dbg !372
  %17106 = load double, ptr %17105, align 8, !dbg !372
  %17107 = call { double, double } @make_vec(double %17101, double %17103, double %17104, double %17106), !dbg !372
  %17108 = extractvalue { double, double } %17107, 0, !dbg !372
  store double %17108, ptr %16, align 8, !dbg !372
  %17109 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17110 = extractvalue { double, double } %17107, 1, !dbg !372
  store double %17110, ptr %17109, align 8, !dbg !372
  %17111 = load i32, ptr %10, align 4, !dbg !373
  %17112 = add nsw i32 %17111, 1, !dbg !374
  %17113 = sext i32 %17112 to i64, !dbg !375
  %17114 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17113, !dbg !375
  %17115 = load double, ptr %6, align 8, !dbg !376
  %17116 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17117 = load double, ptr %17116, align 8, !dbg !376
  %17118 = load double, ptr %17114, align 16, !dbg !376
  %17119 = getelementptr inbounds { double, double }, ptr %17114, i32 0, i32 1, !dbg !376
  %17120 = load double, ptr %17119, align 8, !dbg !376
  %17121 = call { double, double } @make_vec(double %17115, double %17117, double %17118, double %17120), !dbg !376
  %17122 = extractvalue { double, double } %17121, 0, !dbg !376
  store double %17122, ptr %17, align 8, !dbg !376
  %17123 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17124 = extractvalue { double, double } %17121, 1, !dbg !376
  store double %17124, ptr %17123, align 8, !dbg !376
  %17125 = load double, ptr %16, align 8, !dbg !377
  %17126 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17127 = load double, ptr %17126, align 8, !dbg !377
  %17128 = load double, ptr %17, align 8, !dbg !377
  %17129 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17130 = load double, ptr %17129, align 8, !dbg !377
  %17131 = call double @cross(double %17125, double %17127, double %17128, double %17130), !dbg !377
  %17132 = load i32, ptr %10, align 4, !dbg !378
  %17133 = sext i32 %17132 to i64, !dbg !379
  %17134 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17133, !dbg !379
  %17135 = load double, ptr %6, align 8, !dbg !380
  %17136 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17137 = load double, ptr %17136, align 8, !dbg !380
  %17138 = load double, ptr %17134, align 16, !dbg !380
  %17139 = getelementptr inbounds { double, double }, ptr %17134, i32 0, i32 1, !dbg !380
  %17140 = load double, ptr %17139, align 8, !dbg !380
  %17141 = call { double, double } @make_vec(double %17135, double %17137, double %17138, double %17140), !dbg !380
  %17142 = extractvalue { double, double } %17141, 0, !dbg !380
  store double %17142, ptr %18, align 8, !dbg !380
  %17143 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17144 = extractvalue { double, double } %17141, 1, !dbg !380
  store double %17144, ptr %17143, align 8, !dbg !380
  %17145 = load i32, ptr %10, align 4, !dbg !381
  %17146 = add nsw i32 %17145, 1, !dbg !382
  %17147 = sext i32 %17146 to i64, !dbg !383
  %17148 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17147, !dbg !383
  %17149 = load double, ptr %6, align 8, !dbg !384
  %17150 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17151 = load double, ptr %17150, align 8, !dbg !384
  %17152 = load double, ptr %17148, align 16, !dbg !384
  %17153 = getelementptr inbounds { double, double }, ptr %17148, i32 0, i32 1, !dbg !384
  %17154 = load double, ptr %17153, align 8, !dbg !384
  %17155 = call { double, double } @make_vec(double %17149, double %17151, double %17152, double %17154), !dbg !384
  %17156 = extractvalue { double, double } %17155, 0, !dbg !384
  store double %17156, ptr %19, align 8, !dbg !384
  %17157 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17158 = extractvalue { double, double } %17155, 1, !dbg !384
  store double %17158, ptr %17157, align 8, !dbg !384
  %17159 = load double, ptr %18, align 8, !dbg !385
  %17160 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17161 = load double, ptr %17160, align 8, !dbg !385
  %17162 = load double, ptr %19, align 8, !dbg !385
  %17163 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17164 = load double, ptr %17163, align 8, !dbg !385
  %17165 = call double @dot(double %17159, double %17161, double %17162, double %17164), !dbg !385
  %17166 = call double @atan2(double noundef %17131, double noundef %17165) #6, !dbg !386
  store double %17166, ptr %13, align 8, !dbg !387
  %17167 = load double, ptr %13, align 8, !dbg !388
  %17168 = load double, ptr %14, align 8, !dbg !389
  %17169 = fadd double %17168, %17167, !dbg !389
  store double %17169, ptr %14, align 8, !dbg !389
  %17170 = load double, ptr %13, align 8, !dbg !390
  %17171 = fsub double %17170, 0x400921FB54442D18, !dbg !392
  %17172 = call double @llvm.fabs.f64(double %17171), !dbg !393
  %17173 = fcmp ole double %17172, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17173, label %14330, label %17174, !dbg !395

17174:                                            ; preds = %17097
  %17175 = load double, ptr %13, align 8, !dbg !396
  %17176 = fadd double %17175, 0x400921FB54442D18, !dbg !397
  %17177 = call double @llvm.fabs.f64(double %17176), !dbg !398
  %17178 = fcmp ole double %17177, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17178, label %14330, label %17179, !dbg !400

17179:                                            ; preds = %17174
  br label %17180, !dbg !403

17180:                                            ; preds = %17179
  %17181 = load i32, ptr %10, align 4, !dbg !404
  %17182 = add nsw i32 %17181, 1, !dbg !404
  store i32 %17182, ptr %10, align 4, !dbg !404
  %17183 = load i32, ptr %10, align 4, !dbg !364
  %17184 = load i32, ptr %8, align 4, !dbg !366
  %17185 = icmp slt i32 %17183, %17184, !dbg !367
  br i1 %17185, label %17186, label %48422, !dbg !368

17186:                                            ; preds = %17180
  %17187 = load i32, ptr %10, align 4, !dbg !369
  %17188 = sext i32 %17187 to i64, !dbg !371
  %17189 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17188, !dbg !371
  %17190 = load double, ptr %6, align 8, !dbg !372
  %17191 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17192 = load double, ptr %17191, align 8, !dbg !372
  %17193 = load double, ptr %17189, align 16, !dbg !372
  %17194 = getelementptr inbounds { double, double }, ptr %17189, i32 0, i32 1, !dbg !372
  %17195 = load double, ptr %17194, align 8, !dbg !372
  %17196 = call { double, double } @make_vec(double %17190, double %17192, double %17193, double %17195), !dbg !372
  %17197 = extractvalue { double, double } %17196, 0, !dbg !372
  store double %17197, ptr %16, align 8, !dbg !372
  %17198 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17199 = extractvalue { double, double } %17196, 1, !dbg !372
  store double %17199, ptr %17198, align 8, !dbg !372
  %17200 = load i32, ptr %10, align 4, !dbg !373
  %17201 = add nsw i32 %17200, 1, !dbg !374
  %17202 = sext i32 %17201 to i64, !dbg !375
  %17203 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17202, !dbg !375
  %17204 = load double, ptr %6, align 8, !dbg !376
  %17205 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17206 = load double, ptr %17205, align 8, !dbg !376
  %17207 = load double, ptr %17203, align 16, !dbg !376
  %17208 = getelementptr inbounds { double, double }, ptr %17203, i32 0, i32 1, !dbg !376
  %17209 = load double, ptr %17208, align 8, !dbg !376
  %17210 = call { double, double } @make_vec(double %17204, double %17206, double %17207, double %17209), !dbg !376
  %17211 = extractvalue { double, double } %17210, 0, !dbg !376
  store double %17211, ptr %17, align 8, !dbg !376
  %17212 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17213 = extractvalue { double, double } %17210, 1, !dbg !376
  store double %17213, ptr %17212, align 8, !dbg !376
  %17214 = load double, ptr %16, align 8, !dbg !377
  %17215 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17216 = load double, ptr %17215, align 8, !dbg !377
  %17217 = load double, ptr %17, align 8, !dbg !377
  %17218 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17219 = load double, ptr %17218, align 8, !dbg !377
  %17220 = call double @cross(double %17214, double %17216, double %17217, double %17219), !dbg !377
  %17221 = load i32, ptr %10, align 4, !dbg !378
  %17222 = sext i32 %17221 to i64, !dbg !379
  %17223 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17222, !dbg !379
  %17224 = load double, ptr %6, align 8, !dbg !380
  %17225 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17226 = load double, ptr %17225, align 8, !dbg !380
  %17227 = load double, ptr %17223, align 16, !dbg !380
  %17228 = getelementptr inbounds { double, double }, ptr %17223, i32 0, i32 1, !dbg !380
  %17229 = load double, ptr %17228, align 8, !dbg !380
  %17230 = call { double, double } @make_vec(double %17224, double %17226, double %17227, double %17229), !dbg !380
  %17231 = extractvalue { double, double } %17230, 0, !dbg !380
  store double %17231, ptr %18, align 8, !dbg !380
  %17232 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17233 = extractvalue { double, double } %17230, 1, !dbg !380
  store double %17233, ptr %17232, align 8, !dbg !380
  %17234 = load i32, ptr %10, align 4, !dbg !381
  %17235 = add nsw i32 %17234, 1, !dbg !382
  %17236 = sext i32 %17235 to i64, !dbg !383
  %17237 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17236, !dbg !383
  %17238 = load double, ptr %6, align 8, !dbg !384
  %17239 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17240 = load double, ptr %17239, align 8, !dbg !384
  %17241 = load double, ptr %17237, align 16, !dbg !384
  %17242 = getelementptr inbounds { double, double }, ptr %17237, i32 0, i32 1, !dbg !384
  %17243 = load double, ptr %17242, align 8, !dbg !384
  %17244 = call { double, double } @make_vec(double %17238, double %17240, double %17241, double %17243), !dbg !384
  %17245 = extractvalue { double, double } %17244, 0, !dbg !384
  store double %17245, ptr %19, align 8, !dbg !384
  %17246 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17247 = extractvalue { double, double } %17244, 1, !dbg !384
  store double %17247, ptr %17246, align 8, !dbg !384
  %17248 = load double, ptr %18, align 8, !dbg !385
  %17249 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17250 = load double, ptr %17249, align 8, !dbg !385
  %17251 = load double, ptr %19, align 8, !dbg !385
  %17252 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17253 = load double, ptr %17252, align 8, !dbg !385
  %17254 = call double @dot(double %17248, double %17250, double %17251, double %17253), !dbg !385
  %17255 = call double @atan2(double noundef %17220, double noundef %17254) #6, !dbg !386
  store double %17255, ptr %13, align 8, !dbg !387
  %17256 = load double, ptr %13, align 8, !dbg !388
  %17257 = load double, ptr %14, align 8, !dbg !389
  %17258 = fadd double %17257, %17256, !dbg !389
  store double %17258, ptr %14, align 8, !dbg !389
  %17259 = load double, ptr %13, align 8, !dbg !390
  %17260 = fsub double %17259, 0x400921FB54442D18, !dbg !392
  %17261 = call double @llvm.fabs.f64(double %17260), !dbg !393
  %17262 = fcmp ole double %17261, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17262, label %14330, label %17263, !dbg !395

17263:                                            ; preds = %17186
  %17264 = load double, ptr %13, align 8, !dbg !396
  %17265 = fadd double %17264, 0x400921FB54442D18, !dbg !397
  %17266 = call double @llvm.fabs.f64(double %17265), !dbg !398
  %17267 = fcmp ole double %17266, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17267, label %14330, label %17268, !dbg !400

17268:                                            ; preds = %17263
  br label %17269, !dbg !403

17269:                                            ; preds = %17268
  %17270 = load i32, ptr %10, align 4, !dbg !404
  %17271 = add nsw i32 %17270, 1, !dbg !404
  store i32 %17271, ptr %10, align 4, !dbg !404
  %17272 = load i32, ptr %10, align 4, !dbg !364
  %17273 = load i32, ptr %8, align 4, !dbg !366
  %17274 = icmp slt i32 %17272, %17273, !dbg !367
  br i1 %17274, label %17275, label %48422, !dbg !368

17275:                                            ; preds = %17269
  %17276 = load i32, ptr %10, align 4, !dbg !369
  %17277 = sext i32 %17276 to i64, !dbg !371
  %17278 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17277, !dbg !371
  %17279 = load double, ptr %6, align 8, !dbg !372
  %17280 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17281 = load double, ptr %17280, align 8, !dbg !372
  %17282 = load double, ptr %17278, align 16, !dbg !372
  %17283 = getelementptr inbounds { double, double }, ptr %17278, i32 0, i32 1, !dbg !372
  %17284 = load double, ptr %17283, align 8, !dbg !372
  %17285 = call { double, double } @make_vec(double %17279, double %17281, double %17282, double %17284), !dbg !372
  %17286 = extractvalue { double, double } %17285, 0, !dbg !372
  store double %17286, ptr %16, align 8, !dbg !372
  %17287 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17288 = extractvalue { double, double } %17285, 1, !dbg !372
  store double %17288, ptr %17287, align 8, !dbg !372
  %17289 = load i32, ptr %10, align 4, !dbg !373
  %17290 = add nsw i32 %17289, 1, !dbg !374
  %17291 = sext i32 %17290 to i64, !dbg !375
  %17292 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17291, !dbg !375
  %17293 = load double, ptr %6, align 8, !dbg !376
  %17294 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17295 = load double, ptr %17294, align 8, !dbg !376
  %17296 = load double, ptr %17292, align 16, !dbg !376
  %17297 = getelementptr inbounds { double, double }, ptr %17292, i32 0, i32 1, !dbg !376
  %17298 = load double, ptr %17297, align 8, !dbg !376
  %17299 = call { double, double } @make_vec(double %17293, double %17295, double %17296, double %17298), !dbg !376
  %17300 = extractvalue { double, double } %17299, 0, !dbg !376
  store double %17300, ptr %17, align 8, !dbg !376
  %17301 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17302 = extractvalue { double, double } %17299, 1, !dbg !376
  store double %17302, ptr %17301, align 8, !dbg !376
  %17303 = load double, ptr %16, align 8, !dbg !377
  %17304 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17305 = load double, ptr %17304, align 8, !dbg !377
  %17306 = load double, ptr %17, align 8, !dbg !377
  %17307 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17308 = load double, ptr %17307, align 8, !dbg !377
  %17309 = call double @cross(double %17303, double %17305, double %17306, double %17308), !dbg !377
  %17310 = load i32, ptr %10, align 4, !dbg !378
  %17311 = sext i32 %17310 to i64, !dbg !379
  %17312 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17311, !dbg !379
  %17313 = load double, ptr %6, align 8, !dbg !380
  %17314 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17315 = load double, ptr %17314, align 8, !dbg !380
  %17316 = load double, ptr %17312, align 16, !dbg !380
  %17317 = getelementptr inbounds { double, double }, ptr %17312, i32 0, i32 1, !dbg !380
  %17318 = load double, ptr %17317, align 8, !dbg !380
  %17319 = call { double, double } @make_vec(double %17313, double %17315, double %17316, double %17318), !dbg !380
  %17320 = extractvalue { double, double } %17319, 0, !dbg !380
  store double %17320, ptr %18, align 8, !dbg !380
  %17321 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17322 = extractvalue { double, double } %17319, 1, !dbg !380
  store double %17322, ptr %17321, align 8, !dbg !380
  %17323 = load i32, ptr %10, align 4, !dbg !381
  %17324 = add nsw i32 %17323, 1, !dbg !382
  %17325 = sext i32 %17324 to i64, !dbg !383
  %17326 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17325, !dbg !383
  %17327 = load double, ptr %6, align 8, !dbg !384
  %17328 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17329 = load double, ptr %17328, align 8, !dbg !384
  %17330 = load double, ptr %17326, align 16, !dbg !384
  %17331 = getelementptr inbounds { double, double }, ptr %17326, i32 0, i32 1, !dbg !384
  %17332 = load double, ptr %17331, align 8, !dbg !384
  %17333 = call { double, double } @make_vec(double %17327, double %17329, double %17330, double %17332), !dbg !384
  %17334 = extractvalue { double, double } %17333, 0, !dbg !384
  store double %17334, ptr %19, align 8, !dbg !384
  %17335 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17336 = extractvalue { double, double } %17333, 1, !dbg !384
  store double %17336, ptr %17335, align 8, !dbg !384
  %17337 = load double, ptr %18, align 8, !dbg !385
  %17338 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17339 = load double, ptr %17338, align 8, !dbg !385
  %17340 = load double, ptr %19, align 8, !dbg !385
  %17341 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17342 = load double, ptr %17341, align 8, !dbg !385
  %17343 = call double @dot(double %17337, double %17339, double %17340, double %17342), !dbg !385
  %17344 = call double @atan2(double noundef %17309, double noundef %17343) #6, !dbg !386
  store double %17344, ptr %13, align 8, !dbg !387
  %17345 = load double, ptr %13, align 8, !dbg !388
  %17346 = load double, ptr %14, align 8, !dbg !389
  %17347 = fadd double %17346, %17345, !dbg !389
  store double %17347, ptr %14, align 8, !dbg !389
  %17348 = load double, ptr %13, align 8, !dbg !390
  %17349 = fsub double %17348, 0x400921FB54442D18, !dbg !392
  %17350 = call double @llvm.fabs.f64(double %17349), !dbg !393
  %17351 = fcmp ole double %17350, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17351, label %14330, label %17352, !dbg !395

17352:                                            ; preds = %17275
  %17353 = load double, ptr %13, align 8, !dbg !396
  %17354 = fadd double %17353, 0x400921FB54442D18, !dbg !397
  %17355 = call double @llvm.fabs.f64(double %17354), !dbg !398
  %17356 = fcmp ole double %17355, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17356, label %14330, label %17357, !dbg !400

17357:                                            ; preds = %17352
  br label %17358, !dbg !403

17358:                                            ; preds = %17357
  %17359 = load i32, ptr %10, align 4, !dbg !404
  %17360 = add nsw i32 %17359, 1, !dbg !404
  store i32 %17360, ptr %10, align 4, !dbg !404
  %17361 = load i32, ptr %10, align 4, !dbg !364
  %17362 = load i32, ptr %8, align 4, !dbg !366
  %17363 = icmp slt i32 %17361, %17362, !dbg !367
  br i1 %17363, label %17364, label %48422, !dbg !368

17364:                                            ; preds = %17358
  %17365 = load i32, ptr %10, align 4, !dbg !369
  %17366 = sext i32 %17365 to i64, !dbg !371
  %17367 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17366, !dbg !371
  %17368 = load double, ptr %6, align 8, !dbg !372
  %17369 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17370 = load double, ptr %17369, align 8, !dbg !372
  %17371 = load double, ptr %17367, align 16, !dbg !372
  %17372 = getelementptr inbounds { double, double }, ptr %17367, i32 0, i32 1, !dbg !372
  %17373 = load double, ptr %17372, align 8, !dbg !372
  %17374 = call { double, double } @make_vec(double %17368, double %17370, double %17371, double %17373), !dbg !372
  %17375 = extractvalue { double, double } %17374, 0, !dbg !372
  store double %17375, ptr %16, align 8, !dbg !372
  %17376 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17377 = extractvalue { double, double } %17374, 1, !dbg !372
  store double %17377, ptr %17376, align 8, !dbg !372
  %17378 = load i32, ptr %10, align 4, !dbg !373
  %17379 = add nsw i32 %17378, 1, !dbg !374
  %17380 = sext i32 %17379 to i64, !dbg !375
  %17381 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17380, !dbg !375
  %17382 = load double, ptr %6, align 8, !dbg !376
  %17383 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17384 = load double, ptr %17383, align 8, !dbg !376
  %17385 = load double, ptr %17381, align 16, !dbg !376
  %17386 = getelementptr inbounds { double, double }, ptr %17381, i32 0, i32 1, !dbg !376
  %17387 = load double, ptr %17386, align 8, !dbg !376
  %17388 = call { double, double } @make_vec(double %17382, double %17384, double %17385, double %17387), !dbg !376
  %17389 = extractvalue { double, double } %17388, 0, !dbg !376
  store double %17389, ptr %17, align 8, !dbg !376
  %17390 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17391 = extractvalue { double, double } %17388, 1, !dbg !376
  store double %17391, ptr %17390, align 8, !dbg !376
  %17392 = load double, ptr %16, align 8, !dbg !377
  %17393 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17394 = load double, ptr %17393, align 8, !dbg !377
  %17395 = load double, ptr %17, align 8, !dbg !377
  %17396 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17397 = load double, ptr %17396, align 8, !dbg !377
  %17398 = call double @cross(double %17392, double %17394, double %17395, double %17397), !dbg !377
  %17399 = load i32, ptr %10, align 4, !dbg !378
  %17400 = sext i32 %17399 to i64, !dbg !379
  %17401 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17400, !dbg !379
  %17402 = load double, ptr %6, align 8, !dbg !380
  %17403 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17404 = load double, ptr %17403, align 8, !dbg !380
  %17405 = load double, ptr %17401, align 16, !dbg !380
  %17406 = getelementptr inbounds { double, double }, ptr %17401, i32 0, i32 1, !dbg !380
  %17407 = load double, ptr %17406, align 8, !dbg !380
  %17408 = call { double, double } @make_vec(double %17402, double %17404, double %17405, double %17407), !dbg !380
  %17409 = extractvalue { double, double } %17408, 0, !dbg !380
  store double %17409, ptr %18, align 8, !dbg !380
  %17410 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17411 = extractvalue { double, double } %17408, 1, !dbg !380
  store double %17411, ptr %17410, align 8, !dbg !380
  %17412 = load i32, ptr %10, align 4, !dbg !381
  %17413 = add nsw i32 %17412, 1, !dbg !382
  %17414 = sext i32 %17413 to i64, !dbg !383
  %17415 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17414, !dbg !383
  %17416 = load double, ptr %6, align 8, !dbg !384
  %17417 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17418 = load double, ptr %17417, align 8, !dbg !384
  %17419 = load double, ptr %17415, align 16, !dbg !384
  %17420 = getelementptr inbounds { double, double }, ptr %17415, i32 0, i32 1, !dbg !384
  %17421 = load double, ptr %17420, align 8, !dbg !384
  %17422 = call { double, double } @make_vec(double %17416, double %17418, double %17419, double %17421), !dbg !384
  %17423 = extractvalue { double, double } %17422, 0, !dbg !384
  store double %17423, ptr %19, align 8, !dbg !384
  %17424 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17425 = extractvalue { double, double } %17422, 1, !dbg !384
  store double %17425, ptr %17424, align 8, !dbg !384
  %17426 = load double, ptr %18, align 8, !dbg !385
  %17427 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17428 = load double, ptr %17427, align 8, !dbg !385
  %17429 = load double, ptr %19, align 8, !dbg !385
  %17430 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17431 = load double, ptr %17430, align 8, !dbg !385
  %17432 = call double @dot(double %17426, double %17428, double %17429, double %17431), !dbg !385
  %17433 = call double @atan2(double noundef %17398, double noundef %17432) #6, !dbg !386
  store double %17433, ptr %13, align 8, !dbg !387
  %17434 = load double, ptr %13, align 8, !dbg !388
  %17435 = load double, ptr %14, align 8, !dbg !389
  %17436 = fadd double %17435, %17434, !dbg !389
  store double %17436, ptr %14, align 8, !dbg !389
  %17437 = load double, ptr %13, align 8, !dbg !390
  %17438 = fsub double %17437, 0x400921FB54442D18, !dbg !392
  %17439 = call double @llvm.fabs.f64(double %17438), !dbg !393
  %17440 = fcmp ole double %17439, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17440, label %14330, label %17441, !dbg !395

17441:                                            ; preds = %17364
  %17442 = load double, ptr %13, align 8, !dbg !396
  %17443 = fadd double %17442, 0x400921FB54442D18, !dbg !397
  %17444 = call double @llvm.fabs.f64(double %17443), !dbg !398
  %17445 = fcmp ole double %17444, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17445, label %14330, label %17446, !dbg !400

17446:                                            ; preds = %17441
  br label %17447, !dbg !403

17447:                                            ; preds = %17446
  %17448 = load i32, ptr %10, align 4, !dbg !404
  %17449 = add nsw i32 %17448, 1, !dbg !404
  store i32 %17449, ptr %10, align 4, !dbg !404
  %17450 = load i32, ptr %10, align 4, !dbg !364
  %17451 = load i32, ptr %8, align 4, !dbg !366
  %17452 = icmp slt i32 %17450, %17451, !dbg !367
  br i1 %17452, label %17453, label %48422, !dbg !368

17453:                                            ; preds = %17447
  %17454 = load i32, ptr %10, align 4, !dbg !369
  %17455 = sext i32 %17454 to i64, !dbg !371
  %17456 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17455, !dbg !371
  %17457 = load double, ptr %6, align 8, !dbg !372
  %17458 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17459 = load double, ptr %17458, align 8, !dbg !372
  %17460 = load double, ptr %17456, align 16, !dbg !372
  %17461 = getelementptr inbounds { double, double }, ptr %17456, i32 0, i32 1, !dbg !372
  %17462 = load double, ptr %17461, align 8, !dbg !372
  %17463 = call { double, double } @make_vec(double %17457, double %17459, double %17460, double %17462), !dbg !372
  %17464 = extractvalue { double, double } %17463, 0, !dbg !372
  store double %17464, ptr %16, align 8, !dbg !372
  %17465 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17466 = extractvalue { double, double } %17463, 1, !dbg !372
  store double %17466, ptr %17465, align 8, !dbg !372
  %17467 = load i32, ptr %10, align 4, !dbg !373
  %17468 = add nsw i32 %17467, 1, !dbg !374
  %17469 = sext i32 %17468 to i64, !dbg !375
  %17470 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17469, !dbg !375
  %17471 = load double, ptr %6, align 8, !dbg !376
  %17472 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17473 = load double, ptr %17472, align 8, !dbg !376
  %17474 = load double, ptr %17470, align 16, !dbg !376
  %17475 = getelementptr inbounds { double, double }, ptr %17470, i32 0, i32 1, !dbg !376
  %17476 = load double, ptr %17475, align 8, !dbg !376
  %17477 = call { double, double } @make_vec(double %17471, double %17473, double %17474, double %17476), !dbg !376
  %17478 = extractvalue { double, double } %17477, 0, !dbg !376
  store double %17478, ptr %17, align 8, !dbg !376
  %17479 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17480 = extractvalue { double, double } %17477, 1, !dbg !376
  store double %17480, ptr %17479, align 8, !dbg !376
  %17481 = load double, ptr %16, align 8, !dbg !377
  %17482 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17483 = load double, ptr %17482, align 8, !dbg !377
  %17484 = load double, ptr %17, align 8, !dbg !377
  %17485 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17486 = load double, ptr %17485, align 8, !dbg !377
  %17487 = call double @cross(double %17481, double %17483, double %17484, double %17486), !dbg !377
  %17488 = load i32, ptr %10, align 4, !dbg !378
  %17489 = sext i32 %17488 to i64, !dbg !379
  %17490 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17489, !dbg !379
  %17491 = load double, ptr %6, align 8, !dbg !380
  %17492 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17493 = load double, ptr %17492, align 8, !dbg !380
  %17494 = load double, ptr %17490, align 16, !dbg !380
  %17495 = getelementptr inbounds { double, double }, ptr %17490, i32 0, i32 1, !dbg !380
  %17496 = load double, ptr %17495, align 8, !dbg !380
  %17497 = call { double, double } @make_vec(double %17491, double %17493, double %17494, double %17496), !dbg !380
  %17498 = extractvalue { double, double } %17497, 0, !dbg !380
  store double %17498, ptr %18, align 8, !dbg !380
  %17499 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17500 = extractvalue { double, double } %17497, 1, !dbg !380
  store double %17500, ptr %17499, align 8, !dbg !380
  %17501 = load i32, ptr %10, align 4, !dbg !381
  %17502 = add nsw i32 %17501, 1, !dbg !382
  %17503 = sext i32 %17502 to i64, !dbg !383
  %17504 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17503, !dbg !383
  %17505 = load double, ptr %6, align 8, !dbg !384
  %17506 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17507 = load double, ptr %17506, align 8, !dbg !384
  %17508 = load double, ptr %17504, align 16, !dbg !384
  %17509 = getelementptr inbounds { double, double }, ptr %17504, i32 0, i32 1, !dbg !384
  %17510 = load double, ptr %17509, align 8, !dbg !384
  %17511 = call { double, double } @make_vec(double %17505, double %17507, double %17508, double %17510), !dbg !384
  %17512 = extractvalue { double, double } %17511, 0, !dbg !384
  store double %17512, ptr %19, align 8, !dbg !384
  %17513 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17514 = extractvalue { double, double } %17511, 1, !dbg !384
  store double %17514, ptr %17513, align 8, !dbg !384
  %17515 = load double, ptr %18, align 8, !dbg !385
  %17516 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17517 = load double, ptr %17516, align 8, !dbg !385
  %17518 = load double, ptr %19, align 8, !dbg !385
  %17519 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17520 = load double, ptr %17519, align 8, !dbg !385
  %17521 = call double @dot(double %17515, double %17517, double %17518, double %17520), !dbg !385
  %17522 = call double @atan2(double noundef %17487, double noundef %17521) #6, !dbg !386
  store double %17522, ptr %13, align 8, !dbg !387
  %17523 = load double, ptr %13, align 8, !dbg !388
  %17524 = load double, ptr %14, align 8, !dbg !389
  %17525 = fadd double %17524, %17523, !dbg !389
  store double %17525, ptr %14, align 8, !dbg !389
  %17526 = load double, ptr %13, align 8, !dbg !390
  %17527 = fsub double %17526, 0x400921FB54442D18, !dbg !392
  %17528 = call double @llvm.fabs.f64(double %17527), !dbg !393
  %17529 = fcmp ole double %17528, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17529, label %14330, label %17530, !dbg !395

17530:                                            ; preds = %17453
  %17531 = load double, ptr %13, align 8, !dbg !396
  %17532 = fadd double %17531, 0x400921FB54442D18, !dbg !397
  %17533 = call double @llvm.fabs.f64(double %17532), !dbg !398
  %17534 = fcmp ole double %17533, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17534, label %14330, label %17535, !dbg !400

17535:                                            ; preds = %17530
  br label %17536, !dbg !403

17536:                                            ; preds = %17535
  %17537 = load i32, ptr %10, align 4, !dbg !404
  %17538 = add nsw i32 %17537, 1, !dbg !404
  store i32 %17538, ptr %10, align 4, !dbg !404
  %17539 = load i32, ptr %10, align 4, !dbg !364
  %17540 = load i32, ptr %8, align 4, !dbg !366
  %17541 = icmp slt i32 %17539, %17540, !dbg !367
  br i1 %17541, label %17542, label %48422, !dbg !368

17542:                                            ; preds = %17536
  %17543 = load i32, ptr %10, align 4, !dbg !369
  %17544 = sext i32 %17543 to i64, !dbg !371
  %17545 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17544, !dbg !371
  %17546 = load double, ptr %6, align 8, !dbg !372
  %17547 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17548 = load double, ptr %17547, align 8, !dbg !372
  %17549 = load double, ptr %17545, align 16, !dbg !372
  %17550 = getelementptr inbounds { double, double }, ptr %17545, i32 0, i32 1, !dbg !372
  %17551 = load double, ptr %17550, align 8, !dbg !372
  %17552 = call { double, double } @make_vec(double %17546, double %17548, double %17549, double %17551), !dbg !372
  %17553 = extractvalue { double, double } %17552, 0, !dbg !372
  store double %17553, ptr %16, align 8, !dbg !372
  %17554 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17555 = extractvalue { double, double } %17552, 1, !dbg !372
  store double %17555, ptr %17554, align 8, !dbg !372
  %17556 = load i32, ptr %10, align 4, !dbg !373
  %17557 = add nsw i32 %17556, 1, !dbg !374
  %17558 = sext i32 %17557 to i64, !dbg !375
  %17559 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17558, !dbg !375
  %17560 = load double, ptr %6, align 8, !dbg !376
  %17561 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17562 = load double, ptr %17561, align 8, !dbg !376
  %17563 = load double, ptr %17559, align 16, !dbg !376
  %17564 = getelementptr inbounds { double, double }, ptr %17559, i32 0, i32 1, !dbg !376
  %17565 = load double, ptr %17564, align 8, !dbg !376
  %17566 = call { double, double } @make_vec(double %17560, double %17562, double %17563, double %17565), !dbg !376
  %17567 = extractvalue { double, double } %17566, 0, !dbg !376
  store double %17567, ptr %17, align 8, !dbg !376
  %17568 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17569 = extractvalue { double, double } %17566, 1, !dbg !376
  store double %17569, ptr %17568, align 8, !dbg !376
  %17570 = load double, ptr %16, align 8, !dbg !377
  %17571 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17572 = load double, ptr %17571, align 8, !dbg !377
  %17573 = load double, ptr %17, align 8, !dbg !377
  %17574 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17575 = load double, ptr %17574, align 8, !dbg !377
  %17576 = call double @cross(double %17570, double %17572, double %17573, double %17575), !dbg !377
  %17577 = load i32, ptr %10, align 4, !dbg !378
  %17578 = sext i32 %17577 to i64, !dbg !379
  %17579 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17578, !dbg !379
  %17580 = load double, ptr %6, align 8, !dbg !380
  %17581 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17582 = load double, ptr %17581, align 8, !dbg !380
  %17583 = load double, ptr %17579, align 16, !dbg !380
  %17584 = getelementptr inbounds { double, double }, ptr %17579, i32 0, i32 1, !dbg !380
  %17585 = load double, ptr %17584, align 8, !dbg !380
  %17586 = call { double, double } @make_vec(double %17580, double %17582, double %17583, double %17585), !dbg !380
  %17587 = extractvalue { double, double } %17586, 0, !dbg !380
  store double %17587, ptr %18, align 8, !dbg !380
  %17588 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17589 = extractvalue { double, double } %17586, 1, !dbg !380
  store double %17589, ptr %17588, align 8, !dbg !380
  %17590 = load i32, ptr %10, align 4, !dbg !381
  %17591 = add nsw i32 %17590, 1, !dbg !382
  %17592 = sext i32 %17591 to i64, !dbg !383
  %17593 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17592, !dbg !383
  %17594 = load double, ptr %6, align 8, !dbg !384
  %17595 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17596 = load double, ptr %17595, align 8, !dbg !384
  %17597 = load double, ptr %17593, align 16, !dbg !384
  %17598 = getelementptr inbounds { double, double }, ptr %17593, i32 0, i32 1, !dbg !384
  %17599 = load double, ptr %17598, align 8, !dbg !384
  %17600 = call { double, double } @make_vec(double %17594, double %17596, double %17597, double %17599), !dbg !384
  %17601 = extractvalue { double, double } %17600, 0, !dbg !384
  store double %17601, ptr %19, align 8, !dbg !384
  %17602 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17603 = extractvalue { double, double } %17600, 1, !dbg !384
  store double %17603, ptr %17602, align 8, !dbg !384
  %17604 = load double, ptr %18, align 8, !dbg !385
  %17605 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17606 = load double, ptr %17605, align 8, !dbg !385
  %17607 = load double, ptr %19, align 8, !dbg !385
  %17608 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17609 = load double, ptr %17608, align 8, !dbg !385
  %17610 = call double @dot(double %17604, double %17606, double %17607, double %17609), !dbg !385
  %17611 = call double @atan2(double noundef %17576, double noundef %17610) #6, !dbg !386
  store double %17611, ptr %13, align 8, !dbg !387
  %17612 = load double, ptr %13, align 8, !dbg !388
  %17613 = load double, ptr %14, align 8, !dbg !389
  %17614 = fadd double %17613, %17612, !dbg !389
  store double %17614, ptr %14, align 8, !dbg !389
  %17615 = load double, ptr %13, align 8, !dbg !390
  %17616 = fsub double %17615, 0x400921FB54442D18, !dbg !392
  %17617 = call double @llvm.fabs.f64(double %17616), !dbg !393
  %17618 = fcmp ole double %17617, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17618, label %14330, label %17619, !dbg !395

17619:                                            ; preds = %17542
  %17620 = load double, ptr %13, align 8, !dbg !396
  %17621 = fadd double %17620, 0x400921FB54442D18, !dbg !397
  %17622 = call double @llvm.fabs.f64(double %17621), !dbg !398
  %17623 = fcmp ole double %17622, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17623, label %14330, label %17624, !dbg !400

17624:                                            ; preds = %17619
  br label %17625, !dbg !403

17625:                                            ; preds = %17624
  %17626 = load i32, ptr %10, align 4, !dbg !404
  %17627 = add nsw i32 %17626, 1, !dbg !404
  store i32 %17627, ptr %10, align 4, !dbg !404
  %17628 = load i32, ptr %10, align 4, !dbg !364
  %17629 = load i32, ptr %8, align 4, !dbg !366
  %17630 = icmp slt i32 %17628, %17629, !dbg !367
  br i1 %17630, label %17631, label %48422, !dbg !368

17631:                                            ; preds = %17625
  %17632 = load i32, ptr %10, align 4, !dbg !369
  %17633 = sext i32 %17632 to i64, !dbg !371
  %17634 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17633, !dbg !371
  %17635 = load double, ptr %6, align 8, !dbg !372
  %17636 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17637 = load double, ptr %17636, align 8, !dbg !372
  %17638 = load double, ptr %17634, align 16, !dbg !372
  %17639 = getelementptr inbounds { double, double }, ptr %17634, i32 0, i32 1, !dbg !372
  %17640 = load double, ptr %17639, align 8, !dbg !372
  %17641 = call { double, double } @make_vec(double %17635, double %17637, double %17638, double %17640), !dbg !372
  %17642 = extractvalue { double, double } %17641, 0, !dbg !372
  store double %17642, ptr %16, align 8, !dbg !372
  %17643 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17644 = extractvalue { double, double } %17641, 1, !dbg !372
  store double %17644, ptr %17643, align 8, !dbg !372
  %17645 = load i32, ptr %10, align 4, !dbg !373
  %17646 = add nsw i32 %17645, 1, !dbg !374
  %17647 = sext i32 %17646 to i64, !dbg !375
  %17648 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17647, !dbg !375
  %17649 = load double, ptr %6, align 8, !dbg !376
  %17650 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17651 = load double, ptr %17650, align 8, !dbg !376
  %17652 = load double, ptr %17648, align 16, !dbg !376
  %17653 = getelementptr inbounds { double, double }, ptr %17648, i32 0, i32 1, !dbg !376
  %17654 = load double, ptr %17653, align 8, !dbg !376
  %17655 = call { double, double } @make_vec(double %17649, double %17651, double %17652, double %17654), !dbg !376
  %17656 = extractvalue { double, double } %17655, 0, !dbg !376
  store double %17656, ptr %17, align 8, !dbg !376
  %17657 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17658 = extractvalue { double, double } %17655, 1, !dbg !376
  store double %17658, ptr %17657, align 8, !dbg !376
  %17659 = load double, ptr %16, align 8, !dbg !377
  %17660 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17661 = load double, ptr %17660, align 8, !dbg !377
  %17662 = load double, ptr %17, align 8, !dbg !377
  %17663 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17664 = load double, ptr %17663, align 8, !dbg !377
  %17665 = call double @cross(double %17659, double %17661, double %17662, double %17664), !dbg !377
  %17666 = load i32, ptr %10, align 4, !dbg !378
  %17667 = sext i32 %17666 to i64, !dbg !379
  %17668 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17667, !dbg !379
  %17669 = load double, ptr %6, align 8, !dbg !380
  %17670 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17671 = load double, ptr %17670, align 8, !dbg !380
  %17672 = load double, ptr %17668, align 16, !dbg !380
  %17673 = getelementptr inbounds { double, double }, ptr %17668, i32 0, i32 1, !dbg !380
  %17674 = load double, ptr %17673, align 8, !dbg !380
  %17675 = call { double, double } @make_vec(double %17669, double %17671, double %17672, double %17674), !dbg !380
  %17676 = extractvalue { double, double } %17675, 0, !dbg !380
  store double %17676, ptr %18, align 8, !dbg !380
  %17677 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17678 = extractvalue { double, double } %17675, 1, !dbg !380
  store double %17678, ptr %17677, align 8, !dbg !380
  %17679 = load i32, ptr %10, align 4, !dbg !381
  %17680 = add nsw i32 %17679, 1, !dbg !382
  %17681 = sext i32 %17680 to i64, !dbg !383
  %17682 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17681, !dbg !383
  %17683 = load double, ptr %6, align 8, !dbg !384
  %17684 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17685 = load double, ptr %17684, align 8, !dbg !384
  %17686 = load double, ptr %17682, align 16, !dbg !384
  %17687 = getelementptr inbounds { double, double }, ptr %17682, i32 0, i32 1, !dbg !384
  %17688 = load double, ptr %17687, align 8, !dbg !384
  %17689 = call { double, double } @make_vec(double %17683, double %17685, double %17686, double %17688), !dbg !384
  %17690 = extractvalue { double, double } %17689, 0, !dbg !384
  store double %17690, ptr %19, align 8, !dbg !384
  %17691 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17692 = extractvalue { double, double } %17689, 1, !dbg !384
  store double %17692, ptr %17691, align 8, !dbg !384
  %17693 = load double, ptr %18, align 8, !dbg !385
  %17694 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17695 = load double, ptr %17694, align 8, !dbg !385
  %17696 = load double, ptr %19, align 8, !dbg !385
  %17697 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17698 = load double, ptr %17697, align 8, !dbg !385
  %17699 = call double @dot(double %17693, double %17695, double %17696, double %17698), !dbg !385
  %17700 = call double @atan2(double noundef %17665, double noundef %17699) #6, !dbg !386
  store double %17700, ptr %13, align 8, !dbg !387
  %17701 = load double, ptr %13, align 8, !dbg !388
  %17702 = load double, ptr %14, align 8, !dbg !389
  %17703 = fadd double %17702, %17701, !dbg !389
  store double %17703, ptr %14, align 8, !dbg !389
  %17704 = load double, ptr %13, align 8, !dbg !390
  %17705 = fsub double %17704, 0x400921FB54442D18, !dbg !392
  %17706 = call double @llvm.fabs.f64(double %17705), !dbg !393
  %17707 = fcmp ole double %17706, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17707, label %14330, label %17708, !dbg !395

17708:                                            ; preds = %17631
  %17709 = load double, ptr %13, align 8, !dbg !396
  %17710 = fadd double %17709, 0x400921FB54442D18, !dbg !397
  %17711 = call double @llvm.fabs.f64(double %17710), !dbg !398
  %17712 = fcmp ole double %17711, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17712, label %14330, label %17713, !dbg !400

17713:                                            ; preds = %17708
  br label %17714, !dbg !403

17714:                                            ; preds = %17713
  %17715 = load i32, ptr %10, align 4, !dbg !404
  %17716 = add nsw i32 %17715, 1, !dbg !404
  store i32 %17716, ptr %10, align 4, !dbg !404
  %17717 = load i32, ptr %10, align 4, !dbg !364
  %17718 = load i32, ptr %8, align 4, !dbg !366
  %17719 = icmp slt i32 %17717, %17718, !dbg !367
  br i1 %17719, label %17720, label %48422, !dbg !368

17720:                                            ; preds = %17714
  %17721 = load i32, ptr %10, align 4, !dbg !369
  %17722 = sext i32 %17721 to i64, !dbg !371
  %17723 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17722, !dbg !371
  %17724 = load double, ptr %6, align 8, !dbg !372
  %17725 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17726 = load double, ptr %17725, align 8, !dbg !372
  %17727 = load double, ptr %17723, align 16, !dbg !372
  %17728 = getelementptr inbounds { double, double }, ptr %17723, i32 0, i32 1, !dbg !372
  %17729 = load double, ptr %17728, align 8, !dbg !372
  %17730 = call { double, double } @make_vec(double %17724, double %17726, double %17727, double %17729), !dbg !372
  %17731 = extractvalue { double, double } %17730, 0, !dbg !372
  store double %17731, ptr %16, align 8, !dbg !372
  %17732 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17733 = extractvalue { double, double } %17730, 1, !dbg !372
  store double %17733, ptr %17732, align 8, !dbg !372
  %17734 = load i32, ptr %10, align 4, !dbg !373
  %17735 = add nsw i32 %17734, 1, !dbg !374
  %17736 = sext i32 %17735 to i64, !dbg !375
  %17737 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17736, !dbg !375
  %17738 = load double, ptr %6, align 8, !dbg !376
  %17739 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17740 = load double, ptr %17739, align 8, !dbg !376
  %17741 = load double, ptr %17737, align 16, !dbg !376
  %17742 = getelementptr inbounds { double, double }, ptr %17737, i32 0, i32 1, !dbg !376
  %17743 = load double, ptr %17742, align 8, !dbg !376
  %17744 = call { double, double } @make_vec(double %17738, double %17740, double %17741, double %17743), !dbg !376
  %17745 = extractvalue { double, double } %17744, 0, !dbg !376
  store double %17745, ptr %17, align 8, !dbg !376
  %17746 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17747 = extractvalue { double, double } %17744, 1, !dbg !376
  store double %17747, ptr %17746, align 8, !dbg !376
  %17748 = load double, ptr %16, align 8, !dbg !377
  %17749 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17750 = load double, ptr %17749, align 8, !dbg !377
  %17751 = load double, ptr %17, align 8, !dbg !377
  %17752 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17753 = load double, ptr %17752, align 8, !dbg !377
  %17754 = call double @cross(double %17748, double %17750, double %17751, double %17753), !dbg !377
  %17755 = load i32, ptr %10, align 4, !dbg !378
  %17756 = sext i32 %17755 to i64, !dbg !379
  %17757 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17756, !dbg !379
  %17758 = load double, ptr %6, align 8, !dbg !380
  %17759 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17760 = load double, ptr %17759, align 8, !dbg !380
  %17761 = load double, ptr %17757, align 16, !dbg !380
  %17762 = getelementptr inbounds { double, double }, ptr %17757, i32 0, i32 1, !dbg !380
  %17763 = load double, ptr %17762, align 8, !dbg !380
  %17764 = call { double, double } @make_vec(double %17758, double %17760, double %17761, double %17763), !dbg !380
  %17765 = extractvalue { double, double } %17764, 0, !dbg !380
  store double %17765, ptr %18, align 8, !dbg !380
  %17766 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17767 = extractvalue { double, double } %17764, 1, !dbg !380
  store double %17767, ptr %17766, align 8, !dbg !380
  %17768 = load i32, ptr %10, align 4, !dbg !381
  %17769 = add nsw i32 %17768, 1, !dbg !382
  %17770 = sext i32 %17769 to i64, !dbg !383
  %17771 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17770, !dbg !383
  %17772 = load double, ptr %6, align 8, !dbg !384
  %17773 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17774 = load double, ptr %17773, align 8, !dbg !384
  %17775 = load double, ptr %17771, align 16, !dbg !384
  %17776 = getelementptr inbounds { double, double }, ptr %17771, i32 0, i32 1, !dbg !384
  %17777 = load double, ptr %17776, align 8, !dbg !384
  %17778 = call { double, double } @make_vec(double %17772, double %17774, double %17775, double %17777), !dbg !384
  %17779 = extractvalue { double, double } %17778, 0, !dbg !384
  store double %17779, ptr %19, align 8, !dbg !384
  %17780 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17781 = extractvalue { double, double } %17778, 1, !dbg !384
  store double %17781, ptr %17780, align 8, !dbg !384
  %17782 = load double, ptr %18, align 8, !dbg !385
  %17783 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17784 = load double, ptr %17783, align 8, !dbg !385
  %17785 = load double, ptr %19, align 8, !dbg !385
  %17786 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17787 = load double, ptr %17786, align 8, !dbg !385
  %17788 = call double @dot(double %17782, double %17784, double %17785, double %17787), !dbg !385
  %17789 = call double @atan2(double noundef %17754, double noundef %17788) #6, !dbg !386
  store double %17789, ptr %13, align 8, !dbg !387
  %17790 = load double, ptr %13, align 8, !dbg !388
  %17791 = load double, ptr %14, align 8, !dbg !389
  %17792 = fadd double %17791, %17790, !dbg !389
  store double %17792, ptr %14, align 8, !dbg !389
  %17793 = load double, ptr %13, align 8, !dbg !390
  %17794 = fsub double %17793, 0x400921FB54442D18, !dbg !392
  %17795 = call double @llvm.fabs.f64(double %17794), !dbg !393
  %17796 = fcmp ole double %17795, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17796, label %14330, label %17797, !dbg !395

17797:                                            ; preds = %17720
  %17798 = load double, ptr %13, align 8, !dbg !396
  %17799 = fadd double %17798, 0x400921FB54442D18, !dbg !397
  %17800 = call double @llvm.fabs.f64(double %17799), !dbg !398
  %17801 = fcmp ole double %17800, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17801, label %14330, label %17802, !dbg !400

17802:                                            ; preds = %17797
  br label %17803, !dbg !403

17803:                                            ; preds = %17802
  %17804 = load i32, ptr %10, align 4, !dbg !404
  %17805 = add nsw i32 %17804, 1, !dbg !404
  store i32 %17805, ptr %10, align 4, !dbg !404
  %17806 = load i32, ptr %10, align 4, !dbg !364
  %17807 = load i32, ptr %8, align 4, !dbg !366
  %17808 = icmp slt i32 %17806, %17807, !dbg !367
  br i1 %17808, label %17809, label %48422, !dbg !368

17809:                                            ; preds = %17803
  %17810 = load i32, ptr %10, align 4, !dbg !369
  %17811 = sext i32 %17810 to i64, !dbg !371
  %17812 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17811, !dbg !371
  %17813 = load double, ptr %6, align 8, !dbg !372
  %17814 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17815 = load double, ptr %17814, align 8, !dbg !372
  %17816 = load double, ptr %17812, align 16, !dbg !372
  %17817 = getelementptr inbounds { double, double }, ptr %17812, i32 0, i32 1, !dbg !372
  %17818 = load double, ptr %17817, align 8, !dbg !372
  %17819 = call { double, double } @make_vec(double %17813, double %17815, double %17816, double %17818), !dbg !372
  %17820 = extractvalue { double, double } %17819, 0, !dbg !372
  store double %17820, ptr %16, align 8, !dbg !372
  %17821 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17822 = extractvalue { double, double } %17819, 1, !dbg !372
  store double %17822, ptr %17821, align 8, !dbg !372
  %17823 = load i32, ptr %10, align 4, !dbg !373
  %17824 = add nsw i32 %17823, 1, !dbg !374
  %17825 = sext i32 %17824 to i64, !dbg !375
  %17826 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17825, !dbg !375
  %17827 = load double, ptr %6, align 8, !dbg !376
  %17828 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17829 = load double, ptr %17828, align 8, !dbg !376
  %17830 = load double, ptr %17826, align 16, !dbg !376
  %17831 = getelementptr inbounds { double, double }, ptr %17826, i32 0, i32 1, !dbg !376
  %17832 = load double, ptr %17831, align 8, !dbg !376
  %17833 = call { double, double } @make_vec(double %17827, double %17829, double %17830, double %17832), !dbg !376
  %17834 = extractvalue { double, double } %17833, 0, !dbg !376
  store double %17834, ptr %17, align 8, !dbg !376
  %17835 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17836 = extractvalue { double, double } %17833, 1, !dbg !376
  store double %17836, ptr %17835, align 8, !dbg !376
  %17837 = load double, ptr %16, align 8, !dbg !377
  %17838 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17839 = load double, ptr %17838, align 8, !dbg !377
  %17840 = load double, ptr %17, align 8, !dbg !377
  %17841 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17842 = load double, ptr %17841, align 8, !dbg !377
  %17843 = call double @cross(double %17837, double %17839, double %17840, double %17842), !dbg !377
  %17844 = load i32, ptr %10, align 4, !dbg !378
  %17845 = sext i32 %17844 to i64, !dbg !379
  %17846 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17845, !dbg !379
  %17847 = load double, ptr %6, align 8, !dbg !380
  %17848 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17849 = load double, ptr %17848, align 8, !dbg !380
  %17850 = load double, ptr %17846, align 16, !dbg !380
  %17851 = getelementptr inbounds { double, double }, ptr %17846, i32 0, i32 1, !dbg !380
  %17852 = load double, ptr %17851, align 8, !dbg !380
  %17853 = call { double, double } @make_vec(double %17847, double %17849, double %17850, double %17852), !dbg !380
  %17854 = extractvalue { double, double } %17853, 0, !dbg !380
  store double %17854, ptr %18, align 8, !dbg !380
  %17855 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17856 = extractvalue { double, double } %17853, 1, !dbg !380
  store double %17856, ptr %17855, align 8, !dbg !380
  %17857 = load i32, ptr %10, align 4, !dbg !381
  %17858 = add nsw i32 %17857, 1, !dbg !382
  %17859 = sext i32 %17858 to i64, !dbg !383
  %17860 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17859, !dbg !383
  %17861 = load double, ptr %6, align 8, !dbg !384
  %17862 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17863 = load double, ptr %17862, align 8, !dbg !384
  %17864 = load double, ptr %17860, align 16, !dbg !384
  %17865 = getelementptr inbounds { double, double }, ptr %17860, i32 0, i32 1, !dbg !384
  %17866 = load double, ptr %17865, align 8, !dbg !384
  %17867 = call { double, double } @make_vec(double %17861, double %17863, double %17864, double %17866), !dbg !384
  %17868 = extractvalue { double, double } %17867, 0, !dbg !384
  store double %17868, ptr %19, align 8, !dbg !384
  %17869 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17870 = extractvalue { double, double } %17867, 1, !dbg !384
  store double %17870, ptr %17869, align 8, !dbg !384
  %17871 = load double, ptr %18, align 8, !dbg !385
  %17872 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17873 = load double, ptr %17872, align 8, !dbg !385
  %17874 = load double, ptr %19, align 8, !dbg !385
  %17875 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17876 = load double, ptr %17875, align 8, !dbg !385
  %17877 = call double @dot(double %17871, double %17873, double %17874, double %17876), !dbg !385
  %17878 = call double @atan2(double noundef %17843, double noundef %17877) #6, !dbg !386
  store double %17878, ptr %13, align 8, !dbg !387
  %17879 = load double, ptr %13, align 8, !dbg !388
  %17880 = load double, ptr %14, align 8, !dbg !389
  %17881 = fadd double %17880, %17879, !dbg !389
  store double %17881, ptr %14, align 8, !dbg !389
  %17882 = load double, ptr %13, align 8, !dbg !390
  %17883 = fsub double %17882, 0x400921FB54442D18, !dbg !392
  %17884 = call double @llvm.fabs.f64(double %17883), !dbg !393
  %17885 = fcmp ole double %17884, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17885, label %14330, label %17886, !dbg !395

17886:                                            ; preds = %17809
  %17887 = load double, ptr %13, align 8, !dbg !396
  %17888 = fadd double %17887, 0x400921FB54442D18, !dbg !397
  %17889 = call double @llvm.fabs.f64(double %17888), !dbg !398
  %17890 = fcmp ole double %17889, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17890, label %14330, label %17891, !dbg !400

17891:                                            ; preds = %17886
  br label %17892, !dbg !403

17892:                                            ; preds = %17891
  %17893 = load i32, ptr %10, align 4, !dbg !404
  %17894 = add nsw i32 %17893, 1, !dbg !404
  store i32 %17894, ptr %10, align 4, !dbg !404
  %17895 = load i32, ptr %10, align 4, !dbg !364
  %17896 = load i32, ptr %8, align 4, !dbg !366
  %17897 = icmp slt i32 %17895, %17896, !dbg !367
  br i1 %17897, label %17898, label %48422, !dbg !368

17898:                                            ; preds = %17892
  %17899 = load i32, ptr %10, align 4, !dbg !369
  %17900 = sext i32 %17899 to i64, !dbg !371
  %17901 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17900, !dbg !371
  %17902 = load double, ptr %6, align 8, !dbg !372
  %17903 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17904 = load double, ptr %17903, align 8, !dbg !372
  %17905 = load double, ptr %17901, align 16, !dbg !372
  %17906 = getelementptr inbounds { double, double }, ptr %17901, i32 0, i32 1, !dbg !372
  %17907 = load double, ptr %17906, align 8, !dbg !372
  %17908 = call { double, double } @make_vec(double %17902, double %17904, double %17905, double %17907), !dbg !372
  %17909 = extractvalue { double, double } %17908, 0, !dbg !372
  store double %17909, ptr %16, align 8, !dbg !372
  %17910 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %17911 = extractvalue { double, double } %17908, 1, !dbg !372
  store double %17911, ptr %17910, align 8, !dbg !372
  %17912 = load i32, ptr %10, align 4, !dbg !373
  %17913 = add nsw i32 %17912, 1, !dbg !374
  %17914 = sext i32 %17913 to i64, !dbg !375
  %17915 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17914, !dbg !375
  %17916 = load double, ptr %6, align 8, !dbg !376
  %17917 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %17918 = load double, ptr %17917, align 8, !dbg !376
  %17919 = load double, ptr %17915, align 16, !dbg !376
  %17920 = getelementptr inbounds { double, double }, ptr %17915, i32 0, i32 1, !dbg !376
  %17921 = load double, ptr %17920, align 8, !dbg !376
  %17922 = call { double, double } @make_vec(double %17916, double %17918, double %17919, double %17921), !dbg !376
  %17923 = extractvalue { double, double } %17922, 0, !dbg !376
  store double %17923, ptr %17, align 8, !dbg !376
  %17924 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %17925 = extractvalue { double, double } %17922, 1, !dbg !376
  store double %17925, ptr %17924, align 8, !dbg !376
  %17926 = load double, ptr %16, align 8, !dbg !377
  %17927 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %17928 = load double, ptr %17927, align 8, !dbg !377
  %17929 = load double, ptr %17, align 8, !dbg !377
  %17930 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %17931 = load double, ptr %17930, align 8, !dbg !377
  %17932 = call double @cross(double %17926, double %17928, double %17929, double %17931), !dbg !377
  %17933 = load i32, ptr %10, align 4, !dbg !378
  %17934 = sext i32 %17933 to i64, !dbg !379
  %17935 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17934, !dbg !379
  %17936 = load double, ptr %6, align 8, !dbg !380
  %17937 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %17938 = load double, ptr %17937, align 8, !dbg !380
  %17939 = load double, ptr %17935, align 16, !dbg !380
  %17940 = getelementptr inbounds { double, double }, ptr %17935, i32 0, i32 1, !dbg !380
  %17941 = load double, ptr %17940, align 8, !dbg !380
  %17942 = call { double, double } @make_vec(double %17936, double %17938, double %17939, double %17941), !dbg !380
  %17943 = extractvalue { double, double } %17942, 0, !dbg !380
  store double %17943, ptr %18, align 8, !dbg !380
  %17944 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %17945 = extractvalue { double, double } %17942, 1, !dbg !380
  store double %17945, ptr %17944, align 8, !dbg !380
  %17946 = load i32, ptr %10, align 4, !dbg !381
  %17947 = add nsw i32 %17946, 1, !dbg !382
  %17948 = sext i32 %17947 to i64, !dbg !383
  %17949 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17948, !dbg !383
  %17950 = load double, ptr %6, align 8, !dbg !384
  %17951 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %17952 = load double, ptr %17951, align 8, !dbg !384
  %17953 = load double, ptr %17949, align 16, !dbg !384
  %17954 = getelementptr inbounds { double, double }, ptr %17949, i32 0, i32 1, !dbg !384
  %17955 = load double, ptr %17954, align 8, !dbg !384
  %17956 = call { double, double } @make_vec(double %17950, double %17952, double %17953, double %17955), !dbg !384
  %17957 = extractvalue { double, double } %17956, 0, !dbg !384
  store double %17957, ptr %19, align 8, !dbg !384
  %17958 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %17959 = extractvalue { double, double } %17956, 1, !dbg !384
  store double %17959, ptr %17958, align 8, !dbg !384
  %17960 = load double, ptr %18, align 8, !dbg !385
  %17961 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %17962 = load double, ptr %17961, align 8, !dbg !385
  %17963 = load double, ptr %19, align 8, !dbg !385
  %17964 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %17965 = load double, ptr %17964, align 8, !dbg !385
  %17966 = call double @dot(double %17960, double %17962, double %17963, double %17965), !dbg !385
  %17967 = call double @atan2(double noundef %17932, double noundef %17966) #6, !dbg !386
  store double %17967, ptr %13, align 8, !dbg !387
  %17968 = load double, ptr %13, align 8, !dbg !388
  %17969 = load double, ptr %14, align 8, !dbg !389
  %17970 = fadd double %17969, %17968, !dbg !389
  store double %17970, ptr %14, align 8, !dbg !389
  %17971 = load double, ptr %13, align 8, !dbg !390
  %17972 = fsub double %17971, 0x400921FB54442D18, !dbg !392
  %17973 = call double @llvm.fabs.f64(double %17972), !dbg !393
  %17974 = fcmp ole double %17973, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %17974, label %14330, label %17975, !dbg !395

17975:                                            ; preds = %17898
  %17976 = load double, ptr %13, align 8, !dbg !396
  %17977 = fadd double %17976, 0x400921FB54442D18, !dbg !397
  %17978 = call double @llvm.fabs.f64(double %17977), !dbg !398
  %17979 = fcmp ole double %17978, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %17979, label %14330, label %17980, !dbg !400

17980:                                            ; preds = %17975
  br label %17981, !dbg !403

17981:                                            ; preds = %17980
  %17982 = load i32, ptr %10, align 4, !dbg !404
  %17983 = add nsw i32 %17982, 1, !dbg !404
  store i32 %17983, ptr %10, align 4, !dbg !404
  %17984 = load i32, ptr %10, align 4, !dbg !364
  %17985 = load i32, ptr %8, align 4, !dbg !366
  %17986 = icmp slt i32 %17984, %17985, !dbg !367
  br i1 %17986, label %17987, label %48422, !dbg !368

17987:                                            ; preds = %17981
  %17988 = load i32, ptr %10, align 4, !dbg !369
  %17989 = sext i32 %17988 to i64, !dbg !371
  %17990 = getelementptr inbounds %struct.POINT, ptr %26, i64 %17989, !dbg !371
  %17991 = load double, ptr %6, align 8, !dbg !372
  %17992 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %17993 = load double, ptr %17992, align 8, !dbg !372
  %17994 = load double, ptr %17990, align 16, !dbg !372
  %17995 = getelementptr inbounds { double, double }, ptr %17990, i32 0, i32 1, !dbg !372
  %17996 = load double, ptr %17995, align 8, !dbg !372
  %17997 = call { double, double } @make_vec(double %17991, double %17993, double %17994, double %17996), !dbg !372
  %17998 = extractvalue { double, double } %17997, 0, !dbg !372
  store double %17998, ptr %16, align 8, !dbg !372
  %17999 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18000 = extractvalue { double, double } %17997, 1, !dbg !372
  store double %18000, ptr %17999, align 8, !dbg !372
  %18001 = load i32, ptr %10, align 4, !dbg !373
  %18002 = add nsw i32 %18001, 1, !dbg !374
  %18003 = sext i32 %18002 to i64, !dbg !375
  %18004 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18003, !dbg !375
  %18005 = load double, ptr %6, align 8, !dbg !376
  %18006 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18007 = load double, ptr %18006, align 8, !dbg !376
  %18008 = load double, ptr %18004, align 16, !dbg !376
  %18009 = getelementptr inbounds { double, double }, ptr %18004, i32 0, i32 1, !dbg !376
  %18010 = load double, ptr %18009, align 8, !dbg !376
  %18011 = call { double, double } @make_vec(double %18005, double %18007, double %18008, double %18010), !dbg !376
  %18012 = extractvalue { double, double } %18011, 0, !dbg !376
  store double %18012, ptr %17, align 8, !dbg !376
  %18013 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18014 = extractvalue { double, double } %18011, 1, !dbg !376
  store double %18014, ptr %18013, align 8, !dbg !376
  %18015 = load double, ptr %16, align 8, !dbg !377
  %18016 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18017 = load double, ptr %18016, align 8, !dbg !377
  %18018 = load double, ptr %17, align 8, !dbg !377
  %18019 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18020 = load double, ptr %18019, align 8, !dbg !377
  %18021 = call double @cross(double %18015, double %18017, double %18018, double %18020), !dbg !377
  %18022 = load i32, ptr %10, align 4, !dbg !378
  %18023 = sext i32 %18022 to i64, !dbg !379
  %18024 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18023, !dbg !379
  %18025 = load double, ptr %6, align 8, !dbg !380
  %18026 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18027 = load double, ptr %18026, align 8, !dbg !380
  %18028 = load double, ptr %18024, align 16, !dbg !380
  %18029 = getelementptr inbounds { double, double }, ptr %18024, i32 0, i32 1, !dbg !380
  %18030 = load double, ptr %18029, align 8, !dbg !380
  %18031 = call { double, double } @make_vec(double %18025, double %18027, double %18028, double %18030), !dbg !380
  %18032 = extractvalue { double, double } %18031, 0, !dbg !380
  store double %18032, ptr %18, align 8, !dbg !380
  %18033 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18034 = extractvalue { double, double } %18031, 1, !dbg !380
  store double %18034, ptr %18033, align 8, !dbg !380
  %18035 = load i32, ptr %10, align 4, !dbg !381
  %18036 = add nsw i32 %18035, 1, !dbg !382
  %18037 = sext i32 %18036 to i64, !dbg !383
  %18038 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18037, !dbg !383
  %18039 = load double, ptr %6, align 8, !dbg !384
  %18040 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18041 = load double, ptr %18040, align 8, !dbg !384
  %18042 = load double, ptr %18038, align 16, !dbg !384
  %18043 = getelementptr inbounds { double, double }, ptr %18038, i32 0, i32 1, !dbg !384
  %18044 = load double, ptr %18043, align 8, !dbg !384
  %18045 = call { double, double } @make_vec(double %18039, double %18041, double %18042, double %18044), !dbg !384
  %18046 = extractvalue { double, double } %18045, 0, !dbg !384
  store double %18046, ptr %19, align 8, !dbg !384
  %18047 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18048 = extractvalue { double, double } %18045, 1, !dbg !384
  store double %18048, ptr %18047, align 8, !dbg !384
  %18049 = load double, ptr %18, align 8, !dbg !385
  %18050 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18051 = load double, ptr %18050, align 8, !dbg !385
  %18052 = load double, ptr %19, align 8, !dbg !385
  %18053 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18054 = load double, ptr %18053, align 8, !dbg !385
  %18055 = call double @dot(double %18049, double %18051, double %18052, double %18054), !dbg !385
  %18056 = call double @atan2(double noundef %18021, double noundef %18055) #6, !dbg !386
  store double %18056, ptr %13, align 8, !dbg !387
  %18057 = load double, ptr %13, align 8, !dbg !388
  %18058 = load double, ptr %14, align 8, !dbg !389
  %18059 = fadd double %18058, %18057, !dbg !389
  store double %18059, ptr %14, align 8, !dbg !389
  %18060 = load double, ptr %13, align 8, !dbg !390
  %18061 = fsub double %18060, 0x400921FB54442D18, !dbg !392
  %18062 = call double @llvm.fabs.f64(double %18061), !dbg !393
  %18063 = fcmp ole double %18062, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18063, label %14330, label %18064, !dbg !395

18064:                                            ; preds = %17987
  %18065 = load double, ptr %13, align 8, !dbg !396
  %18066 = fadd double %18065, 0x400921FB54442D18, !dbg !397
  %18067 = call double @llvm.fabs.f64(double %18066), !dbg !398
  %18068 = fcmp ole double %18067, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18068, label %14330, label %18069, !dbg !400

18069:                                            ; preds = %18064
  br label %18070, !dbg !403

18070:                                            ; preds = %18069
  %18071 = load i32, ptr %10, align 4, !dbg !404
  %18072 = add nsw i32 %18071, 1, !dbg !404
  store i32 %18072, ptr %10, align 4, !dbg !404
  %18073 = load i32, ptr %10, align 4, !dbg !364
  %18074 = load i32, ptr %8, align 4, !dbg !366
  %18075 = icmp slt i32 %18073, %18074, !dbg !367
  br i1 %18075, label %18076, label %48422, !dbg !368

18076:                                            ; preds = %18070
  %18077 = load i32, ptr %10, align 4, !dbg !369
  %18078 = sext i32 %18077 to i64, !dbg !371
  %18079 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18078, !dbg !371
  %18080 = load double, ptr %6, align 8, !dbg !372
  %18081 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18082 = load double, ptr %18081, align 8, !dbg !372
  %18083 = load double, ptr %18079, align 16, !dbg !372
  %18084 = getelementptr inbounds { double, double }, ptr %18079, i32 0, i32 1, !dbg !372
  %18085 = load double, ptr %18084, align 8, !dbg !372
  %18086 = call { double, double } @make_vec(double %18080, double %18082, double %18083, double %18085), !dbg !372
  %18087 = extractvalue { double, double } %18086, 0, !dbg !372
  store double %18087, ptr %16, align 8, !dbg !372
  %18088 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18089 = extractvalue { double, double } %18086, 1, !dbg !372
  store double %18089, ptr %18088, align 8, !dbg !372
  %18090 = load i32, ptr %10, align 4, !dbg !373
  %18091 = add nsw i32 %18090, 1, !dbg !374
  %18092 = sext i32 %18091 to i64, !dbg !375
  %18093 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18092, !dbg !375
  %18094 = load double, ptr %6, align 8, !dbg !376
  %18095 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18096 = load double, ptr %18095, align 8, !dbg !376
  %18097 = load double, ptr %18093, align 16, !dbg !376
  %18098 = getelementptr inbounds { double, double }, ptr %18093, i32 0, i32 1, !dbg !376
  %18099 = load double, ptr %18098, align 8, !dbg !376
  %18100 = call { double, double } @make_vec(double %18094, double %18096, double %18097, double %18099), !dbg !376
  %18101 = extractvalue { double, double } %18100, 0, !dbg !376
  store double %18101, ptr %17, align 8, !dbg !376
  %18102 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18103 = extractvalue { double, double } %18100, 1, !dbg !376
  store double %18103, ptr %18102, align 8, !dbg !376
  %18104 = load double, ptr %16, align 8, !dbg !377
  %18105 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18106 = load double, ptr %18105, align 8, !dbg !377
  %18107 = load double, ptr %17, align 8, !dbg !377
  %18108 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18109 = load double, ptr %18108, align 8, !dbg !377
  %18110 = call double @cross(double %18104, double %18106, double %18107, double %18109), !dbg !377
  %18111 = load i32, ptr %10, align 4, !dbg !378
  %18112 = sext i32 %18111 to i64, !dbg !379
  %18113 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18112, !dbg !379
  %18114 = load double, ptr %6, align 8, !dbg !380
  %18115 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18116 = load double, ptr %18115, align 8, !dbg !380
  %18117 = load double, ptr %18113, align 16, !dbg !380
  %18118 = getelementptr inbounds { double, double }, ptr %18113, i32 0, i32 1, !dbg !380
  %18119 = load double, ptr %18118, align 8, !dbg !380
  %18120 = call { double, double } @make_vec(double %18114, double %18116, double %18117, double %18119), !dbg !380
  %18121 = extractvalue { double, double } %18120, 0, !dbg !380
  store double %18121, ptr %18, align 8, !dbg !380
  %18122 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18123 = extractvalue { double, double } %18120, 1, !dbg !380
  store double %18123, ptr %18122, align 8, !dbg !380
  %18124 = load i32, ptr %10, align 4, !dbg !381
  %18125 = add nsw i32 %18124, 1, !dbg !382
  %18126 = sext i32 %18125 to i64, !dbg !383
  %18127 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18126, !dbg !383
  %18128 = load double, ptr %6, align 8, !dbg !384
  %18129 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18130 = load double, ptr %18129, align 8, !dbg !384
  %18131 = load double, ptr %18127, align 16, !dbg !384
  %18132 = getelementptr inbounds { double, double }, ptr %18127, i32 0, i32 1, !dbg !384
  %18133 = load double, ptr %18132, align 8, !dbg !384
  %18134 = call { double, double } @make_vec(double %18128, double %18130, double %18131, double %18133), !dbg !384
  %18135 = extractvalue { double, double } %18134, 0, !dbg !384
  store double %18135, ptr %19, align 8, !dbg !384
  %18136 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18137 = extractvalue { double, double } %18134, 1, !dbg !384
  store double %18137, ptr %18136, align 8, !dbg !384
  %18138 = load double, ptr %18, align 8, !dbg !385
  %18139 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18140 = load double, ptr %18139, align 8, !dbg !385
  %18141 = load double, ptr %19, align 8, !dbg !385
  %18142 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18143 = load double, ptr %18142, align 8, !dbg !385
  %18144 = call double @dot(double %18138, double %18140, double %18141, double %18143), !dbg !385
  %18145 = call double @atan2(double noundef %18110, double noundef %18144) #6, !dbg !386
  store double %18145, ptr %13, align 8, !dbg !387
  %18146 = load double, ptr %13, align 8, !dbg !388
  %18147 = load double, ptr %14, align 8, !dbg !389
  %18148 = fadd double %18147, %18146, !dbg !389
  store double %18148, ptr %14, align 8, !dbg !389
  %18149 = load double, ptr %13, align 8, !dbg !390
  %18150 = fsub double %18149, 0x400921FB54442D18, !dbg !392
  %18151 = call double @llvm.fabs.f64(double %18150), !dbg !393
  %18152 = fcmp ole double %18151, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18152, label %14330, label %18153, !dbg !395

18153:                                            ; preds = %18076
  %18154 = load double, ptr %13, align 8, !dbg !396
  %18155 = fadd double %18154, 0x400921FB54442D18, !dbg !397
  %18156 = call double @llvm.fabs.f64(double %18155), !dbg !398
  %18157 = fcmp ole double %18156, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18157, label %14330, label %18158, !dbg !400

18158:                                            ; preds = %18153
  br label %18159, !dbg !403

18159:                                            ; preds = %18158
  %18160 = load i32, ptr %10, align 4, !dbg !404
  %18161 = add nsw i32 %18160, 1, !dbg !404
  store i32 %18161, ptr %10, align 4, !dbg !404
  %18162 = load i32, ptr %10, align 4, !dbg !364
  %18163 = load i32, ptr %8, align 4, !dbg !366
  %18164 = icmp slt i32 %18162, %18163, !dbg !367
  br i1 %18164, label %18165, label %48422, !dbg !368

18165:                                            ; preds = %18159
  %18166 = load i32, ptr %10, align 4, !dbg !369
  %18167 = sext i32 %18166 to i64, !dbg !371
  %18168 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18167, !dbg !371
  %18169 = load double, ptr %6, align 8, !dbg !372
  %18170 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18171 = load double, ptr %18170, align 8, !dbg !372
  %18172 = load double, ptr %18168, align 16, !dbg !372
  %18173 = getelementptr inbounds { double, double }, ptr %18168, i32 0, i32 1, !dbg !372
  %18174 = load double, ptr %18173, align 8, !dbg !372
  %18175 = call { double, double } @make_vec(double %18169, double %18171, double %18172, double %18174), !dbg !372
  %18176 = extractvalue { double, double } %18175, 0, !dbg !372
  store double %18176, ptr %16, align 8, !dbg !372
  %18177 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18178 = extractvalue { double, double } %18175, 1, !dbg !372
  store double %18178, ptr %18177, align 8, !dbg !372
  %18179 = load i32, ptr %10, align 4, !dbg !373
  %18180 = add nsw i32 %18179, 1, !dbg !374
  %18181 = sext i32 %18180 to i64, !dbg !375
  %18182 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18181, !dbg !375
  %18183 = load double, ptr %6, align 8, !dbg !376
  %18184 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18185 = load double, ptr %18184, align 8, !dbg !376
  %18186 = load double, ptr %18182, align 16, !dbg !376
  %18187 = getelementptr inbounds { double, double }, ptr %18182, i32 0, i32 1, !dbg !376
  %18188 = load double, ptr %18187, align 8, !dbg !376
  %18189 = call { double, double } @make_vec(double %18183, double %18185, double %18186, double %18188), !dbg !376
  %18190 = extractvalue { double, double } %18189, 0, !dbg !376
  store double %18190, ptr %17, align 8, !dbg !376
  %18191 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18192 = extractvalue { double, double } %18189, 1, !dbg !376
  store double %18192, ptr %18191, align 8, !dbg !376
  %18193 = load double, ptr %16, align 8, !dbg !377
  %18194 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18195 = load double, ptr %18194, align 8, !dbg !377
  %18196 = load double, ptr %17, align 8, !dbg !377
  %18197 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18198 = load double, ptr %18197, align 8, !dbg !377
  %18199 = call double @cross(double %18193, double %18195, double %18196, double %18198), !dbg !377
  %18200 = load i32, ptr %10, align 4, !dbg !378
  %18201 = sext i32 %18200 to i64, !dbg !379
  %18202 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18201, !dbg !379
  %18203 = load double, ptr %6, align 8, !dbg !380
  %18204 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18205 = load double, ptr %18204, align 8, !dbg !380
  %18206 = load double, ptr %18202, align 16, !dbg !380
  %18207 = getelementptr inbounds { double, double }, ptr %18202, i32 0, i32 1, !dbg !380
  %18208 = load double, ptr %18207, align 8, !dbg !380
  %18209 = call { double, double } @make_vec(double %18203, double %18205, double %18206, double %18208), !dbg !380
  %18210 = extractvalue { double, double } %18209, 0, !dbg !380
  store double %18210, ptr %18, align 8, !dbg !380
  %18211 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18212 = extractvalue { double, double } %18209, 1, !dbg !380
  store double %18212, ptr %18211, align 8, !dbg !380
  %18213 = load i32, ptr %10, align 4, !dbg !381
  %18214 = add nsw i32 %18213, 1, !dbg !382
  %18215 = sext i32 %18214 to i64, !dbg !383
  %18216 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18215, !dbg !383
  %18217 = load double, ptr %6, align 8, !dbg !384
  %18218 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18219 = load double, ptr %18218, align 8, !dbg !384
  %18220 = load double, ptr %18216, align 16, !dbg !384
  %18221 = getelementptr inbounds { double, double }, ptr %18216, i32 0, i32 1, !dbg !384
  %18222 = load double, ptr %18221, align 8, !dbg !384
  %18223 = call { double, double } @make_vec(double %18217, double %18219, double %18220, double %18222), !dbg !384
  %18224 = extractvalue { double, double } %18223, 0, !dbg !384
  store double %18224, ptr %19, align 8, !dbg !384
  %18225 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18226 = extractvalue { double, double } %18223, 1, !dbg !384
  store double %18226, ptr %18225, align 8, !dbg !384
  %18227 = load double, ptr %18, align 8, !dbg !385
  %18228 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18229 = load double, ptr %18228, align 8, !dbg !385
  %18230 = load double, ptr %19, align 8, !dbg !385
  %18231 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18232 = load double, ptr %18231, align 8, !dbg !385
  %18233 = call double @dot(double %18227, double %18229, double %18230, double %18232), !dbg !385
  %18234 = call double @atan2(double noundef %18199, double noundef %18233) #6, !dbg !386
  store double %18234, ptr %13, align 8, !dbg !387
  %18235 = load double, ptr %13, align 8, !dbg !388
  %18236 = load double, ptr %14, align 8, !dbg !389
  %18237 = fadd double %18236, %18235, !dbg !389
  store double %18237, ptr %14, align 8, !dbg !389
  %18238 = load double, ptr %13, align 8, !dbg !390
  %18239 = fsub double %18238, 0x400921FB54442D18, !dbg !392
  %18240 = call double @llvm.fabs.f64(double %18239), !dbg !393
  %18241 = fcmp ole double %18240, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18241, label %14330, label %18242, !dbg !395

18242:                                            ; preds = %18165
  %18243 = load double, ptr %13, align 8, !dbg !396
  %18244 = fadd double %18243, 0x400921FB54442D18, !dbg !397
  %18245 = call double @llvm.fabs.f64(double %18244), !dbg !398
  %18246 = fcmp ole double %18245, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18246, label %14330, label %18247, !dbg !400

18247:                                            ; preds = %18242
  br label %18248, !dbg !403

18248:                                            ; preds = %18247
  %18249 = load i32, ptr %10, align 4, !dbg !404
  %18250 = add nsw i32 %18249, 1, !dbg !404
  store i32 %18250, ptr %10, align 4, !dbg !404
  %18251 = load i32, ptr %10, align 4, !dbg !364
  %18252 = load i32, ptr %8, align 4, !dbg !366
  %18253 = icmp slt i32 %18251, %18252, !dbg !367
  br i1 %18253, label %18254, label %48422, !dbg !368

18254:                                            ; preds = %18248
  %18255 = load i32, ptr %10, align 4, !dbg !369
  %18256 = sext i32 %18255 to i64, !dbg !371
  %18257 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18256, !dbg !371
  %18258 = load double, ptr %6, align 8, !dbg !372
  %18259 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18260 = load double, ptr %18259, align 8, !dbg !372
  %18261 = load double, ptr %18257, align 16, !dbg !372
  %18262 = getelementptr inbounds { double, double }, ptr %18257, i32 0, i32 1, !dbg !372
  %18263 = load double, ptr %18262, align 8, !dbg !372
  %18264 = call { double, double } @make_vec(double %18258, double %18260, double %18261, double %18263), !dbg !372
  %18265 = extractvalue { double, double } %18264, 0, !dbg !372
  store double %18265, ptr %16, align 8, !dbg !372
  %18266 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18267 = extractvalue { double, double } %18264, 1, !dbg !372
  store double %18267, ptr %18266, align 8, !dbg !372
  %18268 = load i32, ptr %10, align 4, !dbg !373
  %18269 = add nsw i32 %18268, 1, !dbg !374
  %18270 = sext i32 %18269 to i64, !dbg !375
  %18271 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18270, !dbg !375
  %18272 = load double, ptr %6, align 8, !dbg !376
  %18273 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18274 = load double, ptr %18273, align 8, !dbg !376
  %18275 = load double, ptr %18271, align 16, !dbg !376
  %18276 = getelementptr inbounds { double, double }, ptr %18271, i32 0, i32 1, !dbg !376
  %18277 = load double, ptr %18276, align 8, !dbg !376
  %18278 = call { double, double } @make_vec(double %18272, double %18274, double %18275, double %18277), !dbg !376
  %18279 = extractvalue { double, double } %18278, 0, !dbg !376
  store double %18279, ptr %17, align 8, !dbg !376
  %18280 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18281 = extractvalue { double, double } %18278, 1, !dbg !376
  store double %18281, ptr %18280, align 8, !dbg !376
  %18282 = load double, ptr %16, align 8, !dbg !377
  %18283 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18284 = load double, ptr %18283, align 8, !dbg !377
  %18285 = load double, ptr %17, align 8, !dbg !377
  %18286 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18287 = load double, ptr %18286, align 8, !dbg !377
  %18288 = call double @cross(double %18282, double %18284, double %18285, double %18287), !dbg !377
  %18289 = load i32, ptr %10, align 4, !dbg !378
  %18290 = sext i32 %18289 to i64, !dbg !379
  %18291 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18290, !dbg !379
  %18292 = load double, ptr %6, align 8, !dbg !380
  %18293 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18294 = load double, ptr %18293, align 8, !dbg !380
  %18295 = load double, ptr %18291, align 16, !dbg !380
  %18296 = getelementptr inbounds { double, double }, ptr %18291, i32 0, i32 1, !dbg !380
  %18297 = load double, ptr %18296, align 8, !dbg !380
  %18298 = call { double, double } @make_vec(double %18292, double %18294, double %18295, double %18297), !dbg !380
  %18299 = extractvalue { double, double } %18298, 0, !dbg !380
  store double %18299, ptr %18, align 8, !dbg !380
  %18300 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18301 = extractvalue { double, double } %18298, 1, !dbg !380
  store double %18301, ptr %18300, align 8, !dbg !380
  %18302 = load i32, ptr %10, align 4, !dbg !381
  %18303 = add nsw i32 %18302, 1, !dbg !382
  %18304 = sext i32 %18303 to i64, !dbg !383
  %18305 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18304, !dbg !383
  %18306 = load double, ptr %6, align 8, !dbg !384
  %18307 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18308 = load double, ptr %18307, align 8, !dbg !384
  %18309 = load double, ptr %18305, align 16, !dbg !384
  %18310 = getelementptr inbounds { double, double }, ptr %18305, i32 0, i32 1, !dbg !384
  %18311 = load double, ptr %18310, align 8, !dbg !384
  %18312 = call { double, double } @make_vec(double %18306, double %18308, double %18309, double %18311), !dbg !384
  %18313 = extractvalue { double, double } %18312, 0, !dbg !384
  store double %18313, ptr %19, align 8, !dbg !384
  %18314 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18315 = extractvalue { double, double } %18312, 1, !dbg !384
  store double %18315, ptr %18314, align 8, !dbg !384
  %18316 = load double, ptr %18, align 8, !dbg !385
  %18317 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18318 = load double, ptr %18317, align 8, !dbg !385
  %18319 = load double, ptr %19, align 8, !dbg !385
  %18320 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18321 = load double, ptr %18320, align 8, !dbg !385
  %18322 = call double @dot(double %18316, double %18318, double %18319, double %18321), !dbg !385
  %18323 = call double @atan2(double noundef %18288, double noundef %18322) #6, !dbg !386
  store double %18323, ptr %13, align 8, !dbg !387
  %18324 = load double, ptr %13, align 8, !dbg !388
  %18325 = load double, ptr %14, align 8, !dbg !389
  %18326 = fadd double %18325, %18324, !dbg !389
  store double %18326, ptr %14, align 8, !dbg !389
  %18327 = load double, ptr %13, align 8, !dbg !390
  %18328 = fsub double %18327, 0x400921FB54442D18, !dbg !392
  %18329 = call double @llvm.fabs.f64(double %18328), !dbg !393
  %18330 = fcmp ole double %18329, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18330, label %14330, label %18331, !dbg !395

18331:                                            ; preds = %18254
  %18332 = load double, ptr %13, align 8, !dbg !396
  %18333 = fadd double %18332, 0x400921FB54442D18, !dbg !397
  %18334 = call double @llvm.fabs.f64(double %18333), !dbg !398
  %18335 = fcmp ole double %18334, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18335, label %14330, label %18336, !dbg !400

18336:                                            ; preds = %18331
  br label %18337, !dbg !403

18337:                                            ; preds = %18336
  %18338 = load i32, ptr %10, align 4, !dbg !404
  %18339 = add nsw i32 %18338, 1, !dbg !404
  store i32 %18339, ptr %10, align 4, !dbg !404
  %18340 = load i32, ptr %10, align 4, !dbg !364
  %18341 = load i32, ptr %8, align 4, !dbg !366
  %18342 = icmp slt i32 %18340, %18341, !dbg !367
  br i1 %18342, label %18343, label %48422, !dbg !368

18343:                                            ; preds = %18337
  %18344 = load i32, ptr %10, align 4, !dbg !369
  %18345 = sext i32 %18344 to i64, !dbg !371
  %18346 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18345, !dbg !371
  %18347 = load double, ptr %6, align 8, !dbg !372
  %18348 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18349 = load double, ptr %18348, align 8, !dbg !372
  %18350 = load double, ptr %18346, align 16, !dbg !372
  %18351 = getelementptr inbounds { double, double }, ptr %18346, i32 0, i32 1, !dbg !372
  %18352 = load double, ptr %18351, align 8, !dbg !372
  %18353 = call { double, double } @make_vec(double %18347, double %18349, double %18350, double %18352), !dbg !372
  %18354 = extractvalue { double, double } %18353, 0, !dbg !372
  store double %18354, ptr %16, align 8, !dbg !372
  %18355 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18356 = extractvalue { double, double } %18353, 1, !dbg !372
  store double %18356, ptr %18355, align 8, !dbg !372
  %18357 = load i32, ptr %10, align 4, !dbg !373
  %18358 = add nsw i32 %18357, 1, !dbg !374
  %18359 = sext i32 %18358 to i64, !dbg !375
  %18360 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18359, !dbg !375
  %18361 = load double, ptr %6, align 8, !dbg !376
  %18362 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18363 = load double, ptr %18362, align 8, !dbg !376
  %18364 = load double, ptr %18360, align 16, !dbg !376
  %18365 = getelementptr inbounds { double, double }, ptr %18360, i32 0, i32 1, !dbg !376
  %18366 = load double, ptr %18365, align 8, !dbg !376
  %18367 = call { double, double } @make_vec(double %18361, double %18363, double %18364, double %18366), !dbg !376
  %18368 = extractvalue { double, double } %18367, 0, !dbg !376
  store double %18368, ptr %17, align 8, !dbg !376
  %18369 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18370 = extractvalue { double, double } %18367, 1, !dbg !376
  store double %18370, ptr %18369, align 8, !dbg !376
  %18371 = load double, ptr %16, align 8, !dbg !377
  %18372 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18373 = load double, ptr %18372, align 8, !dbg !377
  %18374 = load double, ptr %17, align 8, !dbg !377
  %18375 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18376 = load double, ptr %18375, align 8, !dbg !377
  %18377 = call double @cross(double %18371, double %18373, double %18374, double %18376), !dbg !377
  %18378 = load i32, ptr %10, align 4, !dbg !378
  %18379 = sext i32 %18378 to i64, !dbg !379
  %18380 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18379, !dbg !379
  %18381 = load double, ptr %6, align 8, !dbg !380
  %18382 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18383 = load double, ptr %18382, align 8, !dbg !380
  %18384 = load double, ptr %18380, align 16, !dbg !380
  %18385 = getelementptr inbounds { double, double }, ptr %18380, i32 0, i32 1, !dbg !380
  %18386 = load double, ptr %18385, align 8, !dbg !380
  %18387 = call { double, double } @make_vec(double %18381, double %18383, double %18384, double %18386), !dbg !380
  %18388 = extractvalue { double, double } %18387, 0, !dbg !380
  store double %18388, ptr %18, align 8, !dbg !380
  %18389 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18390 = extractvalue { double, double } %18387, 1, !dbg !380
  store double %18390, ptr %18389, align 8, !dbg !380
  %18391 = load i32, ptr %10, align 4, !dbg !381
  %18392 = add nsw i32 %18391, 1, !dbg !382
  %18393 = sext i32 %18392 to i64, !dbg !383
  %18394 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18393, !dbg !383
  %18395 = load double, ptr %6, align 8, !dbg !384
  %18396 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18397 = load double, ptr %18396, align 8, !dbg !384
  %18398 = load double, ptr %18394, align 16, !dbg !384
  %18399 = getelementptr inbounds { double, double }, ptr %18394, i32 0, i32 1, !dbg !384
  %18400 = load double, ptr %18399, align 8, !dbg !384
  %18401 = call { double, double } @make_vec(double %18395, double %18397, double %18398, double %18400), !dbg !384
  %18402 = extractvalue { double, double } %18401, 0, !dbg !384
  store double %18402, ptr %19, align 8, !dbg !384
  %18403 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18404 = extractvalue { double, double } %18401, 1, !dbg !384
  store double %18404, ptr %18403, align 8, !dbg !384
  %18405 = load double, ptr %18, align 8, !dbg !385
  %18406 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18407 = load double, ptr %18406, align 8, !dbg !385
  %18408 = load double, ptr %19, align 8, !dbg !385
  %18409 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18410 = load double, ptr %18409, align 8, !dbg !385
  %18411 = call double @dot(double %18405, double %18407, double %18408, double %18410), !dbg !385
  %18412 = call double @atan2(double noundef %18377, double noundef %18411) #6, !dbg !386
  store double %18412, ptr %13, align 8, !dbg !387
  %18413 = load double, ptr %13, align 8, !dbg !388
  %18414 = load double, ptr %14, align 8, !dbg !389
  %18415 = fadd double %18414, %18413, !dbg !389
  store double %18415, ptr %14, align 8, !dbg !389
  %18416 = load double, ptr %13, align 8, !dbg !390
  %18417 = fsub double %18416, 0x400921FB54442D18, !dbg !392
  %18418 = call double @llvm.fabs.f64(double %18417), !dbg !393
  %18419 = fcmp ole double %18418, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18419, label %14330, label %18420, !dbg !395

18420:                                            ; preds = %18343
  %18421 = load double, ptr %13, align 8, !dbg !396
  %18422 = fadd double %18421, 0x400921FB54442D18, !dbg !397
  %18423 = call double @llvm.fabs.f64(double %18422), !dbg !398
  %18424 = fcmp ole double %18423, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18424, label %14330, label %18425, !dbg !400

18425:                                            ; preds = %18420
  br label %18426, !dbg !403

18426:                                            ; preds = %18425
  %18427 = load i32, ptr %10, align 4, !dbg !404
  %18428 = add nsw i32 %18427, 1, !dbg !404
  store i32 %18428, ptr %10, align 4, !dbg !404
  %18429 = load i32, ptr %10, align 4, !dbg !364
  %18430 = load i32, ptr %8, align 4, !dbg !366
  %18431 = icmp slt i32 %18429, %18430, !dbg !367
  br i1 %18431, label %18432, label %48422, !dbg !368

18432:                                            ; preds = %18426
  %18433 = load i32, ptr %10, align 4, !dbg !369
  %18434 = sext i32 %18433 to i64, !dbg !371
  %18435 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18434, !dbg !371
  %18436 = load double, ptr %6, align 8, !dbg !372
  %18437 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18438 = load double, ptr %18437, align 8, !dbg !372
  %18439 = load double, ptr %18435, align 16, !dbg !372
  %18440 = getelementptr inbounds { double, double }, ptr %18435, i32 0, i32 1, !dbg !372
  %18441 = load double, ptr %18440, align 8, !dbg !372
  %18442 = call { double, double } @make_vec(double %18436, double %18438, double %18439, double %18441), !dbg !372
  %18443 = extractvalue { double, double } %18442, 0, !dbg !372
  store double %18443, ptr %16, align 8, !dbg !372
  %18444 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18445 = extractvalue { double, double } %18442, 1, !dbg !372
  store double %18445, ptr %18444, align 8, !dbg !372
  %18446 = load i32, ptr %10, align 4, !dbg !373
  %18447 = add nsw i32 %18446, 1, !dbg !374
  %18448 = sext i32 %18447 to i64, !dbg !375
  %18449 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18448, !dbg !375
  %18450 = load double, ptr %6, align 8, !dbg !376
  %18451 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18452 = load double, ptr %18451, align 8, !dbg !376
  %18453 = load double, ptr %18449, align 16, !dbg !376
  %18454 = getelementptr inbounds { double, double }, ptr %18449, i32 0, i32 1, !dbg !376
  %18455 = load double, ptr %18454, align 8, !dbg !376
  %18456 = call { double, double } @make_vec(double %18450, double %18452, double %18453, double %18455), !dbg !376
  %18457 = extractvalue { double, double } %18456, 0, !dbg !376
  store double %18457, ptr %17, align 8, !dbg !376
  %18458 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18459 = extractvalue { double, double } %18456, 1, !dbg !376
  store double %18459, ptr %18458, align 8, !dbg !376
  %18460 = load double, ptr %16, align 8, !dbg !377
  %18461 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18462 = load double, ptr %18461, align 8, !dbg !377
  %18463 = load double, ptr %17, align 8, !dbg !377
  %18464 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18465 = load double, ptr %18464, align 8, !dbg !377
  %18466 = call double @cross(double %18460, double %18462, double %18463, double %18465), !dbg !377
  %18467 = load i32, ptr %10, align 4, !dbg !378
  %18468 = sext i32 %18467 to i64, !dbg !379
  %18469 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18468, !dbg !379
  %18470 = load double, ptr %6, align 8, !dbg !380
  %18471 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18472 = load double, ptr %18471, align 8, !dbg !380
  %18473 = load double, ptr %18469, align 16, !dbg !380
  %18474 = getelementptr inbounds { double, double }, ptr %18469, i32 0, i32 1, !dbg !380
  %18475 = load double, ptr %18474, align 8, !dbg !380
  %18476 = call { double, double } @make_vec(double %18470, double %18472, double %18473, double %18475), !dbg !380
  %18477 = extractvalue { double, double } %18476, 0, !dbg !380
  store double %18477, ptr %18, align 8, !dbg !380
  %18478 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18479 = extractvalue { double, double } %18476, 1, !dbg !380
  store double %18479, ptr %18478, align 8, !dbg !380
  %18480 = load i32, ptr %10, align 4, !dbg !381
  %18481 = add nsw i32 %18480, 1, !dbg !382
  %18482 = sext i32 %18481 to i64, !dbg !383
  %18483 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18482, !dbg !383
  %18484 = load double, ptr %6, align 8, !dbg !384
  %18485 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18486 = load double, ptr %18485, align 8, !dbg !384
  %18487 = load double, ptr %18483, align 16, !dbg !384
  %18488 = getelementptr inbounds { double, double }, ptr %18483, i32 0, i32 1, !dbg !384
  %18489 = load double, ptr %18488, align 8, !dbg !384
  %18490 = call { double, double } @make_vec(double %18484, double %18486, double %18487, double %18489), !dbg !384
  %18491 = extractvalue { double, double } %18490, 0, !dbg !384
  store double %18491, ptr %19, align 8, !dbg !384
  %18492 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18493 = extractvalue { double, double } %18490, 1, !dbg !384
  store double %18493, ptr %18492, align 8, !dbg !384
  %18494 = load double, ptr %18, align 8, !dbg !385
  %18495 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18496 = load double, ptr %18495, align 8, !dbg !385
  %18497 = load double, ptr %19, align 8, !dbg !385
  %18498 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18499 = load double, ptr %18498, align 8, !dbg !385
  %18500 = call double @dot(double %18494, double %18496, double %18497, double %18499), !dbg !385
  %18501 = call double @atan2(double noundef %18466, double noundef %18500) #6, !dbg !386
  store double %18501, ptr %13, align 8, !dbg !387
  %18502 = load double, ptr %13, align 8, !dbg !388
  %18503 = load double, ptr %14, align 8, !dbg !389
  %18504 = fadd double %18503, %18502, !dbg !389
  store double %18504, ptr %14, align 8, !dbg !389
  %18505 = load double, ptr %13, align 8, !dbg !390
  %18506 = fsub double %18505, 0x400921FB54442D18, !dbg !392
  %18507 = call double @llvm.fabs.f64(double %18506), !dbg !393
  %18508 = fcmp ole double %18507, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18508, label %14330, label %18509, !dbg !395

18509:                                            ; preds = %18432
  %18510 = load double, ptr %13, align 8, !dbg !396
  %18511 = fadd double %18510, 0x400921FB54442D18, !dbg !397
  %18512 = call double @llvm.fabs.f64(double %18511), !dbg !398
  %18513 = fcmp ole double %18512, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18513, label %14330, label %18514, !dbg !400

18514:                                            ; preds = %18509
  br label %18515, !dbg !403

18515:                                            ; preds = %18514
  %18516 = load i32, ptr %10, align 4, !dbg !404
  %18517 = add nsw i32 %18516, 1, !dbg !404
  store i32 %18517, ptr %10, align 4, !dbg !404
  %18518 = load i32, ptr %10, align 4, !dbg !364
  %18519 = load i32, ptr %8, align 4, !dbg !366
  %18520 = icmp slt i32 %18518, %18519, !dbg !367
  br i1 %18520, label %18521, label %48422, !dbg !368

18521:                                            ; preds = %18515
  %18522 = load i32, ptr %10, align 4, !dbg !369
  %18523 = sext i32 %18522 to i64, !dbg !371
  %18524 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18523, !dbg !371
  %18525 = load double, ptr %6, align 8, !dbg !372
  %18526 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18527 = load double, ptr %18526, align 8, !dbg !372
  %18528 = load double, ptr %18524, align 16, !dbg !372
  %18529 = getelementptr inbounds { double, double }, ptr %18524, i32 0, i32 1, !dbg !372
  %18530 = load double, ptr %18529, align 8, !dbg !372
  %18531 = call { double, double } @make_vec(double %18525, double %18527, double %18528, double %18530), !dbg !372
  %18532 = extractvalue { double, double } %18531, 0, !dbg !372
  store double %18532, ptr %16, align 8, !dbg !372
  %18533 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18534 = extractvalue { double, double } %18531, 1, !dbg !372
  store double %18534, ptr %18533, align 8, !dbg !372
  %18535 = load i32, ptr %10, align 4, !dbg !373
  %18536 = add nsw i32 %18535, 1, !dbg !374
  %18537 = sext i32 %18536 to i64, !dbg !375
  %18538 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18537, !dbg !375
  %18539 = load double, ptr %6, align 8, !dbg !376
  %18540 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18541 = load double, ptr %18540, align 8, !dbg !376
  %18542 = load double, ptr %18538, align 16, !dbg !376
  %18543 = getelementptr inbounds { double, double }, ptr %18538, i32 0, i32 1, !dbg !376
  %18544 = load double, ptr %18543, align 8, !dbg !376
  %18545 = call { double, double } @make_vec(double %18539, double %18541, double %18542, double %18544), !dbg !376
  %18546 = extractvalue { double, double } %18545, 0, !dbg !376
  store double %18546, ptr %17, align 8, !dbg !376
  %18547 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18548 = extractvalue { double, double } %18545, 1, !dbg !376
  store double %18548, ptr %18547, align 8, !dbg !376
  %18549 = load double, ptr %16, align 8, !dbg !377
  %18550 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18551 = load double, ptr %18550, align 8, !dbg !377
  %18552 = load double, ptr %17, align 8, !dbg !377
  %18553 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18554 = load double, ptr %18553, align 8, !dbg !377
  %18555 = call double @cross(double %18549, double %18551, double %18552, double %18554), !dbg !377
  %18556 = load i32, ptr %10, align 4, !dbg !378
  %18557 = sext i32 %18556 to i64, !dbg !379
  %18558 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18557, !dbg !379
  %18559 = load double, ptr %6, align 8, !dbg !380
  %18560 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18561 = load double, ptr %18560, align 8, !dbg !380
  %18562 = load double, ptr %18558, align 16, !dbg !380
  %18563 = getelementptr inbounds { double, double }, ptr %18558, i32 0, i32 1, !dbg !380
  %18564 = load double, ptr %18563, align 8, !dbg !380
  %18565 = call { double, double } @make_vec(double %18559, double %18561, double %18562, double %18564), !dbg !380
  %18566 = extractvalue { double, double } %18565, 0, !dbg !380
  store double %18566, ptr %18, align 8, !dbg !380
  %18567 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18568 = extractvalue { double, double } %18565, 1, !dbg !380
  store double %18568, ptr %18567, align 8, !dbg !380
  %18569 = load i32, ptr %10, align 4, !dbg !381
  %18570 = add nsw i32 %18569, 1, !dbg !382
  %18571 = sext i32 %18570 to i64, !dbg !383
  %18572 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18571, !dbg !383
  %18573 = load double, ptr %6, align 8, !dbg !384
  %18574 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18575 = load double, ptr %18574, align 8, !dbg !384
  %18576 = load double, ptr %18572, align 16, !dbg !384
  %18577 = getelementptr inbounds { double, double }, ptr %18572, i32 0, i32 1, !dbg !384
  %18578 = load double, ptr %18577, align 8, !dbg !384
  %18579 = call { double, double } @make_vec(double %18573, double %18575, double %18576, double %18578), !dbg !384
  %18580 = extractvalue { double, double } %18579, 0, !dbg !384
  store double %18580, ptr %19, align 8, !dbg !384
  %18581 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18582 = extractvalue { double, double } %18579, 1, !dbg !384
  store double %18582, ptr %18581, align 8, !dbg !384
  %18583 = load double, ptr %18, align 8, !dbg !385
  %18584 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18585 = load double, ptr %18584, align 8, !dbg !385
  %18586 = load double, ptr %19, align 8, !dbg !385
  %18587 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18588 = load double, ptr %18587, align 8, !dbg !385
  %18589 = call double @dot(double %18583, double %18585, double %18586, double %18588), !dbg !385
  %18590 = call double @atan2(double noundef %18555, double noundef %18589) #6, !dbg !386
  store double %18590, ptr %13, align 8, !dbg !387
  %18591 = load double, ptr %13, align 8, !dbg !388
  %18592 = load double, ptr %14, align 8, !dbg !389
  %18593 = fadd double %18592, %18591, !dbg !389
  store double %18593, ptr %14, align 8, !dbg !389
  %18594 = load double, ptr %13, align 8, !dbg !390
  %18595 = fsub double %18594, 0x400921FB54442D18, !dbg !392
  %18596 = call double @llvm.fabs.f64(double %18595), !dbg !393
  %18597 = fcmp ole double %18596, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18597, label %14330, label %18598, !dbg !395

18598:                                            ; preds = %18521
  %18599 = load double, ptr %13, align 8, !dbg !396
  %18600 = fadd double %18599, 0x400921FB54442D18, !dbg !397
  %18601 = call double @llvm.fabs.f64(double %18600), !dbg !398
  %18602 = fcmp ole double %18601, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18602, label %14330, label %18603, !dbg !400

18603:                                            ; preds = %18598
  br label %18604, !dbg !403

18604:                                            ; preds = %18603
  %18605 = load i32, ptr %10, align 4, !dbg !404
  %18606 = add nsw i32 %18605, 1, !dbg !404
  store i32 %18606, ptr %10, align 4, !dbg !404
  %18607 = load i32, ptr %10, align 4, !dbg !364
  %18608 = load i32, ptr %8, align 4, !dbg !366
  %18609 = icmp slt i32 %18607, %18608, !dbg !367
  br i1 %18609, label %18610, label %48422, !dbg !368

18610:                                            ; preds = %18604
  %18611 = load i32, ptr %10, align 4, !dbg !369
  %18612 = sext i32 %18611 to i64, !dbg !371
  %18613 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18612, !dbg !371
  %18614 = load double, ptr %6, align 8, !dbg !372
  %18615 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18616 = load double, ptr %18615, align 8, !dbg !372
  %18617 = load double, ptr %18613, align 16, !dbg !372
  %18618 = getelementptr inbounds { double, double }, ptr %18613, i32 0, i32 1, !dbg !372
  %18619 = load double, ptr %18618, align 8, !dbg !372
  %18620 = call { double, double } @make_vec(double %18614, double %18616, double %18617, double %18619), !dbg !372
  %18621 = extractvalue { double, double } %18620, 0, !dbg !372
  store double %18621, ptr %16, align 8, !dbg !372
  %18622 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18623 = extractvalue { double, double } %18620, 1, !dbg !372
  store double %18623, ptr %18622, align 8, !dbg !372
  %18624 = load i32, ptr %10, align 4, !dbg !373
  %18625 = add nsw i32 %18624, 1, !dbg !374
  %18626 = sext i32 %18625 to i64, !dbg !375
  %18627 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18626, !dbg !375
  %18628 = load double, ptr %6, align 8, !dbg !376
  %18629 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18630 = load double, ptr %18629, align 8, !dbg !376
  %18631 = load double, ptr %18627, align 16, !dbg !376
  %18632 = getelementptr inbounds { double, double }, ptr %18627, i32 0, i32 1, !dbg !376
  %18633 = load double, ptr %18632, align 8, !dbg !376
  %18634 = call { double, double } @make_vec(double %18628, double %18630, double %18631, double %18633), !dbg !376
  %18635 = extractvalue { double, double } %18634, 0, !dbg !376
  store double %18635, ptr %17, align 8, !dbg !376
  %18636 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18637 = extractvalue { double, double } %18634, 1, !dbg !376
  store double %18637, ptr %18636, align 8, !dbg !376
  %18638 = load double, ptr %16, align 8, !dbg !377
  %18639 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18640 = load double, ptr %18639, align 8, !dbg !377
  %18641 = load double, ptr %17, align 8, !dbg !377
  %18642 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18643 = load double, ptr %18642, align 8, !dbg !377
  %18644 = call double @cross(double %18638, double %18640, double %18641, double %18643), !dbg !377
  %18645 = load i32, ptr %10, align 4, !dbg !378
  %18646 = sext i32 %18645 to i64, !dbg !379
  %18647 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18646, !dbg !379
  %18648 = load double, ptr %6, align 8, !dbg !380
  %18649 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18650 = load double, ptr %18649, align 8, !dbg !380
  %18651 = load double, ptr %18647, align 16, !dbg !380
  %18652 = getelementptr inbounds { double, double }, ptr %18647, i32 0, i32 1, !dbg !380
  %18653 = load double, ptr %18652, align 8, !dbg !380
  %18654 = call { double, double } @make_vec(double %18648, double %18650, double %18651, double %18653), !dbg !380
  %18655 = extractvalue { double, double } %18654, 0, !dbg !380
  store double %18655, ptr %18, align 8, !dbg !380
  %18656 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18657 = extractvalue { double, double } %18654, 1, !dbg !380
  store double %18657, ptr %18656, align 8, !dbg !380
  %18658 = load i32, ptr %10, align 4, !dbg !381
  %18659 = add nsw i32 %18658, 1, !dbg !382
  %18660 = sext i32 %18659 to i64, !dbg !383
  %18661 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18660, !dbg !383
  %18662 = load double, ptr %6, align 8, !dbg !384
  %18663 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18664 = load double, ptr %18663, align 8, !dbg !384
  %18665 = load double, ptr %18661, align 16, !dbg !384
  %18666 = getelementptr inbounds { double, double }, ptr %18661, i32 0, i32 1, !dbg !384
  %18667 = load double, ptr %18666, align 8, !dbg !384
  %18668 = call { double, double } @make_vec(double %18662, double %18664, double %18665, double %18667), !dbg !384
  %18669 = extractvalue { double, double } %18668, 0, !dbg !384
  store double %18669, ptr %19, align 8, !dbg !384
  %18670 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18671 = extractvalue { double, double } %18668, 1, !dbg !384
  store double %18671, ptr %18670, align 8, !dbg !384
  %18672 = load double, ptr %18, align 8, !dbg !385
  %18673 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18674 = load double, ptr %18673, align 8, !dbg !385
  %18675 = load double, ptr %19, align 8, !dbg !385
  %18676 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18677 = load double, ptr %18676, align 8, !dbg !385
  %18678 = call double @dot(double %18672, double %18674, double %18675, double %18677), !dbg !385
  %18679 = call double @atan2(double noundef %18644, double noundef %18678) #6, !dbg !386
  store double %18679, ptr %13, align 8, !dbg !387
  %18680 = load double, ptr %13, align 8, !dbg !388
  %18681 = load double, ptr %14, align 8, !dbg !389
  %18682 = fadd double %18681, %18680, !dbg !389
  store double %18682, ptr %14, align 8, !dbg !389
  %18683 = load double, ptr %13, align 8, !dbg !390
  %18684 = fsub double %18683, 0x400921FB54442D18, !dbg !392
  %18685 = call double @llvm.fabs.f64(double %18684), !dbg !393
  %18686 = fcmp ole double %18685, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18686, label %14330, label %18687, !dbg !395

18687:                                            ; preds = %18610
  %18688 = load double, ptr %13, align 8, !dbg !396
  %18689 = fadd double %18688, 0x400921FB54442D18, !dbg !397
  %18690 = call double @llvm.fabs.f64(double %18689), !dbg !398
  %18691 = fcmp ole double %18690, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18691, label %14330, label %18692, !dbg !400

18692:                                            ; preds = %18687
  br label %18693, !dbg !403

18693:                                            ; preds = %18692
  %18694 = load i32, ptr %10, align 4, !dbg !404
  %18695 = add nsw i32 %18694, 1, !dbg !404
  store i32 %18695, ptr %10, align 4, !dbg !404
  %18696 = load i32, ptr %10, align 4, !dbg !364
  %18697 = load i32, ptr %8, align 4, !dbg !366
  %18698 = icmp slt i32 %18696, %18697, !dbg !367
  br i1 %18698, label %18699, label %48422, !dbg !368

18699:                                            ; preds = %18693
  %18700 = load i32, ptr %10, align 4, !dbg !369
  %18701 = sext i32 %18700 to i64, !dbg !371
  %18702 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18701, !dbg !371
  %18703 = load double, ptr %6, align 8, !dbg !372
  %18704 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18705 = load double, ptr %18704, align 8, !dbg !372
  %18706 = load double, ptr %18702, align 16, !dbg !372
  %18707 = getelementptr inbounds { double, double }, ptr %18702, i32 0, i32 1, !dbg !372
  %18708 = load double, ptr %18707, align 8, !dbg !372
  %18709 = call { double, double } @make_vec(double %18703, double %18705, double %18706, double %18708), !dbg !372
  %18710 = extractvalue { double, double } %18709, 0, !dbg !372
  store double %18710, ptr %16, align 8, !dbg !372
  %18711 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18712 = extractvalue { double, double } %18709, 1, !dbg !372
  store double %18712, ptr %18711, align 8, !dbg !372
  %18713 = load i32, ptr %10, align 4, !dbg !373
  %18714 = add nsw i32 %18713, 1, !dbg !374
  %18715 = sext i32 %18714 to i64, !dbg !375
  %18716 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18715, !dbg !375
  %18717 = load double, ptr %6, align 8, !dbg !376
  %18718 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18719 = load double, ptr %18718, align 8, !dbg !376
  %18720 = load double, ptr %18716, align 16, !dbg !376
  %18721 = getelementptr inbounds { double, double }, ptr %18716, i32 0, i32 1, !dbg !376
  %18722 = load double, ptr %18721, align 8, !dbg !376
  %18723 = call { double, double } @make_vec(double %18717, double %18719, double %18720, double %18722), !dbg !376
  %18724 = extractvalue { double, double } %18723, 0, !dbg !376
  store double %18724, ptr %17, align 8, !dbg !376
  %18725 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18726 = extractvalue { double, double } %18723, 1, !dbg !376
  store double %18726, ptr %18725, align 8, !dbg !376
  %18727 = load double, ptr %16, align 8, !dbg !377
  %18728 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18729 = load double, ptr %18728, align 8, !dbg !377
  %18730 = load double, ptr %17, align 8, !dbg !377
  %18731 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18732 = load double, ptr %18731, align 8, !dbg !377
  %18733 = call double @cross(double %18727, double %18729, double %18730, double %18732), !dbg !377
  %18734 = load i32, ptr %10, align 4, !dbg !378
  %18735 = sext i32 %18734 to i64, !dbg !379
  %18736 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18735, !dbg !379
  %18737 = load double, ptr %6, align 8, !dbg !380
  %18738 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18739 = load double, ptr %18738, align 8, !dbg !380
  %18740 = load double, ptr %18736, align 16, !dbg !380
  %18741 = getelementptr inbounds { double, double }, ptr %18736, i32 0, i32 1, !dbg !380
  %18742 = load double, ptr %18741, align 8, !dbg !380
  %18743 = call { double, double } @make_vec(double %18737, double %18739, double %18740, double %18742), !dbg !380
  %18744 = extractvalue { double, double } %18743, 0, !dbg !380
  store double %18744, ptr %18, align 8, !dbg !380
  %18745 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18746 = extractvalue { double, double } %18743, 1, !dbg !380
  store double %18746, ptr %18745, align 8, !dbg !380
  %18747 = load i32, ptr %10, align 4, !dbg !381
  %18748 = add nsw i32 %18747, 1, !dbg !382
  %18749 = sext i32 %18748 to i64, !dbg !383
  %18750 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18749, !dbg !383
  %18751 = load double, ptr %6, align 8, !dbg !384
  %18752 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18753 = load double, ptr %18752, align 8, !dbg !384
  %18754 = load double, ptr %18750, align 16, !dbg !384
  %18755 = getelementptr inbounds { double, double }, ptr %18750, i32 0, i32 1, !dbg !384
  %18756 = load double, ptr %18755, align 8, !dbg !384
  %18757 = call { double, double } @make_vec(double %18751, double %18753, double %18754, double %18756), !dbg !384
  %18758 = extractvalue { double, double } %18757, 0, !dbg !384
  store double %18758, ptr %19, align 8, !dbg !384
  %18759 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18760 = extractvalue { double, double } %18757, 1, !dbg !384
  store double %18760, ptr %18759, align 8, !dbg !384
  %18761 = load double, ptr %18, align 8, !dbg !385
  %18762 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18763 = load double, ptr %18762, align 8, !dbg !385
  %18764 = load double, ptr %19, align 8, !dbg !385
  %18765 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18766 = load double, ptr %18765, align 8, !dbg !385
  %18767 = call double @dot(double %18761, double %18763, double %18764, double %18766), !dbg !385
  %18768 = call double @atan2(double noundef %18733, double noundef %18767) #6, !dbg !386
  store double %18768, ptr %13, align 8, !dbg !387
  %18769 = load double, ptr %13, align 8, !dbg !388
  %18770 = load double, ptr %14, align 8, !dbg !389
  %18771 = fadd double %18770, %18769, !dbg !389
  store double %18771, ptr %14, align 8, !dbg !389
  %18772 = load double, ptr %13, align 8, !dbg !390
  %18773 = fsub double %18772, 0x400921FB54442D18, !dbg !392
  %18774 = call double @llvm.fabs.f64(double %18773), !dbg !393
  %18775 = fcmp ole double %18774, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18775, label %14330, label %18776, !dbg !395

18776:                                            ; preds = %18699
  %18777 = load double, ptr %13, align 8, !dbg !396
  %18778 = fadd double %18777, 0x400921FB54442D18, !dbg !397
  %18779 = call double @llvm.fabs.f64(double %18778), !dbg !398
  %18780 = fcmp ole double %18779, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18780, label %14330, label %18781, !dbg !400

18781:                                            ; preds = %18776
  br label %18782, !dbg !403

18782:                                            ; preds = %18781
  %18783 = load i32, ptr %10, align 4, !dbg !404
  %18784 = add nsw i32 %18783, 1, !dbg !404
  store i32 %18784, ptr %10, align 4, !dbg !404
  %18785 = load i32, ptr %10, align 4, !dbg !364
  %18786 = load i32, ptr %8, align 4, !dbg !366
  %18787 = icmp slt i32 %18785, %18786, !dbg !367
  br i1 %18787, label %18788, label %48422, !dbg !368

18788:                                            ; preds = %18782
  %18789 = load i32, ptr %10, align 4, !dbg !369
  %18790 = sext i32 %18789 to i64, !dbg !371
  %18791 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18790, !dbg !371
  %18792 = load double, ptr %6, align 8, !dbg !372
  %18793 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18794 = load double, ptr %18793, align 8, !dbg !372
  %18795 = load double, ptr %18791, align 16, !dbg !372
  %18796 = getelementptr inbounds { double, double }, ptr %18791, i32 0, i32 1, !dbg !372
  %18797 = load double, ptr %18796, align 8, !dbg !372
  %18798 = call { double, double } @make_vec(double %18792, double %18794, double %18795, double %18797), !dbg !372
  %18799 = extractvalue { double, double } %18798, 0, !dbg !372
  store double %18799, ptr %16, align 8, !dbg !372
  %18800 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18801 = extractvalue { double, double } %18798, 1, !dbg !372
  store double %18801, ptr %18800, align 8, !dbg !372
  %18802 = load i32, ptr %10, align 4, !dbg !373
  %18803 = add nsw i32 %18802, 1, !dbg !374
  %18804 = sext i32 %18803 to i64, !dbg !375
  %18805 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18804, !dbg !375
  %18806 = load double, ptr %6, align 8, !dbg !376
  %18807 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18808 = load double, ptr %18807, align 8, !dbg !376
  %18809 = load double, ptr %18805, align 16, !dbg !376
  %18810 = getelementptr inbounds { double, double }, ptr %18805, i32 0, i32 1, !dbg !376
  %18811 = load double, ptr %18810, align 8, !dbg !376
  %18812 = call { double, double } @make_vec(double %18806, double %18808, double %18809, double %18811), !dbg !376
  %18813 = extractvalue { double, double } %18812, 0, !dbg !376
  store double %18813, ptr %17, align 8, !dbg !376
  %18814 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18815 = extractvalue { double, double } %18812, 1, !dbg !376
  store double %18815, ptr %18814, align 8, !dbg !376
  %18816 = load double, ptr %16, align 8, !dbg !377
  %18817 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18818 = load double, ptr %18817, align 8, !dbg !377
  %18819 = load double, ptr %17, align 8, !dbg !377
  %18820 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18821 = load double, ptr %18820, align 8, !dbg !377
  %18822 = call double @cross(double %18816, double %18818, double %18819, double %18821), !dbg !377
  %18823 = load i32, ptr %10, align 4, !dbg !378
  %18824 = sext i32 %18823 to i64, !dbg !379
  %18825 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18824, !dbg !379
  %18826 = load double, ptr %6, align 8, !dbg !380
  %18827 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18828 = load double, ptr %18827, align 8, !dbg !380
  %18829 = load double, ptr %18825, align 16, !dbg !380
  %18830 = getelementptr inbounds { double, double }, ptr %18825, i32 0, i32 1, !dbg !380
  %18831 = load double, ptr %18830, align 8, !dbg !380
  %18832 = call { double, double } @make_vec(double %18826, double %18828, double %18829, double %18831), !dbg !380
  %18833 = extractvalue { double, double } %18832, 0, !dbg !380
  store double %18833, ptr %18, align 8, !dbg !380
  %18834 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18835 = extractvalue { double, double } %18832, 1, !dbg !380
  store double %18835, ptr %18834, align 8, !dbg !380
  %18836 = load i32, ptr %10, align 4, !dbg !381
  %18837 = add nsw i32 %18836, 1, !dbg !382
  %18838 = sext i32 %18837 to i64, !dbg !383
  %18839 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18838, !dbg !383
  %18840 = load double, ptr %6, align 8, !dbg !384
  %18841 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18842 = load double, ptr %18841, align 8, !dbg !384
  %18843 = load double, ptr %18839, align 16, !dbg !384
  %18844 = getelementptr inbounds { double, double }, ptr %18839, i32 0, i32 1, !dbg !384
  %18845 = load double, ptr %18844, align 8, !dbg !384
  %18846 = call { double, double } @make_vec(double %18840, double %18842, double %18843, double %18845), !dbg !384
  %18847 = extractvalue { double, double } %18846, 0, !dbg !384
  store double %18847, ptr %19, align 8, !dbg !384
  %18848 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18849 = extractvalue { double, double } %18846, 1, !dbg !384
  store double %18849, ptr %18848, align 8, !dbg !384
  %18850 = load double, ptr %18, align 8, !dbg !385
  %18851 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18852 = load double, ptr %18851, align 8, !dbg !385
  %18853 = load double, ptr %19, align 8, !dbg !385
  %18854 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18855 = load double, ptr %18854, align 8, !dbg !385
  %18856 = call double @dot(double %18850, double %18852, double %18853, double %18855), !dbg !385
  %18857 = call double @atan2(double noundef %18822, double noundef %18856) #6, !dbg !386
  store double %18857, ptr %13, align 8, !dbg !387
  %18858 = load double, ptr %13, align 8, !dbg !388
  %18859 = load double, ptr %14, align 8, !dbg !389
  %18860 = fadd double %18859, %18858, !dbg !389
  store double %18860, ptr %14, align 8, !dbg !389
  %18861 = load double, ptr %13, align 8, !dbg !390
  %18862 = fsub double %18861, 0x400921FB54442D18, !dbg !392
  %18863 = call double @llvm.fabs.f64(double %18862), !dbg !393
  %18864 = fcmp ole double %18863, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18864, label %14330, label %18865, !dbg !395

18865:                                            ; preds = %18788
  %18866 = load double, ptr %13, align 8, !dbg !396
  %18867 = fadd double %18866, 0x400921FB54442D18, !dbg !397
  %18868 = call double @llvm.fabs.f64(double %18867), !dbg !398
  %18869 = fcmp ole double %18868, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18869, label %14330, label %18870, !dbg !400

18870:                                            ; preds = %18865
  br label %18871, !dbg !403

18871:                                            ; preds = %18870
  %18872 = load i32, ptr %10, align 4, !dbg !404
  %18873 = add nsw i32 %18872, 1, !dbg !404
  store i32 %18873, ptr %10, align 4, !dbg !404
  %18874 = load i32, ptr %10, align 4, !dbg !364
  %18875 = load i32, ptr %8, align 4, !dbg !366
  %18876 = icmp slt i32 %18874, %18875, !dbg !367
  br i1 %18876, label %18877, label %48422, !dbg !368

18877:                                            ; preds = %18871
  %18878 = load i32, ptr %10, align 4, !dbg !369
  %18879 = sext i32 %18878 to i64, !dbg !371
  %18880 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18879, !dbg !371
  %18881 = load double, ptr %6, align 8, !dbg !372
  %18882 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18883 = load double, ptr %18882, align 8, !dbg !372
  %18884 = load double, ptr %18880, align 16, !dbg !372
  %18885 = getelementptr inbounds { double, double }, ptr %18880, i32 0, i32 1, !dbg !372
  %18886 = load double, ptr %18885, align 8, !dbg !372
  %18887 = call { double, double } @make_vec(double %18881, double %18883, double %18884, double %18886), !dbg !372
  %18888 = extractvalue { double, double } %18887, 0, !dbg !372
  store double %18888, ptr %16, align 8, !dbg !372
  %18889 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18890 = extractvalue { double, double } %18887, 1, !dbg !372
  store double %18890, ptr %18889, align 8, !dbg !372
  %18891 = load i32, ptr %10, align 4, !dbg !373
  %18892 = add nsw i32 %18891, 1, !dbg !374
  %18893 = sext i32 %18892 to i64, !dbg !375
  %18894 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18893, !dbg !375
  %18895 = load double, ptr %6, align 8, !dbg !376
  %18896 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18897 = load double, ptr %18896, align 8, !dbg !376
  %18898 = load double, ptr %18894, align 16, !dbg !376
  %18899 = getelementptr inbounds { double, double }, ptr %18894, i32 0, i32 1, !dbg !376
  %18900 = load double, ptr %18899, align 8, !dbg !376
  %18901 = call { double, double } @make_vec(double %18895, double %18897, double %18898, double %18900), !dbg !376
  %18902 = extractvalue { double, double } %18901, 0, !dbg !376
  store double %18902, ptr %17, align 8, !dbg !376
  %18903 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18904 = extractvalue { double, double } %18901, 1, !dbg !376
  store double %18904, ptr %18903, align 8, !dbg !376
  %18905 = load double, ptr %16, align 8, !dbg !377
  %18906 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18907 = load double, ptr %18906, align 8, !dbg !377
  %18908 = load double, ptr %17, align 8, !dbg !377
  %18909 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18910 = load double, ptr %18909, align 8, !dbg !377
  %18911 = call double @cross(double %18905, double %18907, double %18908, double %18910), !dbg !377
  %18912 = load i32, ptr %10, align 4, !dbg !378
  %18913 = sext i32 %18912 to i64, !dbg !379
  %18914 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18913, !dbg !379
  %18915 = load double, ptr %6, align 8, !dbg !380
  %18916 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %18917 = load double, ptr %18916, align 8, !dbg !380
  %18918 = load double, ptr %18914, align 16, !dbg !380
  %18919 = getelementptr inbounds { double, double }, ptr %18914, i32 0, i32 1, !dbg !380
  %18920 = load double, ptr %18919, align 8, !dbg !380
  %18921 = call { double, double } @make_vec(double %18915, double %18917, double %18918, double %18920), !dbg !380
  %18922 = extractvalue { double, double } %18921, 0, !dbg !380
  store double %18922, ptr %18, align 8, !dbg !380
  %18923 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %18924 = extractvalue { double, double } %18921, 1, !dbg !380
  store double %18924, ptr %18923, align 8, !dbg !380
  %18925 = load i32, ptr %10, align 4, !dbg !381
  %18926 = add nsw i32 %18925, 1, !dbg !382
  %18927 = sext i32 %18926 to i64, !dbg !383
  %18928 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18927, !dbg !383
  %18929 = load double, ptr %6, align 8, !dbg !384
  %18930 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %18931 = load double, ptr %18930, align 8, !dbg !384
  %18932 = load double, ptr %18928, align 16, !dbg !384
  %18933 = getelementptr inbounds { double, double }, ptr %18928, i32 0, i32 1, !dbg !384
  %18934 = load double, ptr %18933, align 8, !dbg !384
  %18935 = call { double, double } @make_vec(double %18929, double %18931, double %18932, double %18934), !dbg !384
  %18936 = extractvalue { double, double } %18935, 0, !dbg !384
  store double %18936, ptr %19, align 8, !dbg !384
  %18937 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %18938 = extractvalue { double, double } %18935, 1, !dbg !384
  store double %18938, ptr %18937, align 8, !dbg !384
  %18939 = load double, ptr %18, align 8, !dbg !385
  %18940 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %18941 = load double, ptr %18940, align 8, !dbg !385
  %18942 = load double, ptr %19, align 8, !dbg !385
  %18943 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %18944 = load double, ptr %18943, align 8, !dbg !385
  %18945 = call double @dot(double %18939, double %18941, double %18942, double %18944), !dbg !385
  %18946 = call double @atan2(double noundef %18911, double noundef %18945) #6, !dbg !386
  store double %18946, ptr %13, align 8, !dbg !387
  %18947 = load double, ptr %13, align 8, !dbg !388
  %18948 = load double, ptr %14, align 8, !dbg !389
  %18949 = fadd double %18948, %18947, !dbg !389
  store double %18949, ptr %14, align 8, !dbg !389
  %18950 = load double, ptr %13, align 8, !dbg !390
  %18951 = fsub double %18950, 0x400921FB54442D18, !dbg !392
  %18952 = call double @llvm.fabs.f64(double %18951), !dbg !393
  %18953 = fcmp ole double %18952, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %18953, label %14330, label %18954, !dbg !395

18954:                                            ; preds = %18877
  %18955 = load double, ptr %13, align 8, !dbg !396
  %18956 = fadd double %18955, 0x400921FB54442D18, !dbg !397
  %18957 = call double @llvm.fabs.f64(double %18956), !dbg !398
  %18958 = fcmp ole double %18957, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %18958, label %14330, label %18959, !dbg !400

18959:                                            ; preds = %18954
  br label %18960, !dbg !403

18960:                                            ; preds = %18959
  %18961 = load i32, ptr %10, align 4, !dbg !404
  %18962 = add nsw i32 %18961, 1, !dbg !404
  store i32 %18962, ptr %10, align 4, !dbg !404
  %18963 = load i32, ptr %10, align 4, !dbg !364
  %18964 = load i32, ptr %8, align 4, !dbg !366
  %18965 = icmp slt i32 %18963, %18964, !dbg !367
  br i1 %18965, label %18966, label %48422, !dbg !368

18966:                                            ; preds = %18960
  %18967 = load i32, ptr %10, align 4, !dbg !369
  %18968 = sext i32 %18967 to i64, !dbg !371
  %18969 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18968, !dbg !371
  %18970 = load double, ptr %6, align 8, !dbg !372
  %18971 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %18972 = load double, ptr %18971, align 8, !dbg !372
  %18973 = load double, ptr %18969, align 16, !dbg !372
  %18974 = getelementptr inbounds { double, double }, ptr %18969, i32 0, i32 1, !dbg !372
  %18975 = load double, ptr %18974, align 8, !dbg !372
  %18976 = call { double, double } @make_vec(double %18970, double %18972, double %18973, double %18975), !dbg !372
  %18977 = extractvalue { double, double } %18976, 0, !dbg !372
  store double %18977, ptr %16, align 8, !dbg !372
  %18978 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %18979 = extractvalue { double, double } %18976, 1, !dbg !372
  store double %18979, ptr %18978, align 8, !dbg !372
  %18980 = load i32, ptr %10, align 4, !dbg !373
  %18981 = add nsw i32 %18980, 1, !dbg !374
  %18982 = sext i32 %18981 to i64, !dbg !375
  %18983 = getelementptr inbounds %struct.POINT, ptr %26, i64 %18982, !dbg !375
  %18984 = load double, ptr %6, align 8, !dbg !376
  %18985 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %18986 = load double, ptr %18985, align 8, !dbg !376
  %18987 = load double, ptr %18983, align 16, !dbg !376
  %18988 = getelementptr inbounds { double, double }, ptr %18983, i32 0, i32 1, !dbg !376
  %18989 = load double, ptr %18988, align 8, !dbg !376
  %18990 = call { double, double } @make_vec(double %18984, double %18986, double %18987, double %18989), !dbg !376
  %18991 = extractvalue { double, double } %18990, 0, !dbg !376
  store double %18991, ptr %17, align 8, !dbg !376
  %18992 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %18993 = extractvalue { double, double } %18990, 1, !dbg !376
  store double %18993, ptr %18992, align 8, !dbg !376
  %18994 = load double, ptr %16, align 8, !dbg !377
  %18995 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %18996 = load double, ptr %18995, align 8, !dbg !377
  %18997 = load double, ptr %17, align 8, !dbg !377
  %18998 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %18999 = load double, ptr %18998, align 8, !dbg !377
  %19000 = call double @cross(double %18994, double %18996, double %18997, double %18999), !dbg !377
  %19001 = load i32, ptr %10, align 4, !dbg !378
  %19002 = sext i32 %19001 to i64, !dbg !379
  %19003 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19002, !dbg !379
  %19004 = load double, ptr %6, align 8, !dbg !380
  %19005 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19006 = load double, ptr %19005, align 8, !dbg !380
  %19007 = load double, ptr %19003, align 16, !dbg !380
  %19008 = getelementptr inbounds { double, double }, ptr %19003, i32 0, i32 1, !dbg !380
  %19009 = load double, ptr %19008, align 8, !dbg !380
  %19010 = call { double, double } @make_vec(double %19004, double %19006, double %19007, double %19009), !dbg !380
  %19011 = extractvalue { double, double } %19010, 0, !dbg !380
  store double %19011, ptr %18, align 8, !dbg !380
  %19012 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19013 = extractvalue { double, double } %19010, 1, !dbg !380
  store double %19013, ptr %19012, align 8, !dbg !380
  %19014 = load i32, ptr %10, align 4, !dbg !381
  %19015 = add nsw i32 %19014, 1, !dbg !382
  %19016 = sext i32 %19015 to i64, !dbg !383
  %19017 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19016, !dbg !383
  %19018 = load double, ptr %6, align 8, !dbg !384
  %19019 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19020 = load double, ptr %19019, align 8, !dbg !384
  %19021 = load double, ptr %19017, align 16, !dbg !384
  %19022 = getelementptr inbounds { double, double }, ptr %19017, i32 0, i32 1, !dbg !384
  %19023 = load double, ptr %19022, align 8, !dbg !384
  %19024 = call { double, double } @make_vec(double %19018, double %19020, double %19021, double %19023), !dbg !384
  %19025 = extractvalue { double, double } %19024, 0, !dbg !384
  store double %19025, ptr %19, align 8, !dbg !384
  %19026 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19027 = extractvalue { double, double } %19024, 1, !dbg !384
  store double %19027, ptr %19026, align 8, !dbg !384
  %19028 = load double, ptr %18, align 8, !dbg !385
  %19029 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19030 = load double, ptr %19029, align 8, !dbg !385
  %19031 = load double, ptr %19, align 8, !dbg !385
  %19032 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19033 = load double, ptr %19032, align 8, !dbg !385
  %19034 = call double @dot(double %19028, double %19030, double %19031, double %19033), !dbg !385
  %19035 = call double @atan2(double noundef %19000, double noundef %19034) #6, !dbg !386
  store double %19035, ptr %13, align 8, !dbg !387
  %19036 = load double, ptr %13, align 8, !dbg !388
  %19037 = load double, ptr %14, align 8, !dbg !389
  %19038 = fadd double %19037, %19036, !dbg !389
  store double %19038, ptr %14, align 8, !dbg !389
  %19039 = load double, ptr %13, align 8, !dbg !390
  %19040 = fsub double %19039, 0x400921FB54442D18, !dbg !392
  %19041 = call double @llvm.fabs.f64(double %19040), !dbg !393
  %19042 = fcmp ole double %19041, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19042, label %14330, label %19043, !dbg !395

19043:                                            ; preds = %18966
  %19044 = load double, ptr %13, align 8, !dbg !396
  %19045 = fadd double %19044, 0x400921FB54442D18, !dbg !397
  %19046 = call double @llvm.fabs.f64(double %19045), !dbg !398
  %19047 = fcmp ole double %19046, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19047, label %14330, label %19048, !dbg !400

19048:                                            ; preds = %19043
  br label %19049, !dbg !403

19049:                                            ; preds = %19048
  %19050 = load i32, ptr %10, align 4, !dbg !404
  %19051 = add nsw i32 %19050, 1, !dbg !404
  store i32 %19051, ptr %10, align 4, !dbg !404
  %19052 = load i32, ptr %10, align 4, !dbg !364
  %19053 = load i32, ptr %8, align 4, !dbg !366
  %19054 = icmp slt i32 %19052, %19053, !dbg !367
  br i1 %19054, label %19055, label %48422, !dbg !368

19055:                                            ; preds = %19049
  %19056 = load i32, ptr %10, align 4, !dbg !369
  %19057 = sext i32 %19056 to i64, !dbg !371
  %19058 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19057, !dbg !371
  %19059 = load double, ptr %6, align 8, !dbg !372
  %19060 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19061 = load double, ptr %19060, align 8, !dbg !372
  %19062 = load double, ptr %19058, align 16, !dbg !372
  %19063 = getelementptr inbounds { double, double }, ptr %19058, i32 0, i32 1, !dbg !372
  %19064 = load double, ptr %19063, align 8, !dbg !372
  %19065 = call { double, double } @make_vec(double %19059, double %19061, double %19062, double %19064), !dbg !372
  %19066 = extractvalue { double, double } %19065, 0, !dbg !372
  store double %19066, ptr %16, align 8, !dbg !372
  %19067 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19068 = extractvalue { double, double } %19065, 1, !dbg !372
  store double %19068, ptr %19067, align 8, !dbg !372
  %19069 = load i32, ptr %10, align 4, !dbg !373
  %19070 = add nsw i32 %19069, 1, !dbg !374
  %19071 = sext i32 %19070 to i64, !dbg !375
  %19072 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19071, !dbg !375
  %19073 = load double, ptr %6, align 8, !dbg !376
  %19074 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19075 = load double, ptr %19074, align 8, !dbg !376
  %19076 = load double, ptr %19072, align 16, !dbg !376
  %19077 = getelementptr inbounds { double, double }, ptr %19072, i32 0, i32 1, !dbg !376
  %19078 = load double, ptr %19077, align 8, !dbg !376
  %19079 = call { double, double } @make_vec(double %19073, double %19075, double %19076, double %19078), !dbg !376
  %19080 = extractvalue { double, double } %19079, 0, !dbg !376
  store double %19080, ptr %17, align 8, !dbg !376
  %19081 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19082 = extractvalue { double, double } %19079, 1, !dbg !376
  store double %19082, ptr %19081, align 8, !dbg !376
  %19083 = load double, ptr %16, align 8, !dbg !377
  %19084 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19085 = load double, ptr %19084, align 8, !dbg !377
  %19086 = load double, ptr %17, align 8, !dbg !377
  %19087 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19088 = load double, ptr %19087, align 8, !dbg !377
  %19089 = call double @cross(double %19083, double %19085, double %19086, double %19088), !dbg !377
  %19090 = load i32, ptr %10, align 4, !dbg !378
  %19091 = sext i32 %19090 to i64, !dbg !379
  %19092 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19091, !dbg !379
  %19093 = load double, ptr %6, align 8, !dbg !380
  %19094 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19095 = load double, ptr %19094, align 8, !dbg !380
  %19096 = load double, ptr %19092, align 16, !dbg !380
  %19097 = getelementptr inbounds { double, double }, ptr %19092, i32 0, i32 1, !dbg !380
  %19098 = load double, ptr %19097, align 8, !dbg !380
  %19099 = call { double, double } @make_vec(double %19093, double %19095, double %19096, double %19098), !dbg !380
  %19100 = extractvalue { double, double } %19099, 0, !dbg !380
  store double %19100, ptr %18, align 8, !dbg !380
  %19101 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19102 = extractvalue { double, double } %19099, 1, !dbg !380
  store double %19102, ptr %19101, align 8, !dbg !380
  %19103 = load i32, ptr %10, align 4, !dbg !381
  %19104 = add nsw i32 %19103, 1, !dbg !382
  %19105 = sext i32 %19104 to i64, !dbg !383
  %19106 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19105, !dbg !383
  %19107 = load double, ptr %6, align 8, !dbg !384
  %19108 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19109 = load double, ptr %19108, align 8, !dbg !384
  %19110 = load double, ptr %19106, align 16, !dbg !384
  %19111 = getelementptr inbounds { double, double }, ptr %19106, i32 0, i32 1, !dbg !384
  %19112 = load double, ptr %19111, align 8, !dbg !384
  %19113 = call { double, double } @make_vec(double %19107, double %19109, double %19110, double %19112), !dbg !384
  %19114 = extractvalue { double, double } %19113, 0, !dbg !384
  store double %19114, ptr %19, align 8, !dbg !384
  %19115 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19116 = extractvalue { double, double } %19113, 1, !dbg !384
  store double %19116, ptr %19115, align 8, !dbg !384
  %19117 = load double, ptr %18, align 8, !dbg !385
  %19118 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19119 = load double, ptr %19118, align 8, !dbg !385
  %19120 = load double, ptr %19, align 8, !dbg !385
  %19121 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19122 = load double, ptr %19121, align 8, !dbg !385
  %19123 = call double @dot(double %19117, double %19119, double %19120, double %19122), !dbg !385
  %19124 = call double @atan2(double noundef %19089, double noundef %19123) #6, !dbg !386
  store double %19124, ptr %13, align 8, !dbg !387
  %19125 = load double, ptr %13, align 8, !dbg !388
  %19126 = load double, ptr %14, align 8, !dbg !389
  %19127 = fadd double %19126, %19125, !dbg !389
  store double %19127, ptr %14, align 8, !dbg !389
  %19128 = load double, ptr %13, align 8, !dbg !390
  %19129 = fsub double %19128, 0x400921FB54442D18, !dbg !392
  %19130 = call double @llvm.fabs.f64(double %19129), !dbg !393
  %19131 = fcmp ole double %19130, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19131, label %14330, label %19132, !dbg !395

19132:                                            ; preds = %19055
  %19133 = load double, ptr %13, align 8, !dbg !396
  %19134 = fadd double %19133, 0x400921FB54442D18, !dbg !397
  %19135 = call double @llvm.fabs.f64(double %19134), !dbg !398
  %19136 = fcmp ole double %19135, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19136, label %14330, label %19137, !dbg !400

19137:                                            ; preds = %19132
  br label %19138, !dbg !403

19138:                                            ; preds = %19137
  %19139 = load i32, ptr %10, align 4, !dbg !404
  %19140 = add nsw i32 %19139, 1, !dbg !404
  store i32 %19140, ptr %10, align 4, !dbg !404
  %19141 = load i32, ptr %10, align 4, !dbg !364
  %19142 = load i32, ptr %8, align 4, !dbg !366
  %19143 = icmp slt i32 %19141, %19142, !dbg !367
  br i1 %19143, label %19144, label %48422, !dbg !368

19144:                                            ; preds = %19138
  %19145 = load i32, ptr %10, align 4, !dbg !369
  %19146 = sext i32 %19145 to i64, !dbg !371
  %19147 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19146, !dbg !371
  %19148 = load double, ptr %6, align 8, !dbg !372
  %19149 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19150 = load double, ptr %19149, align 8, !dbg !372
  %19151 = load double, ptr %19147, align 16, !dbg !372
  %19152 = getelementptr inbounds { double, double }, ptr %19147, i32 0, i32 1, !dbg !372
  %19153 = load double, ptr %19152, align 8, !dbg !372
  %19154 = call { double, double } @make_vec(double %19148, double %19150, double %19151, double %19153), !dbg !372
  %19155 = extractvalue { double, double } %19154, 0, !dbg !372
  store double %19155, ptr %16, align 8, !dbg !372
  %19156 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19157 = extractvalue { double, double } %19154, 1, !dbg !372
  store double %19157, ptr %19156, align 8, !dbg !372
  %19158 = load i32, ptr %10, align 4, !dbg !373
  %19159 = add nsw i32 %19158, 1, !dbg !374
  %19160 = sext i32 %19159 to i64, !dbg !375
  %19161 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19160, !dbg !375
  %19162 = load double, ptr %6, align 8, !dbg !376
  %19163 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19164 = load double, ptr %19163, align 8, !dbg !376
  %19165 = load double, ptr %19161, align 16, !dbg !376
  %19166 = getelementptr inbounds { double, double }, ptr %19161, i32 0, i32 1, !dbg !376
  %19167 = load double, ptr %19166, align 8, !dbg !376
  %19168 = call { double, double } @make_vec(double %19162, double %19164, double %19165, double %19167), !dbg !376
  %19169 = extractvalue { double, double } %19168, 0, !dbg !376
  store double %19169, ptr %17, align 8, !dbg !376
  %19170 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19171 = extractvalue { double, double } %19168, 1, !dbg !376
  store double %19171, ptr %19170, align 8, !dbg !376
  %19172 = load double, ptr %16, align 8, !dbg !377
  %19173 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19174 = load double, ptr %19173, align 8, !dbg !377
  %19175 = load double, ptr %17, align 8, !dbg !377
  %19176 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19177 = load double, ptr %19176, align 8, !dbg !377
  %19178 = call double @cross(double %19172, double %19174, double %19175, double %19177), !dbg !377
  %19179 = load i32, ptr %10, align 4, !dbg !378
  %19180 = sext i32 %19179 to i64, !dbg !379
  %19181 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19180, !dbg !379
  %19182 = load double, ptr %6, align 8, !dbg !380
  %19183 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19184 = load double, ptr %19183, align 8, !dbg !380
  %19185 = load double, ptr %19181, align 16, !dbg !380
  %19186 = getelementptr inbounds { double, double }, ptr %19181, i32 0, i32 1, !dbg !380
  %19187 = load double, ptr %19186, align 8, !dbg !380
  %19188 = call { double, double } @make_vec(double %19182, double %19184, double %19185, double %19187), !dbg !380
  %19189 = extractvalue { double, double } %19188, 0, !dbg !380
  store double %19189, ptr %18, align 8, !dbg !380
  %19190 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19191 = extractvalue { double, double } %19188, 1, !dbg !380
  store double %19191, ptr %19190, align 8, !dbg !380
  %19192 = load i32, ptr %10, align 4, !dbg !381
  %19193 = add nsw i32 %19192, 1, !dbg !382
  %19194 = sext i32 %19193 to i64, !dbg !383
  %19195 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19194, !dbg !383
  %19196 = load double, ptr %6, align 8, !dbg !384
  %19197 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19198 = load double, ptr %19197, align 8, !dbg !384
  %19199 = load double, ptr %19195, align 16, !dbg !384
  %19200 = getelementptr inbounds { double, double }, ptr %19195, i32 0, i32 1, !dbg !384
  %19201 = load double, ptr %19200, align 8, !dbg !384
  %19202 = call { double, double } @make_vec(double %19196, double %19198, double %19199, double %19201), !dbg !384
  %19203 = extractvalue { double, double } %19202, 0, !dbg !384
  store double %19203, ptr %19, align 8, !dbg !384
  %19204 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19205 = extractvalue { double, double } %19202, 1, !dbg !384
  store double %19205, ptr %19204, align 8, !dbg !384
  %19206 = load double, ptr %18, align 8, !dbg !385
  %19207 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19208 = load double, ptr %19207, align 8, !dbg !385
  %19209 = load double, ptr %19, align 8, !dbg !385
  %19210 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19211 = load double, ptr %19210, align 8, !dbg !385
  %19212 = call double @dot(double %19206, double %19208, double %19209, double %19211), !dbg !385
  %19213 = call double @atan2(double noundef %19178, double noundef %19212) #6, !dbg !386
  store double %19213, ptr %13, align 8, !dbg !387
  %19214 = load double, ptr %13, align 8, !dbg !388
  %19215 = load double, ptr %14, align 8, !dbg !389
  %19216 = fadd double %19215, %19214, !dbg !389
  store double %19216, ptr %14, align 8, !dbg !389
  %19217 = load double, ptr %13, align 8, !dbg !390
  %19218 = fsub double %19217, 0x400921FB54442D18, !dbg !392
  %19219 = call double @llvm.fabs.f64(double %19218), !dbg !393
  %19220 = fcmp ole double %19219, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19220, label %14330, label %19221, !dbg !395

19221:                                            ; preds = %19144
  %19222 = load double, ptr %13, align 8, !dbg !396
  %19223 = fadd double %19222, 0x400921FB54442D18, !dbg !397
  %19224 = call double @llvm.fabs.f64(double %19223), !dbg !398
  %19225 = fcmp ole double %19224, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19225, label %14330, label %19226, !dbg !400

19226:                                            ; preds = %19221
  br label %19227, !dbg !403

19227:                                            ; preds = %19226
  %19228 = load i32, ptr %10, align 4, !dbg !404
  %19229 = add nsw i32 %19228, 1, !dbg !404
  store i32 %19229, ptr %10, align 4, !dbg !404
  %19230 = load i32, ptr %10, align 4, !dbg !364
  %19231 = load i32, ptr %8, align 4, !dbg !366
  %19232 = icmp slt i32 %19230, %19231, !dbg !367
  br i1 %19232, label %19233, label %48422, !dbg !368

19233:                                            ; preds = %19227
  %19234 = load i32, ptr %10, align 4, !dbg !369
  %19235 = sext i32 %19234 to i64, !dbg !371
  %19236 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19235, !dbg !371
  %19237 = load double, ptr %6, align 8, !dbg !372
  %19238 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19239 = load double, ptr %19238, align 8, !dbg !372
  %19240 = load double, ptr %19236, align 16, !dbg !372
  %19241 = getelementptr inbounds { double, double }, ptr %19236, i32 0, i32 1, !dbg !372
  %19242 = load double, ptr %19241, align 8, !dbg !372
  %19243 = call { double, double } @make_vec(double %19237, double %19239, double %19240, double %19242), !dbg !372
  %19244 = extractvalue { double, double } %19243, 0, !dbg !372
  store double %19244, ptr %16, align 8, !dbg !372
  %19245 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19246 = extractvalue { double, double } %19243, 1, !dbg !372
  store double %19246, ptr %19245, align 8, !dbg !372
  %19247 = load i32, ptr %10, align 4, !dbg !373
  %19248 = add nsw i32 %19247, 1, !dbg !374
  %19249 = sext i32 %19248 to i64, !dbg !375
  %19250 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19249, !dbg !375
  %19251 = load double, ptr %6, align 8, !dbg !376
  %19252 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19253 = load double, ptr %19252, align 8, !dbg !376
  %19254 = load double, ptr %19250, align 16, !dbg !376
  %19255 = getelementptr inbounds { double, double }, ptr %19250, i32 0, i32 1, !dbg !376
  %19256 = load double, ptr %19255, align 8, !dbg !376
  %19257 = call { double, double } @make_vec(double %19251, double %19253, double %19254, double %19256), !dbg !376
  %19258 = extractvalue { double, double } %19257, 0, !dbg !376
  store double %19258, ptr %17, align 8, !dbg !376
  %19259 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19260 = extractvalue { double, double } %19257, 1, !dbg !376
  store double %19260, ptr %19259, align 8, !dbg !376
  %19261 = load double, ptr %16, align 8, !dbg !377
  %19262 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19263 = load double, ptr %19262, align 8, !dbg !377
  %19264 = load double, ptr %17, align 8, !dbg !377
  %19265 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19266 = load double, ptr %19265, align 8, !dbg !377
  %19267 = call double @cross(double %19261, double %19263, double %19264, double %19266), !dbg !377
  %19268 = load i32, ptr %10, align 4, !dbg !378
  %19269 = sext i32 %19268 to i64, !dbg !379
  %19270 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19269, !dbg !379
  %19271 = load double, ptr %6, align 8, !dbg !380
  %19272 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19273 = load double, ptr %19272, align 8, !dbg !380
  %19274 = load double, ptr %19270, align 16, !dbg !380
  %19275 = getelementptr inbounds { double, double }, ptr %19270, i32 0, i32 1, !dbg !380
  %19276 = load double, ptr %19275, align 8, !dbg !380
  %19277 = call { double, double } @make_vec(double %19271, double %19273, double %19274, double %19276), !dbg !380
  %19278 = extractvalue { double, double } %19277, 0, !dbg !380
  store double %19278, ptr %18, align 8, !dbg !380
  %19279 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19280 = extractvalue { double, double } %19277, 1, !dbg !380
  store double %19280, ptr %19279, align 8, !dbg !380
  %19281 = load i32, ptr %10, align 4, !dbg !381
  %19282 = add nsw i32 %19281, 1, !dbg !382
  %19283 = sext i32 %19282 to i64, !dbg !383
  %19284 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19283, !dbg !383
  %19285 = load double, ptr %6, align 8, !dbg !384
  %19286 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19287 = load double, ptr %19286, align 8, !dbg !384
  %19288 = load double, ptr %19284, align 16, !dbg !384
  %19289 = getelementptr inbounds { double, double }, ptr %19284, i32 0, i32 1, !dbg !384
  %19290 = load double, ptr %19289, align 8, !dbg !384
  %19291 = call { double, double } @make_vec(double %19285, double %19287, double %19288, double %19290), !dbg !384
  %19292 = extractvalue { double, double } %19291, 0, !dbg !384
  store double %19292, ptr %19, align 8, !dbg !384
  %19293 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19294 = extractvalue { double, double } %19291, 1, !dbg !384
  store double %19294, ptr %19293, align 8, !dbg !384
  %19295 = load double, ptr %18, align 8, !dbg !385
  %19296 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19297 = load double, ptr %19296, align 8, !dbg !385
  %19298 = load double, ptr %19, align 8, !dbg !385
  %19299 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19300 = load double, ptr %19299, align 8, !dbg !385
  %19301 = call double @dot(double %19295, double %19297, double %19298, double %19300), !dbg !385
  %19302 = call double @atan2(double noundef %19267, double noundef %19301) #6, !dbg !386
  store double %19302, ptr %13, align 8, !dbg !387
  %19303 = load double, ptr %13, align 8, !dbg !388
  %19304 = load double, ptr %14, align 8, !dbg !389
  %19305 = fadd double %19304, %19303, !dbg !389
  store double %19305, ptr %14, align 8, !dbg !389
  %19306 = load double, ptr %13, align 8, !dbg !390
  %19307 = fsub double %19306, 0x400921FB54442D18, !dbg !392
  %19308 = call double @llvm.fabs.f64(double %19307), !dbg !393
  %19309 = fcmp ole double %19308, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19309, label %14330, label %19310, !dbg !395

19310:                                            ; preds = %19233
  %19311 = load double, ptr %13, align 8, !dbg !396
  %19312 = fadd double %19311, 0x400921FB54442D18, !dbg !397
  %19313 = call double @llvm.fabs.f64(double %19312), !dbg !398
  %19314 = fcmp ole double %19313, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19314, label %14330, label %19315, !dbg !400

19315:                                            ; preds = %19310
  br label %19316, !dbg !403

19316:                                            ; preds = %19315
  %19317 = load i32, ptr %10, align 4, !dbg !404
  %19318 = add nsw i32 %19317, 1, !dbg !404
  store i32 %19318, ptr %10, align 4, !dbg !404
  %19319 = load i32, ptr %10, align 4, !dbg !364
  %19320 = load i32, ptr %8, align 4, !dbg !366
  %19321 = icmp slt i32 %19319, %19320, !dbg !367
  br i1 %19321, label %19322, label %48422, !dbg !368

19322:                                            ; preds = %19316
  %19323 = load i32, ptr %10, align 4, !dbg !369
  %19324 = sext i32 %19323 to i64, !dbg !371
  %19325 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19324, !dbg !371
  %19326 = load double, ptr %6, align 8, !dbg !372
  %19327 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19328 = load double, ptr %19327, align 8, !dbg !372
  %19329 = load double, ptr %19325, align 16, !dbg !372
  %19330 = getelementptr inbounds { double, double }, ptr %19325, i32 0, i32 1, !dbg !372
  %19331 = load double, ptr %19330, align 8, !dbg !372
  %19332 = call { double, double } @make_vec(double %19326, double %19328, double %19329, double %19331), !dbg !372
  %19333 = extractvalue { double, double } %19332, 0, !dbg !372
  store double %19333, ptr %16, align 8, !dbg !372
  %19334 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19335 = extractvalue { double, double } %19332, 1, !dbg !372
  store double %19335, ptr %19334, align 8, !dbg !372
  %19336 = load i32, ptr %10, align 4, !dbg !373
  %19337 = add nsw i32 %19336, 1, !dbg !374
  %19338 = sext i32 %19337 to i64, !dbg !375
  %19339 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19338, !dbg !375
  %19340 = load double, ptr %6, align 8, !dbg !376
  %19341 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19342 = load double, ptr %19341, align 8, !dbg !376
  %19343 = load double, ptr %19339, align 16, !dbg !376
  %19344 = getelementptr inbounds { double, double }, ptr %19339, i32 0, i32 1, !dbg !376
  %19345 = load double, ptr %19344, align 8, !dbg !376
  %19346 = call { double, double } @make_vec(double %19340, double %19342, double %19343, double %19345), !dbg !376
  %19347 = extractvalue { double, double } %19346, 0, !dbg !376
  store double %19347, ptr %17, align 8, !dbg !376
  %19348 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19349 = extractvalue { double, double } %19346, 1, !dbg !376
  store double %19349, ptr %19348, align 8, !dbg !376
  %19350 = load double, ptr %16, align 8, !dbg !377
  %19351 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19352 = load double, ptr %19351, align 8, !dbg !377
  %19353 = load double, ptr %17, align 8, !dbg !377
  %19354 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19355 = load double, ptr %19354, align 8, !dbg !377
  %19356 = call double @cross(double %19350, double %19352, double %19353, double %19355), !dbg !377
  %19357 = load i32, ptr %10, align 4, !dbg !378
  %19358 = sext i32 %19357 to i64, !dbg !379
  %19359 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19358, !dbg !379
  %19360 = load double, ptr %6, align 8, !dbg !380
  %19361 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19362 = load double, ptr %19361, align 8, !dbg !380
  %19363 = load double, ptr %19359, align 16, !dbg !380
  %19364 = getelementptr inbounds { double, double }, ptr %19359, i32 0, i32 1, !dbg !380
  %19365 = load double, ptr %19364, align 8, !dbg !380
  %19366 = call { double, double } @make_vec(double %19360, double %19362, double %19363, double %19365), !dbg !380
  %19367 = extractvalue { double, double } %19366, 0, !dbg !380
  store double %19367, ptr %18, align 8, !dbg !380
  %19368 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19369 = extractvalue { double, double } %19366, 1, !dbg !380
  store double %19369, ptr %19368, align 8, !dbg !380
  %19370 = load i32, ptr %10, align 4, !dbg !381
  %19371 = add nsw i32 %19370, 1, !dbg !382
  %19372 = sext i32 %19371 to i64, !dbg !383
  %19373 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19372, !dbg !383
  %19374 = load double, ptr %6, align 8, !dbg !384
  %19375 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19376 = load double, ptr %19375, align 8, !dbg !384
  %19377 = load double, ptr %19373, align 16, !dbg !384
  %19378 = getelementptr inbounds { double, double }, ptr %19373, i32 0, i32 1, !dbg !384
  %19379 = load double, ptr %19378, align 8, !dbg !384
  %19380 = call { double, double } @make_vec(double %19374, double %19376, double %19377, double %19379), !dbg !384
  %19381 = extractvalue { double, double } %19380, 0, !dbg !384
  store double %19381, ptr %19, align 8, !dbg !384
  %19382 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19383 = extractvalue { double, double } %19380, 1, !dbg !384
  store double %19383, ptr %19382, align 8, !dbg !384
  %19384 = load double, ptr %18, align 8, !dbg !385
  %19385 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19386 = load double, ptr %19385, align 8, !dbg !385
  %19387 = load double, ptr %19, align 8, !dbg !385
  %19388 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19389 = load double, ptr %19388, align 8, !dbg !385
  %19390 = call double @dot(double %19384, double %19386, double %19387, double %19389), !dbg !385
  %19391 = call double @atan2(double noundef %19356, double noundef %19390) #6, !dbg !386
  store double %19391, ptr %13, align 8, !dbg !387
  %19392 = load double, ptr %13, align 8, !dbg !388
  %19393 = load double, ptr %14, align 8, !dbg !389
  %19394 = fadd double %19393, %19392, !dbg !389
  store double %19394, ptr %14, align 8, !dbg !389
  %19395 = load double, ptr %13, align 8, !dbg !390
  %19396 = fsub double %19395, 0x400921FB54442D18, !dbg !392
  %19397 = call double @llvm.fabs.f64(double %19396), !dbg !393
  %19398 = fcmp ole double %19397, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19398, label %14330, label %19399, !dbg !395

19399:                                            ; preds = %19322
  %19400 = load double, ptr %13, align 8, !dbg !396
  %19401 = fadd double %19400, 0x400921FB54442D18, !dbg !397
  %19402 = call double @llvm.fabs.f64(double %19401), !dbg !398
  %19403 = fcmp ole double %19402, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19403, label %14330, label %19404, !dbg !400

19404:                                            ; preds = %19399
  br label %19405, !dbg !403

19405:                                            ; preds = %19404
  %19406 = load i32, ptr %10, align 4, !dbg !404
  %19407 = add nsw i32 %19406, 1, !dbg !404
  store i32 %19407, ptr %10, align 4, !dbg !404
  %19408 = load i32, ptr %10, align 4, !dbg !364
  %19409 = load i32, ptr %8, align 4, !dbg !366
  %19410 = icmp slt i32 %19408, %19409, !dbg !367
  br i1 %19410, label %19411, label %48422, !dbg !368

19411:                                            ; preds = %19405
  %19412 = load i32, ptr %10, align 4, !dbg !369
  %19413 = sext i32 %19412 to i64, !dbg !371
  %19414 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19413, !dbg !371
  %19415 = load double, ptr %6, align 8, !dbg !372
  %19416 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19417 = load double, ptr %19416, align 8, !dbg !372
  %19418 = load double, ptr %19414, align 16, !dbg !372
  %19419 = getelementptr inbounds { double, double }, ptr %19414, i32 0, i32 1, !dbg !372
  %19420 = load double, ptr %19419, align 8, !dbg !372
  %19421 = call { double, double } @make_vec(double %19415, double %19417, double %19418, double %19420), !dbg !372
  %19422 = extractvalue { double, double } %19421, 0, !dbg !372
  store double %19422, ptr %16, align 8, !dbg !372
  %19423 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19424 = extractvalue { double, double } %19421, 1, !dbg !372
  store double %19424, ptr %19423, align 8, !dbg !372
  %19425 = load i32, ptr %10, align 4, !dbg !373
  %19426 = add nsw i32 %19425, 1, !dbg !374
  %19427 = sext i32 %19426 to i64, !dbg !375
  %19428 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19427, !dbg !375
  %19429 = load double, ptr %6, align 8, !dbg !376
  %19430 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19431 = load double, ptr %19430, align 8, !dbg !376
  %19432 = load double, ptr %19428, align 16, !dbg !376
  %19433 = getelementptr inbounds { double, double }, ptr %19428, i32 0, i32 1, !dbg !376
  %19434 = load double, ptr %19433, align 8, !dbg !376
  %19435 = call { double, double } @make_vec(double %19429, double %19431, double %19432, double %19434), !dbg !376
  %19436 = extractvalue { double, double } %19435, 0, !dbg !376
  store double %19436, ptr %17, align 8, !dbg !376
  %19437 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19438 = extractvalue { double, double } %19435, 1, !dbg !376
  store double %19438, ptr %19437, align 8, !dbg !376
  %19439 = load double, ptr %16, align 8, !dbg !377
  %19440 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19441 = load double, ptr %19440, align 8, !dbg !377
  %19442 = load double, ptr %17, align 8, !dbg !377
  %19443 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19444 = load double, ptr %19443, align 8, !dbg !377
  %19445 = call double @cross(double %19439, double %19441, double %19442, double %19444), !dbg !377
  %19446 = load i32, ptr %10, align 4, !dbg !378
  %19447 = sext i32 %19446 to i64, !dbg !379
  %19448 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19447, !dbg !379
  %19449 = load double, ptr %6, align 8, !dbg !380
  %19450 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19451 = load double, ptr %19450, align 8, !dbg !380
  %19452 = load double, ptr %19448, align 16, !dbg !380
  %19453 = getelementptr inbounds { double, double }, ptr %19448, i32 0, i32 1, !dbg !380
  %19454 = load double, ptr %19453, align 8, !dbg !380
  %19455 = call { double, double } @make_vec(double %19449, double %19451, double %19452, double %19454), !dbg !380
  %19456 = extractvalue { double, double } %19455, 0, !dbg !380
  store double %19456, ptr %18, align 8, !dbg !380
  %19457 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19458 = extractvalue { double, double } %19455, 1, !dbg !380
  store double %19458, ptr %19457, align 8, !dbg !380
  %19459 = load i32, ptr %10, align 4, !dbg !381
  %19460 = add nsw i32 %19459, 1, !dbg !382
  %19461 = sext i32 %19460 to i64, !dbg !383
  %19462 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19461, !dbg !383
  %19463 = load double, ptr %6, align 8, !dbg !384
  %19464 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19465 = load double, ptr %19464, align 8, !dbg !384
  %19466 = load double, ptr %19462, align 16, !dbg !384
  %19467 = getelementptr inbounds { double, double }, ptr %19462, i32 0, i32 1, !dbg !384
  %19468 = load double, ptr %19467, align 8, !dbg !384
  %19469 = call { double, double } @make_vec(double %19463, double %19465, double %19466, double %19468), !dbg !384
  %19470 = extractvalue { double, double } %19469, 0, !dbg !384
  store double %19470, ptr %19, align 8, !dbg !384
  %19471 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19472 = extractvalue { double, double } %19469, 1, !dbg !384
  store double %19472, ptr %19471, align 8, !dbg !384
  %19473 = load double, ptr %18, align 8, !dbg !385
  %19474 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19475 = load double, ptr %19474, align 8, !dbg !385
  %19476 = load double, ptr %19, align 8, !dbg !385
  %19477 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19478 = load double, ptr %19477, align 8, !dbg !385
  %19479 = call double @dot(double %19473, double %19475, double %19476, double %19478), !dbg !385
  %19480 = call double @atan2(double noundef %19445, double noundef %19479) #6, !dbg !386
  store double %19480, ptr %13, align 8, !dbg !387
  %19481 = load double, ptr %13, align 8, !dbg !388
  %19482 = load double, ptr %14, align 8, !dbg !389
  %19483 = fadd double %19482, %19481, !dbg !389
  store double %19483, ptr %14, align 8, !dbg !389
  %19484 = load double, ptr %13, align 8, !dbg !390
  %19485 = fsub double %19484, 0x400921FB54442D18, !dbg !392
  %19486 = call double @llvm.fabs.f64(double %19485), !dbg !393
  %19487 = fcmp ole double %19486, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19487, label %14330, label %19488, !dbg !395

19488:                                            ; preds = %19411
  %19489 = load double, ptr %13, align 8, !dbg !396
  %19490 = fadd double %19489, 0x400921FB54442D18, !dbg !397
  %19491 = call double @llvm.fabs.f64(double %19490), !dbg !398
  %19492 = fcmp ole double %19491, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19492, label %14330, label %19493, !dbg !400

19493:                                            ; preds = %19488
  br label %19494, !dbg !403

19494:                                            ; preds = %19493
  %19495 = load i32, ptr %10, align 4, !dbg !404
  %19496 = add nsw i32 %19495, 1, !dbg !404
  store i32 %19496, ptr %10, align 4, !dbg !404
  %19497 = load i32, ptr %10, align 4, !dbg !364
  %19498 = load i32, ptr %8, align 4, !dbg !366
  %19499 = icmp slt i32 %19497, %19498, !dbg !367
  br i1 %19499, label %19500, label %48422, !dbg !368

19500:                                            ; preds = %19494
  %19501 = load i32, ptr %10, align 4, !dbg !369
  %19502 = sext i32 %19501 to i64, !dbg !371
  %19503 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19502, !dbg !371
  %19504 = load double, ptr %6, align 8, !dbg !372
  %19505 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19506 = load double, ptr %19505, align 8, !dbg !372
  %19507 = load double, ptr %19503, align 16, !dbg !372
  %19508 = getelementptr inbounds { double, double }, ptr %19503, i32 0, i32 1, !dbg !372
  %19509 = load double, ptr %19508, align 8, !dbg !372
  %19510 = call { double, double } @make_vec(double %19504, double %19506, double %19507, double %19509), !dbg !372
  %19511 = extractvalue { double, double } %19510, 0, !dbg !372
  store double %19511, ptr %16, align 8, !dbg !372
  %19512 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19513 = extractvalue { double, double } %19510, 1, !dbg !372
  store double %19513, ptr %19512, align 8, !dbg !372
  %19514 = load i32, ptr %10, align 4, !dbg !373
  %19515 = add nsw i32 %19514, 1, !dbg !374
  %19516 = sext i32 %19515 to i64, !dbg !375
  %19517 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19516, !dbg !375
  %19518 = load double, ptr %6, align 8, !dbg !376
  %19519 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19520 = load double, ptr %19519, align 8, !dbg !376
  %19521 = load double, ptr %19517, align 16, !dbg !376
  %19522 = getelementptr inbounds { double, double }, ptr %19517, i32 0, i32 1, !dbg !376
  %19523 = load double, ptr %19522, align 8, !dbg !376
  %19524 = call { double, double } @make_vec(double %19518, double %19520, double %19521, double %19523), !dbg !376
  %19525 = extractvalue { double, double } %19524, 0, !dbg !376
  store double %19525, ptr %17, align 8, !dbg !376
  %19526 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19527 = extractvalue { double, double } %19524, 1, !dbg !376
  store double %19527, ptr %19526, align 8, !dbg !376
  %19528 = load double, ptr %16, align 8, !dbg !377
  %19529 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19530 = load double, ptr %19529, align 8, !dbg !377
  %19531 = load double, ptr %17, align 8, !dbg !377
  %19532 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19533 = load double, ptr %19532, align 8, !dbg !377
  %19534 = call double @cross(double %19528, double %19530, double %19531, double %19533), !dbg !377
  %19535 = load i32, ptr %10, align 4, !dbg !378
  %19536 = sext i32 %19535 to i64, !dbg !379
  %19537 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19536, !dbg !379
  %19538 = load double, ptr %6, align 8, !dbg !380
  %19539 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19540 = load double, ptr %19539, align 8, !dbg !380
  %19541 = load double, ptr %19537, align 16, !dbg !380
  %19542 = getelementptr inbounds { double, double }, ptr %19537, i32 0, i32 1, !dbg !380
  %19543 = load double, ptr %19542, align 8, !dbg !380
  %19544 = call { double, double } @make_vec(double %19538, double %19540, double %19541, double %19543), !dbg !380
  %19545 = extractvalue { double, double } %19544, 0, !dbg !380
  store double %19545, ptr %18, align 8, !dbg !380
  %19546 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19547 = extractvalue { double, double } %19544, 1, !dbg !380
  store double %19547, ptr %19546, align 8, !dbg !380
  %19548 = load i32, ptr %10, align 4, !dbg !381
  %19549 = add nsw i32 %19548, 1, !dbg !382
  %19550 = sext i32 %19549 to i64, !dbg !383
  %19551 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19550, !dbg !383
  %19552 = load double, ptr %6, align 8, !dbg !384
  %19553 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19554 = load double, ptr %19553, align 8, !dbg !384
  %19555 = load double, ptr %19551, align 16, !dbg !384
  %19556 = getelementptr inbounds { double, double }, ptr %19551, i32 0, i32 1, !dbg !384
  %19557 = load double, ptr %19556, align 8, !dbg !384
  %19558 = call { double, double } @make_vec(double %19552, double %19554, double %19555, double %19557), !dbg !384
  %19559 = extractvalue { double, double } %19558, 0, !dbg !384
  store double %19559, ptr %19, align 8, !dbg !384
  %19560 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19561 = extractvalue { double, double } %19558, 1, !dbg !384
  store double %19561, ptr %19560, align 8, !dbg !384
  %19562 = load double, ptr %18, align 8, !dbg !385
  %19563 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19564 = load double, ptr %19563, align 8, !dbg !385
  %19565 = load double, ptr %19, align 8, !dbg !385
  %19566 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19567 = load double, ptr %19566, align 8, !dbg !385
  %19568 = call double @dot(double %19562, double %19564, double %19565, double %19567), !dbg !385
  %19569 = call double @atan2(double noundef %19534, double noundef %19568) #6, !dbg !386
  store double %19569, ptr %13, align 8, !dbg !387
  %19570 = load double, ptr %13, align 8, !dbg !388
  %19571 = load double, ptr %14, align 8, !dbg !389
  %19572 = fadd double %19571, %19570, !dbg !389
  store double %19572, ptr %14, align 8, !dbg !389
  %19573 = load double, ptr %13, align 8, !dbg !390
  %19574 = fsub double %19573, 0x400921FB54442D18, !dbg !392
  %19575 = call double @llvm.fabs.f64(double %19574), !dbg !393
  %19576 = fcmp ole double %19575, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19576, label %14330, label %19577, !dbg !395

19577:                                            ; preds = %19500
  %19578 = load double, ptr %13, align 8, !dbg !396
  %19579 = fadd double %19578, 0x400921FB54442D18, !dbg !397
  %19580 = call double @llvm.fabs.f64(double %19579), !dbg !398
  %19581 = fcmp ole double %19580, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19581, label %14330, label %19582, !dbg !400

19582:                                            ; preds = %19577
  br label %19583, !dbg !403

19583:                                            ; preds = %19582
  %19584 = load i32, ptr %10, align 4, !dbg !404
  %19585 = add nsw i32 %19584, 1, !dbg !404
  store i32 %19585, ptr %10, align 4, !dbg !404
  %19586 = load i32, ptr %10, align 4, !dbg !364
  %19587 = load i32, ptr %8, align 4, !dbg !366
  %19588 = icmp slt i32 %19586, %19587, !dbg !367
  br i1 %19588, label %19589, label %48422, !dbg !368

19589:                                            ; preds = %19583
  %19590 = load i32, ptr %10, align 4, !dbg !369
  %19591 = sext i32 %19590 to i64, !dbg !371
  %19592 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19591, !dbg !371
  %19593 = load double, ptr %6, align 8, !dbg !372
  %19594 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19595 = load double, ptr %19594, align 8, !dbg !372
  %19596 = load double, ptr %19592, align 16, !dbg !372
  %19597 = getelementptr inbounds { double, double }, ptr %19592, i32 0, i32 1, !dbg !372
  %19598 = load double, ptr %19597, align 8, !dbg !372
  %19599 = call { double, double } @make_vec(double %19593, double %19595, double %19596, double %19598), !dbg !372
  %19600 = extractvalue { double, double } %19599, 0, !dbg !372
  store double %19600, ptr %16, align 8, !dbg !372
  %19601 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19602 = extractvalue { double, double } %19599, 1, !dbg !372
  store double %19602, ptr %19601, align 8, !dbg !372
  %19603 = load i32, ptr %10, align 4, !dbg !373
  %19604 = add nsw i32 %19603, 1, !dbg !374
  %19605 = sext i32 %19604 to i64, !dbg !375
  %19606 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19605, !dbg !375
  %19607 = load double, ptr %6, align 8, !dbg !376
  %19608 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19609 = load double, ptr %19608, align 8, !dbg !376
  %19610 = load double, ptr %19606, align 16, !dbg !376
  %19611 = getelementptr inbounds { double, double }, ptr %19606, i32 0, i32 1, !dbg !376
  %19612 = load double, ptr %19611, align 8, !dbg !376
  %19613 = call { double, double } @make_vec(double %19607, double %19609, double %19610, double %19612), !dbg !376
  %19614 = extractvalue { double, double } %19613, 0, !dbg !376
  store double %19614, ptr %17, align 8, !dbg !376
  %19615 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19616 = extractvalue { double, double } %19613, 1, !dbg !376
  store double %19616, ptr %19615, align 8, !dbg !376
  %19617 = load double, ptr %16, align 8, !dbg !377
  %19618 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19619 = load double, ptr %19618, align 8, !dbg !377
  %19620 = load double, ptr %17, align 8, !dbg !377
  %19621 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19622 = load double, ptr %19621, align 8, !dbg !377
  %19623 = call double @cross(double %19617, double %19619, double %19620, double %19622), !dbg !377
  %19624 = load i32, ptr %10, align 4, !dbg !378
  %19625 = sext i32 %19624 to i64, !dbg !379
  %19626 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19625, !dbg !379
  %19627 = load double, ptr %6, align 8, !dbg !380
  %19628 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19629 = load double, ptr %19628, align 8, !dbg !380
  %19630 = load double, ptr %19626, align 16, !dbg !380
  %19631 = getelementptr inbounds { double, double }, ptr %19626, i32 0, i32 1, !dbg !380
  %19632 = load double, ptr %19631, align 8, !dbg !380
  %19633 = call { double, double } @make_vec(double %19627, double %19629, double %19630, double %19632), !dbg !380
  %19634 = extractvalue { double, double } %19633, 0, !dbg !380
  store double %19634, ptr %18, align 8, !dbg !380
  %19635 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19636 = extractvalue { double, double } %19633, 1, !dbg !380
  store double %19636, ptr %19635, align 8, !dbg !380
  %19637 = load i32, ptr %10, align 4, !dbg !381
  %19638 = add nsw i32 %19637, 1, !dbg !382
  %19639 = sext i32 %19638 to i64, !dbg !383
  %19640 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19639, !dbg !383
  %19641 = load double, ptr %6, align 8, !dbg !384
  %19642 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19643 = load double, ptr %19642, align 8, !dbg !384
  %19644 = load double, ptr %19640, align 16, !dbg !384
  %19645 = getelementptr inbounds { double, double }, ptr %19640, i32 0, i32 1, !dbg !384
  %19646 = load double, ptr %19645, align 8, !dbg !384
  %19647 = call { double, double } @make_vec(double %19641, double %19643, double %19644, double %19646), !dbg !384
  %19648 = extractvalue { double, double } %19647, 0, !dbg !384
  store double %19648, ptr %19, align 8, !dbg !384
  %19649 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19650 = extractvalue { double, double } %19647, 1, !dbg !384
  store double %19650, ptr %19649, align 8, !dbg !384
  %19651 = load double, ptr %18, align 8, !dbg !385
  %19652 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19653 = load double, ptr %19652, align 8, !dbg !385
  %19654 = load double, ptr %19, align 8, !dbg !385
  %19655 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19656 = load double, ptr %19655, align 8, !dbg !385
  %19657 = call double @dot(double %19651, double %19653, double %19654, double %19656), !dbg !385
  %19658 = call double @atan2(double noundef %19623, double noundef %19657) #6, !dbg !386
  store double %19658, ptr %13, align 8, !dbg !387
  %19659 = load double, ptr %13, align 8, !dbg !388
  %19660 = load double, ptr %14, align 8, !dbg !389
  %19661 = fadd double %19660, %19659, !dbg !389
  store double %19661, ptr %14, align 8, !dbg !389
  %19662 = load double, ptr %13, align 8, !dbg !390
  %19663 = fsub double %19662, 0x400921FB54442D18, !dbg !392
  %19664 = call double @llvm.fabs.f64(double %19663), !dbg !393
  %19665 = fcmp ole double %19664, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19665, label %14330, label %19666, !dbg !395

19666:                                            ; preds = %19589
  %19667 = load double, ptr %13, align 8, !dbg !396
  %19668 = fadd double %19667, 0x400921FB54442D18, !dbg !397
  %19669 = call double @llvm.fabs.f64(double %19668), !dbg !398
  %19670 = fcmp ole double %19669, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19670, label %14330, label %19671, !dbg !400

19671:                                            ; preds = %19666
  br label %19672, !dbg !403

19672:                                            ; preds = %19671
  %19673 = load i32, ptr %10, align 4, !dbg !404
  %19674 = add nsw i32 %19673, 1, !dbg !404
  store i32 %19674, ptr %10, align 4, !dbg !404
  %19675 = load i32, ptr %10, align 4, !dbg !364
  %19676 = load i32, ptr %8, align 4, !dbg !366
  %19677 = icmp slt i32 %19675, %19676, !dbg !367
  br i1 %19677, label %19678, label %48422, !dbg !368

19678:                                            ; preds = %19672
  %19679 = load i32, ptr %10, align 4, !dbg !369
  %19680 = sext i32 %19679 to i64, !dbg !371
  %19681 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19680, !dbg !371
  %19682 = load double, ptr %6, align 8, !dbg !372
  %19683 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19684 = load double, ptr %19683, align 8, !dbg !372
  %19685 = load double, ptr %19681, align 16, !dbg !372
  %19686 = getelementptr inbounds { double, double }, ptr %19681, i32 0, i32 1, !dbg !372
  %19687 = load double, ptr %19686, align 8, !dbg !372
  %19688 = call { double, double } @make_vec(double %19682, double %19684, double %19685, double %19687), !dbg !372
  %19689 = extractvalue { double, double } %19688, 0, !dbg !372
  store double %19689, ptr %16, align 8, !dbg !372
  %19690 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19691 = extractvalue { double, double } %19688, 1, !dbg !372
  store double %19691, ptr %19690, align 8, !dbg !372
  %19692 = load i32, ptr %10, align 4, !dbg !373
  %19693 = add nsw i32 %19692, 1, !dbg !374
  %19694 = sext i32 %19693 to i64, !dbg !375
  %19695 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19694, !dbg !375
  %19696 = load double, ptr %6, align 8, !dbg !376
  %19697 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19698 = load double, ptr %19697, align 8, !dbg !376
  %19699 = load double, ptr %19695, align 16, !dbg !376
  %19700 = getelementptr inbounds { double, double }, ptr %19695, i32 0, i32 1, !dbg !376
  %19701 = load double, ptr %19700, align 8, !dbg !376
  %19702 = call { double, double } @make_vec(double %19696, double %19698, double %19699, double %19701), !dbg !376
  %19703 = extractvalue { double, double } %19702, 0, !dbg !376
  store double %19703, ptr %17, align 8, !dbg !376
  %19704 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19705 = extractvalue { double, double } %19702, 1, !dbg !376
  store double %19705, ptr %19704, align 8, !dbg !376
  %19706 = load double, ptr %16, align 8, !dbg !377
  %19707 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19708 = load double, ptr %19707, align 8, !dbg !377
  %19709 = load double, ptr %17, align 8, !dbg !377
  %19710 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19711 = load double, ptr %19710, align 8, !dbg !377
  %19712 = call double @cross(double %19706, double %19708, double %19709, double %19711), !dbg !377
  %19713 = load i32, ptr %10, align 4, !dbg !378
  %19714 = sext i32 %19713 to i64, !dbg !379
  %19715 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19714, !dbg !379
  %19716 = load double, ptr %6, align 8, !dbg !380
  %19717 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19718 = load double, ptr %19717, align 8, !dbg !380
  %19719 = load double, ptr %19715, align 16, !dbg !380
  %19720 = getelementptr inbounds { double, double }, ptr %19715, i32 0, i32 1, !dbg !380
  %19721 = load double, ptr %19720, align 8, !dbg !380
  %19722 = call { double, double } @make_vec(double %19716, double %19718, double %19719, double %19721), !dbg !380
  %19723 = extractvalue { double, double } %19722, 0, !dbg !380
  store double %19723, ptr %18, align 8, !dbg !380
  %19724 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19725 = extractvalue { double, double } %19722, 1, !dbg !380
  store double %19725, ptr %19724, align 8, !dbg !380
  %19726 = load i32, ptr %10, align 4, !dbg !381
  %19727 = add nsw i32 %19726, 1, !dbg !382
  %19728 = sext i32 %19727 to i64, !dbg !383
  %19729 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19728, !dbg !383
  %19730 = load double, ptr %6, align 8, !dbg !384
  %19731 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19732 = load double, ptr %19731, align 8, !dbg !384
  %19733 = load double, ptr %19729, align 16, !dbg !384
  %19734 = getelementptr inbounds { double, double }, ptr %19729, i32 0, i32 1, !dbg !384
  %19735 = load double, ptr %19734, align 8, !dbg !384
  %19736 = call { double, double } @make_vec(double %19730, double %19732, double %19733, double %19735), !dbg !384
  %19737 = extractvalue { double, double } %19736, 0, !dbg !384
  store double %19737, ptr %19, align 8, !dbg !384
  %19738 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19739 = extractvalue { double, double } %19736, 1, !dbg !384
  store double %19739, ptr %19738, align 8, !dbg !384
  %19740 = load double, ptr %18, align 8, !dbg !385
  %19741 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19742 = load double, ptr %19741, align 8, !dbg !385
  %19743 = load double, ptr %19, align 8, !dbg !385
  %19744 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19745 = load double, ptr %19744, align 8, !dbg !385
  %19746 = call double @dot(double %19740, double %19742, double %19743, double %19745), !dbg !385
  %19747 = call double @atan2(double noundef %19712, double noundef %19746) #6, !dbg !386
  store double %19747, ptr %13, align 8, !dbg !387
  %19748 = load double, ptr %13, align 8, !dbg !388
  %19749 = load double, ptr %14, align 8, !dbg !389
  %19750 = fadd double %19749, %19748, !dbg !389
  store double %19750, ptr %14, align 8, !dbg !389
  %19751 = load double, ptr %13, align 8, !dbg !390
  %19752 = fsub double %19751, 0x400921FB54442D18, !dbg !392
  %19753 = call double @llvm.fabs.f64(double %19752), !dbg !393
  %19754 = fcmp ole double %19753, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19754, label %14330, label %19755, !dbg !395

19755:                                            ; preds = %19678
  %19756 = load double, ptr %13, align 8, !dbg !396
  %19757 = fadd double %19756, 0x400921FB54442D18, !dbg !397
  %19758 = call double @llvm.fabs.f64(double %19757), !dbg !398
  %19759 = fcmp ole double %19758, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19759, label %14330, label %19760, !dbg !400

19760:                                            ; preds = %19755
  br label %19761, !dbg !403

19761:                                            ; preds = %19760
  %19762 = load i32, ptr %10, align 4, !dbg !404
  %19763 = add nsw i32 %19762, 1, !dbg !404
  store i32 %19763, ptr %10, align 4, !dbg !404
  %19764 = load i32, ptr %10, align 4, !dbg !364
  %19765 = load i32, ptr %8, align 4, !dbg !366
  %19766 = icmp slt i32 %19764, %19765, !dbg !367
  br i1 %19766, label %19767, label %48422, !dbg !368

19767:                                            ; preds = %19761
  %19768 = load i32, ptr %10, align 4, !dbg !369
  %19769 = sext i32 %19768 to i64, !dbg !371
  %19770 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19769, !dbg !371
  %19771 = load double, ptr %6, align 8, !dbg !372
  %19772 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19773 = load double, ptr %19772, align 8, !dbg !372
  %19774 = load double, ptr %19770, align 16, !dbg !372
  %19775 = getelementptr inbounds { double, double }, ptr %19770, i32 0, i32 1, !dbg !372
  %19776 = load double, ptr %19775, align 8, !dbg !372
  %19777 = call { double, double } @make_vec(double %19771, double %19773, double %19774, double %19776), !dbg !372
  %19778 = extractvalue { double, double } %19777, 0, !dbg !372
  store double %19778, ptr %16, align 8, !dbg !372
  %19779 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19780 = extractvalue { double, double } %19777, 1, !dbg !372
  store double %19780, ptr %19779, align 8, !dbg !372
  %19781 = load i32, ptr %10, align 4, !dbg !373
  %19782 = add nsw i32 %19781, 1, !dbg !374
  %19783 = sext i32 %19782 to i64, !dbg !375
  %19784 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19783, !dbg !375
  %19785 = load double, ptr %6, align 8, !dbg !376
  %19786 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19787 = load double, ptr %19786, align 8, !dbg !376
  %19788 = load double, ptr %19784, align 16, !dbg !376
  %19789 = getelementptr inbounds { double, double }, ptr %19784, i32 0, i32 1, !dbg !376
  %19790 = load double, ptr %19789, align 8, !dbg !376
  %19791 = call { double, double } @make_vec(double %19785, double %19787, double %19788, double %19790), !dbg !376
  %19792 = extractvalue { double, double } %19791, 0, !dbg !376
  store double %19792, ptr %17, align 8, !dbg !376
  %19793 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19794 = extractvalue { double, double } %19791, 1, !dbg !376
  store double %19794, ptr %19793, align 8, !dbg !376
  %19795 = load double, ptr %16, align 8, !dbg !377
  %19796 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19797 = load double, ptr %19796, align 8, !dbg !377
  %19798 = load double, ptr %17, align 8, !dbg !377
  %19799 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19800 = load double, ptr %19799, align 8, !dbg !377
  %19801 = call double @cross(double %19795, double %19797, double %19798, double %19800), !dbg !377
  %19802 = load i32, ptr %10, align 4, !dbg !378
  %19803 = sext i32 %19802 to i64, !dbg !379
  %19804 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19803, !dbg !379
  %19805 = load double, ptr %6, align 8, !dbg !380
  %19806 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19807 = load double, ptr %19806, align 8, !dbg !380
  %19808 = load double, ptr %19804, align 16, !dbg !380
  %19809 = getelementptr inbounds { double, double }, ptr %19804, i32 0, i32 1, !dbg !380
  %19810 = load double, ptr %19809, align 8, !dbg !380
  %19811 = call { double, double } @make_vec(double %19805, double %19807, double %19808, double %19810), !dbg !380
  %19812 = extractvalue { double, double } %19811, 0, !dbg !380
  store double %19812, ptr %18, align 8, !dbg !380
  %19813 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19814 = extractvalue { double, double } %19811, 1, !dbg !380
  store double %19814, ptr %19813, align 8, !dbg !380
  %19815 = load i32, ptr %10, align 4, !dbg !381
  %19816 = add nsw i32 %19815, 1, !dbg !382
  %19817 = sext i32 %19816 to i64, !dbg !383
  %19818 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19817, !dbg !383
  %19819 = load double, ptr %6, align 8, !dbg !384
  %19820 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19821 = load double, ptr %19820, align 8, !dbg !384
  %19822 = load double, ptr %19818, align 16, !dbg !384
  %19823 = getelementptr inbounds { double, double }, ptr %19818, i32 0, i32 1, !dbg !384
  %19824 = load double, ptr %19823, align 8, !dbg !384
  %19825 = call { double, double } @make_vec(double %19819, double %19821, double %19822, double %19824), !dbg !384
  %19826 = extractvalue { double, double } %19825, 0, !dbg !384
  store double %19826, ptr %19, align 8, !dbg !384
  %19827 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19828 = extractvalue { double, double } %19825, 1, !dbg !384
  store double %19828, ptr %19827, align 8, !dbg !384
  %19829 = load double, ptr %18, align 8, !dbg !385
  %19830 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19831 = load double, ptr %19830, align 8, !dbg !385
  %19832 = load double, ptr %19, align 8, !dbg !385
  %19833 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19834 = load double, ptr %19833, align 8, !dbg !385
  %19835 = call double @dot(double %19829, double %19831, double %19832, double %19834), !dbg !385
  %19836 = call double @atan2(double noundef %19801, double noundef %19835) #6, !dbg !386
  store double %19836, ptr %13, align 8, !dbg !387
  %19837 = load double, ptr %13, align 8, !dbg !388
  %19838 = load double, ptr %14, align 8, !dbg !389
  %19839 = fadd double %19838, %19837, !dbg !389
  store double %19839, ptr %14, align 8, !dbg !389
  %19840 = load double, ptr %13, align 8, !dbg !390
  %19841 = fsub double %19840, 0x400921FB54442D18, !dbg !392
  %19842 = call double @llvm.fabs.f64(double %19841), !dbg !393
  %19843 = fcmp ole double %19842, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19843, label %14330, label %19844, !dbg !395

19844:                                            ; preds = %19767
  %19845 = load double, ptr %13, align 8, !dbg !396
  %19846 = fadd double %19845, 0x400921FB54442D18, !dbg !397
  %19847 = call double @llvm.fabs.f64(double %19846), !dbg !398
  %19848 = fcmp ole double %19847, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19848, label %14330, label %19849, !dbg !400

19849:                                            ; preds = %19844
  br label %19850, !dbg !403

19850:                                            ; preds = %19849
  %19851 = load i32, ptr %10, align 4, !dbg !404
  %19852 = add nsw i32 %19851, 1, !dbg !404
  store i32 %19852, ptr %10, align 4, !dbg !404
  %19853 = load i32, ptr %10, align 4, !dbg !364
  %19854 = load i32, ptr %8, align 4, !dbg !366
  %19855 = icmp slt i32 %19853, %19854, !dbg !367
  br i1 %19855, label %19856, label %48422, !dbg !368

19856:                                            ; preds = %19850
  %19857 = load i32, ptr %10, align 4, !dbg !369
  %19858 = sext i32 %19857 to i64, !dbg !371
  %19859 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19858, !dbg !371
  %19860 = load double, ptr %6, align 8, !dbg !372
  %19861 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19862 = load double, ptr %19861, align 8, !dbg !372
  %19863 = load double, ptr %19859, align 16, !dbg !372
  %19864 = getelementptr inbounds { double, double }, ptr %19859, i32 0, i32 1, !dbg !372
  %19865 = load double, ptr %19864, align 8, !dbg !372
  %19866 = call { double, double } @make_vec(double %19860, double %19862, double %19863, double %19865), !dbg !372
  %19867 = extractvalue { double, double } %19866, 0, !dbg !372
  store double %19867, ptr %16, align 8, !dbg !372
  %19868 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19869 = extractvalue { double, double } %19866, 1, !dbg !372
  store double %19869, ptr %19868, align 8, !dbg !372
  %19870 = load i32, ptr %10, align 4, !dbg !373
  %19871 = add nsw i32 %19870, 1, !dbg !374
  %19872 = sext i32 %19871 to i64, !dbg !375
  %19873 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19872, !dbg !375
  %19874 = load double, ptr %6, align 8, !dbg !376
  %19875 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19876 = load double, ptr %19875, align 8, !dbg !376
  %19877 = load double, ptr %19873, align 16, !dbg !376
  %19878 = getelementptr inbounds { double, double }, ptr %19873, i32 0, i32 1, !dbg !376
  %19879 = load double, ptr %19878, align 8, !dbg !376
  %19880 = call { double, double } @make_vec(double %19874, double %19876, double %19877, double %19879), !dbg !376
  %19881 = extractvalue { double, double } %19880, 0, !dbg !376
  store double %19881, ptr %17, align 8, !dbg !376
  %19882 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19883 = extractvalue { double, double } %19880, 1, !dbg !376
  store double %19883, ptr %19882, align 8, !dbg !376
  %19884 = load double, ptr %16, align 8, !dbg !377
  %19885 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19886 = load double, ptr %19885, align 8, !dbg !377
  %19887 = load double, ptr %17, align 8, !dbg !377
  %19888 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19889 = load double, ptr %19888, align 8, !dbg !377
  %19890 = call double @cross(double %19884, double %19886, double %19887, double %19889), !dbg !377
  %19891 = load i32, ptr %10, align 4, !dbg !378
  %19892 = sext i32 %19891 to i64, !dbg !379
  %19893 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19892, !dbg !379
  %19894 = load double, ptr %6, align 8, !dbg !380
  %19895 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19896 = load double, ptr %19895, align 8, !dbg !380
  %19897 = load double, ptr %19893, align 16, !dbg !380
  %19898 = getelementptr inbounds { double, double }, ptr %19893, i32 0, i32 1, !dbg !380
  %19899 = load double, ptr %19898, align 8, !dbg !380
  %19900 = call { double, double } @make_vec(double %19894, double %19896, double %19897, double %19899), !dbg !380
  %19901 = extractvalue { double, double } %19900, 0, !dbg !380
  store double %19901, ptr %18, align 8, !dbg !380
  %19902 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19903 = extractvalue { double, double } %19900, 1, !dbg !380
  store double %19903, ptr %19902, align 8, !dbg !380
  %19904 = load i32, ptr %10, align 4, !dbg !381
  %19905 = add nsw i32 %19904, 1, !dbg !382
  %19906 = sext i32 %19905 to i64, !dbg !383
  %19907 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19906, !dbg !383
  %19908 = load double, ptr %6, align 8, !dbg !384
  %19909 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19910 = load double, ptr %19909, align 8, !dbg !384
  %19911 = load double, ptr %19907, align 16, !dbg !384
  %19912 = getelementptr inbounds { double, double }, ptr %19907, i32 0, i32 1, !dbg !384
  %19913 = load double, ptr %19912, align 8, !dbg !384
  %19914 = call { double, double } @make_vec(double %19908, double %19910, double %19911, double %19913), !dbg !384
  %19915 = extractvalue { double, double } %19914, 0, !dbg !384
  store double %19915, ptr %19, align 8, !dbg !384
  %19916 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %19917 = extractvalue { double, double } %19914, 1, !dbg !384
  store double %19917, ptr %19916, align 8, !dbg !384
  %19918 = load double, ptr %18, align 8, !dbg !385
  %19919 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %19920 = load double, ptr %19919, align 8, !dbg !385
  %19921 = load double, ptr %19, align 8, !dbg !385
  %19922 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %19923 = load double, ptr %19922, align 8, !dbg !385
  %19924 = call double @dot(double %19918, double %19920, double %19921, double %19923), !dbg !385
  %19925 = call double @atan2(double noundef %19890, double noundef %19924) #6, !dbg !386
  store double %19925, ptr %13, align 8, !dbg !387
  %19926 = load double, ptr %13, align 8, !dbg !388
  %19927 = load double, ptr %14, align 8, !dbg !389
  %19928 = fadd double %19927, %19926, !dbg !389
  store double %19928, ptr %14, align 8, !dbg !389
  %19929 = load double, ptr %13, align 8, !dbg !390
  %19930 = fsub double %19929, 0x400921FB54442D18, !dbg !392
  %19931 = call double @llvm.fabs.f64(double %19930), !dbg !393
  %19932 = fcmp ole double %19931, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %19932, label %14330, label %19933, !dbg !395

19933:                                            ; preds = %19856
  %19934 = load double, ptr %13, align 8, !dbg !396
  %19935 = fadd double %19934, 0x400921FB54442D18, !dbg !397
  %19936 = call double @llvm.fabs.f64(double %19935), !dbg !398
  %19937 = fcmp ole double %19936, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %19937, label %14330, label %19938, !dbg !400

19938:                                            ; preds = %19933
  br label %19939, !dbg !403

19939:                                            ; preds = %19938
  %19940 = load i32, ptr %10, align 4, !dbg !404
  %19941 = add nsw i32 %19940, 1, !dbg !404
  store i32 %19941, ptr %10, align 4, !dbg !404
  %19942 = load i32, ptr %10, align 4, !dbg !364
  %19943 = load i32, ptr %8, align 4, !dbg !366
  %19944 = icmp slt i32 %19942, %19943, !dbg !367
  br i1 %19944, label %19945, label %48422, !dbg !368

19945:                                            ; preds = %19939
  %19946 = load i32, ptr %10, align 4, !dbg !369
  %19947 = sext i32 %19946 to i64, !dbg !371
  %19948 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19947, !dbg !371
  %19949 = load double, ptr %6, align 8, !dbg !372
  %19950 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %19951 = load double, ptr %19950, align 8, !dbg !372
  %19952 = load double, ptr %19948, align 16, !dbg !372
  %19953 = getelementptr inbounds { double, double }, ptr %19948, i32 0, i32 1, !dbg !372
  %19954 = load double, ptr %19953, align 8, !dbg !372
  %19955 = call { double, double } @make_vec(double %19949, double %19951, double %19952, double %19954), !dbg !372
  %19956 = extractvalue { double, double } %19955, 0, !dbg !372
  store double %19956, ptr %16, align 8, !dbg !372
  %19957 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %19958 = extractvalue { double, double } %19955, 1, !dbg !372
  store double %19958, ptr %19957, align 8, !dbg !372
  %19959 = load i32, ptr %10, align 4, !dbg !373
  %19960 = add nsw i32 %19959, 1, !dbg !374
  %19961 = sext i32 %19960 to i64, !dbg !375
  %19962 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19961, !dbg !375
  %19963 = load double, ptr %6, align 8, !dbg !376
  %19964 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %19965 = load double, ptr %19964, align 8, !dbg !376
  %19966 = load double, ptr %19962, align 16, !dbg !376
  %19967 = getelementptr inbounds { double, double }, ptr %19962, i32 0, i32 1, !dbg !376
  %19968 = load double, ptr %19967, align 8, !dbg !376
  %19969 = call { double, double } @make_vec(double %19963, double %19965, double %19966, double %19968), !dbg !376
  %19970 = extractvalue { double, double } %19969, 0, !dbg !376
  store double %19970, ptr %17, align 8, !dbg !376
  %19971 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %19972 = extractvalue { double, double } %19969, 1, !dbg !376
  store double %19972, ptr %19971, align 8, !dbg !376
  %19973 = load double, ptr %16, align 8, !dbg !377
  %19974 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %19975 = load double, ptr %19974, align 8, !dbg !377
  %19976 = load double, ptr %17, align 8, !dbg !377
  %19977 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %19978 = load double, ptr %19977, align 8, !dbg !377
  %19979 = call double @cross(double %19973, double %19975, double %19976, double %19978), !dbg !377
  %19980 = load i32, ptr %10, align 4, !dbg !378
  %19981 = sext i32 %19980 to i64, !dbg !379
  %19982 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19981, !dbg !379
  %19983 = load double, ptr %6, align 8, !dbg !380
  %19984 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %19985 = load double, ptr %19984, align 8, !dbg !380
  %19986 = load double, ptr %19982, align 16, !dbg !380
  %19987 = getelementptr inbounds { double, double }, ptr %19982, i32 0, i32 1, !dbg !380
  %19988 = load double, ptr %19987, align 8, !dbg !380
  %19989 = call { double, double } @make_vec(double %19983, double %19985, double %19986, double %19988), !dbg !380
  %19990 = extractvalue { double, double } %19989, 0, !dbg !380
  store double %19990, ptr %18, align 8, !dbg !380
  %19991 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %19992 = extractvalue { double, double } %19989, 1, !dbg !380
  store double %19992, ptr %19991, align 8, !dbg !380
  %19993 = load i32, ptr %10, align 4, !dbg !381
  %19994 = add nsw i32 %19993, 1, !dbg !382
  %19995 = sext i32 %19994 to i64, !dbg !383
  %19996 = getelementptr inbounds %struct.POINT, ptr %26, i64 %19995, !dbg !383
  %19997 = load double, ptr %6, align 8, !dbg !384
  %19998 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %19999 = load double, ptr %19998, align 8, !dbg !384
  %20000 = load double, ptr %19996, align 16, !dbg !384
  %20001 = getelementptr inbounds { double, double }, ptr %19996, i32 0, i32 1, !dbg !384
  %20002 = load double, ptr %20001, align 8, !dbg !384
  %20003 = call { double, double } @make_vec(double %19997, double %19999, double %20000, double %20002), !dbg !384
  %20004 = extractvalue { double, double } %20003, 0, !dbg !384
  store double %20004, ptr %19, align 8, !dbg !384
  %20005 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20006 = extractvalue { double, double } %20003, 1, !dbg !384
  store double %20006, ptr %20005, align 8, !dbg !384
  %20007 = load double, ptr %18, align 8, !dbg !385
  %20008 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20009 = load double, ptr %20008, align 8, !dbg !385
  %20010 = load double, ptr %19, align 8, !dbg !385
  %20011 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20012 = load double, ptr %20011, align 8, !dbg !385
  %20013 = call double @dot(double %20007, double %20009, double %20010, double %20012), !dbg !385
  %20014 = call double @atan2(double noundef %19979, double noundef %20013) #6, !dbg !386
  store double %20014, ptr %13, align 8, !dbg !387
  %20015 = load double, ptr %13, align 8, !dbg !388
  %20016 = load double, ptr %14, align 8, !dbg !389
  %20017 = fadd double %20016, %20015, !dbg !389
  store double %20017, ptr %14, align 8, !dbg !389
  %20018 = load double, ptr %13, align 8, !dbg !390
  %20019 = fsub double %20018, 0x400921FB54442D18, !dbg !392
  %20020 = call double @llvm.fabs.f64(double %20019), !dbg !393
  %20021 = fcmp ole double %20020, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20021, label %14330, label %20022, !dbg !395

20022:                                            ; preds = %19945
  %20023 = load double, ptr %13, align 8, !dbg !396
  %20024 = fadd double %20023, 0x400921FB54442D18, !dbg !397
  %20025 = call double @llvm.fabs.f64(double %20024), !dbg !398
  %20026 = fcmp ole double %20025, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20026, label %14330, label %20027, !dbg !400

20027:                                            ; preds = %20022
  br label %20028, !dbg !403

20028:                                            ; preds = %20027
  %20029 = load i32, ptr %10, align 4, !dbg !404
  %20030 = add nsw i32 %20029, 1, !dbg !404
  store i32 %20030, ptr %10, align 4, !dbg !404
  %20031 = load i32, ptr %10, align 4, !dbg !364
  %20032 = load i32, ptr %8, align 4, !dbg !366
  %20033 = icmp slt i32 %20031, %20032, !dbg !367
  br i1 %20033, label %20034, label %48422, !dbg !368

20034:                                            ; preds = %20028
  %20035 = load i32, ptr %10, align 4, !dbg !369
  %20036 = sext i32 %20035 to i64, !dbg !371
  %20037 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20036, !dbg !371
  %20038 = load double, ptr %6, align 8, !dbg !372
  %20039 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20040 = load double, ptr %20039, align 8, !dbg !372
  %20041 = load double, ptr %20037, align 16, !dbg !372
  %20042 = getelementptr inbounds { double, double }, ptr %20037, i32 0, i32 1, !dbg !372
  %20043 = load double, ptr %20042, align 8, !dbg !372
  %20044 = call { double, double } @make_vec(double %20038, double %20040, double %20041, double %20043), !dbg !372
  %20045 = extractvalue { double, double } %20044, 0, !dbg !372
  store double %20045, ptr %16, align 8, !dbg !372
  %20046 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20047 = extractvalue { double, double } %20044, 1, !dbg !372
  store double %20047, ptr %20046, align 8, !dbg !372
  %20048 = load i32, ptr %10, align 4, !dbg !373
  %20049 = add nsw i32 %20048, 1, !dbg !374
  %20050 = sext i32 %20049 to i64, !dbg !375
  %20051 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20050, !dbg !375
  %20052 = load double, ptr %6, align 8, !dbg !376
  %20053 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20054 = load double, ptr %20053, align 8, !dbg !376
  %20055 = load double, ptr %20051, align 16, !dbg !376
  %20056 = getelementptr inbounds { double, double }, ptr %20051, i32 0, i32 1, !dbg !376
  %20057 = load double, ptr %20056, align 8, !dbg !376
  %20058 = call { double, double } @make_vec(double %20052, double %20054, double %20055, double %20057), !dbg !376
  %20059 = extractvalue { double, double } %20058, 0, !dbg !376
  store double %20059, ptr %17, align 8, !dbg !376
  %20060 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20061 = extractvalue { double, double } %20058, 1, !dbg !376
  store double %20061, ptr %20060, align 8, !dbg !376
  %20062 = load double, ptr %16, align 8, !dbg !377
  %20063 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20064 = load double, ptr %20063, align 8, !dbg !377
  %20065 = load double, ptr %17, align 8, !dbg !377
  %20066 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20067 = load double, ptr %20066, align 8, !dbg !377
  %20068 = call double @cross(double %20062, double %20064, double %20065, double %20067), !dbg !377
  %20069 = load i32, ptr %10, align 4, !dbg !378
  %20070 = sext i32 %20069 to i64, !dbg !379
  %20071 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20070, !dbg !379
  %20072 = load double, ptr %6, align 8, !dbg !380
  %20073 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20074 = load double, ptr %20073, align 8, !dbg !380
  %20075 = load double, ptr %20071, align 16, !dbg !380
  %20076 = getelementptr inbounds { double, double }, ptr %20071, i32 0, i32 1, !dbg !380
  %20077 = load double, ptr %20076, align 8, !dbg !380
  %20078 = call { double, double } @make_vec(double %20072, double %20074, double %20075, double %20077), !dbg !380
  %20079 = extractvalue { double, double } %20078, 0, !dbg !380
  store double %20079, ptr %18, align 8, !dbg !380
  %20080 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20081 = extractvalue { double, double } %20078, 1, !dbg !380
  store double %20081, ptr %20080, align 8, !dbg !380
  %20082 = load i32, ptr %10, align 4, !dbg !381
  %20083 = add nsw i32 %20082, 1, !dbg !382
  %20084 = sext i32 %20083 to i64, !dbg !383
  %20085 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20084, !dbg !383
  %20086 = load double, ptr %6, align 8, !dbg !384
  %20087 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20088 = load double, ptr %20087, align 8, !dbg !384
  %20089 = load double, ptr %20085, align 16, !dbg !384
  %20090 = getelementptr inbounds { double, double }, ptr %20085, i32 0, i32 1, !dbg !384
  %20091 = load double, ptr %20090, align 8, !dbg !384
  %20092 = call { double, double } @make_vec(double %20086, double %20088, double %20089, double %20091), !dbg !384
  %20093 = extractvalue { double, double } %20092, 0, !dbg !384
  store double %20093, ptr %19, align 8, !dbg !384
  %20094 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20095 = extractvalue { double, double } %20092, 1, !dbg !384
  store double %20095, ptr %20094, align 8, !dbg !384
  %20096 = load double, ptr %18, align 8, !dbg !385
  %20097 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20098 = load double, ptr %20097, align 8, !dbg !385
  %20099 = load double, ptr %19, align 8, !dbg !385
  %20100 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20101 = load double, ptr %20100, align 8, !dbg !385
  %20102 = call double @dot(double %20096, double %20098, double %20099, double %20101), !dbg !385
  %20103 = call double @atan2(double noundef %20068, double noundef %20102) #6, !dbg !386
  store double %20103, ptr %13, align 8, !dbg !387
  %20104 = load double, ptr %13, align 8, !dbg !388
  %20105 = load double, ptr %14, align 8, !dbg !389
  %20106 = fadd double %20105, %20104, !dbg !389
  store double %20106, ptr %14, align 8, !dbg !389
  %20107 = load double, ptr %13, align 8, !dbg !390
  %20108 = fsub double %20107, 0x400921FB54442D18, !dbg !392
  %20109 = call double @llvm.fabs.f64(double %20108), !dbg !393
  %20110 = fcmp ole double %20109, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20110, label %14330, label %20111, !dbg !395

20111:                                            ; preds = %20034
  %20112 = load double, ptr %13, align 8, !dbg !396
  %20113 = fadd double %20112, 0x400921FB54442D18, !dbg !397
  %20114 = call double @llvm.fabs.f64(double %20113), !dbg !398
  %20115 = fcmp ole double %20114, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20115, label %14330, label %20116, !dbg !400

20116:                                            ; preds = %20111
  br label %20117, !dbg !403

20117:                                            ; preds = %20116
  %20118 = load i32, ptr %10, align 4, !dbg !404
  %20119 = add nsw i32 %20118, 1, !dbg !404
  store i32 %20119, ptr %10, align 4, !dbg !404
  %20120 = load i32, ptr %10, align 4, !dbg !364
  %20121 = load i32, ptr %8, align 4, !dbg !366
  %20122 = icmp slt i32 %20120, %20121, !dbg !367
  br i1 %20122, label %20123, label %48422, !dbg !368

20123:                                            ; preds = %20117
  %20124 = load i32, ptr %10, align 4, !dbg !369
  %20125 = sext i32 %20124 to i64, !dbg !371
  %20126 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20125, !dbg !371
  %20127 = load double, ptr %6, align 8, !dbg !372
  %20128 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20129 = load double, ptr %20128, align 8, !dbg !372
  %20130 = load double, ptr %20126, align 16, !dbg !372
  %20131 = getelementptr inbounds { double, double }, ptr %20126, i32 0, i32 1, !dbg !372
  %20132 = load double, ptr %20131, align 8, !dbg !372
  %20133 = call { double, double } @make_vec(double %20127, double %20129, double %20130, double %20132), !dbg !372
  %20134 = extractvalue { double, double } %20133, 0, !dbg !372
  store double %20134, ptr %16, align 8, !dbg !372
  %20135 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20136 = extractvalue { double, double } %20133, 1, !dbg !372
  store double %20136, ptr %20135, align 8, !dbg !372
  %20137 = load i32, ptr %10, align 4, !dbg !373
  %20138 = add nsw i32 %20137, 1, !dbg !374
  %20139 = sext i32 %20138 to i64, !dbg !375
  %20140 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20139, !dbg !375
  %20141 = load double, ptr %6, align 8, !dbg !376
  %20142 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20143 = load double, ptr %20142, align 8, !dbg !376
  %20144 = load double, ptr %20140, align 16, !dbg !376
  %20145 = getelementptr inbounds { double, double }, ptr %20140, i32 0, i32 1, !dbg !376
  %20146 = load double, ptr %20145, align 8, !dbg !376
  %20147 = call { double, double } @make_vec(double %20141, double %20143, double %20144, double %20146), !dbg !376
  %20148 = extractvalue { double, double } %20147, 0, !dbg !376
  store double %20148, ptr %17, align 8, !dbg !376
  %20149 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20150 = extractvalue { double, double } %20147, 1, !dbg !376
  store double %20150, ptr %20149, align 8, !dbg !376
  %20151 = load double, ptr %16, align 8, !dbg !377
  %20152 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20153 = load double, ptr %20152, align 8, !dbg !377
  %20154 = load double, ptr %17, align 8, !dbg !377
  %20155 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20156 = load double, ptr %20155, align 8, !dbg !377
  %20157 = call double @cross(double %20151, double %20153, double %20154, double %20156), !dbg !377
  %20158 = load i32, ptr %10, align 4, !dbg !378
  %20159 = sext i32 %20158 to i64, !dbg !379
  %20160 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20159, !dbg !379
  %20161 = load double, ptr %6, align 8, !dbg !380
  %20162 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20163 = load double, ptr %20162, align 8, !dbg !380
  %20164 = load double, ptr %20160, align 16, !dbg !380
  %20165 = getelementptr inbounds { double, double }, ptr %20160, i32 0, i32 1, !dbg !380
  %20166 = load double, ptr %20165, align 8, !dbg !380
  %20167 = call { double, double } @make_vec(double %20161, double %20163, double %20164, double %20166), !dbg !380
  %20168 = extractvalue { double, double } %20167, 0, !dbg !380
  store double %20168, ptr %18, align 8, !dbg !380
  %20169 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20170 = extractvalue { double, double } %20167, 1, !dbg !380
  store double %20170, ptr %20169, align 8, !dbg !380
  %20171 = load i32, ptr %10, align 4, !dbg !381
  %20172 = add nsw i32 %20171, 1, !dbg !382
  %20173 = sext i32 %20172 to i64, !dbg !383
  %20174 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20173, !dbg !383
  %20175 = load double, ptr %6, align 8, !dbg !384
  %20176 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20177 = load double, ptr %20176, align 8, !dbg !384
  %20178 = load double, ptr %20174, align 16, !dbg !384
  %20179 = getelementptr inbounds { double, double }, ptr %20174, i32 0, i32 1, !dbg !384
  %20180 = load double, ptr %20179, align 8, !dbg !384
  %20181 = call { double, double } @make_vec(double %20175, double %20177, double %20178, double %20180), !dbg !384
  %20182 = extractvalue { double, double } %20181, 0, !dbg !384
  store double %20182, ptr %19, align 8, !dbg !384
  %20183 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20184 = extractvalue { double, double } %20181, 1, !dbg !384
  store double %20184, ptr %20183, align 8, !dbg !384
  %20185 = load double, ptr %18, align 8, !dbg !385
  %20186 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20187 = load double, ptr %20186, align 8, !dbg !385
  %20188 = load double, ptr %19, align 8, !dbg !385
  %20189 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20190 = load double, ptr %20189, align 8, !dbg !385
  %20191 = call double @dot(double %20185, double %20187, double %20188, double %20190), !dbg !385
  %20192 = call double @atan2(double noundef %20157, double noundef %20191) #6, !dbg !386
  store double %20192, ptr %13, align 8, !dbg !387
  %20193 = load double, ptr %13, align 8, !dbg !388
  %20194 = load double, ptr %14, align 8, !dbg !389
  %20195 = fadd double %20194, %20193, !dbg !389
  store double %20195, ptr %14, align 8, !dbg !389
  %20196 = load double, ptr %13, align 8, !dbg !390
  %20197 = fsub double %20196, 0x400921FB54442D18, !dbg !392
  %20198 = call double @llvm.fabs.f64(double %20197), !dbg !393
  %20199 = fcmp ole double %20198, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20199, label %14330, label %20200, !dbg !395

20200:                                            ; preds = %20123
  %20201 = load double, ptr %13, align 8, !dbg !396
  %20202 = fadd double %20201, 0x400921FB54442D18, !dbg !397
  %20203 = call double @llvm.fabs.f64(double %20202), !dbg !398
  %20204 = fcmp ole double %20203, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20204, label %14330, label %20205, !dbg !400

20205:                                            ; preds = %20200
  br label %20206, !dbg !403

20206:                                            ; preds = %20205
  %20207 = load i32, ptr %10, align 4, !dbg !404
  %20208 = add nsw i32 %20207, 1, !dbg !404
  store i32 %20208, ptr %10, align 4, !dbg !404
  %20209 = load i32, ptr %10, align 4, !dbg !364
  %20210 = load i32, ptr %8, align 4, !dbg !366
  %20211 = icmp slt i32 %20209, %20210, !dbg !367
  br i1 %20211, label %20212, label %48422, !dbg !368

20212:                                            ; preds = %20206
  %20213 = load i32, ptr %10, align 4, !dbg !369
  %20214 = sext i32 %20213 to i64, !dbg !371
  %20215 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20214, !dbg !371
  %20216 = load double, ptr %6, align 8, !dbg !372
  %20217 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20218 = load double, ptr %20217, align 8, !dbg !372
  %20219 = load double, ptr %20215, align 16, !dbg !372
  %20220 = getelementptr inbounds { double, double }, ptr %20215, i32 0, i32 1, !dbg !372
  %20221 = load double, ptr %20220, align 8, !dbg !372
  %20222 = call { double, double } @make_vec(double %20216, double %20218, double %20219, double %20221), !dbg !372
  %20223 = extractvalue { double, double } %20222, 0, !dbg !372
  store double %20223, ptr %16, align 8, !dbg !372
  %20224 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20225 = extractvalue { double, double } %20222, 1, !dbg !372
  store double %20225, ptr %20224, align 8, !dbg !372
  %20226 = load i32, ptr %10, align 4, !dbg !373
  %20227 = add nsw i32 %20226, 1, !dbg !374
  %20228 = sext i32 %20227 to i64, !dbg !375
  %20229 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20228, !dbg !375
  %20230 = load double, ptr %6, align 8, !dbg !376
  %20231 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20232 = load double, ptr %20231, align 8, !dbg !376
  %20233 = load double, ptr %20229, align 16, !dbg !376
  %20234 = getelementptr inbounds { double, double }, ptr %20229, i32 0, i32 1, !dbg !376
  %20235 = load double, ptr %20234, align 8, !dbg !376
  %20236 = call { double, double } @make_vec(double %20230, double %20232, double %20233, double %20235), !dbg !376
  %20237 = extractvalue { double, double } %20236, 0, !dbg !376
  store double %20237, ptr %17, align 8, !dbg !376
  %20238 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20239 = extractvalue { double, double } %20236, 1, !dbg !376
  store double %20239, ptr %20238, align 8, !dbg !376
  %20240 = load double, ptr %16, align 8, !dbg !377
  %20241 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20242 = load double, ptr %20241, align 8, !dbg !377
  %20243 = load double, ptr %17, align 8, !dbg !377
  %20244 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20245 = load double, ptr %20244, align 8, !dbg !377
  %20246 = call double @cross(double %20240, double %20242, double %20243, double %20245), !dbg !377
  %20247 = load i32, ptr %10, align 4, !dbg !378
  %20248 = sext i32 %20247 to i64, !dbg !379
  %20249 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20248, !dbg !379
  %20250 = load double, ptr %6, align 8, !dbg !380
  %20251 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20252 = load double, ptr %20251, align 8, !dbg !380
  %20253 = load double, ptr %20249, align 16, !dbg !380
  %20254 = getelementptr inbounds { double, double }, ptr %20249, i32 0, i32 1, !dbg !380
  %20255 = load double, ptr %20254, align 8, !dbg !380
  %20256 = call { double, double } @make_vec(double %20250, double %20252, double %20253, double %20255), !dbg !380
  %20257 = extractvalue { double, double } %20256, 0, !dbg !380
  store double %20257, ptr %18, align 8, !dbg !380
  %20258 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20259 = extractvalue { double, double } %20256, 1, !dbg !380
  store double %20259, ptr %20258, align 8, !dbg !380
  %20260 = load i32, ptr %10, align 4, !dbg !381
  %20261 = add nsw i32 %20260, 1, !dbg !382
  %20262 = sext i32 %20261 to i64, !dbg !383
  %20263 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20262, !dbg !383
  %20264 = load double, ptr %6, align 8, !dbg !384
  %20265 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20266 = load double, ptr %20265, align 8, !dbg !384
  %20267 = load double, ptr %20263, align 16, !dbg !384
  %20268 = getelementptr inbounds { double, double }, ptr %20263, i32 0, i32 1, !dbg !384
  %20269 = load double, ptr %20268, align 8, !dbg !384
  %20270 = call { double, double } @make_vec(double %20264, double %20266, double %20267, double %20269), !dbg !384
  %20271 = extractvalue { double, double } %20270, 0, !dbg !384
  store double %20271, ptr %19, align 8, !dbg !384
  %20272 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20273 = extractvalue { double, double } %20270, 1, !dbg !384
  store double %20273, ptr %20272, align 8, !dbg !384
  %20274 = load double, ptr %18, align 8, !dbg !385
  %20275 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20276 = load double, ptr %20275, align 8, !dbg !385
  %20277 = load double, ptr %19, align 8, !dbg !385
  %20278 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20279 = load double, ptr %20278, align 8, !dbg !385
  %20280 = call double @dot(double %20274, double %20276, double %20277, double %20279), !dbg !385
  %20281 = call double @atan2(double noundef %20246, double noundef %20280) #6, !dbg !386
  store double %20281, ptr %13, align 8, !dbg !387
  %20282 = load double, ptr %13, align 8, !dbg !388
  %20283 = load double, ptr %14, align 8, !dbg !389
  %20284 = fadd double %20283, %20282, !dbg !389
  store double %20284, ptr %14, align 8, !dbg !389
  %20285 = load double, ptr %13, align 8, !dbg !390
  %20286 = fsub double %20285, 0x400921FB54442D18, !dbg !392
  %20287 = call double @llvm.fabs.f64(double %20286), !dbg !393
  %20288 = fcmp ole double %20287, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20288, label %14330, label %20289, !dbg !395

20289:                                            ; preds = %20212
  %20290 = load double, ptr %13, align 8, !dbg !396
  %20291 = fadd double %20290, 0x400921FB54442D18, !dbg !397
  %20292 = call double @llvm.fabs.f64(double %20291), !dbg !398
  %20293 = fcmp ole double %20292, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20293, label %14330, label %20294, !dbg !400

20294:                                            ; preds = %20289
  br label %20295, !dbg !403

20295:                                            ; preds = %20294
  %20296 = load i32, ptr %10, align 4, !dbg !404
  %20297 = add nsw i32 %20296, 1, !dbg !404
  store i32 %20297, ptr %10, align 4, !dbg !404
  %20298 = load i32, ptr %10, align 4, !dbg !364
  %20299 = load i32, ptr %8, align 4, !dbg !366
  %20300 = icmp slt i32 %20298, %20299, !dbg !367
  br i1 %20300, label %20301, label %48422, !dbg !368

20301:                                            ; preds = %20295
  %20302 = load i32, ptr %10, align 4, !dbg !369
  %20303 = sext i32 %20302 to i64, !dbg !371
  %20304 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20303, !dbg !371
  %20305 = load double, ptr %6, align 8, !dbg !372
  %20306 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20307 = load double, ptr %20306, align 8, !dbg !372
  %20308 = load double, ptr %20304, align 16, !dbg !372
  %20309 = getelementptr inbounds { double, double }, ptr %20304, i32 0, i32 1, !dbg !372
  %20310 = load double, ptr %20309, align 8, !dbg !372
  %20311 = call { double, double } @make_vec(double %20305, double %20307, double %20308, double %20310), !dbg !372
  %20312 = extractvalue { double, double } %20311, 0, !dbg !372
  store double %20312, ptr %16, align 8, !dbg !372
  %20313 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20314 = extractvalue { double, double } %20311, 1, !dbg !372
  store double %20314, ptr %20313, align 8, !dbg !372
  %20315 = load i32, ptr %10, align 4, !dbg !373
  %20316 = add nsw i32 %20315, 1, !dbg !374
  %20317 = sext i32 %20316 to i64, !dbg !375
  %20318 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20317, !dbg !375
  %20319 = load double, ptr %6, align 8, !dbg !376
  %20320 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20321 = load double, ptr %20320, align 8, !dbg !376
  %20322 = load double, ptr %20318, align 16, !dbg !376
  %20323 = getelementptr inbounds { double, double }, ptr %20318, i32 0, i32 1, !dbg !376
  %20324 = load double, ptr %20323, align 8, !dbg !376
  %20325 = call { double, double } @make_vec(double %20319, double %20321, double %20322, double %20324), !dbg !376
  %20326 = extractvalue { double, double } %20325, 0, !dbg !376
  store double %20326, ptr %17, align 8, !dbg !376
  %20327 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20328 = extractvalue { double, double } %20325, 1, !dbg !376
  store double %20328, ptr %20327, align 8, !dbg !376
  %20329 = load double, ptr %16, align 8, !dbg !377
  %20330 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20331 = load double, ptr %20330, align 8, !dbg !377
  %20332 = load double, ptr %17, align 8, !dbg !377
  %20333 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20334 = load double, ptr %20333, align 8, !dbg !377
  %20335 = call double @cross(double %20329, double %20331, double %20332, double %20334), !dbg !377
  %20336 = load i32, ptr %10, align 4, !dbg !378
  %20337 = sext i32 %20336 to i64, !dbg !379
  %20338 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20337, !dbg !379
  %20339 = load double, ptr %6, align 8, !dbg !380
  %20340 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20341 = load double, ptr %20340, align 8, !dbg !380
  %20342 = load double, ptr %20338, align 16, !dbg !380
  %20343 = getelementptr inbounds { double, double }, ptr %20338, i32 0, i32 1, !dbg !380
  %20344 = load double, ptr %20343, align 8, !dbg !380
  %20345 = call { double, double } @make_vec(double %20339, double %20341, double %20342, double %20344), !dbg !380
  %20346 = extractvalue { double, double } %20345, 0, !dbg !380
  store double %20346, ptr %18, align 8, !dbg !380
  %20347 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20348 = extractvalue { double, double } %20345, 1, !dbg !380
  store double %20348, ptr %20347, align 8, !dbg !380
  %20349 = load i32, ptr %10, align 4, !dbg !381
  %20350 = add nsw i32 %20349, 1, !dbg !382
  %20351 = sext i32 %20350 to i64, !dbg !383
  %20352 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20351, !dbg !383
  %20353 = load double, ptr %6, align 8, !dbg !384
  %20354 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20355 = load double, ptr %20354, align 8, !dbg !384
  %20356 = load double, ptr %20352, align 16, !dbg !384
  %20357 = getelementptr inbounds { double, double }, ptr %20352, i32 0, i32 1, !dbg !384
  %20358 = load double, ptr %20357, align 8, !dbg !384
  %20359 = call { double, double } @make_vec(double %20353, double %20355, double %20356, double %20358), !dbg !384
  %20360 = extractvalue { double, double } %20359, 0, !dbg !384
  store double %20360, ptr %19, align 8, !dbg !384
  %20361 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20362 = extractvalue { double, double } %20359, 1, !dbg !384
  store double %20362, ptr %20361, align 8, !dbg !384
  %20363 = load double, ptr %18, align 8, !dbg !385
  %20364 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20365 = load double, ptr %20364, align 8, !dbg !385
  %20366 = load double, ptr %19, align 8, !dbg !385
  %20367 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20368 = load double, ptr %20367, align 8, !dbg !385
  %20369 = call double @dot(double %20363, double %20365, double %20366, double %20368), !dbg !385
  %20370 = call double @atan2(double noundef %20335, double noundef %20369) #6, !dbg !386
  store double %20370, ptr %13, align 8, !dbg !387
  %20371 = load double, ptr %13, align 8, !dbg !388
  %20372 = load double, ptr %14, align 8, !dbg !389
  %20373 = fadd double %20372, %20371, !dbg !389
  store double %20373, ptr %14, align 8, !dbg !389
  %20374 = load double, ptr %13, align 8, !dbg !390
  %20375 = fsub double %20374, 0x400921FB54442D18, !dbg !392
  %20376 = call double @llvm.fabs.f64(double %20375), !dbg !393
  %20377 = fcmp ole double %20376, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20377, label %14330, label %20378, !dbg !395

20378:                                            ; preds = %20301
  %20379 = load double, ptr %13, align 8, !dbg !396
  %20380 = fadd double %20379, 0x400921FB54442D18, !dbg !397
  %20381 = call double @llvm.fabs.f64(double %20380), !dbg !398
  %20382 = fcmp ole double %20381, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20382, label %14330, label %20383, !dbg !400

20383:                                            ; preds = %20378
  br label %20384, !dbg !403

20384:                                            ; preds = %20383
  %20385 = load i32, ptr %10, align 4, !dbg !404
  %20386 = add nsw i32 %20385, 1, !dbg !404
  store i32 %20386, ptr %10, align 4, !dbg !404
  %20387 = load i32, ptr %10, align 4, !dbg !364
  %20388 = load i32, ptr %8, align 4, !dbg !366
  %20389 = icmp slt i32 %20387, %20388, !dbg !367
  br i1 %20389, label %20390, label %48422, !dbg !368

20390:                                            ; preds = %20384
  %20391 = load i32, ptr %10, align 4, !dbg !369
  %20392 = sext i32 %20391 to i64, !dbg !371
  %20393 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20392, !dbg !371
  %20394 = load double, ptr %6, align 8, !dbg !372
  %20395 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20396 = load double, ptr %20395, align 8, !dbg !372
  %20397 = load double, ptr %20393, align 16, !dbg !372
  %20398 = getelementptr inbounds { double, double }, ptr %20393, i32 0, i32 1, !dbg !372
  %20399 = load double, ptr %20398, align 8, !dbg !372
  %20400 = call { double, double } @make_vec(double %20394, double %20396, double %20397, double %20399), !dbg !372
  %20401 = extractvalue { double, double } %20400, 0, !dbg !372
  store double %20401, ptr %16, align 8, !dbg !372
  %20402 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20403 = extractvalue { double, double } %20400, 1, !dbg !372
  store double %20403, ptr %20402, align 8, !dbg !372
  %20404 = load i32, ptr %10, align 4, !dbg !373
  %20405 = add nsw i32 %20404, 1, !dbg !374
  %20406 = sext i32 %20405 to i64, !dbg !375
  %20407 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20406, !dbg !375
  %20408 = load double, ptr %6, align 8, !dbg !376
  %20409 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20410 = load double, ptr %20409, align 8, !dbg !376
  %20411 = load double, ptr %20407, align 16, !dbg !376
  %20412 = getelementptr inbounds { double, double }, ptr %20407, i32 0, i32 1, !dbg !376
  %20413 = load double, ptr %20412, align 8, !dbg !376
  %20414 = call { double, double } @make_vec(double %20408, double %20410, double %20411, double %20413), !dbg !376
  %20415 = extractvalue { double, double } %20414, 0, !dbg !376
  store double %20415, ptr %17, align 8, !dbg !376
  %20416 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20417 = extractvalue { double, double } %20414, 1, !dbg !376
  store double %20417, ptr %20416, align 8, !dbg !376
  %20418 = load double, ptr %16, align 8, !dbg !377
  %20419 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20420 = load double, ptr %20419, align 8, !dbg !377
  %20421 = load double, ptr %17, align 8, !dbg !377
  %20422 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20423 = load double, ptr %20422, align 8, !dbg !377
  %20424 = call double @cross(double %20418, double %20420, double %20421, double %20423), !dbg !377
  %20425 = load i32, ptr %10, align 4, !dbg !378
  %20426 = sext i32 %20425 to i64, !dbg !379
  %20427 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20426, !dbg !379
  %20428 = load double, ptr %6, align 8, !dbg !380
  %20429 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20430 = load double, ptr %20429, align 8, !dbg !380
  %20431 = load double, ptr %20427, align 16, !dbg !380
  %20432 = getelementptr inbounds { double, double }, ptr %20427, i32 0, i32 1, !dbg !380
  %20433 = load double, ptr %20432, align 8, !dbg !380
  %20434 = call { double, double } @make_vec(double %20428, double %20430, double %20431, double %20433), !dbg !380
  %20435 = extractvalue { double, double } %20434, 0, !dbg !380
  store double %20435, ptr %18, align 8, !dbg !380
  %20436 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20437 = extractvalue { double, double } %20434, 1, !dbg !380
  store double %20437, ptr %20436, align 8, !dbg !380
  %20438 = load i32, ptr %10, align 4, !dbg !381
  %20439 = add nsw i32 %20438, 1, !dbg !382
  %20440 = sext i32 %20439 to i64, !dbg !383
  %20441 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20440, !dbg !383
  %20442 = load double, ptr %6, align 8, !dbg !384
  %20443 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20444 = load double, ptr %20443, align 8, !dbg !384
  %20445 = load double, ptr %20441, align 16, !dbg !384
  %20446 = getelementptr inbounds { double, double }, ptr %20441, i32 0, i32 1, !dbg !384
  %20447 = load double, ptr %20446, align 8, !dbg !384
  %20448 = call { double, double } @make_vec(double %20442, double %20444, double %20445, double %20447), !dbg !384
  %20449 = extractvalue { double, double } %20448, 0, !dbg !384
  store double %20449, ptr %19, align 8, !dbg !384
  %20450 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20451 = extractvalue { double, double } %20448, 1, !dbg !384
  store double %20451, ptr %20450, align 8, !dbg !384
  %20452 = load double, ptr %18, align 8, !dbg !385
  %20453 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20454 = load double, ptr %20453, align 8, !dbg !385
  %20455 = load double, ptr %19, align 8, !dbg !385
  %20456 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20457 = load double, ptr %20456, align 8, !dbg !385
  %20458 = call double @dot(double %20452, double %20454, double %20455, double %20457), !dbg !385
  %20459 = call double @atan2(double noundef %20424, double noundef %20458) #6, !dbg !386
  store double %20459, ptr %13, align 8, !dbg !387
  %20460 = load double, ptr %13, align 8, !dbg !388
  %20461 = load double, ptr %14, align 8, !dbg !389
  %20462 = fadd double %20461, %20460, !dbg !389
  store double %20462, ptr %14, align 8, !dbg !389
  %20463 = load double, ptr %13, align 8, !dbg !390
  %20464 = fsub double %20463, 0x400921FB54442D18, !dbg !392
  %20465 = call double @llvm.fabs.f64(double %20464), !dbg !393
  %20466 = fcmp ole double %20465, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20466, label %14330, label %20467, !dbg !395

20467:                                            ; preds = %20390
  %20468 = load double, ptr %13, align 8, !dbg !396
  %20469 = fadd double %20468, 0x400921FB54442D18, !dbg !397
  %20470 = call double @llvm.fabs.f64(double %20469), !dbg !398
  %20471 = fcmp ole double %20470, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20471, label %14330, label %20472, !dbg !400

20472:                                            ; preds = %20467
  br label %20473, !dbg !403

20473:                                            ; preds = %20472
  %20474 = load i32, ptr %10, align 4, !dbg !404
  %20475 = add nsw i32 %20474, 1, !dbg !404
  store i32 %20475, ptr %10, align 4, !dbg !404
  %20476 = load i32, ptr %10, align 4, !dbg !364
  %20477 = load i32, ptr %8, align 4, !dbg !366
  %20478 = icmp slt i32 %20476, %20477, !dbg !367
  br i1 %20478, label %20479, label %48422, !dbg !368

20479:                                            ; preds = %20473
  %20480 = load i32, ptr %10, align 4, !dbg !369
  %20481 = sext i32 %20480 to i64, !dbg !371
  %20482 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20481, !dbg !371
  %20483 = load double, ptr %6, align 8, !dbg !372
  %20484 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20485 = load double, ptr %20484, align 8, !dbg !372
  %20486 = load double, ptr %20482, align 16, !dbg !372
  %20487 = getelementptr inbounds { double, double }, ptr %20482, i32 0, i32 1, !dbg !372
  %20488 = load double, ptr %20487, align 8, !dbg !372
  %20489 = call { double, double } @make_vec(double %20483, double %20485, double %20486, double %20488), !dbg !372
  %20490 = extractvalue { double, double } %20489, 0, !dbg !372
  store double %20490, ptr %16, align 8, !dbg !372
  %20491 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20492 = extractvalue { double, double } %20489, 1, !dbg !372
  store double %20492, ptr %20491, align 8, !dbg !372
  %20493 = load i32, ptr %10, align 4, !dbg !373
  %20494 = add nsw i32 %20493, 1, !dbg !374
  %20495 = sext i32 %20494 to i64, !dbg !375
  %20496 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20495, !dbg !375
  %20497 = load double, ptr %6, align 8, !dbg !376
  %20498 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20499 = load double, ptr %20498, align 8, !dbg !376
  %20500 = load double, ptr %20496, align 16, !dbg !376
  %20501 = getelementptr inbounds { double, double }, ptr %20496, i32 0, i32 1, !dbg !376
  %20502 = load double, ptr %20501, align 8, !dbg !376
  %20503 = call { double, double } @make_vec(double %20497, double %20499, double %20500, double %20502), !dbg !376
  %20504 = extractvalue { double, double } %20503, 0, !dbg !376
  store double %20504, ptr %17, align 8, !dbg !376
  %20505 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20506 = extractvalue { double, double } %20503, 1, !dbg !376
  store double %20506, ptr %20505, align 8, !dbg !376
  %20507 = load double, ptr %16, align 8, !dbg !377
  %20508 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20509 = load double, ptr %20508, align 8, !dbg !377
  %20510 = load double, ptr %17, align 8, !dbg !377
  %20511 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20512 = load double, ptr %20511, align 8, !dbg !377
  %20513 = call double @cross(double %20507, double %20509, double %20510, double %20512), !dbg !377
  %20514 = load i32, ptr %10, align 4, !dbg !378
  %20515 = sext i32 %20514 to i64, !dbg !379
  %20516 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20515, !dbg !379
  %20517 = load double, ptr %6, align 8, !dbg !380
  %20518 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20519 = load double, ptr %20518, align 8, !dbg !380
  %20520 = load double, ptr %20516, align 16, !dbg !380
  %20521 = getelementptr inbounds { double, double }, ptr %20516, i32 0, i32 1, !dbg !380
  %20522 = load double, ptr %20521, align 8, !dbg !380
  %20523 = call { double, double } @make_vec(double %20517, double %20519, double %20520, double %20522), !dbg !380
  %20524 = extractvalue { double, double } %20523, 0, !dbg !380
  store double %20524, ptr %18, align 8, !dbg !380
  %20525 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20526 = extractvalue { double, double } %20523, 1, !dbg !380
  store double %20526, ptr %20525, align 8, !dbg !380
  %20527 = load i32, ptr %10, align 4, !dbg !381
  %20528 = add nsw i32 %20527, 1, !dbg !382
  %20529 = sext i32 %20528 to i64, !dbg !383
  %20530 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20529, !dbg !383
  %20531 = load double, ptr %6, align 8, !dbg !384
  %20532 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20533 = load double, ptr %20532, align 8, !dbg !384
  %20534 = load double, ptr %20530, align 16, !dbg !384
  %20535 = getelementptr inbounds { double, double }, ptr %20530, i32 0, i32 1, !dbg !384
  %20536 = load double, ptr %20535, align 8, !dbg !384
  %20537 = call { double, double } @make_vec(double %20531, double %20533, double %20534, double %20536), !dbg !384
  %20538 = extractvalue { double, double } %20537, 0, !dbg !384
  store double %20538, ptr %19, align 8, !dbg !384
  %20539 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20540 = extractvalue { double, double } %20537, 1, !dbg !384
  store double %20540, ptr %20539, align 8, !dbg !384
  %20541 = load double, ptr %18, align 8, !dbg !385
  %20542 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20543 = load double, ptr %20542, align 8, !dbg !385
  %20544 = load double, ptr %19, align 8, !dbg !385
  %20545 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20546 = load double, ptr %20545, align 8, !dbg !385
  %20547 = call double @dot(double %20541, double %20543, double %20544, double %20546), !dbg !385
  %20548 = call double @atan2(double noundef %20513, double noundef %20547) #6, !dbg !386
  store double %20548, ptr %13, align 8, !dbg !387
  %20549 = load double, ptr %13, align 8, !dbg !388
  %20550 = load double, ptr %14, align 8, !dbg !389
  %20551 = fadd double %20550, %20549, !dbg !389
  store double %20551, ptr %14, align 8, !dbg !389
  %20552 = load double, ptr %13, align 8, !dbg !390
  %20553 = fsub double %20552, 0x400921FB54442D18, !dbg !392
  %20554 = call double @llvm.fabs.f64(double %20553), !dbg !393
  %20555 = fcmp ole double %20554, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20555, label %14330, label %20556, !dbg !395

20556:                                            ; preds = %20479
  %20557 = load double, ptr %13, align 8, !dbg !396
  %20558 = fadd double %20557, 0x400921FB54442D18, !dbg !397
  %20559 = call double @llvm.fabs.f64(double %20558), !dbg !398
  %20560 = fcmp ole double %20559, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20560, label %14330, label %20561, !dbg !400

20561:                                            ; preds = %20556
  br label %20562, !dbg !403

20562:                                            ; preds = %20561
  %20563 = load i32, ptr %10, align 4, !dbg !404
  %20564 = add nsw i32 %20563, 1, !dbg !404
  store i32 %20564, ptr %10, align 4, !dbg !404
  %20565 = load i32, ptr %10, align 4, !dbg !364
  %20566 = load i32, ptr %8, align 4, !dbg !366
  %20567 = icmp slt i32 %20565, %20566, !dbg !367
  br i1 %20567, label %20568, label %48422, !dbg !368

20568:                                            ; preds = %20562
  %20569 = load i32, ptr %10, align 4, !dbg !369
  %20570 = sext i32 %20569 to i64, !dbg !371
  %20571 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20570, !dbg !371
  %20572 = load double, ptr %6, align 8, !dbg !372
  %20573 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20574 = load double, ptr %20573, align 8, !dbg !372
  %20575 = load double, ptr %20571, align 16, !dbg !372
  %20576 = getelementptr inbounds { double, double }, ptr %20571, i32 0, i32 1, !dbg !372
  %20577 = load double, ptr %20576, align 8, !dbg !372
  %20578 = call { double, double } @make_vec(double %20572, double %20574, double %20575, double %20577), !dbg !372
  %20579 = extractvalue { double, double } %20578, 0, !dbg !372
  store double %20579, ptr %16, align 8, !dbg !372
  %20580 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20581 = extractvalue { double, double } %20578, 1, !dbg !372
  store double %20581, ptr %20580, align 8, !dbg !372
  %20582 = load i32, ptr %10, align 4, !dbg !373
  %20583 = add nsw i32 %20582, 1, !dbg !374
  %20584 = sext i32 %20583 to i64, !dbg !375
  %20585 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20584, !dbg !375
  %20586 = load double, ptr %6, align 8, !dbg !376
  %20587 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20588 = load double, ptr %20587, align 8, !dbg !376
  %20589 = load double, ptr %20585, align 16, !dbg !376
  %20590 = getelementptr inbounds { double, double }, ptr %20585, i32 0, i32 1, !dbg !376
  %20591 = load double, ptr %20590, align 8, !dbg !376
  %20592 = call { double, double } @make_vec(double %20586, double %20588, double %20589, double %20591), !dbg !376
  %20593 = extractvalue { double, double } %20592, 0, !dbg !376
  store double %20593, ptr %17, align 8, !dbg !376
  %20594 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20595 = extractvalue { double, double } %20592, 1, !dbg !376
  store double %20595, ptr %20594, align 8, !dbg !376
  %20596 = load double, ptr %16, align 8, !dbg !377
  %20597 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20598 = load double, ptr %20597, align 8, !dbg !377
  %20599 = load double, ptr %17, align 8, !dbg !377
  %20600 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20601 = load double, ptr %20600, align 8, !dbg !377
  %20602 = call double @cross(double %20596, double %20598, double %20599, double %20601), !dbg !377
  %20603 = load i32, ptr %10, align 4, !dbg !378
  %20604 = sext i32 %20603 to i64, !dbg !379
  %20605 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20604, !dbg !379
  %20606 = load double, ptr %6, align 8, !dbg !380
  %20607 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20608 = load double, ptr %20607, align 8, !dbg !380
  %20609 = load double, ptr %20605, align 16, !dbg !380
  %20610 = getelementptr inbounds { double, double }, ptr %20605, i32 0, i32 1, !dbg !380
  %20611 = load double, ptr %20610, align 8, !dbg !380
  %20612 = call { double, double } @make_vec(double %20606, double %20608, double %20609, double %20611), !dbg !380
  %20613 = extractvalue { double, double } %20612, 0, !dbg !380
  store double %20613, ptr %18, align 8, !dbg !380
  %20614 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20615 = extractvalue { double, double } %20612, 1, !dbg !380
  store double %20615, ptr %20614, align 8, !dbg !380
  %20616 = load i32, ptr %10, align 4, !dbg !381
  %20617 = add nsw i32 %20616, 1, !dbg !382
  %20618 = sext i32 %20617 to i64, !dbg !383
  %20619 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20618, !dbg !383
  %20620 = load double, ptr %6, align 8, !dbg !384
  %20621 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20622 = load double, ptr %20621, align 8, !dbg !384
  %20623 = load double, ptr %20619, align 16, !dbg !384
  %20624 = getelementptr inbounds { double, double }, ptr %20619, i32 0, i32 1, !dbg !384
  %20625 = load double, ptr %20624, align 8, !dbg !384
  %20626 = call { double, double } @make_vec(double %20620, double %20622, double %20623, double %20625), !dbg !384
  %20627 = extractvalue { double, double } %20626, 0, !dbg !384
  store double %20627, ptr %19, align 8, !dbg !384
  %20628 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20629 = extractvalue { double, double } %20626, 1, !dbg !384
  store double %20629, ptr %20628, align 8, !dbg !384
  %20630 = load double, ptr %18, align 8, !dbg !385
  %20631 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20632 = load double, ptr %20631, align 8, !dbg !385
  %20633 = load double, ptr %19, align 8, !dbg !385
  %20634 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20635 = load double, ptr %20634, align 8, !dbg !385
  %20636 = call double @dot(double %20630, double %20632, double %20633, double %20635), !dbg !385
  %20637 = call double @atan2(double noundef %20602, double noundef %20636) #6, !dbg !386
  store double %20637, ptr %13, align 8, !dbg !387
  %20638 = load double, ptr %13, align 8, !dbg !388
  %20639 = load double, ptr %14, align 8, !dbg !389
  %20640 = fadd double %20639, %20638, !dbg !389
  store double %20640, ptr %14, align 8, !dbg !389
  %20641 = load double, ptr %13, align 8, !dbg !390
  %20642 = fsub double %20641, 0x400921FB54442D18, !dbg !392
  %20643 = call double @llvm.fabs.f64(double %20642), !dbg !393
  %20644 = fcmp ole double %20643, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20644, label %14330, label %20645, !dbg !395

20645:                                            ; preds = %20568
  %20646 = load double, ptr %13, align 8, !dbg !396
  %20647 = fadd double %20646, 0x400921FB54442D18, !dbg !397
  %20648 = call double @llvm.fabs.f64(double %20647), !dbg !398
  %20649 = fcmp ole double %20648, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20649, label %14330, label %20650, !dbg !400

20650:                                            ; preds = %20645
  br label %20651, !dbg !403

20651:                                            ; preds = %20650
  %20652 = load i32, ptr %10, align 4, !dbg !404
  %20653 = add nsw i32 %20652, 1, !dbg !404
  store i32 %20653, ptr %10, align 4, !dbg !404
  %20654 = load i32, ptr %10, align 4, !dbg !364
  %20655 = load i32, ptr %8, align 4, !dbg !366
  %20656 = icmp slt i32 %20654, %20655, !dbg !367
  br i1 %20656, label %20657, label %48422, !dbg !368

20657:                                            ; preds = %20651
  %20658 = load i32, ptr %10, align 4, !dbg !369
  %20659 = sext i32 %20658 to i64, !dbg !371
  %20660 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20659, !dbg !371
  %20661 = load double, ptr %6, align 8, !dbg !372
  %20662 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20663 = load double, ptr %20662, align 8, !dbg !372
  %20664 = load double, ptr %20660, align 16, !dbg !372
  %20665 = getelementptr inbounds { double, double }, ptr %20660, i32 0, i32 1, !dbg !372
  %20666 = load double, ptr %20665, align 8, !dbg !372
  %20667 = call { double, double } @make_vec(double %20661, double %20663, double %20664, double %20666), !dbg !372
  %20668 = extractvalue { double, double } %20667, 0, !dbg !372
  store double %20668, ptr %16, align 8, !dbg !372
  %20669 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20670 = extractvalue { double, double } %20667, 1, !dbg !372
  store double %20670, ptr %20669, align 8, !dbg !372
  %20671 = load i32, ptr %10, align 4, !dbg !373
  %20672 = add nsw i32 %20671, 1, !dbg !374
  %20673 = sext i32 %20672 to i64, !dbg !375
  %20674 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20673, !dbg !375
  %20675 = load double, ptr %6, align 8, !dbg !376
  %20676 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20677 = load double, ptr %20676, align 8, !dbg !376
  %20678 = load double, ptr %20674, align 16, !dbg !376
  %20679 = getelementptr inbounds { double, double }, ptr %20674, i32 0, i32 1, !dbg !376
  %20680 = load double, ptr %20679, align 8, !dbg !376
  %20681 = call { double, double } @make_vec(double %20675, double %20677, double %20678, double %20680), !dbg !376
  %20682 = extractvalue { double, double } %20681, 0, !dbg !376
  store double %20682, ptr %17, align 8, !dbg !376
  %20683 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20684 = extractvalue { double, double } %20681, 1, !dbg !376
  store double %20684, ptr %20683, align 8, !dbg !376
  %20685 = load double, ptr %16, align 8, !dbg !377
  %20686 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20687 = load double, ptr %20686, align 8, !dbg !377
  %20688 = load double, ptr %17, align 8, !dbg !377
  %20689 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20690 = load double, ptr %20689, align 8, !dbg !377
  %20691 = call double @cross(double %20685, double %20687, double %20688, double %20690), !dbg !377
  %20692 = load i32, ptr %10, align 4, !dbg !378
  %20693 = sext i32 %20692 to i64, !dbg !379
  %20694 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20693, !dbg !379
  %20695 = load double, ptr %6, align 8, !dbg !380
  %20696 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20697 = load double, ptr %20696, align 8, !dbg !380
  %20698 = load double, ptr %20694, align 16, !dbg !380
  %20699 = getelementptr inbounds { double, double }, ptr %20694, i32 0, i32 1, !dbg !380
  %20700 = load double, ptr %20699, align 8, !dbg !380
  %20701 = call { double, double } @make_vec(double %20695, double %20697, double %20698, double %20700), !dbg !380
  %20702 = extractvalue { double, double } %20701, 0, !dbg !380
  store double %20702, ptr %18, align 8, !dbg !380
  %20703 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20704 = extractvalue { double, double } %20701, 1, !dbg !380
  store double %20704, ptr %20703, align 8, !dbg !380
  %20705 = load i32, ptr %10, align 4, !dbg !381
  %20706 = add nsw i32 %20705, 1, !dbg !382
  %20707 = sext i32 %20706 to i64, !dbg !383
  %20708 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20707, !dbg !383
  %20709 = load double, ptr %6, align 8, !dbg !384
  %20710 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20711 = load double, ptr %20710, align 8, !dbg !384
  %20712 = load double, ptr %20708, align 16, !dbg !384
  %20713 = getelementptr inbounds { double, double }, ptr %20708, i32 0, i32 1, !dbg !384
  %20714 = load double, ptr %20713, align 8, !dbg !384
  %20715 = call { double, double } @make_vec(double %20709, double %20711, double %20712, double %20714), !dbg !384
  %20716 = extractvalue { double, double } %20715, 0, !dbg !384
  store double %20716, ptr %19, align 8, !dbg !384
  %20717 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20718 = extractvalue { double, double } %20715, 1, !dbg !384
  store double %20718, ptr %20717, align 8, !dbg !384
  %20719 = load double, ptr %18, align 8, !dbg !385
  %20720 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20721 = load double, ptr %20720, align 8, !dbg !385
  %20722 = load double, ptr %19, align 8, !dbg !385
  %20723 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20724 = load double, ptr %20723, align 8, !dbg !385
  %20725 = call double @dot(double %20719, double %20721, double %20722, double %20724), !dbg !385
  %20726 = call double @atan2(double noundef %20691, double noundef %20725) #6, !dbg !386
  store double %20726, ptr %13, align 8, !dbg !387
  %20727 = load double, ptr %13, align 8, !dbg !388
  %20728 = load double, ptr %14, align 8, !dbg !389
  %20729 = fadd double %20728, %20727, !dbg !389
  store double %20729, ptr %14, align 8, !dbg !389
  %20730 = load double, ptr %13, align 8, !dbg !390
  %20731 = fsub double %20730, 0x400921FB54442D18, !dbg !392
  %20732 = call double @llvm.fabs.f64(double %20731), !dbg !393
  %20733 = fcmp ole double %20732, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20733, label %14330, label %20734, !dbg !395

20734:                                            ; preds = %20657
  %20735 = load double, ptr %13, align 8, !dbg !396
  %20736 = fadd double %20735, 0x400921FB54442D18, !dbg !397
  %20737 = call double @llvm.fabs.f64(double %20736), !dbg !398
  %20738 = fcmp ole double %20737, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20738, label %14330, label %20739, !dbg !400

20739:                                            ; preds = %20734
  br label %20740, !dbg !403

20740:                                            ; preds = %20739
  %20741 = load i32, ptr %10, align 4, !dbg !404
  %20742 = add nsw i32 %20741, 1, !dbg !404
  store i32 %20742, ptr %10, align 4, !dbg !404
  %20743 = load i32, ptr %10, align 4, !dbg !364
  %20744 = load i32, ptr %8, align 4, !dbg !366
  %20745 = icmp slt i32 %20743, %20744, !dbg !367
  br i1 %20745, label %20746, label %48422, !dbg !368

20746:                                            ; preds = %20740
  %20747 = load i32, ptr %10, align 4, !dbg !369
  %20748 = sext i32 %20747 to i64, !dbg !371
  %20749 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20748, !dbg !371
  %20750 = load double, ptr %6, align 8, !dbg !372
  %20751 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20752 = load double, ptr %20751, align 8, !dbg !372
  %20753 = load double, ptr %20749, align 16, !dbg !372
  %20754 = getelementptr inbounds { double, double }, ptr %20749, i32 0, i32 1, !dbg !372
  %20755 = load double, ptr %20754, align 8, !dbg !372
  %20756 = call { double, double } @make_vec(double %20750, double %20752, double %20753, double %20755), !dbg !372
  %20757 = extractvalue { double, double } %20756, 0, !dbg !372
  store double %20757, ptr %16, align 8, !dbg !372
  %20758 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20759 = extractvalue { double, double } %20756, 1, !dbg !372
  store double %20759, ptr %20758, align 8, !dbg !372
  %20760 = load i32, ptr %10, align 4, !dbg !373
  %20761 = add nsw i32 %20760, 1, !dbg !374
  %20762 = sext i32 %20761 to i64, !dbg !375
  %20763 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20762, !dbg !375
  %20764 = load double, ptr %6, align 8, !dbg !376
  %20765 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20766 = load double, ptr %20765, align 8, !dbg !376
  %20767 = load double, ptr %20763, align 16, !dbg !376
  %20768 = getelementptr inbounds { double, double }, ptr %20763, i32 0, i32 1, !dbg !376
  %20769 = load double, ptr %20768, align 8, !dbg !376
  %20770 = call { double, double } @make_vec(double %20764, double %20766, double %20767, double %20769), !dbg !376
  %20771 = extractvalue { double, double } %20770, 0, !dbg !376
  store double %20771, ptr %17, align 8, !dbg !376
  %20772 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20773 = extractvalue { double, double } %20770, 1, !dbg !376
  store double %20773, ptr %20772, align 8, !dbg !376
  %20774 = load double, ptr %16, align 8, !dbg !377
  %20775 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20776 = load double, ptr %20775, align 8, !dbg !377
  %20777 = load double, ptr %17, align 8, !dbg !377
  %20778 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20779 = load double, ptr %20778, align 8, !dbg !377
  %20780 = call double @cross(double %20774, double %20776, double %20777, double %20779), !dbg !377
  %20781 = load i32, ptr %10, align 4, !dbg !378
  %20782 = sext i32 %20781 to i64, !dbg !379
  %20783 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20782, !dbg !379
  %20784 = load double, ptr %6, align 8, !dbg !380
  %20785 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20786 = load double, ptr %20785, align 8, !dbg !380
  %20787 = load double, ptr %20783, align 16, !dbg !380
  %20788 = getelementptr inbounds { double, double }, ptr %20783, i32 0, i32 1, !dbg !380
  %20789 = load double, ptr %20788, align 8, !dbg !380
  %20790 = call { double, double } @make_vec(double %20784, double %20786, double %20787, double %20789), !dbg !380
  %20791 = extractvalue { double, double } %20790, 0, !dbg !380
  store double %20791, ptr %18, align 8, !dbg !380
  %20792 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20793 = extractvalue { double, double } %20790, 1, !dbg !380
  store double %20793, ptr %20792, align 8, !dbg !380
  %20794 = load i32, ptr %10, align 4, !dbg !381
  %20795 = add nsw i32 %20794, 1, !dbg !382
  %20796 = sext i32 %20795 to i64, !dbg !383
  %20797 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20796, !dbg !383
  %20798 = load double, ptr %6, align 8, !dbg !384
  %20799 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20800 = load double, ptr %20799, align 8, !dbg !384
  %20801 = load double, ptr %20797, align 16, !dbg !384
  %20802 = getelementptr inbounds { double, double }, ptr %20797, i32 0, i32 1, !dbg !384
  %20803 = load double, ptr %20802, align 8, !dbg !384
  %20804 = call { double, double } @make_vec(double %20798, double %20800, double %20801, double %20803), !dbg !384
  %20805 = extractvalue { double, double } %20804, 0, !dbg !384
  store double %20805, ptr %19, align 8, !dbg !384
  %20806 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20807 = extractvalue { double, double } %20804, 1, !dbg !384
  store double %20807, ptr %20806, align 8, !dbg !384
  %20808 = load double, ptr %18, align 8, !dbg !385
  %20809 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20810 = load double, ptr %20809, align 8, !dbg !385
  %20811 = load double, ptr %19, align 8, !dbg !385
  %20812 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20813 = load double, ptr %20812, align 8, !dbg !385
  %20814 = call double @dot(double %20808, double %20810, double %20811, double %20813), !dbg !385
  %20815 = call double @atan2(double noundef %20780, double noundef %20814) #6, !dbg !386
  store double %20815, ptr %13, align 8, !dbg !387
  %20816 = load double, ptr %13, align 8, !dbg !388
  %20817 = load double, ptr %14, align 8, !dbg !389
  %20818 = fadd double %20817, %20816, !dbg !389
  store double %20818, ptr %14, align 8, !dbg !389
  %20819 = load double, ptr %13, align 8, !dbg !390
  %20820 = fsub double %20819, 0x400921FB54442D18, !dbg !392
  %20821 = call double @llvm.fabs.f64(double %20820), !dbg !393
  %20822 = fcmp ole double %20821, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20822, label %14330, label %20823, !dbg !395

20823:                                            ; preds = %20746
  %20824 = load double, ptr %13, align 8, !dbg !396
  %20825 = fadd double %20824, 0x400921FB54442D18, !dbg !397
  %20826 = call double @llvm.fabs.f64(double %20825), !dbg !398
  %20827 = fcmp ole double %20826, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20827, label %14330, label %20828, !dbg !400

20828:                                            ; preds = %20823
  br label %20829, !dbg !403

20829:                                            ; preds = %20828
  %20830 = load i32, ptr %10, align 4, !dbg !404
  %20831 = add nsw i32 %20830, 1, !dbg !404
  store i32 %20831, ptr %10, align 4, !dbg !404
  %20832 = load i32, ptr %10, align 4, !dbg !364
  %20833 = load i32, ptr %8, align 4, !dbg !366
  %20834 = icmp slt i32 %20832, %20833, !dbg !367
  br i1 %20834, label %20835, label %48422, !dbg !368

20835:                                            ; preds = %20829
  %20836 = load i32, ptr %10, align 4, !dbg !369
  %20837 = sext i32 %20836 to i64, !dbg !371
  %20838 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20837, !dbg !371
  %20839 = load double, ptr %6, align 8, !dbg !372
  %20840 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20841 = load double, ptr %20840, align 8, !dbg !372
  %20842 = load double, ptr %20838, align 16, !dbg !372
  %20843 = getelementptr inbounds { double, double }, ptr %20838, i32 0, i32 1, !dbg !372
  %20844 = load double, ptr %20843, align 8, !dbg !372
  %20845 = call { double, double } @make_vec(double %20839, double %20841, double %20842, double %20844), !dbg !372
  %20846 = extractvalue { double, double } %20845, 0, !dbg !372
  store double %20846, ptr %16, align 8, !dbg !372
  %20847 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20848 = extractvalue { double, double } %20845, 1, !dbg !372
  store double %20848, ptr %20847, align 8, !dbg !372
  %20849 = load i32, ptr %10, align 4, !dbg !373
  %20850 = add nsw i32 %20849, 1, !dbg !374
  %20851 = sext i32 %20850 to i64, !dbg !375
  %20852 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20851, !dbg !375
  %20853 = load double, ptr %6, align 8, !dbg !376
  %20854 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20855 = load double, ptr %20854, align 8, !dbg !376
  %20856 = load double, ptr %20852, align 16, !dbg !376
  %20857 = getelementptr inbounds { double, double }, ptr %20852, i32 0, i32 1, !dbg !376
  %20858 = load double, ptr %20857, align 8, !dbg !376
  %20859 = call { double, double } @make_vec(double %20853, double %20855, double %20856, double %20858), !dbg !376
  %20860 = extractvalue { double, double } %20859, 0, !dbg !376
  store double %20860, ptr %17, align 8, !dbg !376
  %20861 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20862 = extractvalue { double, double } %20859, 1, !dbg !376
  store double %20862, ptr %20861, align 8, !dbg !376
  %20863 = load double, ptr %16, align 8, !dbg !377
  %20864 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20865 = load double, ptr %20864, align 8, !dbg !377
  %20866 = load double, ptr %17, align 8, !dbg !377
  %20867 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20868 = load double, ptr %20867, align 8, !dbg !377
  %20869 = call double @cross(double %20863, double %20865, double %20866, double %20868), !dbg !377
  %20870 = load i32, ptr %10, align 4, !dbg !378
  %20871 = sext i32 %20870 to i64, !dbg !379
  %20872 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20871, !dbg !379
  %20873 = load double, ptr %6, align 8, !dbg !380
  %20874 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20875 = load double, ptr %20874, align 8, !dbg !380
  %20876 = load double, ptr %20872, align 16, !dbg !380
  %20877 = getelementptr inbounds { double, double }, ptr %20872, i32 0, i32 1, !dbg !380
  %20878 = load double, ptr %20877, align 8, !dbg !380
  %20879 = call { double, double } @make_vec(double %20873, double %20875, double %20876, double %20878), !dbg !380
  %20880 = extractvalue { double, double } %20879, 0, !dbg !380
  store double %20880, ptr %18, align 8, !dbg !380
  %20881 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20882 = extractvalue { double, double } %20879, 1, !dbg !380
  store double %20882, ptr %20881, align 8, !dbg !380
  %20883 = load i32, ptr %10, align 4, !dbg !381
  %20884 = add nsw i32 %20883, 1, !dbg !382
  %20885 = sext i32 %20884 to i64, !dbg !383
  %20886 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20885, !dbg !383
  %20887 = load double, ptr %6, align 8, !dbg !384
  %20888 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20889 = load double, ptr %20888, align 8, !dbg !384
  %20890 = load double, ptr %20886, align 16, !dbg !384
  %20891 = getelementptr inbounds { double, double }, ptr %20886, i32 0, i32 1, !dbg !384
  %20892 = load double, ptr %20891, align 8, !dbg !384
  %20893 = call { double, double } @make_vec(double %20887, double %20889, double %20890, double %20892), !dbg !384
  %20894 = extractvalue { double, double } %20893, 0, !dbg !384
  store double %20894, ptr %19, align 8, !dbg !384
  %20895 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20896 = extractvalue { double, double } %20893, 1, !dbg !384
  store double %20896, ptr %20895, align 8, !dbg !384
  %20897 = load double, ptr %18, align 8, !dbg !385
  %20898 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20899 = load double, ptr %20898, align 8, !dbg !385
  %20900 = load double, ptr %19, align 8, !dbg !385
  %20901 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20902 = load double, ptr %20901, align 8, !dbg !385
  %20903 = call double @dot(double %20897, double %20899, double %20900, double %20902), !dbg !385
  %20904 = call double @atan2(double noundef %20869, double noundef %20903) #6, !dbg !386
  store double %20904, ptr %13, align 8, !dbg !387
  %20905 = load double, ptr %13, align 8, !dbg !388
  %20906 = load double, ptr %14, align 8, !dbg !389
  %20907 = fadd double %20906, %20905, !dbg !389
  store double %20907, ptr %14, align 8, !dbg !389
  %20908 = load double, ptr %13, align 8, !dbg !390
  %20909 = fsub double %20908, 0x400921FB54442D18, !dbg !392
  %20910 = call double @llvm.fabs.f64(double %20909), !dbg !393
  %20911 = fcmp ole double %20910, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %20911, label %14330, label %20912, !dbg !395

20912:                                            ; preds = %20835
  %20913 = load double, ptr %13, align 8, !dbg !396
  %20914 = fadd double %20913, 0x400921FB54442D18, !dbg !397
  %20915 = call double @llvm.fabs.f64(double %20914), !dbg !398
  %20916 = fcmp ole double %20915, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %20916, label %14330, label %20917, !dbg !400

20917:                                            ; preds = %20912
  br label %20918, !dbg !403

20918:                                            ; preds = %20917
  %20919 = load i32, ptr %10, align 4, !dbg !404
  %20920 = add nsw i32 %20919, 1, !dbg !404
  store i32 %20920, ptr %10, align 4, !dbg !404
  %20921 = load i32, ptr %10, align 4, !dbg !364
  %20922 = load i32, ptr %8, align 4, !dbg !366
  %20923 = icmp slt i32 %20921, %20922, !dbg !367
  br i1 %20923, label %20924, label %48422, !dbg !368

20924:                                            ; preds = %20918
  %20925 = load i32, ptr %10, align 4, !dbg !369
  %20926 = sext i32 %20925 to i64, !dbg !371
  %20927 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20926, !dbg !371
  %20928 = load double, ptr %6, align 8, !dbg !372
  %20929 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %20930 = load double, ptr %20929, align 8, !dbg !372
  %20931 = load double, ptr %20927, align 16, !dbg !372
  %20932 = getelementptr inbounds { double, double }, ptr %20927, i32 0, i32 1, !dbg !372
  %20933 = load double, ptr %20932, align 8, !dbg !372
  %20934 = call { double, double } @make_vec(double %20928, double %20930, double %20931, double %20933), !dbg !372
  %20935 = extractvalue { double, double } %20934, 0, !dbg !372
  store double %20935, ptr %16, align 8, !dbg !372
  %20936 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %20937 = extractvalue { double, double } %20934, 1, !dbg !372
  store double %20937, ptr %20936, align 8, !dbg !372
  %20938 = load i32, ptr %10, align 4, !dbg !373
  %20939 = add nsw i32 %20938, 1, !dbg !374
  %20940 = sext i32 %20939 to i64, !dbg !375
  %20941 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20940, !dbg !375
  %20942 = load double, ptr %6, align 8, !dbg !376
  %20943 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %20944 = load double, ptr %20943, align 8, !dbg !376
  %20945 = load double, ptr %20941, align 16, !dbg !376
  %20946 = getelementptr inbounds { double, double }, ptr %20941, i32 0, i32 1, !dbg !376
  %20947 = load double, ptr %20946, align 8, !dbg !376
  %20948 = call { double, double } @make_vec(double %20942, double %20944, double %20945, double %20947), !dbg !376
  %20949 = extractvalue { double, double } %20948, 0, !dbg !376
  store double %20949, ptr %17, align 8, !dbg !376
  %20950 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %20951 = extractvalue { double, double } %20948, 1, !dbg !376
  store double %20951, ptr %20950, align 8, !dbg !376
  %20952 = load double, ptr %16, align 8, !dbg !377
  %20953 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %20954 = load double, ptr %20953, align 8, !dbg !377
  %20955 = load double, ptr %17, align 8, !dbg !377
  %20956 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %20957 = load double, ptr %20956, align 8, !dbg !377
  %20958 = call double @cross(double %20952, double %20954, double %20955, double %20957), !dbg !377
  %20959 = load i32, ptr %10, align 4, !dbg !378
  %20960 = sext i32 %20959 to i64, !dbg !379
  %20961 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20960, !dbg !379
  %20962 = load double, ptr %6, align 8, !dbg !380
  %20963 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %20964 = load double, ptr %20963, align 8, !dbg !380
  %20965 = load double, ptr %20961, align 16, !dbg !380
  %20966 = getelementptr inbounds { double, double }, ptr %20961, i32 0, i32 1, !dbg !380
  %20967 = load double, ptr %20966, align 8, !dbg !380
  %20968 = call { double, double } @make_vec(double %20962, double %20964, double %20965, double %20967), !dbg !380
  %20969 = extractvalue { double, double } %20968, 0, !dbg !380
  store double %20969, ptr %18, align 8, !dbg !380
  %20970 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %20971 = extractvalue { double, double } %20968, 1, !dbg !380
  store double %20971, ptr %20970, align 8, !dbg !380
  %20972 = load i32, ptr %10, align 4, !dbg !381
  %20973 = add nsw i32 %20972, 1, !dbg !382
  %20974 = sext i32 %20973 to i64, !dbg !383
  %20975 = getelementptr inbounds %struct.POINT, ptr %26, i64 %20974, !dbg !383
  %20976 = load double, ptr %6, align 8, !dbg !384
  %20977 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %20978 = load double, ptr %20977, align 8, !dbg !384
  %20979 = load double, ptr %20975, align 16, !dbg !384
  %20980 = getelementptr inbounds { double, double }, ptr %20975, i32 0, i32 1, !dbg !384
  %20981 = load double, ptr %20980, align 8, !dbg !384
  %20982 = call { double, double } @make_vec(double %20976, double %20978, double %20979, double %20981), !dbg !384
  %20983 = extractvalue { double, double } %20982, 0, !dbg !384
  store double %20983, ptr %19, align 8, !dbg !384
  %20984 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %20985 = extractvalue { double, double } %20982, 1, !dbg !384
  store double %20985, ptr %20984, align 8, !dbg !384
  %20986 = load double, ptr %18, align 8, !dbg !385
  %20987 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %20988 = load double, ptr %20987, align 8, !dbg !385
  %20989 = load double, ptr %19, align 8, !dbg !385
  %20990 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %20991 = load double, ptr %20990, align 8, !dbg !385
  %20992 = call double @dot(double %20986, double %20988, double %20989, double %20991), !dbg !385
  %20993 = call double @atan2(double noundef %20958, double noundef %20992) #6, !dbg !386
  store double %20993, ptr %13, align 8, !dbg !387
  %20994 = load double, ptr %13, align 8, !dbg !388
  %20995 = load double, ptr %14, align 8, !dbg !389
  %20996 = fadd double %20995, %20994, !dbg !389
  store double %20996, ptr %14, align 8, !dbg !389
  %20997 = load double, ptr %13, align 8, !dbg !390
  %20998 = fsub double %20997, 0x400921FB54442D18, !dbg !392
  %20999 = call double @llvm.fabs.f64(double %20998), !dbg !393
  %21000 = fcmp ole double %20999, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21000, label %14330, label %21001, !dbg !395

21001:                                            ; preds = %20924
  %21002 = load double, ptr %13, align 8, !dbg !396
  %21003 = fadd double %21002, 0x400921FB54442D18, !dbg !397
  %21004 = call double @llvm.fabs.f64(double %21003), !dbg !398
  %21005 = fcmp ole double %21004, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21005, label %14330, label %21006, !dbg !400

21006:                                            ; preds = %21001
  br label %21007, !dbg !403

21007:                                            ; preds = %21006
  %21008 = load i32, ptr %10, align 4, !dbg !404
  %21009 = add nsw i32 %21008, 1, !dbg !404
  store i32 %21009, ptr %10, align 4, !dbg !404
  %21010 = load i32, ptr %10, align 4, !dbg !364
  %21011 = load i32, ptr %8, align 4, !dbg !366
  %21012 = icmp slt i32 %21010, %21011, !dbg !367
  br i1 %21012, label %21013, label %48422, !dbg !368

21013:                                            ; preds = %21007
  %21014 = load i32, ptr %10, align 4, !dbg !369
  %21015 = sext i32 %21014 to i64, !dbg !371
  %21016 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21015, !dbg !371
  %21017 = load double, ptr %6, align 8, !dbg !372
  %21018 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21019 = load double, ptr %21018, align 8, !dbg !372
  %21020 = load double, ptr %21016, align 16, !dbg !372
  %21021 = getelementptr inbounds { double, double }, ptr %21016, i32 0, i32 1, !dbg !372
  %21022 = load double, ptr %21021, align 8, !dbg !372
  %21023 = call { double, double } @make_vec(double %21017, double %21019, double %21020, double %21022), !dbg !372
  %21024 = extractvalue { double, double } %21023, 0, !dbg !372
  store double %21024, ptr %16, align 8, !dbg !372
  %21025 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21026 = extractvalue { double, double } %21023, 1, !dbg !372
  store double %21026, ptr %21025, align 8, !dbg !372
  %21027 = load i32, ptr %10, align 4, !dbg !373
  %21028 = add nsw i32 %21027, 1, !dbg !374
  %21029 = sext i32 %21028 to i64, !dbg !375
  %21030 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21029, !dbg !375
  %21031 = load double, ptr %6, align 8, !dbg !376
  %21032 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21033 = load double, ptr %21032, align 8, !dbg !376
  %21034 = load double, ptr %21030, align 16, !dbg !376
  %21035 = getelementptr inbounds { double, double }, ptr %21030, i32 0, i32 1, !dbg !376
  %21036 = load double, ptr %21035, align 8, !dbg !376
  %21037 = call { double, double } @make_vec(double %21031, double %21033, double %21034, double %21036), !dbg !376
  %21038 = extractvalue { double, double } %21037, 0, !dbg !376
  store double %21038, ptr %17, align 8, !dbg !376
  %21039 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21040 = extractvalue { double, double } %21037, 1, !dbg !376
  store double %21040, ptr %21039, align 8, !dbg !376
  %21041 = load double, ptr %16, align 8, !dbg !377
  %21042 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21043 = load double, ptr %21042, align 8, !dbg !377
  %21044 = load double, ptr %17, align 8, !dbg !377
  %21045 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21046 = load double, ptr %21045, align 8, !dbg !377
  %21047 = call double @cross(double %21041, double %21043, double %21044, double %21046), !dbg !377
  %21048 = load i32, ptr %10, align 4, !dbg !378
  %21049 = sext i32 %21048 to i64, !dbg !379
  %21050 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21049, !dbg !379
  %21051 = load double, ptr %6, align 8, !dbg !380
  %21052 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21053 = load double, ptr %21052, align 8, !dbg !380
  %21054 = load double, ptr %21050, align 16, !dbg !380
  %21055 = getelementptr inbounds { double, double }, ptr %21050, i32 0, i32 1, !dbg !380
  %21056 = load double, ptr %21055, align 8, !dbg !380
  %21057 = call { double, double } @make_vec(double %21051, double %21053, double %21054, double %21056), !dbg !380
  %21058 = extractvalue { double, double } %21057, 0, !dbg !380
  store double %21058, ptr %18, align 8, !dbg !380
  %21059 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21060 = extractvalue { double, double } %21057, 1, !dbg !380
  store double %21060, ptr %21059, align 8, !dbg !380
  %21061 = load i32, ptr %10, align 4, !dbg !381
  %21062 = add nsw i32 %21061, 1, !dbg !382
  %21063 = sext i32 %21062 to i64, !dbg !383
  %21064 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21063, !dbg !383
  %21065 = load double, ptr %6, align 8, !dbg !384
  %21066 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21067 = load double, ptr %21066, align 8, !dbg !384
  %21068 = load double, ptr %21064, align 16, !dbg !384
  %21069 = getelementptr inbounds { double, double }, ptr %21064, i32 0, i32 1, !dbg !384
  %21070 = load double, ptr %21069, align 8, !dbg !384
  %21071 = call { double, double } @make_vec(double %21065, double %21067, double %21068, double %21070), !dbg !384
  %21072 = extractvalue { double, double } %21071, 0, !dbg !384
  store double %21072, ptr %19, align 8, !dbg !384
  %21073 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21074 = extractvalue { double, double } %21071, 1, !dbg !384
  store double %21074, ptr %21073, align 8, !dbg !384
  %21075 = load double, ptr %18, align 8, !dbg !385
  %21076 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21077 = load double, ptr %21076, align 8, !dbg !385
  %21078 = load double, ptr %19, align 8, !dbg !385
  %21079 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21080 = load double, ptr %21079, align 8, !dbg !385
  %21081 = call double @dot(double %21075, double %21077, double %21078, double %21080), !dbg !385
  %21082 = call double @atan2(double noundef %21047, double noundef %21081) #6, !dbg !386
  store double %21082, ptr %13, align 8, !dbg !387
  %21083 = load double, ptr %13, align 8, !dbg !388
  %21084 = load double, ptr %14, align 8, !dbg !389
  %21085 = fadd double %21084, %21083, !dbg !389
  store double %21085, ptr %14, align 8, !dbg !389
  %21086 = load double, ptr %13, align 8, !dbg !390
  %21087 = fsub double %21086, 0x400921FB54442D18, !dbg !392
  %21088 = call double @llvm.fabs.f64(double %21087), !dbg !393
  %21089 = fcmp ole double %21088, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21089, label %14330, label %21090, !dbg !395

21090:                                            ; preds = %21013
  %21091 = load double, ptr %13, align 8, !dbg !396
  %21092 = fadd double %21091, 0x400921FB54442D18, !dbg !397
  %21093 = call double @llvm.fabs.f64(double %21092), !dbg !398
  %21094 = fcmp ole double %21093, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21094, label %14330, label %21095, !dbg !400

21095:                                            ; preds = %21090
  br label %21096, !dbg !403

21096:                                            ; preds = %21095
  %21097 = load i32, ptr %10, align 4, !dbg !404
  %21098 = add nsw i32 %21097, 1, !dbg !404
  store i32 %21098, ptr %10, align 4, !dbg !404
  %21099 = load i32, ptr %10, align 4, !dbg !364
  %21100 = load i32, ptr %8, align 4, !dbg !366
  %21101 = icmp slt i32 %21099, %21100, !dbg !367
  br i1 %21101, label %21102, label %48422, !dbg !368

21102:                                            ; preds = %21096
  %21103 = load i32, ptr %10, align 4, !dbg !369
  %21104 = sext i32 %21103 to i64, !dbg !371
  %21105 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21104, !dbg !371
  %21106 = load double, ptr %6, align 8, !dbg !372
  %21107 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21108 = load double, ptr %21107, align 8, !dbg !372
  %21109 = load double, ptr %21105, align 16, !dbg !372
  %21110 = getelementptr inbounds { double, double }, ptr %21105, i32 0, i32 1, !dbg !372
  %21111 = load double, ptr %21110, align 8, !dbg !372
  %21112 = call { double, double } @make_vec(double %21106, double %21108, double %21109, double %21111), !dbg !372
  %21113 = extractvalue { double, double } %21112, 0, !dbg !372
  store double %21113, ptr %16, align 8, !dbg !372
  %21114 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21115 = extractvalue { double, double } %21112, 1, !dbg !372
  store double %21115, ptr %21114, align 8, !dbg !372
  %21116 = load i32, ptr %10, align 4, !dbg !373
  %21117 = add nsw i32 %21116, 1, !dbg !374
  %21118 = sext i32 %21117 to i64, !dbg !375
  %21119 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21118, !dbg !375
  %21120 = load double, ptr %6, align 8, !dbg !376
  %21121 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21122 = load double, ptr %21121, align 8, !dbg !376
  %21123 = load double, ptr %21119, align 16, !dbg !376
  %21124 = getelementptr inbounds { double, double }, ptr %21119, i32 0, i32 1, !dbg !376
  %21125 = load double, ptr %21124, align 8, !dbg !376
  %21126 = call { double, double } @make_vec(double %21120, double %21122, double %21123, double %21125), !dbg !376
  %21127 = extractvalue { double, double } %21126, 0, !dbg !376
  store double %21127, ptr %17, align 8, !dbg !376
  %21128 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21129 = extractvalue { double, double } %21126, 1, !dbg !376
  store double %21129, ptr %21128, align 8, !dbg !376
  %21130 = load double, ptr %16, align 8, !dbg !377
  %21131 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21132 = load double, ptr %21131, align 8, !dbg !377
  %21133 = load double, ptr %17, align 8, !dbg !377
  %21134 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21135 = load double, ptr %21134, align 8, !dbg !377
  %21136 = call double @cross(double %21130, double %21132, double %21133, double %21135), !dbg !377
  %21137 = load i32, ptr %10, align 4, !dbg !378
  %21138 = sext i32 %21137 to i64, !dbg !379
  %21139 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21138, !dbg !379
  %21140 = load double, ptr %6, align 8, !dbg !380
  %21141 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21142 = load double, ptr %21141, align 8, !dbg !380
  %21143 = load double, ptr %21139, align 16, !dbg !380
  %21144 = getelementptr inbounds { double, double }, ptr %21139, i32 0, i32 1, !dbg !380
  %21145 = load double, ptr %21144, align 8, !dbg !380
  %21146 = call { double, double } @make_vec(double %21140, double %21142, double %21143, double %21145), !dbg !380
  %21147 = extractvalue { double, double } %21146, 0, !dbg !380
  store double %21147, ptr %18, align 8, !dbg !380
  %21148 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21149 = extractvalue { double, double } %21146, 1, !dbg !380
  store double %21149, ptr %21148, align 8, !dbg !380
  %21150 = load i32, ptr %10, align 4, !dbg !381
  %21151 = add nsw i32 %21150, 1, !dbg !382
  %21152 = sext i32 %21151 to i64, !dbg !383
  %21153 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21152, !dbg !383
  %21154 = load double, ptr %6, align 8, !dbg !384
  %21155 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21156 = load double, ptr %21155, align 8, !dbg !384
  %21157 = load double, ptr %21153, align 16, !dbg !384
  %21158 = getelementptr inbounds { double, double }, ptr %21153, i32 0, i32 1, !dbg !384
  %21159 = load double, ptr %21158, align 8, !dbg !384
  %21160 = call { double, double } @make_vec(double %21154, double %21156, double %21157, double %21159), !dbg !384
  %21161 = extractvalue { double, double } %21160, 0, !dbg !384
  store double %21161, ptr %19, align 8, !dbg !384
  %21162 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21163 = extractvalue { double, double } %21160, 1, !dbg !384
  store double %21163, ptr %21162, align 8, !dbg !384
  %21164 = load double, ptr %18, align 8, !dbg !385
  %21165 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21166 = load double, ptr %21165, align 8, !dbg !385
  %21167 = load double, ptr %19, align 8, !dbg !385
  %21168 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21169 = load double, ptr %21168, align 8, !dbg !385
  %21170 = call double @dot(double %21164, double %21166, double %21167, double %21169), !dbg !385
  %21171 = call double @atan2(double noundef %21136, double noundef %21170) #6, !dbg !386
  store double %21171, ptr %13, align 8, !dbg !387
  %21172 = load double, ptr %13, align 8, !dbg !388
  %21173 = load double, ptr %14, align 8, !dbg !389
  %21174 = fadd double %21173, %21172, !dbg !389
  store double %21174, ptr %14, align 8, !dbg !389
  %21175 = load double, ptr %13, align 8, !dbg !390
  %21176 = fsub double %21175, 0x400921FB54442D18, !dbg !392
  %21177 = call double @llvm.fabs.f64(double %21176), !dbg !393
  %21178 = fcmp ole double %21177, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21178, label %14330, label %21179, !dbg !395

21179:                                            ; preds = %21102
  %21180 = load double, ptr %13, align 8, !dbg !396
  %21181 = fadd double %21180, 0x400921FB54442D18, !dbg !397
  %21182 = call double @llvm.fabs.f64(double %21181), !dbg !398
  %21183 = fcmp ole double %21182, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21183, label %14330, label %21184, !dbg !400

21184:                                            ; preds = %21179
  br label %21185, !dbg !403

21185:                                            ; preds = %21184
  %21186 = load i32, ptr %10, align 4, !dbg !404
  %21187 = add nsw i32 %21186, 1, !dbg !404
  store i32 %21187, ptr %10, align 4, !dbg !404
  %21188 = load i32, ptr %10, align 4, !dbg !364
  %21189 = load i32, ptr %8, align 4, !dbg !366
  %21190 = icmp slt i32 %21188, %21189, !dbg !367
  br i1 %21190, label %21191, label %48422, !dbg !368

21191:                                            ; preds = %21185
  %21192 = load i32, ptr %10, align 4, !dbg !369
  %21193 = sext i32 %21192 to i64, !dbg !371
  %21194 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21193, !dbg !371
  %21195 = load double, ptr %6, align 8, !dbg !372
  %21196 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21197 = load double, ptr %21196, align 8, !dbg !372
  %21198 = load double, ptr %21194, align 16, !dbg !372
  %21199 = getelementptr inbounds { double, double }, ptr %21194, i32 0, i32 1, !dbg !372
  %21200 = load double, ptr %21199, align 8, !dbg !372
  %21201 = call { double, double } @make_vec(double %21195, double %21197, double %21198, double %21200), !dbg !372
  %21202 = extractvalue { double, double } %21201, 0, !dbg !372
  store double %21202, ptr %16, align 8, !dbg !372
  %21203 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21204 = extractvalue { double, double } %21201, 1, !dbg !372
  store double %21204, ptr %21203, align 8, !dbg !372
  %21205 = load i32, ptr %10, align 4, !dbg !373
  %21206 = add nsw i32 %21205, 1, !dbg !374
  %21207 = sext i32 %21206 to i64, !dbg !375
  %21208 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21207, !dbg !375
  %21209 = load double, ptr %6, align 8, !dbg !376
  %21210 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21211 = load double, ptr %21210, align 8, !dbg !376
  %21212 = load double, ptr %21208, align 16, !dbg !376
  %21213 = getelementptr inbounds { double, double }, ptr %21208, i32 0, i32 1, !dbg !376
  %21214 = load double, ptr %21213, align 8, !dbg !376
  %21215 = call { double, double } @make_vec(double %21209, double %21211, double %21212, double %21214), !dbg !376
  %21216 = extractvalue { double, double } %21215, 0, !dbg !376
  store double %21216, ptr %17, align 8, !dbg !376
  %21217 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21218 = extractvalue { double, double } %21215, 1, !dbg !376
  store double %21218, ptr %21217, align 8, !dbg !376
  %21219 = load double, ptr %16, align 8, !dbg !377
  %21220 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21221 = load double, ptr %21220, align 8, !dbg !377
  %21222 = load double, ptr %17, align 8, !dbg !377
  %21223 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21224 = load double, ptr %21223, align 8, !dbg !377
  %21225 = call double @cross(double %21219, double %21221, double %21222, double %21224), !dbg !377
  %21226 = load i32, ptr %10, align 4, !dbg !378
  %21227 = sext i32 %21226 to i64, !dbg !379
  %21228 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21227, !dbg !379
  %21229 = load double, ptr %6, align 8, !dbg !380
  %21230 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21231 = load double, ptr %21230, align 8, !dbg !380
  %21232 = load double, ptr %21228, align 16, !dbg !380
  %21233 = getelementptr inbounds { double, double }, ptr %21228, i32 0, i32 1, !dbg !380
  %21234 = load double, ptr %21233, align 8, !dbg !380
  %21235 = call { double, double } @make_vec(double %21229, double %21231, double %21232, double %21234), !dbg !380
  %21236 = extractvalue { double, double } %21235, 0, !dbg !380
  store double %21236, ptr %18, align 8, !dbg !380
  %21237 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21238 = extractvalue { double, double } %21235, 1, !dbg !380
  store double %21238, ptr %21237, align 8, !dbg !380
  %21239 = load i32, ptr %10, align 4, !dbg !381
  %21240 = add nsw i32 %21239, 1, !dbg !382
  %21241 = sext i32 %21240 to i64, !dbg !383
  %21242 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21241, !dbg !383
  %21243 = load double, ptr %6, align 8, !dbg !384
  %21244 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21245 = load double, ptr %21244, align 8, !dbg !384
  %21246 = load double, ptr %21242, align 16, !dbg !384
  %21247 = getelementptr inbounds { double, double }, ptr %21242, i32 0, i32 1, !dbg !384
  %21248 = load double, ptr %21247, align 8, !dbg !384
  %21249 = call { double, double } @make_vec(double %21243, double %21245, double %21246, double %21248), !dbg !384
  %21250 = extractvalue { double, double } %21249, 0, !dbg !384
  store double %21250, ptr %19, align 8, !dbg !384
  %21251 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21252 = extractvalue { double, double } %21249, 1, !dbg !384
  store double %21252, ptr %21251, align 8, !dbg !384
  %21253 = load double, ptr %18, align 8, !dbg !385
  %21254 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21255 = load double, ptr %21254, align 8, !dbg !385
  %21256 = load double, ptr %19, align 8, !dbg !385
  %21257 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21258 = load double, ptr %21257, align 8, !dbg !385
  %21259 = call double @dot(double %21253, double %21255, double %21256, double %21258), !dbg !385
  %21260 = call double @atan2(double noundef %21225, double noundef %21259) #6, !dbg !386
  store double %21260, ptr %13, align 8, !dbg !387
  %21261 = load double, ptr %13, align 8, !dbg !388
  %21262 = load double, ptr %14, align 8, !dbg !389
  %21263 = fadd double %21262, %21261, !dbg !389
  store double %21263, ptr %14, align 8, !dbg !389
  %21264 = load double, ptr %13, align 8, !dbg !390
  %21265 = fsub double %21264, 0x400921FB54442D18, !dbg !392
  %21266 = call double @llvm.fabs.f64(double %21265), !dbg !393
  %21267 = fcmp ole double %21266, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21267, label %14330, label %21268, !dbg !395

21268:                                            ; preds = %21191
  %21269 = load double, ptr %13, align 8, !dbg !396
  %21270 = fadd double %21269, 0x400921FB54442D18, !dbg !397
  %21271 = call double @llvm.fabs.f64(double %21270), !dbg !398
  %21272 = fcmp ole double %21271, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21272, label %14330, label %21273, !dbg !400

21273:                                            ; preds = %21268
  br label %21274, !dbg !403

21274:                                            ; preds = %21273
  %21275 = load i32, ptr %10, align 4, !dbg !404
  %21276 = add nsw i32 %21275, 1, !dbg !404
  store i32 %21276, ptr %10, align 4, !dbg !404
  %21277 = load i32, ptr %10, align 4, !dbg !364
  %21278 = load i32, ptr %8, align 4, !dbg !366
  %21279 = icmp slt i32 %21277, %21278, !dbg !367
  br i1 %21279, label %21280, label %48422, !dbg !368

21280:                                            ; preds = %21274
  %21281 = load i32, ptr %10, align 4, !dbg !369
  %21282 = sext i32 %21281 to i64, !dbg !371
  %21283 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21282, !dbg !371
  %21284 = load double, ptr %6, align 8, !dbg !372
  %21285 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21286 = load double, ptr %21285, align 8, !dbg !372
  %21287 = load double, ptr %21283, align 16, !dbg !372
  %21288 = getelementptr inbounds { double, double }, ptr %21283, i32 0, i32 1, !dbg !372
  %21289 = load double, ptr %21288, align 8, !dbg !372
  %21290 = call { double, double } @make_vec(double %21284, double %21286, double %21287, double %21289), !dbg !372
  %21291 = extractvalue { double, double } %21290, 0, !dbg !372
  store double %21291, ptr %16, align 8, !dbg !372
  %21292 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21293 = extractvalue { double, double } %21290, 1, !dbg !372
  store double %21293, ptr %21292, align 8, !dbg !372
  %21294 = load i32, ptr %10, align 4, !dbg !373
  %21295 = add nsw i32 %21294, 1, !dbg !374
  %21296 = sext i32 %21295 to i64, !dbg !375
  %21297 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21296, !dbg !375
  %21298 = load double, ptr %6, align 8, !dbg !376
  %21299 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21300 = load double, ptr %21299, align 8, !dbg !376
  %21301 = load double, ptr %21297, align 16, !dbg !376
  %21302 = getelementptr inbounds { double, double }, ptr %21297, i32 0, i32 1, !dbg !376
  %21303 = load double, ptr %21302, align 8, !dbg !376
  %21304 = call { double, double } @make_vec(double %21298, double %21300, double %21301, double %21303), !dbg !376
  %21305 = extractvalue { double, double } %21304, 0, !dbg !376
  store double %21305, ptr %17, align 8, !dbg !376
  %21306 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21307 = extractvalue { double, double } %21304, 1, !dbg !376
  store double %21307, ptr %21306, align 8, !dbg !376
  %21308 = load double, ptr %16, align 8, !dbg !377
  %21309 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21310 = load double, ptr %21309, align 8, !dbg !377
  %21311 = load double, ptr %17, align 8, !dbg !377
  %21312 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21313 = load double, ptr %21312, align 8, !dbg !377
  %21314 = call double @cross(double %21308, double %21310, double %21311, double %21313), !dbg !377
  %21315 = load i32, ptr %10, align 4, !dbg !378
  %21316 = sext i32 %21315 to i64, !dbg !379
  %21317 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21316, !dbg !379
  %21318 = load double, ptr %6, align 8, !dbg !380
  %21319 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21320 = load double, ptr %21319, align 8, !dbg !380
  %21321 = load double, ptr %21317, align 16, !dbg !380
  %21322 = getelementptr inbounds { double, double }, ptr %21317, i32 0, i32 1, !dbg !380
  %21323 = load double, ptr %21322, align 8, !dbg !380
  %21324 = call { double, double } @make_vec(double %21318, double %21320, double %21321, double %21323), !dbg !380
  %21325 = extractvalue { double, double } %21324, 0, !dbg !380
  store double %21325, ptr %18, align 8, !dbg !380
  %21326 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21327 = extractvalue { double, double } %21324, 1, !dbg !380
  store double %21327, ptr %21326, align 8, !dbg !380
  %21328 = load i32, ptr %10, align 4, !dbg !381
  %21329 = add nsw i32 %21328, 1, !dbg !382
  %21330 = sext i32 %21329 to i64, !dbg !383
  %21331 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21330, !dbg !383
  %21332 = load double, ptr %6, align 8, !dbg !384
  %21333 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21334 = load double, ptr %21333, align 8, !dbg !384
  %21335 = load double, ptr %21331, align 16, !dbg !384
  %21336 = getelementptr inbounds { double, double }, ptr %21331, i32 0, i32 1, !dbg !384
  %21337 = load double, ptr %21336, align 8, !dbg !384
  %21338 = call { double, double } @make_vec(double %21332, double %21334, double %21335, double %21337), !dbg !384
  %21339 = extractvalue { double, double } %21338, 0, !dbg !384
  store double %21339, ptr %19, align 8, !dbg !384
  %21340 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21341 = extractvalue { double, double } %21338, 1, !dbg !384
  store double %21341, ptr %21340, align 8, !dbg !384
  %21342 = load double, ptr %18, align 8, !dbg !385
  %21343 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21344 = load double, ptr %21343, align 8, !dbg !385
  %21345 = load double, ptr %19, align 8, !dbg !385
  %21346 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21347 = load double, ptr %21346, align 8, !dbg !385
  %21348 = call double @dot(double %21342, double %21344, double %21345, double %21347), !dbg !385
  %21349 = call double @atan2(double noundef %21314, double noundef %21348) #6, !dbg !386
  store double %21349, ptr %13, align 8, !dbg !387
  %21350 = load double, ptr %13, align 8, !dbg !388
  %21351 = load double, ptr %14, align 8, !dbg !389
  %21352 = fadd double %21351, %21350, !dbg !389
  store double %21352, ptr %14, align 8, !dbg !389
  %21353 = load double, ptr %13, align 8, !dbg !390
  %21354 = fsub double %21353, 0x400921FB54442D18, !dbg !392
  %21355 = call double @llvm.fabs.f64(double %21354), !dbg !393
  %21356 = fcmp ole double %21355, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21356, label %14330, label %21357, !dbg !395

21357:                                            ; preds = %21280
  %21358 = load double, ptr %13, align 8, !dbg !396
  %21359 = fadd double %21358, 0x400921FB54442D18, !dbg !397
  %21360 = call double @llvm.fabs.f64(double %21359), !dbg !398
  %21361 = fcmp ole double %21360, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21361, label %14330, label %21362, !dbg !400

21362:                                            ; preds = %21357
  br label %21363, !dbg !403

21363:                                            ; preds = %21362
  %21364 = load i32, ptr %10, align 4, !dbg !404
  %21365 = add nsw i32 %21364, 1, !dbg !404
  store i32 %21365, ptr %10, align 4, !dbg !404
  %21366 = load i32, ptr %10, align 4, !dbg !364
  %21367 = load i32, ptr %8, align 4, !dbg !366
  %21368 = icmp slt i32 %21366, %21367, !dbg !367
  br i1 %21368, label %21369, label %48422, !dbg !368

21369:                                            ; preds = %21363
  %21370 = load i32, ptr %10, align 4, !dbg !369
  %21371 = sext i32 %21370 to i64, !dbg !371
  %21372 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21371, !dbg !371
  %21373 = load double, ptr %6, align 8, !dbg !372
  %21374 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21375 = load double, ptr %21374, align 8, !dbg !372
  %21376 = load double, ptr %21372, align 16, !dbg !372
  %21377 = getelementptr inbounds { double, double }, ptr %21372, i32 0, i32 1, !dbg !372
  %21378 = load double, ptr %21377, align 8, !dbg !372
  %21379 = call { double, double } @make_vec(double %21373, double %21375, double %21376, double %21378), !dbg !372
  %21380 = extractvalue { double, double } %21379, 0, !dbg !372
  store double %21380, ptr %16, align 8, !dbg !372
  %21381 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21382 = extractvalue { double, double } %21379, 1, !dbg !372
  store double %21382, ptr %21381, align 8, !dbg !372
  %21383 = load i32, ptr %10, align 4, !dbg !373
  %21384 = add nsw i32 %21383, 1, !dbg !374
  %21385 = sext i32 %21384 to i64, !dbg !375
  %21386 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21385, !dbg !375
  %21387 = load double, ptr %6, align 8, !dbg !376
  %21388 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21389 = load double, ptr %21388, align 8, !dbg !376
  %21390 = load double, ptr %21386, align 16, !dbg !376
  %21391 = getelementptr inbounds { double, double }, ptr %21386, i32 0, i32 1, !dbg !376
  %21392 = load double, ptr %21391, align 8, !dbg !376
  %21393 = call { double, double } @make_vec(double %21387, double %21389, double %21390, double %21392), !dbg !376
  %21394 = extractvalue { double, double } %21393, 0, !dbg !376
  store double %21394, ptr %17, align 8, !dbg !376
  %21395 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21396 = extractvalue { double, double } %21393, 1, !dbg !376
  store double %21396, ptr %21395, align 8, !dbg !376
  %21397 = load double, ptr %16, align 8, !dbg !377
  %21398 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21399 = load double, ptr %21398, align 8, !dbg !377
  %21400 = load double, ptr %17, align 8, !dbg !377
  %21401 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21402 = load double, ptr %21401, align 8, !dbg !377
  %21403 = call double @cross(double %21397, double %21399, double %21400, double %21402), !dbg !377
  %21404 = load i32, ptr %10, align 4, !dbg !378
  %21405 = sext i32 %21404 to i64, !dbg !379
  %21406 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21405, !dbg !379
  %21407 = load double, ptr %6, align 8, !dbg !380
  %21408 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21409 = load double, ptr %21408, align 8, !dbg !380
  %21410 = load double, ptr %21406, align 16, !dbg !380
  %21411 = getelementptr inbounds { double, double }, ptr %21406, i32 0, i32 1, !dbg !380
  %21412 = load double, ptr %21411, align 8, !dbg !380
  %21413 = call { double, double } @make_vec(double %21407, double %21409, double %21410, double %21412), !dbg !380
  %21414 = extractvalue { double, double } %21413, 0, !dbg !380
  store double %21414, ptr %18, align 8, !dbg !380
  %21415 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21416 = extractvalue { double, double } %21413, 1, !dbg !380
  store double %21416, ptr %21415, align 8, !dbg !380
  %21417 = load i32, ptr %10, align 4, !dbg !381
  %21418 = add nsw i32 %21417, 1, !dbg !382
  %21419 = sext i32 %21418 to i64, !dbg !383
  %21420 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21419, !dbg !383
  %21421 = load double, ptr %6, align 8, !dbg !384
  %21422 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21423 = load double, ptr %21422, align 8, !dbg !384
  %21424 = load double, ptr %21420, align 16, !dbg !384
  %21425 = getelementptr inbounds { double, double }, ptr %21420, i32 0, i32 1, !dbg !384
  %21426 = load double, ptr %21425, align 8, !dbg !384
  %21427 = call { double, double } @make_vec(double %21421, double %21423, double %21424, double %21426), !dbg !384
  %21428 = extractvalue { double, double } %21427, 0, !dbg !384
  store double %21428, ptr %19, align 8, !dbg !384
  %21429 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21430 = extractvalue { double, double } %21427, 1, !dbg !384
  store double %21430, ptr %21429, align 8, !dbg !384
  %21431 = load double, ptr %18, align 8, !dbg !385
  %21432 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21433 = load double, ptr %21432, align 8, !dbg !385
  %21434 = load double, ptr %19, align 8, !dbg !385
  %21435 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21436 = load double, ptr %21435, align 8, !dbg !385
  %21437 = call double @dot(double %21431, double %21433, double %21434, double %21436), !dbg !385
  %21438 = call double @atan2(double noundef %21403, double noundef %21437) #6, !dbg !386
  store double %21438, ptr %13, align 8, !dbg !387
  %21439 = load double, ptr %13, align 8, !dbg !388
  %21440 = load double, ptr %14, align 8, !dbg !389
  %21441 = fadd double %21440, %21439, !dbg !389
  store double %21441, ptr %14, align 8, !dbg !389
  %21442 = load double, ptr %13, align 8, !dbg !390
  %21443 = fsub double %21442, 0x400921FB54442D18, !dbg !392
  %21444 = call double @llvm.fabs.f64(double %21443), !dbg !393
  %21445 = fcmp ole double %21444, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21445, label %14330, label %21446, !dbg !395

21446:                                            ; preds = %21369
  %21447 = load double, ptr %13, align 8, !dbg !396
  %21448 = fadd double %21447, 0x400921FB54442D18, !dbg !397
  %21449 = call double @llvm.fabs.f64(double %21448), !dbg !398
  %21450 = fcmp ole double %21449, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21450, label %14330, label %21451, !dbg !400

21451:                                            ; preds = %21446
  br label %21452, !dbg !403

21452:                                            ; preds = %21451
  %21453 = load i32, ptr %10, align 4, !dbg !404
  %21454 = add nsw i32 %21453, 1, !dbg !404
  store i32 %21454, ptr %10, align 4, !dbg !404
  %21455 = load i32, ptr %10, align 4, !dbg !364
  %21456 = load i32, ptr %8, align 4, !dbg !366
  %21457 = icmp slt i32 %21455, %21456, !dbg !367
  br i1 %21457, label %21458, label %48422, !dbg !368

21458:                                            ; preds = %21452
  %21459 = load i32, ptr %10, align 4, !dbg !369
  %21460 = sext i32 %21459 to i64, !dbg !371
  %21461 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21460, !dbg !371
  %21462 = load double, ptr %6, align 8, !dbg !372
  %21463 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21464 = load double, ptr %21463, align 8, !dbg !372
  %21465 = load double, ptr %21461, align 16, !dbg !372
  %21466 = getelementptr inbounds { double, double }, ptr %21461, i32 0, i32 1, !dbg !372
  %21467 = load double, ptr %21466, align 8, !dbg !372
  %21468 = call { double, double } @make_vec(double %21462, double %21464, double %21465, double %21467), !dbg !372
  %21469 = extractvalue { double, double } %21468, 0, !dbg !372
  store double %21469, ptr %16, align 8, !dbg !372
  %21470 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21471 = extractvalue { double, double } %21468, 1, !dbg !372
  store double %21471, ptr %21470, align 8, !dbg !372
  %21472 = load i32, ptr %10, align 4, !dbg !373
  %21473 = add nsw i32 %21472, 1, !dbg !374
  %21474 = sext i32 %21473 to i64, !dbg !375
  %21475 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21474, !dbg !375
  %21476 = load double, ptr %6, align 8, !dbg !376
  %21477 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21478 = load double, ptr %21477, align 8, !dbg !376
  %21479 = load double, ptr %21475, align 16, !dbg !376
  %21480 = getelementptr inbounds { double, double }, ptr %21475, i32 0, i32 1, !dbg !376
  %21481 = load double, ptr %21480, align 8, !dbg !376
  %21482 = call { double, double } @make_vec(double %21476, double %21478, double %21479, double %21481), !dbg !376
  %21483 = extractvalue { double, double } %21482, 0, !dbg !376
  store double %21483, ptr %17, align 8, !dbg !376
  %21484 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21485 = extractvalue { double, double } %21482, 1, !dbg !376
  store double %21485, ptr %21484, align 8, !dbg !376
  %21486 = load double, ptr %16, align 8, !dbg !377
  %21487 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21488 = load double, ptr %21487, align 8, !dbg !377
  %21489 = load double, ptr %17, align 8, !dbg !377
  %21490 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21491 = load double, ptr %21490, align 8, !dbg !377
  %21492 = call double @cross(double %21486, double %21488, double %21489, double %21491), !dbg !377
  %21493 = load i32, ptr %10, align 4, !dbg !378
  %21494 = sext i32 %21493 to i64, !dbg !379
  %21495 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21494, !dbg !379
  %21496 = load double, ptr %6, align 8, !dbg !380
  %21497 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21498 = load double, ptr %21497, align 8, !dbg !380
  %21499 = load double, ptr %21495, align 16, !dbg !380
  %21500 = getelementptr inbounds { double, double }, ptr %21495, i32 0, i32 1, !dbg !380
  %21501 = load double, ptr %21500, align 8, !dbg !380
  %21502 = call { double, double } @make_vec(double %21496, double %21498, double %21499, double %21501), !dbg !380
  %21503 = extractvalue { double, double } %21502, 0, !dbg !380
  store double %21503, ptr %18, align 8, !dbg !380
  %21504 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21505 = extractvalue { double, double } %21502, 1, !dbg !380
  store double %21505, ptr %21504, align 8, !dbg !380
  %21506 = load i32, ptr %10, align 4, !dbg !381
  %21507 = add nsw i32 %21506, 1, !dbg !382
  %21508 = sext i32 %21507 to i64, !dbg !383
  %21509 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21508, !dbg !383
  %21510 = load double, ptr %6, align 8, !dbg !384
  %21511 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21512 = load double, ptr %21511, align 8, !dbg !384
  %21513 = load double, ptr %21509, align 16, !dbg !384
  %21514 = getelementptr inbounds { double, double }, ptr %21509, i32 0, i32 1, !dbg !384
  %21515 = load double, ptr %21514, align 8, !dbg !384
  %21516 = call { double, double } @make_vec(double %21510, double %21512, double %21513, double %21515), !dbg !384
  %21517 = extractvalue { double, double } %21516, 0, !dbg !384
  store double %21517, ptr %19, align 8, !dbg !384
  %21518 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21519 = extractvalue { double, double } %21516, 1, !dbg !384
  store double %21519, ptr %21518, align 8, !dbg !384
  %21520 = load double, ptr %18, align 8, !dbg !385
  %21521 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21522 = load double, ptr %21521, align 8, !dbg !385
  %21523 = load double, ptr %19, align 8, !dbg !385
  %21524 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21525 = load double, ptr %21524, align 8, !dbg !385
  %21526 = call double @dot(double %21520, double %21522, double %21523, double %21525), !dbg !385
  %21527 = call double @atan2(double noundef %21492, double noundef %21526) #6, !dbg !386
  store double %21527, ptr %13, align 8, !dbg !387
  %21528 = load double, ptr %13, align 8, !dbg !388
  %21529 = load double, ptr %14, align 8, !dbg !389
  %21530 = fadd double %21529, %21528, !dbg !389
  store double %21530, ptr %14, align 8, !dbg !389
  %21531 = load double, ptr %13, align 8, !dbg !390
  %21532 = fsub double %21531, 0x400921FB54442D18, !dbg !392
  %21533 = call double @llvm.fabs.f64(double %21532), !dbg !393
  %21534 = fcmp ole double %21533, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21534, label %14330, label %21535, !dbg !395

21535:                                            ; preds = %21458
  %21536 = load double, ptr %13, align 8, !dbg !396
  %21537 = fadd double %21536, 0x400921FB54442D18, !dbg !397
  %21538 = call double @llvm.fabs.f64(double %21537), !dbg !398
  %21539 = fcmp ole double %21538, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21539, label %14330, label %21540, !dbg !400

21540:                                            ; preds = %21535
  br label %21541, !dbg !403

21541:                                            ; preds = %21540
  %21542 = load i32, ptr %10, align 4, !dbg !404
  %21543 = add nsw i32 %21542, 1, !dbg !404
  store i32 %21543, ptr %10, align 4, !dbg !404
  %21544 = load i32, ptr %10, align 4, !dbg !364
  %21545 = load i32, ptr %8, align 4, !dbg !366
  %21546 = icmp slt i32 %21544, %21545, !dbg !367
  br i1 %21546, label %21547, label %48422, !dbg !368

21547:                                            ; preds = %21541
  %21548 = load i32, ptr %10, align 4, !dbg !369
  %21549 = sext i32 %21548 to i64, !dbg !371
  %21550 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21549, !dbg !371
  %21551 = load double, ptr %6, align 8, !dbg !372
  %21552 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21553 = load double, ptr %21552, align 8, !dbg !372
  %21554 = load double, ptr %21550, align 16, !dbg !372
  %21555 = getelementptr inbounds { double, double }, ptr %21550, i32 0, i32 1, !dbg !372
  %21556 = load double, ptr %21555, align 8, !dbg !372
  %21557 = call { double, double } @make_vec(double %21551, double %21553, double %21554, double %21556), !dbg !372
  %21558 = extractvalue { double, double } %21557, 0, !dbg !372
  store double %21558, ptr %16, align 8, !dbg !372
  %21559 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21560 = extractvalue { double, double } %21557, 1, !dbg !372
  store double %21560, ptr %21559, align 8, !dbg !372
  %21561 = load i32, ptr %10, align 4, !dbg !373
  %21562 = add nsw i32 %21561, 1, !dbg !374
  %21563 = sext i32 %21562 to i64, !dbg !375
  %21564 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21563, !dbg !375
  %21565 = load double, ptr %6, align 8, !dbg !376
  %21566 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21567 = load double, ptr %21566, align 8, !dbg !376
  %21568 = load double, ptr %21564, align 16, !dbg !376
  %21569 = getelementptr inbounds { double, double }, ptr %21564, i32 0, i32 1, !dbg !376
  %21570 = load double, ptr %21569, align 8, !dbg !376
  %21571 = call { double, double } @make_vec(double %21565, double %21567, double %21568, double %21570), !dbg !376
  %21572 = extractvalue { double, double } %21571, 0, !dbg !376
  store double %21572, ptr %17, align 8, !dbg !376
  %21573 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21574 = extractvalue { double, double } %21571, 1, !dbg !376
  store double %21574, ptr %21573, align 8, !dbg !376
  %21575 = load double, ptr %16, align 8, !dbg !377
  %21576 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21577 = load double, ptr %21576, align 8, !dbg !377
  %21578 = load double, ptr %17, align 8, !dbg !377
  %21579 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21580 = load double, ptr %21579, align 8, !dbg !377
  %21581 = call double @cross(double %21575, double %21577, double %21578, double %21580), !dbg !377
  %21582 = load i32, ptr %10, align 4, !dbg !378
  %21583 = sext i32 %21582 to i64, !dbg !379
  %21584 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21583, !dbg !379
  %21585 = load double, ptr %6, align 8, !dbg !380
  %21586 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21587 = load double, ptr %21586, align 8, !dbg !380
  %21588 = load double, ptr %21584, align 16, !dbg !380
  %21589 = getelementptr inbounds { double, double }, ptr %21584, i32 0, i32 1, !dbg !380
  %21590 = load double, ptr %21589, align 8, !dbg !380
  %21591 = call { double, double } @make_vec(double %21585, double %21587, double %21588, double %21590), !dbg !380
  %21592 = extractvalue { double, double } %21591, 0, !dbg !380
  store double %21592, ptr %18, align 8, !dbg !380
  %21593 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21594 = extractvalue { double, double } %21591, 1, !dbg !380
  store double %21594, ptr %21593, align 8, !dbg !380
  %21595 = load i32, ptr %10, align 4, !dbg !381
  %21596 = add nsw i32 %21595, 1, !dbg !382
  %21597 = sext i32 %21596 to i64, !dbg !383
  %21598 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21597, !dbg !383
  %21599 = load double, ptr %6, align 8, !dbg !384
  %21600 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21601 = load double, ptr %21600, align 8, !dbg !384
  %21602 = load double, ptr %21598, align 16, !dbg !384
  %21603 = getelementptr inbounds { double, double }, ptr %21598, i32 0, i32 1, !dbg !384
  %21604 = load double, ptr %21603, align 8, !dbg !384
  %21605 = call { double, double } @make_vec(double %21599, double %21601, double %21602, double %21604), !dbg !384
  %21606 = extractvalue { double, double } %21605, 0, !dbg !384
  store double %21606, ptr %19, align 8, !dbg !384
  %21607 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21608 = extractvalue { double, double } %21605, 1, !dbg !384
  store double %21608, ptr %21607, align 8, !dbg !384
  %21609 = load double, ptr %18, align 8, !dbg !385
  %21610 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21611 = load double, ptr %21610, align 8, !dbg !385
  %21612 = load double, ptr %19, align 8, !dbg !385
  %21613 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21614 = load double, ptr %21613, align 8, !dbg !385
  %21615 = call double @dot(double %21609, double %21611, double %21612, double %21614), !dbg !385
  %21616 = call double @atan2(double noundef %21581, double noundef %21615) #6, !dbg !386
  store double %21616, ptr %13, align 8, !dbg !387
  %21617 = load double, ptr %13, align 8, !dbg !388
  %21618 = load double, ptr %14, align 8, !dbg !389
  %21619 = fadd double %21618, %21617, !dbg !389
  store double %21619, ptr %14, align 8, !dbg !389
  %21620 = load double, ptr %13, align 8, !dbg !390
  %21621 = fsub double %21620, 0x400921FB54442D18, !dbg !392
  %21622 = call double @llvm.fabs.f64(double %21621), !dbg !393
  %21623 = fcmp ole double %21622, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21623, label %14330, label %21624, !dbg !395

21624:                                            ; preds = %21547
  %21625 = load double, ptr %13, align 8, !dbg !396
  %21626 = fadd double %21625, 0x400921FB54442D18, !dbg !397
  %21627 = call double @llvm.fabs.f64(double %21626), !dbg !398
  %21628 = fcmp ole double %21627, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21628, label %14330, label %21629, !dbg !400

21629:                                            ; preds = %21624
  br label %21630, !dbg !403

21630:                                            ; preds = %21629
  %21631 = load i32, ptr %10, align 4, !dbg !404
  %21632 = add nsw i32 %21631, 1, !dbg !404
  store i32 %21632, ptr %10, align 4, !dbg !404
  %21633 = load i32, ptr %10, align 4, !dbg !364
  %21634 = load i32, ptr %8, align 4, !dbg !366
  %21635 = icmp slt i32 %21633, %21634, !dbg !367
  br i1 %21635, label %21636, label %48422, !dbg !368

21636:                                            ; preds = %21630
  %21637 = load i32, ptr %10, align 4, !dbg !369
  %21638 = sext i32 %21637 to i64, !dbg !371
  %21639 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21638, !dbg !371
  %21640 = load double, ptr %6, align 8, !dbg !372
  %21641 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21642 = load double, ptr %21641, align 8, !dbg !372
  %21643 = load double, ptr %21639, align 16, !dbg !372
  %21644 = getelementptr inbounds { double, double }, ptr %21639, i32 0, i32 1, !dbg !372
  %21645 = load double, ptr %21644, align 8, !dbg !372
  %21646 = call { double, double } @make_vec(double %21640, double %21642, double %21643, double %21645), !dbg !372
  %21647 = extractvalue { double, double } %21646, 0, !dbg !372
  store double %21647, ptr %16, align 8, !dbg !372
  %21648 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21649 = extractvalue { double, double } %21646, 1, !dbg !372
  store double %21649, ptr %21648, align 8, !dbg !372
  %21650 = load i32, ptr %10, align 4, !dbg !373
  %21651 = add nsw i32 %21650, 1, !dbg !374
  %21652 = sext i32 %21651 to i64, !dbg !375
  %21653 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21652, !dbg !375
  %21654 = load double, ptr %6, align 8, !dbg !376
  %21655 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21656 = load double, ptr %21655, align 8, !dbg !376
  %21657 = load double, ptr %21653, align 16, !dbg !376
  %21658 = getelementptr inbounds { double, double }, ptr %21653, i32 0, i32 1, !dbg !376
  %21659 = load double, ptr %21658, align 8, !dbg !376
  %21660 = call { double, double } @make_vec(double %21654, double %21656, double %21657, double %21659), !dbg !376
  %21661 = extractvalue { double, double } %21660, 0, !dbg !376
  store double %21661, ptr %17, align 8, !dbg !376
  %21662 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21663 = extractvalue { double, double } %21660, 1, !dbg !376
  store double %21663, ptr %21662, align 8, !dbg !376
  %21664 = load double, ptr %16, align 8, !dbg !377
  %21665 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21666 = load double, ptr %21665, align 8, !dbg !377
  %21667 = load double, ptr %17, align 8, !dbg !377
  %21668 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21669 = load double, ptr %21668, align 8, !dbg !377
  %21670 = call double @cross(double %21664, double %21666, double %21667, double %21669), !dbg !377
  %21671 = load i32, ptr %10, align 4, !dbg !378
  %21672 = sext i32 %21671 to i64, !dbg !379
  %21673 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21672, !dbg !379
  %21674 = load double, ptr %6, align 8, !dbg !380
  %21675 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21676 = load double, ptr %21675, align 8, !dbg !380
  %21677 = load double, ptr %21673, align 16, !dbg !380
  %21678 = getelementptr inbounds { double, double }, ptr %21673, i32 0, i32 1, !dbg !380
  %21679 = load double, ptr %21678, align 8, !dbg !380
  %21680 = call { double, double } @make_vec(double %21674, double %21676, double %21677, double %21679), !dbg !380
  %21681 = extractvalue { double, double } %21680, 0, !dbg !380
  store double %21681, ptr %18, align 8, !dbg !380
  %21682 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21683 = extractvalue { double, double } %21680, 1, !dbg !380
  store double %21683, ptr %21682, align 8, !dbg !380
  %21684 = load i32, ptr %10, align 4, !dbg !381
  %21685 = add nsw i32 %21684, 1, !dbg !382
  %21686 = sext i32 %21685 to i64, !dbg !383
  %21687 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21686, !dbg !383
  %21688 = load double, ptr %6, align 8, !dbg !384
  %21689 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21690 = load double, ptr %21689, align 8, !dbg !384
  %21691 = load double, ptr %21687, align 16, !dbg !384
  %21692 = getelementptr inbounds { double, double }, ptr %21687, i32 0, i32 1, !dbg !384
  %21693 = load double, ptr %21692, align 8, !dbg !384
  %21694 = call { double, double } @make_vec(double %21688, double %21690, double %21691, double %21693), !dbg !384
  %21695 = extractvalue { double, double } %21694, 0, !dbg !384
  store double %21695, ptr %19, align 8, !dbg !384
  %21696 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21697 = extractvalue { double, double } %21694, 1, !dbg !384
  store double %21697, ptr %21696, align 8, !dbg !384
  %21698 = load double, ptr %18, align 8, !dbg !385
  %21699 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21700 = load double, ptr %21699, align 8, !dbg !385
  %21701 = load double, ptr %19, align 8, !dbg !385
  %21702 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21703 = load double, ptr %21702, align 8, !dbg !385
  %21704 = call double @dot(double %21698, double %21700, double %21701, double %21703), !dbg !385
  %21705 = call double @atan2(double noundef %21670, double noundef %21704) #6, !dbg !386
  store double %21705, ptr %13, align 8, !dbg !387
  %21706 = load double, ptr %13, align 8, !dbg !388
  %21707 = load double, ptr %14, align 8, !dbg !389
  %21708 = fadd double %21707, %21706, !dbg !389
  store double %21708, ptr %14, align 8, !dbg !389
  %21709 = load double, ptr %13, align 8, !dbg !390
  %21710 = fsub double %21709, 0x400921FB54442D18, !dbg !392
  %21711 = call double @llvm.fabs.f64(double %21710), !dbg !393
  %21712 = fcmp ole double %21711, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21712, label %14330, label %21713, !dbg !395

21713:                                            ; preds = %21636
  %21714 = load double, ptr %13, align 8, !dbg !396
  %21715 = fadd double %21714, 0x400921FB54442D18, !dbg !397
  %21716 = call double @llvm.fabs.f64(double %21715), !dbg !398
  %21717 = fcmp ole double %21716, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21717, label %14330, label %21718, !dbg !400

21718:                                            ; preds = %21713
  br label %21719, !dbg !403

21719:                                            ; preds = %21718
  %21720 = load i32, ptr %10, align 4, !dbg !404
  %21721 = add nsw i32 %21720, 1, !dbg !404
  store i32 %21721, ptr %10, align 4, !dbg !404
  %21722 = load i32, ptr %10, align 4, !dbg !364
  %21723 = load i32, ptr %8, align 4, !dbg !366
  %21724 = icmp slt i32 %21722, %21723, !dbg !367
  br i1 %21724, label %21725, label %48422, !dbg !368

21725:                                            ; preds = %21719
  %21726 = load i32, ptr %10, align 4, !dbg !369
  %21727 = sext i32 %21726 to i64, !dbg !371
  %21728 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21727, !dbg !371
  %21729 = load double, ptr %6, align 8, !dbg !372
  %21730 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21731 = load double, ptr %21730, align 8, !dbg !372
  %21732 = load double, ptr %21728, align 16, !dbg !372
  %21733 = getelementptr inbounds { double, double }, ptr %21728, i32 0, i32 1, !dbg !372
  %21734 = load double, ptr %21733, align 8, !dbg !372
  %21735 = call { double, double } @make_vec(double %21729, double %21731, double %21732, double %21734), !dbg !372
  %21736 = extractvalue { double, double } %21735, 0, !dbg !372
  store double %21736, ptr %16, align 8, !dbg !372
  %21737 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21738 = extractvalue { double, double } %21735, 1, !dbg !372
  store double %21738, ptr %21737, align 8, !dbg !372
  %21739 = load i32, ptr %10, align 4, !dbg !373
  %21740 = add nsw i32 %21739, 1, !dbg !374
  %21741 = sext i32 %21740 to i64, !dbg !375
  %21742 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21741, !dbg !375
  %21743 = load double, ptr %6, align 8, !dbg !376
  %21744 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21745 = load double, ptr %21744, align 8, !dbg !376
  %21746 = load double, ptr %21742, align 16, !dbg !376
  %21747 = getelementptr inbounds { double, double }, ptr %21742, i32 0, i32 1, !dbg !376
  %21748 = load double, ptr %21747, align 8, !dbg !376
  %21749 = call { double, double } @make_vec(double %21743, double %21745, double %21746, double %21748), !dbg !376
  %21750 = extractvalue { double, double } %21749, 0, !dbg !376
  store double %21750, ptr %17, align 8, !dbg !376
  %21751 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21752 = extractvalue { double, double } %21749, 1, !dbg !376
  store double %21752, ptr %21751, align 8, !dbg !376
  %21753 = load double, ptr %16, align 8, !dbg !377
  %21754 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21755 = load double, ptr %21754, align 8, !dbg !377
  %21756 = load double, ptr %17, align 8, !dbg !377
  %21757 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21758 = load double, ptr %21757, align 8, !dbg !377
  %21759 = call double @cross(double %21753, double %21755, double %21756, double %21758), !dbg !377
  %21760 = load i32, ptr %10, align 4, !dbg !378
  %21761 = sext i32 %21760 to i64, !dbg !379
  %21762 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21761, !dbg !379
  %21763 = load double, ptr %6, align 8, !dbg !380
  %21764 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21765 = load double, ptr %21764, align 8, !dbg !380
  %21766 = load double, ptr %21762, align 16, !dbg !380
  %21767 = getelementptr inbounds { double, double }, ptr %21762, i32 0, i32 1, !dbg !380
  %21768 = load double, ptr %21767, align 8, !dbg !380
  %21769 = call { double, double } @make_vec(double %21763, double %21765, double %21766, double %21768), !dbg !380
  %21770 = extractvalue { double, double } %21769, 0, !dbg !380
  store double %21770, ptr %18, align 8, !dbg !380
  %21771 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21772 = extractvalue { double, double } %21769, 1, !dbg !380
  store double %21772, ptr %21771, align 8, !dbg !380
  %21773 = load i32, ptr %10, align 4, !dbg !381
  %21774 = add nsw i32 %21773, 1, !dbg !382
  %21775 = sext i32 %21774 to i64, !dbg !383
  %21776 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21775, !dbg !383
  %21777 = load double, ptr %6, align 8, !dbg !384
  %21778 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21779 = load double, ptr %21778, align 8, !dbg !384
  %21780 = load double, ptr %21776, align 16, !dbg !384
  %21781 = getelementptr inbounds { double, double }, ptr %21776, i32 0, i32 1, !dbg !384
  %21782 = load double, ptr %21781, align 8, !dbg !384
  %21783 = call { double, double } @make_vec(double %21777, double %21779, double %21780, double %21782), !dbg !384
  %21784 = extractvalue { double, double } %21783, 0, !dbg !384
  store double %21784, ptr %19, align 8, !dbg !384
  %21785 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21786 = extractvalue { double, double } %21783, 1, !dbg !384
  store double %21786, ptr %21785, align 8, !dbg !384
  %21787 = load double, ptr %18, align 8, !dbg !385
  %21788 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21789 = load double, ptr %21788, align 8, !dbg !385
  %21790 = load double, ptr %19, align 8, !dbg !385
  %21791 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21792 = load double, ptr %21791, align 8, !dbg !385
  %21793 = call double @dot(double %21787, double %21789, double %21790, double %21792), !dbg !385
  %21794 = call double @atan2(double noundef %21759, double noundef %21793) #6, !dbg !386
  store double %21794, ptr %13, align 8, !dbg !387
  %21795 = load double, ptr %13, align 8, !dbg !388
  %21796 = load double, ptr %14, align 8, !dbg !389
  %21797 = fadd double %21796, %21795, !dbg !389
  store double %21797, ptr %14, align 8, !dbg !389
  %21798 = load double, ptr %13, align 8, !dbg !390
  %21799 = fsub double %21798, 0x400921FB54442D18, !dbg !392
  %21800 = call double @llvm.fabs.f64(double %21799), !dbg !393
  %21801 = fcmp ole double %21800, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21801, label %14330, label %21802, !dbg !395

21802:                                            ; preds = %21725
  %21803 = load double, ptr %13, align 8, !dbg !396
  %21804 = fadd double %21803, 0x400921FB54442D18, !dbg !397
  %21805 = call double @llvm.fabs.f64(double %21804), !dbg !398
  %21806 = fcmp ole double %21805, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21806, label %14330, label %21807, !dbg !400

21807:                                            ; preds = %21802
  br label %21808, !dbg !403

21808:                                            ; preds = %21807
  %21809 = load i32, ptr %10, align 4, !dbg !404
  %21810 = add nsw i32 %21809, 1, !dbg !404
  store i32 %21810, ptr %10, align 4, !dbg !404
  %21811 = load i32, ptr %10, align 4, !dbg !364
  %21812 = load i32, ptr %8, align 4, !dbg !366
  %21813 = icmp slt i32 %21811, %21812, !dbg !367
  br i1 %21813, label %21814, label %48422, !dbg !368

21814:                                            ; preds = %21808
  %21815 = load i32, ptr %10, align 4, !dbg !369
  %21816 = sext i32 %21815 to i64, !dbg !371
  %21817 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21816, !dbg !371
  %21818 = load double, ptr %6, align 8, !dbg !372
  %21819 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21820 = load double, ptr %21819, align 8, !dbg !372
  %21821 = load double, ptr %21817, align 16, !dbg !372
  %21822 = getelementptr inbounds { double, double }, ptr %21817, i32 0, i32 1, !dbg !372
  %21823 = load double, ptr %21822, align 8, !dbg !372
  %21824 = call { double, double } @make_vec(double %21818, double %21820, double %21821, double %21823), !dbg !372
  %21825 = extractvalue { double, double } %21824, 0, !dbg !372
  store double %21825, ptr %16, align 8, !dbg !372
  %21826 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21827 = extractvalue { double, double } %21824, 1, !dbg !372
  store double %21827, ptr %21826, align 8, !dbg !372
  %21828 = load i32, ptr %10, align 4, !dbg !373
  %21829 = add nsw i32 %21828, 1, !dbg !374
  %21830 = sext i32 %21829 to i64, !dbg !375
  %21831 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21830, !dbg !375
  %21832 = load double, ptr %6, align 8, !dbg !376
  %21833 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21834 = load double, ptr %21833, align 8, !dbg !376
  %21835 = load double, ptr %21831, align 16, !dbg !376
  %21836 = getelementptr inbounds { double, double }, ptr %21831, i32 0, i32 1, !dbg !376
  %21837 = load double, ptr %21836, align 8, !dbg !376
  %21838 = call { double, double } @make_vec(double %21832, double %21834, double %21835, double %21837), !dbg !376
  %21839 = extractvalue { double, double } %21838, 0, !dbg !376
  store double %21839, ptr %17, align 8, !dbg !376
  %21840 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21841 = extractvalue { double, double } %21838, 1, !dbg !376
  store double %21841, ptr %21840, align 8, !dbg !376
  %21842 = load double, ptr %16, align 8, !dbg !377
  %21843 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21844 = load double, ptr %21843, align 8, !dbg !377
  %21845 = load double, ptr %17, align 8, !dbg !377
  %21846 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21847 = load double, ptr %21846, align 8, !dbg !377
  %21848 = call double @cross(double %21842, double %21844, double %21845, double %21847), !dbg !377
  %21849 = load i32, ptr %10, align 4, !dbg !378
  %21850 = sext i32 %21849 to i64, !dbg !379
  %21851 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21850, !dbg !379
  %21852 = load double, ptr %6, align 8, !dbg !380
  %21853 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21854 = load double, ptr %21853, align 8, !dbg !380
  %21855 = load double, ptr %21851, align 16, !dbg !380
  %21856 = getelementptr inbounds { double, double }, ptr %21851, i32 0, i32 1, !dbg !380
  %21857 = load double, ptr %21856, align 8, !dbg !380
  %21858 = call { double, double } @make_vec(double %21852, double %21854, double %21855, double %21857), !dbg !380
  %21859 = extractvalue { double, double } %21858, 0, !dbg !380
  store double %21859, ptr %18, align 8, !dbg !380
  %21860 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21861 = extractvalue { double, double } %21858, 1, !dbg !380
  store double %21861, ptr %21860, align 8, !dbg !380
  %21862 = load i32, ptr %10, align 4, !dbg !381
  %21863 = add nsw i32 %21862, 1, !dbg !382
  %21864 = sext i32 %21863 to i64, !dbg !383
  %21865 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21864, !dbg !383
  %21866 = load double, ptr %6, align 8, !dbg !384
  %21867 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21868 = load double, ptr %21867, align 8, !dbg !384
  %21869 = load double, ptr %21865, align 16, !dbg !384
  %21870 = getelementptr inbounds { double, double }, ptr %21865, i32 0, i32 1, !dbg !384
  %21871 = load double, ptr %21870, align 8, !dbg !384
  %21872 = call { double, double } @make_vec(double %21866, double %21868, double %21869, double %21871), !dbg !384
  %21873 = extractvalue { double, double } %21872, 0, !dbg !384
  store double %21873, ptr %19, align 8, !dbg !384
  %21874 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21875 = extractvalue { double, double } %21872, 1, !dbg !384
  store double %21875, ptr %21874, align 8, !dbg !384
  %21876 = load double, ptr %18, align 8, !dbg !385
  %21877 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21878 = load double, ptr %21877, align 8, !dbg !385
  %21879 = load double, ptr %19, align 8, !dbg !385
  %21880 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21881 = load double, ptr %21880, align 8, !dbg !385
  %21882 = call double @dot(double %21876, double %21878, double %21879, double %21881), !dbg !385
  %21883 = call double @atan2(double noundef %21848, double noundef %21882) #6, !dbg !386
  store double %21883, ptr %13, align 8, !dbg !387
  %21884 = load double, ptr %13, align 8, !dbg !388
  %21885 = load double, ptr %14, align 8, !dbg !389
  %21886 = fadd double %21885, %21884, !dbg !389
  store double %21886, ptr %14, align 8, !dbg !389
  %21887 = load double, ptr %13, align 8, !dbg !390
  %21888 = fsub double %21887, 0x400921FB54442D18, !dbg !392
  %21889 = call double @llvm.fabs.f64(double %21888), !dbg !393
  %21890 = fcmp ole double %21889, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21890, label %14330, label %21891, !dbg !395

21891:                                            ; preds = %21814
  %21892 = load double, ptr %13, align 8, !dbg !396
  %21893 = fadd double %21892, 0x400921FB54442D18, !dbg !397
  %21894 = call double @llvm.fabs.f64(double %21893), !dbg !398
  %21895 = fcmp ole double %21894, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21895, label %14330, label %21896, !dbg !400

21896:                                            ; preds = %21891
  br label %21897, !dbg !403

21897:                                            ; preds = %21896
  %21898 = load i32, ptr %10, align 4, !dbg !404
  %21899 = add nsw i32 %21898, 1, !dbg !404
  store i32 %21899, ptr %10, align 4, !dbg !404
  %21900 = load i32, ptr %10, align 4, !dbg !364
  %21901 = load i32, ptr %8, align 4, !dbg !366
  %21902 = icmp slt i32 %21900, %21901, !dbg !367
  br i1 %21902, label %21903, label %48422, !dbg !368

21903:                                            ; preds = %21897
  %21904 = load i32, ptr %10, align 4, !dbg !369
  %21905 = sext i32 %21904 to i64, !dbg !371
  %21906 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21905, !dbg !371
  %21907 = load double, ptr %6, align 8, !dbg !372
  %21908 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21909 = load double, ptr %21908, align 8, !dbg !372
  %21910 = load double, ptr %21906, align 16, !dbg !372
  %21911 = getelementptr inbounds { double, double }, ptr %21906, i32 0, i32 1, !dbg !372
  %21912 = load double, ptr %21911, align 8, !dbg !372
  %21913 = call { double, double } @make_vec(double %21907, double %21909, double %21910, double %21912), !dbg !372
  %21914 = extractvalue { double, double } %21913, 0, !dbg !372
  store double %21914, ptr %16, align 8, !dbg !372
  %21915 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %21916 = extractvalue { double, double } %21913, 1, !dbg !372
  store double %21916, ptr %21915, align 8, !dbg !372
  %21917 = load i32, ptr %10, align 4, !dbg !373
  %21918 = add nsw i32 %21917, 1, !dbg !374
  %21919 = sext i32 %21918 to i64, !dbg !375
  %21920 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21919, !dbg !375
  %21921 = load double, ptr %6, align 8, !dbg !376
  %21922 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %21923 = load double, ptr %21922, align 8, !dbg !376
  %21924 = load double, ptr %21920, align 16, !dbg !376
  %21925 = getelementptr inbounds { double, double }, ptr %21920, i32 0, i32 1, !dbg !376
  %21926 = load double, ptr %21925, align 8, !dbg !376
  %21927 = call { double, double } @make_vec(double %21921, double %21923, double %21924, double %21926), !dbg !376
  %21928 = extractvalue { double, double } %21927, 0, !dbg !376
  store double %21928, ptr %17, align 8, !dbg !376
  %21929 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %21930 = extractvalue { double, double } %21927, 1, !dbg !376
  store double %21930, ptr %21929, align 8, !dbg !376
  %21931 = load double, ptr %16, align 8, !dbg !377
  %21932 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %21933 = load double, ptr %21932, align 8, !dbg !377
  %21934 = load double, ptr %17, align 8, !dbg !377
  %21935 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %21936 = load double, ptr %21935, align 8, !dbg !377
  %21937 = call double @cross(double %21931, double %21933, double %21934, double %21936), !dbg !377
  %21938 = load i32, ptr %10, align 4, !dbg !378
  %21939 = sext i32 %21938 to i64, !dbg !379
  %21940 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21939, !dbg !379
  %21941 = load double, ptr %6, align 8, !dbg !380
  %21942 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %21943 = load double, ptr %21942, align 8, !dbg !380
  %21944 = load double, ptr %21940, align 16, !dbg !380
  %21945 = getelementptr inbounds { double, double }, ptr %21940, i32 0, i32 1, !dbg !380
  %21946 = load double, ptr %21945, align 8, !dbg !380
  %21947 = call { double, double } @make_vec(double %21941, double %21943, double %21944, double %21946), !dbg !380
  %21948 = extractvalue { double, double } %21947, 0, !dbg !380
  store double %21948, ptr %18, align 8, !dbg !380
  %21949 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %21950 = extractvalue { double, double } %21947, 1, !dbg !380
  store double %21950, ptr %21949, align 8, !dbg !380
  %21951 = load i32, ptr %10, align 4, !dbg !381
  %21952 = add nsw i32 %21951, 1, !dbg !382
  %21953 = sext i32 %21952 to i64, !dbg !383
  %21954 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21953, !dbg !383
  %21955 = load double, ptr %6, align 8, !dbg !384
  %21956 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %21957 = load double, ptr %21956, align 8, !dbg !384
  %21958 = load double, ptr %21954, align 16, !dbg !384
  %21959 = getelementptr inbounds { double, double }, ptr %21954, i32 0, i32 1, !dbg !384
  %21960 = load double, ptr %21959, align 8, !dbg !384
  %21961 = call { double, double } @make_vec(double %21955, double %21957, double %21958, double %21960), !dbg !384
  %21962 = extractvalue { double, double } %21961, 0, !dbg !384
  store double %21962, ptr %19, align 8, !dbg !384
  %21963 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %21964 = extractvalue { double, double } %21961, 1, !dbg !384
  store double %21964, ptr %21963, align 8, !dbg !384
  %21965 = load double, ptr %18, align 8, !dbg !385
  %21966 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %21967 = load double, ptr %21966, align 8, !dbg !385
  %21968 = load double, ptr %19, align 8, !dbg !385
  %21969 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %21970 = load double, ptr %21969, align 8, !dbg !385
  %21971 = call double @dot(double %21965, double %21967, double %21968, double %21970), !dbg !385
  %21972 = call double @atan2(double noundef %21937, double noundef %21971) #6, !dbg !386
  store double %21972, ptr %13, align 8, !dbg !387
  %21973 = load double, ptr %13, align 8, !dbg !388
  %21974 = load double, ptr %14, align 8, !dbg !389
  %21975 = fadd double %21974, %21973, !dbg !389
  store double %21975, ptr %14, align 8, !dbg !389
  %21976 = load double, ptr %13, align 8, !dbg !390
  %21977 = fsub double %21976, 0x400921FB54442D18, !dbg !392
  %21978 = call double @llvm.fabs.f64(double %21977), !dbg !393
  %21979 = fcmp ole double %21978, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %21979, label %14330, label %21980, !dbg !395

21980:                                            ; preds = %21903
  %21981 = load double, ptr %13, align 8, !dbg !396
  %21982 = fadd double %21981, 0x400921FB54442D18, !dbg !397
  %21983 = call double @llvm.fabs.f64(double %21982), !dbg !398
  %21984 = fcmp ole double %21983, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %21984, label %14330, label %21985, !dbg !400

21985:                                            ; preds = %21980
  br label %21986, !dbg !403

21986:                                            ; preds = %21985
  %21987 = load i32, ptr %10, align 4, !dbg !404
  %21988 = add nsw i32 %21987, 1, !dbg !404
  store i32 %21988, ptr %10, align 4, !dbg !404
  %21989 = load i32, ptr %10, align 4, !dbg !364
  %21990 = load i32, ptr %8, align 4, !dbg !366
  %21991 = icmp slt i32 %21989, %21990, !dbg !367
  br i1 %21991, label %21992, label %48422, !dbg !368

21992:                                            ; preds = %21986
  %21993 = load i32, ptr %10, align 4, !dbg !369
  %21994 = sext i32 %21993 to i64, !dbg !371
  %21995 = getelementptr inbounds %struct.POINT, ptr %26, i64 %21994, !dbg !371
  %21996 = load double, ptr %6, align 8, !dbg !372
  %21997 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %21998 = load double, ptr %21997, align 8, !dbg !372
  %21999 = load double, ptr %21995, align 16, !dbg !372
  %22000 = getelementptr inbounds { double, double }, ptr %21995, i32 0, i32 1, !dbg !372
  %22001 = load double, ptr %22000, align 8, !dbg !372
  %22002 = call { double, double } @make_vec(double %21996, double %21998, double %21999, double %22001), !dbg !372
  %22003 = extractvalue { double, double } %22002, 0, !dbg !372
  store double %22003, ptr %16, align 8, !dbg !372
  %22004 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22005 = extractvalue { double, double } %22002, 1, !dbg !372
  store double %22005, ptr %22004, align 8, !dbg !372
  %22006 = load i32, ptr %10, align 4, !dbg !373
  %22007 = add nsw i32 %22006, 1, !dbg !374
  %22008 = sext i32 %22007 to i64, !dbg !375
  %22009 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22008, !dbg !375
  %22010 = load double, ptr %6, align 8, !dbg !376
  %22011 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22012 = load double, ptr %22011, align 8, !dbg !376
  %22013 = load double, ptr %22009, align 16, !dbg !376
  %22014 = getelementptr inbounds { double, double }, ptr %22009, i32 0, i32 1, !dbg !376
  %22015 = load double, ptr %22014, align 8, !dbg !376
  %22016 = call { double, double } @make_vec(double %22010, double %22012, double %22013, double %22015), !dbg !376
  %22017 = extractvalue { double, double } %22016, 0, !dbg !376
  store double %22017, ptr %17, align 8, !dbg !376
  %22018 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22019 = extractvalue { double, double } %22016, 1, !dbg !376
  store double %22019, ptr %22018, align 8, !dbg !376
  %22020 = load double, ptr %16, align 8, !dbg !377
  %22021 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22022 = load double, ptr %22021, align 8, !dbg !377
  %22023 = load double, ptr %17, align 8, !dbg !377
  %22024 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22025 = load double, ptr %22024, align 8, !dbg !377
  %22026 = call double @cross(double %22020, double %22022, double %22023, double %22025), !dbg !377
  %22027 = load i32, ptr %10, align 4, !dbg !378
  %22028 = sext i32 %22027 to i64, !dbg !379
  %22029 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22028, !dbg !379
  %22030 = load double, ptr %6, align 8, !dbg !380
  %22031 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22032 = load double, ptr %22031, align 8, !dbg !380
  %22033 = load double, ptr %22029, align 16, !dbg !380
  %22034 = getelementptr inbounds { double, double }, ptr %22029, i32 0, i32 1, !dbg !380
  %22035 = load double, ptr %22034, align 8, !dbg !380
  %22036 = call { double, double } @make_vec(double %22030, double %22032, double %22033, double %22035), !dbg !380
  %22037 = extractvalue { double, double } %22036, 0, !dbg !380
  store double %22037, ptr %18, align 8, !dbg !380
  %22038 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22039 = extractvalue { double, double } %22036, 1, !dbg !380
  store double %22039, ptr %22038, align 8, !dbg !380
  %22040 = load i32, ptr %10, align 4, !dbg !381
  %22041 = add nsw i32 %22040, 1, !dbg !382
  %22042 = sext i32 %22041 to i64, !dbg !383
  %22043 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22042, !dbg !383
  %22044 = load double, ptr %6, align 8, !dbg !384
  %22045 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22046 = load double, ptr %22045, align 8, !dbg !384
  %22047 = load double, ptr %22043, align 16, !dbg !384
  %22048 = getelementptr inbounds { double, double }, ptr %22043, i32 0, i32 1, !dbg !384
  %22049 = load double, ptr %22048, align 8, !dbg !384
  %22050 = call { double, double } @make_vec(double %22044, double %22046, double %22047, double %22049), !dbg !384
  %22051 = extractvalue { double, double } %22050, 0, !dbg !384
  store double %22051, ptr %19, align 8, !dbg !384
  %22052 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22053 = extractvalue { double, double } %22050, 1, !dbg !384
  store double %22053, ptr %22052, align 8, !dbg !384
  %22054 = load double, ptr %18, align 8, !dbg !385
  %22055 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22056 = load double, ptr %22055, align 8, !dbg !385
  %22057 = load double, ptr %19, align 8, !dbg !385
  %22058 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22059 = load double, ptr %22058, align 8, !dbg !385
  %22060 = call double @dot(double %22054, double %22056, double %22057, double %22059), !dbg !385
  %22061 = call double @atan2(double noundef %22026, double noundef %22060) #6, !dbg !386
  store double %22061, ptr %13, align 8, !dbg !387
  %22062 = load double, ptr %13, align 8, !dbg !388
  %22063 = load double, ptr %14, align 8, !dbg !389
  %22064 = fadd double %22063, %22062, !dbg !389
  store double %22064, ptr %14, align 8, !dbg !389
  %22065 = load double, ptr %13, align 8, !dbg !390
  %22066 = fsub double %22065, 0x400921FB54442D18, !dbg !392
  %22067 = call double @llvm.fabs.f64(double %22066), !dbg !393
  %22068 = fcmp ole double %22067, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22068, label %14330, label %22069, !dbg !395

22069:                                            ; preds = %21992
  %22070 = load double, ptr %13, align 8, !dbg !396
  %22071 = fadd double %22070, 0x400921FB54442D18, !dbg !397
  %22072 = call double @llvm.fabs.f64(double %22071), !dbg !398
  %22073 = fcmp ole double %22072, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22073, label %14330, label %22074, !dbg !400

22074:                                            ; preds = %22069
  br label %22075, !dbg !403

22075:                                            ; preds = %22074
  %22076 = load i32, ptr %10, align 4, !dbg !404
  %22077 = add nsw i32 %22076, 1, !dbg !404
  store i32 %22077, ptr %10, align 4, !dbg !404
  %22078 = load i32, ptr %10, align 4, !dbg !364
  %22079 = load i32, ptr %8, align 4, !dbg !366
  %22080 = icmp slt i32 %22078, %22079, !dbg !367
  br i1 %22080, label %22081, label %48422, !dbg !368

22081:                                            ; preds = %22075
  %22082 = load i32, ptr %10, align 4, !dbg !369
  %22083 = sext i32 %22082 to i64, !dbg !371
  %22084 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22083, !dbg !371
  %22085 = load double, ptr %6, align 8, !dbg !372
  %22086 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22087 = load double, ptr %22086, align 8, !dbg !372
  %22088 = load double, ptr %22084, align 16, !dbg !372
  %22089 = getelementptr inbounds { double, double }, ptr %22084, i32 0, i32 1, !dbg !372
  %22090 = load double, ptr %22089, align 8, !dbg !372
  %22091 = call { double, double } @make_vec(double %22085, double %22087, double %22088, double %22090), !dbg !372
  %22092 = extractvalue { double, double } %22091, 0, !dbg !372
  store double %22092, ptr %16, align 8, !dbg !372
  %22093 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22094 = extractvalue { double, double } %22091, 1, !dbg !372
  store double %22094, ptr %22093, align 8, !dbg !372
  %22095 = load i32, ptr %10, align 4, !dbg !373
  %22096 = add nsw i32 %22095, 1, !dbg !374
  %22097 = sext i32 %22096 to i64, !dbg !375
  %22098 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22097, !dbg !375
  %22099 = load double, ptr %6, align 8, !dbg !376
  %22100 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22101 = load double, ptr %22100, align 8, !dbg !376
  %22102 = load double, ptr %22098, align 16, !dbg !376
  %22103 = getelementptr inbounds { double, double }, ptr %22098, i32 0, i32 1, !dbg !376
  %22104 = load double, ptr %22103, align 8, !dbg !376
  %22105 = call { double, double } @make_vec(double %22099, double %22101, double %22102, double %22104), !dbg !376
  %22106 = extractvalue { double, double } %22105, 0, !dbg !376
  store double %22106, ptr %17, align 8, !dbg !376
  %22107 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22108 = extractvalue { double, double } %22105, 1, !dbg !376
  store double %22108, ptr %22107, align 8, !dbg !376
  %22109 = load double, ptr %16, align 8, !dbg !377
  %22110 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22111 = load double, ptr %22110, align 8, !dbg !377
  %22112 = load double, ptr %17, align 8, !dbg !377
  %22113 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22114 = load double, ptr %22113, align 8, !dbg !377
  %22115 = call double @cross(double %22109, double %22111, double %22112, double %22114), !dbg !377
  %22116 = load i32, ptr %10, align 4, !dbg !378
  %22117 = sext i32 %22116 to i64, !dbg !379
  %22118 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22117, !dbg !379
  %22119 = load double, ptr %6, align 8, !dbg !380
  %22120 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22121 = load double, ptr %22120, align 8, !dbg !380
  %22122 = load double, ptr %22118, align 16, !dbg !380
  %22123 = getelementptr inbounds { double, double }, ptr %22118, i32 0, i32 1, !dbg !380
  %22124 = load double, ptr %22123, align 8, !dbg !380
  %22125 = call { double, double } @make_vec(double %22119, double %22121, double %22122, double %22124), !dbg !380
  %22126 = extractvalue { double, double } %22125, 0, !dbg !380
  store double %22126, ptr %18, align 8, !dbg !380
  %22127 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22128 = extractvalue { double, double } %22125, 1, !dbg !380
  store double %22128, ptr %22127, align 8, !dbg !380
  %22129 = load i32, ptr %10, align 4, !dbg !381
  %22130 = add nsw i32 %22129, 1, !dbg !382
  %22131 = sext i32 %22130 to i64, !dbg !383
  %22132 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22131, !dbg !383
  %22133 = load double, ptr %6, align 8, !dbg !384
  %22134 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22135 = load double, ptr %22134, align 8, !dbg !384
  %22136 = load double, ptr %22132, align 16, !dbg !384
  %22137 = getelementptr inbounds { double, double }, ptr %22132, i32 0, i32 1, !dbg !384
  %22138 = load double, ptr %22137, align 8, !dbg !384
  %22139 = call { double, double } @make_vec(double %22133, double %22135, double %22136, double %22138), !dbg !384
  %22140 = extractvalue { double, double } %22139, 0, !dbg !384
  store double %22140, ptr %19, align 8, !dbg !384
  %22141 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22142 = extractvalue { double, double } %22139, 1, !dbg !384
  store double %22142, ptr %22141, align 8, !dbg !384
  %22143 = load double, ptr %18, align 8, !dbg !385
  %22144 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22145 = load double, ptr %22144, align 8, !dbg !385
  %22146 = load double, ptr %19, align 8, !dbg !385
  %22147 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22148 = load double, ptr %22147, align 8, !dbg !385
  %22149 = call double @dot(double %22143, double %22145, double %22146, double %22148), !dbg !385
  %22150 = call double @atan2(double noundef %22115, double noundef %22149) #6, !dbg !386
  store double %22150, ptr %13, align 8, !dbg !387
  %22151 = load double, ptr %13, align 8, !dbg !388
  %22152 = load double, ptr %14, align 8, !dbg !389
  %22153 = fadd double %22152, %22151, !dbg !389
  store double %22153, ptr %14, align 8, !dbg !389
  %22154 = load double, ptr %13, align 8, !dbg !390
  %22155 = fsub double %22154, 0x400921FB54442D18, !dbg !392
  %22156 = call double @llvm.fabs.f64(double %22155), !dbg !393
  %22157 = fcmp ole double %22156, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22157, label %14330, label %22158, !dbg !395

22158:                                            ; preds = %22081
  %22159 = load double, ptr %13, align 8, !dbg !396
  %22160 = fadd double %22159, 0x400921FB54442D18, !dbg !397
  %22161 = call double @llvm.fabs.f64(double %22160), !dbg !398
  %22162 = fcmp ole double %22161, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22162, label %14330, label %22163, !dbg !400

22163:                                            ; preds = %22158
  br label %22164, !dbg !403

22164:                                            ; preds = %22163
  %22165 = load i32, ptr %10, align 4, !dbg !404
  %22166 = add nsw i32 %22165, 1, !dbg !404
  store i32 %22166, ptr %10, align 4, !dbg !404
  %22167 = load i32, ptr %10, align 4, !dbg !364
  %22168 = load i32, ptr %8, align 4, !dbg !366
  %22169 = icmp slt i32 %22167, %22168, !dbg !367
  br i1 %22169, label %22170, label %48422, !dbg !368

22170:                                            ; preds = %22164
  %22171 = load i32, ptr %10, align 4, !dbg !369
  %22172 = sext i32 %22171 to i64, !dbg !371
  %22173 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22172, !dbg !371
  %22174 = load double, ptr %6, align 8, !dbg !372
  %22175 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22176 = load double, ptr %22175, align 8, !dbg !372
  %22177 = load double, ptr %22173, align 16, !dbg !372
  %22178 = getelementptr inbounds { double, double }, ptr %22173, i32 0, i32 1, !dbg !372
  %22179 = load double, ptr %22178, align 8, !dbg !372
  %22180 = call { double, double } @make_vec(double %22174, double %22176, double %22177, double %22179), !dbg !372
  %22181 = extractvalue { double, double } %22180, 0, !dbg !372
  store double %22181, ptr %16, align 8, !dbg !372
  %22182 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22183 = extractvalue { double, double } %22180, 1, !dbg !372
  store double %22183, ptr %22182, align 8, !dbg !372
  %22184 = load i32, ptr %10, align 4, !dbg !373
  %22185 = add nsw i32 %22184, 1, !dbg !374
  %22186 = sext i32 %22185 to i64, !dbg !375
  %22187 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22186, !dbg !375
  %22188 = load double, ptr %6, align 8, !dbg !376
  %22189 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22190 = load double, ptr %22189, align 8, !dbg !376
  %22191 = load double, ptr %22187, align 16, !dbg !376
  %22192 = getelementptr inbounds { double, double }, ptr %22187, i32 0, i32 1, !dbg !376
  %22193 = load double, ptr %22192, align 8, !dbg !376
  %22194 = call { double, double } @make_vec(double %22188, double %22190, double %22191, double %22193), !dbg !376
  %22195 = extractvalue { double, double } %22194, 0, !dbg !376
  store double %22195, ptr %17, align 8, !dbg !376
  %22196 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22197 = extractvalue { double, double } %22194, 1, !dbg !376
  store double %22197, ptr %22196, align 8, !dbg !376
  %22198 = load double, ptr %16, align 8, !dbg !377
  %22199 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22200 = load double, ptr %22199, align 8, !dbg !377
  %22201 = load double, ptr %17, align 8, !dbg !377
  %22202 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22203 = load double, ptr %22202, align 8, !dbg !377
  %22204 = call double @cross(double %22198, double %22200, double %22201, double %22203), !dbg !377
  %22205 = load i32, ptr %10, align 4, !dbg !378
  %22206 = sext i32 %22205 to i64, !dbg !379
  %22207 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22206, !dbg !379
  %22208 = load double, ptr %6, align 8, !dbg !380
  %22209 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22210 = load double, ptr %22209, align 8, !dbg !380
  %22211 = load double, ptr %22207, align 16, !dbg !380
  %22212 = getelementptr inbounds { double, double }, ptr %22207, i32 0, i32 1, !dbg !380
  %22213 = load double, ptr %22212, align 8, !dbg !380
  %22214 = call { double, double } @make_vec(double %22208, double %22210, double %22211, double %22213), !dbg !380
  %22215 = extractvalue { double, double } %22214, 0, !dbg !380
  store double %22215, ptr %18, align 8, !dbg !380
  %22216 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22217 = extractvalue { double, double } %22214, 1, !dbg !380
  store double %22217, ptr %22216, align 8, !dbg !380
  %22218 = load i32, ptr %10, align 4, !dbg !381
  %22219 = add nsw i32 %22218, 1, !dbg !382
  %22220 = sext i32 %22219 to i64, !dbg !383
  %22221 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22220, !dbg !383
  %22222 = load double, ptr %6, align 8, !dbg !384
  %22223 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22224 = load double, ptr %22223, align 8, !dbg !384
  %22225 = load double, ptr %22221, align 16, !dbg !384
  %22226 = getelementptr inbounds { double, double }, ptr %22221, i32 0, i32 1, !dbg !384
  %22227 = load double, ptr %22226, align 8, !dbg !384
  %22228 = call { double, double } @make_vec(double %22222, double %22224, double %22225, double %22227), !dbg !384
  %22229 = extractvalue { double, double } %22228, 0, !dbg !384
  store double %22229, ptr %19, align 8, !dbg !384
  %22230 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22231 = extractvalue { double, double } %22228, 1, !dbg !384
  store double %22231, ptr %22230, align 8, !dbg !384
  %22232 = load double, ptr %18, align 8, !dbg !385
  %22233 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22234 = load double, ptr %22233, align 8, !dbg !385
  %22235 = load double, ptr %19, align 8, !dbg !385
  %22236 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22237 = load double, ptr %22236, align 8, !dbg !385
  %22238 = call double @dot(double %22232, double %22234, double %22235, double %22237), !dbg !385
  %22239 = call double @atan2(double noundef %22204, double noundef %22238) #6, !dbg !386
  store double %22239, ptr %13, align 8, !dbg !387
  %22240 = load double, ptr %13, align 8, !dbg !388
  %22241 = load double, ptr %14, align 8, !dbg !389
  %22242 = fadd double %22241, %22240, !dbg !389
  store double %22242, ptr %14, align 8, !dbg !389
  %22243 = load double, ptr %13, align 8, !dbg !390
  %22244 = fsub double %22243, 0x400921FB54442D18, !dbg !392
  %22245 = call double @llvm.fabs.f64(double %22244), !dbg !393
  %22246 = fcmp ole double %22245, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22246, label %14330, label %22247, !dbg !395

22247:                                            ; preds = %22170
  %22248 = load double, ptr %13, align 8, !dbg !396
  %22249 = fadd double %22248, 0x400921FB54442D18, !dbg !397
  %22250 = call double @llvm.fabs.f64(double %22249), !dbg !398
  %22251 = fcmp ole double %22250, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22251, label %14330, label %22252, !dbg !400

22252:                                            ; preds = %22247
  br label %22253, !dbg !403

22253:                                            ; preds = %22252
  %22254 = load i32, ptr %10, align 4, !dbg !404
  %22255 = add nsw i32 %22254, 1, !dbg !404
  store i32 %22255, ptr %10, align 4, !dbg !404
  %22256 = load i32, ptr %10, align 4, !dbg !364
  %22257 = load i32, ptr %8, align 4, !dbg !366
  %22258 = icmp slt i32 %22256, %22257, !dbg !367
  br i1 %22258, label %22259, label %48422, !dbg !368

22259:                                            ; preds = %22253
  %22260 = load i32, ptr %10, align 4, !dbg !369
  %22261 = sext i32 %22260 to i64, !dbg !371
  %22262 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22261, !dbg !371
  %22263 = load double, ptr %6, align 8, !dbg !372
  %22264 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22265 = load double, ptr %22264, align 8, !dbg !372
  %22266 = load double, ptr %22262, align 16, !dbg !372
  %22267 = getelementptr inbounds { double, double }, ptr %22262, i32 0, i32 1, !dbg !372
  %22268 = load double, ptr %22267, align 8, !dbg !372
  %22269 = call { double, double } @make_vec(double %22263, double %22265, double %22266, double %22268), !dbg !372
  %22270 = extractvalue { double, double } %22269, 0, !dbg !372
  store double %22270, ptr %16, align 8, !dbg !372
  %22271 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22272 = extractvalue { double, double } %22269, 1, !dbg !372
  store double %22272, ptr %22271, align 8, !dbg !372
  %22273 = load i32, ptr %10, align 4, !dbg !373
  %22274 = add nsw i32 %22273, 1, !dbg !374
  %22275 = sext i32 %22274 to i64, !dbg !375
  %22276 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22275, !dbg !375
  %22277 = load double, ptr %6, align 8, !dbg !376
  %22278 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22279 = load double, ptr %22278, align 8, !dbg !376
  %22280 = load double, ptr %22276, align 16, !dbg !376
  %22281 = getelementptr inbounds { double, double }, ptr %22276, i32 0, i32 1, !dbg !376
  %22282 = load double, ptr %22281, align 8, !dbg !376
  %22283 = call { double, double } @make_vec(double %22277, double %22279, double %22280, double %22282), !dbg !376
  %22284 = extractvalue { double, double } %22283, 0, !dbg !376
  store double %22284, ptr %17, align 8, !dbg !376
  %22285 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22286 = extractvalue { double, double } %22283, 1, !dbg !376
  store double %22286, ptr %22285, align 8, !dbg !376
  %22287 = load double, ptr %16, align 8, !dbg !377
  %22288 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22289 = load double, ptr %22288, align 8, !dbg !377
  %22290 = load double, ptr %17, align 8, !dbg !377
  %22291 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22292 = load double, ptr %22291, align 8, !dbg !377
  %22293 = call double @cross(double %22287, double %22289, double %22290, double %22292), !dbg !377
  %22294 = load i32, ptr %10, align 4, !dbg !378
  %22295 = sext i32 %22294 to i64, !dbg !379
  %22296 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22295, !dbg !379
  %22297 = load double, ptr %6, align 8, !dbg !380
  %22298 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22299 = load double, ptr %22298, align 8, !dbg !380
  %22300 = load double, ptr %22296, align 16, !dbg !380
  %22301 = getelementptr inbounds { double, double }, ptr %22296, i32 0, i32 1, !dbg !380
  %22302 = load double, ptr %22301, align 8, !dbg !380
  %22303 = call { double, double } @make_vec(double %22297, double %22299, double %22300, double %22302), !dbg !380
  %22304 = extractvalue { double, double } %22303, 0, !dbg !380
  store double %22304, ptr %18, align 8, !dbg !380
  %22305 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22306 = extractvalue { double, double } %22303, 1, !dbg !380
  store double %22306, ptr %22305, align 8, !dbg !380
  %22307 = load i32, ptr %10, align 4, !dbg !381
  %22308 = add nsw i32 %22307, 1, !dbg !382
  %22309 = sext i32 %22308 to i64, !dbg !383
  %22310 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22309, !dbg !383
  %22311 = load double, ptr %6, align 8, !dbg !384
  %22312 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22313 = load double, ptr %22312, align 8, !dbg !384
  %22314 = load double, ptr %22310, align 16, !dbg !384
  %22315 = getelementptr inbounds { double, double }, ptr %22310, i32 0, i32 1, !dbg !384
  %22316 = load double, ptr %22315, align 8, !dbg !384
  %22317 = call { double, double } @make_vec(double %22311, double %22313, double %22314, double %22316), !dbg !384
  %22318 = extractvalue { double, double } %22317, 0, !dbg !384
  store double %22318, ptr %19, align 8, !dbg !384
  %22319 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22320 = extractvalue { double, double } %22317, 1, !dbg !384
  store double %22320, ptr %22319, align 8, !dbg !384
  %22321 = load double, ptr %18, align 8, !dbg !385
  %22322 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22323 = load double, ptr %22322, align 8, !dbg !385
  %22324 = load double, ptr %19, align 8, !dbg !385
  %22325 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22326 = load double, ptr %22325, align 8, !dbg !385
  %22327 = call double @dot(double %22321, double %22323, double %22324, double %22326), !dbg !385
  %22328 = call double @atan2(double noundef %22293, double noundef %22327) #6, !dbg !386
  store double %22328, ptr %13, align 8, !dbg !387
  %22329 = load double, ptr %13, align 8, !dbg !388
  %22330 = load double, ptr %14, align 8, !dbg !389
  %22331 = fadd double %22330, %22329, !dbg !389
  store double %22331, ptr %14, align 8, !dbg !389
  %22332 = load double, ptr %13, align 8, !dbg !390
  %22333 = fsub double %22332, 0x400921FB54442D18, !dbg !392
  %22334 = call double @llvm.fabs.f64(double %22333), !dbg !393
  %22335 = fcmp ole double %22334, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22335, label %14330, label %22336, !dbg !395

22336:                                            ; preds = %22259
  %22337 = load double, ptr %13, align 8, !dbg !396
  %22338 = fadd double %22337, 0x400921FB54442D18, !dbg !397
  %22339 = call double @llvm.fabs.f64(double %22338), !dbg !398
  %22340 = fcmp ole double %22339, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22340, label %14330, label %22341, !dbg !400

22341:                                            ; preds = %22336
  br label %22342, !dbg !403

22342:                                            ; preds = %22341
  %22343 = load i32, ptr %10, align 4, !dbg !404
  %22344 = add nsw i32 %22343, 1, !dbg !404
  store i32 %22344, ptr %10, align 4, !dbg !404
  %22345 = load i32, ptr %10, align 4, !dbg !364
  %22346 = load i32, ptr %8, align 4, !dbg !366
  %22347 = icmp slt i32 %22345, %22346, !dbg !367
  br i1 %22347, label %22348, label %48422, !dbg !368

22348:                                            ; preds = %22342
  %22349 = load i32, ptr %10, align 4, !dbg !369
  %22350 = sext i32 %22349 to i64, !dbg !371
  %22351 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22350, !dbg !371
  %22352 = load double, ptr %6, align 8, !dbg !372
  %22353 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22354 = load double, ptr %22353, align 8, !dbg !372
  %22355 = load double, ptr %22351, align 16, !dbg !372
  %22356 = getelementptr inbounds { double, double }, ptr %22351, i32 0, i32 1, !dbg !372
  %22357 = load double, ptr %22356, align 8, !dbg !372
  %22358 = call { double, double } @make_vec(double %22352, double %22354, double %22355, double %22357), !dbg !372
  %22359 = extractvalue { double, double } %22358, 0, !dbg !372
  store double %22359, ptr %16, align 8, !dbg !372
  %22360 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22361 = extractvalue { double, double } %22358, 1, !dbg !372
  store double %22361, ptr %22360, align 8, !dbg !372
  %22362 = load i32, ptr %10, align 4, !dbg !373
  %22363 = add nsw i32 %22362, 1, !dbg !374
  %22364 = sext i32 %22363 to i64, !dbg !375
  %22365 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22364, !dbg !375
  %22366 = load double, ptr %6, align 8, !dbg !376
  %22367 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22368 = load double, ptr %22367, align 8, !dbg !376
  %22369 = load double, ptr %22365, align 16, !dbg !376
  %22370 = getelementptr inbounds { double, double }, ptr %22365, i32 0, i32 1, !dbg !376
  %22371 = load double, ptr %22370, align 8, !dbg !376
  %22372 = call { double, double } @make_vec(double %22366, double %22368, double %22369, double %22371), !dbg !376
  %22373 = extractvalue { double, double } %22372, 0, !dbg !376
  store double %22373, ptr %17, align 8, !dbg !376
  %22374 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22375 = extractvalue { double, double } %22372, 1, !dbg !376
  store double %22375, ptr %22374, align 8, !dbg !376
  %22376 = load double, ptr %16, align 8, !dbg !377
  %22377 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22378 = load double, ptr %22377, align 8, !dbg !377
  %22379 = load double, ptr %17, align 8, !dbg !377
  %22380 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22381 = load double, ptr %22380, align 8, !dbg !377
  %22382 = call double @cross(double %22376, double %22378, double %22379, double %22381), !dbg !377
  %22383 = load i32, ptr %10, align 4, !dbg !378
  %22384 = sext i32 %22383 to i64, !dbg !379
  %22385 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22384, !dbg !379
  %22386 = load double, ptr %6, align 8, !dbg !380
  %22387 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22388 = load double, ptr %22387, align 8, !dbg !380
  %22389 = load double, ptr %22385, align 16, !dbg !380
  %22390 = getelementptr inbounds { double, double }, ptr %22385, i32 0, i32 1, !dbg !380
  %22391 = load double, ptr %22390, align 8, !dbg !380
  %22392 = call { double, double } @make_vec(double %22386, double %22388, double %22389, double %22391), !dbg !380
  %22393 = extractvalue { double, double } %22392, 0, !dbg !380
  store double %22393, ptr %18, align 8, !dbg !380
  %22394 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22395 = extractvalue { double, double } %22392, 1, !dbg !380
  store double %22395, ptr %22394, align 8, !dbg !380
  %22396 = load i32, ptr %10, align 4, !dbg !381
  %22397 = add nsw i32 %22396, 1, !dbg !382
  %22398 = sext i32 %22397 to i64, !dbg !383
  %22399 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22398, !dbg !383
  %22400 = load double, ptr %6, align 8, !dbg !384
  %22401 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22402 = load double, ptr %22401, align 8, !dbg !384
  %22403 = load double, ptr %22399, align 16, !dbg !384
  %22404 = getelementptr inbounds { double, double }, ptr %22399, i32 0, i32 1, !dbg !384
  %22405 = load double, ptr %22404, align 8, !dbg !384
  %22406 = call { double, double } @make_vec(double %22400, double %22402, double %22403, double %22405), !dbg !384
  %22407 = extractvalue { double, double } %22406, 0, !dbg !384
  store double %22407, ptr %19, align 8, !dbg !384
  %22408 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22409 = extractvalue { double, double } %22406, 1, !dbg !384
  store double %22409, ptr %22408, align 8, !dbg !384
  %22410 = load double, ptr %18, align 8, !dbg !385
  %22411 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22412 = load double, ptr %22411, align 8, !dbg !385
  %22413 = load double, ptr %19, align 8, !dbg !385
  %22414 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22415 = load double, ptr %22414, align 8, !dbg !385
  %22416 = call double @dot(double %22410, double %22412, double %22413, double %22415), !dbg !385
  %22417 = call double @atan2(double noundef %22382, double noundef %22416) #6, !dbg !386
  store double %22417, ptr %13, align 8, !dbg !387
  %22418 = load double, ptr %13, align 8, !dbg !388
  %22419 = load double, ptr %14, align 8, !dbg !389
  %22420 = fadd double %22419, %22418, !dbg !389
  store double %22420, ptr %14, align 8, !dbg !389
  %22421 = load double, ptr %13, align 8, !dbg !390
  %22422 = fsub double %22421, 0x400921FB54442D18, !dbg !392
  %22423 = call double @llvm.fabs.f64(double %22422), !dbg !393
  %22424 = fcmp ole double %22423, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22424, label %14330, label %22425, !dbg !395

22425:                                            ; preds = %22348
  %22426 = load double, ptr %13, align 8, !dbg !396
  %22427 = fadd double %22426, 0x400921FB54442D18, !dbg !397
  %22428 = call double @llvm.fabs.f64(double %22427), !dbg !398
  %22429 = fcmp ole double %22428, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22429, label %14330, label %22430, !dbg !400

22430:                                            ; preds = %22425
  br label %22431, !dbg !403

22431:                                            ; preds = %22430
  %22432 = load i32, ptr %10, align 4, !dbg !404
  %22433 = add nsw i32 %22432, 1, !dbg !404
  store i32 %22433, ptr %10, align 4, !dbg !404
  %22434 = load i32, ptr %10, align 4, !dbg !364
  %22435 = load i32, ptr %8, align 4, !dbg !366
  %22436 = icmp slt i32 %22434, %22435, !dbg !367
  br i1 %22436, label %22437, label %48422, !dbg !368

22437:                                            ; preds = %22431
  %22438 = load i32, ptr %10, align 4, !dbg !369
  %22439 = sext i32 %22438 to i64, !dbg !371
  %22440 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22439, !dbg !371
  %22441 = load double, ptr %6, align 8, !dbg !372
  %22442 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22443 = load double, ptr %22442, align 8, !dbg !372
  %22444 = load double, ptr %22440, align 16, !dbg !372
  %22445 = getelementptr inbounds { double, double }, ptr %22440, i32 0, i32 1, !dbg !372
  %22446 = load double, ptr %22445, align 8, !dbg !372
  %22447 = call { double, double } @make_vec(double %22441, double %22443, double %22444, double %22446), !dbg !372
  %22448 = extractvalue { double, double } %22447, 0, !dbg !372
  store double %22448, ptr %16, align 8, !dbg !372
  %22449 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22450 = extractvalue { double, double } %22447, 1, !dbg !372
  store double %22450, ptr %22449, align 8, !dbg !372
  %22451 = load i32, ptr %10, align 4, !dbg !373
  %22452 = add nsw i32 %22451, 1, !dbg !374
  %22453 = sext i32 %22452 to i64, !dbg !375
  %22454 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22453, !dbg !375
  %22455 = load double, ptr %6, align 8, !dbg !376
  %22456 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22457 = load double, ptr %22456, align 8, !dbg !376
  %22458 = load double, ptr %22454, align 16, !dbg !376
  %22459 = getelementptr inbounds { double, double }, ptr %22454, i32 0, i32 1, !dbg !376
  %22460 = load double, ptr %22459, align 8, !dbg !376
  %22461 = call { double, double } @make_vec(double %22455, double %22457, double %22458, double %22460), !dbg !376
  %22462 = extractvalue { double, double } %22461, 0, !dbg !376
  store double %22462, ptr %17, align 8, !dbg !376
  %22463 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22464 = extractvalue { double, double } %22461, 1, !dbg !376
  store double %22464, ptr %22463, align 8, !dbg !376
  %22465 = load double, ptr %16, align 8, !dbg !377
  %22466 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22467 = load double, ptr %22466, align 8, !dbg !377
  %22468 = load double, ptr %17, align 8, !dbg !377
  %22469 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22470 = load double, ptr %22469, align 8, !dbg !377
  %22471 = call double @cross(double %22465, double %22467, double %22468, double %22470), !dbg !377
  %22472 = load i32, ptr %10, align 4, !dbg !378
  %22473 = sext i32 %22472 to i64, !dbg !379
  %22474 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22473, !dbg !379
  %22475 = load double, ptr %6, align 8, !dbg !380
  %22476 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22477 = load double, ptr %22476, align 8, !dbg !380
  %22478 = load double, ptr %22474, align 16, !dbg !380
  %22479 = getelementptr inbounds { double, double }, ptr %22474, i32 0, i32 1, !dbg !380
  %22480 = load double, ptr %22479, align 8, !dbg !380
  %22481 = call { double, double } @make_vec(double %22475, double %22477, double %22478, double %22480), !dbg !380
  %22482 = extractvalue { double, double } %22481, 0, !dbg !380
  store double %22482, ptr %18, align 8, !dbg !380
  %22483 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22484 = extractvalue { double, double } %22481, 1, !dbg !380
  store double %22484, ptr %22483, align 8, !dbg !380
  %22485 = load i32, ptr %10, align 4, !dbg !381
  %22486 = add nsw i32 %22485, 1, !dbg !382
  %22487 = sext i32 %22486 to i64, !dbg !383
  %22488 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22487, !dbg !383
  %22489 = load double, ptr %6, align 8, !dbg !384
  %22490 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22491 = load double, ptr %22490, align 8, !dbg !384
  %22492 = load double, ptr %22488, align 16, !dbg !384
  %22493 = getelementptr inbounds { double, double }, ptr %22488, i32 0, i32 1, !dbg !384
  %22494 = load double, ptr %22493, align 8, !dbg !384
  %22495 = call { double, double } @make_vec(double %22489, double %22491, double %22492, double %22494), !dbg !384
  %22496 = extractvalue { double, double } %22495, 0, !dbg !384
  store double %22496, ptr %19, align 8, !dbg !384
  %22497 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22498 = extractvalue { double, double } %22495, 1, !dbg !384
  store double %22498, ptr %22497, align 8, !dbg !384
  %22499 = load double, ptr %18, align 8, !dbg !385
  %22500 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22501 = load double, ptr %22500, align 8, !dbg !385
  %22502 = load double, ptr %19, align 8, !dbg !385
  %22503 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22504 = load double, ptr %22503, align 8, !dbg !385
  %22505 = call double @dot(double %22499, double %22501, double %22502, double %22504), !dbg !385
  %22506 = call double @atan2(double noundef %22471, double noundef %22505) #6, !dbg !386
  store double %22506, ptr %13, align 8, !dbg !387
  %22507 = load double, ptr %13, align 8, !dbg !388
  %22508 = load double, ptr %14, align 8, !dbg !389
  %22509 = fadd double %22508, %22507, !dbg !389
  store double %22509, ptr %14, align 8, !dbg !389
  %22510 = load double, ptr %13, align 8, !dbg !390
  %22511 = fsub double %22510, 0x400921FB54442D18, !dbg !392
  %22512 = call double @llvm.fabs.f64(double %22511), !dbg !393
  %22513 = fcmp ole double %22512, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22513, label %14330, label %22514, !dbg !395

22514:                                            ; preds = %22437
  %22515 = load double, ptr %13, align 8, !dbg !396
  %22516 = fadd double %22515, 0x400921FB54442D18, !dbg !397
  %22517 = call double @llvm.fabs.f64(double %22516), !dbg !398
  %22518 = fcmp ole double %22517, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22518, label %14330, label %22519, !dbg !400

22519:                                            ; preds = %22514
  br label %22520, !dbg !403

22520:                                            ; preds = %22519
  %22521 = load i32, ptr %10, align 4, !dbg !404
  %22522 = add nsw i32 %22521, 1, !dbg !404
  store i32 %22522, ptr %10, align 4, !dbg !404
  %22523 = load i32, ptr %10, align 4, !dbg !364
  %22524 = load i32, ptr %8, align 4, !dbg !366
  %22525 = icmp slt i32 %22523, %22524, !dbg !367
  br i1 %22525, label %22526, label %48422, !dbg !368

22526:                                            ; preds = %22520
  %22527 = load i32, ptr %10, align 4, !dbg !369
  %22528 = sext i32 %22527 to i64, !dbg !371
  %22529 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22528, !dbg !371
  %22530 = load double, ptr %6, align 8, !dbg !372
  %22531 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22532 = load double, ptr %22531, align 8, !dbg !372
  %22533 = load double, ptr %22529, align 16, !dbg !372
  %22534 = getelementptr inbounds { double, double }, ptr %22529, i32 0, i32 1, !dbg !372
  %22535 = load double, ptr %22534, align 8, !dbg !372
  %22536 = call { double, double } @make_vec(double %22530, double %22532, double %22533, double %22535), !dbg !372
  %22537 = extractvalue { double, double } %22536, 0, !dbg !372
  store double %22537, ptr %16, align 8, !dbg !372
  %22538 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22539 = extractvalue { double, double } %22536, 1, !dbg !372
  store double %22539, ptr %22538, align 8, !dbg !372
  %22540 = load i32, ptr %10, align 4, !dbg !373
  %22541 = add nsw i32 %22540, 1, !dbg !374
  %22542 = sext i32 %22541 to i64, !dbg !375
  %22543 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22542, !dbg !375
  %22544 = load double, ptr %6, align 8, !dbg !376
  %22545 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22546 = load double, ptr %22545, align 8, !dbg !376
  %22547 = load double, ptr %22543, align 16, !dbg !376
  %22548 = getelementptr inbounds { double, double }, ptr %22543, i32 0, i32 1, !dbg !376
  %22549 = load double, ptr %22548, align 8, !dbg !376
  %22550 = call { double, double } @make_vec(double %22544, double %22546, double %22547, double %22549), !dbg !376
  %22551 = extractvalue { double, double } %22550, 0, !dbg !376
  store double %22551, ptr %17, align 8, !dbg !376
  %22552 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22553 = extractvalue { double, double } %22550, 1, !dbg !376
  store double %22553, ptr %22552, align 8, !dbg !376
  %22554 = load double, ptr %16, align 8, !dbg !377
  %22555 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22556 = load double, ptr %22555, align 8, !dbg !377
  %22557 = load double, ptr %17, align 8, !dbg !377
  %22558 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22559 = load double, ptr %22558, align 8, !dbg !377
  %22560 = call double @cross(double %22554, double %22556, double %22557, double %22559), !dbg !377
  %22561 = load i32, ptr %10, align 4, !dbg !378
  %22562 = sext i32 %22561 to i64, !dbg !379
  %22563 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22562, !dbg !379
  %22564 = load double, ptr %6, align 8, !dbg !380
  %22565 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22566 = load double, ptr %22565, align 8, !dbg !380
  %22567 = load double, ptr %22563, align 16, !dbg !380
  %22568 = getelementptr inbounds { double, double }, ptr %22563, i32 0, i32 1, !dbg !380
  %22569 = load double, ptr %22568, align 8, !dbg !380
  %22570 = call { double, double } @make_vec(double %22564, double %22566, double %22567, double %22569), !dbg !380
  %22571 = extractvalue { double, double } %22570, 0, !dbg !380
  store double %22571, ptr %18, align 8, !dbg !380
  %22572 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22573 = extractvalue { double, double } %22570, 1, !dbg !380
  store double %22573, ptr %22572, align 8, !dbg !380
  %22574 = load i32, ptr %10, align 4, !dbg !381
  %22575 = add nsw i32 %22574, 1, !dbg !382
  %22576 = sext i32 %22575 to i64, !dbg !383
  %22577 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22576, !dbg !383
  %22578 = load double, ptr %6, align 8, !dbg !384
  %22579 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22580 = load double, ptr %22579, align 8, !dbg !384
  %22581 = load double, ptr %22577, align 16, !dbg !384
  %22582 = getelementptr inbounds { double, double }, ptr %22577, i32 0, i32 1, !dbg !384
  %22583 = load double, ptr %22582, align 8, !dbg !384
  %22584 = call { double, double } @make_vec(double %22578, double %22580, double %22581, double %22583), !dbg !384
  %22585 = extractvalue { double, double } %22584, 0, !dbg !384
  store double %22585, ptr %19, align 8, !dbg !384
  %22586 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22587 = extractvalue { double, double } %22584, 1, !dbg !384
  store double %22587, ptr %22586, align 8, !dbg !384
  %22588 = load double, ptr %18, align 8, !dbg !385
  %22589 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22590 = load double, ptr %22589, align 8, !dbg !385
  %22591 = load double, ptr %19, align 8, !dbg !385
  %22592 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22593 = load double, ptr %22592, align 8, !dbg !385
  %22594 = call double @dot(double %22588, double %22590, double %22591, double %22593), !dbg !385
  %22595 = call double @atan2(double noundef %22560, double noundef %22594) #6, !dbg !386
  store double %22595, ptr %13, align 8, !dbg !387
  %22596 = load double, ptr %13, align 8, !dbg !388
  %22597 = load double, ptr %14, align 8, !dbg !389
  %22598 = fadd double %22597, %22596, !dbg !389
  store double %22598, ptr %14, align 8, !dbg !389
  %22599 = load double, ptr %13, align 8, !dbg !390
  %22600 = fsub double %22599, 0x400921FB54442D18, !dbg !392
  %22601 = call double @llvm.fabs.f64(double %22600), !dbg !393
  %22602 = fcmp ole double %22601, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22602, label %14330, label %22603, !dbg !395

22603:                                            ; preds = %22526
  %22604 = load double, ptr %13, align 8, !dbg !396
  %22605 = fadd double %22604, 0x400921FB54442D18, !dbg !397
  %22606 = call double @llvm.fabs.f64(double %22605), !dbg !398
  %22607 = fcmp ole double %22606, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22607, label %14330, label %22608, !dbg !400

22608:                                            ; preds = %22603
  br label %22609, !dbg !403

22609:                                            ; preds = %22608
  %22610 = load i32, ptr %10, align 4, !dbg !404
  %22611 = add nsw i32 %22610, 1, !dbg !404
  store i32 %22611, ptr %10, align 4, !dbg !404
  %22612 = load i32, ptr %10, align 4, !dbg !364
  %22613 = load i32, ptr %8, align 4, !dbg !366
  %22614 = icmp slt i32 %22612, %22613, !dbg !367
  br i1 %22614, label %22615, label %48422, !dbg !368

22615:                                            ; preds = %22609
  %22616 = load i32, ptr %10, align 4, !dbg !369
  %22617 = sext i32 %22616 to i64, !dbg !371
  %22618 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22617, !dbg !371
  %22619 = load double, ptr %6, align 8, !dbg !372
  %22620 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22621 = load double, ptr %22620, align 8, !dbg !372
  %22622 = load double, ptr %22618, align 16, !dbg !372
  %22623 = getelementptr inbounds { double, double }, ptr %22618, i32 0, i32 1, !dbg !372
  %22624 = load double, ptr %22623, align 8, !dbg !372
  %22625 = call { double, double } @make_vec(double %22619, double %22621, double %22622, double %22624), !dbg !372
  %22626 = extractvalue { double, double } %22625, 0, !dbg !372
  store double %22626, ptr %16, align 8, !dbg !372
  %22627 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22628 = extractvalue { double, double } %22625, 1, !dbg !372
  store double %22628, ptr %22627, align 8, !dbg !372
  %22629 = load i32, ptr %10, align 4, !dbg !373
  %22630 = add nsw i32 %22629, 1, !dbg !374
  %22631 = sext i32 %22630 to i64, !dbg !375
  %22632 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22631, !dbg !375
  %22633 = load double, ptr %6, align 8, !dbg !376
  %22634 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22635 = load double, ptr %22634, align 8, !dbg !376
  %22636 = load double, ptr %22632, align 16, !dbg !376
  %22637 = getelementptr inbounds { double, double }, ptr %22632, i32 0, i32 1, !dbg !376
  %22638 = load double, ptr %22637, align 8, !dbg !376
  %22639 = call { double, double } @make_vec(double %22633, double %22635, double %22636, double %22638), !dbg !376
  %22640 = extractvalue { double, double } %22639, 0, !dbg !376
  store double %22640, ptr %17, align 8, !dbg !376
  %22641 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22642 = extractvalue { double, double } %22639, 1, !dbg !376
  store double %22642, ptr %22641, align 8, !dbg !376
  %22643 = load double, ptr %16, align 8, !dbg !377
  %22644 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22645 = load double, ptr %22644, align 8, !dbg !377
  %22646 = load double, ptr %17, align 8, !dbg !377
  %22647 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22648 = load double, ptr %22647, align 8, !dbg !377
  %22649 = call double @cross(double %22643, double %22645, double %22646, double %22648), !dbg !377
  %22650 = load i32, ptr %10, align 4, !dbg !378
  %22651 = sext i32 %22650 to i64, !dbg !379
  %22652 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22651, !dbg !379
  %22653 = load double, ptr %6, align 8, !dbg !380
  %22654 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22655 = load double, ptr %22654, align 8, !dbg !380
  %22656 = load double, ptr %22652, align 16, !dbg !380
  %22657 = getelementptr inbounds { double, double }, ptr %22652, i32 0, i32 1, !dbg !380
  %22658 = load double, ptr %22657, align 8, !dbg !380
  %22659 = call { double, double } @make_vec(double %22653, double %22655, double %22656, double %22658), !dbg !380
  %22660 = extractvalue { double, double } %22659, 0, !dbg !380
  store double %22660, ptr %18, align 8, !dbg !380
  %22661 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22662 = extractvalue { double, double } %22659, 1, !dbg !380
  store double %22662, ptr %22661, align 8, !dbg !380
  %22663 = load i32, ptr %10, align 4, !dbg !381
  %22664 = add nsw i32 %22663, 1, !dbg !382
  %22665 = sext i32 %22664 to i64, !dbg !383
  %22666 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22665, !dbg !383
  %22667 = load double, ptr %6, align 8, !dbg !384
  %22668 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22669 = load double, ptr %22668, align 8, !dbg !384
  %22670 = load double, ptr %22666, align 16, !dbg !384
  %22671 = getelementptr inbounds { double, double }, ptr %22666, i32 0, i32 1, !dbg !384
  %22672 = load double, ptr %22671, align 8, !dbg !384
  %22673 = call { double, double } @make_vec(double %22667, double %22669, double %22670, double %22672), !dbg !384
  %22674 = extractvalue { double, double } %22673, 0, !dbg !384
  store double %22674, ptr %19, align 8, !dbg !384
  %22675 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22676 = extractvalue { double, double } %22673, 1, !dbg !384
  store double %22676, ptr %22675, align 8, !dbg !384
  %22677 = load double, ptr %18, align 8, !dbg !385
  %22678 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22679 = load double, ptr %22678, align 8, !dbg !385
  %22680 = load double, ptr %19, align 8, !dbg !385
  %22681 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22682 = load double, ptr %22681, align 8, !dbg !385
  %22683 = call double @dot(double %22677, double %22679, double %22680, double %22682), !dbg !385
  %22684 = call double @atan2(double noundef %22649, double noundef %22683) #6, !dbg !386
  store double %22684, ptr %13, align 8, !dbg !387
  %22685 = load double, ptr %13, align 8, !dbg !388
  %22686 = load double, ptr %14, align 8, !dbg !389
  %22687 = fadd double %22686, %22685, !dbg !389
  store double %22687, ptr %14, align 8, !dbg !389
  %22688 = load double, ptr %13, align 8, !dbg !390
  %22689 = fsub double %22688, 0x400921FB54442D18, !dbg !392
  %22690 = call double @llvm.fabs.f64(double %22689), !dbg !393
  %22691 = fcmp ole double %22690, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22691, label %14330, label %22692, !dbg !395

22692:                                            ; preds = %22615
  %22693 = load double, ptr %13, align 8, !dbg !396
  %22694 = fadd double %22693, 0x400921FB54442D18, !dbg !397
  %22695 = call double @llvm.fabs.f64(double %22694), !dbg !398
  %22696 = fcmp ole double %22695, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22696, label %14330, label %22697, !dbg !400

22697:                                            ; preds = %22692
  br label %22698, !dbg !403

22698:                                            ; preds = %22697
  %22699 = load i32, ptr %10, align 4, !dbg !404
  %22700 = add nsw i32 %22699, 1, !dbg !404
  store i32 %22700, ptr %10, align 4, !dbg !404
  %22701 = load i32, ptr %10, align 4, !dbg !364
  %22702 = load i32, ptr %8, align 4, !dbg !366
  %22703 = icmp slt i32 %22701, %22702, !dbg !367
  br i1 %22703, label %22704, label %48422, !dbg !368

22704:                                            ; preds = %22698
  %22705 = load i32, ptr %10, align 4, !dbg !369
  %22706 = sext i32 %22705 to i64, !dbg !371
  %22707 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22706, !dbg !371
  %22708 = load double, ptr %6, align 8, !dbg !372
  %22709 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22710 = load double, ptr %22709, align 8, !dbg !372
  %22711 = load double, ptr %22707, align 16, !dbg !372
  %22712 = getelementptr inbounds { double, double }, ptr %22707, i32 0, i32 1, !dbg !372
  %22713 = load double, ptr %22712, align 8, !dbg !372
  %22714 = call { double, double } @make_vec(double %22708, double %22710, double %22711, double %22713), !dbg !372
  %22715 = extractvalue { double, double } %22714, 0, !dbg !372
  store double %22715, ptr %16, align 8, !dbg !372
  %22716 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22717 = extractvalue { double, double } %22714, 1, !dbg !372
  store double %22717, ptr %22716, align 8, !dbg !372
  %22718 = load i32, ptr %10, align 4, !dbg !373
  %22719 = add nsw i32 %22718, 1, !dbg !374
  %22720 = sext i32 %22719 to i64, !dbg !375
  %22721 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22720, !dbg !375
  %22722 = load double, ptr %6, align 8, !dbg !376
  %22723 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22724 = load double, ptr %22723, align 8, !dbg !376
  %22725 = load double, ptr %22721, align 16, !dbg !376
  %22726 = getelementptr inbounds { double, double }, ptr %22721, i32 0, i32 1, !dbg !376
  %22727 = load double, ptr %22726, align 8, !dbg !376
  %22728 = call { double, double } @make_vec(double %22722, double %22724, double %22725, double %22727), !dbg !376
  %22729 = extractvalue { double, double } %22728, 0, !dbg !376
  store double %22729, ptr %17, align 8, !dbg !376
  %22730 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22731 = extractvalue { double, double } %22728, 1, !dbg !376
  store double %22731, ptr %22730, align 8, !dbg !376
  %22732 = load double, ptr %16, align 8, !dbg !377
  %22733 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22734 = load double, ptr %22733, align 8, !dbg !377
  %22735 = load double, ptr %17, align 8, !dbg !377
  %22736 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22737 = load double, ptr %22736, align 8, !dbg !377
  %22738 = call double @cross(double %22732, double %22734, double %22735, double %22737), !dbg !377
  %22739 = load i32, ptr %10, align 4, !dbg !378
  %22740 = sext i32 %22739 to i64, !dbg !379
  %22741 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22740, !dbg !379
  %22742 = load double, ptr %6, align 8, !dbg !380
  %22743 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22744 = load double, ptr %22743, align 8, !dbg !380
  %22745 = load double, ptr %22741, align 16, !dbg !380
  %22746 = getelementptr inbounds { double, double }, ptr %22741, i32 0, i32 1, !dbg !380
  %22747 = load double, ptr %22746, align 8, !dbg !380
  %22748 = call { double, double } @make_vec(double %22742, double %22744, double %22745, double %22747), !dbg !380
  %22749 = extractvalue { double, double } %22748, 0, !dbg !380
  store double %22749, ptr %18, align 8, !dbg !380
  %22750 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22751 = extractvalue { double, double } %22748, 1, !dbg !380
  store double %22751, ptr %22750, align 8, !dbg !380
  %22752 = load i32, ptr %10, align 4, !dbg !381
  %22753 = add nsw i32 %22752, 1, !dbg !382
  %22754 = sext i32 %22753 to i64, !dbg !383
  %22755 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22754, !dbg !383
  %22756 = load double, ptr %6, align 8, !dbg !384
  %22757 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22758 = load double, ptr %22757, align 8, !dbg !384
  %22759 = load double, ptr %22755, align 16, !dbg !384
  %22760 = getelementptr inbounds { double, double }, ptr %22755, i32 0, i32 1, !dbg !384
  %22761 = load double, ptr %22760, align 8, !dbg !384
  %22762 = call { double, double } @make_vec(double %22756, double %22758, double %22759, double %22761), !dbg !384
  %22763 = extractvalue { double, double } %22762, 0, !dbg !384
  store double %22763, ptr %19, align 8, !dbg !384
  %22764 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22765 = extractvalue { double, double } %22762, 1, !dbg !384
  store double %22765, ptr %22764, align 8, !dbg !384
  %22766 = load double, ptr %18, align 8, !dbg !385
  %22767 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22768 = load double, ptr %22767, align 8, !dbg !385
  %22769 = load double, ptr %19, align 8, !dbg !385
  %22770 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22771 = load double, ptr %22770, align 8, !dbg !385
  %22772 = call double @dot(double %22766, double %22768, double %22769, double %22771), !dbg !385
  %22773 = call double @atan2(double noundef %22738, double noundef %22772) #6, !dbg !386
  store double %22773, ptr %13, align 8, !dbg !387
  %22774 = load double, ptr %13, align 8, !dbg !388
  %22775 = load double, ptr %14, align 8, !dbg !389
  %22776 = fadd double %22775, %22774, !dbg !389
  store double %22776, ptr %14, align 8, !dbg !389
  %22777 = load double, ptr %13, align 8, !dbg !390
  %22778 = fsub double %22777, 0x400921FB54442D18, !dbg !392
  %22779 = call double @llvm.fabs.f64(double %22778), !dbg !393
  %22780 = fcmp ole double %22779, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22780, label %14330, label %22781, !dbg !395

22781:                                            ; preds = %22704
  %22782 = load double, ptr %13, align 8, !dbg !396
  %22783 = fadd double %22782, 0x400921FB54442D18, !dbg !397
  %22784 = call double @llvm.fabs.f64(double %22783), !dbg !398
  %22785 = fcmp ole double %22784, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22785, label %14330, label %22786, !dbg !400

22786:                                            ; preds = %22781
  br label %22787, !dbg !403

22787:                                            ; preds = %22786
  %22788 = load i32, ptr %10, align 4, !dbg !404
  %22789 = add nsw i32 %22788, 1, !dbg !404
  store i32 %22789, ptr %10, align 4, !dbg !404
  %22790 = load i32, ptr %10, align 4, !dbg !364
  %22791 = load i32, ptr %8, align 4, !dbg !366
  %22792 = icmp slt i32 %22790, %22791, !dbg !367
  br i1 %22792, label %22793, label %48422, !dbg !368

22793:                                            ; preds = %22787
  %22794 = load i32, ptr %10, align 4, !dbg !369
  %22795 = sext i32 %22794 to i64, !dbg !371
  %22796 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22795, !dbg !371
  %22797 = load double, ptr %6, align 8, !dbg !372
  %22798 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22799 = load double, ptr %22798, align 8, !dbg !372
  %22800 = load double, ptr %22796, align 16, !dbg !372
  %22801 = getelementptr inbounds { double, double }, ptr %22796, i32 0, i32 1, !dbg !372
  %22802 = load double, ptr %22801, align 8, !dbg !372
  %22803 = call { double, double } @make_vec(double %22797, double %22799, double %22800, double %22802), !dbg !372
  %22804 = extractvalue { double, double } %22803, 0, !dbg !372
  store double %22804, ptr %16, align 8, !dbg !372
  %22805 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22806 = extractvalue { double, double } %22803, 1, !dbg !372
  store double %22806, ptr %22805, align 8, !dbg !372
  %22807 = load i32, ptr %10, align 4, !dbg !373
  %22808 = add nsw i32 %22807, 1, !dbg !374
  %22809 = sext i32 %22808 to i64, !dbg !375
  %22810 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22809, !dbg !375
  %22811 = load double, ptr %6, align 8, !dbg !376
  %22812 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22813 = load double, ptr %22812, align 8, !dbg !376
  %22814 = load double, ptr %22810, align 16, !dbg !376
  %22815 = getelementptr inbounds { double, double }, ptr %22810, i32 0, i32 1, !dbg !376
  %22816 = load double, ptr %22815, align 8, !dbg !376
  %22817 = call { double, double } @make_vec(double %22811, double %22813, double %22814, double %22816), !dbg !376
  %22818 = extractvalue { double, double } %22817, 0, !dbg !376
  store double %22818, ptr %17, align 8, !dbg !376
  %22819 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22820 = extractvalue { double, double } %22817, 1, !dbg !376
  store double %22820, ptr %22819, align 8, !dbg !376
  %22821 = load double, ptr %16, align 8, !dbg !377
  %22822 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22823 = load double, ptr %22822, align 8, !dbg !377
  %22824 = load double, ptr %17, align 8, !dbg !377
  %22825 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22826 = load double, ptr %22825, align 8, !dbg !377
  %22827 = call double @cross(double %22821, double %22823, double %22824, double %22826), !dbg !377
  %22828 = load i32, ptr %10, align 4, !dbg !378
  %22829 = sext i32 %22828 to i64, !dbg !379
  %22830 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22829, !dbg !379
  %22831 = load double, ptr %6, align 8, !dbg !380
  %22832 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22833 = load double, ptr %22832, align 8, !dbg !380
  %22834 = load double, ptr %22830, align 16, !dbg !380
  %22835 = getelementptr inbounds { double, double }, ptr %22830, i32 0, i32 1, !dbg !380
  %22836 = load double, ptr %22835, align 8, !dbg !380
  %22837 = call { double, double } @make_vec(double %22831, double %22833, double %22834, double %22836), !dbg !380
  %22838 = extractvalue { double, double } %22837, 0, !dbg !380
  store double %22838, ptr %18, align 8, !dbg !380
  %22839 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22840 = extractvalue { double, double } %22837, 1, !dbg !380
  store double %22840, ptr %22839, align 8, !dbg !380
  %22841 = load i32, ptr %10, align 4, !dbg !381
  %22842 = add nsw i32 %22841, 1, !dbg !382
  %22843 = sext i32 %22842 to i64, !dbg !383
  %22844 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22843, !dbg !383
  %22845 = load double, ptr %6, align 8, !dbg !384
  %22846 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22847 = load double, ptr %22846, align 8, !dbg !384
  %22848 = load double, ptr %22844, align 16, !dbg !384
  %22849 = getelementptr inbounds { double, double }, ptr %22844, i32 0, i32 1, !dbg !384
  %22850 = load double, ptr %22849, align 8, !dbg !384
  %22851 = call { double, double } @make_vec(double %22845, double %22847, double %22848, double %22850), !dbg !384
  %22852 = extractvalue { double, double } %22851, 0, !dbg !384
  store double %22852, ptr %19, align 8, !dbg !384
  %22853 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22854 = extractvalue { double, double } %22851, 1, !dbg !384
  store double %22854, ptr %22853, align 8, !dbg !384
  %22855 = load double, ptr %18, align 8, !dbg !385
  %22856 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22857 = load double, ptr %22856, align 8, !dbg !385
  %22858 = load double, ptr %19, align 8, !dbg !385
  %22859 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22860 = load double, ptr %22859, align 8, !dbg !385
  %22861 = call double @dot(double %22855, double %22857, double %22858, double %22860), !dbg !385
  %22862 = call double @atan2(double noundef %22827, double noundef %22861) #6, !dbg !386
  store double %22862, ptr %13, align 8, !dbg !387
  %22863 = load double, ptr %13, align 8, !dbg !388
  %22864 = load double, ptr %14, align 8, !dbg !389
  %22865 = fadd double %22864, %22863, !dbg !389
  store double %22865, ptr %14, align 8, !dbg !389
  %22866 = load double, ptr %13, align 8, !dbg !390
  %22867 = fsub double %22866, 0x400921FB54442D18, !dbg !392
  %22868 = call double @llvm.fabs.f64(double %22867), !dbg !393
  %22869 = fcmp ole double %22868, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22869, label %14330, label %22870, !dbg !395

22870:                                            ; preds = %22793
  %22871 = load double, ptr %13, align 8, !dbg !396
  %22872 = fadd double %22871, 0x400921FB54442D18, !dbg !397
  %22873 = call double @llvm.fabs.f64(double %22872), !dbg !398
  %22874 = fcmp ole double %22873, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22874, label %14330, label %22875, !dbg !400

22875:                                            ; preds = %22870
  br label %22876, !dbg !403

22876:                                            ; preds = %22875
  %22877 = load i32, ptr %10, align 4, !dbg !404
  %22878 = add nsw i32 %22877, 1, !dbg !404
  store i32 %22878, ptr %10, align 4, !dbg !404
  %22879 = load i32, ptr %10, align 4, !dbg !364
  %22880 = load i32, ptr %8, align 4, !dbg !366
  %22881 = icmp slt i32 %22879, %22880, !dbg !367
  br i1 %22881, label %22882, label %48422, !dbg !368

22882:                                            ; preds = %22876
  %22883 = load i32, ptr %10, align 4, !dbg !369
  %22884 = sext i32 %22883 to i64, !dbg !371
  %22885 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22884, !dbg !371
  %22886 = load double, ptr %6, align 8, !dbg !372
  %22887 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22888 = load double, ptr %22887, align 8, !dbg !372
  %22889 = load double, ptr %22885, align 16, !dbg !372
  %22890 = getelementptr inbounds { double, double }, ptr %22885, i32 0, i32 1, !dbg !372
  %22891 = load double, ptr %22890, align 8, !dbg !372
  %22892 = call { double, double } @make_vec(double %22886, double %22888, double %22889, double %22891), !dbg !372
  %22893 = extractvalue { double, double } %22892, 0, !dbg !372
  store double %22893, ptr %16, align 8, !dbg !372
  %22894 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22895 = extractvalue { double, double } %22892, 1, !dbg !372
  store double %22895, ptr %22894, align 8, !dbg !372
  %22896 = load i32, ptr %10, align 4, !dbg !373
  %22897 = add nsw i32 %22896, 1, !dbg !374
  %22898 = sext i32 %22897 to i64, !dbg !375
  %22899 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22898, !dbg !375
  %22900 = load double, ptr %6, align 8, !dbg !376
  %22901 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22902 = load double, ptr %22901, align 8, !dbg !376
  %22903 = load double, ptr %22899, align 16, !dbg !376
  %22904 = getelementptr inbounds { double, double }, ptr %22899, i32 0, i32 1, !dbg !376
  %22905 = load double, ptr %22904, align 8, !dbg !376
  %22906 = call { double, double } @make_vec(double %22900, double %22902, double %22903, double %22905), !dbg !376
  %22907 = extractvalue { double, double } %22906, 0, !dbg !376
  store double %22907, ptr %17, align 8, !dbg !376
  %22908 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22909 = extractvalue { double, double } %22906, 1, !dbg !376
  store double %22909, ptr %22908, align 8, !dbg !376
  %22910 = load double, ptr %16, align 8, !dbg !377
  %22911 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %22912 = load double, ptr %22911, align 8, !dbg !377
  %22913 = load double, ptr %17, align 8, !dbg !377
  %22914 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %22915 = load double, ptr %22914, align 8, !dbg !377
  %22916 = call double @cross(double %22910, double %22912, double %22913, double %22915), !dbg !377
  %22917 = load i32, ptr %10, align 4, !dbg !378
  %22918 = sext i32 %22917 to i64, !dbg !379
  %22919 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22918, !dbg !379
  %22920 = load double, ptr %6, align 8, !dbg !380
  %22921 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %22922 = load double, ptr %22921, align 8, !dbg !380
  %22923 = load double, ptr %22919, align 16, !dbg !380
  %22924 = getelementptr inbounds { double, double }, ptr %22919, i32 0, i32 1, !dbg !380
  %22925 = load double, ptr %22924, align 8, !dbg !380
  %22926 = call { double, double } @make_vec(double %22920, double %22922, double %22923, double %22925), !dbg !380
  %22927 = extractvalue { double, double } %22926, 0, !dbg !380
  store double %22927, ptr %18, align 8, !dbg !380
  %22928 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %22929 = extractvalue { double, double } %22926, 1, !dbg !380
  store double %22929, ptr %22928, align 8, !dbg !380
  %22930 = load i32, ptr %10, align 4, !dbg !381
  %22931 = add nsw i32 %22930, 1, !dbg !382
  %22932 = sext i32 %22931 to i64, !dbg !383
  %22933 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22932, !dbg !383
  %22934 = load double, ptr %6, align 8, !dbg !384
  %22935 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %22936 = load double, ptr %22935, align 8, !dbg !384
  %22937 = load double, ptr %22933, align 16, !dbg !384
  %22938 = getelementptr inbounds { double, double }, ptr %22933, i32 0, i32 1, !dbg !384
  %22939 = load double, ptr %22938, align 8, !dbg !384
  %22940 = call { double, double } @make_vec(double %22934, double %22936, double %22937, double %22939), !dbg !384
  %22941 = extractvalue { double, double } %22940, 0, !dbg !384
  store double %22941, ptr %19, align 8, !dbg !384
  %22942 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %22943 = extractvalue { double, double } %22940, 1, !dbg !384
  store double %22943, ptr %22942, align 8, !dbg !384
  %22944 = load double, ptr %18, align 8, !dbg !385
  %22945 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %22946 = load double, ptr %22945, align 8, !dbg !385
  %22947 = load double, ptr %19, align 8, !dbg !385
  %22948 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %22949 = load double, ptr %22948, align 8, !dbg !385
  %22950 = call double @dot(double %22944, double %22946, double %22947, double %22949), !dbg !385
  %22951 = call double @atan2(double noundef %22916, double noundef %22950) #6, !dbg !386
  store double %22951, ptr %13, align 8, !dbg !387
  %22952 = load double, ptr %13, align 8, !dbg !388
  %22953 = load double, ptr %14, align 8, !dbg !389
  %22954 = fadd double %22953, %22952, !dbg !389
  store double %22954, ptr %14, align 8, !dbg !389
  %22955 = load double, ptr %13, align 8, !dbg !390
  %22956 = fsub double %22955, 0x400921FB54442D18, !dbg !392
  %22957 = call double @llvm.fabs.f64(double %22956), !dbg !393
  %22958 = fcmp ole double %22957, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %22958, label %14330, label %22959, !dbg !395

22959:                                            ; preds = %22882
  %22960 = load double, ptr %13, align 8, !dbg !396
  %22961 = fadd double %22960, 0x400921FB54442D18, !dbg !397
  %22962 = call double @llvm.fabs.f64(double %22961), !dbg !398
  %22963 = fcmp ole double %22962, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %22963, label %14330, label %22964, !dbg !400

22964:                                            ; preds = %22959
  br label %22965, !dbg !403

22965:                                            ; preds = %22964
  %22966 = load i32, ptr %10, align 4, !dbg !404
  %22967 = add nsw i32 %22966, 1, !dbg !404
  store i32 %22967, ptr %10, align 4, !dbg !404
  %22968 = load i32, ptr %10, align 4, !dbg !364
  %22969 = load i32, ptr %8, align 4, !dbg !366
  %22970 = icmp slt i32 %22968, %22969, !dbg !367
  br i1 %22970, label %22971, label %48422, !dbg !368

22971:                                            ; preds = %22965
  %22972 = load i32, ptr %10, align 4, !dbg !369
  %22973 = sext i32 %22972 to i64, !dbg !371
  %22974 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22973, !dbg !371
  %22975 = load double, ptr %6, align 8, !dbg !372
  %22976 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %22977 = load double, ptr %22976, align 8, !dbg !372
  %22978 = load double, ptr %22974, align 16, !dbg !372
  %22979 = getelementptr inbounds { double, double }, ptr %22974, i32 0, i32 1, !dbg !372
  %22980 = load double, ptr %22979, align 8, !dbg !372
  %22981 = call { double, double } @make_vec(double %22975, double %22977, double %22978, double %22980), !dbg !372
  %22982 = extractvalue { double, double } %22981, 0, !dbg !372
  store double %22982, ptr %16, align 8, !dbg !372
  %22983 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %22984 = extractvalue { double, double } %22981, 1, !dbg !372
  store double %22984, ptr %22983, align 8, !dbg !372
  %22985 = load i32, ptr %10, align 4, !dbg !373
  %22986 = add nsw i32 %22985, 1, !dbg !374
  %22987 = sext i32 %22986 to i64, !dbg !375
  %22988 = getelementptr inbounds %struct.POINT, ptr %26, i64 %22987, !dbg !375
  %22989 = load double, ptr %6, align 8, !dbg !376
  %22990 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %22991 = load double, ptr %22990, align 8, !dbg !376
  %22992 = load double, ptr %22988, align 16, !dbg !376
  %22993 = getelementptr inbounds { double, double }, ptr %22988, i32 0, i32 1, !dbg !376
  %22994 = load double, ptr %22993, align 8, !dbg !376
  %22995 = call { double, double } @make_vec(double %22989, double %22991, double %22992, double %22994), !dbg !376
  %22996 = extractvalue { double, double } %22995, 0, !dbg !376
  store double %22996, ptr %17, align 8, !dbg !376
  %22997 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %22998 = extractvalue { double, double } %22995, 1, !dbg !376
  store double %22998, ptr %22997, align 8, !dbg !376
  %22999 = load double, ptr %16, align 8, !dbg !377
  %23000 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23001 = load double, ptr %23000, align 8, !dbg !377
  %23002 = load double, ptr %17, align 8, !dbg !377
  %23003 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23004 = load double, ptr %23003, align 8, !dbg !377
  %23005 = call double @cross(double %22999, double %23001, double %23002, double %23004), !dbg !377
  %23006 = load i32, ptr %10, align 4, !dbg !378
  %23007 = sext i32 %23006 to i64, !dbg !379
  %23008 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23007, !dbg !379
  %23009 = load double, ptr %6, align 8, !dbg !380
  %23010 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23011 = load double, ptr %23010, align 8, !dbg !380
  %23012 = load double, ptr %23008, align 16, !dbg !380
  %23013 = getelementptr inbounds { double, double }, ptr %23008, i32 0, i32 1, !dbg !380
  %23014 = load double, ptr %23013, align 8, !dbg !380
  %23015 = call { double, double } @make_vec(double %23009, double %23011, double %23012, double %23014), !dbg !380
  %23016 = extractvalue { double, double } %23015, 0, !dbg !380
  store double %23016, ptr %18, align 8, !dbg !380
  %23017 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23018 = extractvalue { double, double } %23015, 1, !dbg !380
  store double %23018, ptr %23017, align 8, !dbg !380
  %23019 = load i32, ptr %10, align 4, !dbg !381
  %23020 = add nsw i32 %23019, 1, !dbg !382
  %23021 = sext i32 %23020 to i64, !dbg !383
  %23022 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23021, !dbg !383
  %23023 = load double, ptr %6, align 8, !dbg !384
  %23024 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23025 = load double, ptr %23024, align 8, !dbg !384
  %23026 = load double, ptr %23022, align 16, !dbg !384
  %23027 = getelementptr inbounds { double, double }, ptr %23022, i32 0, i32 1, !dbg !384
  %23028 = load double, ptr %23027, align 8, !dbg !384
  %23029 = call { double, double } @make_vec(double %23023, double %23025, double %23026, double %23028), !dbg !384
  %23030 = extractvalue { double, double } %23029, 0, !dbg !384
  store double %23030, ptr %19, align 8, !dbg !384
  %23031 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23032 = extractvalue { double, double } %23029, 1, !dbg !384
  store double %23032, ptr %23031, align 8, !dbg !384
  %23033 = load double, ptr %18, align 8, !dbg !385
  %23034 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23035 = load double, ptr %23034, align 8, !dbg !385
  %23036 = load double, ptr %19, align 8, !dbg !385
  %23037 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23038 = load double, ptr %23037, align 8, !dbg !385
  %23039 = call double @dot(double %23033, double %23035, double %23036, double %23038), !dbg !385
  %23040 = call double @atan2(double noundef %23005, double noundef %23039) #6, !dbg !386
  store double %23040, ptr %13, align 8, !dbg !387
  %23041 = load double, ptr %13, align 8, !dbg !388
  %23042 = load double, ptr %14, align 8, !dbg !389
  %23043 = fadd double %23042, %23041, !dbg !389
  store double %23043, ptr %14, align 8, !dbg !389
  %23044 = load double, ptr %13, align 8, !dbg !390
  %23045 = fsub double %23044, 0x400921FB54442D18, !dbg !392
  %23046 = call double @llvm.fabs.f64(double %23045), !dbg !393
  %23047 = fcmp ole double %23046, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23047, label %14330, label %23048, !dbg !395

23048:                                            ; preds = %22971
  %23049 = load double, ptr %13, align 8, !dbg !396
  %23050 = fadd double %23049, 0x400921FB54442D18, !dbg !397
  %23051 = call double @llvm.fabs.f64(double %23050), !dbg !398
  %23052 = fcmp ole double %23051, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23052, label %14330, label %23053, !dbg !400

23053:                                            ; preds = %23048
  br label %23054, !dbg !403

23054:                                            ; preds = %23053
  %23055 = load i32, ptr %10, align 4, !dbg !404
  %23056 = add nsw i32 %23055, 1, !dbg !404
  store i32 %23056, ptr %10, align 4, !dbg !404
  %23057 = load i32, ptr %10, align 4, !dbg !364
  %23058 = load i32, ptr %8, align 4, !dbg !366
  %23059 = icmp slt i32 %23057, %23058, !dbg !367
  br i1 %23059, label %23060, label %48422, !dbg !368

23060:                                            ; preds = %23054
  %23061 = load i32, ptr %10, align 4, !dbg !369
  %23062 = sext i32 %23061 to i64, !dbg !371
  %23063 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23062, !dbg !371
  %23064 = load double, ptr %6, align 8, !dbg !372
  %23065 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23066 = load double, ptr %23065, align 8, !dbg !372
  %23067 = load double, ptr %23063, align 16, !dbg !372
  %23068 = getelementptr inbounds { double, double }, ptr %23063, i32 0, i32 1, !dbg !372
  %23069 = load double, ptr %23068, align 8, !dbg !372
  %23070 = call { double, double } @make_vec(double %23064, double %23066, double %23067, double %23069), !dbg !372
  %23071 = extractvalue { double, double } %23070, 0, !dbg !372
  store double %23071, ptr %16, align 8, !dbg !372
  %23072 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23073 = extractvalue { double, double } %23070, 1, !dbg !372
  store double %23073, ptr %23072, align 8, !dbg !372
  %23074 = load i32, ptr %10, align 4, !dbg !373
  %23075 = add nsw i32 %23074, 1, !dbg !374
  %23076 = sext i32 %23075 to i64, !dbg !375
  %23077 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23076, !dbg !375
  %23078 = load double, ptr %6, align 8, !dbg !376
  %23079 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23080 = load double, ptr %23079, align 8, !dbg !376
  %23081 = load double, ptr %23077, align 16, !dbg !376
  %23082 = getelementptr inbounds { double, double }, ptr %23077, i32 0, i32 1, !dbg !376
  %23083 = load double, ptr %23082, align 8, !dbg !376
  %23084 = call { double, double } @make_vec(double %23078, double %23080, double %23081, double %23083), !dbg !376
  %23085 = extractvalue { double, double } %23084, 0, !dbg !376
  store double %23085, ptr %17, align 8, !dbg !376
  %23086 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23087 = extractvalue { double, double } %23084, 1, !dbg !376
  store double %23087, ptr %23086, align 8, !dbg !376
  %23088 = load double, ptr %16, align 8, !dbg !377
  %23089 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23090 = load double, ptr %23089, align 8, !dbg !377
  %23091 = load double, ptr %17, align 8, !dbg !377
  %23092 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23093 = load double, ptr %23092, align 8, !dbg !377
  %23094 = call double @cross(double %23088, double %23090, double %23091, double %23093), !dbg !377
  %23095 = load i32, ptr %10, align 4, !dbg !378
  %23096 = sext i32 %23095 to i64, !dbg !379
  %23097 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23096, !dbg !379
  %23098 = load double, ptr %6, align 8, !dbg !380
  %23099 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23100 = load double, ptr %23099, align 8, !dbg !380
  %23101 = load double, ptr %23097, align 16, !dbg !380
  %23102 = getelementptr inbounds { double, double }, ptr %23097, i32 0, i32 1, !dbg !380
  %23103 = load double, ptr %23102, align 8, !dbg !380
  %23104 = call { double, double } @make_vec(double %23098, double %23100, double %23101, double %23103), !dbg !380
  %23105 = extractvalue { double, double } %23104, 0, !dbg !380
  store double %23105, ptr %18, align 8, !dbg !380
  %23106 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23107 = extractvalue { double, double } %23104, 1, !dbg !380
  store double %23107, ptr %23106, align 8, !dbg !380
  %23108 = load i32, ptr %10, align 4, !dbg !381
  %23109 = add nsw i32 %23108, 1, !dbg !382
  %23110 = sext i32 %23109 to i64, !dbg !383
  %23111 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23110, !dbg !383
  %23112 = load double, ptr %6, align 8, !dbg !384
  %23113 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23114 = load double, ptr %23113, align 8, !dbg !384
  %23115 = load double, ptr %23111, align 16, !dbg !384
  %23116 = getelementptr inbounds { double, double }, ptr %23111, i32 0, i32 1, !dbg !384
  %23117 = load double, ptr %23116, align 8, !dbg !384
  %23118 = call { double, double } @make_vec(double %23112, double %23114, double %23115, double %23117), !dbg !384
  %23119 = extractvalue { double, double } %23118, 0, !dbg !384
  store double %23119, ptr %19, align 8, !dbg !384
  %23120 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23121 = extractvalue { double, double } %23118, 1, !dbg !384
  store double %23121, ptr %23120, align 8, !dbg !384
  %23122 = load double, ptr %18, align 8, !dbg !385
  %23123 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23124 = load double, ptr %23123, align 8, !dbg !385
  %23125 = load double, ptr %19, align 8, !dbg !385
  %23126 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23127 = load double, ptr %23126, align 8, !dbg !385
  %23128 = call double @dot(double %23122, double %23124, double %23125, double %23127), !dbg !385
  %23129 = call double @atan2(double noundef %23094, double noundef %23128) #6, !dbg !386
  store double %23129, ptr %13, align 8, !dbg !387
  %23130 = load double, ptr %13, align 8, !dbg !388
  %23131 = load double, ptr %14, align 8, !dbg !389
  %23132 = fadd double %23131, %23130, !dbg !389
  store double %23132, ptr %14, align 8, !dbg !389
  %23133 = load double, ptr %13, align 8, !dbg !390
  %23134 = fsub double %23133, 0x400921FB54442D18, !dbg !392
  %23135 = call double @llvm.fabs.f64(double %23134), !dbg !393
  %23136 = fcmp ole double %23135, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23136, label %14330, label %23137, !dbg !395

23137:                                            ; preds = %23060
  %23138 = load double, ptr %13, align 8, !dbg !396
  %23139 = fadd double %23138, 0x400921FB54442D18, !dbg !397
  %23140 = call double @llvm.fabs.f64(double %23139), !dbg !398
  %23141 = fcmp ole double %23140, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23141, label %14330, label %23142, !dbg !400

23142:                                            ; preds = %23137
  br label %23143, !dbg !403

23143:                                            ; preds = %23142
  %23144 = load i32, ptr %10, align 4, !dbg !404
  %23145 = add nsw i32 %23144, 1, !dbg !404
  store i32 %23145, ptr %10, align 4, !dbg !404
  %23146 = load i32, ptr %10, align 4, !dbg !364
  %23147 = load i32, ptr %8, align 4, !dbg !366
  %23148 = icmp slt i32 %23146, %23147, !dbg !367
  br i1 %23148, label %23149, label %48422, !dbg !368

23149:                                            ; preds = %23143
  %23150 = load i32, ptr %10, align 4, !dbg !369
  %23151 = sext i32 %23150 to i64, !dbg !371
  %23152 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23151, !dbg !371
  %23153 = load double, ptr %6, align 8, !dbg !372
  %23154 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23155 = load double, ptr %23154, align 8, !dbg !372
  %23156 = load double, ptr %23152, align 16, !dbg !372
  %23157 = getelementptr inbounds { double, double }, ptr %23152, i32 0, i32 1, !dbg !372
  %23158 = load double, ptr %23157, align 8, !dbg !372
  %23159 = call { double, double } @make_vec(double %23153, double %23155, double %23156, double %23158), !dbg !372
  %23160 = extractvalue { double, double } %23159, 0, !dbg !372
  store double %23160, ptr %16, align 8, !dbg !372
  %23161 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23162 = extractvalue { double, double } %23159, 1, !dbg !372
  store double %23162, ptr %23161, align 8, !dbg !372
  %23163 = load i32, ptr %10, align 4, !dbg !373
  %23164 = add nsw i32 %23163, 1, !dbg !374
  %23165 = sext i32 %23164 to i64, !dbg !375
  %23166 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23165, !dbg !375
  %23167 = load double, ptr %6, align 8, !dbg !376
  %23168 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23169 = load double, ptr %23168, align 8, !dbg !376
  %23170 = load double, ptr %23166, align 16, !dbg !376
  %23171 = getelementptr inbounds { double, double }, ptr %23166, i32 0, i32 1, !dbg !376
  %23172 = load double, ptr %23171, align 8, !dbg !376
  %23173 = call { double, double } @make_vec(double %23167, double %23169, double %23170, double %23172), !dbg !376
  %23174 = extractvalue { double, double } %23173, 0, !dbg !376
  store double %23174, ptr %17, align 8, !dbg !376
  %23175 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23176 = extractvalue { double, double } %23173, 1, !dbg !376
  store double %23176, ptr %23175, align 8, !dbg !376
  %23177 = load double, ptr %16, align 8, !dbg !377
  %23178 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23179 = load double, ptr %23178, align 8, !dbg !377
  %23180 = load double, ptr %17, align 8, !dbg !377
  %23181 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23182 = load double, ptr %23181, align 8, !dbg !377
  %23183 = call double @cross(double %23177, double %23179, double %23180, double %23182), !dbg !377
  %23184 = load i32, ptr %10, align 4, !dbg !378
  %23185 = sext i32 %23184 to i64, !dbg !379
  %23186 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23185, !dbg !379
  %23187 = load double, ptr %6, align 8, !dbg !380
  %23188 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23189 = load double, ptr %23188, align 8, !dbg !380
  %23190 = load double, ptr %23186, align 16, !dbg !380
  %23191 = getelementptr inbounds { double, double }, ptr %23186, i32 0, i32 1, !dbg !380
  %23192 = load double, ptr %23191, align 8, !dbg !380
  %23193 = call { double, double } @make_vec(double %23187, double %23189, double %23190, double %23192), !dbg !380
  %23194 = extractvalue { double, double } %23193, 0, !dbg !380
  store double %23194, ptr %18, align 8, !dbg !380
  %23195 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23196 = extractvalue { double, double } %23193, 1, !dbg !380
  store double %23196, ptr %23195, align 8, !dbg !380
  %23197 = load i32, ptr %10, align 4, !dbg !381
  %23198 = add nsw i32 %23197, 1, !dbg !382
  %23199 = sext i32 %23198 to i64, !dbg !383
  %23200 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23199, !dbg !383
  %23201 = load double, ptr %6, align 8, !dbg !384
  %23202 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23203 = load double, ptr %23202, align 8, !dbg !384
  %23204 = load double, ptr %23200, align 16, !dbg !384
  %23205 = getelementptr inbounds { double, double }, ptr %23200, i32 0, i32 1, !dbg !384
  %23206 = load double, ptr %23205, align 8, !dbg !384
  %23207 = call { double, double } @make_vec(double %23201, double %23203, double %23204, double %23206), !dbg !384
  %23208 = extractvalue { double, double } %23207, 0, !dbg !384
  store double %23208, ptr %19, align 8, !dbg !384
  %23209 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23210 = extractvalue { double, double } %23207, 1, !dbg !384
  store double %23210, ptr %23209, align 8, !dbg !384
  %23211 = load double, ptr %18, align 8, !dbg !385
  %23212 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23213 = load double, ptr %23212, align 8, !dbg !385
  %23214 = load double, ptr %19, align 8, !dbg !385
  %23215 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23216 = load double, ptr %23215, align 8, !dbg !385
  %23217 = call double @dot(double %23211, double %23213, double %23214, double %23216), !dbg !385
  %23218 = call double @atan2(double noundef %23183, double noundef %23217) #6, !dbg !386
  store double %23218, ptr %13, align 8, !dbg !387
  %23219 = load double, ptr %13, align 8, !dbg !388
  %23220 = load double, ptr %14, align 8, !dbg !389
  %23221 = fadd double %23220, %23219, !dbg !389
  store double %23221, ptr %14, align 8, !dbg !389
  %23222 = load double, ptr %13, align 8, !dbg !390
  %23223 = fsub double %23222, 0x400921FB54442D18, !dbg !392
  %23224 = call double @llvm.fabs.f64(double %23223), !dbg !393
  %23225 = fcmp ole double %23224, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23225, label %14330, label %23226, !dbg !395

23226:                                            ; preds = %23149
  %23227 = load double, ptr %13, align 8, !dbg !396
  %23228 = fadd double %23227, 0x400921FB54442D18, !dbg !397
  %23229 = call double @llvm.fabs.f64(double %23228), !dbg !398
  %23230 = fcmp ole double %23229, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23230, label %14330, label %23231, !dbg !400

23231:                                            ; preds = %23226
  br label %23232, !dbg !403

23232:                                            ; preds = %23231
  %23233 = load i32, ptr %10, align 4, !dbg !404
  %23234 = add nsw i32 %23233, 1, !dbg !404
  store i32 %23234, ptr %10, align 4, !dbg !404
  %23235 = load i32, ptr %10, align 4, !dbg !364
  %23236 = load i32, ptr %8, align 4, !dbg !366
  %23237 = icmp slt i32 %23235, %23236, !dbg !367
  br i1 %23237, label %23238, label %48422, !dbg !368

23238:                                            ; preds = %23232
  %23239 = load i32, ptr %10, align 4, !dbg !369
  %23240 = sext i32 %23239 to i64, !dbg !371
  %23241 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23240, !dbg !371
  %23242 = load double, ptr %6, align 8, !dbg !372
  %23243 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23244 = load double, ptr %23243, align 8, !dbg !372
  %23245 = load double, ptr %23241, align 16, !dbg !372
  %23246 = getelementptr inbounds { double, double }, ptr %23241, i32 0, i32 1, !dbg !372
  %23247 = load double, ptr %23246, align 8, !dbg !372
  %23248 = call { double, double } @make_vec(double %23242, double %23244, double %23245, double %23247), !dbg !372
  %23249 = extractvalue { double, double } %23248, 0, !dbg !372
  store double %23249, ptr %16, align 8, !dbg !372
  %23250 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23251 = extractvalue { double, double } %23248, 1, !dbg !372
  store double %23251, ptr %23250, align 8, !dbg !372
  %23252 = load i32, ptr %10, align 4, !dbg !373
  %23253 = add nsw i32 %23252, 1, !dbg !374
  %23254 = sext i32 %23253 to i64, !dbg !375
  %23255 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23254, !dbg !375
  %23256 = load double, ptr %6, align 8, !dbg !376
  %23257 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23258 = load double, ptr %23257, align 8, !dbg !376
  %23259 = load double, ptr %23255, align 16, !dbg !376
  %23260 = getelementptr inbounds { double, double }, ptr %23255, i32 0, i32 1, !dbg !376
  %23261 = load double, ptr %23260, align 8, !dbg !376
  %23262 = call { double, double } @make_vec(double %23256, double %23258, double %23259, double %23261), !dbg !376
  %23263 = extractvalue { double, double } %23262, 0, !dbg !376
  store double %23263, ptr %17, align 8, !dbg !376
  %23264 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23265 = extractvalue { double, double } %23262, 1, !dbg !376
  store double %23265, ptr %23264, align 8, !dbg !376
  %23266 = load double, ptr %16, align 8, !dbg !377
  %23267 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23268 = load double, ptr %23267, align 8, !dbg !377
  %23269 = load double, ptr %17, align 8, !dbg !377
  %23270 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23271 = load double, ptr %23270, align 8, !dbg !377
  %23272 = call double @cross(double %23266, double %23268, double %23269, double %23271), !dbg !377
  %23273 = load i32, ptr %10, align 4, !dbg !378
  %23274 = sext i32 %23273 to i64, !dbg !379
  %23275 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23274, !dbg !379
  %23276 = load double, ptr %6, align 8, !dbg !380
  %23277 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23278 = load double, ptr %23277, align 8, !dbg !380
  %23279 = load double, ptr %23275, align 16, !dbg !380
  %23280 = getelementptr inbounds { double, double }, ptr %23275, i32 0, i32 1, !dbg !380
  %23281 = load double, ptr %23280, align 8, !dbg !380
  %23282 = call { double, double } @make_vec(double %23276, double %23278, double %23279, double %23281), !dbg !380
  %23283 = extractvalue { double, double } %23282, 0, !dbg !380
  store double %23283, ptr %18, align 8, !dbg !380
  %23284 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23285 = extractvalue { double, double } %23282, 1, !dbg !380
  store double %23285, ptr %23284, align 8, !dbg !380
  %23286 = load i32, ptr %10, align 4, !dbg !381
  %23287 = add nsw i32 %23286, 1, !dbg !382
  %23288 = sext i32 %23287 to i64, !dbg !383
  %23289 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23288, !dbg !383
  %23290 = load double, ptr %6, align 8, !dbg !384
  %23291 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23292 = load double, ptr %23291, align 8, !dbg !384
  %23293 = load double, ptr %23289, align 16, !dbg !384
  %23294 = getelementptr inbounds { double, double }, ptr %23289, i32 0, i32 1, !dbg !384
  %23295 = load double, ptr %23294, align 8, !dbg !384
  %23296 = call { double, double } @make_vec(double %23290, double %23292, double %23293, double %23295), !dbg !384
  %23297 = extractvalue { double, double } %23296, 0, !dbg !384
  store double %23297, ptr %19, align 8, !dbg !384
  %23298 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23299 = extractvalue { double, double } %23296, 1, !dbg !384
  store double %23299, ptr %23298, align 8, !dbg !384
  %23300 = load double, ptr %18, align 8, !dbg !385
  %23301 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23302 = load double, ptr %23301, align 8, !dbg !385
  %23303 = load double, ptr %19, align 8, !dbg !385
  %23304 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23305 = load double, ptr %23304, align 8, !dbg !385
  %23306 = call double @dot(double %23300, double %23302, double %23303, double %23305), !dbg !385
  %23307 = call double @atan2(double noundef %23272, double noundef %23306) #6, !dbg !386
  store double %23307, ptr %13, align 8, !dbg !387
  %23308 = load double, ptr %13, align 8, !dbg !388
  %23309 = load double, ptr %14, align 8, !dbg !389
  %23310 = fadd double %23309, %23308, !dbg !389
  store double %23310, ptr %14, align 8, !dbg !389
  %23311 = load double, ptr %13, align 8, !dbg !390
  %23312 = fsub double %23311, 0x400921FB54442D18, !dbg !392
  %23313 = call double @llvm.fabs.f64(double %23312), !dbg !393
  %23314 = fcmp ole double %23313, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23314, label %14330, label %23315, !dbg !395

23315:                                            ; preds = %23238
  %23316 = load double, ptr %13, align 8, !dbg !396
  %23317 = fadd double %23316, 0x400921FB54442D18, !dbg !397
  %23318 = call double @llvm.fabs.f64(double %23317), !dbg !398
  %23319 = fcmp ole double %23318, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23319, label %14330, label %23320, !dbg !400

23320:                                            ; preds = %23315
  br label %23321, !dbg !403

23321:                                            ; preds = %23320
  %23322 = load i32, ptr %10, align 4, !dbg !404
  %23323 = add nsw i32 %23322, 1, !dbg !404
  store i32 %23323, ptr %10, align 4, !dbg !404
  %23324 = load i32, ptr %10, align 4, !dbg !364
  %23325 = load i32, ptr %8, align 4, !dbg !366
  %23326 = icmp slt i32 %23324, %23325, !dbg !367
  br i1 %23326, label %23327, label %48422, !dbg !368

23327:                                            ; preds = %23321
  %23328 = load i32, ptr %10, align 4, !dbg !369
  %23329 = sext i32 %23328 to i64, !dbg !371
  %23330 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23329, !dbg !371
  %23331 = load double, ptr %6, align 8, !dbg !372
  %23332 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23333 = load double, ptr %23332, align 8, !dbg !372
  %23334 = load double, ptr %23330, align 16, !dbg !372
  %23335 = getelementptr inbounds { double, double }, ptr %23330, i32 0, i32 1, !dbg !372
  %23336 = load double, ptr %23335, align 8, !dbg !372
  %23337 = call { double, double } @make_vec(double %23331, double %23333, double %23334, double %23336), !dbg !372
  %23338 = extractvalue { double, double } %23337, 0, !dbg !372
  store double %23338, ptr %16, align 8, !dbg !372
  %23339 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23340 = extractvalue { double, double } %23337, 1, !dbg !372
  store double %23340, ptr %23339, align 8, !dbg !372
  %23341 = load i32, ptr %10, align 4, !dbg !373
  %23342 = add nsw i32 %23341, 1, !dbg !374
  %23343 = sext i32 %23342 to i64, !dbg !375
  %23344 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23343, !dbg !375
  %23345 = load double, ptr %6, align 8, !dbg !376
  %23346 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23347 = load double, ptr %23346, align 8, !dbg !376
  %23348 = load double, ptr %23344, align 16, !dbg !376
  %23349 = getelementptr inbounds { double, double }, ptr %23344, i32 0, i32 1, !dbg !376
  %23350 = load double, ptr %23349, align 8, !dbg !376
  %23351 = call { double, double } @make_vec(double %23345, double %23347, double %23348, double %23350), !dbg !376
  %23352 = extractvalue { double, double } %23351, 0, !dbg !376
  store double %23352, ptr %17, align 8, !dbg !376
  %23353 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23354 = extractvalue { double, double } %23351, 1, !dbg !376
  store double %23354, ptr %23353, align 8, !dbg !376
  %23355 = load double, ptr %16, align 8, !dbg !377
  %23356 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23357 = load double, ptr %23356, align 8, !dbg !377
  %23358 = load double, ptr %17, align 8, !dbg !377
  %23359 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23360 = load double, ptr %23359, align 8, !dbg !377
  %23361 = call double @cross(double %23355, double %23357, double %23358, double %23360), !dbg !377
  %23362 = load i32, ptr %10, align 4, !dbg !378
  %23363 = sext i32 %23362 to i64, !dbg !379
  %23364 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23363, !dbg !379
  %23365 = load double, ptr %6, align 8, !dbg !380
  %23366 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23367 = load double, ptr %23366, align 8, !dbg !380
  %23368 = load double, ptr %23364, align 16, !dbg !380
  %23369 = getelementptr inbounds { double, double }, ptr %23364, i32 0, i32 1, !dbg !380
  %23370 = load double, ptr %23369, align 8, !dbg !380
  %23371 = call { double, double } @make_vec(double %23365, double %23367, double %23368, double %23370), !dbg !380
  %23372 = extractvalue { double, double } %23371, 0, !dbg !380
  store double %23372, ptr %18, align 8, !dbg !380
  %23373 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23374 = extractvalue { double, double } %23371, 1, !dbg !380
  store double %23374, ptr %23373, align 8, !dbg !380
  %23375 = load i32, ptr %10, align 4, !dbg !381
  %23376 = add nsw i32 %23375, 1, !dbg !382
  %23377 = sext i32 %23376 to i64, !dbg !383
  %23378 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23377, !dbg !383
  %23379 = load double, ptr %6, align 8, !dbg !384
  %23380 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23381 = load double, ptr %23380, align 8, !dbg !384
  %23382 = load double, ptr %23378, align 16, !dbg !384
  %23383 = getelementptr inbounds { double, double }, ptr %23378, i32 0, i32 1, !dbg !384
  %23384 = load double, ptr %23383, align 8, !dbg !384
  %23385 = call { double, double } @make_vec(double %23379, double %23381, double %23382, double %23384), !dbg !384
  %23386 = extractvalue { double, double } %23385, 0, !dbg !384
  store double %23386, ptr %19, align 8, !dbg !384
  %23387 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23388 = extractvalue { double, double } %23385, 1, !dbg !384
  store double %23388, ptr %23387, align 8, !dbg !384
  %23389 = load double, ptr %18, align 8, !dbg !385
  %23390 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23391 = load double, ptr %23390, align 8, !dbg !385
  %23392 = load double, ptr %19, align 8, !dbg !385
  %23393 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23394 = load double, ptr %23393, align 8, !dbg !385
  %23395 = call double @dot(double %23389, double %23391, double %23392, double %23394), !dbg !385
  %23396 = call double @atan2(double noundef %23361, double noundef %23395) #6, !dbg !386
  store double %23396, ptr %13, align 8, !dbg !387
  %23397 = load double, ptr %13, align 8, !dbg !388
  %23398 = load double, ptr %14, align 8, !dbg !389
  %23399 = fadd double %23398, %23397, !dbg !389
  store double %23399, ptr %14, align 8, !dbg !389
  %23400 = load double, ptr %13, align 8, !dbg !390
  %23401 = fsub double %23400, 0x400921FB54442D18, !dbg !392
  %23402 = call double @llvm.fabs.f64(double %23401), !dbg !393
  %23403 = fcmp ole double %23402, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23403, label %14330, label %23404, !dbg !395

23404:                                            ; preds = %23327
  %23405 = load double, ptr %13, align 8, !dbg !396
  %23406 = fadd double %23405, 0x400921FB54442D18, !dbg !397
  %23407 = call double @llvm.fabs.f64(double %23406), !dbg !398
  %23408 = fcmp ole double %23407, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23408, label %14330, label %23409, !dbg !400

23409:                                            ; preds = %23404
  br label %23410, !dbg !403

23410:                                            ; preds = %23409
  %23411 = load i32, ptr %10, align 4, !dbg !404
  %23412 = add nsw i32 %23411, 1, !dbg !404
  store i32 %23412, ptr %10, align 4, !dbg !404
  %23413 = load i32, ptr %10, align 4, !dbg !364
  %23414 = load i32, ptr %8, align 4, !dbg !366
  %23415 = icmp slt i32 %23413, %23414, !dbg !367
  br i1 %23415, label %23416, label %48422, !dbg !368

23416:                                            ; preds = %23410
  %23417 = load i32, ptr %10, align 4, !dbg !369
  %23418 = sext i32 %23417 to i64, !dbg !371
  %23419 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23418, !dbg !371
  %23420 = load double, ptr %6, align 8, !dbg !372
  %23421 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23422 = load double, ptr %23421, align 8, !dbg !372
  %23423 = load double, ptr %23419, align 16, !dbg !372
  %23424 = getelementptr inbounds { double, double }, ptr %23419, i32 0, i32 1, !dbg !372
  %23425 = load double, ptr %23424, align 8, !dbg !372
  %23426 = call { double, double } @make_vec(double %23420, double %23422, double %23423, double %23425), !dbg !372
  %23427 = extractvalue { double, double } %23426, 0, !dbg !372
  store double %23427, ptr %16, align 8, !dbg !372
  %23428 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23429 = extractvalue { double, double } %23426, 1, !dbg !372
  store double %23429, ptr %23428, align 8, !dbg !372
  %23430 = load i32, ptr %10, align 4, !dbg !373
  %23431 = add nsw i32 %23430, 1, !dbg !374
  %23432 = sext i32 %23431 to i64, !dbg !375
  %23433 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23432, !dbg !375
  %23434 = load double, ptr %6, align 8, !dbg !376
  %23435 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23436 = load double, ptr %23435, align 8, !dbg !376
  %23437 = load double, ptr %23433, align 16, !dbg !376
  %23438 = getelementptr inbounds { double, double }, ptr %23433, i32 0, i32 1, !dbg !376
  %23439 = load double, ptr %23438, align 8, !dbg !376
  %23440 = call { double, double } @make_vec(double %23434, double %23436, double %23437, double %23439), !dbg !376
  %23441 = extractvalue { double, double } %23440, 0, !dbg !376
  store double %23441, ptr %17, align 8, !dbg !376
  %23442 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23443 = extractvalue { double, double } %23440, 1, !dbg !376
  store double %23443, ptr %23442, align 8, !dbg !376
  %23444 = load double, ptr %16, align 8, !dbg !377
  %23445 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23446 = load double, ptr %23445, align 8, !dbg !377
  %23447 = load double, ptr %17, align 8, !dbg !377
  %23448 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23449 = load double, ptr %23448, align 8, !dbg !377
  %23450 = call double @cross(double %23444, double %23446, double %23447, double %23449), !dbg !377
  %23451 = load i32, ptr %10, align 4, !dbg !378
  %23452 = sext i32 %23451 to i64, !dbg !379
  %23453 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23452, !dbg !379
  %23454 = load double, ptr %6, align 8, !dbg !380
  %23455 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23456 = load double, ptr %23455, align 8, !dbg !380
  %23457 = load double, ptr %23453, align 16, !dbg !380
  %23458 = getelementptr inbounds { double, double }, ptr %23453, i32 0, i32 1, !dbg !380
  %23459 = load double, ptr %23458, align 8, !dbg !380
  %23460 = call { double, double } @make_vec(double %23454, double %23456, double %23457, double %23459), !dbg !380
  %23461 = extractvalue { double, double } %23460, 0, !dbg !380
  store double %23461, ptr %18, align 8, !dbg !380
  %23462 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23463 = extractvalue { double, double } %23460, 1, !dbg !380
  store double %23463, ptr %23462, align 8, !dbg !380
  %23464 = load i32, ptr %10, align 4, !dbg !381
  %23465 = add nsw i32 %23464, 1, !dbg !382
  %23466 = sext i32 %23465 to i64, !dbg !383
  %23467 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23466, !dbg !383
  %23468 = load double, ptr %6, align 8, !dbg !384
  %23469 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23470 = load double, ptr %23469, align 8, !dbg !384
  %23471 = load double, ptr %23467, align 16, !dbg !384
  %23472 = getelementptr inbounds { double, double }, ptr %23467, i32 0, i32 1, !dbg !384
  %23473 = load double, ptr %23472, align 8, !dbg !384
  %23474 = call { double, double } @make_vec(double %23468, double %23470, double %23471, double %23473), !dbg !384
  %23475 = extractvalue { double, double } %23474, 0, !dbg !384
  store double %23475, ptr %19, align 8, !dbg !384
  %23476 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23477 = extractvalue { double, double } %23474, 1, !dbg !384
  store double %23477, ptr %23476, align 8, !dbg !384
  %23478 = load double, ptr %18, align 8, !dbg !385
  %23479 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23480 = load double, ptr %23479, align 8, !dbg !385
  %23481 = load double, ptr %19, align 8, !dbg !385
  %23482 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23483 = load double, ptr %23482, align 8, !dbg !385
  %23484 = call double @dot(double %23478, double %23480, double %23481, double %23483), !dbg !385
  %23485 = call double @atan2(double noundef %23450, double noundef %23484) #6, !dbg !386
  store double %23485, ptr %13, align 8, !dbg !387
  %23486 = load double, ptr %13, align 8, !dbg !388
  %23487 = load double, ptr %14, align 8, !dbg !389
  %23488 = fadd double %23487, %23486, !dbg !389
  store double %23488, ptr %14, align 8, !dbg !389
  %23489 = load double, ptr %13, align 8, !dbg !390
  %23490 = fsub double %23489, 0x400921FB54442D18, !dbg !392
  %23491 = call double @llvm.fabs.f64(double %23490), !dbg !393
  %23492 = fcmp ole double %23491, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23492, label %14330, label %23493, !dbg !395

23493:                                            ; preds = %23416
  %23494 = load double, ptr %13, align 8, !dbg !396
  %23495 = fadd double %23494, 0x400921FB54442D18, !dbg !397
  %23496 = call double @llvm.fabs.f64(double %23495), !dbg !398
  %23497 = fcmp ole double %23496, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23497, label %14330, label %23498, !dbg !400

23498:                                            ; preds = %23493
  br label %23499, !dbg !403

23499:                                            ; preds = %23498
  %23500 = load i32, ptr %10, align 4, !dbg !404
  %23501 = add nsw i32 %23500, 1, !dbg !404
  store i32 %23501, ptr %10, align 4, !dbg !404
  %23502 = load i32, ptr %10, align 4, !dbg !364
  %23503 = load i32, ptr %8, align 4, !dbg !366
  %23504 = icmp slt i32 %23502, %23503, !dbg !367
  br i1 %23504, label %23505, label %48422, !dbg !368

23505:                                            ; preds = %23499
  %23506 = load i32, ptr %10, align 4, !dbg !369
  %23507 = sext i32 %23506 to i64, !dbg !371
  %23508 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23507, !dbg !371
  %23509 = load double, ptr %6, align 8, !dbg !372
  %23510 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23511 = load double, ptr %23510, align 8, !dbg !372
  %23512 = load double, ptr %23508, align 16, !dbg !372
  %23513 = getelementptr inbounds { double, double }, ptr %23508, i32 0, i32 1, !dbg !372
  %23514 = load double, ptr %23513, align 8, !dbg !372
  %23515 = call { double, double } @make_vec(double %23509, double %23511, double %23512, double %23514), !dbg !372
  %23516 = extractvalue { double, double } %23515, 0, !dbg !372
  store double %23516, ptr %16, align 8, !dbg !372
  %23517 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23518 = extractvalue { double, double } %23515, 1, !dbg !372
  store double %23518, ptr %23517, align 8, !dbg !372
  %23519 = load i32, ptr %10, align 4, !dbg !373
  %23520 = add nsw i32 %23519, 1, !dbg !374
  %23521 = sext i32 %23520 to i64, !dbg !375
  %23522 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23521, !dbg !375
  %23523 = load double, ptr %6, align 8, !dbg !376
  %23524 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23525 = load double, ptr %23524, align 8, !dbg !376
  %23526 = load double, ptr %23522, align 16, !dbg !376
  %23527 = getelementptr inbounds { double, double }, ptr %23522, i32 0, i32 1, !dbg !376
  %23528 = load double, ptr %23527, align 8, !dbg !376
  %23529 = call { double, double } @make_vec(double %23523, double %23525, double %23526, double %23528), !dbg !376
  %23530 = extractvalue { double, double } %23529, 0, !dbg !376
  store double %23530, ptr %17, align 8, !dbg !376
  %23531 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23532 = extractvalue { double, double } %23529, 1, !dbg !376
  store double %23532, ptr %23531, align 8, !dbg !376
  %23533 = load double, ptr %16, align 8, !dbg !377
  %23534 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23535 = load double, ptr %23534, align 8, !dbg !377
  %23536 = load double, ptr %17, align 8, !dbg !377
  %23537 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23538 = load double, ptr %23537, align 8, !dbg !377
  %23539 = call double @cross(double %23533, double %23535, double %23536, double %23538), !dbg !377
  %23540 = load i32, ptr %10, align 4, !dbg !378
  %23541 = sext i32 %23540 to i64, !dbg !379
  %23542 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23541, !dbg !379
  %23543 = load double, ptr %6, align 8, !dbg !380
  %23544 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23545 = load double, ptr %23544, align 8, !dbg !380
  %23546 = load double, ptr %23542, align 16, !dbg !380
  %23547 = getelementptr inbounds { double, double }, ptr %23542, i32 0, i32 1, !dbg !380
  %23548 = load double, ptr %23547, align 8, !dbg !380
  %23549 = call { double, double } @make_vec(double %23543, double %23545, double %23546, double %23548), !dbg !380
  %23550 = extractvalue { double, double } %23549, 0, !dbg !380
  store double %23550, ptr %18, align 8, !dbg !380
  %23551 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23552 = extractvalue { double, double } %23549, 1, !dbg !380
  store double %23552, ptr %23551, align 8, !dbg !380
  %23553 = load i32, ptr %10, align 4, !dbg !381
  %23554 = add nsw i32 %23553, 1, !dbg !382
  %23555 = sext i32 %23554 to i64, !dbg !383
  %23556 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23555, !dbg !383
  %23557 = load double, ptr %6, align 8, !dbg !384
  %23558 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23559 = load double, ptr %23558, align 8, !dbg !384
  %23560 = load double, ptr %23556, align 16, !dbg !384
  %23561 = getelementptr inbounds { double, double }, ptr %23556, i32 0, i32 1, !dbg !384
  %23562 = load double, ptr %23561, align 8, !dbg !384
  %23563 = call { double, double } @make_vec(double %23557, double %23559, double %23560, double %23562), !dbg !384
  %23564 = extractvalue { double, double } %23563, 0, !dbg !384
  store double %23564, ptr %19, align 8, !dbg !384
  %23565 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23566 = extractvalue { double, double } %23563, 1, !dbg !384
  store double %23566, ptr %23565, align 8, !dbg !384
  %23567 = load double, ptr %18, align 8, !dbg !385
  %23568 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23569 = load double, ptr %23568, align 8, !dbg !385
  %23570 = load double, ptr %19, align 8, !dbg !385
  %23571 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23572 = load double, ptr %23571, align 8, !dbg !385
  %23573 = call double @dot(double %23567, double %23569, double %23570, double %23572), !dbg !385
  %23574 = call double @atan2(double noundef %23539, double noundef %23573) #6, !dbg !386
  store double %23574, ptr %13, align 8, !dbg !387
  %23575 = load double, ptr %13, align 8, !dbg !388
  %23576 = load double, ptr %14, align 8, !dbg !389
  %23577 = fadd double %23576, %23575, !dbg !389
  store double %23577, ptr %14, align 8, !dbg !389
  %23578 = load double, ptr %13, align 8, !dbg !390
  %23579 = fsub double %23578, 0x400921FB54442D18, !dbg !392
  %23580 = call double @llvm.fabs.f64(double %23579), !dbg !393
  %23581 = fcmp ole double %23580, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23581, label %14330, label %23582, !dbg !395

23582:                                            ; preds = %23505
  %23583 = load double, ptr %13, align 8, !dbg !396
  %23584 = fadd double %23583, 0x400921FB54442D18, !dbg !397
  %23585 = call double @llvm.fabs.f64(double %23584), !dbg !398
  %23586 = fcmp ole double %23585, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23586, label %14330, label %23587, !dbg !400

23587:                                            ; preds = %23582
  br label %23588, !dbg !403

23588:                                            ; preds = %23587
  %23589 = load i32, ptr %10, align 4, !dbg !404
  %23590 = add nsw i32 %23589, 1, !dbg !404
  store i32 %23590, ptr %10, align 4, !dbg !404
  %23591 = load i32, ptr %10, align 4, !dbg !364
  %23592 = load i32, ptr %8, align 4, !dbg !366
  %23593 = icmp slt i32 %23591, %23592, !dbg !367
  br i1 %23593, label %23594, label %48422, !dbg !368

23594:                                            ; preds = %23588
  %23595 = load i32, ptr %10, align 4, !dbg !369
  %23596 = sext i32 %23595 to i64, !dbg !371
  %23597 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23596, !dbg !371
  %23598 = load double, ptr %6, align 8, !dbg !372
  %23599 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23600 = load double, ptr %23599, align 8, !dbg !372
  %23601 = load double, ptr %23597, align 16, !dbg !372
  %23602 = getelementptr inbounds { double, double }, ptr %23597, i32 0, i32 1, !dbg !372
  %23603 = load double, ptr %23602, align 8, !dbg !372
  %23604 = call { double, double } @make_vec(double %23598, double %23600, double %23601, double %23603), !dbg !372
  %23605 = extractvalue { double, double } %23604, 0, !dbg !372
  store double %23605, ptr %16, align 8, !dbg !372
  %23606 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23607 = extractvalue { double, double } %23604, 1, !dbg !372
  store double %23607, ptr %23606, align 8, !dbg !372
  %23608 = load i32, ptr %10, align 4, !dbg !373
  %23609 = add nsw i32 %23608, 1, !dbg !374
  %23610 = sext i32 %23609 to i64, !dbg !375
  %23611 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23610, !dbg !375
  %23612 = load double, ptr %6, align 8, !dbg !376
  %23613 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23614 = load double, ptr %23613, align 8, !dbg !376
  %23615 = load double, ptr %23611, align 16, !dbg !376
  %23616 = getelementptr inbounds { double, double }, ptr %23611, i32 0, i32 1, !dbg !376
  %23617 = load double, ptr %23616, align 8, !dbg !376
  %23618 = call { double, double } @make_vec(double %23612, double %23614, double %23615, double %23617), !dbg !376
  %23619 = extractvalue { double, double } %23618, 0, !dbg !376
  store double %23619, ptr %17, align 8, !dbg !376
  %23620 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23621 = extractvalue { double, double } %23618, 1, !dbg !376
  store double %23621, ptr %23620, align 8, !dbg !376
  %23622 = load double, ptr %16, align 8, !dbg !377
  %23623 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23624 = load double, ptr %23623, align 8, !dbg !377
  %23625 = load double, ptr %17, align 8, !dbg !377
  %23626 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23627 = load double, ptr %23626, align 8, !dbg !377
  %23628 = call double @cross(double %23622, double %23624, double %23625, double %23627), !dbg !377
  %23629 = load i32, ptr %10, align 4, !dbg !378
  %23630 = sext i32 %23629 to i64, !dbg !379
  %23631 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23630, !dbg !379
  %23632 = load double, ptr %6, align 8, !dbg !380
  %23633 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23634 = load double, ptr %23633, align 8, !dbg !380
  %23635 = load double, ptr %23631, align 16, !dbg !380
  %23636 = getelementptr inbounds { double, double }, ptr %23631, i32 0, i32 1, !dbg !380
  %23637 = load double, ptr %23636, align 8, !dbg !380
  %23638 = call { double, double } @make_vec(double %23632, double %23634, double %23635, double %23637), !dbg !380
  %23639 = extractvalue { double, double } %23638, 0, !dbg !380
  store double %23639, ptr %18, align 8, !dbg !380
  %23640 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23641 = extractvalue { double, double } %23638, 1, !dbg !380
  store double %23641, ptr %23640, align 8, !dbg !380
  %23642 = load i32, ptr %10, align 4, !dbg !381
  %23643 = add nsw i32 %23642, 1, !dbg !382
  %23644 = sext i32 %23643 to i64, !dbg !383
  %23645 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23644, !dbg !383
  %23646 = load double, ptr %6, align 8, !dbg !384
  %23647 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23648 = load double, ptr %23647, align 8, !dbg !384
  %23649 = load double, ptr %23645, align 16, !dbg !384
  %23650 = getelementptr inbounds { double, double }, ptr %23645, i32 0, i32 1, !dbg !384
  %23651 = load double, ptr %23650, align 8, !dbg !384
  %23652 = call { double, double } @make_vec(double %23646, double %23648, double %23649, double %23651), !dbg !384
  %23653 = extractvalue { double, double } %23652, 0, !dbg !384
  store double %23653, ptr %19, align 8, !dbg !384
  %23654 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23655 = extractvalue { double, double } %23652, 1, !dbg !384
  store double %23655, ptr %23654, align 8, !dbg !384
  %23656 = load double, ptr %18, align 8, !dbg !385
  %23657 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23658 = load double, ptr %23657, align 8, !dbg !385
  %23659 = load double, ptr %19, align 8, !dbg !385
  %23660 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23661 = load double, ptr %23660, align 8, !dbg !385
  %23662 = call double @dot(double %23656, double %23658, double %23659, double %23661), !dbg !385
  %23663 = call double @atan2(double noundef %23628, double noundef %23662) #6, !dbg !386
  store double %23663, ptr %13, align 8, !dbg !387
  %23664 = load double, ptr %13, align 8, !dbg !388
  %23665 = load double, ptr %14, align 8, !dbg !389
  %23666 = fadd double %23665, %23664, !dbg !389
  store double %23666, ptr %14, align 8, !dbg !389
  %23667 = load double, ptr %13, align 8, !dbg !390
  %23668 = fsub double %23667, 0x400921FB54442D18, !dbg !392
  %23669 = call double @llvm.fabs.f64(double %23668), !dbg !393
  %23670 = fcmp ole double %23669, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23670, label %14330, label %23671, !dbg !395

23671:                                            ; preds = %23594
  %23672 = load double, ptr %13, align 8, !dbg !396
  %23673 = fadd double %23672, 0x400921FB54442D18, !dbg !397
  %23674 = call double @llvm.fabs.f64(double %23673), !dbg !398
  %23675 = fcmp ole double %23674, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23675, label %14330, label %23676, !dbg !400

23676:                                            ; preds = %23671
  br label %23677, !dbg !403

23677:                                            ; preds = %23676
  %23678 = load i32, ptr %10, align 4, !dbg !404
  %23679 = add nsw i32 %23678, 1, !dbg !404
  store i32 %23679, ptr %10, align 4, !dbg !404
  %23680 = load i32, ptr %10, align 4, !dbg !364
  %23681 = load i32, ptr %8, align 4, !dbg !366
  %23682 = icmp slt i32 %23680, %23681, !dbg !367
  br i1 %23682, label %23683, label %48422, !dbg !368

23683:                                            ; preds = %23677
  %23684 = load i32, ptr %10, align 4, !dbg !369
  %23685 = sext i32 %23684 to i64, !dbg !371
  %23686 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23685, !dbg !371
  %23687 = load double, ptr %6, align 8, !dbg !372
  %23688 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23689 = load double, ptr %23688, align 8, !dbg !372
  %23690 = load double, ptr %23686, align 16, !dbg !372
  %23691 = getelementptr inbounds { double, double }, ptr %23686, i32 0, i32 1, !dbg !372
  %23692 = load double, ptr %23691, align 8, !dbg !372
  %23693 = call { double, double } @make_vec(double %23687, double %23689, double %23690, double %23692), !dbg !372
  %23694 = extractvalue { double, double } %23693, 0, !dbg !372
  store double %23694, ptr %16, align 8, !dbg !372
  %23695 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23696 = extractvalue { double, double } %23693, 1, !dbg !372
  store double %23696, ptr %23695, align 8, !dbg !372
  %23697 = load i32, ptr %10, align 4, !dbg !373
  %23698 = add nsw i32 %23697, 1, !dbg !374
  %23699 = sext i32 %23698 to i64, !dbg !375
  %23700 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23699, !dbg !375
  %23701 = load double, ptr %6, align 8, !dbg !376
  %23702 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23703 = load double, ptr %23702, align 8, !dbg !376
  %23704 = load double, ptr %23700, align 16, !dbg !376
  %23705 = getelementptr inbounds { double, double }, ptr %23700, i32 0, i32 1, !dbg !376
  %23706 = load double, ptr %23705, align 8, !dbg !376
  %23707 = call { double, double } @make_vec(double %23701, double %23703, double %23704, double %23706), !dbg !376
  %23708 = extractvalue { double, double } %23707, 0, !dbg !376
  store double %23708, ptr %17, align 8, !dbg !376
  %23709 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23710 = extractvalue { double, double } %23707, 1, !dbg !376
  store double %23710, ptr %23709, align 8, !dbg !376
  %23711 = load double, ptr %16, align 8, !dbg !377
  %23712 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23713 = load double, ptr %23712, align 8, !dbg !377
  %23714 = load double, ptr %17, align 8, !dbg !377
  %23715 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23716 = load double, ptr %23715, align 8, !dbg !377
  %23717 = call double @cross(double %23711, double %23713, double %23714, double %23716), !dbg !377
  %23718 = load i32, ptr %10, align 4, !dbg !378
  %23719 = sext i32 %23718 to i64, !dbg !379
  %23720 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23719, !dbg !379
  %23721 = load double, ptr %6, align 8, !dbg !380
  %23722 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23723 = load double, ptr %23722, align 8, !dbg !380
  %23724 = load double, ptr %23720, align 16, !dbg !380
  %23725 = getelementptr inbounds { double, double }, ptr %23720, i32 0, i32 1, !dbg !380
  %23726 = load double, ptr %23725, align 8, !dbg !380
  %23727 = call { double, double } @make_vec(double %23721, double %23723, double %23724, double %23726), !dbg !380
  %23728 = extractvalue { double, double } %23727, 0, !dbg !380
  store double %23728, ptr %18, align 8, !dbg !380
  %23729 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23730 = extractvalue { double, double } %23727, 1, !dbg !380
  store double %23730, ptr %23729, align 8, !dbg !380
  %23731 = load i32, ptr %10, align 4, !dbg !381
  %23732 = add nsw i32 %23731, 1, !dbg !382
  %23733 = sext i32 %23732 to i64, !dbg !383
  %23734 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23733, !dbg !383
  %23735 = load double, ptr %6, align 8, !dbg !384
  %23736 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23737 = load double, ptr %23736, align 8, !dbg !384
  %23738 = load double, ptr %23734, align 16, !dbg !384
  %23739 = getelementptr inbounds { double, double }, ptr %23734, i32 0, i32 1, !dbg !384
  %23740 = load double, ptr %23739, align 8, !dbg !384
  %23741 = call { double, double } @make_vec(double %23735, double %23737, double %23738, double %23740), !dbg !384
  %23742 = extractvalue { double, double } %23741, 0, !dbg !384
  store double %23742, ptr %19, align 8, !dbg !384
  %23743 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23744 = extractvalue { double, double } %23741, 1, !dbg !384
  store double %23744, ptr %23743, align 8, !dbg !384
  %23745 = load double, ptr %18, align 8, !dbg !385
  %23746 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23747 = load double, ptr %23746, align 8, !dbg !385
  %23748 = load double, ptr %19, align 8, !dbg !385
  %23749 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23750 = load double, ptr %23749, align 8, !dbg !385
  %23751 = call double @dot(double %23745, double %23747, double %23748, double %23750), !dbg !385
  %23752 = call double @atan2(double noundef %23717, double noundef %23751) #6, !dbg !386
  store double %23752, ptr %13, align 8, !dbg !387
  %23753 = load double, ptr %13, align 8, !dbg !388
  %23754 = load double, ptr %14, align 8, !dbg !389
  %23755 = fadd double %23754, %23753, !dbg !389
  store double %23755, ptr %14, align 8, !dbg !389
  %23756 = load double, ptr %13, align 8, !dbg !390
  %23757 = fsub double %23756, 0x400921FB54442D18, !dbg !392
  %23758 = call double @llvm.fabs.f64(double %23757), !dbg !393
  %23759 = fcmp ole double %23758, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23759, label %14330, label %23760, !dbg !395

23760:                                            ; preds = %23683
  %23761 = load double, ptr %13, align 8, !dbg !396
  %23762 = fadd double %23761, 0x400921FB54442D18, !dbg !397
  %23763 = call double @llvm.fabs.f64(double %23762), !dbg !398
  %23764 = fcmp ole double %23763, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23764, label %14330, label %23765, !dbg !400

23765:                                            ; preds = %23760
  br label %23766, !dbg !403

23766:                                            ; preds = %23765
  %23767 = load i32, ptr %10, align 4, !dbg !404
  %23768 = add nsw i32 %23767, 1, !dbg !404
  store i32 %23768, ptr %10, align 4, !dbg !404
  %23769 = load i32, ptr %10, align 4, !dbg !364
  %23770 = load i32, ptr %8, align 4, !dbg !366
  %23771 = icmp slt i32 %23769, %23770, !dbg !367
  br i1 %23771, label %23772, label %48422, !dbg !368

23772:                                            ; preds = %23766
  %23773 = load i32, ptr %10, align 4, !dbg !369
  %23774 = sext i32 %23773 to i64, !dbg !371
  %23775 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23774, !dbg !371
  %23776 = load double, ptr %6, align 8, !dbg !372
  %23777 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23778 = load double, ptr %23777, align 8, !dbg !372
  %23779 = load double, ptr %23775, align 16, !dbg !372
  %23780 = getelementptr inbounds { double, double }, ptr %23775, i32 0, i32 1, !dbg !372
  %23781 = load double, ptr %23780, align 8, !dbg !372
  %23782 = call { double, double } @make_vec(double %23776, double %23778, double %23779, double %23781), !dbg !372
  %23783 = extractvalue { double, double } %23782, 0, !dbg !372
  store double %23783, ptr %16, align 8, !dbg !372
  %23784 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23785 = extractvalue { double, double } %23782, 1, !dbg !372
  store double %23785, ptr %23784, align 8, !dbg !372
  %23786 = load i32, ptr %10, align 4, !dbg !373
  %23787 = add nsw i32 %23786, 1, !dbg !374
  %23788 = sext i32 %23787 to i64, !dbg !375
  %23789 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23788, !dbg !375
  %23790 = load double, ptr %6, align 8, !dbg !376
  %23791 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23792 = load double, ptr %23791, align 8, !dbg !376
  %23793 = load double, ptr %23789, align 16, !dbg !376
  %23794 = getelementptr inbounds { double, double }, ptr %23789, i32 0, i32 1, !dbg !376
  %23795 = load double, ptr %23794, align 8, !dbg !376
  %23796 = call { double, double } @make_vec(double %23790, double %23792, double %23793, double %23795), !dbg !376
  %23797 = extractvalue { double, double } %23796, 0, !dbg !376
  store double %23797, ptr %17, align 8, !dbg !376
  %23798 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23799 = extractvalue { double, double } %23796, 1, !dbg !376
  store double %23799, ptr %23798, align 8, !dbg !376
  %23800 = load double, ptr %16, align 8, !dbg !377
  %23801 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23802 = load double, ptr %23801, align 8, !dbg !377
  %23803 = load double, ptr %17, align 8, !dbg !377
  %23804 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23805 = load double, ptr %23804, align 8, !dbg !377
  %23806 = call double @cross(double %23800, double %23802, double %23803, double %23805), !dbg !377
  %23807 = load i32, ptr %10, align 4, !dbg !378
  %23808 = sext i32 %23807 to i64, !dbg !379
  %23809 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23808, !dbg !379
  %23810 = load double, ptr %6, align 8, !dbg !380
  %23811 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23812 = load double, ptr %23811, align 8, !dbg !380
  %23813 = load double, ptr %23809, align 16, !dbg !380
  %23814 = getelementptr inbounds { double, double }, ptr %23809, i32 0, i32 1, !dbg !380
  %23815 = load double, ptr %23814, align 8, !dbg !380
  %23816 = call { double, double } @make_vec(double %23810, double %23812, double %23813, double %23815), !dbg !380
  %23817 = extractvalue { double, double } %23816, 0, !dbg !380
  store double %23817, ptr %18, align 8, !dbg !380
  %23818 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23819 = extractvalue { double, double } %23816, 1, !dbg !380
  store double %23819, ptr %23818, align 8, !dbg !380
  %23820 = load i32, ptr %10, align 4, !dbg !381
  %23821 = add nsw i32 %23820, 1, !dbg !382
  %23822 = sext i32 %23821 to i64, !dbg !383
  %23823 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23822, !dbg !383
  %23824 = load double, ptr %6, align 8, !dbg !384
  %23825 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23826 = load double, ptr %23825, align 8, !dbg !384
  %23827 = load double, ptr %23823, align 16, !dbg !384
  %23828 = getelementptr inbounds { double, double }, ptr %23823, i32 0, i32 1, !dbg !384
  %23829 = load double, ptr %23828, align 8, !dbg !384
  %23830 = call { double, double } @make_vec(double %23824, double %23826, double %23827, double %23829), !dbg !384
  %23831 = extractvalue { double, double } %23830, 0, !dbg !384
  store double %23831, ptr %19, align 8, !dbg !384
  %23832 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23833 = extractvalue { double, double } %23830, 1, !dbg !384
  store double %23833, ptr %23832, align 8, !dbg !384
  %23834 = load double, ptr %18, align 8, !dbg !385
  %23835 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23836 = load double, ptr %23835, align 8, !dbg !385
  %23837 = load double, ptr %19, align 8, !dbg !385
  %23838 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23839 = load double, ptr %23838, align 8, !dbg !385
  %23840 = call double @dot(double %23834, double %23836, double %23837, double %23839), !dbg !385
  %23841 = call double @atan2(double noundef %23806, double noundef %23840) #6, !dbg !386
  store double %23841, ptr %13, align 8, !dbg !387
  %23842 = load double, ptr %13, align 8, !dbg !388
  %23843 = load double, ptr %14, align 8, !dbg !389
  %23844 = fadd double %23843, %23842, !dbg !389
  store double %23844, ptr %14, align 8, !dbg !389
  %23845 = load double, ptr %13, align 8, !dbg !390
  %23846 = fsub double %23845, 0x400921FB54442D18, !dbg !392
  %23847 = call double @llvm.fabs.f64(double %23846), !dbg !393
  %23848 = fcmp ole double %23847, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23848, label %14330, label %23849, !dbg !395

23849:                                            ; preds = %23772
  %23850 = load double, ptr %13, align 8, !dbg !396
  %23851 = fadd double %23850, 0x400921FB54442D18, !dbg !397
  %23852 = call double @llvm.fabs.f64(double %23851), !dbg !398
  %23853 = fcmp ole double %23852, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23853, label %14330, label %23854, !dbg !400

23854:                                            ; preds = %23849
  br label %23855, !dbg !403

23855:                                            ; preds = %23854
  %23856 = load i32, ptr %10, align 4, !dbg !404
  %23857 = add nsw i32 %23856, 1, !dbg !404
  store i32 %23857, ptr %10, align 4, !dbg !404
  %23858 = load i32, ptr %10, align 4, !dbg !364
  %23859 = load i32, ptr %8, align 4, !dbg !366
  %23860 = icmp slt i32 %23858, %23859, !dbg !367
  br i1 %23860, label %23861, label %48422, !dbg !368

23861:                                            ; preds = %23855
  %23862 = load i32, ptr %10, align 4, !dbg !369
  %23863 = sext i32 %23862 to i64, !dbg !371
  %23864 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23863, !dbg !371
  %23865 = load double, ptr %6, align 8, !dbg !372
  %23866 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23867 = load double, ptr %23866, align 8, !dbg !372
  %23868 = load double, ptr %23864, align 16, !dbg !372
  %23869 = getelementptr inbounds { double, double }, ptr %23864, i32 0, i32 1, !dbg !372
  %23870 = load double, ptr %23869, align 8, !dbg !372
  %23871 = call { double, double } @make_vec(double %23865, double %23867, double %23868, double %23870), !dbg !372
  %23872 = extractvalue { double, double } %23871, 0, !dbg !372
  store double %23872, ptr %16, align 8, !dbg !372
  %23873 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23874 = extractvalue { double, double } %23871, 1, !dbg !372
  store double %23874, ptr %23873, align 8, !dbg !372
  %23875 = load i32, ptr %10, align 4, !dbg !373
  %23876 = add nsw i32 %23875, 1, !dbg !374
  %23877 = sext i32 %23876 to i64, !dbg !375
  %23878 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23877, !dbg !375
  %23879 = load double, ptr %6, align 8, !dbg !376
  %23880 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23881 = load double, ptr %23880, align 8, !dbg !376
  %23882 = load double, ptr %23878, align 16, !dbg !376
  %23883 = getelementptr inbounds { double, double }, ptr %23878, i32 0, i32 1, !dbg !376
  %23884 = load double, ptr %23883, align 8, !dbg !376
  %23885 = call { double, double } @make_vec(double %23879, double %23881, double %23882, double %23884), !dbg !376
  %23886 = extractvalue { double, double } %23885, 0, !dbg !376
  store double %23886, ptr %17, align 8, !dbg !376
  %23887 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23888 = extractvalue { double, double } %23885, 1, !dbg !376
  store double %23888, ptr %23887, align 8, !dbg !376
  %23889 = load double, ptr %16, align 8, !dbg !377
  %23890 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23891 = load double, ptr %23890, align 8, !dbg !377
  %23892 = load double, ptr %17, align 8, !dbg !377
  %23893 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23894 = load double, ptr %23893, align 8, !dbg !377
  %23895 = call double @cross(double %23889, double %23891, double %23892, double %23894), !dbg !377
  %23896 = load i32, ptr %10, align 4, !dbg !378
  %23897 = sext i32 %23896 to i64, !dbg !379
  %23898 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23897, !dbg !379
  %23899 = load double, ptr %6, align 8, !dbg !380
  %23900 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23901 = load double, ptr %23900, align 8, !dbg !380
  %23902 = load double, ptr %23898, align 16, !dbg !380
  %23903 = getelementptr inbounds { double, double }, ptr %23898, i32 0, i32 1, !dbg !380
  %23904 = load double, ptr %23903, align 8, !dbg !380
  %23905 = call { double, double } @make_vec(double %23899, double %23901, double %23902, double %23904), !dbg !380
  %23906 = extractvalue { double, double } %23905, 0, !dbg !380
  store double %23906, ptr %18, align 8, !dbg !380
  %23907 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23908 = extractvalue { double, double } %23905, 1, !dbg !380
  store double %23908, ptr %23907, align 8, !dbg !380
  %23909 = load i32, ptr %10, align 4, !dbg !381
  %23910 = add nsw i32 %23909, 1, !dbg !382
  %23911 = sext i32 %23910 to i64, !dbg !383
  %23912 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23911, !dbg !383
  %23913 = load double, ptr %6, align 8, !dbg !384
  %23914 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %23915 = load double, ptr %23914, align 8, !dbg !384
  %23916 = load double, ptr %23912, align 16, !dbg !384
  %23917 = getelementptr inbounds { double, double }, ptr %23912, i32 0, i32 1, !dbg !384
  %23918 = load double, ptr %23917, align 8, !dbg !384
  %23919 = call { double, double } @make_vec(double %23913, double %23915, double %23916, double %23918), !dbg !384
  %23920 = extractvalue { double, double } %23919, 0, !dbg !384
  store double %23920, ptr %19, align 8, !dbg !384
  %23921 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %23922 = extractvalue { double, double } %23919, 1, !dbg !384
  store double %23922, ptr %23921, align 8, !dbg !384
  %23923 = load double, ptr %18, align 8, !dbg !385
  %23924 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %23925 = load double, ptr %23924, align 8, !dbg !385
  %23926 = load double, ptr %19, align 8, !dbg !385
  %23927 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %23928 = load double, ptr %23927, align 8, !dbg !385
  %23929 = call double @dot(double %23923, double %23925, double %23926, double %23928), !dbg !385
  %23930 = call double @atan2(double noundef %23895, double noundef %23929) #6, !dbg !386
  store double %23930, ptr %13, align 8, !dbg !387
  %23931 = load double, ptr %13, align 8, !dbg !388
  %23932 = load double, ptr %14, align 8, !dbg !389
  %23933 = fadd double %23932, %23931, !dbg !389
  store double %23933, ptr %14, align 8, !dbg !389
  %23934 = load double, ptr %13, align 8, !dbg !390
  %23935 = fsub double %23934, 0x400921FB54442D18, !dbg !392
  %23936 = call double @llvm.fabs.f64(double %23935), !dbg !393
  %23937 = fcmp ole double %23936, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %23937, label %14330, label %23938, !dbg !395

23938:                                            ; preds = %23861
  %23939 = load double, ptr %13, align 8, !dbg !396
  %23940 = fadd double %23939, 0x400921FB54442D18, !dbg !397
  %23941 = call double @llvm.fabs.f64(double %23940), !dbg !398
  %23942 = fcmp ole double %23941, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %23942, label %14330, label %23943, !dbg !400

23943:                                            ; preds = %23938
  br label %23944, !dbg !403

23944:                                            ; preds = %23943
  %23945 = load i32, ptr %10, align 4, !dbg !404
  %23946 = add nsw i32 %23945, 1, !dbg !404
  store i32 %23946, ptr %10, align 4, !dbg !404
  %23947 = load i32, ptr %10, align 4, !dbg !364
  %23948 = load i32, ptr %8, align 4, !dbg !366
  %23949 = icmp slt i32 %23947, %23948, !dbg !367
  br i1 %23949, label %23950, label %48422, !dbg !368

23950:                                            ; preds = %23944
  %23951 = load i32, ptr %10, align 4, !dbg !369
  %23952 = sext i32 %23951 to i64, !dbg !371
  %23953 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23952, !dbg !371
  %23954 = load double, ptr %6, align 8, !dbg !372
  %23955 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %23956 = load double, ptr %23955, align 8, !dbg !372
  %23957 = load double, ptr %23953, align 16, !dbg !372
  %23958 = getelementptr inbounds { double, double }, ptr %23953, i32 0, i32 1, !dbg !372
  %23959 = load double, ptr %23958, align 8, !dbg !372
  %23960 = call { double, double } @make_vec(double %23954, double %23956, double %23957, double %23959), !dbg !372
  %23961 = extractvalue { double, double } %23960, 0, !dbg !372
  store double %23961, ptr %16, align 8, !dbg !372
  %23962 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %23963 = extractvalue { double, double } %23960, 1, !dbg !372
  store double %23963, ptr %23962, align 8, !dbg !372
  %23964 = load i32, ptr %10, align 4, !dbg !373
  %23965 = add nsw i32 %23964, 1, !dbg !374
  %23966 = sext i32 %23965 to i64, !dbg !375
  %23967 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23966, !dbg !375
  %23968 = load double, ptr %6, align 8, !dbg !376
  %23969 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %23970 = load double, ptr %23969, align 8, !dbg !376
  %23971 = load double, ptr %23967, align 16, !dbg !376
  %23972 = getelementptr inbounds { double, double }, ptr %23967, i32 0, i32 1, !dbg !376
  %23973 = load double, ptr %23972, align 8, !dbg !376
  %23974 = call { double, double } @make_vec(double %23968, double %23970, double %23971, double %23973), !dbg !376
  %23975 = extractvalue { double, double } %23974, 0, !dbg !376
  store double %23975, ptr %17, align 8, !dbg !376
  %23976 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %23977 = extractvalue { double, double } %23974, 1, !dbg !376
  store double %23977, ptr %23976, align 8, !dbg !376
  %23978 = load double, ptr %16, align 8, !dbg !377
  %23979 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %23980 = load double, ptr %23979, align 8, !dbg !377
  %23981 = load double, ptr %17, align 8, !dbg !377
  %23982 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %23983 = load double, ptr %23982, align 8, !dbg !377
  %23984 = call double @cross(double %23978, double %23980, double %23981, double %23983), !dbg !377
  %23985 = load i32, ptr %10, align 4, !dbg !378
  %23986 = sext i32 %23985 to i64, !dbg !379
  %23987 = getelementptr inbounds %struct.POINT, ptr %26, i64 %23986, !dbg !379
  %23988 = load double, ptr %6, align 8, !dbg !380
  %23989 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %23990 = load double, ptr %23989, align 8, !dbg !380
  %23991 = load double, ptr %23987, align 16, !dbg !380
  %23992 = getelementptr inbounds { double, double }, ptr %23987, i32 0, i32 1, !dbg !380
  %23993 = load double, ptr %23992, align 8, !dbg !380
  %23994 = call { double, double } @make_vec(double %23988, double %23990, double %23991, double %23993), !dbg !380
  %23995 = extractvalue { double, double } %23994, 0, !dbg !380
  store double %23995, ptr %18, align 8, !dbg !380
  %23996 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %23997 = extractvalue { double, double } %23994, 1, !dbg !380
  store double %23997, ptr %23996, align 8, !dbg !380
  %23998 = load i32, ptr %10, align 4, !dbg !381
  %23999 = add nsw i32 %23998, 1, !dbg !382
  %24000 = sext i32 %23999 to i64, !dbg !383
  %24001 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24000, !dbg !383
  %24002 = load double, ptr %6, align 8, !dbg !384
  %24003 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24004 = load double, ptr %24003, align 8, !dbg !384
  %24005 = load double, ptr %24001, align 16, !dbg !384
  %24006 = getelementptr inbounds { double, double }, ptr %24001, i32 0, i32 1, !dbg !384
  %24007 = load double, ptr %24006, align 8, !dbg !384
  %24008 = call { double, double } @make_vec(double %24002, double %24004, double %24005, double %24007), !dbg !384
  %24009 = extractvalue { double, double } %24008, 0, !dbg !384
  store double %24009, ptr %19, align 8, !dbg !384
  %24010 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24011 = extractvalue { double, double } %24008, 1, !dbg !384
  store double %24011, ptr %24010, align 8, !dbg !384
  %24012 = load double, ptr %18, align 8, !dbg !385
  %24013 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24014 = load double, ptr %24013, align 8, !dbg !385
  %24015 = load double, ptr %19, align 8, !dbg !385
  %24016 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24017 = load double, ptr %24016, align 8, !dbg !385
  %24018 = call double @dot(double %24012, double %24014, double %24015, double %24017), !dbg !385
  %24019 = call double @atan2(double noundef %23984, double noundef %24018) #6, !dbg !386
  store double %24019, ptr %13, align 8, !dbg !387
  %24020 = load double, ptr %13, align 8, !dbg !388
  %24021 = load double, ptr %14, align 8, !dbg !389
  %24022 = fadd double %24021, %24020, !dbg !389
  store double %24022, ptr %14, align 8, !dbg !389
  %24023 = load double, ptr %13, align 8, !dbg !390
  %24024 = fsub double %24023, 0x400921FB54442D18, !dbg !392
  %24025 = call double @llvm.fabs.f64(double %24024), !dbg !393
  %24026 = fcmp ole double %24025, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24026, label %14330, label %24027, !dbg !395

24027:                                            ; preds = %23950
  %24028 = load double, ptr %13, align 8, !dbg !396
  %24029 = fadd double %24028, 0x400921FB54442D18, !dbg !397
  %24030 = call double @llvm.fabs.f64(double %24029), !dbg !398
  %24031 = fcmp ole double %24030, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24031, label %14330, label %24032, !dbg !400

24032:                                            ; preds = %24027
  br label %24033, !dbg !403

24033:                                            ; preds = %24032
  %24034 = load i32, ptr %10, align 4, !dbg !404
  %24035 = add nsw i32 %24034, 1, !dbg !404
  store i32 %24035, ptr %10, align 4, !dbg !404
  %24036 = load i32, ptr %10, align 4, !dbg !364
  %24037 = load i32, ptr %8, align 4, !dbg !366
  %24038 = icmp slt i32 %24036, %24037, !dbg !367
  br i1 %24038, label %24039, label %48422, !dbg !368

24039:                                            ; preds = %24033
  %24040 = load i32, ptr %10, align 4, !dbg !369
  %24041 = sext i32 %24040 to i64, !dbg !371
  %24042 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24041, !dbg !371
  %24043 = load double, ptr %6, align 8, !dbg !372
  %24044 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24045 = load double, ptr %24044, align 8, !dbg !372
  %24046 = load double, ptr %24042, align 16, !dbg !372
  %24047 = getelementptr inbounds { double, double }, ptr %24042, i32 0, i32 1, !dbg !372
  %24048 = load double, ptr %24047, align 8, !dbg !372
  %24049 = call { double, double } @make_vec(double %24043, double %24045, double %24046, double %24048), !dbg !372
  %24050 = extractvalue { double, double } %24049, 0, !dbg !372
  store double %24050, ptr %16, align 8, !dbg !372
  %24051 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24052 = extractvalue { double, double } %24049, 1, !dbg !372
  store double %24052, ptr %24051, align 8, !dbg !372
  %24053 = load i32, ptr %10, align 4, !dbg !373
  %24054 = add nsw i32 %24053, 1, !dbg !374
  %24055 = sext i32 %24054 to i64, !dbg !375
  %24056 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24055, !dbg !375
  %24057 = load double, ptr %6, align 8, !dbg !376
  %24058 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24059 = load double, ptr %24058, align 8, !dbg !376
  %24060 = load double, ptr %24056, align 16, !dbg !376
  %24061 = getelementptr inbounds { double, double }, ptr %24056, i32 0, i32 1, !dbg !376
  %24062 = load double, ptr %24061, align 8, !dbg !376
  %24063 = call { double, double } @make_vec(double %24057, double %24059, double %24060, double %24062), !dbg !376
  %24064 = extractvalue { double, double } %24063, 0, !dbg !376
  store double %24064, ptr %17, align 8, !dbg !376
  %24065 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24066 = extractvalue { double, double } %24063, 1, !dbg !376
  store double %24066, ptr %24065, align 8, !dbg !376
  %24067 = load double, ptr %16, align 8, !dbg !377
  %24068 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24069 = load double, ptr %24068, align 8, !dbg !377
  %24070 = load double, ptr %17, align 8, !dbg !377
  %24071 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24072 = load double, ptr %24071, align 8, !dbg !377
  %24073 = call double @cross(double %24067, double %24069, double %24070, double %24072), !dbg !377
  %24074 = load i32, ptr %10, align 4, !dbg !378
  %24075 = sext i32 %24074 to i64, !dbg !379
  %24076 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24075, !dbg !379
  %24077 = load double, ptr %6, align 8, !dbg !380
  %24078 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24079 = load double, ptr %24078, align 8, !dbg !380
  %24080 = load double, ptr %24076, align 16, !dbg !380
  %24081 = getelementptr inbounds { double, double }, ptr %24076, i32 0, i32 1, !dbg !380
  %24082 = load double, ptr %24081, align 8, !dbg !380
  %24083 = call { double, double } @make_vec(double %24077, double %24079, double %24080, double %24082), !dbg !380
  %24084 = extractvalue { double, double } %24083, 0, !dbg !380
  store double %24084, ptr %18, align 8, !dbg !380
  %24085 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24086 = extractvalue { double, double } %24083, 1, !dbg !380
  store double %24086, ptr %24085, align 8, !dbg !380
  %24087 = load i32, ptr %10, align 4, !dbg !381
  %24088 = add nsw i32 %24087, 1, !dbg !382
  %24089 = sext i32 %24088 to i64, !dbg !383
  %24090 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24089, !dbg !383
  %24091 = load double, ptr %6, align 8, !dbg !384
  %24092 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24093 = load double, ptr %24092, align 8, !dbg !384
  %24094 = load double, ptr %24090, align 16, !dbg !384
  %24095 = getelementptr inbounds { double, double }, ptr %24090, i32 0, i32 1, !dbg !384
  %24096 = load double, ptr %24095, align 8, !dbg !384
  %24097 = call { double, double } @make_vec(double %24091, double %24093, double %24094, double %24096), !dbg !384
  %24098 = extractvalue { double, double } %24097, 0, !dbg !384
  store double %24098, ptr %19, align 8, !dbg !384
  %24099 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24100 = extractvalue { double, double } %24097, 1, !dbg !384
  store double %24100, ptr %24099, align 8, !dbg !384
  %24101 = load double, ptr %18, align 8, !dbg !385
  %24102 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24103 = load double, ptr %24102, align 8, !dbg !385
  %24104 = load double, ptr %19, align 8, !dbg !385
  %24105 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24106 = load double, ptr %24105, align 8, !dbg !385
  %24107 = call double @dot(double %24101, double %24103, double %24104, double %24106), !dbg !385
  %24108 = call double @atan2(double noundef %24073, double noundef %24107) #6, !dbg !386
  store double %24108, ptr %13, align 8, !dbg !387
  %24109 = load double, ptr %13, align 8, !dbg !388
  %24110 = load double, ptr %14, align 8, !dbg !389
  %24111 = fadd double %24110, %24109, !dbg !389
  store double %24111, ptr %14, align 8, !dbg !389
  %24112 = load double, ptr %13, align 8, !dbg !390
  %24113 = fsub double %24112, 0x400921FB54442D18, !dbg !392
  %24114 = call double @llvm.fabs.f64(double %24113), !dbg !393
  %24115 = fcmp ole double %24114, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24115, label %14330, label %24116, !dbg !395

24116:                                            ; preds = %24039
  %24117 = load double, ptr %13, align 8, !dbg !396
  %24118 = fadd double %24117, 0x400921FB54442D18, !dbg !397
  %24119 = call double @llvm.fabs.f64(double %24118), !dbg !398
  %24120 = fcmp ole double %24119, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24120, label %14330, label %24121, !dbg !400

24121:                                            ; preds = %24116
  br label %24122, !dbg !403

24122:                                            ; preds = %24121
  %24123 = load i32, ptr %10, align 4, !dbg !404
  %24124 = add nsw i32 %24123, 1, !dbg !404
  store i32 %24124, ptr %10, align 4, !dbg !404
  %24125 = load i32, ptr %10, align 4, !dbg !364
  %24126 = load i32, ptr %8, align 4, !dbg !366
  %24127 = icmp slt i32 %24125, %24126, !dbg !367
  br i1 %24127, label %24128, label %48422, !dbg !368

24128:                                            ; preds = %24122
  %24129 = load i32, ptr %10, align 4, !dbg !369
  %24130 = sext i32 %24129 to i64, !dbg !371
  %24131 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24130, !dbg !371
  %24132 = load double, ptr %6, align 8, !dbg !372
  %24133 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24134 = load double, ptr %24133, align 8, !dbg !372
  %24135 = load double, ptr %24131, align 16, !dbg !372
  %24136 = getelementptr inbounds { double, double }, ptr %24131, i32 0, i32 1, !dbg !372
  %24137 = load double, ptr %24136, align 8, !dbg !372
  %24138 = call { double, double } @make_vec(double %24132, double %24134, double %24135, double %24137), !dbg !372
  %24139 = extractvalue { double, double } %24138, 0, !dbg !372
  store double %24139, ptr %16, align 8, !dbg !372
  %24140 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24141 = extractvalue { double, double } %24138, 1, !dbg !372
  store double %24141, ptr %24140, align 8, !dbg !372
  %24142 = load i32, ptr %10, align 4, !dbg !373
  %24143 = add nsw i32 %24142, 1, !dbg !374
  %24144 = sext i32 %24143 to i64, !dbg !375
  %24145 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24144, !dbg !375
  %24146 = load double, ptr %6, align 8, !dbg !376
  %24147 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24148 = load double, ptr %24147, align 8, !dbg !376
  %24149 = load double, ptr %24145, align 16, !dbg !376
  %24150 = getelementptr inbounds { double, double }, ptr %24145, i32 0, i32 1, !dbg !376
  %24151 = load double, ptr %24150, align 8, !dbg !376
  %24152 = call { double, double } @make_vec(double %24146, double %24148, double %24149, double %24151), !dbg !376
  %24153 = extractvalue { double, double } %24152, 0, !dbg !376
  store double %24153, ptr %17, align 8, !dbg !376
  %24154 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24155 = extractvalue { double, double } %24152, 1, !dbg !376
  store double %24155, ptr %24154, align 8, !dbg !376
  %24156 = load double, ptr %16, align 8, !dbg !377
  %24157 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24158 = load double, ptr %24157, align 8, !dbg !377
  %24159 = load double, ptr %17, align 8, !dbg !377
  %24160 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24161 = load double, ptr %24160, align 8, !dbg !377
  %24162 = call double @cross(double %24156, double %24158, double %24159, double %24161), !dbg !377
  %24163 = load i32, ptr %10, align 4, !dbg !378
  %24164 = sext i32 %24163 to i64, !dbg !379
  %24165 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24164, !dbg !379
  %24166 = load double, ptr %6, align 8, !dbg !380
  %24167 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24168 = load double, ptr %24167, align 8, !dbg !380
  %24169 = load double, ptr %24165, align 16, !dbg !380
  %24170 = getelementptr inbounds { double, double }, ptr %24165, i32 0, i32 1, !dbg !380
  %24171 = load double, ptr %24170, align 8, !dbg !380
  %24172 = call { double, double } @make_vec(double %24166, double %24168, double %24169, double %24171), !dbg !380
  %24173 = extractvalue { double, double } %24172, 0, !dbg !380
  store double %24173, ptr %18, align 8, !dbg !380
  %24174 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24175 = extractvalue { double, double } %24172, 1, !dbg !380
  store double %24175, ptr %24174, align 8, !dbg !380
  %24176 = load i32, ptr %10, align 4, !dbg !381
  %24177 = add nsw i32 %24176, 1, !dbg !382
  %24178 = sext i32 %24177 to i64, !dbg !383
  %24179 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24178, !dbg !383
  %24180 = load double, ptr %6, align 8, !dbg !384
  %24181 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24182 = load double, ptr %24181, align 8, !dbg !384
  %24183 = load double, ptr %24179, align 16, !dbg !384
  %24184 = getelementptr inbounds { double, double }, ptr %24179, i32 0, i32 1, !dbg !384
  %24185 = load double, ptr %24184, align 8, !dbg !384
  %24186 = call { double, double } @make_vec(double %24180, double %24182, double %24183, double %24185), !dbg !384
  %24187 = extractvalue { double, double } %24186, 0, !dbg !384
  store double %24187, ptr %19, align 8, !dbg !384
  %24188 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24189 = extractvalue { double, double } %24186, 1, !dbg !384
  store double %24189, ptr %24188, align 8, !dbg !384
  %24190 = load double, ptr %18, align 8, !dbg !385
  %24191 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24192 = load double, ptr %24191, align 8, !dbg !385
  %24193 = load double, ptr %19, align 8, !dbg !385
  %24194 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24195 = load double, ptr %24194, align 8, !dbg !385
  %24196 = call double @dot(double %24190, double %24192, double %24193, double %24195), !dbg !385
  %24197 = call double @atan2(double noundef %24162, double noundef %24196) #6, !dbg !386
  store double %24197, ptr %13, align 8, !dbg !387
  %24198 = load double, ptr %13, align 8, !dbg !388
  %24199 = load double, ptr %14, align 8, !dbg !389
  %24200 = fadd double %24199, %24198, !dbg !389
  store double %24200, ptr %14, align 8, !dbg !389
  %24201 = load double, ptr %13, align 8, !dbg !390
  %24202 = fsub double %24201, 0x400921FB54442D18, !dbg !392
  %24203 = call double @llvm.fabs.f64(double %24202), !dbg !393
  %24204 = fcmp ole double %24203, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24204, label %14330, label %24205, !dbg !395

24205:                                            ; preds = %24128
  %24206 = load double, ptr %13, align 8, !dbg !396
  %24207 = fadd double %24206, 0x400921FB54442D18, !dbg !397
  %24208 = call double @llvm.fabs.f64(double %24207), !dbg !398
  %24209 = fcmp ole double %24208, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24209, label %14330, label %24210, !dbg !400

24210:                                            ; preds = %24205
  br label %24211, !dbg !403

24211:                                            ; preds = %24210
  %24212 = load i32, ptr %10, align 4, !dbg !404
  %24213 = add nsw i32 %24212, 1, !dbg !404
  store i32 %24213, ptr %10, align 4, !dbg !404
  %24214 = load i32, ptr %10, align 4, !dbg !364
  %24215 = load i32, ptr %8, align 4, !dbg !366
  %24216 = icmp slt i32 %24214, %24215, !dbg !367
  br i1 %24216, label %24217, label %48422, !dbg !368

24217:                                            ; preds = %24211
  %24218 = load i32, ptr %10, align 4, !dbg !369
  %24219 = sext i32 %24218 to i64, !dbg !371
  %24220 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24219, !dbg !371
  %24221 = load double, ptr %6, align 8, !dbg !372
  %24222 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24223 = load double, ptr %24222, align 8, !dbg !372
  %24224 = load double, ptr %24220, align 16, !dbg !372
  %24225 = getelementptr inbounds { double, double }, ptr %24220, i32 0, i32 1, !dbg !372
  %24226 = load double, ptr %24225, align 8, !dbg !372
  %24227 = call { double, double } @make_vec(double %24221, double %24223, double %24224, double %24226), !dbg !372
  %24228 = extractvalue { double, double } %24227, 0, !dbg !372
  store double %24228, ptr %16, align 8, !dbg !372
  %24229 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24230 = extractvalue { double, double } %24227, 1, !dbg !372
  store double %24230, ptr %24229, align 8, !dbg !372
  %24231 = load i32, ptr %10, align 4, !dbg !373
  %24232 = add nsw i32 %24231, 1, !dbg !374
  %24233 = sext i32 %24232 to i64, !dbg !375
  %24234 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24233, !dbg !375
  %24235 = load double, ptr %6, align 8, !dbg !376
  %24236 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24237 = load double, ptr %24236, align 8, !dbg !376
  %24238 = load double, ptr %24234, align 16, !dbg !376
  %24239 = getelementptr inbounds { double, double }, ptr %24234, i32 0, i32 1, !dbg !376
  %24240 = load double, ptr %24239, align 8, !dbg !376
  %24241 = call { double, double } @make_vec(double %24235, double %24237, double %24238, double %24240), !dbg !376
  %24242 = extractvalue { double, double } %24241, 0, !dbg !376
  store double %24242, ptr %17, align 8, !dbg !376
  %24243 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24244 = extractvalue { double, double } %24241, 1, !dbg !376
  store double %24244, ptr %24243, align 8, !dbg !376
  %24245 = load double, ptr %16, align 8, !dbg !377
  %24246 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24247 = load double, ptr %24246, align 8, !dbg !377
  %24248 = load double, ptr %17, align 8, !dbg !377
  %24249 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24250 = load double, ptr %24249, align 8, !dbg !377
  %24251 = call double @cross(double %24245, double %24247, double %24248, double %24250), !dbg !377
  %24252 = load i32, ptr %10, align 4, !dbg !378
  %24253 = sext i32 %24252 to i64, !dbg !379
  %24254 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24253, !dbg !379
  %24255 = load double, ptr %6, align 8, !dbg !380
  %24256 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24257 = load double, ptr %24256, align 8, !dbg !380
  %24258 = load double, ptr %24254, align 16, !dbg !380
  %24259 = getelementptr inbounds { double, double }, ptr %24254, i32 0, i32 1, !dbg !380
  %24260 = load double, ptr %24259, align 8, !dbg !380
  %24261 = call { double, double } @make_vec(double %24255, double %24257, double %24258, double %24260), !dbg !380
  %24262 = extractvalue { double, double } %24261, 0, !dbg !380
  store double %24262, ptr %18, align 8, !dbg !380
  %24263 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24264 = extractvalue { double, double } %24261, 1, !dbg !380
  store double %24264, ptr %24263, align 8, !dbg !380
  %24265 = load i32, ptr %10, align 4, !dbg !381
  %24266 = add nsw i32 %24265, 1, !dbg !382
  %24267 = sext i32 %24266 to i64, !dbg !383
  %24268 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24267, !dbg !383
  %24269 = load double, ptr %6, align 8, !dbg !384
  %24270 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24271 = load double, ptr %24270, align 8, !dbg !384
  %24272 = load double, ptr %24268, align 16, !dbg !384
  %24273 = getelementptr inbounds { double, double }, ptr %24268, i32 0, i32 1, !dbg !384
  %24274 = load double, ptr %24273, align 8, !dbg !384
  %24275 = call { double, double } @make_vec(double %24269, double %24271, double %24272, double %24274), !dbg !384
  %24276 = extractvalue { double, double } %24275, 0, !dbg !384
  store double %24276, ptr %19, align 8, !dbg !384
  %24277 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24278 = extractvalue { double, double } %24275, 1, !dbg !384
  store double %24278, ptr %24277, align 8, !dbg !384
  %24279 = load double, ptr %18, align 8, !dbg !385
  %24280 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24281 = load double, ptr %24280, align 8, !dbg !385
  %24282 = load double, ptr %19, align 8, !dbg !385
  %24283 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24284 = load double, ptr %24283, align 8, !dbg !385
  %24285 = call double @dot(double %24279, double %24281, double %24282, double %24284), !dbg !385
  %24286 = call double @atan2(double noundef %24251, double noundef %24285) #6, !dbg !386
  store double %24286, ptr %13, align 8, !dbg !387
  %24287 = load double, ptr %13, align 8, !dbg !388
  %24288 = load double, ptr %14, align 8, !dbg !389
  %24289 = fadd double %24288, %24287, !dbg !389
  store double %24289, ptr %14, align 8, !dbg !389
  %24290 = load double, ptr %13, align 8, !dbg !390
  %24291 = fsub double %24290, 0x400921FB54442D18, !dbg !392
  %24292 = call double @llvm.fabs.f64(double %24291), !dbg !393
  %24293 = fcmp ole double %24292, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24293, label %14330, label %24294, !dbg !395

24294:                                            ; preds = %24217
  %24295 = load double, ptr %13, align 8, !dbg !396
  %24296 = fadd double %24295, 0x400921FB54442D18, !dbg !397
  %24297 = call double @llvm.fabs.f64(double %24296), !dbg !398
  %24298 = fcmp ole double %24297, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24298, label %14330, label %24299, !dbg !400

24299:                                            ; preds = %24294
  br label %24300, !dbg !403

24300:                                            ; preds = %24299
  %24301 = load i32, ptr %10, align 4, !dbg !404
  %24302 = add nsw i32 %24301, 1, !dbg !404
  store i32 %24302, ptr %10, align 4, !dbg !404
  %24303 = load i32, ptr %10, align 4, !dbg !364
  %24304 = load i32, ptr %8, align 4, !dbg !366
  %24305 = icmp slt i32 %24303, %24304, !dbg !367
  br i1 %24305, label %24306, label %48422, !dbg !368

24306:                                            ; preds = %24300
  %24307 = load i32, ptr %10, align 4, !dbg !369
  %24308 = sext i32 %24307 to i64, !dbg !371
  %24309 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24308, !dbg !371
  %24310 = load double, ptr %6, align 8, !dbg !372
  %24311 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24312 = load double, ptr %24311, align 8, !dbg !372
  %24313 = load double, ptr %24309, align 16, !dbg !372
  %24314 = getelementptr inbounds { double, double }, ptr %24309, i32 0, i32 1, !dbg !372
  %24315 = load double, ptr %24314, align 8, !dbg !372
  %24316 = call { double, double } @make_vec(double %24310, double %24312, double %24313, double %24315), !dbg !372
  %24317 = extractvalue { double, double } %24316, 0, !dbg !372
  store double %24317, ptr %16, align 8, !dbg !372
  %24318 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24319 = extractvalue { double, double } %24316, 1, !dbg !372
  store double %24319, ptr %24318, align 8, !dbg !372
  %24320 = load i32, ptr %10, align 4, !dbg !373
  %24321 = add nsw i32 %24320, 1, !dbg !374
  %24322 = sext i32 %24321 to i64, !dbg !375
  %24323 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24322, !dbg !375
  %24324 = load double, ptr %6, align 8, !dbg !376
  %24325 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24326 = load double, ptr %24325, align 8, !dbg !376
  %24327 = load double, ptr %24323, align 16, !dbg !376
  %24328 = getelementptr inbounds { double, double }, ptr %24323, i32 0, i32 1, !dbg !376
  %24329 = load double, ptr %24328, align 8, !dbg !376
  %24330 = call { double, double } @make_vec(double %24324, double %24326, double %24327, double %24329), !dbg !376
  %24331 = extractvalue { double, double } %24330, 0, !dbg !376
  store double %24331, ptr %17, align 8, !dbg !376
  %24332 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24333 = extractvalue { double, double } %24330, 1, !dbg !376
  store double %24333, ptr %24332, align 8, !dbg !376
  %24334 = load double, ptr %16, align 8, !dbg !377
  %24335 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24336 = load double, ptr %24335, align 8, !dbg !377
  %24337 = load double, ptr %17, align 8, !dbg !377
  %24338 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24339 = load double, ptr %24338, align 8, !dbg !377
  %24340 = call double @cross(double %24334, double %24336, double %24337, double %24339), !dbg !377
  %24341 = load i32, ptr %10, align 4, !dbg !378
  %24342 = sext i32 %24341 to i64, !dbg !379
  %24343 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24342, !dbg !379
  %24344 = load double, ptr %6, align 8, !dbg !380
  %24345 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24346 = load double, ptr %24345, align 8, !dbg !380
  %24347 = load double, ptr %24343, align 16, !dbg !380
  %24348 = getelementptr inbounds { double, double }, ptr %24343, i32 0, i32 1, !dbg !380
  %24349 = load double, ptr %24348, align 8, !dbg !380
  %24350 = call { double, double } @make_vec(double %24344, double %24346, double %24347, double %24349), !dbg !380
  %24351 = extractvalue { double, double } %24350, 0, !dbg !380
  store double %24351, ptr %18, align 8, !dbg !380
  %24352 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24353 = extractvalue { double, double } %24350, 1, !dbg !380
  store double %24353, ptr %24352, align 8, !dbg !380
  %24354 = load i32, ptr %10, align 4, !dbg !381
  %24355 = add nsw i32 %24354, 1, !dbg !382
  %24356 = sext i32 %24355 to i64, !dbg !383
  %24357 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24356, !dbg !383
  %24358 = load double, ptr %6, align 8, !dbg !384
  %24359 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24360 = load double, ptr %24359, align 8, !dbg !384
  %24361 = load double, ptr %24357, align 16, !dbg !384
  %24362 = getelementptr inbounds { double, double }, ptr %24357, i32 0, i32 1, !dbg !384
  %24363 = load double, ptr %24362, align 8, !dbg !384
  %24364 = call { double, double } @make_vec(double %24358, double %24360, double %24361, double %24363), !dbg !384
  %24365 = extractvalue { double, double } %24364, 0, !dbg !384
  store double %24365, ptr %19, align 8, !dbg !384
  %24366 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24367 = extractvalue { double, double } %24364, 1, !dbg !384
  store double %24367, ptr %24366, align 8, !dbg !384
  %24368 = load double, ptr %18, align 8, !dbg !385
  %24369 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24370 = load double, ptr %24369, align 8, !dbg !385
  %24371 = load double, ptr %19, align 8, !dbg !385
  %24372 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24373 = load double, ptr %24372, align 8, !dbg !385
  %24374 = call double @dot(double %24368, double %24370, double %24371, double %24373), !dbg !385
  %24375 = call double @atan2(double noundef %24340, double noundef %24374) #6, !dbg !386
  store double %24375, ptr %13, align 8, !dbg !387
  %24376 = load double, ptr %13, align 8, !dbg !388
  %24377 = load double, ptr %14, align 8, !dbg !389
  %24378 = fadd double %24377, %24376, !dbg !389
  store double %24378, ptr %14, align 8, !dbg !389
  %24379 = load double, ptr %13, align 8, !dbg !390
  %24380 = fsub double %24379, 0x400921FB54442D18, !dbg !392
  %24381 = call double @llvm.fabs.f64(double %24380), !dbg !393
  %24382 = fcmp ole double %24381, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24382, label %14330, label %24383, !dbg !395

24383:                                            ; preds = %24306
  %24384 = load double, ptr %13, align 8, !dbg !396
  %24385 = fadd double %24384, 0x400921FB54442D18, !dbg !397
  %24386 = call double @llvm.fabs.f64(double %24385), !dbg !398
  %24387 = fcmp ole double %24386, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24387, label %14330, label %24388, !dbg !400

24388:                                            ; preds = %24383
  br label %24389, !dbg !403

24389:                                            ; preds = %24388
  %24390 = load i32, ptr %10, align 4, !dbg !404
  %24391 = add nsw i32 %24390, 1, !dbg !404
  store i32 %24391, ptr %10, align 4, !dbg !404
  %24392 = load i32, ptr %10, align 4, !dbg !364
  %24393 = load i32, ptr %8, align 4, !dbg !366
  %24394 = icmp slt i32 %24392, %24393, !dbg !367
  br i1 %24394, label %24395, label %48422, !dbg !368

24395:                                            ; preds = %24389
  %24396 = load i32, ptr %10, align 4, !dbg !369
  %24397 = sext i32 %24396 to i64, !dbg !371
  %24398 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24397, !dbg !371
  %24399 = load double, ptr %6, align 8, !dbg !372
  %24400 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24401 = load double, ptr %24400, align 8, !dbg !372
  %24402 = load double, ptr %24398, align 16, !dbg !372
  %24403 = getelementptr inbounds { double, double }, ptr %24398, i32 0, i32 1, !dbg !372
  %24404 = load double, ptr %24403, align 8, !dbg !372
  %24405 = call { double, double } @make_vec(double %24399, double %24401, double %24402, double %24404), !dbg !372
  %24406 = extractvalue { double, double } %24405, 0, !dbg !372
  store double %24406, ptr %16, align 8, !dbg !372
  %24407 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24408 = extractvalue { double, double } %24405, 1, !dbg !372
  store double %24408, ptr %24407, align 8, !dbg !372
  %24409 = load i32, ptr %10, align 4, !dbg !373
  %24410 = add nsw i32 %24409, 1, !dbg !374
  %24411 = sext i32 %24410 to i64, !dbg !375
  %24412 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24411, !dbg !375
  %24413 = load double, ptr %6, align 8, !dbg !376
  %24414 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24415 = load double, ptr %24414, align 8, !dbg !376
  %24416 = load double, ptr %24412, align 16, !dbg !376
  %24417 = getelementptr inbounds { double, double }, ptr %24412, i32 0, i32 1, !dbg !376
  %24418 = load double, ptr %24417, align 8, !dbg !376
  %24419 = call { double, double } @make_vec(double %24413, double %24415, double %24416, double %24418), !dbg !376
  %24420 = extractvalue { double, double } %24419, 0, !dbg !376
  store double %24420, ptr %17, align 8, !dbg !376
  %24421 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24422 = extractvalue { double, double } %24419, 1, !dbg !376
  store double %24422, ptr %24421, align 8, !dbg !376
  %24423 = load double, ptr %16, align 8, !dbg !377
  %24424 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24425 = load double, ptr %24424, align 8, !dbg !377
  %24426 = load double, ptr %17, align 8, !dbg !377
  %24427 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24428 = load double, ptr %24427, align 8, !dbg !377
  %24429 = call double @cross(double %24423, double %24425, double %24426, double %24428), !dbg !377
  %24430 = load i32, ptr %10, align 4, !dbg !378
  %24431 = sext i32 %24430 to i64, !dbg !379
  %24432 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24431, !dbg !379
  %24433 = load double, ptr %6, align 8, !dbg !380
  %24434 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24435 = load double, ptr %24434, align 8, !dbg !380
  %24436 = load double, ptr %24432, align 16, !dbg !380
  %24437 = getelementptr inbounds { double, double }, ptr %24432, i32 0, i32 1, !dbg !380
  %24438 = load double, ptr %24437, align 8, !dbg !380
  %24439 = call { double, double } @make_vec(double %24433, double %24435, double %24436, double %24438), !dbg !380
  %24440 = extractvalue { double, double } %24439, 0, !dbg !380
  store double %24440, ptr %18, align 8, !dbg !380
  %24441 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24442 = extractvalue { double, double } %24439, 1, !dbg !380
  store double %24442, ptr %24441, align 8, !dbg !380
  %24443 = load i32, ptr %10, align 4, !dbg !381
  %24444 = add nsw i32 %24443, 1, !dbg !382
  %24445 = sext i32 %24444 to i64, !dbg !383
  %24446 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24445, !dbg !383
  %24447 = load double, ptr %6, align 8, !dbg !384
  %24448 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24449 = load double, ptr %24448, align 8, !dbg !384
  %24450 = load double, ptr %24446, align 16, !dbg !384
  %24451 = getelementptr inbounds { double, double }, ptr %24446, i32 0, i32 1, !dbg !384
  %24452 = load double, ptr %24451, align 8, !dbg !384
  %24453 = call { double, double } @make_vec(double %24447, double %24449, double %24450, double %24452), !dbg !384
  %24454 = extractvalue { double, double } %24453, 0, !dbg !384
  store double %24454, ptr %19, align 8, !dbg !384
  %24455 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24456 = extractvalue { double, double } %24453, 1, !dbg !384
  store double %24456, ptr %24455, align 8, !dbg !384
  %24457 = load double, ptr %18, align 8, !dbg !385
  %24458 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24459 = load double, ptr %24458, align 8, !dbg !385
  %24460 = load double, ptr %19, align 8, !dbg !385
  %24461 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24462 = load double, ptr %24461, align 8, !dbg !385
  %24463 = call double @dot(double %24457, double %24459, double %24460, double %24462), !dbg !385
  %24464 = call double @atan2(double noundef %24429, double noundef %24463) #6, !dbg !386
  store double %24464, ptr %13, align 8, !dbg !387
  %24465 = load double, ptr %13, align 8, !dbg !388
  %24466 = load double, ptr %14, align 8, !dbg !389
  %24467 = fadd double %24466, %24465, !dbg !389
  store double %24467, ptr %14, align 8, !dbg !389
  %24468 = load double, ptr %13, align 8, !dbg !390
  %24469 = fsub double %24468, 0x400921FB54442D18, !dbg !392
  %24470 = call double @llvm.fabs.f64(double %24469), !dbg !393
  %24471 = fcmp ole double %24470, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24471, label %14330, label %24472, !dbg !395

24472:                                            ; preds = %24395
  %24473 = load double, ptr %13, align 8, !dbg !396
  %24474 = fadd double %24473, 0x400921FB54442D18, !dbg !397
  %24475 = call double @llvm.fabs.f64(double %24474), !dbg !398
  %24476 = fcmp ole double %24475, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24476, label %14330, label %24477, !dbg !400

24477:                                            ; preds = %24472
  br label %24478, !dbg !403

24478:                                            ; preds = %24477
  %24479 = load i32, ptr %10, align 4, !dbg !404
  %24480 = add nsw i32 %24479, 1, !dbg !404
  store i32 %24480, ptr %10, align 4, !dbg !404
  %24481 = load i32, ptr %10, align 4, !dbg !364
  %24482 = load i32, ptr %8, align 4, !dbg !366
  %24483 = icmp slt i32 %24481, %24482, !dbg !367
  br i1 %24483, label %24484, label %48422, !dbg !368

24484:                                            ; preds = %24478
  %24485 = load i32, ptr %10, align 4, !dbg !369
  %24486 = sext i32 %24485 to i64, !dbg !371
  %24487 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24486, !dbg !371
  %24488 = load double, ptr %6, align 8, !dbg !372
  %24489 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24490 = load double, ptr %24489, align 8, !dbg !372
  %24491 = load double, ptr %24487, align 16, !dbg !372
  %24492 = getelementptr inbounds { double, double }, ptr %24487, i32 0, i32 1, !dbg !372
  %24493 = load double, ptr %24492, align 8, !dbg !372
  %24494 = call { double, double } @make_vec(double %24488, double %24490, double %24491, double %24493), !dbg !372
  %24495 = extractvalue { double, double } %24494, 0, !dbg !372
  store double %24495, ptr %16, align 8, !dbg !372
  %24496 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24497 = extractvalue { double, double } %24494, 1, !dbg !372
  store double %24497, ptr %24496, align 8, !dbg !372
  %24498 = load i32, ptr %10, align 4, !dbg !373
  %24499 = add nsw i32 %24498, 1, !dbg !374
  %24500 = sext i32 %24499 to i64, !dbg !375
  %24501 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24500, !dbg !375
  %24502 = load double, ptr %6, align 8, !dbg !376
  %24503 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24504 = load double, ptr %24503, align 8, !dbg !376
  %24505 = load double, ptr %24501, align 16, !dbg !376
  %24506 = getelementptr inbounds { double, double }, ptr %24501, i32 0, i32 1, !dbg !376
  %24507 = load double, ptr %24506, align 8, !dbg !376
  %24508 = call { double, double } @make_vec(double %24502, double %24504, double %24505, double %24507), !dbg !376
  %24509 = extractvalue { double, double } %24508, 0, !dbg !376
  store double %24509, ptr %17, align 8, !dbg !376
  %24510 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24511 = extractvalue { double, double } %24508, 1, !dbg !376
  store double %24511, ptr %24510, align 8, !dbg !376
  %24512 = load double, ptr %16, align 8, !dbg !377
  %24513 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24514 = load double, ptr %24513, align 8, !dbg !377
  %24515 = load double, ptr %17, align 8, !dbg !377
  %24516 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24517 = load double, ptr %24516, align 8, !dbg !377
  %24518 = call double @cross(double %24512, double %24514, double %24515, double %24517), !dbg !377
  %24519 = load i32, ptr %10, align 4, !dbg !378
  %24520 = sext i32 %24519 to i64, !dbg !379
  %24521 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24520, !dbg !379
  %24522 = load double, ptr %6, align 8, !dbg !380
  %24523 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24524 = load double, ptr %24523, align 8, !dbg !380
  %24525 = load double, ptr %24521, align 16, !dbg !380
  %24526 = getelementptr inbounds { double, double }, ptr %24521, i32 0, i32 1, !dbg !380
  %24527 = load double, ptr %24526, align 8, !dbg !380
  %24528 = call { double, double } @make_vec(double %24522, double %24524, double %24525, double %24527), !dbg !380
  %24529 = extractvalue { double, double } %24528, 0, !dbg !380
  store double %24529, ptr %18, align 8, !dbg !380
  %24530 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24531 = extractvalue { double, double } %24528, 1, !dbg !380
  store double %24531, ptr %24530, align 8, !dbg !380
  %24532 = load i32, ptr %10, align 4, !dbg !381
  %24533 = add nsw i32 %24532, 1, !dbg !382
  %24534 = sext i32 %24533 to i64, !dbg !383
  %24535 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24534, !dbg !383
  %24536 = load double, ptr %6, align 8, !dbg !384
  %24537 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24538 = load double, ptr %24537, align 8, !dbg !384
  %24539 = load double, ptr %24535, align 16, !dbg !384
  %24540 = getelementptr inbounds { double, double }, ptr %24535, i32 0, i32 1, !dbg !384
  %24541 = load double, ptr %24540, align 8, !dbg !384
  %24542 = call { double, double } @make_vec(double %24536, double %24538, double %24539, double %24541), !dbg !384
  %24543 = extractvalue { double, double } %24542, 0, !dbg !384
  store double %24543, ptr %19, align 8, !dbg !384
  %24544 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24545 = extractvalue { double, double } %24542, 1, !dbg !384
  store double %24545, ptr %24544, align 8, !dbg !384
  %24546 = load double, ptr %18, align 8, !dbg !385
  %24547 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24548 = load double, ptr %24547, align 8, !dbg !385
  %24549 = load double, ptr %19, align 8, !dbg !385
  %24550 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24551 = load double, ptr %24550, align 8, !dbg !385
  %24552 = call double @dot(double %24546, double %24548, double %24549, double %24551), !dbg !385
  %24553 = call double @atan2(double noundef %24518, double noundef %24552) #6, !dbg !386
  store double %24553, ptr %13, align 8, !dbg !387
  %24554 = load double, ptr %13, align 8, !dbg !388
  %24555 = load double, ptr %14, align 8, !dbg !389
  %24556 = fadd double %24555, %24554, !dbg !389
  store double %24556, ptr %14, align 8, !dbg !389
  %24557 = load double, ptr %13, align 8, !dbg !390
  %24558 = fsub double %24557, 0x400921FB54442D18, !dbg !392
  %24559 = call double @llvm.fabs.f64(double %24558), !dbg !393
  %24560 = fcmp ole double %24559, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24560, label %14330, label %24561, !dbg !395

24561:                                            ; preds = %24484
  %24562 = load double, ptr %13, align 8, !dbg !396
  %24563 = fadd double %24562, 0x400921FB54442D18, !dbg !397
  %24564 = call double @llvm.fabs.f64(double %24563), !dbg !398
  %24565 = fcmp ole double %24564, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24565, label %14330, label %24566, !dbg !400

24566:                                            ; preds = %24561
  br label %24567, !dbg !403

24567:                                            ; preds = %24566
  %24568 = load i32, ptr %10, align 4, !dbg !404
  %24569 = add nsw i32 %24568, 1, !dbg !404
  store i32 %24569, ptr %10, align 4, !dbg !404
  %24570 = load i32, ptr %10, align 4, !dbg !364
  %24571 = load i32, ptr %8, align 4, !dbg !366
  %24572 = icmp slt i32 %24570, %24571, !dbg !367
  br i1 %24572, label %24573, label %48422, !dbg !368

24573:                                            ; preds = %24567
  %24574 = load i32, ptr %10, align 4, !dbg !369
  %24575 = sext i32 %24574 to i64, !dbg !371
  %24576 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24575, !dbg !371
  %24577 = load double, ptr %6, align 8, !dbg !372
  %24578 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24579 = load double, ptr %24578, align 8, !dbg !372
  %24580 = load double, ptr %24576, align 16, !dbg !372
  %24581 = getelementptr inbounds { double, double }, ptr %24576, i32 0, i32 1, !dbg !372
  %24582 = load double, ptr %24581, align 8, !dbg !372
  %24583 = call { double, double } @make_vec(double %24577, double %24579, double %24580, double %24582), !dbg !372
  %24584 = extractvalue { double, double } %24583, 0, !dbg !372
  store double %24584, ptr %16, align 8, !dbg !372
  %24585 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24586 = extractvalue { double, double } %24583, 1, !dbg !372
  store double %24586, ptr %24585, align 8, !dbg !372
  %24587 = load i32, ptr %10, align 4, !dbg !373
  %24588 = add nsw i32 %24587, 1, !dbg !374
  %24589 = sext i32 %24588 to i64, !dbg !375
  %24590 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24589, !dbg !375
  %24591 = load double, ptr %6, align 8, !dbg !376
  %24592 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24593 = load double, ptr %24592, align 8, !dbg !376
  %24594 = load double, ptr %24590, align 16, !dbg !376
  %24595 = getelementptr inbounds { double, double }, ptr %24590, i32 0, i32 1, !dbg !376
  %24596 = load double, ptr %24595, align 8, !dbg !376
  %24597 = call { double, double } @make_vec(double %24591, double %24593, double %24594, double %24596), !dbg !376
  %24598 = extractvalue { double, double } %24597, 0, !dbg !376
  store double %24598, ptr %17, align 8, !dbg !376
  %24599 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24600 = extractvalue { double, double } %24597, 1, !dbg !376
  store double %24600, ptr %24599, align 8, !dbg !376
  %24601 = load double, ptr %16, align 8, !dbg !377
  %24602 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24603 = load double, ptr %24602, align 8, !dbg !377
  %24604 = load double, ptr %17, align 8, !dbg !377
  %24605 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24606 = load double, ptr %24605, align 8, !dbg !377
  %24607 = call double @cross(double %24601, double %24603, double %24604, double %24606), !dbg !377
  %24608 = load i32, ptr %10, align 4, !dbg !378
  %24609 = sext i32 %24608 to i64, !dbg !379
  %24610 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24609, !dbg !379
  %24611 = load double, ptr %6, align 8, !dbg !380
  %24612 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24613 = load double, ptr %24612, align 8, !dbg !380
  %24614 = load double, ptr %24610, align 16, !dbg !380
  %24615 = getelementptr inbounds { double, double }, ptr %24610, i32 0, i32 1, !dbg !380
  %24616 = load double, ptr %24615, align 8, !dbg !380
  %24617 = call { double, double } @make_vec(double %24611, double %24613, double %24614, double %24616), !dbg !380
  %24618 = extractvalue { double, double } %24617, 0, !dbg !380
  store double %24618, ptr %18, align 8, !dbg !380
  %24619 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24620 = extractvalue { double, double } %24617, 1, !dbg !380
  store double %24620, ptr %24619, align 8, !dbg !380
  %24621 = load i32, ptr %10, align 4, !dbg !381
  %24622 = add nsw i32 %24621, 1, !dbg !382
  %24623 = sext i32 %24622 to i64, !dbg !383
  %24624 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24623, !dbg !383
  %24625 = load double, ptr %6, align 8, !dbg !384
  %24626 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24627 = load double, ptr %24626, align 8, !dbg !384
  %24628 = load double, ptr %24624, align 16, !dbg !384
  %24629 = getelementptr inbounds { double, double }, ptr %24624, i32 0, i32 1, !dbg !384
  %24630 = load double, ptr %24629, align 8, !dbg !384
  %24631 = call { double, double } @make_vec(double %24625, double %24627, double %24628, double %24630), !dbg !384
  %24632 = extractvalue { double, double } %24631, 0, !dbg !384
  store double %24632, ptr %19, align 8, !dbg !384
  %24633 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24634 = extractvalue { double, double } %24631, 1, !dbg !384
  store double %24634, ptr %24633, align 8, !dbg !384
  %24635 = load double, ptr %18, align 8, !dbg !385
  %24636 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24637 = load double, ptr %24636, align 8, !dbg !385
  %24638 = load double, ptr %19, align 8, !dbg !385
  %24639 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24640 = load double, ptr %24639, align 8, !dbg !385
  %24641 = call double @dot(double %24635, double %24637, double %24638, double %24640), !dbg !385
  %24642 = call double @atan2(double noundef %24607, double noundef %24641) #6, !dbg !386
  store double %24642, ptr %13, align 8, !dbg !387
  %24643 = load double, ptr %13, align 8, !dbg !388
  %24644 = load double, ptr %14, align 8, !dbg !389
  %24645 = fadd double %24644, %24643, !dbg !389
  store double %24645, ptr %14, align 8, !dbg !389
  %24646 = load double, ptr %13, align 8, !dbg !390
  %24647 = fsub double %24646, 0x400921FB54442D18, !dbg !392
  %24648 = call double @llvm.fabs.f64(double %24647), !dbg !393
  %24649 = fcmp ole double %24648, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24649, label %14330, label %24650, !dbg !395

24650:                                            ; preds = %24573
  %24651 = load double, ptr %13, align 8, !dbg !396
  %24652 = fadd double %24651, 0x400921FB54442D18, !dbg !397
  %24653 = call double @llvm.fabs.f64(double %24652), !dbg !398
  %24654 = fcmp ole double %24653, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24654, label %14330, label %24655, !dbg !400

24655:                                            ; preds = %24650
  br label %24656, !dbg !403

24656:                                            ; preds = %24655
  %24657 = load i32, ptr %10, align 4, !dbg !404
  %24658 = add nsw i32 %24657, 1, !dbg !404
  store i32 %24658, ptr %10, align 4, !dbg !404
  %24659 = load i32, ptr %10, align 4, !dbg !364
  %24660 = load i32, ptr %8, align 4, !dbg !366
  %24661 = icmp slt i32 %24659, %24660, !dbg !367
  br i1 %24661, label %24662, label %48422, !dbg !368

24662:                                            ; preds = %24656
  %24663 = load i32, ptr %10, align 4, !dbg !369
  %24664 = sext i32 %24663 to i64, !dbg !371
  %24665 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24664, !dbg !371
  %24666 = load double, ptr %6, align 8, !dbg !372
  %24667 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24668 = load double, ptr %24667, align 8, !dbg !372
  %24669 = load double, ptr %24665, align 16, !dbg !372
  %24670 = getelementptr inbounds { double, double }, ptr %24665, i32 0, i32 1, !dbg !372
  %24671 = load double, ptr %24670, align 8, !dbg !372
  %24672 = call { double, double } @make_vec(double %24666, double %24668, double %24669, double %24671), !dbg !372
  %24673 = extractvalue { double, double } %24672, 0, !dbg !372
  store double %24673, ptr %16, align 8, !dbg !372
  %24674 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24675 = extractvalue { double, double } %24672, 1, !dbg !372
  store double %24675, ptr %24674, align 8, !dbg !372
  %24676 = load i32, ptr %10, align 4, !dbg !373
  %24677 = add nsw i32 %24676, 1, !dbg !374
  %24678 = sext i32 %24677 to i64, !dbg !375
  %24679 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24678, !dbg !375
  %24680 = load double, ptr %6, align 8, !dbg !376
  %24681 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24682 = load double, ptr %24681, align 8, !dbg !376
  %24683 = load double, ptr %24679, align 16, !dbg !376
  %24684 = getelementptr inbounds { double, double }, ptr %24679, i32 0, i32 1, !dbg !376
  %24685 = load double, ptr %24684, align 8, !dbg !376
  %24686 = call { double, double } @make_vec(double %24680, double %24682, double %24683, double %24685), !dbg !376
  %24687 = extractvalue { double, double } %24686, 0, !dbg !376
  store double %24687, ptr %17, align 8, !dbg !376
  %24688 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24689 = extractvalue { double, double } %24686, 1, !dbg !376
  store double %24689, ptr %24688, align 8, !dbg !376
  %24690 = load double, ptr %16, align 8, !dbg !377
  %24691 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24692 = load double, ptr %24691, align 8, !dbg !377
  %24693 = load double, ptr %17, align 8, !dbg !377
  %24694 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24695 = load double, ptr %24694, align 8, !dbg !377
  %24696 = call double @cross(double %24690, double %24692, double %24693, double %24695), !dbg !377
  %24697 = load i32, ptr %10, align 4, !dbg !378
  %24698 = sext i32 %24697 to i64, !dbg !379
  %24699 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24698, !dbg !379
  %24700 = load double, ptr %6, align 8, !dbg !380
  %24701 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24702 = load double, ptr %24701, align 8, !dbg !380
  %24703 = load double, ptr %24699, align 16, !dbg !380
  %24704 = getelementptr inbounds { double, double }, ptr %24699, i32 0, i32 1, !dbg !380
  %24705 = load double, ptr %24704, align 8, !dbg !380
  %24706 = call { double, double } @make_vec(double %24700, double %24702, double %24703, double %24705), !dbg !380
  %24707 = extractvalue { double, double } %24706, 0, !dbg !380
  store double %24707, ptr %18, align 8, !dbg !380
  %24708 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24709 = extractvalue { double, double } %24706, 1, !dbg !380
  store double %24709, ptr %24708, align 8, !dbg !380
  %24710 = load i32, ptr %10, align 4, !dbg !381
  %24711 = add nsw i32 %24710, 1, !dbg !382
  %24712 = sext i32 %24711 to i64, !dbg !383
  %24713 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24712, !dbg !383
  %24714 = load double, ptr %6, align 8, !dbg !384
  %24715 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24716 = load double, ptr %24715, align 8, !dbg !384
  %24717 = load double, ptr %24713, align 16, !dbg !384
  %24718 = getelementptr inbounds { double, double }, ptr %24713, i32 0, i32 1, !dbg !384
  %24719 = load double, ptr %24718, align 8, !dbg !384
  %24720 = call { double, double } @make_vec(double %24714, double %24716, double %24717, double %24719), !dbg !384
  %24721 = extractvalue { double, double } %24720, 0, !dbg !384
  store double %24721, ptr %19, align 8, !dbg !384
  %24722 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24723 = extractvalue { double, double } %24720, 1, !dbg !384
  store double %24723, ptr %24722, align 8, !dbg !384
  %24724 = load double, ptr %18, align 8, !dbg !385
  %24725 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24726 = load double, ptr %24725, align 8, !dbg !385
  %24727 = load double, ptr %19, align 8, !dbg !385
  %24728 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24729 = load double, ptr %24728, align 8, !dbg !385
  %24730 = call double @dot(double %24724, double %24726, double %24727, double %24729), !dbg !385
  %24731 = call double @atan2(double noundef %24696, double noundef %24730) #6, !dbg !386
  store double %24731, ptr %13, align 8, !dbg !387
  %24732 = load double, ptr %13, align 8, !dbg !388
  %24733 = load double, ptr %14, align 8, !dbg !389
  %24734 = fadd double %24733, %24732, !dbg !389
  store double %24734, ptr %14, align 8, !dbg !389
  %24735 = load double, ptr %13, align 8, !dbg !390
  %24736 = fsub double %24735, 0x400921FB54442D18, !dbg !392
  %24737 = call double @llvm.fabs.f64(double %24736), !dbg !393
  %24738 = fcmp ole double %24737, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24738, label %14330, label %24739, !dbg !395

24739:                                            ; preds = %24662
  %24740 = load double, ptr %13, align 8, !dbg !396
  %24741 = fadd double %24740, 0x400921FB54442D18, !dbg !397
  %24742 = call double @llvm.fabs.f64(double %24741), !dbg !398
  %24743 = fcmp ole double %24742, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24743, label %14330, label %24744, !dbg !400

24744:                                            ; preds = %24739
  br label %24745, !dbg !403

24745:                                            ; preds = %24744
  %24746 = load i32, ptr %10, align 4, !dbg !404
  %24747 = add nsw i32 %24746, 1, !dbg !404
  store i32 %24747, ptr %10, align 4, !dbg !404
  %24748 = load i32, ptr %10, align 4, !dbg !364
  %24749 = load i32, ptr %8, align 4, !dbg !366
  %24750 = icmp slt i32 %24748, %24749, !dbg !367
  br i1 %24750, label %24751, label %48422, !dbg !368

24751:                                            ; preds = %24745
  %24752 = load i32, ptr %10, align 4, !dbg !369
  %24753 = sext i32 %24752 to i64, !dbg !371
  %24754 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24753, !dbg !371
  %24755 = load double, ptr %6, align 8, !dbg !372
  %24756 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24757 = load double, ptr %24756, align 8, !dbg !372
  %24758 = load double, ptr %24754, align 16, !dbg !372
  %24759 = getelementptr inbounds { double, double }, ptr %24754, i32 0, i32 1, !dbg !372
  %24760 = load double, ptr %24759, align 8, !dbg !372
  %24761 = call { double, double } @make_vec(double %24755, double %24757, double %24758, double %24760), !dbg !372
  %24762 = extractvalue { double, double } %24761, 0, !dbg !372
  store double %24762, ptr %16, align 8, !dbg !372
  %24763 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24764 = extractvalue { double, double } %24761, 1, !dbg !372
  store double %24764, ptr %24763, align 8, !dbg !372
  %24765 = load i32, ptr %10, align 4, !dbg !373
  %24766 = add nsw i32 %24765, 1, !dbg !374
  %24767 = sext i32 %24766 to i64, !dbg !375
  %24768 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24767, !dbg !375
  %24769 = load double, ptr %6, align 8, !dbg !376
  %24770 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24771 = load double, ptr %24770, align 8, !dbg !376
  %24772 = load double, ptr %24768, align 16, !dbg !376
  %24773 = getelementptr inbounds { double, double }, ptr %24768, i32 0, i32 1, !dbg !376
  %24774 = load double, ptr %24773, align 8, !dbg !376
  %24775 = call { double, double } @make_vec(double %24769, double %24771, double %24772, double %24774), !dbg !376
  %24776 = extractvalue { double, double } %24775, 0, !dbg !376
  store double %24776, ptr %17, align 8, !dbg !376
  %24777 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24778 = extractvalue { double, double } %24775, 1, !dbg !376
  store double %24778, ptr %24777, align 8, !dbg !376
  %24779 = load double, ptr %16, align 8, !dbg !377
  %24780 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24781 = load double, ptr %24780, align 8, !dbg !377
  %24782 = load double, ptr %17, align 8, !dbg !377
  %24783 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24784 = load double, ptr %24783, align 8, !dbg !377
  %24785 = call double @cross(double %24779, double %24781, double %24782, double %24784), !dbg !377
  %24786 = load i32, ptr %10, align 4, !dbg !378
  %24787 = sext i32 %24786 to i64, !dbg !379
  %24788 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24787, !dbg !379
  %24789 = load double, ptr %6, align 8, !dbg !380
  %24790 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24791 = load double, ptr %24790, align 8, !dbg !380
  %24792 = load double, ptr %24788, align 16, !dbg !380
  %24793 = getelementptr inbounds { double, double }, ptr %24788, i32 0, i32 1, !dbg !380
  %24794 = load double, ptr %24793, align 8, !dbg !380
  %24795 = call { double, double } @make_vec(double %24789, double %24791, double %24792, double %24794), !dbg !380
  %24796 = extractvalue { double, double } %24795, 0, !dbg !380
  store double %24796, ptr %18, align 8, !dbg !380
  %24797 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24798 = extractvalue { double, double } %24795, 1, !dbg !380
  store double %24798, ptr %24797, align 8, !dbg !380
  %24799 = load i32, ptr %10, align 4, !dbg !381
  %24800 = add nsw i32 %24799, 1, !dbg !382
  %24801 = sext i32 %24800 to i64, !dbg !383
  %24802 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24801, !dbg !383
  %24803 = load double, ptr %6, align 8, !dbg !384
  %24804 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24805 = load double, ptr %24804, align 8, !dbg !384
  %24806 = load double, ptr %24802, align 16, !dbg !384
  %24807 = getelementptr inbounds { double, double }, ptr %24802, i32 0, i32 1, !dbg !384
  %24808 = load double, ptr %24807, align 8, !dbg !384
  %24809 = call { double, double } @make_vec(double %24803, double %24805, double %24806, double %24808), !dbg !384
  %24810 = extractvalue { double, double } %24809, 0, !dbg !384
  store double %24810, ptr %19, align 8, !dbg !384
  %24811 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24812 = extractvalue { double, double } %24809, 1, !dbg !384
  store double %24812, ptr %24811, align 8, !dbg !384
  %24813 = load double, ptr %18, align 8, !dbg !385
  %24814 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24815 = load double, ptr %24814, align 8, !dbg !385
  %24816 = load double, ptr %19, align 8, !dbg !385
  %24817 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24818 = load double, ptr %24817, align 8, !dbg !385
  %24819 = call double @dot(double %24813, double %24815, double %24816, double %24818), !dbg !385
  %24820 = call double @atan2(double noundef %24785, double noundef %24819) #6, !dbg !386
  store double %24820, ptr %13, align 8, !dbg !387
  %24821 = load double, ptr %13, align 8, !dbg !388
  %24822 = load double, ptr %14, align 8, !dbg !389
  %24823 = fadd double %24822, %24821, !dbg !389
  store double %24823, ptr %14, align 8, !dbg !389
  %24824 = load double, ptr %13, align 8, !dbg !390
  %24825 = fsub double %24824, 0x400921FB54442D18, !dbg !392
  %24826 = call double @llvm.fabs.f64(double %24825), !dbg !393
  %24827 = fcmp ole double %24826, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24827, label %14330, label %24828, !dbg !395

24828:                                            ; preds = %24751
  %24829 = load double, ptr %13, align 8, !dbg !396
  %24830 = fadd double %24829, 0x400921FB54442D18, !dbg !397
  %24831 = call double @llvm.fabs.f64(double %24830), !dbg !398
  %24832 = fcmp ole double %24831, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24832, label %14330, label %24833, !dbg !400

24833:                                            ; preds = %24828
  br label %24834, !dbg !403

24834:                                            ; preds = %24833
  %24835 = load i32, ptr %10, align 4, !dbg !404
  %24836 = add nsw i32 %24835, 1, !dbg !404
  store i32 %24836, ptr %10, align 4, !dbg !404
  %24837 = load i32, ptr %10, align 4, !dbg !364
  %24838 = load i32, ptr %8, align 4, !dbg !366
  %24839 = icmp slt i32 %24837, %24838, !dbg !367
  br i1 %24839, label %24840, label %48422, !dbg !368

24840:                                            ; preds = %24834
  %24841 = load i32, ptr %10, align 4, !dbg !369
  %24842 = sext i32 %24841 to i64, !dbg !371
  %24843 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24842, !dbg !371
  %24844 = load double, ptr %6, align 8, !dbg !372
  %24845 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24846 = load double, ptr %24845, align 8, !dbg !372
  %24847 = load double, ptr %24843, align 16, !dbg !372
  %24848 = getelementptr inbounds { double, double }, ptr %24843, i32 0, i32 1, !dbg !372
  %24849 = load double, ptr %24848, align 8, !dbg !372
  %24850 = call { double, double } @make_vec(double %24844, double %24846, double %24847, double %24849), !dbg !372
  %24851 = extractvalue { double, double } %24850, 0, !dbg !372
  store double %24851, ptr %16, align 8, !dbg !372
  %24852 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24853 = extractvalue { double, double } %24850, 1, !dbg !372
  store double %24853, ptr %24852, align 8, !dbg !372
  %24854 = load i32, ptr %10, align 4, !dbg !373
  %24855 = add nsw i32 %24854, 1, !dbg !374
  %24856 = sext i32 %24855 to i64, !dbg !375
  %24857 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24856, !dbg !375
  %24858 = load double, ptr %6, align 8, !dbg !376
  %24859 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24860 = load double, ptr %24859, align 8, !dbg !376
  %24861 = load double, ptr %24857, align 16, !dbg !376
  %24862 = getelementptr inbounds { double, double }, ptr %24857, i32 0, i32 1, !dbg !376
  %24863 = load double, ptr %24862, align 8, !dbg !376
  %24864 = call { double, double } @make_vec(double %24858, double %24860, double %24861, double %24863), !dbg !376
  %24865 = extractvalue { double, double } %24864, 0, !dbg !376
  store double %24865, ptr %17, align 8, !dbg !376
  %24866 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24867 = extractvalue { double, double } %24864, 1, !dbg !376
  store double %24867, ptr %24866, align 8, !dbg !376
  %24868 = load double, ptr %16, align 8, !dbg !377
  %24869 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24870 = load double, ptr %24869, align 8, !dbg !377
  %24871 = load double, ptr %17, align 8, !dbg !377
  %24872 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24873 = load double, ptr %24872, align 8, !dbg !377
  %24874 = call double @cross(double %24868, double %24870, double %24871, double %24873), !dbg !377
  %24875 = load i32, ptr %10, align 4, !dbg !378
  %24876 = sext i32 %24875 to i64, !dbg !379
  %24877 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24876, !dbg !379
  %24878 = load double, ptr %6, align 8, !dbg !380
  %24879 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24880 = load double, ptr %24879, align 8, !dbg !380
  %24881 = load double, ptr %24877, align 16, !dbg !380
  %24882 = getelementptr inbounds { double, double }, ptr %24877, i32 0, i32 1, !dbg !380
  %24883 = load double, ptr %24882, align 8, !dbg !380
  %24884 = call { double, double } @make_vec(double %24878, double %24880, double %24881, double %24883), !dbg !380
  %24885 = extractvalue { double, double } %24884, 0, !dbg !380
  store double %24885, ptr %18, align 8, !dbg !380
  %24886 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24887 = extractvalue { double, double } %24884, 1, !dbg !380
  store double %24887, ptr %24886, align 8, !dbg !380
  %24888 = load i32, ptr %10, align 4, !dbg !381
  %24889 = add nsw i32 %24888, 1, !dbg !382
  %24890 = sext i32 %24889 to i64, !dbg !383
  %24891 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24890, !dbg !383
  %24892 = load double, ptr %6, align 8, !dbg !384
  %24893 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24894 = load double, ptr %24893, align 8, !dbg !384
  %24895 = load double, ptr %24891, align 16, !dbg !384
  %24896 = getelementptr inbounds { double, double }, ptr %24891, i32 0, i32 1, !dbg !384
  %24897 = load double, ptr %24896, align 8, !dbg !384
  %24898 = call { double, double } @make_vec(double %24892, double %24894, double %24895, double %24897), !dbg !384
  %24899 = extractvalue { double, double } %24898, 0, !dbg !384
  store double %24899, ptr %19, align 8, !dbg !384
  %24900 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24901 = extractvalue { double, double } %24898, 1, !dbg !384
  store double %24901, ptr %24900, align 8, !dbg !384
  %24902 = load double, ptr %18, align 8, !dbg !385
  %24903 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24904 = load double, ptr %24903, align 8, !dbg !385
  %24905 = load double, ptr %19, align 8, !dbg !385
  %24906 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24907 = load double, ptr %24906, align 8, !dbg !385
  %24908 = call double @dot(double %24902, double %24904, double %24905, double %24907), !dbg !385
  %24909 = call double @atan2(double noundef %24874, double noundef %24908) #6, !dbg !386
  store double %24909, ptr %13, align 8, !dbg !387
  %24910 = load double, ptr %13, align 8, !dbg !388
  %24911 = load double, ptr %14, align 8, !dbg !389
  %24912 = fadd double %24911, %24910, !dbg !389
  store double %24912, ptr %14, align 8, !dbg !389
  %24913 = load double, ptr %13, align 8, !dbg !390
  %24914 = fsub double %24913, 0x400921FB54442D18, !dbg !392
  %24915 = call double @llvm.fabs.f64(double %24914), !dbg !393
  %24916 = fcmp ole double %24915, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %24916, label %14330, label %24917, !dbg !395

24917:                                            ; preds = %24840
  %24918 = load double, ptr %13, align 8, !dbg !396
  %24919 = fadd double %24918, 0x400921FB54442D18, !dbg !397
  %24920 = call double @llvm.fabs.f64(double %24919), !dbg !398
  %24921 = fcmp ole double %24920, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %24921, label %14330, label %24922, !dbg !400

24922:                                            ; preds = %24917
  br label %24923, !dbg !403

24923:                                            ; preds = %24922
  %24924 = load i32, ptr %10, align 4, !dbg !404
  %24925 = add nsw i32 %24924, 1, !dbg !404
  store i32 %24925, ptr %10, align 4, !dbg !404
  %24926 = load i32, ptr %10, align 4, !dbg !364
  %24927 = load i32, ptr %8, align 4, !dbg !366
  %24928 = icmp slt i32 %24926, %24927, !dbg !367
  br i1 %24928, label %24929, label %48422, !dbg !368

24929:                                            ; preds = %24923
  %24930 = load i32, ptr %10, align 4, !dbg !369
  %24931 = sext i32 %24930 to i64, !dbg !371
  %24932 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24931, !dbg !371
  %24933 = load double, ptr %6, align 8, !dbg !372
  %24934 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %24935 = load double, ptr %24934, align 8, !dbg !372
  %24936 = load double, ptr %24932, align 16, !dbg !372
  %24937 = getelementptr inbounds { double, double }, ptr %24932, i32 0, i32 1, !dbg !372
  %24938 = load double, ptr %24937, align 8, !dbg !372
  %24939 = call { double, double } @make_vec(double %24933, double %24935, double %24936, double %24938), !dbg !372
  %24940 = extractvalue { double, double } %24939, 0, !dbg !372
  store double %24940, ptr %16, align 8, !dbg !372
  %24941 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %24942 = extractvalue { double, double } %24939, 1, !dbg !372
  store double %24942, ptr %24941, align 8, !dbg !372
  %24943 = load i32, ptr %10, align 4, !dbg !373
  %24944 = add nsw i32 %24943, 1, !dbg !374
  %24945 = sext i32 %24944 to i64, !dbg !375
  %24946 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24945, !dbg !375
  %24947 = load double, ptr %6, align 8, !dbg !376
  %24948 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %24949 = load double, ptr %24948, align 8, !dbg !376
  %24950 = load double, ptr %24946, align 16, !dbg !376
  %24951 = getelementptr inbounds { double, double }, ptr %24946, i32 0, i32 1, !dbg !376
  %24952 = load double, ptr %24951, align 8, !dbg !376
  %24953 = call { double, double } @make_vec(double %24947, double %24949, double %24950, double %24952), !dbg !376
  %24954 = extractvalue { double, double } %24953, 0, !dbg !376
  store double %24954, ptr %17, align 8, !dbg !376
  %24955 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %24956 = extractvalue { double, double } %24953, 1, !dbg !376
  store double %24956, ptr %24955, align 8, !dbg !376
  %24957 = load double, ptr %16, align 8, !dbg !377
  %24958 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %24959 = load double, ptr %24958, align 8, !dbg !377
  %24960 = load double, ptr %17, align 8, !dbg !377
  %24961 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %24962 = load double, ptr %24961, align 8, !dbg !377
  %24963 = call double @cross(double %24957, double %24959, double %24960, double %24962), !dbg !377
  %24964 = load i32, ptr %10, align 4, !dbg !378
  %24965 = sext i32 %24964 to i64, !dbg !379
  %24966 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24965, !dbg !379
  %24967 = load double, ptr %6, align 8, !dbg !380
  %24968 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %24969 = load double, ptr %24968, align 8, !dbg !380
  %24970 = load double, ptr %24966, align 16, !dbg !380
  %24971 = getelementptr inbounds { double, double }, ptr %24966, i32 0, i32 1, !dbg !380
  %24972 = load double, ptr %24971, align 8, !dbg !380
  %24973 = call { double, double } @make_vec(double %24967, double %24969, double %24970, double %24972), !dbg !380
  %24974 = extractvalue { double, double } %24973, 0, !dbg !380
  store double %24974, ptr %18, align 8, !dbg !380
  %24975 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %24976 = extractvalue { double, double } %24973, 1, !dbg !380
  store double %24976, ptr %24975, align 8, !dbg !380
  %24977 = load i32, ptr %10, align 4, !dbg !381
  %24978 = add nsw i32 %24977, 1, !dbg !382
  %24979 = sext i32 %24978 to i64, !dbg !383
  %24980 = getelementptr inbounds %struct.POINT, ptr %26, i64 %24979, !dbg !383
  %24981 = load double, ptr %6, align 8, !dbg !384
  %24982 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %24983 = load double, ptr %24982, align 8, !dbg !384
  %24984 = load double, ptr %24980, align 16, !dbg !384
  %24985 = getelementptr inbounds { double, double }, ptr %24980, i32 0, i32 1, !dbg !384
  %24986 = load double, ptr %24985, align 8, !dbg !384
  %24987 = call { double, double } @make_vec(double %24981, double %24983, double %24984, double %24986), !dbg !384
  %24988 = extractvalue { double, double } %24987, 0, !dbg !384
  store double %24988, ptr %19, align 8, !dbg !384
  %24989 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %24990 = extractvalue { double, double } %24987, 1, !dbg !384
  store double %24990, ptr %24989, align 8, !dbg !384
  %24991 = load double, ptr %18, align 8, !dbg !385
  %24992 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %24993 = load double, ptr %24992, align 8, !dbg !385
  %24994 = load double, ptr %19, align 8, !dbg !385
  %24995 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %24996 = load double, ptr %24995, align 8, !dbg !385
  %24997 = call double @dot(double %24991, double %24993, double %24994, double %24996), !dbg !385
  %24998 = call double @atan2(double noundef %24963, double noundef %24997) #6, !dbg !386
  store double %24998, ptr %13, align 8, !dbg !387
  %24999 = load double, ptr %13, align 8, !dbg !388
  %25000 = load double, ptr %14, align 8, !dbg !389
  %25001 = fadd double %25000, %24999, !dbg !389
  store double %25001, ptr %14, align 8, !dbg !389
  %25002 = load double, ptr %13, align 8, !dbg !390
  %25003 = fsub double %25002, 0x400921FB54442D18, !dbg !392
  %25004 = call double @llvm.fabs.f64(double %25003), !dbg !393
  %25005 = fcmp ole double %25004, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25005, label %14330, label %25006, !dbg !395

25006:                                            ; preds = %24929
  %25007 = load double, ptr %13, align 8, !dbg !396
  %25008 = fadd double %25007, 0x400921FB54442D18, !dbg !397
  %25009 = call double @llvm.fabs.f64(double %25008), !dbg !398
  %25010 = fcmp ole double %25009, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25010, label %14330, label %25011, !dbg !400

25011:                                            ; preds = %25006
  br label %25012, !dbg !403

25012:                                            ; preds = %25011
  %25013 = load i32, ptr %10, align 4, !dbg !404
  %25014 = add nsw i32 %25013, 1, !dbg !404
  store i32 %25014, ptr %10, align 4, !dbg !404
  %25015 = load i32, ptr %10, align 4, !dbg !364
  %25016 = load i32, ptr %8, align 4, !dbg !366
  %25017 = icmp slt i32 %25015, %25016, !dbg !367
  br i1 %25017, label %25018, label %48422, !dbg !368

25018:                                            ; preds = %25012
  %25019 = load i32, ptr %10, align 4, !dbg !369
  %25020 = sext i32 %25019 to i64, !dbg !371
  %25021 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25020, !dbg !371
  %25022 = load double, ptr %6, align 8, !dbg !372
  %25023 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25024 = load double, ptr %25023, align 8, !dbg !372
  %25025 = load double, ptr %25021, align 16, !dbg !372
  %25026 = getelementptr inbounds { double, double }, ptr %25021, i32 0, i32 1, !dbg !372
  %25027 = load double, ptr %25026, align 8, !dbg !372
  %25028 = call { double, double } @make_vec(double %25022, double %25024, double %25025, double %25027), !dbg !372
  %25029 = extractvalue { double, double } %25028, 0, !dbg !372
  store double %25029, ptr %16, align 8, !dbg !372
  %25030 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25031 = extractvalue { double, double } %25028, 1, !dbg !372
  store double %25031, ptr %25030, align 8, !dbg !372
  %25032 = load i32, ptr %10, align 4, !dbg !373
  %25033 = add nsw i32 %25032, 1, !dbg !374
  %25034 = sext i32 %25033 to i64, !dbg !375
  %25035 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25034, !dbg !375
  %25036 = load double, ptr %6, align 8, !dbg !376
  %25037 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25038 = load double, ptr %25037, align 8, !dbg !376
  %25039 = load double, ptr %25035, align 16, !dbg !376
  %25040 = getelementptr inbounds { double, double }, ptr %25035, i32 0, i32 1, !dbg !376
  %25041 = load double, ptr %25040, align 8, !dbg !376
  %25042 = call { double, double } @make_vec(double %25036, double %25038, double %25039, double %25041), !dbg !376
  %25043 = extractvalue { double, double } %25042, 0, !dbg !376
  store double %25043, ptr %17, align 8, !dbg !376
  %25044 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25045 = extractvalue { double, double } %25042, 1, !dbg !376
  store double %25045, ptr %25044, align 8, !dbg !376
  %25046 = load double, ptr %16, align 8, !dbg !377
  %25047 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25048 = load double, ptr %25047, align 8, !dbg !377
  %25049 = load double, ptr %17, align 8, !dbg !377
  %25050 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25051 = load double, ptr %25050, align 8, !dbg !377
  %25052 = call double @cross(double %25046, double %25048, double %25049, double %25051), !dbg !377
  %25053 = load i32, ptr %10, align 4, !dbg !378
  %25054 = sext i32 %25053 to i64, !dbg !379
  %25055 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25054, !dbg !379
  %25056 = load double, ptr %6, align 8, !dbg !380
  %25057 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25058 = load double, ptr %25057, align 8, !dbg !380
  %25059 = load double, ptr %25055, align 16, !dbg !380
  %25060 = getelementptr inbounds { double, double }, ptr %25055, i32 0, i32 1, !dbg !380
  %25061 = load double, ptr %25060, align 8, !dbg !380
  %25062 = call { double, double } @make_vec(double %25056, double %25058, double %25059, double %25061), !dbg !380
  %25063 = extractvalue { double, double } %25062, 0, !dbg !380
  store double %25063, ptr %18, align 8, !dbg !380
  %25064 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25065 = extractvalue { double, double } %25062, 1, !dbg !380
  store double %25065, ptr %25064, align 8, !dbg !380
  %25066 = load i32, ptr %10, align 4, !dbg !381
  %25067 = add nsw i32 %25066, 1, !dbg !382
  %25068 = sext i32 %25067 to i64, !dbg !383
  %25069 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25068, !dbg !383
  %25070 = load double, ptr %6, align 8, !dbg !384
  %25071 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25072 = load double, ptr %25071, align 8, !dbg !384
  %25073 = load double, ptr %25069, align 16, !dbg !384
  %25074 = getelementptr inbounds { double, double }, ptr %25069, i32 0, i32 1, !dbg !384
  %25075 = load double, ptr %25074, align 8, !dbg !384
  %25076 = call { double, double } @make_vec(double %25070, double %25072, double %25073, double %25075), !dbg !384
  %25077 = extractvalue { double, double } %25076, 0, !dbg !384
  store double %25077, ptr %19, align 8, !dbg !384
  %25078 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25079 = extractvalue { double, double } %25076, 1, !dbg !384
  store double %25079, ptr %25078, align 8, !dbg !384
  %25080 = load double, ptr %18, align 8, !dbg !385
  %25081 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25082 = load double, ptr %25081, align 8, !dbg !385
  %25083 = load double, ptr %19, align 8, !dbg !385
  %25084 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25085 = load double, ptr %25084, align 8, !dbg !385
  %25086 = call double @dot(double %25080, double %25082, double %25083, double %25085), !dbg !385
  %25087 = call double @atan2(double noundef %25052, double noundef %25086) #6, !dbg !386
  store double %25087, ptr %13, align 8, !dbg !387
  %25088 = load double, ptr %13, align 8, !dbg !388
  %25089 = load double, ptr %14, align 8, !dbg !389
  %25090 = fadd double %25089, %25088, !dbg !389
  store double %25090, ptr %14, align 8, !dbg !389
  %25091 = load double, ptr %13, align 8, !dbg !390
  %25092 = fsub double %25091, 0x400921FB54442D18, !dbg !392
  %25093 = call double @llvm.fabs.f64(double %25092), !dbg !393
  %25094 = fcmp ole double %25093, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25094, label %14330, label %25095, !dbg !395

25095:                                            ; preds = %25018
  %25096 = load double, ptr %13, align 8, !dbg !396
  %25097 = fadd double %25096, 0x400921FB54442D18, !dbg !397
  %25098 = call double @llvm.fabs.f64(double %25097), !dbg !398
  %25099 = fcmp ole double %25098, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25099, label %14330, label %25100, !dbg !400

25100:                                            ; preds = %25095
  br label %25101, !dbg !403

25101:                                            ; preds = %25100
  %25102 = load i32, ptr %10, align 4, !dbg !404
  %25103 = add nsw i32 %25102, 1, !dbg !404
  store i32 %25103, ptr %10, align 4, !dbg !404
  %25104 = load i32, ptr %10, align 4, !dbg !364
  %25105 = load i32, ptr %8, align 4, !dbg !366
  %25106 = icmp slt i32 %25104, %25105, !dbg !367
  br i1 %25106, label %25107, label %48422, !dbg !368

25107:                                            ; preds = %25101
  %25108 = load i32, ptr %10, align 4, !dbg !369
  %25109 = sext i32 %25108 to i64, !dbg !371
  %25110 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25109, !dbg !371
  %25111 = load double, ptr %6, align 8, !dbg !372
  %25112 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25113 = load double, ptr %25112, align 8, !dbg !372
  %25114 = load double, ptr %25110, align 16, !dbg !372
  %25115 = getelementptr inbounds { double, double }, ptr %25110, i32 0, i32 1, !dbg !372
  %25116 = load double, ptr %25115, align 8, !dbg !372
  %25117 = call { double, double } @make_vec(double %25111, double %25113, double %25114, double %25116), !dbg !372
  %25118 = extractvalue { double, double } %25117, 0, !dbg !372
  store double %25118, ptr %16, align 8, !dbg !372
  %25119 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25120 = extractvalue { double, double } %25117, 1, !dbg !372
  store double %25120, ptr %25119, align 8, !dbg !372
  %25121 = load i32, ptr %10, align 4, !dbg !373
  %25122 = add nsw i32 %25121, 1, !dbg !374
  %25123 = sext i32 %25122 to i64, !dbg !375
  %25124 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25123, !dbg !375
  %25125 = load double, ptr %6, align 8, !dbg !376
  %25126 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25127 = load double, ptr %25126, align 8, !dbg !376
  %25128 = load double, ptr %25124, align 16, !dbg !376
  %25129 = getelementptr inbounds { double, double }, ptr %25124, i32 0, i32 1, !dbg !376
  %25130 = load double, ptr %25129, align 8, !dbg !376
  %25131 = call { double, double } @make_vec(double %25125, double %25127, double %25128, double %25130), !dbg !376
  %25132 = extractvalue { double, double } %25131, 0, !dbg !376
  store double %25132, ptr %17, align 8, !dbg !376
  %25133 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25134 = extractvalue { double, double } %25131, 1, !dbg !376
  store double %25134, ptr %25133, align 8, !dbg !376
  %25135 = load double, ptr %16, align 8, !dbg !377
  %25136 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25137 = load double, ptr %25136, align 8, !dbg !377
  %25138 = load double, ptr %17, align 8, !dbg !377
  %25139 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25140 = load double, ptr %25139, align 8, !dbg !377
  %25141 = call double @cross(double %25135, double %25137, double %25138, double %25140), !dbg !377
  %25142 = load i32, ptr %10, align 4, !dbg !378
  %25143 = sext i32 %25142 to i64, !dbg !379
  %25144 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25143, !dbg !379
  %25145 = load double, ptr %6, align 8, !dbg !380
  %25146 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25147 = load double, ptr %25146, align 8, !dbg !380
  %25148 = load double, ptr %25144, align 16, !dbg !380
  %25149 = getelementptr inbounds { double, double }, ptr %25144, i32 0, i32 1, !dbg !380
  %25150 = load double, ptr %25149, align 8, !dbg !380
  %25151 = call { double, double } @make_vec(double %25145, double %25147, double %25148, double %25150), !dbg !380
  %25152 = extractvalue { double, double } %25151, 0, !dbg !380
  store double %25152, ptr %18, align 8, !dbg !380
  %25153 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25154 = extractvalue { double, double } %25151, 1, !dbg !380
  store double %25154, ptr %25153, align 8, !dbg !380
  %25155 = load i32, ptr %10, align 4, !dbg !381
  %25156 = add nsw i32 %25155, 1, !dbg !382
  %25157 = sext i32 %25156 to i64, !dbg !383
  %25158 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25157, !dbg !383
  %25159 = load double, ptr %6, align 8, !dbg !384
  %25160 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25161 = load double, ptr %25160, align 8, !dbg !384
  %25162 = load double, ptr %25158, align 16, !dbg !384
  %25163 = getelementptr inbounds { double, double }, ptr %25158, i32 0, i32 1, !dbg !384
  %25164 = load double, ptr %25163, align 8, !dbg !384
  %25165 = call { double, double } @make_vec(double %25159, double %25161, double %25162, double %25164), !dbg !384
  %25166 = extractvalue { double, double } %25165, 0, !dbg !384
  store double %25166, ptr %19, align 8, !dbg !384
  %25167 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25168 = extractvalue { double, double } %25165, 1, !dbg !384
  store double %25168, ptr %25167, align 8, !dbg !384
  %25169 = load double, ptr %18, align 8, !dbg !385
  %25170 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25171 = load double, ptr %25170, align 8, !dbg !385
  %25172 = load double, ptr %19, align 8, !dbg !385
  %25173 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25174 = load double, ptr %25173, align 8, !dbg !385
  %25175 = call double @dot(double %25169, double %25171, double %25172, double %25174), !dbg !385
  %25176 = call double @atan2(double noundef %25141, double noundef %25175) #6, !dbg !386
  store double %25176, ptr %13, align 8, !dbg !387
  %25177 = load double, ptr %13, align 8, !dbg !388
  %25178 = load double, ptr %14, align 8, !dbg !389
  %25179 = fadd double %25178, %25177, !dbg !389
  store double %25179, ptr %14, align 8, !dbg !389
  %25180 = load double, ptr %13, align 8, !dbg !390
  %25181 = fsub double %25180, 0x400921FB54442D18, !dbg !392
  %25182 = call double @llvm.fabs.f64(double %25181), !dbg !393
  %25183 = fcmp ole double %25182, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25183, label %14330, label %25184, !dbg !395

25184:                                            ; preds = %25107
  %25185 = load double, ptr %13, align 8, !dbg !396
  %25186 = fadd double %25185, 0x400921FB54442D18, !dbg !397
  %25187 = call double @llvm.fabs.f64(double %25186), !dbg !398
  %25188 = fcmp ole double %25187, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25188, label %14330, label %25189, !dbg !400

25189:                                            ; preds = %25184
  br label %25190, !dbg !403

25190:                                            ; preds = %25189
  %25191 = load i32, ptr %10, align 4, !dbg !404
  %25192 = add nsw i32 %25191, 1, !dbg !404
  store i32 %25192, ptr %10, align 4, !dbg !404
  %25193 = load i32, ptr %10, align 4, !dbg !364
  %25194 = load i32, ptr %8, align 4, !dbg !366
  %25195 = icmp slt i32 %25193, %25194, !dbg !367
  br i1 %25195, label %25196, label %48422, !dbg !368

25196:                                            ; preds = %25190
  %25197 = load i32, ptr %10, align 4, !dbg !369
  %25198 = sext i32 %25197 to i64, !dbg !371
  %25199 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25198, !dbg !371
  %25200 = load double, ptr %6, align 8, !dbg !372
  %25201 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25202 = load double, ptr %25201, align 8, !dbg !372
  %25203 = load double, ptr %25199, align 16, !dbg !372
  %25204 = getelementptr inbounds { double, double }, ptr %25199, i32 0, i32 1, !dbg !372
  %25205 = load double, ptr %25204, align 8, !dbg !372
  %25206 = call { double, double } @make_vec(double %25200, double %25202, double %25203, double %25205), !dbg !372
  %25207 = extractvalue { double, double } %25206, 0, !dbg !372
  store double %25207, ptr %16, align 8, !dbg !372
  %25208 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25209 = extractvalue { double, double } %25206, 1, !dbg !372
  store double %25209, ptr %25208, align 8, !dbg !372
  %25210 = load i32, ptr %10, align 4, !dbg !373
  %25211 = add nsw i32 %25210, 1, !dbg !374
  %25212 = sext i32 %25211 to i64, !dbg !375
  %25213 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25212, !dbg !375
  %25214 = load double, ptr %6, align 8, !dbg !376
  %25215 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25216 = load double, ptr %25215, align 8, !dbg !376
  %25217 = load double, ptr %25213, align 16, !dbg !376
  %25218 = getelementptr inbounds { double, double }, ptr %25213, i32 0, i32 1, !dbg !376
  %25219 = load double, ptr %25218, align 8, !dbg !376
  %25220 = call { double, double } @make_vec(double %25214, double %25216, double %25217, double %25219), !dbg !376
  %25221 = extractvalue { double, double } %25220, 0, !dbg !376
  store double %25221, ptr %17, align 8, !dbg !376
  %25222 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25223 = extractvalue { double, double } %25220, 1, !dbg !376
  store double %25223, ptr %25222, align 8, !dbg !376
  %25224 = load double, ptr %16, align 8, !dbg !377
  %25225 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25226 = load double, ptr %25225, align 8, !dbg !377
  %25227 = load double, ptr %17, align 8, !dbg !377
  %25228 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25229 = load double, ptr %25228, align 8, !dbg !377
  %25230 = call double @cross(double %25224, double %25226, double %25227, double %25229), !dbg !377
  %25231 = load i32, ptr %10, align 4, !dbg !378
  %25232 = sext i32 %25231 to i64, !dbg !379
  %25233 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25232, !dbg !379
  %25234 = load double, ptr %6, align 8, !dbg !380
  %25235 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25236 = load double, ptr %25235, align 8, !dbg !380
  %25237 = load double, ptr %25233, align 16, !dbg !380
  %25238 = getelementptr inbounds { double, double }, ptr %25233, i32 0, i32 1, !dbg !380
  %25239 = load double, ptr %25238, align 8, !dbg !380
  %25240 = call { double, double } @make_vec(double %25234, double %25236, double %25237, double %25239), !dbg !380
  %25241 = extractvalue { double, double } %25240, 0, !dbg !380
  store double %25241, ptr %18, align 8, !dbg !380
  %25242 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25243 = extractvalue { double, double } %25240, 1, !dbg !380
  store double %25243, ptr %25242, align 8, !dbg !380
  %25244 = load i32, ptr %10, align 4, !dbg !381
  %25245 = add nsw i32 %25244, 1, !dbg !382
  %25246 = sext i32 %25245 to i64, !dbg !383
  %25247 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25246, !dbg !383
  %25248 = load double, ptr %6, align 8, !dbg !384
  %25249 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25250 = load double, ptr %25249, align 8, !dbg !384
  %25251 = load double, ptr %25247, align 16, !dbg !384
  %25252 = getelementptr inbounds { double, double }, ptr %25247, i32 0, i32 1, !dbg !384
  %25253 = load double, ptr %25252, align 8, !dbg !384
  %25254 = call { double, double } @make_vec(double %25248, double %25250, double %25251, double %25253), !dbg !384
  %25255 = extractvalue { double, double } %25254, 0, !dbg !384
  store double %25255, ptr %19, align 8, !dbg !384
  %25256 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25257 = extractvalue { double, double } %25254, 1, !dbg !384
  store double %25257, ptr %25256, align 8, !dbg !384
  %25258 = load double, ptr %18, align 8, !dbg !385
  %25259 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25260 = load double, ptr %25259, align 8, !dbg !385
  %25261 = load double, ptr %19, align 8, !dbg !385
  %25262 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25263 = load double, ptr %25262, align 8, !dbg !385
  %25264 = call double @dot(double %25258, double %25260, double %25261, double %25263), !dbg !385
  %25265 = call double @atan2(double noundef %25230, double noundef %25264) #6, !dbg !386
  store double %25265, ptr %13, align 8, !dbg !387
  %25266 = load double, ptr %13, align 8, !dbg !388
  %25267 = load double, ptr %14, align 8, !dbg !389
  %25268 = fadd double %25267, %25266, !dbg !389
  store double %25268, ptr %14, align 8, !dbg !389
  %25269 = load double, ptr %13, align 8, !dbg !390
  %25270 = fsub double %25269, 0x400921FB54442D18, !dbg !392
  %25271 = call double @llvm.fabs.f64(double %25270), !dbg !393
  %25272 = fcmp ole double %25271, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25272, label %14330, label %25273, !dbg !395

25273:                                            ; preds = %25196
  %25274 = load double, ptr %13, align 8, !dbg !396
  %25275 = fadd double %25274, 0x400921FB54442D18, !dbg !397
  %25276 = call double @llvm.fabs.f64(double %25275), !dbg !398
  %25277 = fcmp ole double %25276, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25277, label %14330, label %25278, !dbg !400

25278:                                            ; preds = %25273
  br label %25279, !dbg !403

25279:                                            ; preds = %25278
  %25280 = load i32, ptr %10, align 4, !dbg !404
  %25281 = add nsw i32 %25280, 1, !dbg !404
  store i32 %25281, ptr %10, align 4, !dbg !404
  %25282 = load i32, ptr %10, align 4, !dbg !364
  %25283 = load i32, ptr %8, align 4, !dbg !366
  %25284 = icmp slt i32 %25282, %25283, !dbg !367
  br i1 %25284, label %25285, label %48422, !dbg !368

25285:                                            ; preds = %25279
  %25286 = load i32, ptr %10, align 4, !dbg !369
  %25287 = sext i32 %25286 to i64, !dbg !371
  %25288 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25287, !dbg !371
  %25289 = load double, ptr %6, align 8, !dbg !372
  %25290 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25291 = load double, ptr %25290, align 8, !dbg !372
  %25292 = load double, ptr %25288, align 16, !dbg !372
  %25293 = getelementptr inbounds { double, double }, ptr %25288, i32 0, i32 1, !dbg !372
  %25294 = load double, ptr %25293, align 8, !dbg !372
  %25295 = call { double, double } @make_vec(double %25289, double %25291, double %25292, double %25294), !dbg !372
  %25296 = extractvalue { double, double } %25295, 0, !dbg !372
  store double %25296, ptr %16, align 8, !dbg !372
  %25297 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25298 = extractvalue { double, double } %25295, 1, !dbg !372
  store double %25298, ptr %25297, align 8, !dbg !372
  %25299 = load i32, ptr %10, align 4, !dbg !373
  %25300 = add nsw i32 %25299, 1, !dbg !374
  %25301 = sext i32 %25300 to i64, !dbg !375
  %25302 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25301, !dbg !375
  %25303 = load double, ptr %6, align 8, !dbg !376
  %25304 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25305 = load double, ptr %25304, align 8, !dbg !376
  %25306 = load double, ptr %25302, align 16, !dbg !376
  %25307 = getelementptr inbounds { double, double }, ptr %25302, i32 0, i32 1, !dbg !376
  %25308 = load double, ptr %25307, align 8, !dbg !376
  %25309 = call { double, double } @make_vec(double %25303, double %25305, double %25306, double %25308), !dbg !376
  %25310 = extractvalue { double, double } %25309, 0, !dbg !376
  store double %25310, ptr %17, align 8, !dbg !376
  %25311 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25312 = extractvalue { double, double } %25309, 1, !dbg !376
  store double %25312, ptr %25311, align 8, !dbg !376
  %25313 = load double, ptr %16, align 8, !dbg !377
  %25314 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25315 = load double, ptr %25314, align 8, !dbg !377
  %25316 = load double, ptr %17, align 8, !dbg !377
  %25317 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25318 = load double, ptr %25317, align 8, !dbg !377
  %25319 = call double @cross(double %25313, double %25315, double %25316, double %25318), !dbg !377
  %25320 = load i32, ptr %10, align 4, !dbg !378
  %25321 = sext i32 %25320 to i64, !dbg !379
  %25322 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25321, !dbg !379
  %25323 = load double, ptr %6, align 8, !dbg !380
  %25324 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25325 = load double, ptr %25324, align 8, !dbg !380
  %25326 = load double, ptr %25322, align 16, !dbg !380
  %25327 = getelementptr inbounds { double, double }, ptr %25322, i32 0, i32 1, !dbg !380
  %25328 = load double, ptr %25327, align 8, !dbg !380
  %25329 = call { double, double } @make_vec(double %25323, double %25325, double %25326, double %25328), !dbg !380
  %25330 = extractvalue { double, double } %25329, 0, !dbg !380
  store double %25330, ptr %18, align 8, !dbg !380
  %25331 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25332 = extractvalue { double, double } %25329, 1, !dbg !380
  store double %25332, ptr %25331, align 8, !dbg !380
  %25333 = load i32, ptr %10, align 4, !dbg !381
  %25334 = add nsw i32 %25333, 1, !dbg !382
  %25335 = sext i32 %25334 to i64, !dbg !383
  %25336 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25335, !dbg !383
  %25337 = load double, ptr %6, align 8, !dbg !384
  %25338 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25339 = load double, ptr %25338, align 8, !dbg !384
  %25340 = load double, ptr %25336, align 16, !dbg !384
  %25341 = getelementptr inbounds { double, double }, ptr %25336, i32 0, i32 1, !dbg !384
  %25342 = load double, ptr %25341, align 8, !dbg !384
  %25343 = call { double, double } @make_vec(double %25337, double %25339, double %25340, double %25342), !dbg !384
  %25344 = extractvalue { double, double } %25343, 0, !dbg !384
  store double %25344, ptr %19, align 8, !dbg !384
  %25345 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25346 = extractvalue { double, double } %25343, 1, !dbg !384
  store double %25346, ptr %25345, align 8, !dbg !384
  %25347 = load double, ptr %18, align 8, !dbg !385
  %25348 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25349 = load double, ptr %25348, align 8, !dbg !385
  %25350 = load double, ptr %19, align 8, !dbg !385
  %25351 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25352 = load double, ptr %25351, align 8, !dbg !385
  %25353 = call double @dot(double %25347, double %25349, double %25350, double %25352), !dbg !385
  %25354 = call double @atan2(double noundef %25319, double noundef %25353) #6, !dbg !386
  store double %25354, ptr %13, align 8, !dbg !387
  %25355 = load double, ptr %13, align 8, !dbg !388
  %25356 = load double, ptr %14, align 8, !dbg !389
  %25357 = fadd double %25356, %25355, !dbg !389
  store double %25357, ptr %14, align 8, !dbg !389
  %25358 = load double, ptr %13, align 8, !dbg !390
  %25359 = fsub double %25358, 0x400921FB54442D18, !dbg !392
  %25360 = call double @llvm.fabs.f64(double %25359), !dbg !393
  %25361 = fcmp ole double %25360, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25361, label %14330, label %25362, !dbg !395

25362:                                            ; preds = %25285
  %25363 = load double, ptr %13, align 8, !dbg !396
  %25364 = fadd double %25363, 0x400921FB54442D18, !dbg !397
  %25365 = call double @llvm.fabs.f64(double %25364), !dbg !398
  %25366 = fcmp ole double %25365, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25366, label %14330, label %25367, !dbg !400

25367:                                            ; preds = %25362
  br label %25368, !dbg !403

25368:                                            ; preds = %25367
  %25369 = load i32, ptr %10, align 4, !dbg !404
  %25370 = add nsw i32 %25369, 1, !dbg !404
  store i32 %25370, ptr %10, align 4, !dbg !404
  %25371 = load i32, ptr %10, align 4, !dbg !364
  %25372 = load i32, ptr %8, align 4, !dbg !366
  %25373 = icmp slt i32 %25371, %25372, !dbg !367
  br i1 %25373, label %25374, label %48422, !dbg !368

25374:                                            ; preds = %25368
  %25375 = load i32, ptr %10, align 4, !dbg !369
  %25376 = sext i32 %25375 to i64, !dbg !371
  %25377 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25376, !dbg !371
  %25378 = load double, ptr %6, align 8, !dbg !372
  %25379 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25380 = load double, ptr %25379, align 8, !dbg !372
  %25381 = load double, ptr %25377, align 16, !dbg !372
  %25382 = getelementptr inbounds { double, double }, ptr %25377, i32 0, i32 1, !dbg !372
  %25383 = load double, ptr %25382, align 8, !dbg !372
  %25384 = call { double, double } @make_vec(double %25378, double %25380, double %25381, double %25383), !dbg !372
  %25385 = extractvalue { double, double } %25384, 0, !dbg !372
  store double %25385, ptr %16, align 8, !dbg !372
  %25386 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25387 = extractvalue { double, double } %25384, 1, !dbg !372
  store double %25387, ptr %25386, align 8, !dbg !372
  %25388 = load i32, ptr %10, align 4, !dbg !373
  %25389 = add nsw i32 %25388, 1, !dbg !374
  %25390 = sext i32 %25389 to i64, !dbg !375
  %25391 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25390, !dbg !375
  %25392 = load double, ptr %6, align 8, !dbg !376
  %25393 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25394 = load double, ptr %25393, align 8, !dbg !376
  %25395 = load double, ptr %25391, align 16, !dbg !376
  %25396 = getelementptr inbounds { double, double }, ptr %25391, i32 0, i32 1, !dbg !376
  %25397 = load double, ptr %25396, align 8, !dbg !376
  %25398 = call { double, double } @make_vec(double %25392, double %25394, double %25395, double %25397), !dbg !376
  %25399 = extractvalue { double, double } %25398, 0, !dbg !376
  store double %25399, ptr %17, align 8, !dbg !376
  %25400 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25401 = extractvalue { double, double } %25398, 1, !dbg !376
  store double %25401, ptr %25400, align 8, !dbg !376
  %25402 = load double, ptr %16, align 8, !dbg !377
  %25403 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25404 = load double, ptr %25403, align 8, !dbg !377
  %25405 = load double, ptr %17, align 8, !dbg !377
  %25406 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25407 = load double, ptr %25406, align 8, !dbg !377
  %25408 = call double @cross(double %25402, double %25404, double %25405, double %25407), !dbg !377
  %25409 = load i32, ptr %10, align 4, !dbg !378
  %25410 = sext i32 %25409 to i64, !dbg !379
  %25411 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25410, !dbg !379
  %25412 = load double, ptr %6, align 8, !dbg !380
  %25413 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25414 = load double, ptr %25413, align 8, !dbg !380
  %25415 = load double, ptr %25411, align 16, !dbg !380
  %25416 = getelementptr inbounds { double, double }, ptr %25411, i32 0, i32 1, !dbg !380
  %25417 = load double, ptr %25416, align 8, !dbg !380
  %25418 = call { double, double } @make_vec(double %25412, double %25414, double %25415, double %25417), !dbg !380
  %25419 = extractvalue { double, double } %25418, 0, !dbg !380
  store double %25419, ptr %18, align 8, !dbg !380
  %25420 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25421 = extractvalue { double, double } %25418, 1, !dbg !380
  store double %25421, ptr %25420, align 8, !dbg !380
  %25422 = load i32, ptr %10, align 4, !dbg !381
  %25423 = add nsw i32 %25422, 1, !dbg !382
  %25424 = sext i32 %25423 to i64, !dbg !383
  %25425 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25424, !dbg !383
  %25426 = load double, ptr %6, align 8, !dbg !384
  %25427 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25428 = load double, ptr %25427, align 8, !dbg !384
  %25429 = load double, ptr %25425, align 16, !dbg !384
  %25430 = getelementptr inbounds { double, double }, ptr %25425, i32 0, i32 1, !dbg !384
  %25431 = load double, ptr %25430, align 8, !dbg !384
  %25432 = call { double, double } @make_vec(double %25426, double %25428, double %25429, double %25431), !dbg !384
  %25433 = extractvalue { double, double } %25432, 0, !dbg !384
  store double %25433, ptr %19, align 8, !dbg !384
  %25434 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25435 = extractvalue { double, double } %25432, 1, !dbg !384
  store double %25435, ptr %25434, align 8, !dbg !384
  %25436 = load double, ptr %18, align 8, !dbg !385
  %25437 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25438 = load double, ptr %25437, align 8, !dbg !385
  %25439 = load double, ptr %19, align 8, !dbg !385
  %25440 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25441 = load double, ptr %25440, align 8, !dbg !385
  %25442 = call double @dot(double %25436, double %25438, double %25439, double %25441), !dbg !385
  %25443 = call double @atan2(double noundef %25408, double noundef %25442) #6, !dbg !386
  store double %25443, ptr %13, align 8, !dbg !387
  %25444 = load double, ptr %13, align 8, !dbg !388
  %25445 = load double, ptr %14, align 8, !dbg !389
  %25446 = fadd double %25445, %25444, !dbg !389
  store double %25446, ptr %14, align 8, !dbg !389
  %25447 = load double, ptr %13, align 8, !dbg !390
  %25448 = fsub double %25447, 0x400921FB54442D18, !dbg !392
  %25449 = call double @llvm.fabs.f64(double %25448), !dbg !393
  %25450 = fcmp ole double %25449, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25450, label %14330, label %25451, !dbg !395

25451:                                            ; preds = %25374
  %25452 = load double, ptr %13, align 8, !dbg !396
  %25453 = fadd double %25452, 0x400921FB54442D18, !dbg !397
  %25454 = call double @llvm.fabs.f64(double %25453), !dbg !398
  %25455 = fcmp ole double %25454, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25455, label %14330, label %25456, !dbg !400

25456:                                            ; preds = %25451
  br label %25457, !dbg !403

25457:                                            ; preds = %25456
  %25458 = load i32, ptr %10, align 4, !dbg !404
  %25459 = add nsw i32 %25458, 1, !dbg !404
  store i32 %25459, ptr %10, align 4, !dbg !404
  %25460 = load i32, ptr %10, align 4, !dbg !364
  %25461 = load i32, ptr %8, align 4, !dbg !366
  %25462 = icmp slt i32 %25460, %25461, !dbg !367
  br i1 %25462, label %25463, label %48422, !dbg !368

25463:                                            ; preds = %25457
  %25464 = load i32, ptr %10, align 4, !dbg !369
  %25465 = sext i32 %25464 to i64, !dbg !371
  %25466 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25465, !dbg !371
  %25467 = load double, ptr %6, align 8, !dbg !372
  %25468 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25469 = load double, ptr %25468, align 8, !dbg !372
  %25470 = load double, ptr %25466, align 16, !dbg !372
  %25471 = getelementptr inbounds { double, double }, ptr %25466, i32 0, i32 1, !dbg !372
  %25472 = load double, ptr %25471, align 8, !dbg !372
  %25473 = call { double, double } @make_vec(double %25467, double %25469, double %25470, double %25472), !dbg !372
  %25474 = extractvalue { double, double } %25473, 0, !dbg !372
  store double %25474, ptr %16, align 8, !dbg !372
  %25475 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25476 = extractvalue { double, double } %25473, 1, !dbg !372
  store double %25476, ptr %25475, align 8, !dbg !372
  %25477 = load i32, ptr %10, align 4, !dbg !373
  %25478 = add nsw i32 %25477, 1, !dbg !374
  %25479 = sext i32 %25478 to i64, !dbg !375
  %25480 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25479, !dbg !375
  %25481 = load double, ptr %6, align 8, !dbg !376
  %25482 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25483 = load double, ptr %25482, align 8, !dbg !376
  %25484 = load double, ptr %25480, align 16, !dbg !376
  %25485 = getelementptr inbounds { double, double }, ptr %25480, i32 0, i32 1, !dbg !376
  %25486 = load double, ptr %25485, align 8, !dbg !376
  %25487 = call { double, double } @make_vec(double %25481, double %25483, double %25484, double %25486), !dbg !376
  %25488 = extractvalue { double, double } %25487, 0, !dbg !376
  store double %25488, ptr %17, align 8, !dbg !376
  %25489 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25490 = extractvalue { double, double } %25487, 1, !dbg !376
  store double %25490, ptr %25489, align 8, !dbg !376
  %25491 = load double, ptr %16, align 8, !dbg !377
  %25492 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25493 = load double, ptr %25492, align 8, !dbg !377
  %25494 = load double, ptr %17, align 8, !dbg !377
  %25495 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25496 = load double, ptr %25495, align 8, !dbg !377
  %25497 = call double @cross(double %25491, double %25493, double %25494, double %25496), !dbg !377
  %25498 = load i32, ptr %10, align 4, !dbg !378
  %25499 = sext i32 %25498 to i64, !dbg !379
  %25500 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25499, !dbg !379
  %25501 = load double, ptr %6, align 8, !dbg !380
  %25502 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25503 = load double, ptr %25502, align 8, !dbg !380
  %25504 = load double, ptr %25500, align 16, !dbg !380
  %25505 = getelementptr inbounds { double, double }, ptr %25500, i32 0, i32 1, !dbg !380
  %25506 = load double, ptr %25505, align 8, !dbg !380
  %25507 = call { double, double } @make_vec(double %25501, double %25503, double %25504, double %25506), !dbg !380
  %25508 = extractvalue { double, double } %25507, 0, !dbg !380
  store double %25508, ptr %18, align 8, !dbg !380
  %25509 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25510 = extractvalue { double, double } %25507, 1, !dbg !380
  store double %25510, ptr %25509, align 8, !dbg !380
  %25511 = load i32, ptr %10, align 4, !dbg !381
  %25512 = add nsw i32 %25511, 1, !dbg !382
  %25513 = sext i32 %25512 to i64, !dbg !383
  %25514 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25513, !dbg !383
  %25515 = load double, ptr %6, align 8, !dbg !384
  %25516 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25517 = load double, ptr %25516, align 8, !dbg !384
  %25518 = load double, ptr %25514, align 16, !dbg !384
  %25519 = getelementptr inbounds { double, double }, ptr %25514, i32 0, i32 1, !dbg !384
  %25520 = load double, ptr %25519, align 8, !dbg !384
  %25521 = call { double, double } @make_vec(double %25515, double %25517, double %25518, double %25520), !dbg !384
  %25522 = extractvalue { double, double } %25521, 0, !dbg !384
  store double %25522, ptr %19, align 8, !dbg !384
  %25523 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25524 = extractvalue { double, double } %25521, 1, !dbg !384
  store double %25524, ptr %25523, align 8, !dbg !384
  %25525 = load double, ptr %18, align 8, !dbg !385
  %25526 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25527 = load double, ptr %25526, align 8, !dbg !385
  %25528 = load double, ptr %19, align 8, !dbg !385
  %25529 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25530 = load double, ptr %25529, align 8, !dbg !385
  %25531 = call double @dot(double %25525, double %25527, double %25528, double %25530), !dbg !385
  %25532 = call double @atan2(double noundef %25497, double noundef %25531) #6, !dbg !386
  store double %25532, ptr %13, align 8, !dbg !387
  %25533 = load double, ptr %13, align 8, !dbg !388
  %25534 = load double, ptr %14, align 8, !dbg !389
  %25535 = fadd double %25534, %25533, !dbg !389
  store double %25535, ptr %14, align 8, !dbg !389
  %25536 = load double, ptr %13, align 8, !dbg !390
  %25537 = fsub double %25536, 0x400921FB54442D18, !dbg !392
  %25538 = call double @llvm.fabs.f64(double %25537), !dbg !393
  %25539 = fcmp ole double %25538, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25539, label %14330, label %25540, !dbg !395

25540:                                            ; preds = %25463
  %25541 = load double, ptr %13, align 8, !dbg !396
  %25542 = fadd double %25541, 0x400921FB54442D18, !dbg !397
  %25543 = call double @llvm.fabs.f64(double %25542), !dbg !398
  %25544 = fcmp ole double %25543, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25544, label %14330, label %25545, !dbg !400

25545:                                            ; preds = %25540
  br label %25546, !dbg !403

25546:                                            ; preds = %25545
  %25547 = load i32, ptr %10, align 4, !dbg !404
  %25548 = add nsw i32 %25547, 1, !dbg !404
  store i32 %25548, ptr %10, align 4, !dbg !404
  %25549 = load i32, ptr %10, align 4, !dbg !364
  %25550 = load i32, ptr %8, align 4, !dbg !366
  %25551 = icmp slt i32 %25549, %25550, !dbg !367
  br i1 %25551, label %25552, label %48422, !dbg !368

25552:                                            ; preds = %25546
  %25553 = load i32, ptr %10, align 4, !dbg !369
  %25554 = sext i32 %25553 to i64, !dbg !371
  %25555 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25554, !dbg !371
  %25556 = load double, ptr %6, align 8, !dbg !372
  %25557 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25558 = load double, ptr %25557, align 8, !dbg !372
  %25559 = load double, ptr %25555, align 16, !dbg !372
  %25560 = getelementptr inbounds { double, double }, ptr %25555, i32 0, i32 1, !dbg !372
  %25561 = load double, ptr %25560, align 8, !dbg !372
  %25562 = call { double, double } @make_vec(double %25556, double %25558, double %25559, double %25561), !dbg !372
  %25563 = extractvalue { double, double } %25562, 0, !dbg !372
  store double %25563, ptr %16, align 8, !dbg !372
  %25564 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25565 = extractvalue { double, double } %25562, 1, !dbg !372
  store double %25565, ptr %25564, align 8, !dbg !372
  %25566 = load i32, ptr %10, align 4, !dbg !373
  %25567 = add nsw i32 %25566, 1, !dbg !374
  %25568 = sext i32 %25567 to i64, !dbg !375
  %25569 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25568, !dbg !375
  %25570 = load double, ptr %6, align 8, !dbg !376
  %25571 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25572 = load double, ptr %25571, align 8, !dbg !376
  %25573 = load double, ptr %25569, align 16, !dbg !376
  %25574 = getelementptr inbounds { double, double }, ptr %25569, i32 0, i32 1, !dbg !376
  %25575 = load double, ptr %25574, align 8, !dbg !376
  %25576 = call { double, double } @make_vec(double %25570, double %25572, double %25573, double %25575), !dbg !376
  %25577 = extractvalue { double, double } %25576, 0, !dbg !376
  store double %25577, ptr %17, align 8, !dbg !376
  %25578 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25579 = extractvalue { double, double } %25576, 1, !dbg !376
  store double %25579, ptr %25578, align 8, !dbg !376
  %25580 = load double, ptr %16, align 8, !dbg !377
  %25581 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25582 = load double, ptr %25581, align 8, !dbg !377
  %25583 = load double, ptr %17, align 8, !dbg !377
  %25584 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25585 = load double, ptr %25584, align 8, !dbg !377
  %25586 = call double @cross(double %25580, double %25582, double %25583, double %25585), !dbg !377
  %25587 = load i32, ptr %10, align 4, !dbg !378
  %25588 = sext i32 %25587 to i64, !dbg !379
  %25589 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25588, !dbg !379
  %25590 = load double, ptr %6, align 8, !dbg !380
  %25591 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25592 = load double, ptr %25591, align 8, !dbg !380
  %25593 = load double, ptr %25589, align 16, !dbg !380
  %25594 = getelementptr inbounds { double, double }, ptr %25589, i32 0, i32 1, !dbg !380
  %25595 = load double, ptr %25594, align 8, !dbg !380
  %25596 = call { double, double } @make_vec(double %25590, double %25592, double %25593, double %25595), !dbg !380
  %25597 = extractvalue { double, double } %25596, 0, !dbg !380
  store double %25597, ptr %18, align 8, !dbg !380
  %25598 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25599 = extractvalue { double, double } %25596, 1, !dbg !380
  store double %25599, ptr %25598, align 8, !dbg !380
  %25600 = load i32, ptr %10, align 4, !dbg !381
  %25601 = add nsw i32 %25600, 1, !dbg !382
  %25602 = sext i32 %25601 to i64, !dbg !383
  %25603 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25602, !dbg !383
  %25604 = load double, ptr %6, align 8, !dbg !384
  %25605 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25606 = load double, ptr %25605, align 8, !dbg !384
  %25607 = load double, ptr %25603, align 16, !dbg !384
  %25608 = getelementptr inbounds { double, double }, ptr %25603, i32 0, i32 1, !dbg !384
  %25609 = load double, ptr %25608, align 8, !dbg !384
  %25610 = call { double, double } @make_vec(double %25604, double %25606, double %25607, double %25609), !dbg !384
  %25611 = extractvalue { double, double } %25610, 0, !dbg !384
  store double %25611, ptr %19, align 8, !dbg !384
  %25612 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25613 = extractvalue { double, double } %25610, 1, !dbg !384
  store double %25613, ptr %25612, align 8, !dbg !384
  %25614 = load double, ptr %18, align 8, !dbg !385
  %25615 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25616 = load double, ptr %25615, align 8, !dbg !385
  %25617 = load double, ptr %19, align 8, !dbg !385
  %25618 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25619 = load double, ptr %25618, align 8, !dbg !385
  %25620 = call double @dot(double %25614, double %25616, double %25617, double %25619), !dbg !385
  %25621 = call double @atan2(double noundef %25586, double noundef %25620) #6, !dbg !386
  store double %25621, ptr %13, align 8, !dbg !387
  %25622 = load double, ptr %13, align 8, !dbg !388
  %25623 = load double, ptr %14, align 8, !dbg !389
  %25624 = fadd double %25623, %25622, !dbg !389
  store double %25624, ptr %14, align 8, !dbg !389
  %25625 = load double, ptr %13, align 8, !dbg !390
  %25626 = fsub double %25625, 0x400921FB54442D18, !dbg !392
  %25627 = call double @llvm.fabs.f64(double %25626), !dbg !393
  %25628 = fcmp ole double %25627, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25628, label %14330, label %25629, !dbg !395

25629:                                            ; preds = %25552
  %25630 = load double, ptr %13, align 8, !dbg !396
  %25631 = fadd double %25630, 0x400921FB54442D18, !dbg !397
  %25632 = call double @llvm.fabs.f64(double %25631), !dbg !398
  %25633 = fcmp ole double %25632, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25633, label %14330, label %25634, !dbg !400

25634:                                            ; preds = %25629
  br label %25635, !dbg !403

25635:                                            ; preds = %25634
  %25636 = load i32, ptr %10, align 4, !dbg !404
  %25637 = add nsw i32 %25636, 1, !dbg !404
  store i32 %25637, ptr %10, align 4, !dbg !404
  %25638 = load i32, ptr %10, align 4, !dbg !364
  %25639 = load i32, ptr %8, align 4, !dbg !366
  %25640 = icmp slt i32 %25638, %25639, !dbg !367
  br i1 %25640, label %25641, label %48422, !dbg !368

25641:                                            ; preds = %25635
  %25642 = load i32, ptr %10, align 4, !dbg !369
  %25643 = sext i32 %25642 to i64, !dbg !371
  %25644 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25643, !dbg !371
  %25645 = load double, ptr %6, align 8, !dbg !372
  %25646 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25647 = load double, ptr %25646, align 8, !dbg !372
  %25648 = load double, ptr %25644, align 16, !dbg !372
  %25649 = getelementptr inbounds { double, double }, ptr %25644, i32 0, i32 1, !dbg !372
  %25650 = load double, ptr %25649, align 8, !dbg !372
  %25651 = call { double, double } @make_vec(double %25645, double %25647, double %25648, double %25650), !dbg !372
  %25652 = extractvalue { double, double } %25651, 0, !dbg !372
  store double %25652, ptr %16, align 8, !dbg !372
  %25653 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25654 = extractvalue { double, double } %25651, 1, !dbg !372
  store double %25654, ptr %25653, align 8, !dbg !372
  %25655 = load i32, ptr %10, align 4, !dbg !373
  %25656 = add nsw i32 %25655, 1, !dbg !374
  %25657 = sext i32 %25656 to i64, !dbg !375
  %25658 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25657, !dbg !375
  %25659 = load double, ptr %6, align 8, !dbg !376
  %25660 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25661 = load double, ptr %25660, align 8, !dbg !376
  %25662 = load double, ptr %25658, align 16, !dbg !376
  %25663 = getelementptr inbounds { double, double }, ptr %25658, i32 0, i32 1, !dbg !376
  %25664 = load double, ptr %25663, align 8, !dbg !376
  %25665 = call { double, double } @make_vec(double %25659, double %25661, double %25662, double %25664), !dbg !376
  %25666 = extractvalue { double, double } %25665, 0, !dbg !376
  store double %25666, ptr %17, align 8, !dbg !376
  %25667 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25668 = extractvalue { double, double } %25665, 1, !dbg !376
  store double %25668, ptr %25667, align 8, !dbg !376
  %25669 = load double, ptr %16, align 8, !dbg !377
  %25670 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25671 = load double, ptr %25670, align 8, !dbg !377
  %25672 = load double, ptr %17, align 8, !dbg !377
  %25673 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25674 = load double, ptr %25673, align 8, !dbg !377
  %25675 = call double @cross(double %25669, double %25671, double %25672, double %25674), !dbg !377
  %25676 = load i32, ptr %10, align 4, !dbg !378
  %25677 = sext i32 %25676 to i64, !dbg !379
  %25678 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25677, !dbg !379
  %25679 = load double, ptr %6, align 8, !dbg !380
  %25680 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25681 = load double, ptr %25680, align 8, !dbg !380
  %25682 = load double, ptr %25678, align 16, !dbg !380
  %25683 = getelementptr inbounds { double, double }, ptr %25678, i32 0, i32 1, !dbg !380
  %25684 = load double, ptr %25683, align 8, !dbg !380
  %25685 = call { double, double } @make_vec(double %25679, double %25681, double %25682, double %25684), !dbg !380
  %25686 = extractvalue { double, double } %25685, 0, !dbg !380
  store double %25686, ptr %18, align 8, !dbg !380
  %25687 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25688 = extractvalue { double, double } %25685, 1, !dbg !380
  store double %25688, ptr %25687, align 8, !dbg !380
  %25689 = load i32, ptr %10, align 4, !dbg !381
  %25690 = add nsw i32 %25689, 1, !dbg !382
  %25691 = sext i32 %25690 to i64, !dbg !383
  %25692 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25691, !dbg !383
  %25693 = load double, ptr %6, align 8, !dbg !384
  %25694 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25695 = load double, ptr %25694, align 8, !dbg !384
  %25696 = load double, ptr %25692, align 16, !dbg !384
  %25697 = getelementptr inbounds { double, double }, ptr %25692, i32 0, i32 1, !dbg !384
  %25698 = load double, ptr %25697, align 8, !dbg !384
  %25699 = call { double, double } @make_vec(double %25693, double %25695, double %25696, double %25698), !dbg !384
  %25700 = extractvalue { double, double } %25699, 0, !dbg !384
  store double %25700, ptr %19, align 8, !dbg !384
  %25701 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25702 = extractvalue { double, double } %25699, 1, !dbg !384
  store double %25702, ptr %25701, align 8, !dbg !384
  %25703 = load double, ptr %18, align 8, !dbg !385
  %25704 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25705 = load double, ptr %25704, align 8, !dbg !385
  %25706 = load double, ptr %19, align 8, !dbg !385
  %25707 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25708 = load double, ptr %25707, align 8, !dbg !385
  %25709 = call double @dot(double %25703, double %25705, double %25706, double %25708), !dbg !385
  %25710 = call double @atan2(double noundef %25675, double noundef %25709) #6, !dbg !386
  store double %25710, ptr %13, align 8, !dbg !387
  %25711 = load double, ptr %13, align 8, !dbg !388
  %25712 = load double, ptr %14, align 8, !dbg !389
  %25713 = fadd double %25712, %25711, !dbg !389
  store double %25713, ptr %14, align 8, !dbg !389
  %25714 = load double, ptr %13, align 8, !dbg !390
  %25715 = fsub double %25714, 0x400921FB54442D18, !dbg !392
  %25716 = call double @llvm.fabs.f64(double %25715), !dbg !393
  %25717 = fcmp ole double %25716, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25717, label %14330, label %25718, !dbg !395

25718:                                            ; preds = %25641
  %25719 = load double, ptr %13, align 8, !dbg !396
  %25720 = fadd double %25719, 0x400921FB54442D18, !dbg !397
  %25721 = call double @llvm.fabs.f64(double %25720), !dbg !398
  %25722 = fcmp ole double %25721, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25722, label %14330, label %25723, !dbg !400

25723:                                            ; preds = %25718
  br label %25724, !dbg !403

25724:                                            ; preds = %25723
  %25725 = load i32, ptr %10, align 4, !dbg !404
  %25726 = add nsw i32 %25725, 1, !dbg !404
  store i32 %25726, ptr %10, align 4, !dbg !404
  %25727 = load i32, ptr %10, align 4, !dbg !364
  %25728 = load i32, ptr %8, align 4, !dbg !366
  %25729 = icmp slt i32 %25727, %25728, !dbg !367
  br i1 %25729, label %25730, label %48422, !dbg !368

25730:                                            ; preds = %25724
  %25731 = load i32, ptr %10, align 4, !dbg !369
  %25732 = sext i32 %25731 to i64, !dbg !371
  %25733 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25732, !dbg !371
  %25734 = load double, ptr %6, align 8, !dbg !372
  %25735 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25736 = load double, ptr %25735, align 8, !dbg !372
  %25737 = load double, ptr %25733, align 16, !dbg !372
  %25738 = getelementptr inbounds { double, double }, ptr %25733, i32 0, i32 1, !dbg !372
  %25739 = load double, ptr %25738, align 8, !dbg !372
  %25740 = call { double, double } @make_vec(double %25734, double %25736, double %25737, double %25739), !dbg !372
  %25741 = extractvalue { double, double } %25740, 0, !dbg !372
  store double %25741, ptr %16, align 8, !dbg !372
  %25742 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25743 = extractvalue { double, double } %25740, 1, !dbg !372
  store double %25743, ptr %25742, align 8, !dbg !372
  %25744 = load i32, ptr %10, align 4, !dbg !373
  %25745 = add nsw i32 %25744, 1, !dbg !374
  %25746 = sext i32 %25745 to i64, !dbg !375
  %25747 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25746, !dbg !375
  %25748 = load double, ptr %6, align 8, !dbg !376
  %25749 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25750 = load double, ptr %25749, align 8, !dbg !376
  %25751 = load double, ptr %25747, align 16, !dbg !376
  %25752 = getelementptr inbounds { double, double }, ptr %25747, i32 0, i32 1, !dbg !376
  %25753 = load double, ptr %25752, align 8, !dbg !376
  %25754 = call { double, double } @make_vec(double %25748, double %25750, double %25751, double %25753), !dbg !376
  %25755 = extractvalue { double, double } %25754, 0, !dbg !376
  store double %25755, ptr %17, align 8, !dbg !376
  %25756 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25757 = extractvalue { double, double } %25754, 1, !dbg !376
  store double %25757, ptr %25756, align 8, !dbg !376
  %25758 = load double, ptr %16, align 8, !dbg !377
  %25759 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25760 = load double, ptr %25759, align 8, !dbg !377
  %25761 = load double, ptr %17, align 8, !dbg !377
  %25762 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25763 = load double, ptr %25762, align 8, !dbg !377
  %25764 = call double @cross(double %25758, double %25760, double %25761, double %25763), !dbg !377
  %25765 = load i32, ptr %10, align 4, !dbg !378
  %25766 = sext i32 %25765 to i64, !dbg !379
  %25767 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25766, !dbg !379
  %25768 = load double, ptr %6, align 8, !dbg !380
  %25769 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25770 = load double, ptr %25769, align 8, !dbg !380
  %25771 = load double, ptr %25767, align 16, !dbg !380
  %25772 = getelementptr inbounds { double, double }, ptr %25767, i32 0, i32 1, !dbg !380
  %25773 = load double, ptr %25772, align 8, !dbg !380
  %25774 = call { double, double } @make_vec(double %25768, double %25770, double %25771, double %25773), !dbg !380
  %25775 = extractvalue { double, double } %25774, 0, !dbg !380
  store double %25775, ptr %18, align 8, !dbg !380
  %25776 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25777 = extractvalue { double, double } %25774, 1, !dbg !380
  store double %25777, ptr %25776, align 8, !dbg !380
  %25778 = load i32, ptr %10, align 4, !dbg !381
  %25779 = add nsw i32 %25778, 1, !dbg !382
  %25780 = sext i32 %25779 to i64, !dbg !383
  %25781 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25780, !dbg !383
  %25782 = load double, ptr %6, align 8, !dbg !384
  %25783 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25784 = load double, ptr %25783, align 8, !dbg !384
  %25785 = load double, ptr %25781, align 16, !dbg !384
  %25786 = getelementptr inbounds { double, double }, ptr %25781, i32 0, i32 1, !dbg !384
  %25787 = load double, ptr %25786, align 8, !dbg !384
  %25788 = call { double, double } @make_vec(double %25782, double %25784, double %25785, double %25787), !dbg !384
  %25789 = extractvalue { double, double } %25788, 0, !dbg !384
  store double %25789, ptr %19, align 8, !dbg !384
  %25790 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25791 = extractvalue { double, double } %25788, 1, !dbg !384
  store double %25791, ptr %25790, align 8, !dbg !384
  %25792 = load double, ptr %18, align 8, !dbg !385
  %25793 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25794 = load double, ptr %25793, align 8, !dbg !385
  %25795 = load double, ptr %19, align 8, !dbg !385
  %25796 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25797 = load double, ptr %25796, align 8, !dbg !385
  %25798 = call double @dot(double %25792, double %25794, double %25795, double %25797), !dbg !385
  %25799 = call double @atan2(double noundef %25764, double noundef %25798) #6, !dbg !386
  store double %25799, ptr %13, align 8, !dbg !387
  %25800 = load double, ptr %13, align 8, !dbg !388
  %25801 = load double, ptr %14, align 8, !dbg !389
  %25802 = fadd double %25801, %25800, !dbg !389
  store double %25802, ptr %14, align 8, !dbg !389
  %25803 = load double, ptr %13, align 8, !dbg !390
  %25804 = fsub double %25803, 0x400921FB54442D18, !dbg !392
  %25805 = call double @llvm.fabs.f64(double %25804), !dbg !393
  %25806 = fcmp ole double %25805, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25806, label %14330, label %25807, !dbg !395

25807:                                            ; preds = %25730
  %25808 = load double, ptr %13, align 8, !dbg !396
  %25809 = fadd double %25808, 0x400921FB54442D18, !dbg !397
  %25810 = call double @llvm.fabs.f64(double %25809), !dbg !398
  %25811 = fcmp ole double %25810, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25811, label %14330, label %25812, !dbg !400

25812:                                            ; preds = %25807
  br label %25813, !dbg !403

25813:                                            ; preds = %25812
  %25814 = load i32, ptr %10, align 4, !dbg !404
  %25815 = add nsw i32 %25814, 1, !dbg !404
  store i32 %25815, ptr %10, align 4, !dbg !404
  %25816 = load i32, ptr %10, align 4, !dbg !364
  %25817 = load i32, ptr %8, align 4, !dbg !366
  %25818 = icmp slt i32 %25816, %25817, !dbg !367
  br i1 %25818, label %25819, label %48422, !dbg !368

25819:                                            ; preds = %25813
  %25820 = load i32, ptr %10, align 4, !dbg !369
  %25821 = sext i32 %25820 to i64, !dbg !371
  %25822 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25821, !dbg !371
  %25823 = load double, ptr %6, align 8, !dbg !372
  %25824 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25825 = load double, ptr %25824, align 8, !dbg !372
  %25826 = load double, ptr %25822, align 16, !dbg !372
  %25827 = getelementptr inbounds { double, double }, ptr %25822, i32 0, i32 1, !dbg !372
  %25828 = load double, ptr %25827, align 8, !dbg !372
  %25829 = call { double, double } @make_vec(double %25823, double %25825, double %25826, double %25828), !dbg !372
  %25830 = extractvalue { double, double } %25829, 0, !dbg !372
  store double %25830, ptr %16, align 8, !dbg !372
  %25831 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25832 = extractvalue { double, double } %25829, 1, !dbg !372
  store double %25832, ptr %25831, align 8, !dbg !372
  %25833 = load i32, ptr %10, align 4, !dbg !373
  %25834 = add nsw i32 %25833, 1, !dbg !374
  %25835 = sext i32 %25834 to i64, !dbg !375
  %25836 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25835, !dbg !375
  %25837 = load double, ptr %6, align 8, !dbg !376
  %25838 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25839 = load double, ptr %25838, align 8, !dbg !376
  %25840 = load double, ptr %25836, align 16, !dbg !376
  %25841 = getelementptr inbounds { double, double }, ptr %25836, i32 0, i32 1, !dbg !376
  %25842 = load double, ptr %25841, align 8, !dbg !376
  %25843 = call { double, double } @make_vec(double %25837, double %25839, double %25840, double %25842), !dbg !376
  %25844 = extractvalue { double, double } %25843, 0, !dbg !376
  store double %25844, ptr %17, align 8, !dbg !376
  %25845 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25846 = extractvalue { double, double } %25843, 1, !dbg !376
  store double %25846, ptr %25845, align 8, !dbg !376
  %25847 = load double, ptr %16, align 8, !dbg !377
  %25848 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25849 = load double, ptr %25848, align 8, !dbg !377
  %25850 = load double, ptr %17, align 8, !dbg !377
  %25851 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25852 = load double, ptr %25851, align 8, !dbg !377
  %25853 = call double @cross(double %25847, double %25849, double %25850, double %25852), !dbg !377
  %25854 = load i32, ptr %10, align 4, !dbg !378
  %25855 = sext i32 %25854 to i64, !dbg !379
  %25856 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25855, !dbg !379
  %25857 = load double, ptr %6, align 8, !dbg !380
  %25858 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25859 = load double, ptr %25858, align 8, !dbg !380
  %25860 = load double, ptr %25856, align 16, !dbg !380
  %25861 = getelementptr inbounds { double, double }, ptr %25856, i32 0, i32 1, !dbg !380
  %25862 = load double, ptr %25861, align 8, !dbg !380
  %25863 = call { double, double } @make_vec(double %25857, double %25859, double %25860, double %25862), !dbg !380
  %25864 = extractvalue { double, double } %25863, 0, !dbg !380
  store double %25864, ptr %18, align 8, !dbg !380
  %25865 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25866 = extractvalue { double, double } %25863, 1, !dbg !380
  store double %25866, ptr %25865, align 8, !dbg !380
  %25867 = load i32, ptr %10, align 4, !dbg !381
  %25868 = add nsw i32 %25867, 1, !dbg !382
  %25869 = sext i32 %25868 to i64, !dbg !383
  %25870 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25869, !dbg !383
  %25871 = load double, ptr %6, align 8, !dbg !384
  %25872 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25873 = load double, ptr %25872, align 8, !dbg !384
  %25874 = load double, ptr %25870, align 16, !dbg !384
  %25875 = getelementptr inbounds { double, double }, ptr %25870, i32 0, i32 1, !dbg !384
  %25876 = load double, ptr %25875, align 8, !dbg !384
  %25877 = call { double, double } @make_vec(double %25871, double %25873, double %25874, double %25876), !dbg !384
  %25878 = extractvalue { double, double } %25877, 0, !dbg !384
  store double %25878, ptr %19, align 8, !dbg !384
  %25879 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25880 = extractvalue { double, double } %25877, 1, !dbg !384
  store double %25880, ptr %25879, align 8, !dbg !384
  %25881 = load double, ptr %18, align 8, !dbg !385
  %25882 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25883 = load double, ptr %25882, align 8, !dbg !385
  %25884 = load double, ptr %19, align 8, !dbg !385
  %25885 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25886 = load double, ptr %25885, align 8, !dbg !385
  %25887 = call double @dot(double %25881, double %25883, double %25884, double %25886), !dbg !385
  %25888 = call double @atan2(double noundef %25853, double noundef %25887) #6, !dbg !386
  store double %25888, ptr %13, align 8, !dbg !387
  %25889 = load double, ptr %13, align 8, !dbg !388
  %25890 = load double, ptr %14, align 8, !dbg !389
  %25891 = fadd double %25890, %25889, !dbg !389
  store double %25891, ptr %14, align 8, !dbg !389
  %25892 = load double, ptr %13, align 8, !dbg !390
  %25893 = fsub double %25892, 0x400921FB54442D18, !dbg !392
  %25894 = call double @llvm.fabs.f64(double %25893), !dbg !393
  %25895 = fcmp ole double %25894, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25895, label %14330, label %25896, !dbg !395

25896:                                            ; preds = %25819
  %25897 = load double, ptr %13, align 8, !dbg !396
  %25898 = fadd double %25897, 0x400921FB54442D18, !dbg !397
  %25899 = call double @llvm.fabs.f64(double %25898), !dbg !398
  %25900 = fcmp ole double %25899, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25900, label %14330, label %25901, !dbg !400

25901:                                            ; preds = %25896
  br label %25902, !dbg !403

25902:                                            ; preds = %25901
  %25903 = load i32, ptr %10, align 4, !dbg !404
  %25904 = add nsw i32 %25903, 1, !dbg !404
  store i32 %25904, ptr %10, align 4, !dbg !404
  %25905 = load i32, ptr %10, align 4, !dbg !364
  %25906 = load i32, ptr %8, align 4, !dbg !366
  %25907 = icmp slt i32 %25905, %25906, !dbg !367
  br i1 %25907, label %25908, label %48422, !dbg !368

25908:                                            ; preds = %25902
  %25909 = load i32, ptr %10, align 4, !dbg !369
  %25910 = sext i32 %25909 to i64, !dbg !371
  %25911 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25910, !dbg !371
  %25912 = load double, ptr %6, align 8, !dbg !372
  %25913 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %25914 = load double, ptr %25913, align 8, !dbg !372
  %25915 = load double, ptr %25911, align 16, !dbg !372
  %25916 = getelementptr inbounds { double, double }, ptr %25911, i32 0, i32 1, !dbg !372
  %25917 = load double, ptr %25916, align 8, !dbg !372
  %25918 = call { double, double } @make_vec(double %25912, double %25914, double %25915, double %25917), !dbg !372
  %25919 = extractvalue { double, double } %25918, 0, !dbg !372
  store double %25919, ptr %16, align 8, !dbg !372
  %25920 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %25921 = extractvalue { double, double } %25918, 1, !dbg !372
  store double %25921, ptr %25920, align 8, !dbg !372
  %25922 = load i32, ptr %10, align 4, !dbg !373
  %25923 = add nsw i32 %25922, 1, !dbg !374
  %25924 = sext i32 %25923 to i64, !dbg !375
  %25925 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25924, !dbg !375
  %25926 = load double, ptr %6, align 8, !dbg !376
  %25927 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %25928 = load double, ptr %25927, align 8, !dbg !376
  %25929 = load double, ptr %25925, align 16, !dbg !376
  %25930 = getelementptr inbounds { double, double }, ptr %25925, i32 0, i32 1, !dbg !376
  %25931 = load double, ptr %25930, align 8, !dbg !376
  %25932 = call { double, double } @make_vec(double %25926, double %25928, double %25929, double %25931), !dbg !376
  %25933 = extractvalue { double, double } %25932, 0, !dbg !376
  store double %25933, ptr %17, align 8, !dbg !376
  %25934 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %25935 = extractvalue { double, double } %25932, 1, !dbg !376
  store double %25935, ptr %25934, align 8, !dbg !376
  %25936 = load double, ptr %16, align 8, !dbg !377
  %25937 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %25938 = load double, ptr %25937, align 8, !dbg !377
  %25939 = load double, ptr %17, align 8, !dbg !377
  %25940 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %25941 = load double, ptr %25940, align 8, !dbg !377
  %25942 = call double @cross(double %25936, double %25938, double %25939, double %25941), !dbg !377
  %25943 = load i32, ptr %10, align 4, !dbg !378
  %25944 = sext i32 %25943 to i64, !dbg !379
  %25945 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25944, !dbg !379
  %25946 = load double, ptr %6, align 8, !dbg !380
  %25947 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %25948 = load double, ptr %25947, align 8, !dbg !380
  %25949 = load double, ptr %25945, align 16, !dbg !380
  %25950 = getelementptr inbounds { double, double }, ptr %25945, i32 0, i32 1, !dbg !380
  %25951 = load double, ptr %25950, align 8, !dbg !380
  %25952 = call { double, double } @make_vec(double %25946, double %25948, double %25949, double %25951), !dbg !380
  %25953 = extractvalue { double, double } %25952, 0, !dbg !380
  store double %25953, ptr %18, align 8, !dbg !380
  %25954 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %25955 = extractvalue { double, double } %25952, 1, !dbg !380
  store double %25955, ptr %25954, align 8, !dbg !380
  %25956 = load i32, ptr %10, align 4, !dbg !381
  %25957 = add nsw i32 %25956, 1, !dbg !382
  %25958 = sext i32 %25957 to i64, !dbg !383
  %25959 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25958, !dbg !383
  %25960 = load double, ptr %6, align 8, !dbg !384
  %25961 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %25962 = load double, ptr %25961, align 8, !dbg !384
  %25963 = load double, ptr %25959, align 16, !dbg !384
  %25964 = getelementptr inbounds { double, double }, ptr %25959, i32 0, i32 1, !dbg !384
  %25965 = load double, ptr %25964, align 8, !dbg !384
  %25966 = call { double, double } @make_vec(double %25960, double %25962, double %25963, double %25965), !dbg !384
  %25967 = extractvalue { double, double } %25966, 0, !dbg !384
  store double %25967, ptr %19, align 8, !dbg !384
  %25968 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %25969 = extractvalue { double, double } %25966, 1, !dbg !384
  store double %25969, ptr %25968, align 8, !dbg !384
  %25970 = load double, ptr %18, align 8, !dbg !385
  %25971 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %25972 = load double, ptr %25971, align 8, !dbg !385
  %25973 = load double, ptr %19, align 8, !dbg !385
  %25974 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %25975 = load double, ptr %25974, align 8, !dbg !385
  %25976 = call double @dot(double %25970, double %25972, double %25973, double %25975), !dbg !385
  %25977 = call double @atan2(double noundef %25942, double noundef %25976) #6, !dbg !386
  store double %25977, ptr %13, align 8, !dbg !387
  %25978 = load double, ptr %13, align 8, !dbg !388
  %25979 = load double, ptr %14, align 8, !dbg !389
  %25980 = fadd double %25979, %25978, !dbg !389
  store double %25980, ptr %14, align 8, !dbg !389
  %25981 = load double, ptr %13, align 8, !dbg !390
  %25982 = fsub double %25981, 0x400921FB54442D18, !dbg !392
  %25983 = call double @llvm.fabs.f64(double %25982), !dbg !393
  %25984 = fcmp ole double %25983, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %25984, label %14330, label %25985, !dbg !395

25985:                                            ; preds = %25908
  %25986 = load double, ptr %13, align 8, !dbg !396
  %25987 = fadd double %25986, 0x400921FB54442D18, !dbg !397
  %25988 = call double @llvm.fabs.f64(double %25987), !dbg !398
  %25989 = fcmp ole double %25988, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %25989, label %14330, label %25990, !dbg !400

25990:                                            ; preds = %25985
  br label %25991, !dbg !403

25991:                                            ; preds = %25990
  %25992 = load i32, ptr %10, align 4, !dbg !404
  %25993 = add nsw i32 %25992, 1, !dbg !404
  store i32 %25993, ptr %10, align 4, !dbg !404
  %25994 = load i32, ptr %10, align 4, !dbg !364
  %25995 = load i32, ptr %8, align 4, !dbg !366
  %25996 = icmp slt i32 %25994, %25995, !dbg !367
  br i1 %25996, label %25997, label %48422, !dbg !368

25997:                                            ; preds = %25991
  %25998 = load i32, ptr %10, align 4, !dbg !369
  %25999 = sext i32 %25998 to i64, !dbg !371
  %26000 = getelementptr inbounds %struct.POINT, ptr %26, i64 %25999, !dbg !371
  %26001 = load double, ptr %6, align 8, !dbg !372
  %26002 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26003 = load double, ptr %26002, align 8, !dbg !372
  %26004 = load double, ptr %26000, align 16, !dbg !372
  %26005 = getelementptr inbounds { double, double }, ptr %26000, i32 0, i32 1, !dbg !372
  %26006 = load double, ptr %26005, align 8, !dbg !372
  %26007 = call { double, double } @make_vec(double %26001, double %26003, double %26004, double %26006), !dbg !372
  %26008 = extractvalue { double, double } %26007, 0, !dbg !372
  store double %26008, ptr %16, align 8, !dbg !372
  %26009 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26010 = extractvalue { double, double } %26007, 1, !dbg !372
  store double %26010, ptr %26009, align 8, !dbg !372
  %26011 = load i32, ptr %10, align 4, !dbg !373
  %26012 = add nsw i32 %26011, 1, !dbg !374
  %26013 = sext i32 %26012 to i64, !dbg !375
  %26014 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26013, !dbg !375
  %26015 = load double, ptr %6, align 8, !dbg !376
  %26016 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26017 = load double, ptr %26016, align 8, !dbg !376
  %26018 = load double, ptr %26014, align 16, !dbg !376
  %26019 = getelementptr inbounds { double, double }, ptr %26014, i32 0, i32 1, !dbg !376
  %26020 = load double, ptr %26019, align 8, !dbg !376
  %26021 = call { double, double } @make_vec(double %26015, double %26017, double %26018, double %26020), !dbg !376
  %26022 = extractvalue { double, double } %26021, 0, !dbg !376
  store double %26022, ptr %17, align 8, !dbg !376
  %26023 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26024 = extractvalue { double, double } %26021, 1, !dbg !376
  store double %26024, ptr %26023, align 8, !dbg !376
  %26025 = load double, ptr %16, align 8, !dbg !377
  %26026 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26027 = load double, ptr %26026, align 8, !dbg !377
  %26028 = load double, ptr %17, align 8, !dbg !377
  %26029 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26030 = load double, ptr %26029, align 8, !dbg !377
  %26031 = call double @cross(double %26025, double %26027, double %26028, double %26030), !dbg !377
  %26032 = load i32, ptr %10, align 4, !dbg !378
  %26033 = sext i32 %26032 to i64, !dbg !379
  %26034 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26033, !dbg !379
  %26035 = load double, ptr %6, align 8, !dbg !380
  %26036 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26037 = load double, ptr %26036, align 8, !dbg !380
  %26038 = load double, ptr %26034, align 16, !dbg !380
  %26039 = getelementptr inbounds { double, double }, ptr %26034, i32 0, i32 1, !dbg !380
  %26040 = load double, ptr %26039, align 8, !dbg !380
  %26041 = call { double, double } @make_vec(double %26035, double %26037, double %26038, double %26040), !dbg !380
  %26042 = extractvalue { double, double } %26041, 0, !dbg !380
  store double %26042, ptr %18, align 8, !dbg !380
  %26043 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26044 = extractvalue { double, double } %26041, 1, !dbg !380
  store double %26044, ptr %26043, align 8, !dbg !380
  %26045 = load i32, ptr %10, align 4, !dbg !381
  %26046 = add nsw i32 %26045, 1, !dbg !382
  %26047 = sext i32 %26046 to i64, !dbg !383
  %26048 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26047, !dbg !383
  %26049 = load double, ptr %6, align 8, !dbg !384
  %26050 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26051 = load double, ptr %26050, align 8, !dbg !384
  %26052 = load double, ptr %26048, align 16, !dbg !384
  %26053 = getelementptr inbounds { double, double }, ptr %26048, i32 0, i32 1, !dbg !384
  %26054 = load double, ptr %26053, align 8, !dbg !384
  %26055 = call { double, double } @make_vec(double %26049, double %26051, double %26052, double %26054), !dbg !384
  %26056 = extractvalue { double, double } %26055, 0, !dbg !384
  store double %26056, ptr %19, align 8, !dbg !384
  %26057 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26058 = extractvalue { double, double } %26055, 1, !dbg !384
  store double %26058, ptr %26057, align 8, !dbg !384
  %26059 = load double, ptr %18, align 8, !dbg !385
  %26060 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26061 = load double, ptr %26060, align 8, !dbg !385
  %26062 = load double, ptr %19, align 8, !dbg !385
  %26063 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26064 = load double, ptr %26063, align 8, !dbg !385
  %26065 = call double @dot(double %26059, double %26061, double %26062, double %26064), !dbg !385
  %26066 = call double @atan2(double noundef %26031, double noundef %26065) #6, !dbg !386
  store double %26066, ptr %13, align 8, !dbg !387
  %26067 = load double, ptr %13, align 8, !dbg !388
  %26068 = load double, ptr %14, align 8, !dbg !389
  %26069 = fadd double %26068, %26067, !dbg !389
  store double %26069, ptr %14, align 8, !dbg !389
  %26070 = load double, ptr %13, align 8, !dbg !390
  %26071 = fsub double %26070, 0x400921FB54442D18, !dbg !392
  %26072 = call double @llvm.fabs.f64(double %26071), !dbg !393
  %26073 = fcmp ole double %26072, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26073, label %14330, label %26074, !dbg !395

26074:                                            ; preds = %25997
  %26075 = load double, ptr %13, align 8, !dbg !396
  %26076 = fadd double %26075, 0x400921FB54442D18, !dbg !397
  %26077 = call double @llvm.fabs.f64(double %26076), !dbg !398
  %26078 = fcmp ole double %26077, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26078, label %14330, label %26079, !dbg !400

26079:                                            ; preds = %26074
  br label %26080, !dbg !403

26080:                                            ; preds = %26079
  %26081 = load i32, ptr %10, align 4, !dbg !404
  %26082 = add nsw i32 %26081, 1, !dbg !404
  store i32 %26082, ptr %10, align 4, !dbg !404
  %26083 = load i32, ptr %10, align 4, !dbg !364
  %26084 = load i32, ptr %8, align 4, !dbg !366
  %26085 = icmp slt i32 %26083, %26084, !dbg !367
  br i1 %26085, label %26086, label %48422, !dbg !368

26086:                                            ; preds = %26080
  %26087 = load i32, ptr %10, align 4, !dbg !369
  %26088 = sext i32 %26087 to i64, !dbg !371
  %26089 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26088, !dbg !371
  %26090 = load double, ptr %6, align 8, !dbg !372
  %26091 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26092 = load double, ptr %26091, align 8, !dbg !372
  %26093 = load double, ptr %26089, align 16, !dbg !372
  %26094 = getelementptr inbounds { double, double }, ptr %26089, i32 0, i32 1, !dbg !372
  %26095 = load double, ptr %26094, align 8, !dbg !372
  %26096 = call { double, double } @make_vec(double %26090, double %26092, double %26093, double %26095), !dbg !372
  %26097 = extractvalue { double, double } %26096, 0, !dbg !372
  store double %26097, ptr %16, align 8, !dbg !372
  %26098 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26099 = extractvalue { double, double } %26096, 1, !dbg !372
  store double %26099, ptr %26098, align 8, !dbg !372
  %26100 = load i32, ptr %10, align 4, !dbg !373
  %26101 = add nsw i32 %26100, 1, !dbg !374
  %26102 = sext i32 %26101 to i64, !dbg !375
  %26103 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26102, !dbg !375
  %26104 = load double, ptr %6, align 8, !dbg !376
  %26105 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26106 = load double, ptr %26105, align 8, !dbg !376
  %26107 = load double, ptr %26103, align 16, !dbg !376
  %26108 = getelementptr inbounds { double, double }, ptr %26103, i32 0, i32 1, !dbg !376
  %26109 = load double, ptr %26108, align 8, !dbg !376
  %26110 = call { double, double } @make_vec(double %26104, double %26106, double %26107, double %26109), !dbg !376
  %26111 = extractvalue { double, double } %26110, 0, !dbg !376
  store double %26111, ptr %17, align 8, !dbg !376
  %26112 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26113 = extractvalue { double, double } %26110, 1, !dbg !376
  store double %26113, ptr %26112, align 8, !dbg !376
  %26114 = load double, ptr %16, align 8, !dbg !377
  %26115 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26116 = load double, ptr %26115, align 8, !dbg !377
  %26117 = load double, ptr %17, align 8, !dbg !377
  %26118 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26119 = load double, ptr %26118, align 8, !dbg !377
  %26120 = call double @cross(double %26114, double %26116, double %26117, double %26119), !dbg !377
  %26121 = load i32, ptr %10, align 4, !dbg !378
  %26122 = sext i32 %26121 to i64, !dbg !379
  %26123 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26122, !dbg !379
  %26124 = load double, ptr %6, align 8, !dbg !380
  %26125 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26126 = load double, ptr %26125, align 8, !dbg !380
  %26127 = load double, ptr %26123, align 16, !dbg !380
  %26128 = getelementptr inbounds { double, double }, ptr %26123, i32 0, i32 1, !dbg !380
  %26129 = load double, ptr %26128, align 8, !dbg !380
  %26130 = call { double, double } @make_vec(double %26124, double %26126, double %26127, double %26129), !dbg !380
  %26131 = extractvalue { double, double } %26130, 0, !dbg !380
  store double %26131, ptr %18, align 8, !dbg !380
  %26132 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26133 = extractvalue { double, double } %26130, 1, !dbg !380
  store double %26133, ptr %26132, align 8, !dbg !380
  %26134 = load i32, ptr %10, align 4, !dbg !381
  %26135 = add nsw i32 %26134, 1, !dbg !382
  %26136 = sext i32 %26135 to i64, !dbg !383
  %26137 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26136, !dbg !383
  %26138 = load double, ptr %6, align 8, !dbg !384
  %26139 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26140 = load double, ptr %26139, align 8, !dbg !384
  %26141 = load double, ptr %26137, align 16, !dbg !384
  %26142 = getelementptr inbounds { double, double }, ptr %26137, i32 0, i32 1, !dbg !384
  %26143 = load double, ptr %26142, align 8, !dbg !384
  %26144 = call { double, double } @make_vec(double %26138, double %26140, double %26141, double %26143), !dbg !384
  %26145 = extractvalue { double, double } %26144, 0, !dbg !384
  store double %26145, ptr %19, align 8, !dbg !384
  %26146 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26147 = extractvalue { double, double } %26144, 1, !dbg !384
  store double %26147, ptr %26146, align 8, !dbg !384
  %26148 = load double, ptr %18, align 8, !dbg !385
  %26149 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26150 = load double, ptr %26149, align 8, !dbg !385
  %26151 = load double, ptr %19, align 8, !dbg !385
  %26152 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26153 = load double, ptr %26152, align 8, !dbg !385
  %26154 = call double @dot(double %26148, double %26150, double %26151, double %26153), !dbg !385
  %26155 = call double @atan2(double noundef %26120, double noundef %26154) #6, !dbg !386
  store double %26155, ptr %13, align 8, !dbg !387
  %26156 = load double, ptr %13, align 8, !dbg !388
  %26157 = load double, ptr %14, align 8, !dbg !389
  %26158 = fadd double %26157, %26156, !dbg !389
  store double %26158, ptr %14, align 8, !dbg !389
  %26159 = load double, ptr %13, align 8, !dbg !390
  %26160 = fsub double %26159, 0x400921FB54442D18, !dbg !392
  %26161 = call double @llvm.fabs.f64(double %26160), !dbg !393
  %26162 = fcmp ole double %26161, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26162, label %14330, label %26163, !dbg !395

26163:                                            ; preds = %26086
  %26164 = load double, ptr %13, align 8, !dbg !396
  %26165 = fadd double %26164, 0x400921FB54442D18, !dbg !397
  %26166 = call double @llvm.fabs.f64(double %26165), !dbg !398
  %26167 = fcmp ole double %26166, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26167, label %14330, label %26168, !dbg !400

26168:                                            ; preds = %26163
  br label %26169, !dbg !403

26169:                                            ; preds = %26168
  %26170 = load i32, ptr %10, align 4, !dbg !404
  %26171 = add nsw i32 %26170, 1, !dbg !404
  store i32 %26171, ptr %10, align 4, !dbg !404
  %26172 = load i32, ptr %10, align 4, !dbg !364
  %26173 = load i32, ptr %8, align 4, !dbg !366
  %26174 = icmp slt i32 %26172, %26173, !dbg !367
  br i1 %26174, label %26175, label %48422, !dbg !368

26175:                                            ; preds = %26169
  %26176 = load i32, ptr %10, align 4, !dbg !369
  %26177 = sext i32 %26176 to i64, !dbg !371
  %26178 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26177, !dbg !371
  %26179 = load double, ptr %6, align 8, !dbg !372
  %26180 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26181 = load double, ptr %26180, align 8, !dbg !372
  %26182 = load double, ptr %26178, align 16, !dbg !372
  %26183 = getelementptr inbounds { double, double }, ptr %26178, i32 0, i32 1, !dbg !372
  %26184 = load double, ptr %26183, align 8, !dbg !372
  %26185 = call { double, double } @make_vec(double %26179, double %26181, double %26182, double %26184), !dbg !372
  %26186 = extractvalue { double, double } %26185, 0, !dbg !372
  store double %26186, ptr %16, align 8, !dbg !372
  %26187 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26188 = extractvalue { double, double } %26185, 1, !dbg !372
  store double %26188, ptr %26187, align 8, !dbg !372
  %26189 = load i32, ptr %10, align 4, !dbg !373
  %26190 = add nsw i32 %26189, 1, !dbg !374
  %26191 = sext i32 %26190 to i64, !dbg !375
  %26192 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26191, !dbg !375
  %26193 = load double, ptr %6, align 8, !dbg !376
  %26194 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26195 = load double, ptr %26194, align 8, !dbg !376
  %26196 = load double, ptr %26192, align 16, !dbg !376
  %26197 = getelementptr inbounds { double, double }, ptr %26192, i32 0, i32 1, !dbg !376
  %26198 = load double, ptr %26197, align 8, !dbg !376
  %26199 = call { double, double } @make_vec(double %26193, double %26195, double %26196, double %26198), !dbg !376
  %26200 = extractvalue { double, double } %26199, 0, !dbg !376
  store double %26200, ptr %17, align 8, !dbg !376
  %26201 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26202 = extractvalue { double, double } %26199, 1, !dbg !376
  store double %26202, ptr %26201, align 8, !dbg !376
  %26203 = load double, ptr %16, align 8, !dbg !377
  %26204 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26205 = load double, ptr %26204, align 8, !dbg !377
  %26206 = load double, ptr %17, align 8, !dbg !377
  %26207 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26208 = load double, ptr %26207, align 8, !dbg !377
  %26209 = call double @cross(double %26203, double %26205, double %26206, double %26208), !dbg !377
  %26210 = load i32, ptr %10, align 4, !dbg !378
  %26211 = sext i32 %26210 to i64, !dbg !379
  %26212 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26211, !dbg !379
  %26213 = load double, ptr %6, align 8, !dbg !380
  %26214 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26215 = load double, ptr %26214, align 8, !dbg !380
  %26216 = load double, ptr %26212, align 16, !dbg !380
  %26217 = getelementptr inbounds { double, double }, ptr %26212, i32 0, i32 1, !dbg !380
  %26218 = load double, ptr %26217, align 8, !dbg !380
  %26219 = call { double, double } @make_vec(double %26213, double %26215, double %26216, double %26218), !dbg !380
  %26220 = extractvalue { double, double } %26219, 0, !dbg !380
  store double %26220, ptr %18, align 8, !dbg !380
  %26221 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26222 = extractvalue { double, double } %26219, 1, !dbg !380
  store double %26222, ptr %26221, align 8, !dbg !380
  %26223 = load i32, ptr %10, align 4, !dbg !381
  %26224 = add nsw i32 %26223, 1, !dbg !382
  %26225 = sext i32 %26224 to i64, !dbg !383
  %26226 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26225, !dbg !383
  %26227 = load double, ptr %6, align 8, !dbg !384
  %26228 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26229 = load double, ptr %26228, align 8, !dbg !384
  %26230 = load double, ptr %26226, align 16, !dbg !384
  %26231 = getelementptr inbounds { double, double }, ptr %26226, i32 0, i32 1, !dbg !384
  %26232 = load double, ptr %26231, align 8, !dbg !384
  %26233 = call { double, double } @make_vec(double %26227, double %26229, double %26230, double %26232), !dbg !384
  %26234 = extractvalue { double, double } %26233, 0, !dbg !384
  store double %26234, ptr %19, align 8, !dbg !384
  %26235 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26236 = extractvalue { double, double } %26233, 1, !dbg !384
  store double %26236, ptr %26235, align 8, !dbg !384
  %26237 = load double, ptr %18, align 8, !dbg !385
  %26238 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26239 = load double, ptr %26238, align 8, !dbg !385
  %26240 = load double, ptr %19, align 8, !dbg !385
  %26241 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26242 = load double, ptr %26241, align 8, !dbg !385
  %26243 = call double @dot(double %26237, double %26239, double %26240, double %26242), !dbg !385
  %26244 = call double @atan2(double noundef %26209, double noundef %26243) #6, !dbg !386
  store double %26244, ptr %13, align 8, !dbg !387
  %26245 = load double, ptr %13, align 8, !dbg !388
  %26246 = load double, ptr %14, align 8, !dbg !389
  %26247 = fadd double %26246, %26245, !dbg !389
  store double %26247, ptr %14, align 8, !dbg !389
  %26248 = load double, ptr %13, align 8, !dbg !390
  %26249 = fsub double %26248, 0x400921FB54442D18, !dbg !392
  %26250 = call double @llvm.fabs.f64(double %26249), !dbg !393
  %26251 = fcmp ole double %26250, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26251, label %14330, label %26252, !dbg !395

26252:                                            ; preds = %26175
  %26253 = load double, ptr %13, align 8, !dbg !396
  %26254 = fadd double %26253, 0x400921FB54442D18, !dbg !397
  %26255 = call double @llvm.fabs.f64(double %26254), !dbg !398
  %26256 = fcmp ole double %26255, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26256, label %14330, label %26257, !dbg !400

26257:                                            ; preds = %26252
  br label %26258, !dbg !403

26258:                                            ; preds = %26257
  %26259 = load i32, ptr %10, align 4, !dbg !404
  %26260 = add nsw i32 %26259, 1, !dbg !404
  store i32 %26260, ptr %10, align 4, !dbg !404
  %26261 = load i32, ptr %10, align 4, !dbg !364
  %26262 = load i32, ptr %8, align 4, !dbg !366
  %26263 = icmp slt i32 %26261, %26262, !dbg !367
  br i1 %26263, label %26264, label %48422, !dbg !368

26264:                                            ; preds = %26258
  %26265 = load i32, ptr %10, align 4, !dbg !369
  %26266 = sext i32 %26265 to i64, !dbg !371
  %26267 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26266, !dbg !371
  %26268 = load double, ptr %6, align 8, !dbg !372
  %26269 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26270 = load double, ptr %26269, align 8, !dbg !372
  %26271 = load double, ptr %26267, align 16, !dbg !372
  %26272 = getelementptr inbounds { double, double }, ptr %26267, i32 0, i32 1, !dbg !372
  %26273 = load double, ptr %26272, align 8, !dbg !372
  %26274 = call { double, double } @make_vec(double %26268, double %26270, double %26271, double %26273), !dbg !372
  %26275 = extractvalue { double, double } %26274, 0, !dbg !372
  store double %26275, ptr %16, align 8, !dbg !372
  %26276 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26277 = extractvalue { double, double } %26274, 1, !dbg !372
  store double %26277, ptr %26276, align 8, !dbg !372
  %26278 = load i32, ptr %10, align 4, !dbg !373
  %26279 = add nsw i32 %26278, 1, !dbg !374
  %26280 = sext i32 %26279 to i64, !dbg !375
  %26281 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26280, !dbg !375
  %26282 = load double, ptr %6, align 8, !dbg !376
  %26283 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26284 = load double, ptr %26283, align 8, !dbg !376
  %26285 = load double, ptr %26281, align 16, !dbg !376
  %26286 = getelementptr inbounds { double, double }, ptr %26281, i32 0, i32 1, !dbg !376
  %26287 = load double, ptr %26286, align 8, !dbg !376
  %26288 = call { double, double } @make_vec(double %26282, double %26284, double %26285, double %26287), !dbg !376
  %26289 = extractvalue { double, double } %26288, 0, !dbg !376
  store double %26289, ptr %17, align 8, !dbg !376
  %26290 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26291 = extractvalue { double, double } %26288, 1, !dbg !376
  store double %26291, ptr %26290, align 8, !dbg !376
  %26292 = load double, ptr %16, align 8, !dbg !377
  %26293 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26294 = load double, ptr %26293, align 8, !dbg !377
  %26295 = load double, ptr %17, align 8, !dbg !377
  %26296 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26297 = load double, ptr %26296, align 8, !dbg !377
  %26298 = call double @cross(double %26292, double %26294, double %26295, double %26297), !dbg !377
  %26299 = load i32, ptr %10, align 4, !dbg !378
  %26300 = sext i32 %26299 to i64, !dbg !379
  %26301 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26300, !dbg !379
  %26302 = load double, ptr %6, align 8, !dbg !380
  %26303 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26304 = load double, ptr %26303, align 8, !dbg !380
  %26305 = load double, ptr %26301, align 16, !dbg !380
  %26306 = getelementptr inbounds { double, double }, ptr %26301, i32 0, i32 1, !dbg !380
  %26307 = load double, ptr %26306, align 8, !dbg !380
  %26308 = call { double, double } @make_vec(double %26302, double %26304, double %26305, double %26307), !dbg !380
  %26309 = extractvalue { double, double } %26308, 0, !dbg !380
  store double %26309, ptr %18, align 8, !dbg !380
  %26310 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26311 = extractvalue { double, double } %26308, 1, !dbg !380
  store double %26311, ptr %26310, align 8, !dbg !380
  %26312 = load i32, ptr %10, align 4, !dbg !381
  %26313 = add nsw i32 %26312, 1, !dbg !382
  %26314 = sext i32 %26313 to i64, !dbg !383
  %26315 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26314, !dbg !383
  %26316 = load double, ptr %6, align 8, !dbg !384
  %26317 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26318 = load double, ptr %26317, align 8, !dbg !384
  %26319 = load double, ptr %26315, align 16, !dbg !384
  %26320 = getelementptr inbounds { double, double }, ptr %26315, i32 0, i32 1, !dbg !384
  %26321 = load double, ptr %26320, align 8, !dbg !384
  %26322 = call { double, double } @make_vec(double %26316, double %26318, double %26319, double %26321), !dbg !384
  %26323 = extractvalue { double, double } %26322, 0, !dbg !384
  store double %26323, ptr %19, align 8, !dbg !384
  %26324 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26325 = extractvalue { double, double } %26322, 1, !dbg !384
  store double %26325, ptr %26324, align 8, !dbg !384
  %26326 = load double, ptr %18, align 8, !dbg !385
  %26327 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26328 = load double, ptr %26327, align 8, !dbg !385
  %26329 = load double, ptr %19, align 8, !dbg !385
  %26330 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26331 = load double, ptr %26330, align 8, !dbg !385
  %26332 = call double @dot(double %26326, double %26328, double %26329, double %26331), !dbg !385
  %26333 = call double @atan2(double noundef %26298, double noundef %26332) #6, !dbg !386
  store double %26333, ptr %13, align 8, !dbg !387
  %26334 = load double, ptr %13, align 8, !dbg !388
  %26335 = load double, ptr %14, align 8, !dbg !389
  %26336 = fadd double %26335, %26334, !dbg !389
  store double %26336, ptr %14, align 8, !dbg !389
  %26337 = load double, ptr %13, align 8, !dbg !390
  %26338 = fsub double %26337, 0x400921FB54442D18, !dbg !392
  %26339 = call double @llvm.fabs.f64(double %26338), !dbg !393
  %26340 = fcmp ole double %26339, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26340, label %14330, label %26341, !dbg !395

26341:                                            ; preds = %26264
  %26342 = load double, ptr %13, align 8, !dbg !396
  %26343 = fadd double %26342, 0x400921FB54442D18, !dbg !397
  %26344 = call double @llvm.fabs.f64(double %26343), !dbg !398
  %26345 = fcmp ole double %26344, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26345, label %14330, label %26346, !dbg !400

26346:                                            ; preds = %26341
  br label %26347, !dbg !403

26347:                                            ; preds = %26346
  %26348 = load i32, ptr %10, align 4, !dbg !404
  %26349 = add nsw i32 %26348, 1, !dbg !404
  store i32 %26349, ptr %10, align 4, !dbg !404
  %26350 = load i32, ptr %10, align 4, !dbg !364
  %26351 = load i32, ptr %8, align 4, !dbg !366
  %26352 = icmp slt i32 %26350, %26351, !dbg !367
  br i1 %26352, label %26353, label %48422, !dbg !368

26353:                                            ; preds = %26347
  %26354 = load i32, ptr %10, align 4, !dbg !369
  %26355 = sext i32 %26354 to i64, !dbg !371
  %26356 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26355, !dbg !371
  %26357 = load double, ptr %6, align 8, !dbg !372
  %26358 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26359 = load double, ptr %26358, align 8, !dbg !372
  %26360 = load double, ptr %26356, align 16, !dbg !372
  %26361 = getelementptr inbounds { double, double }, ptr %26356, i32 0, i32 1, !dbg !372
  %26362 = load double, ptr %26361, align 8, !dbg !372
  %26363 = call { double, double } @make_vec(double %26357, double %26359, double %26360, double %26362), !dbg !372
  %26364 = extractvalue { double, double } %26363, 0, !dbg !372
  store double %26364, ptr %16, align 8, !dbg !372
  %26365 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26366 = extractvalue { double, double } %26363, 1, !dbg !372
  store double %26366, ptr %26365, align 8, !dbg !372
  %26367 = load i32, ptr %10, align 4, !dbg !373
  %26368 = add nsw i32 %26367, 1, !dbg !374
  %26369 = sext i32 %26368 to i64, !dbg !375
  %26370 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26369, !dbg !375
  %26371 = load double, ptr %6, align 8, !dbg !376
  %26372 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26373 = load double, ptr %26372, align 8, !dbg !376
  %26374 = load double, ptr %26370, align 16, !dbg !376
  %26375 = getelementptr inbounds { double, double }, ptr %26370, i32 0, i32 1, !dbg !376
  %26376 = load double, ptr %26375, align 8, !dbg !376
  %26377 = call { double, double } @make_vec(double %26371, double %26373, double %26374, double %26376), !dbg !376
  %26378 = extractvalue { double, double } %26377, 0, !dbg !376
  store double %26378, ptr %17, align 8, !dbg !376
  %26379 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26380 = extractvalue { double, double } %26377, 1, !dbg !376
  store double %26380, ptr %26379, align 8, !dbg !376
  %26381 = load double, ptr %16, align 8, !dbg !377
  %26382 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26383 = load double, ptr %26382, align 8, !dbg !377
  %26384 = load double, ptr %17, align 8, !dbg !377
  %26385 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26386 = load double, ptr %26385, align 8, !dbg !377
  %26387 = call double @cross(double %26381, double %26383, double %26384, double %26386), !dbg !377
  %26388 = load i32, ptr %10, align 4, !dbg !378
  %26389 = sext i32 %26388 to i64, !dbg !379
  %26390 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26389, !dbg !379
  %26391 = load double, ptr %6, align 8, !dbg !380
  %26392 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26393 = load double, ptr %26392, align 8, !dbg !380
  %26394 = load double, ptr %26390, align 16, !dbg !380
  %26395 = getelementptr inbounds { double, double }, ptr %26390, i32 0, i32 1, !dbg !380
  %26396 = load double, ptr %26395, align 8, !dbg !380
  %26397 = call { double, double } @make_vec(double %26391, double %26393, double %26394, double %26396), !dbg !380
  %26398 = extractvalue { double, double } %26397, 0, !dbg !380
  store double %26398, ptr %18, align 8, !dbg !380
  %26399 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26400 = extractvalue { double, double } %26397, 1, !dbg !380
  store double %26400, ptr %26399, align 8, !dbg !380
  %26401 = load i32, ptr %10, align 4, !dbg !381
  %26402 = add nsw i32 %26401, 1, !dbg !382
  %26403 = sext i32 %26402 to i64, !dbg !383
  %26404 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26403, !dbg !383
  %26405 = load double, ptr %6, align 8, !dbg !384
  %26406 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26407 = load double, ptr %26406, align 8, !dbg !384
  %26408 = load double, ptr %26404, align 16, !dbg !384
  %26409 = getelementptr inbounds { double, double }, ptr %26404, i32 0, i32 1, !dbg !384
  %26410 = load double, ptr %26409, align 8, !dbg !384
  %26411 = call { double, double } @make_vec(double %26405, double %26407, double %26408, double %26410), !dbg !384
  %26412 = extractvalue { double, double } %26411, 0, !dbg !384
  store double %26412, ptr %19, align 8, !dbg !384
  %26413 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26414 = extractvalue { double, double } %26411, 1, !dbg !384
  store double %26414, ptr %26413, align 8, !dbg !384
  %26415 = load double, ptr %18, align 8, !dbg !385
  %26416 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26417 = load double, ptr %26416, align 8, !dbg !385
  %26418 = load double, ptr %19, align 8, !dbg !385
  %26419 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26420 = load double, ptr %26419, align 8, !dbg !385
  %26421 = call double @dot(double %26415, double %26417, double %26418, double %26420), !dbg !385
  %26422 = call double @atan2(double noundef %26387, double noundef %26421) #6, !dbg !386
  store double %26422, ptr %13, align 8, !dbg !387
  %26423 = load double, ptr %13, align 8, !dbg !388
  %26424 = load double, ptr %14, align 8, !dbg !389
  %26425 = fadd double %26424, %26423, !dbg !389
  store double %26425, ptr %14, align 8, !dbg !389
  %26426 = load double, ptr %13, align 8, !dbg !390
  %26427 = fsub double %26426, 0x400921FB54442D18, !dbg !392
  %26428 = call double @llvm.fabs.f64(double %26427), !dbg !393
  %26429 = fcmp ole double %26428, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26429, label %14330, label %26430, !dbg !395

26430:                                            ; preds = %26353
  %26431 = load double, ptr %13, align 8, !dbg !396
  %26432 = fadd double %26431, 0x400921FB54442D18, !dbg !397
  %26433 = call double @llvm.fabs.f64(double %26432), !dbg !398
  %26434 = fcmp ole double %26433, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26434, label %14330, label %26435, !dbg !400

26435:                                            ; preds = %26430
  br label %26436, !dbg !403

26436:                                            ; preds = %26435
  %26437 = load i32, ptr %10, align 4, !dbg !404
  %26438 = add nsw i32 %26437, 1, !dbg !404
  store i32 %26438, ptr %10, align 4, !dbg !404
  %26439 = load i32, ptr %10, align 4, !dbg !364
  %26440 = load i32, ptr %8, align 4, !dbg !366
  %26441 = icmp slt i32 %26439, %26440, !dbg !367
  br i1 %26441, label %26442, label %48422, !dbg !368

26442:                                            ; preds = %26436
  %26443 = load i32, ptr %10, align 4, !dbg !369
  %26444 = sext i32 %26443 to i64, !dbg !371
  %26445 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26444, !dbg !371
  %26446 = load double, ptr %6, align 8, !dbg !372
  %26447 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26448 = load double, ptr %26447, align 8, !dbg !372
  %26449 = load double, ptr %26445, align 16, !dbg !372
  %26450 = getelementptr inbounds { double, double }, ptr %26445, i32 0, i32 1, !dbg !372
  %26451 = load double, ptr %26450, align 8, !dbg !372
  %26452 = call { double, double } @make_vec(double %26446, double %26448, double %26449, double %26451), !dbg !372
  %26453 = extractvalue { double, double } %26452, 0, !dbg !372
  store double %26453, ptr %16, align 8, !dbg !372
  %26454 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26455 = extractvalue { double, double } %26452, 1, !dbg !372
  store double %26455, ptr %26454, align 8, !dbg !372
  %26456 = load i32, ptr %10, align 4, !dbg !373
  %26457 = add nsw i32 %26456, 1, !dbg !374
  %26458 = sext i32 %26457 to i64, !dbg !375
  %26459 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26458, !dbg !375
  %26460 = load double, ptr %6, align 8, !dbg !376
  %26461 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26462 = load double, ptr %26461, align 8, !dbg !376
  %26463 = load double, ptr %26459, align 16, !dbg !376
  %26464 = getelementptr inbounds { double, double }, ptr %26459, i32 0, i32 1, !dbg !376
  %26465 = load double, ptr %26464, align 8, !dbg !376
  %26466 = call { double, double } @make_vec(double %26460, double %26462, double %26463, double %26465), !dbg !376
  %26467 = extractvalue { double, double } %26466, 0, !dbg !376
  store double %26467, ptr %17, align 8, !dbg !376
  %26468 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26469 = extractvalue { double, double } %26466, 1, !dbg !376
  store double %26469, ptr %26468, align 8, !dbg !376
  %26470 = load double, ptr %16, align 8, !dbg !377
  %26471 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26472 = load double, ptr %26471, align 8, !dbg !377
  %26473 = load double, ptr %17, align 8, !dbg !377
  %26474 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26475 = load double, ptr %26474, align 8, !dbg !377
  %26476 = call double @cross(double %26470, double %26472, double %26473, double %26475), !dbg !377
  %26477 = load i32, ptr %10, align 4, !dbg !378
  %26478 = sext i32 %26477 to i64, !dbg !379
  %26479 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26478, !dbg !379
  %26480 = load double, ptr %6, align 8, !dbg !380
  %26481 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26482 = load double, ptr %26481, align 8, !dbg !380
  %26483 = load double, ptr %26479, align 16, !dbg !380
  %26484 = getelementptr inbounds { double, double }, ptr %26479, i32 0, i32 1, !dbg !380
  %26485 = load double, ptr %26484, align 8, !dbg !380
  %26486 = call { double, double } @make_vec(double %26480, double %26482, double %26483, double %26485), !dbg !380
  %26487 = extractvalue { double, double } %26486, 0, !dbg !380
  store double %26487, ptr %18, align 8, !dbg !380
  %26488 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26489 = extractvalue { double, double } %26486, 1, !dbg !380
  store double %26489, ptr %26488, align 8, !dbg !380
  %26490 = load i32, ptr %10, align 4, !dbg !381
  %26491 = add nsw i32 %26490, 1, !dbg !382
  %26492 = sext i32 %26491 to i64, !dbg !383
  %26493 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26492, !dbg !383
  %26494 = load double, ptr %6, align 8, !dbg !384
  %26495 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26496 = load double, ptr %26495, align 8, !dbg !384
  %26497 = load double, ptr %26493, align 16, !dbg !384
  %26498 = getelementptr inbounds { double, double }, ptr %26493, i32 0, i32 1, !dbg !384
  %26499 = load double, ptr %26498, align 8, !dbg !384
  %26500 = call { double, double } @make_vec(double %26494, double %26496, double %26497, double %26499), !dbg !384
  %26501 = extractvalue { double, double } %26500, 0, !dbg !384
  store double %26501, ptr %19, align 8, !dbg !384
  %26502 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26503 = extractvalue { double, double } %26500, 1, !dbg !384
  store double %26503, ptr %26502, align 8, !dbg !384
  %26504 = load double, ptr %18, align 8, !dbg !385
  %26505 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26506 = load double, ptr %26505, align 8, !dbg !385
  %26507 = load double, ptr %19, align 8, !dbg !385
  %26508 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26509 = load double, ptr %26508, align 8, !dbg !385
  %26510 = call double @dot(double %26504, double %26506, double %26507, double %26509), !dbg !385
  %26511 = call double @atan2(double noundef %26476, double noundef %26510) #6, !dbg !386
  store double %26511, ptr %13, align 8, !dbg !387
  %26512 = load double, ptr %13, align 8, !dbg !388
  %26513 = load double, ptr %14, align 8, !dbg !389
  %26514 = fadd double %26513, %26512, !dbg !389
  store double %26514, ptr %14, align 8, !dbg !389
  %26515 = load double, ptr %13, align 8, !dbg !390
  %26516 = fsub double %26515, 0x400921FB54442D18, !dbg !392
  %26517 = call double @llvm.fabs.f64(double %26516), !dbg !393
  %26518 = fcmp ole double %26517, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26518, label %14330, label %26519, !dbg !395

26519:                                            ; preds = %26442
  %26520 = load double, ptr %13, align 8, !dbg !396
  %26521 = fadd double %26520, 0x400921FB54442D18, !dbg !397
  %26522 = call double @llvm.fabs.f64(double %26521), !dbg !398
  %26523 = fcmp ole double %26522, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26523, label %14330, label %26524, !dbg !400

26524:                                            ; preds = %26519
  br label %26525, !dbg !403

26525:                                            ; preds = %26524
  %26526 = load i32, ptr %10, align 4, !dbg !404
  %26527 = add nsw i32 %26526, 1, !dbg !404
  store i32 %26527, ptr %10, align 4, !dbg !404
  %26528 = load i32, ptr %10, align 4, !dbg !364
  %26529 = load i32, ptr %8, align 4, !dbg !366
  %26530 = icmp slt i32 %26528, %26529, !dbg !367
  br i1 %26530, label %26531, label %48422, !dbg !368

26531:                                            ; preds = %26525
  %26532 = load i32, ptr %10, align 4, !dbg !369
  %26533 = sext i32 %26532 to i64, !dbg !371
  %26534 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26533, !dbg !371
  %26535 = load double, ptr %6, align 8, !dbg !372
  %26536 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26537 = load double, ptr %26536, align 8, !dbg !372
  %26538 = load double, ptr %26534, align 16, !dbg !372
  %26539 = getelementptr inbounds { double, double }, ptr %26534, i32 0, i32 1, !dbg !372
  %26540 = load double, ptr %26539, align 8, !dbg !372
  %26541 = call { double, double } @make_vec(double %26535, double %26537, double %26538, double %26540), !dbg !372
  %26542 = extractvalue { double, double } %26541, 0, !dbg !372
  store double %26542, ptr %16, align 8, !dbg !372
  %26543 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26544 = extractvalue { double, double } %26541, 1, !dbg !372
  store double %26544, ptr %26543, align 8, !dbg !372
  %26545 = load i32, ptr %10, align 4, !dbg !373
  %26546 = add nsw i32 %26545, 1, !dbg !374
  %26547 = sext i32 %26546 to i64, !dbg !375
  %26548 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26547, !dbg !375
  %26549 = load double, ptr %6, align 8, !dbg !376
  %26550 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26551 = load double, ptr %26550, align 8, !dbg !376
  %26552 = load double, ptr %26548, align 16, !dbg !376
  %26553 = getelementptr inbounds { double, double }, ptr %26548, i32 0, i32 1, !dbg !376
  %26554 = load double, ptr %26553, align 8, !dbg !376
  %26555 = call { double, double } @make_vec(double %26549, double %26551, double %26552, double %26554), !dbg !376
  %26556 = extractvalue { double, double } %26555, 0, !dbg !376
  store double %26556, ptr %17, align 8, !dbg !376
  %26557 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26558 = extractvalue { double, double } %26555, 1, !dbg !376
  store double %26558, ptr %26557, align 8, !dbg !376
  %26559 = load double, ptr %16, align 8, !dbg !377
  %26560 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26561 = load double, ptr %26560, align 8, !dbg !377
  %26562 = load double, ptr %17, align 8, !dbg !377
  %26563 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26564 = load double, ptr %26563, align 8, !dbg !377
  %26565 = call double @cross(double %26559, double %26561, double %26562, double %26564), !dbg !377
  %26566 = load i32, ptr %10, align 4, !dbg !378
  %26567 = sext i32 %26566 to i64, !dbg !379
  %26568 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26567, !dbg !379
  %26569 = load double, ptr %6, align 8, !dbg !380
  %26570 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26571 = load double, ptr %26570, align 8, !dbg !380
  %26572 = load double, ptr %26568, align 16, !dbg !380
  %26573 = getelementptr inbounds { double, double }, ptr %26568, i32 0, i32 1, !dbg !380
  %26574 = load double, ptr %26573, align 8, !dbg !380
  %26575 = call { double, double } @make_vec(double %26569, double %26571, double %26572, double %26574), !dbg !380
  %26576 = extractvalue { double, double } %26575, 0, !dbg !380
  store double %26576, ptr %18, align 8, !dbg !380
  %26577 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26578 = extractvalue { double, double } %26575, 1, !dbg !380
  store double %26578, ptr %26577, align 8, !dbg !380
  %26579 = load i32, ptr %10, align 4, !dbg !381
  %26580 = add nsw i32 %26579, 1, !dbg !382
  %26581 = sext i32 %26580 to i64, !dbg !383
  %26582 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26581, !dbg !383
  %26583 = load double, ptr %6, align 8, !dbg !384
  %26584 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26585 = load double, ptr %26584, align 8, !dbg !384
  %26586 = load double, ptr %26582, align 16, !dbg !384
  %26587 = getelementptr inbounds { double, double }, ptr %26582, i32 0, i32 1, !dbg !384
  %26588 = load double, ptr %26587, align 8, !dbg !384
  %26589 = call { double, double } @make_vec(double %26583, double %26585, double %26586, double %26588), !dbg !384
  %26590 = extractvalue { double, double } %26589, 0, !dbg !384
  store double %26590, ptr %19, align 8, !dbg !384
  %26591 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26592 = extractvalue { double, double } %26589, 1, !dbg !384
  store double %26592, ptr %26591, align 8, !dbg !384
  %26593 = load double, ptr %18, align 8, !dbg !385
  %26594 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26595 = load double, ptr %26594, align 8, !dbg !385
  %26596 = load double, ptr %19, align 8, !dbg !385
  %26597 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26598 = load double, ptr %26597, align 8, !dbg !385
  %26599 = call double @dot(double %26593, double %26595, double %26596, double %26598), !dbg !385
  %26600 = call double @atan2(double noundef %26565, double noundef %26599) #6, !dbg !386
  store double %26600, ptr %13, align 8, !dbg !387
  %26601 = load double, ptr %13, align 8, !dbg !388
  %26602 = load double, ptr %14, align 8, !dbg !389
  %26603 = fadd double %26602, %26601, !dbg !389
  store double %26603, ptr %14, align 8, !dbg !389
  %26604 = load double, ptr %13, align 8, !dbg !390
  %26605 = fsub double %26604, 0x400921FB54442D18, !dbg !392
  %26606 = call double @llvm.fabs.f64(double %26605), !dbg !393
  %26607 = fcmp ole double %26606, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26607, label %14330, label %26608, !dbg !395

26608:                                            ; preds = %26531
  %26609 = load double, ptr %13, align 8, !dbg !396
  %26610 = fadd double %26609, 0x400921FB54442D18, !dbg !397
  %26611 = call double @llvm.fabs.f64(double %26610), !dbg !398
  %26612 = fcmp ole double %26611, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26612, label %14330, label %26613, !dbg !400

26613:                                            ; preds = %26608
  br label %26614, !dbg !403

26614:                                            ; preds = %26613
  %26615 = load i32, ptr %10, align 4, !dbg !404
  %26616 = add nsw i32 %26615, 1, !dbg !404
  store i32 %26616, ptr %10, align 4, !dbg !404
  %26617 = load i32, ptr %10, align 4, !dbg !364
  %26618 = load i32, ptr %8, align 4, !dbg !366
  %26619 = icmp slt i32 %26617, %26618, !dbg !367
  br i1 %26619, label %26620, label %48422, !dbg !368

26620:                                            ; preds = %26614
  %26621 = load i32, ptr %10, align 4, !dbg !369
  %26622 = sext i32 %26621 to i64, !dbg !371
  %26623 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26622, !dbg !371
  %26624 = load double, ptr %6, align 8, !dbg !372
  %26625 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26626 = load double, ptr %26625, align 8, !dbg !372
  %26627 = load double, ptr %26623, align 16, !dbg !372
  %26628 = getelementptr inbounds { double, double }, ptr %26623, i32 0, i32 1, !dbg !372
  %26629 = load double, ptr %26628, align 8, !dbg !372
  %26630 = call { double, double } @make_vec(double %26624, double %26626, double %26627, double %26629), !dbg !372
  %26631 = extractvalue { double, double } %26630, 0, !dbg !372
  store double %26631, ptr %16, align 8, !dbg !372
  %26632 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26633 = extractvalue { double, double } %26630, 1, !dbg !372
  store double %26633, ptr %26632, align 8, !dbg !372
  %26634 = load i32, ptr %10, align 4, !dbg !373
  %26635 = add nsw i32 %26634, 1, !dbg !374
  %26636 = sext i32 %26635 to i64, !dbg !375
  %26637 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26636, !dbg !375
  %26638 = load double, ptr %6, align 8, !dbg !376
  %26639 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26640 = load double, ptr %26639, align 8, !dbg !376
  %26641 = load double, ptr %26637, align 16, !dbg !376
  %26642 = getelementptr inbounds { double, double }, ptr %26637, i32 0, i32 1, !dbg !376
  %26643 = load double, ptr %26642, align 8, !dbg !376
  %26644 = call { double, double } @make_vec(double %26638, double %26640, double %26641, double %26643), !dbg !376
  %26645 = extractvalue { double, double } %26644, 0, !dbg !376
  store double %26645, ptr %17, align 8, !dbg !376
  %26646 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26647 = extractvalue { double, double } %26644, 1, !dbg !376
  store double %26647, ptr %26646, align 8, !dbg !376
  %26648 = load double, ptr %16, align 8, !dbg !377
  %26649 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26650 = load double, ptr %26649, align 8, !dbg !377
  %26651 = load double, ptr %17, align 8, !dbg !377
  %26652 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26653 = load double, ptr %26652, align 8, !dbg !377
  %26654 = call double @cross(double %26648, double %26650, double %26651, double %26653), !dbg !377
  %26655 = load i32, ptr %10, align 4, !dbg !378
  %26656 = sext i32 %26655 to i64, !dbg !379
  %26657 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26656, !dbg !379
  %26658 = load double, ptr %6, align 8, !dbg !380
  %26659 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26660 = load double, ptr %26659, align 8, !dbg !380
  %26661 = load double, ptr %26657, align 16, !dbg !380
  %26662 = getelementptr inbounds { double, double }, ptr %26657, i32 0, i32 1, !dbg !380
  %26663 = load double, ptr %26662, align 8, !dbg !380
  %26664 = call { double, double } @make_vec(double %26658, double %26660, double %26661, double %26663), !dbg !380
  %26665 = extractvalue { double, double } %26664, 0, !dbg !380
  store double %26665, ptr %18, align 8, !dbg !380
  %26666 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26667 = extractvalue { double, double } %26664, 1, !dbg !380
  store double %26667, ptr %26666, align 8, !dbg !380
  %26668 = load i32, ptr %10, align 4, !dbg !381
  %26669 = add nsw i32 %26668, 1, !dbg !382
  %26670 = sext i32 %26669 to i64, !dbg !383
  %26671 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26670, !dbg !383
  %26672 = load double, ptr %6, align 8, !dbg !384
  %26673 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26674 = load double, ptr %26673, align 8, !dbg !384
  %26675 = load double, ptr %26671, align 16, !dbg !384
  %26676 = getelementptr inbounds { double, double }, ptr %26671, i32 0, i32 1, !dbg !384
  %26677 = load double, ptr %26676, align 8, !dbg !384
  %26678 = call { double, double } @make_vec(double %26672, double %26674, double %26675, double %26677), !dbg !384
  %26679 = extractvalue { double, double } %26678, 0, !dbg !384
  store double %26679, ptr %19, align 8, !dbg !384
  %26680 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26681 = extractvalue { double, double } %26678, 1, !dbg !384
  store double %26681, ptr %26680, align 8, !dbg !384
  %26682 = load double, ptr %18, align 8, !dbg !385
  %26683 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26684 = load double, ptr %26683, align 8, !dbg !385
  %26685 = load double, ptr %19, align 8, !dbg !385
  %26686 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26687 = load double, ptr %26686, align 8, !dbg !385
  %26688 = call double @dot(double %26682, double %26684, double %26685, double %26687), !dbg !385
  %26689 = call double @atan2(double noundef %26654, double noundef %26688) #6, !dbg !386
  store double %26689, ptr %13, align 8, !dbg !387
  %26690 = load double, ptr %13, align 8, !dbg !388
  %26691 = load double, ptr %14, align 8, !dbg !389
  %26692 = fadd double %26691, %26690, !dbg !389
  store double %26692, ptr %14, align 8, !dbg !389
  %26693 = load double, ptr %13, align 8, !dbg !390
  %26694 = fsub double %26693, 0x400921FB54442D18, !dbg !392
  %26695 = call double @llvm.fabs.f64(double %26694), !dbg !393
  %26696 = fcmp ole double %26695, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26696, label %14330, label %26697, !dbg !395

26697:                                            ; preds = %26620
  %26698 = load double, ptr %13, align 8, !dbg !396
  %26699 = fadd double %26698, 0x400921FB54442D18, !dbg !397
  %26700 = call double @llvm.fabs.f64(double %26699), !dbg !398
  %26701 = fcmp ole double %26700, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26701, label %14330, label %26702, !dbg !400

26702:                                            ; preds = %26697
  br label %26703, !dbg !403

26703:                                            ; preds = %26702
  %26704 = load i32, ptr %10, align 4, !dbg !404
  %26705 = add nsw i32 %26704, 1, !dbg !404
  store i32 %26705, ptr %10, align 4, !dbg !404
  %26706 = load i32, ptr %10, align 4, !dbg !364
  %26707 = load i32, ptr %8, align 4, !dbg !366
  %26708 = icmp slt i32 %26706, %26707, !dbg !367
  br i1 %26708, label %26709, label %48422, !dbg !368

26709:                                            ; preds = %26703
  %26710 = load i32, ptr %10, align 4, !dbg !369
  %26711 = sext i32 %26710 to i64, !dbg !371
  %26712 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26711, !dbg !371
  %26713 = load double, ptr %6, align 8, !dbg !372
  %26714 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26715 = load double, ptr %26714, align 8, !dbg !372
  %26716 = load double, ptr %26712, align 16, !dbg !372
  %26717 = getelementptr inbounds { double, double }, ptr %26712, i32 0, i32 1, !dbg !372
  %26718 = load double, ptr %26717, align 8, !dbg !372
  %26719 = call { double, double } @make_vec(double %26713, double %26715, double %26716, double %26718), !dbg !372
  %26720 = extractvalue { double, double } %26719, 0, !dbg !372
  store double %26720, ptr %16, align 8, !dbg !372
  %26721 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26722 = extractvalue { double, double } %26719, 1, !dbg !372
  store double %26722, ptr %26721, align 8, !dbg !372
  %26723 = load i32, ptr %10, align 4, !dbg !373
  %26724 = add nsw i32 %26723, 1, !dbg !374
  %26725 = sext i32 %26724 to i64, !dbg !375
  %26726 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26725, !dbg !375
  %26727 = load double, ptr %6, align 8, !dbg !376
  %26728 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26729 = load double, ptr %26728, align 8, !dbg !376
  %26730 = load double, ptr %26726, align 16, !dbg !376
  %26731 = getelementptr inbounds { double, double }, ptr %26726, i32 0, i32 1, !dbg !376
  %26732 = load double, ptr %26731, align 8, !dbg !376
  %26733 = call { double, double } @make_vec(double %26727, double %26729, double %26730, double %26732), !dbg !376
  %26734 = extractvalue { double, double } %26733, 0, !dbg !376
  store double %26734, ptr %17, align 8, !dbg !376
  %26735 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26736 = extractvalue { double, double } %26733, 1, !dbg !376
  store double %26736, ptr %26735, align 8, !dbg !376
  %26737 = load double, ptr %16, align 8, !dbg !377
  %26738 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26739 = load double, ptr %26738, align 8, !dbg !377
  %26740 = load double, ptr %17, align 8, !dbg !377
  %26741 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26742 = load double, ptr %26741, align 8, !dbg !377
  %26743 = call double @cross(double %26737, double %26739, double %26740, double %26742), !dbg !377
  %26744 = load i32, ptr %10, align 4, !dbg !378
  %26745 = sext i32 %26744 to i64, !dbg !379
  %26746 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26745, !dbg !379
  %26747 = load double, ptr %6, align 8, !dbg !380
  %26748 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26749 = load double, ptr %26748, align 8, !dbg !380
  %26750 = load double, ptr %26746, align 16, !dbg !380
  %26751 = getelementptr inbounds { double, double }, ptr %26746, i32 0, i32 1, !dbg !380
  %26752 = load double, ptr %26751, align 8, !dbg !380
  %26753 = call { double, double } @make_vec(double %26747, double %26749, double %26750, double %26752), !dbg !380
  %26754 = extractvalue { double, double } %26753, 0, !dbg !380
  store double %26754, ptr %18, align 8, !dbg !380
  %26755 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26756 = extractvalue { double, double } %26753, 1, !dbg !380
  store double %26756, ptr %26755, align 8, !dbg !380
  %26757 = load i32, ptr %10, align 4, !dbg !381
  %26758 = add nsw i32 %26757, 1, !dbg !382
  %26759 = sext i32 %26758 to i64, !dbg !383
  %26760 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26759, !dbg !383
  %26761 = load double, ptr %6, align 8, !dbg !384
  %26762 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26763 = load double, ptr %26762, align 8, !dbg !384
  %26764 = load double, ptr %26760, align 16, !dbg !384
  %26765 = getelementptr inbounds { double, double }, ptr %26760, i32 0, i32 1, !dbg !384
  %26766 = load double, ptr %26765, align 8, !dbg !384
  %26767 = call { double, double } @make_vec(double %26761, double %26763, double %26764, double %26766), !dbg !384
  %26768 = extractvalue { double, double } %26767, 0, !dbg !384
  store double %26768, ptr %19, align 8, !dbg !384
  %26769 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26770 = extractvalue { double, double } %26767, 1, !dbg !384
  store double %26770, ptr %26769, align 8, !dbg !384
  %26771 = load double, ptr %18, align 8, !dbg !385
  %26772 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26773 = load double, ptr %26772, align 8, !dbg !385
  %26774 = load double, ptr %19, align 8, !dbg !385
  %26775 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26776 = load double, ptr %26775, align 8, !dbg !385
  %26777 = call double @dot(double %26771, double %26773, double %26774, double %26776), !dbg !385
  %26778 = call double @atan2(double noundef %26743, double noundef %26777) #6, !dbg !386
  store double %26778, ptr %13, align 8, !dbg !387
  %26779 = load double, ptr %13, align 8, !dbg !388
  %26780 = load double, ptr %14, align 8, !dbg !389
  %26781 = fadd double %26780, %26779, !dbg !389
  store double %26781, ptr %14, align 8, !dbg !389
  %26782 = load double, ptr %13, align 8, !dbg !390
  %26783 = fsub double %26782, 0x400921FB54442D18, !dbg !392
  %26784 = call double @llvm.fabs.f64(double %26783), !dbg !393
  %26785 = fcmp ole double %26784, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26785, label %14330, label %26786, !dbg !395

26786:                                            ; preds = %26709
  %26787 = load double, ptr %13, align 8, !dbg !396
  %26788 = fadd double %26787, 0x400921FB54442D18, !dbg !397
  %26789 = call double @llvm.fabs.f64(double %26788), !dbg !398
  %26790 = fcmp ole double %26789, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26790, label %14330, label %26791, !dbg !400

26791:                                            ; preds = %26786
  br label %26792, !dbg !403

26792:                                            ; preds = %26791
  %26793 = load i32, ptr %10, align 4, !dbg !404
  %26794 = add nsw i32 %26793, 1, !dbg !404
  store i32 %26794, ptr %10, align 4, !dbg !404
  %26795 = load i32, ptr %10, align 4, !dbg !364
  %26796 = load i32, ptr %8, align 4, !dbg !366
  %26797 = icmp slt i32 %26795, %26796, !dbg !367
  br i1 %26797, label %26798, label %48422, !dbg !368

26798:                                            ; preds = %26792
  %26799 = load i32, ptr %10, align 4, !dbg !369
  %26800 = sext i32 %26799 to i64, !dbg !371
  %26801 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26800, !dbg !371
  %26802 = load double, ptr %6, align 8, !dbg !372
  %26803 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26804 = load double, ptr %26803, align 8, !dbg !372
  %26805 = load double, ptr %26801, align 16, !dbg !372
  %26806 = getelementptr inbounds { double, double }, ptr %26801, i32 0, i32 1, !dbg !372
  %26807 = load double, ptr %26806, align 8, !dbg !372
  %26808 = call { double, double } @make_vec(double %26802, double %26804, double %26805, double %26807), !dbg !372
  %26809 = extractvalue { double, double } %26808, 0, !dbg !372
  store double %26809, ptr %16, align 8, !dbg !372
  %26810 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26811 = extractvalue { double, double } %26808, 1, !dbg !372
  store double %26811, ptr %26810, align 8, !dbg !372
  %26812 = load i32, ptr %10, align 4, !dbg !373
  %26813 = add nsw i32 %26812, 1, !dbg !374
  %26814 = sext i32 %26813 to i64, !dbg !375
  %26815 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26814, !dbg !375
  %26816 = load double, ptr %6, align 8, !dbg !376
  %26817 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26818 = load double, ptr %26817, align 8, !dbg !376
  %26819 = load double, ptr %26815, align 16, !dbg !376
  %26820 = getelementptr inbounds { double, double }, ptr %26815, i32 0, i32 1, !dbg !376
  %26821 = load double, ptr %26820, align 8, !dbg !376
  %26822 = call { double, double } @make_vec(double %26816, double %26818, double %26819, double %26821), !dbg !376
  %26823 = extractvalue { double, double } %26822, 0, !dbg !376
  store double %26823, ptr %17, align 8, !dbg !376
  %26824 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26825 = extractvalue { double, double } %26822, 1, !dbg !376
  store double %26825, ptr %26824, align 8, !dbg !376
  %26826 = load double, ptr %16, align 8, !dbg !377
  %26827 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26828 = load double, ptr %26827, align 8, !dbg !377
  %26829 = load double, ptr %17, align 8, !dbg !377
  %26830 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26831 = load double, ptr %26830, align 8, !dbg !377
  %26832 = call double @cross(double %26826, double %26828, double %26829, double %26831), !dbg !377
  %26833 = load i32, ptr %10, align 4, !dbg !378
  %26834 = sext i32 %26833 to i64, !dbg !379
  %26835 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26834, !dbg !379
  %26836 = load double, ptr %6, align 8, !dbg !380
  %26837 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26838 = load double, ptr %26837, align 8, !dbg !380
  %26839 = load double, ptr %26835, align 16, !dbg !380
  %26840 = getelementptr inbounds { double, double }, ptr %26835, i32 0, i32 1, !dbg !380
  %26841 = load double, ptr %26840, align 8, !dbg !380
  %26842 = call { double, double } @make_vec(double %26836, double %26838, double %26839, double %26841), !dbg !380
  %26843 = extractvalue { double, double } %26842, 0, !dbg !380
  store double %26843, ptr %18, align 8, !dbg !380
  %26844 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26845 = extractvalue { double, double } %26842, 1, !dbg !380
  store double %26845, ptr %26844, align 8, !dbg !380
  %26846 = load i32, ptr %10, align 4, !dbg !381
  %26847 = add nsw i32 %26846, 1, !dbg !382
  %26848 = sext i32 %26847 to i64, !dbg !383
  %26849 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26848, !dbg !383
  %26850 = load double, ptr %6, align 8, !dbg !384
  %26851 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26852 = load double, ptr %26851, align 8, !dbg !384
  %26853 = load double, ptr %26849, align 16, !dbg !384
  %26854 = getelementptr inbounds { double, double }, ptr %26849, i32 0, i32 1, !dbg !384
  %26855 = load double, ptr %26854, align 8, !dbg !384
  %26856 = call { double, double } @make_vec(double %26850, double %26852, double %26853, double %26855), !dbg !384
  %26857 = extractvalue { double, double } %26856, 0, !dbg !384
  store double %26857, ptr %19, align 8, !dbg !384
  %26858 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26859 = extractvalue { double, double } %26856, 1, !dbg !384
  store double %26859, ptr %26858, align 8, !dbg !384
  %26860 = load double, ptr %18, align 8, !dbg !385
  %26861 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26862 = load double, ptr %26861, align 8, !dbg !385
  %26863 = load double, ptr %19, align 8, !dbg !385
  %26864 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26865 = load double, ptr %26864, align 8, !dbg !385
  %26866 = call double @dot(double %26860, double %26862, double %26863, double %26865), !dbg !385
  %26867 = call double @atan2(double noundef %26832, double noundef %26866) #6, !dbg !386
  store double %26867, ptr %13, align 8, !dbg !387
  %26868 = load double, ptr %13, align 8, !dbg !388
  %26869 = load double, ptr %14, align 8, !dbg !389
  %26870 = fadd double %26869, %26868, !dbg !389
  store double %26870, ptr %14, align 8, !dbg !389
  %26871 = load double, ptr %13, align 8, !dbg !390
  %26872 = fsub double %26871, 0x400921FB54442D18, !dbg !392
  %26873 = call double @llvm.fabs.f64(double %26872), !dbg !393
  %26874 = fcmp ole double %26873, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26874, label %14330, label %26875, !dbg !395

26875:                                            ; preds = %26798
  %26876 = load double, ptr %13, align 8, !dbg !396
  %26877 = fadd double %26876, 0x400921FB54442D18, !dbg !397
  %26878 = call double @llvm.fabs.f64(double %26877), !dbg !398
  %26879 = fcmp ole double %26878, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26879, label %14330, label %26880, !dbg !400

26880:                                            ; preds = %26875
  br label %26881, !dbg !403

26881:                                            ; preds = %26880
  %26882 = load i32, ptr %10, align 4, !dbg !404
  %26883 = add nsw i32 %26882, 1, !dbg !404
  store i32 %26883, ptr %10, align 4, !dbg !404
  %26884 = load i32, ptr %10, align 4, !dbg !364
  %26885 = load i32, ptr %8, align 4, !dbg !366
  %26886 = icmp slt i32 %26884, %26885, !dbg !367
  br i1 %26886, label %26887, label %48422, !dbg !368

26887:                                            ; preds = %26881
  %26888 = load i32, ptr %10, align 4, !dbg !369
  %26889 = sext i32 %26888 to i64, !dbg !371
  %26890 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26889, !dbg !371
  %26891 = load double, ptr %6, align 8, !dbg !372
  %26892 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26893 = load double, ptr %26892, align 8, !dbg !372
  %26894 = load double, ptr %26890, align 16, !dbg !372
  %26895 = getelementptr inbounds { double, double }, ptr %26890, i32 0, i32 1, !dbg !372
  %26896 = load double, ptr %26895, align 8, !dbg !372
  %26897 = call { double, double } @make_vec(double %26891, double %26893, double %26894, double %26896), !dbg !372
  %26898 = extractvalue { double, double } %26897, 0, !dbg !372
  store double %26898, ptr %16, align 8, !dbg !372
  %26899 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26900 = extractvalue { double, double } %26897, 1, !dbg !372
  store double %26900, ptr %26899, align 8, !dbg !372
  %26901 = load i32, ptr %10, align 4, !dbg !373
  %26902 = add nsw i32 %26901, 1, !dbg !374
  %26903 = sext i32 %26902 to i64, !dbg !375
  %26904 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26903, !dbg !375
  %26905 = load double, ptr %6, align 8, !dbg !376
  %26906 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26907 = load double, ptr %26906, align 8, !dbg !376
  %26908 = load double, ptr %26904, align 16, !dbg !376
  %26909 = getelementptr inbounds { double, double }, ptr %26904, i32 0, i32 1, !dbg !376
  %26910 = load double, ptr %26909, align 8, !dbg !376
  %26911 = call { double, double } @make_vec(double %26905, double %26907, double %26908, double %26910), !dbg !376
  %26912 = extractvalue { double, double } %26911, 0, !dbg !376
  store double %26912, ptr %17, align 8, !dbg !376
  %26913 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %26914 = extractvalue { double, double } %26911, 1, !dbg !376
  store double %26914, ptr %26913, align 8, !dbg !376
  %26915 = load double, ptr %16, align 8, !dbg !377
  %26916 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %26917 = load double, ptr %26916, align 8, !dbg !377
  %26918 = load double, ptr %17, align 8, !dbg !377
  %26919 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %26920 = load double, ptr %26919, align 8, !dbg !377
  %26921 = call double @cross(double %26915, double %26917, double %26918, double %26920), !dbg !377
  %26922 = load i32, ptr %10, align 4, !dbg !378
  %26923 = sext i32 %26922 to i64, !dbg !379
  %26924 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26923, !dbg !379
  %26925 = load double, ptr %6, align 8, !dbg !380
  %26926 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %26927 = load double, ptr %26926, align 8, !dbg !380
  %26928 = load double, ptr %26924, align 16, !dbg !380
  %26929 = getelementptr inbounds { double, double }, ptr %26924, i32 0, i32 1, !dbg !380
  %26930 = load double, ptr %26929, align 8, !dbg !380
  %26931 = call { double, double } @make_vec(double %26925, double %26927, double %26928, double %26930), !dbg !380
  %26932 = extractvalue { double, double } %26931, 0, !dbg !380
  store double %26932, ptr %18, align 8, !dbg !380
  %26933 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %26934 = extractvalue { double, double } %26931, 1, !dbg !380
  store double %26934, ptr %26933, align 8, !dbg !380
  %26935 = load i32, ptr %10, align 4, !dbg !381
  %26936 = add nsw i32 %26935, 1, !dbg !382
  %26937 = sext i32 %26936 to i64, !dbg !383
  %26938 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26937, !dbg !383
  %26939 = load double, ptr %6, align 8, !dbg !384
  %26940 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %26941 = load double, ptr %26940, align 8, !dbg !384
  %26942 = load double, ptr %26938, align 16, !dbg !384
  %26943 = getelementptr inbounds { double, double }, ptr %26938, i32 0, i32 1, !dbg !384
  %26944 = load double, ptr %26943, align 8, !dbg !384
  %26945 = call { double, double } @make_vec(double %26939, double %26941, double %26942, double %26944), !dbg !384
  %26946 = extractvalue { double, double } %26945, 0, !dbg !384
  store double %26946, ptr %19, align 8, !dbg !384
  %26947 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %26948 = extractvalue { double, double } %26945, 1, !dbg !384
  store double %26948, ptr %26947, align 8, !dbg !384
  %26949 = load double, ptr %18, align 8, !dbg !385
  %26950 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %26951 = load double, ptr %26950, align 8, !dbg !385
  %26952 = load double, ptr %19, align 8, !dbg !385
  %26953 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %26954 = load double, ptr %26953, align 8, !dbg !385
  %26955 = call double @dot(double %26949, double %26951, double %26952, double %26954), !dbg !385
  %26956 = call double @atan2(double noundef %26921, double noundef %26955) #6, !dbg !386
  store double %26956, ptr %13, align 8, !dbg !387
  %26957 = load double, ptr %13, align 8, !dbg !388
  %26958 = load double, ptr %14, align 8, !dbg !389
  %26959 = fadd double %26958, %26957, !dbg !389
  store double %26959, ptr %14, align 8, !dbg !389
  %26960 = load double, ptr %13, align 8, !dbg !390
  %26961 = fsub double %26960, 0x400921FB54442D18, !dbg !392
  %26962 = call double @llvm.fabs.f64(double %26961), !dbg !393
  %26963 = fcmp ole double %26962, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %26963, label %14330, label %26964, !dbg !395

26964:                                            ; preds = %26887
  %26965 = load double, ptr %13, align 8, !dbg !396
  %26966 = fadd double %26965, 0x400921FB54442D18, !dbg !397
  %26967 = call double @llvm.fabs.f64(double %26966), !dbg !398
  %26968 = fcmp ole double %26967, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %26968, label %14330, label %26969, !dbg !400

26969:                                            ; preds = %26964
  br label %26970, !dbg !403

26970:                                            ; preds = %26969
  %26971 = load i32, ptr %10, align 4, !dbg !404
  %26972 = add nsw i32 %26971, 1, !dbg !404
  store i32 %26972, ptr %10, align 4, !dbg !404
  %26973 = load i32, ptr %10, align 4, !dbg !364
  %26974 = load i32, ptr %8, align 4, !dbg !366
  %26975 = icmp slt i32 %26973, %26974, !dbg !367
  br i1 %26975, label %26976, label %48422, !dbg !368

26976:                                            ; preds = %26970
  %26977 = load i32, ptr %10, align 4, !dbg !369
  %26978 = sext i32 %26977 to i64, !dbg !371
  %26979 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26978, !dbg !371
  %26980 = load double, ptr %6, align 8, !dbg !372
  %26981 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %26982 = load double, ptr %26981, align 8, !dbg !372
  %26983 = load double, ptr %26979, align 16, !dbg !372
  %26984 = getelementptr inbounds { double, double }, ptr %26979, i32 0, i32 1, !dbg !372
  %26985 = load double, ptr %26984, align 8, !dbg !372
  %26986 = call { double, double } @make_vec(double %26980, double %26982, double %26983, double %26985), !dbg !372
  %26987 = extractvalue { double, double } %26986, 0, !dbg !372
  store double %26987, ptr %16, align 8, !dbg !372
  %26988 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %26989 = extractvalue { double, double } %26986, 1, !dbg !372
  store double %26989, ptr %26988, align 8, !dbg !372
  %26990 = load i32, ptr %10, align 4, !dbg !373
  %26991 = add nsw i32 %26990, 1, !dbg !374
  %26992 = sext i32 %26991 to i64, !dbg !375
  %26993 = getelementptr inbounds %struct.POINT, ptr %26, i64 %26992, !dbg !375
  %26994 = load double, ptr %6, align 8, !dbg !376
  %26995 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %26996 = load double, ptr %26995, align 8, !dbg !376
  %26997 = load double, ptr %26993, align 16, !dbg !376
  %26998 = getelementptr inbounds { double, double }, ptr %26993, i32 0, i32 1, !dbg !376
  %26999 = load double, ptr %26998, align 8, !dbg !376
  %27000 = call { double, double } @make_vec(double %26994, double %26996, double %26997, double %26999), !dbg !376
  %27001 = extractvalue { double, double } %27000, 0, !dbg !376
  store double %27001, ptr %17, align 8, !dbg !376
  %27002 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27003 = extractvalue { double, double } %27000, 1, !dbg !376
  store double %27003, ptr %27002, align 8, !dbg !376
  %27004 = load double, ptr %16, align 8, !dbg !377
  %27005 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27006 = load double, ptr %27005, align 8, !dbg !377
  %27007 = load double, ptr %17, align 8, !dbg !377
  %27008 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27009 = load double, ptr %27008, align 8, !dbg !377
  %27010 = call double @cross(double %27004, double %27006, double %27007, double %27009), !dbg !377
  %27011 = load i32, ptr %10, align 4, !dbg !378
  %27012 = sext i32 %27011 to i64, !dbg !379
  %27013 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27012, !dbg !379
  %27014 = load double, ptr %6, align 8, !dbg !380
  %27015 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27016 = load double, ptr %27015, align 8, !dbg !380
  %27017 = load double, ptr %27013, align 16, !dbg !380
  %27018 = getelementptr inbounds { double, double }, ptr %27013, i32 0, i32 1, !dbg !380
  %27019 = load double, ptr %27018, align 8, !dbg !380
  %27020 = call { double, double } @make_vec(double %27014, double %27016, double %27017, double %27019), !dbg !380
  %27021 = extractvalue { double, double } %27020, 0, !dbg !380
  store double %27021, ptr %18, align 8, !dbg !380
  %27022 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27023 = extractvalue { double, double } %27020, 1, !dbg !380
  store double %27023, ptr %27022, align 8, !dbg !380
  %27024 = load i32, ptr %10, align 4, !dbg !381
  %27025 = add nsw i32 %27024, 1, !dbg !382
  %27026 = sext i32 %27025 to i64, !dbg !383
  %27027 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27026, !dbg !383
  %27028 = load double, ptr %6, align 8, !dbg !384
  %27029 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27030 = load double, ptr %27029, align 8, !dbg !384
  %27031 = load double, ptr %27027, align 16, !dbg !384
  %27032 = getelementptr inbounds { double, double }, ptr %27027, i32 0, i32 1, !dbg !384
  %27033 = load double, ptr %27032, align 8, !dbg !384
  %27034 = call { double, double } @make_vec(double %27028, double %27030, double %27031, double %27033), !dbg !384
  %27035 = extractvalue { double, double } %27034, 0, !dbg !384
  store double %27035, ptr %19, align 8, !dbg !384
  %27036 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27037 = extractvalue { double, double } %27034, 1, !dbg !384
  store double %27037, ptr %27036, align 8, !dbg !384
  %27038 = load double, ptr %18, align 8, !dbg !385
  %27039 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27040 = load double, ptr %27039, align 8, !dbg !385
  %27041 = load double, ptr %19, align 8, !dbg !385
  %27042 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27043 = load double, ptr %27042, align 8, !dbg !385
  %27044 = call double @dot(double %27038, double %27040, double %27041, double %27043), !dbg !385
  %27045 = call double @atan2(double noundef %27010, double noundef %27044) #6, !dbg !386
  store double %27045, ptr %13, align 8, !dbg !387
  %27046 = load double, ptr %13, align 8, !dbg !388
  %27047 = load double, ptr %14, align 8, !dbg !389
  %27048 = fadd double %27047, %27046, !dbg !389
  store double %27048, ptr %14, align 8, !dbg !389
  %27049 = load double, ptr %13, align 8, !dbg !390
  %27050 = fsub double %27049, 0x400921FB54442D18, !dbg !392
  %27051 = call double @llvm.fabs.f64(double %27050), !dbg !393
  %27052 = fcmp ole double %27051, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27052, label %14330, label %27053, !dbg !395

27053:                                            ; preds = %26976
  %27054 = load double, ptr %13, align 8, !dbg !396
  %27055 = fadd double %27054, 0x400921FB54442D18, !dbg !397
  %27056 = call double @llvm.fabs.f64(double %27055), !dbg !398
  %27057 = fcmp ole double %27056, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27057, label %14330, label %27058, !dbg !400

27058:                                            ; preds = %27053
  br label %27059, !dbg !403

27059:                                            ; preds = %27058
  %27060 = load i32, ptr %10, align 4, !dbg !404
  %27061 = add nsw i32 %27060, 1, !dbg !404
  store i32 %27061, ptr %10, align 4, !dbg !404
  %27062 = load i32, ptr %10, align 4, !dbg !364
  %27063 = load i32, ptr %8, align 4, !dbg !366
  %27064 = icmp slt i32 %27062, %27063, !dbg !367
  br i1 %27064, label %27065, label %48422, !dbg !368

27065:                                            ; preds = %27059
  %27066 = load i32, ptr %10, align 4, !dbg !369
  %27067 = sext i32 %27066 to i64, !dbg !371
  %27068 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27067, !dbg !371
  %27069 = load double, ptr %6, align 8, !dbg !372
  %27070 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27071 = load double, ptr %27070, align 8, !dbg !372
  %27072 = load double, ptr %27068, align 16, !dbg !372
  %27073 = getelementptr inbounds { double, double }, ptr %27068, i32 0, i32 1, !dbg !372
  %27074 = load double, ptr %27073, align 8, !dbg !372
  %27075 = call { double, double } @make_vec(double %27069, double %27071, double %27072, double %27074), !dbg !372
  %27076 = extractvalue { double, double } %27075, 0, !dbg !372
  store double %27076, ptr %16, align 8, !dbg !372
  %27077 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27078 = extractvalue { double, double } %27075, 1, !dbg !372
  store double %27078, ptr %27077, align 8, !dbg !372
  %27079 = load i32, ptr %10, align 4, !dbg !373
  %27080 = add nsw i32 %27079, 1, !dbg !374
  %27081 = sext i32 %27080 to i64, !dbg !375
  %27082 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27081, !dbg !375
  %27083 = load double, ptr %6, align 8, !dbg !376
  %27084 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27085 = load double, ptr %27084, align 8, !dbg !376
  %27086 = load double, ptr %27082, align 16, !dbg !376
  %27087 = getelementptr inbounds { double, double }, ptr %27082, i32 0, i32 1, !dbg !376
  %27088 = load double, ptr %27087, align 8, !dbg !376
  %27089 = call { double, double } @make_vec(double %27083, double %27085, double %27086, double %27088), !dbg !376
  %27090 = extractvalue { double, double } %27089, 0, !dbg !376
  store double %27090, ptr %17, align 8, !dbg !376
  %27091 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27092 = extractvalue { double, double } %27089, 1, !dbg !376
  store double %27092, ptr %27091, align 8, !dbg !376
  %27093 = load double, ptr %16, align 8, !dbg !377
  %27094 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27095 = load double, ptr %27094, align 8, !dbg !377
  %27096 = load double, ptr %17, align 8, !dbg !377
  %27097 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27098 = load double, ptr %27097, align 8, !dbg !377
  %27099 = call double @cross(double %27093, double %27095, double %27096, double %27098), !dbg !377
  %27100 = load i32, ptr %10, align 4, !dbg !378
  %27101 = sext i32 %27100 to i64, !dbg !379
  %27102 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27101, !dbg !379
  %27103 = load double, ptr %6, align 8, !dbg !380
  %27104 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27105 = load double, ptr %27104, align 8, !dbg !380
  %27106 = load double, ptr %27102, align 16, !dbg !380
  %27107 = getelementptr inbounds { double, double }, ptr %27102, i32 0, i32 1, !dbg !380
  %27108 = load double, ptr %27107, align 8, !dbg !380
  %27109 = call { double, double } @make_vec(double %27103, double %27105, double %27106, double %27108), !dbg !380
  %27110 = extractvalue { double, double } %27109, 0, !dbg !380
  store double %27110, ptr %18, align 8, !dbg !380
  %27111 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27112 = extractvalue { double, double } %27109, 1, !dbg !380
  store double %27112, ptr %27111, align 8, !dbg !380
  %27113 = load i32, ptr %10, align 4, !dbg !381
  %27114 = add nsw i32 %27113, 1, !dbg !382
  %27115 = sext i32 %27114 to i64, !dbg !383
  %27116 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27115, !dbg !383
  %27117 = load double, ptr %6, align 8, !dbg !384
  %27118 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27119 = load double, ptr %27118, align 8, !dbg !384
  %27120 = load double, ptr %27116, align 16, !dbg !384
  %27121 = getelementptr inbounds { double, double }, ptr %27116, i32 0, i32 1, !dbg !384
  %27122 = load double, ptr %27121, align 8, !dbg !384
  %27123 = call { double, double } @make_vec(double %27117, double %27119, double %27120, double %27122), !dbg !384
  %27124 = extractvalue { double, double } %27123, 0, !dbg !384
  store double %27124, ptr %19, align 8, !dbg !384
  %27125 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27126 = extractvalue { double, double } %27123, 1, !dbg !384
  store double %27126, ptr %27125, align 8, !dbg !384
  %27127 = load double, ptr %18, align 8, !dbg !385
  %27128 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27129 = load double, ptr %27128, align 8, !dbg !385
  %27130 = load double, ptr %19, align 8, !dbg !385
  %27131 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27132 = load double, ptr %27131, align 8, !dbg !385
  %27133 = call double @dot(double %27127, double %27129, double %27130, double %27132), !dbg !385
  %27134 = call double @atan2(double noundef %27099, double noundef %27133) #6, !dbg !386
  store double %27134, ptr %13, align 8, !dbg !387
  %27135 = load double, ptr %13, align 8, !dbg !388
  %27136 = load double, ptr %14, align 8, !dbg !389
  %27137 = fadd double %27136, %27135, !dbg !389
  store double %27137, ptr %14, align 8, !dbg !389
  %27138 = load double, ptr %13, align 8, !dbg !390
  %27139 = fsub double %27138, 0x400921FB54442D18, !dbg !392
  %27140 = call double @llvm.fabs.f64(double %27139), !dbg !393
  %27141 = fcmp ole double %27140, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27141, label %14330, label %27142, !dbg !395

27142:                                            ; preds = %27065
  %27143 = load double, ptr %13, align 8, !dbg !396
  %27144 = fadd double %27143, 0x400921FB54442D18, !dbg !397
  %27145 = call double @llvm.fabs.f64(double %27144), !dbg !398
  %27146 = fcmp ole double %27145, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27146, label %14330, label %27147, !dbg !400

27147:                                            ; preds = %27142
  br label %27148, !dbg !403

27148:                                            ; preds = %27147
  %27149 = load i32, ptr %10, align 4, !dbg !404
  %27150 = add nsw i32 %27149, 1, !dbg !404
  store i32 %27150, ptr %10, align 4, !dbg !404
  %27151 = load i32, ptr %10, align 4, !dbg !364
  %27152 = load i32, ptr %8, align 4, !dbg !366
  %27153 = icmp slt i32 %27151, %27152, !dbg !367
  br i1 %27153, label %27154, label %48422, !dbg !368

27154:                                            ; preds = %27148
  %27155 = load i32, ptr %10, align 4, !dbg !369
  %27156 = sext i32 %27155 to i64, !dbg !371
  %27157 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27156, !dbg !371
  %27158 = load double, ptr %6, align 8, !dbg !372
  %27159 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27160 = load double, ptr %27159, align 8, !dbg !372
  %27161 = load double, ptr %27157, align 16, !dbg !372
  %27162 = getelementptr inbounds { double, double }, ptr %27157, i32 0, i32 1, !dbg !372
  %27163 = load double, ptr %27162, align 8, !dbg !372
  %27164 = call { double, double } @make_vec(double %27158, double %27160, double %27161, double %27163), !dbg !372
  %27165 = extractvalue { double, double } %27164, 0, !dbg !372
  store double %27165, ptr %16, align 8, !dbg !372
  %27166 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27167 = extractvalue { double, double } %27164, 1, !dbg !372
  store double %27167, ptr %27166, align 8, !dbg !372
  %27168 = load i32, ptr %10, align 4, !dbg !373
  %27169 = add nsw i32 %27168, 1, !dbg !374
  %27170 = sext i32 %27169 to i64, !dbg !375
  %27171 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27170, !dbg !375
  %27172 = load double, ptr %6, align 8, !dbg !376
  %27173 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27174 = load double, ptr %27173, align 8, !dbg !376
  %27175 = load double, ptr %27171, align 16, !dbg !376
  %27176 = getelementptr inbounds { double, double }, ptr %27171, i32 0, i32 1, !dbg !376
  %27177 = load double, ptr %27176, align 8, !dbg !376
  %27178 = call { double, double } @make_vec(double %27172, double %27174, double %27175, double %27177), !dbg !376
  %27179 = extractvalue { double, double } %27178, 0, !dbg !376
  store double %27179, ptr %17, align 8, !dbg !376
  %27180 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27181 = extractvalue { double, double } %27178, 1, !dbg !376
  store double %27181, ptr %27180, align 8, !dbg !376
  %27182 = load double, ptr %16, align 8, !dbg !377
  %27183 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27184 = load double, ptr %27183, align 8, !dbg !377
  %27185 = load double, ptr %17, align 8, !dbg !377
  %27186 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27187 = load double, ptr %27186, align 8, !dbg !377
  %27188 = call double @cross(double %27182, double %27184, double %27185, double %27187), !dbg !377
  %27189 = load i32, ptr %10, align 4, !dbg !378
  %27190 = sext i32 %27189 to i64, !dbg !379
  %27191 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27190, !dbg !379
  %27192 = load double, ptr %6, align 8, !dbg !380
  %27193 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27194 = load double, ptr %27193, align 8, !dbg !380
  %27195 = load double, ptr %27191, align 16, !dbg !380
  %27196 = getelementptr inbounds { double, double }, ptr %27191, i32 0, i32 1, !dbg !380
  %27197 = load double, ptr %27196, align 8, !dbg !380
  %27198 = call { double, double } @make_vec(double %27192, double %27194, double %27195, double %27197), !dbg !380
  %27199 = extractvalue { double, double } %27198, 0, !dbg !380
  store double %27199, ptr %18, align 8, !dbg !380
  %27200 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27201 = extractvalue { double, double } %27198, 1, !dbg !380
  store double %27201, ptr %27200, align 8, !dbg !380
  %27202 = load i32, ptr %10, align 4, !dbg !381
  %27203 = add nsw i32 %27202, 1, !dbg !382
  %27204 = sext i32 %27203 to i64, !dbg !383
  %27205 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27204, !dbg !383
  %27206 = load double, ptr %6, align 8, !dbg !384
  %27207 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27208 = load double, ptr %27207, align 8, !dbg !384
  %27209 = load double, ptr %27205, align 16, !dbg !384
  %27210 = getelementptr inbounds { double, double }, ptr %27205, i32 0, i32 1, !dbg !384
  %27211 = load double, ptr %27210, align 8, !dbg !384
  %27212 = call { double, double } @make_vec(double %27206, double %27208, double %27209, double %27211), !dbg !384
  %27213 = extractvalue { double, double } %27212, 0, !dbg !384
  store double %27213, ptr %19, align 8, !dbg !384
  %27214 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27215 = extractvalue { double, double } %27212, 1, !dbg !384
  store double %27215, ptr %27214, align 8, !dbg !384
  %27216 = load double, ptr %18, align 8, !dbg !385
  %27217 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27218 = load double, ptr %27217, align 8, !dbg !385
  %27219 = load double, ptr %19, align 8, !dbg !385
  %27220 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27221 = load double, ptr %27220, align 8, !dbg !385
  %27222 = call double @dot(double %27216, double %27218, double %27219, double %27221), !dbg !385
  %27223 = call double @atan2(double noundef %27188, double noundef %27222) #6, !dbg !386
  store double %27223, ptr %13, align 8, !dbg !387
  %27224 = load double, ptr %13, align 8, !dbg !388
  %27225 = load double, ptr %14, align 8, !dbg !389
  %27226 = fadd double %27225, %27224, !dbg !389
  store double %27226, ptr %14, align 8, !dbg !389
  %27227 = load double, ptr %13, align 8, !dbg !390
  %27228 = fsub double %27227, 0x400921FB54442D18, !dbg !392
  %27229 = call double @llvm.fabs.f64(double %27228), !dbg !393
  %27230 = fcmp ole double %27229, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27230, label %14330, label %27231, !dbg !395

27231:                                            ; preds = %27154
  %27232 = load double, ptr %13, align 8, !dbg !396
  %27233 = fadd double %27232, 0x400921FB54442D18, !dbg !397
  %27234 = call double @llvm.fabs.f64(double %27233), !dbg !398
  %27235 = fcmp ole double %27234, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27235, label %14330, label %27236, !dbg !400

27236:                                            ; preds = %27231
  br label %27237, !dbg !403

27237:                                            ; preds = %27236
  %27238 = load i32, ptr %10, align 4, !dbg !404
  %27239 = add nsw i32 %27238, 1, !dbg !404
  store i32 %27239, ptr %10, align 4, !dbg !404
  %27240 = load i32, ptr %10, align 4, !dbg !364
  %27241 = load i32, ptr %8, align 4, !dbg !366
  %27242 = icmp slt i32 %27240, %27241, !dbg !367
  br i1 %27242, label %27243, label %48422, !dbg !368

27243:                                            ; preds = %27237
  %27244 = load i32, ptr %10, align 4, !dbg !369
  %27245 = sext i32 %27244 to i64, !dbg !371
  %27246 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27245, !dbg !371
  %27247 = load double, ptr %6, align 8, !dbg !372
  %27248 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27249 = load double, ptr %27248, align 8, !dbg !372
  %27250 = load double, ptr %27246, align 16, !dbg !372
  %27251 = getelementptr inbounds { double, double }, ptr %27246, i32 0, i32 1, !dbg !372
  %27252 = load double, ptr %27251, align 8, !dbg !372
  %27253 = call { double, double } @make_vec(double %27247, double %27249, double %27250, double %27252), !dbg !372
  %27254 = extractvalue { double, double } %27253, 0, !dbg !372
  store double %27254, ptr %16, align 8, !dbg !372
  %27255 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27256 = extractvalue { double, double } %27253, 1, !dbg !372
  store double %27256, ptr %27255, align 8, !dbg !372
  %27257 = load i32, ptr %10, align 4, !dbg !373
  %27258 = add nsw i32 %27257, 1, !dbg !374
  %27259 = sext i32 %27258 to i64, !dbg !375
  %27260 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27259, !dbg !375
  %27261 = load double, ptr %6, align 8, !dbg !376
  %27262 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27263 = load double, ptr %27262, align 8, !dbg !376
  %27264 = load double, ptr %27260, align 16, !dbg !376
  %27265 = getelementptr inbounds { double, double }, ptr %27260, i32 0, i32 1, !dbg !376
  %27266 = load double, ptr %27265, align 8, !dbg !376
  %27267 = call { double, double } @make_vec(double %27261, double %27263, double %27264, double %27266), !dbg !376
  %27268 = extractvalue { double, double } %27267, 0, !dbg !376
  store double %27268, ptr %17, align 8, !dbg !376
  %27269 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27270 = extractvalue { double, double } %27267, 1, !dbg !376
  store double %27270, ptr %27269, align 8, !dbg !376
  %27271 = load double, ptr %16, align 8, !dbg !377
  %27272 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27273 = load double, ptr %27272, align 8, !dbg !377
  %27274 = load double, ptr %17, align 8, !dbg !377
  %27275 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27276 = load double, ptr %27275, align 8, !dbg !377
  %27277 = call double @cross(double %27271, double %27273, double %27274, double %27276), !dbg !377
  %27278 = load i32, ptr %10, align 4, !dbg !378
  %27279 = sext i32 %27278 to i64, !dbg !379
  %27280 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27279, !dbg !379
  %27281 = load double, ptr %6, align 8, !dbg !380
  %27282 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27283 = load double, ptr %27282, align 8, !dbg !380
  %27284 = load double, ptr %27280, align 16, !dbg !380
  %27285 = getelementptr inbounds { double, double }, ptr %27280, i32 0, i32 1, !dbg !380
  %27286 = load double, ptr %27285, align 8, !dbg !380
  %27287 = call { double, double } @make_vec(double %27281, double %27283, double %27284, double %27286), !dbg !380
  %27288 = extractvalue { double, double } %27287, 0, !dbg !380
  store double %27288, ptr %18, align 8, !dbg !380
  %27289 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27290 = extractvalue { double, double } %27287, 1, !dbg !380
  store double %27290, ptr %27289, align 8, !dbg !380
  %27291 = load i32, ptr %10, align 4, !dbg !381
  %27292 = add nsw i32 %27291, 1, !dbg !382
  %27293 = sext i32 %27292 to i64, !dbg !383
  %27294 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27293, !dbg !383
  %27295 = load double, ptr %6, align 8, !dbg !384
  %27296 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27297 = load double, ptr %27296, align 8, !dbg !384
  %27298 = load double, ptr %27294, align 16, !dbg !384
  %27299 = getelementptr inbounds { double, double }, ptr %27294, i32 0, i32 1, !dbg !384
  %27300 = load double, ptr %27299, align 8, !dbg !384
  %27301 = call { double, double } @make_vec(double %27295, double %27297, double %27298, double %27300), !dbg !384
  %27302 = extractvalue { double, double } %27301, 0, !dbg !384
  store double %27302, ptr %19, align 8, !dbg !384
  %27303 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27304 = extractvalue { double, double } %27301, 1, !dbg !384
  store double %27304, ptr %27303, align 8, !dbg !384
  %27305 = load double, ptr %18, align 8, !dbg !385
  %27306 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27307 = load double, ptr %27306, align 8, !dbg !385
  %27308 = load double, ptr %19, align 8, !dbg !385
  %27309 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27310 = load double, ptr %27309, align 8, !dbg !385
  %27311 = call double @dot(double %27305, double %27307, double %27308, double %27310), !dbg !385
  %27312 = call double @atan2(double noundef %27277, double noundef %27311) #6, !dbg !386
  store double %27312, ptr %13, align 8, !dbg !387
  %27313 = load double, ptr %13, align 8, !dbg !388
  %27314 = load double, ptr %14, align 8, !dbg !389
  %27315 = fadd double %27314, %27313, !dbg !389
  store double %27315, ptr %14, align 8, !dbg !389
  %27316 = load double, ptr %13, align 8, !dbg !390
  %27317 = fsub double %27316, 0x400921FB54442D18, !dbg !392
  %27318 = call double @llvm.fabs.f64(double %27317), !dbg !393
  %27319 = fcmp ole double %27318, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27319, label %14330, label %27320, !dbg !395

27320:                                            ; preds = %27243
  %27321 = load double, ptr %13, align 8, !dbg !396
  %27322 = fadd double %27321, 0x400921FB54442D18, !dbg !397
  %27323 = call double @llvm.fabs.f64(double %27322), !dbg !398
  %27324 = fcmp ole double %27323, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27324, label %14330, label %27325, !dbg !400

27325:                                            ; preds = %27320
  br label %27326, !dbg !403

27326:                                            ; preds = %27325
  %27327 = load i32, ptr %10, align 4, !dbg !404
  %27328 = add nsw i32 %27327, 1, !dbg !404
  store i32 %27328, ptr %10, align 4, !dbg !404
  %27329 = load i32, ptr %10, align 4, !dbg !364
  %27330 = load i32, ptr %8, align 4, !dbg !366
  %27331 = icmp slt i32 %27329, %27330, !dbg !367
  br i1 %27331, label %27332, label %48422, !dbg !368

27332:                                            ; preds = %27326
  %27333 = load i32, ptr %10, align 4, !dbg !369
  %27334 = sext i32 %27333 to i64, !dbg !371
  %27335 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27334, !dbg !371
  %27336 = load double, ptr %6, align 8, !dbg !372
  %27337 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27338 = load double, ptr %27337, align 8, !dbg !372
  %27339 = load double, ptr %27335, align 16, !dbg !372
  %27340 = getelementptr inbounds { double, double }, ptr %27335, i32 0, i32 1, !dbg !372
  %27341 = load double, ptr %27340, align 8, !dbg !372
  %27342 = call { double, double } @make_vec(double %27336, double %27338, double %27339, double %27341), !dbg !372
  %27343 = extractvalue { double, double } %27342, 0, !dbg !372
  store double %27343, ptr %16, align 8, !dbg !372
  %27344 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27345 = extractvalue { double, double } %27342, 1, !dbg !372
  store double %27345, ptr %27344, align 8, !dbg !372
  %27346 = load i32, ptr %10, align 4, !dbg !373
  %27347 = add nsw i32 %27346, 1, !dbg !374
  %27348 = sext i32 %27347 to i64, !dbg !375
  %27349 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27348, !dbg !375
  %27350 = load double, ptr %6, align 8, !dbg !376
  %27351 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27352 = load double, ptr %27351, align 8, !dbg !376
  %27353 = load double, ptr %27349, align 16, !dbg !376
  %27354 = getelementptr inbounds { double, double }, ptr %27349, i32 0, i32 1, !dbg !376
  %27355 = load double, ptr %27354, align 8, !dbg !376
  %27356 = call { double, double } @make_vec(double %27350, double %27352, double %27353, double %27355), !dbg !376
  %27357 = extractvalue { double, double } %27356, 0, !dbg !376
  store double %27357, ptr %17, align 8, !dbg !376
  %27358 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27359 = extractvalue { double, double } %27356, 1, !dbg !376
  store double %27359, ptr %27358, align 8, !dbg !376
  %27360 = load double, ptr %16, align 8, !dbg !377
  %27361 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27362 = load double, ptr %27361, align 8, !dbg !377
  %27363 = load double, ptr %17, align 8, !dbg !377
  %27364 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27365 = load double, ptr %27364, align 8, !dbg !377
  %27366 = call double @cross(double %27360, double %27362, double %27363, double %27365), !dbg !377
  %27367 = load i32, ptr %10, align 4, !dbg !378
  %27368 = sext i32 %27367 to i64, !dbg !379
  %27369 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27368, !dbg !379
  %27370 = load double, ptr %6, align 8, !dbg !380
  %27371 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27372 = load double, ptr %27371, align 8, !dbg !380
  %27373 = load double, ptr %27369, align 16, !dbg !380
  %27374 = getelementptr inbounds { double, double }, ptr %27369, i32 0, i32 1, !dbg !380
  %27375 = load double, ptr %27374, align 8, !dbg !380
  %27376 = call { double, double } @make_vec(double %27370, double %27372, double %27373, double %27375), !dbg !380
  %27377 = extractvalue { double, double } %27376, 0, !dbg !380
  store double %27377, ptr %18, align 8, !dbg !380
  %27378 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27379 = extractvalue { double, double } %27376, 1, !dbg !380
  store double %27379, ptr %27378, align 8, !dbg !380
  %27380 = load i32, ptr %10, align 4, !dbg !381
  %27381 = add nsw i32 %27380, 1, !dbg !382
  %27382 = sext i32 %27381 to i64, !dbg !383
  %27383 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27382, !dbg !383
  %27384 = load double, ptr %6, align 8, !dbg !384
  %27385 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27386 = load double, ptr %27385, align 8, !dbg !384
  %27387 = load double, ptr %27383, align 16, !dbg !384
  %27388 = getelementptr inbounds { double, double }, ptr %27383, i32 0, i32 1, !dbg !384
  %27389 = load double, ptr %27388, align 8, !dbg !384
  %27390 = call { double, double } @make_vec(double %27384, double %27386, double %27387, double %27389), !dbg !384
  %27391 = extractvalue { double, double } %27390, 0, !dbg !384
  store double %27391, ptr %19, align 8, !dbg !384
  %27392 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27393 = extractvalue { double, double } %27390, 1, !dbg !384
  store double %27393, ptr %27392, align 8, !dbg !384
  %27394 = load double, ptr %18, align 8, !dbg !385
  %27395 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27396 = load double, ptr %27395, align 8, !dbg !385
  %27397 = load double, ptr %19, align 8, !dbg !385
  %27398 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27399 = load double, ptr %27398, align 8, !dbg !385
  %27400 = call double @dot(double %27394, double %27396, double %27397, double %27399), !dbg !385
  %27401 = call double @atan2(double noundef %27366, double noundef %27400) #6, !dbg !386
  store double %27401, ptr %13, align 8, !dbg !387
  %27402 = load double, ptr %13, align 8, !dbg !388
  %27403 = load double, ptr %14, align 8, !dbg !389
  %27404 = fadd double %27403, %27402, !dbg !389
  store double %27404, ptr %14, align 8, !dbg !389
  %27405 = load double, ptr %13, align 8, !dbg !390
  %27406 = fsub double %27405, 0x400921FB54442D18, !dbg !392
  %27407 = call double @llvm.fabs.f64(double %27406), !dbg !393
  %27408 = fcmp ole double %27407, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27408, label %14330, label %27409, !dbg !395

27409:                                            ; preds = %27332
  %27410 = load double, ptr %13, align 8, !dbg !396
  %27411 = fadd double %27410, 0x400921FB54442D18, !dbg !397
  %27412 = call double @llvm.fabs.f64(double %27411), !dbg !398
  %27413 = fcmp ole double %27412, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27413, label %14330, label %27414, !dbg !400

27414:                                            ; preds = %27409
  br label %27415, !dbg !403

27415:                                            ; preds = %27414
  %27416 = load i32, ptr %10, align 4, !dbg !404
  %27417 = add nsw i32 %27416, 1, !dbg !404
  store i32 %27417, ptr %10, align 4, !dbg !404
  %27418 = load i32, ptr %10, align 4, !dbg !364
  %27419 = load i32, ptr %8, align 4, !dbg !366
  %27420 = icmp slt i32 %27418, %27419, !dbg !367
  br i1 %27420, label %27421, label %48422, !dbg !368

27421:                                            ; preds = %27415
  %27422 = load i32, ptr %10, align 4, !dbg !369
  %27423 = sext i32 %27422 to i64, !dbg !371
  %27424 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27423, !dbg !371
  %27425 = load double, ptr %6, align 8, !dbg !372
  %27426 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27427 = load double, ptr %27426, align 8, !dbg !372
  %27428 = load double, ptr %27424, align 16, !dbg !372
  %27429 = getelementptr inbounds { double, double }, ptr %27424, i32 0, i32 1, !dbg !372
  %27430 = load double, ptr %27429, align 8, !dbg !372
  %27431 = call { double, double } @make_vec(double %27425, double %27427, double %27428, double %27430), !dbg !372
  %27432 = extractvalue { double, double } %27431, 0, !dbg !372
  store double %27432, ptr %16, align 8, !dbg !372
  %27433 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27434 = extractvalue { double, double } %27431, 1, !dbg !372
  store double %27434, ptr %27433, align 8, !dbg !372
  %27435 = load i32, ptr %10, align 4, !dbg !373
  %27436 = add nsw i32 %27435, 1, !dbg !374
  %27437 = sext i32 %27436 to i64, !dbg !375
  %27438 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27437, !dbg !375
  %27439 = load double, ptr %6, align 8, !dbg !376
  %27440 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27441 = load double, ptr %27440, align 8, !dbg !376
  %27442 = load double, ptr %27438, align 16, !dbg !376
  %27443 = getelementptr inbounds { double, double }, ptr %27438, i32 0, i32 1, !dbg !376
  %27444 = load double, ptr %27443, align 8, !dbg !376
  %27445 = call { double, double } @make_vec(double %27439, double %27441, double %27442, double %27444), !dbg !376
  %27446 = extractvalue { double, double } %27445, 0, !dbg !376
  store double %27446, ptr %17, align 8, !dbg !376
  %27447 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27448 = extractvalue { double, double } %27445, 1, !dbg !376
  store double %27448, ptr %27447, align 8, !dbg !376
  %27449 = load double, ptr %16, align 8, !dbg !377
  %27450 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27451 = load double, ptr %27450, align 8, !dbg !377
  %27452 = load double, ptr %17, align 8, !dbg !377
  %27453 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27454 = load double, ptr %27453, align 8, !dbg !377
  %27455 = call double @cross(double %27449, double %27451, double %27452, double %27454), !dbg !377
  %27456 = load i32, ptr %10, align 4, !dbg !378
  %27457 = sext i32 %27456 to i64, !dbg !379
  %27458 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27457, !dbg !379
  %27459 = load double, ptr %6, align 8, !dbg !380
  %27460 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27461 = load double, ptr %27460, align 8, !dbg !380
  %27462 = load double, ptr %27458, align 16, !dbg !380
  %27463 = getelementptr inbounds { double, double }, ptr %27458, i32 0, i32 1, !dbg !380
  %27464 = load double, ptr %27463, align 8, !dbg !380
  %27465 = call { double, double } @make_vec(double %27459, double %27461, double %27462, double %27464), !dbg !380
  %27466 = extractvalue { double, double } %27465, 0, !dbg !380
  store double %27466, ptr %18, align 8, !dbg !380
  %27467 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27468 = extractvalue { double, double } %27465, 1, !dbg !380
  store double %27468, ptr %27467, align 8, !dbg !380
  %27469 = load i32, ptr %10, align 4, !dbg !381
  %27470 = add nsw i32 %27469, 1, !dbg !382
  %27471 = sext i32 %27470 to i64, !dbg !383
  %27472 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27471, !dbg !383
  %27473 = load double, ptr %6, align 8, !dbg !384
  %27474 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27475 = load double, ptr %27474, align 8, !dbg !384
  %27476 = load double, ptr %27472, align 16, !dbg !384
  %27477 = getelementptr inbounds { double, double }, ptr %27472, i32 0, i32 1, !dbg !384
  %27478 = load double, ptr %27477, align 8, !dbg !384
  %27479 = call { double, double } @make_vec(double %27473, double %27475, double %27476, double %27478), !dbg !384
  %27480 = extractvalue { double, double } %27479, 0, !dbg !384
  store double %27480, ptr %19, align 8, !dbg !384
  %27481 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27482 = extractvalue { double, double } %27479, 1, !dbg !384
  store double %27482, ptr %27481, align 8, !dbg !384
  %27483 = load double, ptr %18, align 8, !dbg !385
  %27484 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27485 = load double, ptr %27484, align 8, !dbg !385
  %27486 = load double, ptr %19, align 8, !dbg !385
  %27487 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27488 = load double, ptr %27487, align 8, !dbg !385
  %27489 = call double @dot(double %27483, double %27485, double %27486, double %27488), !dbg !385
  %27490 = call double @atan2(double noundef %27455, double noundef %27489) #6, !dbg !386
  store double %27490, ptr %13, align 8, !dbg !387
  %27491 = load double, ptr %13, align 8, !dbg !388
  %27492 = load double, ptr %14, align 8, !dbg !389
  %27493 = fadd double %27492, %27491, !dbg !389
  store double %27493, ptr %14, align 8, !dbg !389
  %27494 = load double, ptr %13, align 8, !dbg !390
  %27495 = fsub double %27494, 0x400921FB54442D18, !dbg !392
  %27496 = call double @llvm.fabs.f64(double %27495), !dbg !393
  %27497 = fcmp ole double %27496, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27497, label %14330, label %27498, !dbg !395

27498:                                            ; preds = %27421
  %27499 = load double, ptr %13, align 8, !dbg !396
  %27500 = fadd double %27499, 0x400921FB54442D18, !dbg !397
  %27501 = call double @llvm.fabs.f64(double %27500), !dbg !398
  %27502 = fcmp ole double %27501, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27502, label %14330, label %27503, !dbg !400

27503:                                            ; preds = %27498
  br label %27504, !dbg !403

27504:                                            ; preds = %27503
  %27505 = load i32, ptr %10, align 4, !dbg !404
  %27506 = add nsw i32 %27505, 1, !dbg !404
  store i32 %27506, ptr %10, align 4, !dbg !404
  %27507 = load i32, ptr %10, align 4, !dbg !364
  %27508 = load i32, ptr %8, align 4, !dbg !366
  %27509 = icmp slt i32 %27507, %27508, !dbg !367
  br i1 %27509, label %27510, label %48422, !dbg !368

27510:                                            ; preds = %27504
  %27511 = load i32, ptr %10, align 4, !dbg !369
  %27512 = sext i32 %27511 to i64, !dbg !371
  %27513 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27512, !dbg !371
  %27514 = load double, ptr %6, align 8, !dbg !372
  %27515 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27516 = load double, ptr %27515, align 8, !dbg !372
  %27517 = load double, ptr %27513, align 16, !dbg !372
  %27518 = getelementptr inbounds { double, double }, ptr %27513, i32 0, i32 1, !dbg !372
  %27519 = load double, ptr %27518, align 8, !dbg !372
  %27520 = call { double, double } @make_vec(double %27514, double %27516, double %27517, double %27519), !dbg !372
  %27521 = extractvalue { double, double } %27520, 0, !dbg !372
  store double %27521, ptr %16, align 8, !dbg !372
  %27522 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27523 = extractvalue { double, double } %27520, 1, !dbg !372
  store double %27523, ptr %27522, align 8, !dbg !372
  %27524 = load i32, ptr %10, align 4, !dbg !373
  %27525 = add nsw i32 %27524, 1, !dbg !374
  %27526 = sext i32 %27525 to i64, !dbg !375
  %27527 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27526, !dbg !375
  %27528 = load double, ptr %6, align 8, !dbg !376
  %27529 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27530 = load double, ptr %27529, align 8, !dbg !376
  %27531 = load double, ptr %27527, align 16, !dbg !376
  %27532 = getelementptr inbounds { double, double }, ptr %27527, i32 0, i32 1, !dbg !376
  %27533 = load double, ptr %27532, align 8, !dbg !376
  %27534 = call { double, double } @make_vec(double %27528, double %27530, double %27531, double %27533), !dbg !376
  %27535 = extractvalue { double, double } %27534, 0, !dbg !376
  store double %27535, ptr %17, align 8, !dbg !376
  %27536 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27537 = extractvalue { double, double } %27534, 1, !dbg !376
  store double %27537, ptr %27536, align 8, !dbg !376
  %27538 = load double, ptr %16, align 8, !dbg !377
  %27539 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27540 = load double, ptr %27539, align 8, !dbg !377
  %27541 = load double, ptr %17, align 8, !dbg !377
  %27542 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27543 = load double, ptr %27542, align 8, !dbg !377
  %27544 = call double @cross(double %27538, double %27540, double %27541, double %27543), !dbg !377
  %27545 = load i32, ptr %10, align 4, !dbg !378
  %27546 = sext i32 %27545 to i64, !dbg !379
  %27547 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27546, !dbg !379
  %27548 = load double, ptr %6, align 8, !dbg !380
  %27549 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27550 = load double, ptr %27549, align 8, !dbg !380
  %27551 = load double, ptr %27547, align 16, !dbg !380
  %27552 = getelementptr inbounds { double, double }, ptr %27547, i32 0, i32 1, !dbg !380
  %27553 = load double, ptr %27552, align 8, !dbg !380
  %27554 = call { double, double } @make_vec(double %27548, double %27550, double %27551, double %27553), !dbg !380
  %27555 = extractvalue { double, double } %27554, 0, !dbg !380
  store double %27555, ptr %18, align 8, !dbg !380
  %27556 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27557 = extractvalue { double, double } %27554, 1, !dbg !380
  store double %27557, ptr %27556, align 8, !dbg !380
  %27558 = load i32, ptr %10, align 4, !dbg !381
  %27559 = add nsw i32 %27558, 1, !dbg !382
  %27560 = sext i32 %27559 to i64, !dbg !383
  %27561 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27560, !dbg !383
  %27562 = load double, ptr %6, align 8, !dbg !384
  %27563 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27564 = load double, ptr %27563, align 8, !dbg !384
  %27565 = load double, ptr %27561, align 16, !dbg !384
  %27566 = getelementptr inbounds { double, double }, ptr %27561, i32 0, i32 1, !dbg !384
  %27567 = load double, ptr %27566, align 8, !dbg !384
  %27568 = call { double, double } @make_vec(double %27562, double %27564, double %27565, double %27567), !dbg !384
  %27569 = extractvalue { double, double } %27568, 0, !dbg !384
  store double %27569, ptr %19, align 8, !dbg !384
  %27570 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27571 = extractvalue { double, double } %27568, 1, !dbg !384
  store double %27571, ptr %27570, align 8, !dbg !384
  %27572 = load double, ptr %18, align 8, !dbg !385
  %27573 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27574 = load double, ptr %27573, align 8, !dbg !385
  %27575 = load double, ptr %19, align 8, !dbg !385
  %27576 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27577 = load double, ptr %27576, align 8, !dbg !385
  %27578 = call double @dot(double %27572, double %27574, double %27575, double %27577), !dbg !385
  %27579 = call double @atan2(double noundef %27544, double noundef %27578) #6, !dbg !386
  store double %27579, ptr %13, align 8, !dbg !387
  %27580 = load double, ptr %13, align 8, !dbg !388
  %27581 = load double, ptr %14, align 8, !dbg !389
  %27582 = fadd double %27581, %27580, !dbg !389
  store double %27582, ptr %14, align 8, !dbg !389
  %27583 = load double, ptr %13, align 8, !dbg !390
  %27584 = fsub double %27583, 0x400921FB54442D18, !dbg !392
  %27585 = call double @llvm.fabs.f64(double %27584), !dbg !393
  %27586 = fcmp ole double %27585, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27586, label %14330, label %27587, !dbg !395

27587:                                            ; preds = %27510
  %27588 = load double, ptr %13, align 8, !dbg !396
  %27589 = fadd double %27588, 0x400921FB54442D18, !dbg !397
  %27590 = call double @llvm.fabs.f64(double %27589), !dbg !398
  %27591 = fcmp ole double %27590, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27591, label %14330, label %27592, !dbg !400

27592:                                            ; preds = %27587
  br label %27593, !dbg !403

27593:                                            ; preds = %27592
  %27594 = load i32, ptr %10, align 4, !dbg !404
  %27595 = add nsw i32 %27594, 1, !dbg !404
  store i32 %27595, ptr %10, align 4, !dbg !404
  %27596 = load i32, ptr %10, align 4, !dbg !364
  %27597 = load i32, ptr %8, align 4, !dbg !366
  %27598 = icmp slt i32 %27596, %27597, !dbg !367
  br i1 %27598, label %27599, label %48422, !dbg !368

27599:                                            ; preds = %27593
  %27600 = load i32, ptr %10, align 4, !dbg !369
  %27601 = sext i32 %27600 to i64, !dbg !371
  %27602 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27601, !dbg !371
  %27603 = load double, ptr %6, align 8, !dbg !372
  %27604 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27605 = load double, ptr %27604, align 8, !dbg !372
  %27606 = load double, ptr %27602, align 16, !dbg !372
  %27607 = getelementptr inbounds { double, double }, ptr %27602, i32 0, i32 1, !dbg !372
  %27608 = load double, ptr %27607, align 8, !dbg !372
  %27609 = call { double, double } @make_vec(double %27603, double %27605, double %27606, double %27608), !dbg !372
  %27610 = extractvalue { double, double } %27609, 0, !dbg !372
  store double %27610, ptr %16, align 8, !dbg !372
  %27611 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27612 = extractvalue { double, double } %27609, 1, !dbg !372
  store double %27612, ptr %27611, align 8, !dbg !372
  %27613 = load i32, ptr %10, align 4, !dbg !373
  %27614 = add nsw i32 %27613, 1, !dbg !374
  %27615 = sext i32 %27614 to i64, !dbg !375
  %27616 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27615, !dbg !375
  %27617 = load double, ptr %6, align 8, !dbg !376
  %27618 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27619 = load double, ptr %27618, align 8, !dbg !376
  %27620 = load double, ptr %27616, align 16, !dbg !376
  %27621 = getelementptr inbounds { double, double }, ptr %27616, i32 0, i32 1, !dbg !376
  %27622 = load double, ptr %27621, align 8, !dbg !376
  %27623 = call { double, double } @make_vec(double %27617, double %27619, double %27620, double %27622), !dbg !376
  %27624 = extractvalue { double, double } %27623, 0, !dbg !376
  store double %27624, ptr %17, align 8, !dbg !376
  %27625 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27626 = extractvalue { double, double } %27623, 1, !dbg !376
  store double %27626, ptr %27625, align 8, !dbg !376
  %27627 = load double, ptr %16, align 8, !dbg !377
  %27628 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27629 = load double, ptr %27628, align 8, !dbg !377
  %27630 = load double, ptr %17, align 8, !dbg !377
  %27631 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27632 = load double, ptr %27631, align 8, !dbg !377
  %27633 = call double @cross(double %27627, double %27629, double %27630, double %27632), !dbg !377
  %27634 = load i32, ptr %10, align 4, !dbg !378
  %27635 = sext i32 %27634 to i64, !dbg !379
  %27636 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27635, !dbg !379
  %27637 = load double, ptr %6, align 8, !dbg !380
  %27638 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27639 = load double, ptr %27638, align 8, !dbg !380
  %27640 = load double, ptr %27636, align 16, !dbg !380
  %27641 = getelementptr inbounds { double, double }, ptr %27636, i32 0, i32 1, !dbg !380
  %27642 = load double, ptr %27641, align 8, !dbg !380
  %27643 = call { double, double } @make_vec(double %27637, double %27639, double %27640, double %27642), !dbg !380
  %27644 = extractvalue { double, double } %27643, 0, !dbg !380
  store double %27644, ptr %18, align 8, !dbg !380
  %27645 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27646 = extractvalue { double, double } %27643, 1, !dbg !380
  store double %27646, ptr %27645, align 8, !dbg !380
  %27647 = load i32, ptr %10, align 4, !dbg !381
  %27648 = add nsw i32 %27647, 1, !dbg !382
  %27649 = sext i32 %27648 to i64, !dbg !383
  %27650 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27649, !dbg !383
  %27651 = load double, ptr %6, align 8, !dbg !384
  %27652 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27653 = load double, ptr %27652, align 8, !dbg !384
  %27654 = load double, ptr %27650, align 16, !dbg !384
  %27655 = getelementptr inbounds { double, double }, ptr %27650, i32 0, i32 1, !dbg !384
  %27656 = load double, ptr %27655, align 8, !dbg !384
  %27657 = call { double, double } @make_vec(double %27651, double %27653, double %27654, double %27656), !dbg !384
  %27658 = extractvalue { double, double } %27657, 0, !dbg !384
  store double %27658, ptr %19, align 8, !dbg !384
  %27659 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27660 = extractvalue { double, double } %27657, 1, !dbg !384
  store double %27660, ptr %27659, align 8, !dbg !384
  %27661 = load double, ptr %18, align 8, !dbg !385
  %27662 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27663 = load double, ptr %27662, align 8, !dbg !385
  %27664 = load double, ptr %19, align 8, !dbg !385
  %27665 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27666 = load double, ptr %27665, align 8, !dbg !385
  %27667 = call double @dot(double %27661, double %27663, double %27664, double %27666), !dbg !385
  %27668 = call double @atan2(double noundef %27633, double noundef %27667) #6, !dbg !386
  store double %27668, ptr %13, align 8, !dbg !387
  %27669 = load double, ptr %13, align 8, !dbg !388
  %27670 = load double, ptr %14, align 8, !dbg !389
  %27671 = fadd double %27670, %27669, !dbg !389
  store double %27671, ptr %14, align 8, !dbg !389
  %27672 = load double, ptr %13, align 8, !dbg !390
  %27673 = fsub double %27672, 0x400921FB54442D18, !dbg !392
  %27674 = call double @llvm.fabs.f64(double %27673), !dbg !393
  %27675 = fcmp ole double %27674, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27675, label %14330, label %27676, !dbg !395

27676:                                            ; preds = %27599
  %27677 = load double, ptr %13, align 8, !dbg !396
  %27678 = fadd double %27677, 0x400921FB54442D18, !dbg !397
  %27679 = call double @llvm.fabs.f64(double %27678), !dbg !398
  %27680 = fcmp ole double %27679, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27680, label %14330, label %27681, !dbg !400

27681:                                            ; preds = %27676
  br label %27682, !dbg !403

27682:                                            ; preds = %27681
  %27683 = load i32, ptr %10, align 4, !dbg !404
  %27684 = add nsw i32 %27683, 1, !dbg !404
  store i32 %27684, ptr %10, align 4, !dbg !404
  %27685 = load i32, ptr %10, align 4, !dbg !364
  %27686 = load i32, ptr %8, align 4, !dbg !366
  %27687 = icmp slt i32 %27685, %27686, !dbg !367
  br i1 %27687, label %27688, label %48422, !dbg !368

27688:                                            ; preds = %27682
  %27689 = load i32, ptr %10, align 4, !dbg !369
  %27690 = sext i32 %27689 to i64, !dbg !371
  %27691 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27690, !dbg !371
  %27692 = load double, ptr %6, align 8, !dbg !372
  %27693 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27694 = load double, ptr %27693, align 8, !dbg !372
  %27695 = load double, ptr %27691, align 16, !dbg !372
  %27696 = getelementptr inbounds { double, double }, ptr %27691, i32 0, i32 1, !dbg !372
  %27697 = load double, ptr %27696, align 8, !dbg !372
  %27698 = call { double, double } @make_vec(double %27692, double %27694, double %27695, double %27697), !dbg !372
  %27699 = extractvalue { double, double } %27698, 0, !dbg !372
  store double %27699, ptr %16, align 8, !dbg !372
  %27700 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27701 = extractvalue { double, double } %27698, 1, !dbg !372
  store double %27701, ptr %27700, align 8, !dbg !372
  %27702 = load i32, ptr %10, align 4, !dbg !373
  %27703 = add nsw i32 %27702, 1, !dbg !374
  %27704 = sext i32 %27703 to i64, !dbg !375
  %27705 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27704, !dbg !375
  %27706 = load double, ptr %6, align 8, !dbg !376
  %27707 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27708 = load double, ptr %27707, align 8, !dbg !376
  %27709 = load double, ptr %27705, align 16, !dbg !376
  %27710 = getelementptr inbounds { double, double }, ptr %27705, i32 0, i32 1, !dbg !376
  %27711 = load double, ptr %27710, align 8, !dbg !376
  %27712 = call { double, double } @make_vec(double %27706, double %27708, double %27709, double %27711), !dbg !376
  %27713 = extractvalue { double, double } %27712, 0, !dbg !376
  store double %27713, ptr %17, align 8, !dbg !376
  %27714 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27715 = extractvalue { double, double } %27712, 1, !dbg !376
  store double %27715, ptr %27714, align 8, !dbg !376
  %27716 = load double, ptr %16, align 8, !dbg !377
  %27717 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27718 = load double, ptr %27717, align 8, !dbg !377
  %27719 = load double, ptr %17, align 8, !dbg !377
  %27720 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27721 = load double, ptr %27720, align 8, !dbg !377
  %27722 = call double @cross(double %27716, double %27718, double %27719, double %27721), !dbg !377
  %27723 = load i32, ptr %10, align 4, !dbg !378
  %27724 = sext i32 %27723 to i64, !dbg !379
  %27725 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27724, !dbg !379
  %27726 = load double, ptr %6, align 8, !dbg !380
  %27727 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27728 = load double, ptr %27727, align 8, !dbg !380
  %27729 = load double, ptr %27725, align 16, !dbg !380
  %27730 = getelementptr inbounds { double, double }, ptr %27725, i32 0, i32 1, !dbg !380
  %27731 = load double, ptr %27730, align 8, !dbg !380
  %27732 = call { double, double } @make_vec(double %27726, double %27728, double %27729, double %27731), !dbg !380
  %27733 = extractvalue { double, double } %27732, 0, !dbg !380
  store double %27733, ptr %18, align 8, !dbg !380
  %27734 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27735 = extractvalue { double, double } %27732, 1, !dbg !380
  store double %27735, ptr %27734, align 8, !dbg !380
  %27736 = load i32, ptr %10, align 4, !dbg !381
  %27737 = add nsw i32 %27736, 1, !dbg !382
  %27738 = sext i32 %27737 to i64, !dbg !383
  %27739 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27738, !dbg !383
  %27740 = load double, ptr %6, align 8, !dbg !384
  %27741 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27742 = load double, ptr %27741, align 8, !dbg !384
  %27743 = load double, ptr %27739, align 16, !dbg !384
  %27744 = getelementptr inbounds { double, double }, ptr %27739, i32 0, i32 1, !dbg !384
  %27745 = load double, ptr %27744, align 8, !dbg !384
  %27746 = call { double, double } @make_vec(double %27740, double %27742, double %27743, double %27745), !dbg !384
  %27747 = extractvalue { double, double } %27746, 0, !dbg !384
  store double %27747, ptr %19, align 8, !dbg !384
  %27748 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27749 = extractvalue { double, double } %27746, 1, !dbg !384
  store double %27749, ptr %27748, align 8, !dbg !384
  %27750 = load double, ptr %18, align 8, !dbg !385
  %27751 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27752 = load double, ptr %27751, align 8, !dbg !385
  %27753 = load double, ptr %19, align 8, !dbg !385
  %27754 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27755 = load double, ptr %27754, align 8, !dbg !385
  %27756 = call double @dot(double %27750, double %27752, double %27753, double %27755), !dbg !385
  %27757 = call double @atan2(double noundef %27722, double noundef %27756) #6, !dbg !386
  store double %27757, ptr %13, align 8, !dbg !387
  %27758 = load double, ptr %13, align 8, !dbg !388
  %27759 = load double, ptr %14, align 8, !dbg !389
  %27760 = fadd double %27759, %27758, !dbg !389
  store double %27760, ptr %14, align 8, !dbg !389
  %27761 = load double, ptr %13, align 8, !dbg !390
  %27762 = fsub double %27761, 0x400921FB54442D18, !dbg !392
  %27763 = call double @llvm.fabs.f64(double %27762), !dbg !393
  %27764 = fcmp ole double %27763, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27764, label %14330, label %27765, !dbg !395

27765:                                            ; preds = %27688
  %27766 = load double, ptr %13, align 8, !dbg !396
  %27767 = fadd double %27766, 0x400921FB54442D18, !dbg !397
  %27768 = call double @llvm.fabs.f64(double %27767), !dbg !398
  %27769 = fcmp ole double %27768, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27769, label %14330, label %27770, !dbg !400

27770:                                            ; preds = %27765
  br label %27771, !dbg !403

27771:                                            ; preds = %27770
  %27772 = load i32, ptr %10, align 4, !dbg !404
  %27773 = add nsw i32 %27772, 1, !dbg !404
  store i32 %27773, ptr %10, align 4, !dbg !404
  %27774 = load i32, ptr %10, align 4, !dbg !364
  %27775 = load i32, ptr %8, align 4, !dbg !366
  %27776 = icmp slt i32 %27774, %27775, !dbg !367
  br i1 %27776, label %27777, label %48422, !dbg !368

27777:                                            ; preds = %27771
  %27778 = load i32, ptr %10, align 4, !dbg !369
  %27779 = sext i32 %27778 to i64, !dbg !371
  %27780 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27779, !dbg !371
  %27781 = load double, ptr %6, align 8, !dbg !372
  %27782 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27783 = load double, ptr %27782, align 8, !dbg !372
  %27784 = load double, ptr %27780, align 16, !dbg !372
  %27785 = getelementptr inbounds { double, double }, ptr %27780, i32 0, i32 1, !dbg !372
  %27786 = load double, ptr %27785, align 8, !dbg !372
  %27787 = call { double, double } @make_vec(double %27781, double %27783, double %27784, double %27786), !dbg !372
  %27788 = extractvalue { double, double } %27787, 0, !dbg !372
  store double %27788, ptr %16, align 8, !dbg !372
  %27789 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27790 = extractvalue { double, double } %27787, 1, !dbg !372
  store double %27790, ptr %27789, align 8, !dbg !372
  %27791 = load i32, ptr %10, align 4, !dbg !373
  %27792 = add nsw i32 %27791, 1, !dbg !374
  %27793 = sext i32 %27792 to i64, !dbg !375
  %27794 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27793, !dbg !375
  %27795 = load double, ptr %6, align 8, !dbg !376
  %27796 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27797 = load double, ptr %27796, align 8, !dbg !376
  %27798 = load double, ptr %27794, align 16, !dbg !376
  %27799 = getelementptr inbounds { double, double }, ptr %27794, i32 0, i32 1, !dbg !376
  %27800 = load double, ptr %27799, align 8, !dbg !376
  %27801 = call { double, double } @make_vec(double %27795, double %27797, double %27798, double %27800), !dbg !376
  %27802 = extractvalue { double, double } %27801, 0, !dbg !376
  store double %27802, ptr %17, align 8, !dbg !376
  %27803 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27804 = extractvalue { double, double } %27801, 1, !dbg !376
  store double %27804, ptr %27803, align 8, !dbg !376
  %27805 = load double, ptr %16, align 8, !dbg !377
  %27806 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27807 = load double, ptr %27806, align 8, !dbg !377
  %27808 = load double, ptr %17, align 8, !dbg !377
  %27809 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27810 = load double, ptr %27809, align 8, !dbg !377
  %27811 = call double @cross(double %27805, double %27807, double %27808, double %27810), !dbg !377
  %27812 = load i32, ptr %10, align 4, !dbg !378
  %27813 = sext i32 %27812 to i64, !dbg !379
  %27814 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27813, !dbg !379
  %27815 = load double, ptr %6, align 8, !dbg !380
  %27816 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27817 = load double, ptr %27816, align 8, !dbg !380
  %27818 = load double, ptr %27814, align 16, !dbg !380
  %27819 = getelementptr inbounds { double, double }, ptr %27814, i32 0, i32 1, !dbg !380
  %27820 = load double, ptr %27819, align 8, !dbg !380
  %27821 = call { double, double } @make_vec(double %27815, double %27817, double %27818, double %27820), !dbg !380
  %27822 = extractvalue { double, double } %27821, 0, !dbg !380
  store double %27822, ptr %18, align 8, !dbg !380
  %27823 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27824 = extractvalue { double, double } %27821, 1, !dbg !380
  store double %27824, ptr %27823, align 8, !dbg !380
  %27825 = load i32, ptr %10, align 4, !dbg !381
  %27826 = add nsw i32 %27825, 1, !dbg !382
  %27827 = sext i32 %27826 to i64, !dbg !383
  %27828 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27827, !dbg !383
  %27829 = load double, ptr %6, align 8, !dbg !384
  %27830 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27831 = load double, ptr %27830, align 8, !dbg !384
  %27832 = load double, ptr %27828, align 16, !dbg !384
  %27833 = getelementptr inbounds { double, double }, ptr %27828, i32 0, i32 1, !dbg !384
  %27834 = load double, ptr %27833, align 8, !dbg !384
  %27835 = call { double, double } @make_vec(double %27829, double %27831, double %27832, double %27834), !dbg !384
  %27836 = extractvalue { double, double } %27835, 0, !dbg !384
  store double %27836, ptr %19, align 8, !dbg !384
  %27837 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27838 = extractvalue { double, double } %27835, 1, !dbg !384
  store double %27838, ptr %27837, align 8, !dbg !384
  %27839 = load double, ptr %18, align 8, !dbg !385
  %27840 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27841 = load double, ptr %27840, align 8, !dbg !385
  %27842 = load double, ptr %19, align 8, !dbg !385
  %27843 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27844 = load double, ptr %27843, align 8, !dbg !385
  %27845 = call double @dot(double %27839, double %27841, double %27842, double %27844), !dbg !385
  %27846 = call double @atan2(double noundef %27811, double noundef %27845) #6, !dbg !386
  store double %27846, ptr %13, align 8, !dbg !387
  %27847 = load double, ptr %13, align 8, !dbg !388
  %27848 = load double, ptr %14, align 8, !dbg !389
  %27849 = fadd double %27848, %27847, !dbg !389
  store double %27849, ptr %14, align 8, !dbg !389
  %27850 = load double, ptr %13, align 8, !dbg !390
  %27851 = fsub double %27850, 0x400921FB54442D18, !dbg !392
  %27852 = call double @llvm.fabs.f64(double %27851), !dbg !393
  %27853 = fcmp ole double %27852, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27853, label %14330, label %27854, !dbg !395

27854:                                            ; preds = %27777
  %27855 = load double, ptr %13, align 8, !dbg !396
  %27856 = fadd double %27855, 0x400921FB54442D18, !dbg !397
  %27857 = call double @llvm.fabs.f64(double %27856), !dbg !398
  %27858 = fcmp ole double %27857, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27858, label %14330, label %27859, !dbg !400

27859:                                            ; preds = %27854
  br label %27860, !dbg !403

27860:                                            ; preds = %27859
  %27861 = load i32, ptr %10, align 4, !dbg !404
  %27862 = add nsw i32 %27861, 1, !dbg !404
  store i32 %27862, ptr %10, align 4, !dbg !404
  %27863 = load i32, ptr %10, align 4, !dbg !364
  %27864 = load i32, ptr %8, align 4, !dbg !366
  %27865 = icmp slt i32 %27863, %27864, !dbg !367
  br i1 %27865, label %27866, label %48422, !dbg !368

27866:                                            ; preds = %27860
  %27867 = load i32, ptr %10, align 4, !dbg !369
  %27868 = sext i32 %27867 to i64, !dbg !371
  %27869 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27868, !dbg !371
  %27870 = load double, ptr %6, align 8, !dbg !372
  %27871 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27872 = load double, ptr %27871, align 8, !dbg !372
  %27873 = load double, ptr %27869, align 16, !dbg !372
  %27874 = getelementptr inbounds { double, double }, ptr %27869, i32 0, i32 1, !dbg !372
  %27875 = load double, ptr %27874, align 8, !dbg !372
  %27876 = call { double, double } @make_vec(double %27870, double %27872, double %27873, double %27875), !dbg !372
  %27877 = extractvalue { double, double } %27876, 0, !dbg !372
  store double %27877, ptr %16, align 8, !dbg !372
  %27878 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27879 = extractvalue { double, double } %27876, 1, !dbg !372
  store double %27879, ptr %27878, align 8, !dbg !372
  %27880 = load i32, ptr %10, align 4, !dbg !373
  %27881 = add nsw i32 %27880, 1, !dbg !374
  %27882 = sext i32 %27881 to i64, !dbg !375
  %27883 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27882, !dbg !375
  %27884 = load double, ptr %6, align 8, !dbg !376
  %27885 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27886 = load double, ptr %27885, align 8, !dbg !376
  %27887 = load double, ptr %27883, align 16, !dbg !376
  %27888 = getelementptr inbounds { double, double }, ptr %27883, i32 0, i32 1, !dbg !376
  %27889 = load double, ptr %27888, align 8, !dbg !376
  %27890 = call { double, double } @make_vec(double %27884, double %27886, double %27887, double %27889), !dbg !376
  %27891 = extractvalue { double, double } %27890, 0, !dbg !376
  store double %27891, ptr %17, align 8, !dbg !376
  %27892 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27893 = extractvalue { double, double } %27890, 1, !dbg !376
  store double %27893, ptr %27892, align 8, !dbg !376
  %27894 = load double, ptr %16, align 8, !dbg !377
  %27895 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27896 = load double, ptr %27895, align 8, !dbg !377
  %27897 = load double, ptr %17, align 8, !dbg !377
  %27898 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27899 = load double, ptr %27898, align 8, !dbg !377
  %27900 = call double @cross(double %27894, double %27896, double %27897, double %27899), !dbg !377
  %27901 = load i32, ptr %10, align 4, !dbg !378
  %27902 = sext i32 %27901 to i64, !dbg !379
  %27903 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27902, !dbg !379
  %27904 = load double, ptr %6, align 8, !dbg !380
  %27905 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27906 = load double, ptr %27905, align 8, !dbg !380
  %27907 = load double, ptr %27903, align 16, !dbg !380
  %27908 = getelementptr inbounds { double, double }, ptr %27903, i32 0, i32 1, !dbg !380
  %27909 = load double, ptr %27908, align 8, !dbg !380
  %27910 = call { double, double } @make_vec(double %27904, double %27906, double %27907, double %27909), !dbg !380
  %27911 = extractvalue { double, double } %27910, 0, !dbg !380
  store double %27911, ptr %18, align 8, !dbg !380
  %27912 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %27913 = extractvalue { double, double } %27910, 1, !dbg !380
  store double %27913, ptr %27912, align 8, !dbg !380
  %27914 = load i32, ptr %10, align 4, !dbg !381
  %27915 = add nsw i32 %27914, 1, !dbg !382
  %27916 = sext i32 %27915 to i64, !dbg !383
  %27917 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27916, !dbg !383
  %27918 = load double, ptr %6, align 8, !dbg !384
  %27919 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %27920 = load double, ptr %27919, align 8, !dbg !384
  %27921 = load double, ptr %27917, align 16, !dbg !384
  %27922 = getelementptr inbounds { double, double }, ptr %27917, i32 0, i32 1, !dbg !384
  %27923 = load double, ptr %27922, align 8, !dbg !384
  %27924 = call { double, double } @make_vec(double %27918, double %27920, double %27921, double %27923), !dbg !384
  %27925 = extractvalue { double, double } %27924, 0, !dbg !384
  store double %27925, ptr %19, align 8, !dbg !384
  %27926 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %27927 = extractvalue { double, double } %27924, 1, !dbg !384
  store double %27927, ptr %27926, align 8, !dbg !384
  %27928 = load double, ptr %18, align 8, !dbg !385
  %27929 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %27930 = load double, ptr %27929, align 8, !dbg !385
  %27931 = load double, ptr %19, align 8, !dbg !385
  %27932 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %27933 = load double, ptr %27932, align 8, !dbg !385
  %27934 = call double @dot(double %27928, double %27930, double %27931, double %27933), !dbg !385
  %27935 = call double @atan2(double noundef %27900, double noundef %27934) #6, !dbg !386
  store double %27935, ptr %13, align 8, !dbg !387
  %27936 = load double, ptr %13, align 8, !dbg !388
  %27937 = load double, ptr %14, align 8, !dbg !389
  %27938 = fadd double %27937, %27936, !dbg !389
  store double %27938, ptr %14, align 8, !dbg !389
  %27939 = load double, ptr %13, align 8, !dbg !390
  %27940 = fsub double %27939, 0x400921FB54442D18, !dbg !392
  %27941 = call double @llvm.fabs.f64(double %27940), !dbg !393
  %27942 = fcmp ole double %27941, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %27942, label %14330, label %27943, !dbg !395

27943:                                            ; preds = %27866
  %27944 = load double, ptr %13, align 8, !dbg !396
  %27945 = fadd double %27944, 0x400921FB54442D18, !dbg !397
  %27946 = call double @llvm.fabs.f64(double %27945), !dbg !398
  %27947 = fcmp ole double %27946, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %27947, label %14330, label %27948, !dbg !400

27948:                                            ; preds = %27943
  br label %27949, !dbg !403

27949:                                            ; preds = %27948
  %27950 = load i32, ptr %10, align 4, !dbg !404
  %27951 = add nsw i32 %27950, 1, !dbg !404
  store i32 %27951, ptr %10, align 4, !dbg !404
  %27952 = load i32, ptr %10, align 4, !dbg !364
  %27953 = load i32, ptr %8, align 4, !dbg !366
  %27954 = icmp slt i32 %27952, %27953, !dbg !367
  br i1 %27954, label %27955, label %48422, !dbg !368

27955:                                            ; preds = %27949
  %27956 = load i32, ptr %10, align 4, !dbg !369
  %27957 = sext i32 %27956 to i64, !dbg !371
  %27958 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27957, !dbg !371
  %27959 = load double, ptr %6, align 8, !dbg !372
  %27960 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %27961 = load double, ptr %27960, align 8, !dbg !372
  %27962 = load double, ptr %27958, align 16, !dbg !372
  %27963 = getelementptr inbounds { double, double }, ptr %27958, i32 0, i32 1, !dbg !372
  %27964 = load double, ptr %27963, align 8, !dbg !372
  %27965 = call { double, double } @make_vec(double %27959, double %27961, double %27962, double %27964), !dbg !372
  %27966 = extractvalue { double, double } %27965, 0, !dbg !372
  store double %27966, ptr %16, align 8, !dbg !372
  %27967 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %27968 = extractvalue { double, double } %27965, 1, !dbg !372
  store double %27968, ptr %27967, align 8, !dbg !372
  %27969 = load i32, ptr %10, align 4, !dbg !373
  %27970 = add nsw i32 %27969, 1, !dbg !374
  %27971 = sext i32 %27970 to i64, !dbg !375
  %27972 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27971, !dbg !375
  %27973 = load double, ptr %6, align 8, !dbg !376
  %27974 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %27975 = load double, ptr %27974, align 8, !dbg !376
  %27976 = load double, ptr %27972, align 16, !dbg !376
  %27977 = getelementptr inbounds { double, double }, ptr %27972, i32 0, i32 1, !dbg !376
  %27978 = load double, ptr %27977, align 8, !dbg !376
  %27979 = call { double, double } @make_vec(double %27973, double %27975, double %27976, double %27978), !dbg !376
  %27980 = extractvalue { double, double } %27979, 0, !dbg !376
  store double %27980, ptr %17, align 8, !dbg !376
  %27981 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %27982 = extractvalue { double, double } %27979, 1, !dbg !376
  store double %27982, ptr %27981, align 8, !dbg !376
  %27983 = load double, ptr %16, align 8, !dbg !377
  %27984 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %27985 = load double, ptr %27984, align 8, !dbg !377
  %27986 = load double, ptr %17, align 8, !dbg !377
  %27987 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %27988 = load double, ptr %27987, align 8, !dbg !377
  %27989 = call double @cross(double %27983, double %27985, double %27986, double %27988), !dbg !377
  %27990 = load i32, ptr %10, align 4, !dbg !378
  %27991 = sext i32 %27990 to i64, !dbg !379
  %27992 = getelementptr inbounds %struct.POINT, ptr %26, i64 %27991, !dbg !379
  %27993 = load double, ptr %6, align 8, !dbg !380
  %27994 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %27995 = load double, ptr %27994, align 8, !dbg !380
  %27996 = load double, ptr %27992, align 16, !dbg !380
  %27997 = getelementptr inbounds { double, double }, ptr %27992, i32 0, i32 1, !dbg !380
  %27998 = load double, ptr %27997, align 8, !dbg !380
  %27999 = call { double, double } @make_vec(double %27993, double %27995, double %27996, double %27998), !dbg !380
  %28000 = extractvalue { double, double } %27999, 0, !dbg !380
  store double %28000, ptr %18, align 8, !dbg !380
  %28001 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28002 = extractvalue { double, double } %27999, 1, !dbg !380
  store double %28002, ptr %28001, align 8, !dbg !380
  %28003 = load i32, ptr %10, align 4, !dbg !381
  %28004 = add nsw i32 %28003, 1, !dbg !382
  %28005 = sext i32 %28004 to i64, !dbg !383
  %28006 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28005, !dbg !383
  %28007 = load double, ptr %6, align 8, !dbg !384
  %28008 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28009 = load double, ptr %28008, align 8, !dbg !384
  %28010 = load double, ptr %28006, align 16, !dbg !384
  %28011 = getelementptr inbounds { double, double }, ptr %28006, i32 0, i32 1, !dbg !384
  %28012 = load double, ptr %28011, align 8, !dbg !384
  %28013 = call { double, double } @make_vec(double %28007, double %28009, double %28010, double %28012), !dbg !384
  %28014 = extractvalue { double, double } %28013, 0, !dbg !384
  store double %28014, ptr %19, align 8, !dbg !384
  %28015 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28016 = extractvalue { double, double } %28013, 1, !dbg !384
  store double %28016, ptr %28015, align 8, !dbg !384
  %28017 = load double, ptr %18, align 8, !dbg !385
  %28018 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28019 = load double, ptr %28018, align 8, !dbg !385
  %28020 = load double, ptr %19, align 8, !dbg !385
  %28021 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28022 = load double, ptr %28021, align 8, !dbg !385
  %28023 = call double @dot(double %28017, double %28019, double %28020, double %28022), !dbg !385
  %28024 = call double @atan2(double noundef %27989, double noundef %28023) #6, !dbg !386
  store double %28024, ptr %13, align 8, !dbg !387
  %28025 = load double, ptr %13, align 8, !dbg !388
  %28026 = load double, ptr %14, align 8, !dbg !389
  %28027 = fadd double %28026, %28025, !dbg !389
  store double %28027, ptr %14, align 8, !dbg !389
  %28028 = load double, ptr %13, align 8, !dbg !390
  %28029 = fsub double %28028, 0x400921FB54442D18, !dbg !392
  %28030 = call double @llvm.fabs.f64(double %28029), !dbg !393
  %28031 = fcmp ole double %28030, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28031, label %14330, label %28032, !dbg !395

28032:                                            ; preds = %27955
  %28033 = load double, ptr %13, align 8, !dbg !396
  %28034 = fadd double %28033, 0x400921FB54442D18, !dbg !397
  %28035 = call double @llvm.fabs.f64(double %28034), !dbg !398
  %28036 = fcmp ole double %28035, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28036, label %14330, label %28037, !dbg !400

28037:                                            ; preds = %28032
  br label %28038, !dbg !403

28038:                                            ; preds = %28037
  %28039 = load i32, ptr %10, align 4, !dbg !404
  %28040 = add nsw i32 %28039, 1, !dbg !404
  store i32 %28040, ptr %10, align 4, !dbg !404
  %28041 = load i32, ptr %10, align 4, !dbg !364
  %28042 = load i32, ptr %8, align 4, !dbg !366
  %28043 = icmp slt i32 %28041, %28042, !dbg !367
  br i1 %28043, label %28044, label %48422, !dbg !368

28044:                                            ; preds = %28038
  %28045 = load i32, ptr %10, align 4, !dbg !369
  %28046 = sext i32 %28045 to i64, !dbg !371
  %28047 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28046, !dbg !371
  %28048 = load double, ptr %6, align 8, !dbg !372
  %28049 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28050 = load double, ptr %28049, align 8, !dbg !372
  %28051 = load double, ptr %28047, align 16, !dbg !372
  %28052 = getelementptr inbounds { double, double }, ptr %28047, i32 0, i32 1, !dbg !372
  %28053 = load double, ptr %28052, align 8, !dbg !372
  %28054 = call { double, double } @make_vec(double %28048, double %28050, double %28051, double %28053), !dbg !372
  %28055 = extractvalue { double, double } %28054, 0, !dbg !372
  store double %28055, ptr %16, align 8, !dbg !372
  %28056 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28057 = extractvalue { double, double } %28054, 1, !dbg !372
  store double %28057, ptr %28056, align 8, !dbg !372
  %28058 = load i32, ptr %10, align 4, !dbg !373
  %28059 = add nsw i32 %28058, 1, !dbg !374
  %28060 = sext i32 %28059 to i64, !dbg !375
  %28061 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28060, !dbg !375
  %28062 = load double, ptr %6, align 8, !dbg !376
  %28063 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28064 = load double, ptr %28063, align 8, !dbg !376
  %28065 = load double, ptr %28061, align 16, !dbg !376
  %28066 = getelementptr inbounds { double, double }, ptr %28061, i32 0, i32 1, !dbg !376
  %28067 = load double, ptr %28066, align 8, !dbg !376
  %28068 = call { double, double } @make_vec(double %28062, double %28064, double %28065, double %28067), !dbg !376
  %28069 = extractvalue { double, double } %28068, 0, !dbg !376
  store double %28069, ptr %17, align 8, !dbg !376
  %28070 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28071 = extractvalue { double, double } %28068, 1, !dbg !376
  store double %28071, ptr %28070, align 8, !dbg !376
  %28072 = load double, ptr %16, align 8, !dbg !377
  %28073 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28074 = load double, ptr %28073, align 8, !dbg !377
  %28075 = load double, ptr %17, align 8, !dbg !377
  %28076 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28077 = load double, ptr %28076, align 8, !dbg !377
  %28078 = call double @cross(double %28072, double %28074, double %28075, double %28077), !dbg !377
  %28079 = load i32, ptr %10, align 4, !dbg !378
  %28080 = sext i32 %28079 to i64, !dbg !379
  %28081 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28080, !dbg !379
  %28082 = load double, ptr %6, align 8, !dbg !380
  %28083 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28084 = load double, ptr %28083, align 8, !dbg !380
  %28085 = load double, ptr %28081, align 16, !dbg !380
  %28086 = getelementptr inbounds { double, double }, ptr %28081, i32 0, i32 1, !dbg !380
  %28087 = load double, ptr %28086, align 8, !dbg !380
  %28088 = call { double, double } @make_vec(double %28082, double %28084, double %28085, double %28087), !dbg !380
  %28089 = extractvalue { double, double } %28088, 0, !dbg !380
  store double %28089, ptr %18, align 8, !dbg !380
  %28090 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28091 = extractvalue { double, double } %28088, 1, !dbg !380
  store double %28091, ptr %28090, align 8, !dbg !380
  %28092 = load i32, ptr %10, align 4, !dbg !381
  %28093 = add nsw i32 %28092, 1, !dbg !382
  %28094 = sext i32 %28093 to i64, !dbg !383
  %28095 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28094, !dbg !383
  %28096 = load double, ptr %6, align 8, !dbg !384
  %28097 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28098 = load double, ptr %28097, align 8, !dbg !384
  %28099 = load double, ptr %28095, align 16, !dbg !384
  %28100 = getelementptr inbounds { double, double }, ptr %28095, i32 0, i32 1, !dbg !384
  %28101 = load double, ptr %28100, align 8, !dbg !384
  %28102 = call { double, double } @make_vec(double %28096, double %28098, double %28099, double %28101), !dbg !384
  %28103 = extractvalue { double, double } %28102, 0, !dbg !384
  store double %28103, ptr %19, align 8, !dbg !384
  %28104 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28105 = extractvalue { double, double } %28102, 1, !dbg !384
  store double %28105, ptr %28104, align 8, !dbg !384
  %28106 = load double, ptr %18, align 8, !dbg !385
  %28107 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28108 = load double, ptr %28107, align 8, !dbg !385
  %28109 = load double, ptr %19, align 8, !dbg !385
  %28110 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28111 = load double, ptr %28110, align 8, !dbg !385
  %28112 = call double @dot(double %28106, double %28108, double %28109, double %28111), !dbg !385
  %28113 = call double @atan2(double noundef %28078, double noundef %28112) #6, !dbg !386
  store double %28113, ptr %13, align 8, !dbg !387
  %28114 = load double, ptr %13, align 8, !dbg !388
  %28115 = load double, ptr %14, align 8, !dbg !389
  %28116 = fadd double %28115, %28114, !dbg !389
  store double %28116, ptr %14, align 8, !dbg !389
  %28117 = load double, ptr %13, align 8, !dbg !390
  %28118 = fsub double %28117, 0x400921FB54442D18, !dbg !392
  %28119 = call double @llvm.fabs.f64(double %28118), !dbg !393
  %28120 = fcmp ole double %28119, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28120, label %14330, label %28121, !dbg !395

28121:                                            ; preds = %28044
  %28122 = load double, ptr %13, align 8, !dbg !396
  %28123 = fadd double %28122, 0x400921FB54442D18, !dbg !397
  %28124 = call double @llvm.fabs.f64(double %28123), !dbg !398
  %28125 = fcmp ole double %28124, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28125, label %14330, label %28126, !dbg !400

28126:                                            ; preds = %28121
  br label %28127, !dbg !403

28127:                                            ; preds = %28126
  %28128 = load i32, ptr %10, align 4, !dbg !404
  %28129 = add nsw i32 %28128, 1, !dbg !404
  store i32 %28129, ptr %10, align 4, !dbg !404
  %28130 = load i32, ptr %10, align 4, !dbg !364
  %28131 = load i32, ptr %8, align 4, !dbg !366
  %28132 = icmp slt i32 %28130, %28131, !dbg !367
  br i1 %28132, label %28133, label %48422, !dbg !368

28133:                                            ; preds = %28127
  %28134 = load i32, ptr %10, align 4, !dbg !369
  %28135 = sext i32 %28134 to i64, !dbg !371
  %28136 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28135, !dbg !371
  %28137 = load double, ptr %6, align 8, !dbg !372
  %28138 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28139 = load double, ptr %28138, align 8, !dbg !372
  %28140 = load double, ptr %28136, align 16, !dbg !372
  %28141 = getelementptr inbounds { double, double }, ptr %28136, i32 0, i32 1, !dbg !372
  %28142 = load double, ptr %28141, align 8, !dbg !372
  %28143 = call { double, double } @make_vec(double %28137, double %28139, double %28140, double %28142), !dbg !372
  %28144 = extractvalue { double, double } %28143, 0, !dbg !372
  store double %28144, ptr %16, align 8, !dbg !372
  %28145 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28146 = extractvalue { double, double } %28143, 1, !dbg !372
  store double %28146, ptr %28145, align 8, !dbg !372
  %28147 = load i32, ptr %10, align 4, !dbg !373
  %28148 = add nsw i32 %28147, 1, !dbg !374
  %28149 = sext i32 %28148 to i64, !dbg !375
  %28150 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28149, !dbg !375
  %28151 = load double, ptr %6, align 8, !dbg !376
  %28152 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28153 = load double, ptr %28152, align 8, !dbg !376
  %28154 = load double, ptr %28150, align 16, !dbg !376
  %28155 = getelementptr inbounds { double, double }, ptr %28150, i32 0, i32 1, !dbg !376
  %28156 = load double, ptr %28155, align 8, !dbg !376
  %28157 = call { double, double } @make_vec(double %28151, double %28153, double %28154, double %28156), !dbg !376
  %28158 = extractvalue { double, double } %28157, 0, !dbg !376
  store double %28158, ptr %17, align 8, !dbg !376
  %28159 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28160 = extractvalue { double, double } %28157, 1, !dbg !376
  store double %28160, ptr %28159, align 8, !dbg !376
  %28161 = load double, ptr %16, align 8, !dbg !377
  %28162 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28163 = load double, ptr %28162, align 8, !dbg !377
  %28164 = load double, ptr %17, align 8, !dbg !377
  %28165 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28166 = load double, ptr %28165, align 8, !dbg !377
  %28167 = call double @cross(double %28161, double %28163, double %28164, double %28166), !dbg !377
  %28168 = load i32, ptr %10, align 4, !dbg !378
  %28169 = sext i32 %28168 to i64, !dbg !379
  %28170 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28169, !dbg !379
  %28171 = load double, ptr %6, align 8, !dbg !380
  %28172 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28173 = load double, ptr %28172, align 8, !dbg !380
  %28174 = load double, ptr %28170, align 16, !dbg !380
  %28175 = getelementptr inbounds { double, double }, ptr %28170, i32 0, i32 1, !dbg !380
  %28176 = load double, ptr %28175, align 8, !dbg !380
  %28177 = call { double, double } @make_vec(double %28171, double %28173, double %28174, double %28176), !dbg !380
  %28178 = extractvalue { double, double } %28177, 0, !dbg !380
  store double %28178, ptr %18, align 8, !dbg !380
  %28179 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28180 = extractvalue { double, double } %28177, 1, !dbg !380
  store double %28180, ptr %28179, align 8, !dbg !380
  %28181 = load i32, ptr %10, align 4, !dbg !381
  %28182 = add nsw i32 %28181, 1, !dbg !382
  %28183 = sext i32 %28182 to i64, !dbg !383
  %28184 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28183, !dbg !383
  %28185 = load double, ptr %6, align 8, !dbg !384
  %28186 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28187 = load double, ptr %28186, align 8, !dbg !384
  %28188 = load double, ptr %28184, align 16, !dbg !384
  %28189 = getelementptr inbounds { double, double }, ptr %28184, i32 0, i32 1, !dbg !384
  %28190 = load double, ptr %28189, align 8, !dbg !384
  %28191 = call { double, double } @make_vec(double %28185, double %28187, double %28188, double %28190), !dbg !384
  %28192 = extractvalue { double, double } %28191, 0, !dbg !384
  store double %28192, ptr %19, align 8, !dbg !384
  %28193 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28194 = extractvalue { double, double } %28191, 1, !dbg !384
  store double %28194, ptr %28193, align 8, !dbg !384
  %28195 = load double, ptr %18, align 8, !dbg !385
  %28196 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28197 = load double, ptr %28196, align 8, !dbg !385
  %28198 = load double, ptr %19, align 8, !dbg !385
  %28199 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28200 = load double, ptr %28199, align 8, !dbg !385
  %28201 = call double @dot(double %28195, double %28197, double %28198, double %28200), !dbg !385
  %28202 = call double @atan2(double noundef %28167, double noundef %28201) #6, !dbg !386
  store double %28202, ptr %13, align 8, !dbg !387
  %28203 = load double, ptr %13, align 8, !dbg !388
  %28204 = load double, ptr %14, align 8, !dbg !389
  %28205 = fadd double %28204, %28203, !dbg !389
  store double %28205, ptr %14, align 8, !dbg !389
  %28206 = load double, ptr %13, align 8, !dbg !390
  %28207 = fsub double %28206, 0x400921FB54442D18, !dbg !392
  %28208 = call double @llvm.fabs.f64(double %28207), !dbg !393
  %28209 = fcmp ole double %28208, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28209, label %14330, label %28210, !dbg !395

28210:                                            ; preds = %28133
  %28211 = load double, ptr %13, align 8, !dbg !396
  %28212 = fadd double %28211, 0x400921FB54442D18, !dbg !397
  %28213 = call double @llvm.fabs.f64(double %28212), !dbg !398
  %28214 = fcmp ole double %28213, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28214, label %14330, label %28215, !dbg !400

28215:                                            ; preds = %28210
  br label %28216, !dbg !403

28216:                                            ; preds = %28215
  %28217 = load i32, ptr %10, align 4, !dbg !404
  %28218 = add nsw i32 %28217, 1, !dbg !404
  store i32 %28218, ptr %10, align 4, !dbg !404
  %28219 = load i32, ptr %10, align 4, !dbg !364
  %28220 = load i32, ptr %8, align 4, !dbg !366
  %28221 = icmp slt i32 %28219, %28220, !dbg !367
  br i1 %28221, label %28222, label %48422, !dbg !368

28222:                                            ; preds = %28216
  %28223 = load i32, ptr %10, align 4, !dbg !369
  %28224 = sext i32 %28223 to i64, !dbg !371
  %28225 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28224, !dbg !371
  %28226 = load double, ptr %6, align 8, !dbg !372
  %28227 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28228 = load double, ptr %28227, align 8, !dbg !372
  %28229 = load double, ptr %28225, align 16, !dbg !372
  %28230 = getelementptr inbounds { double, double }, ptr %28225, i32 0, i32 1, !dbg !372
  %28231 = load double, ptr %28230, align 8, !dbg !372
  %28232 = call { double, double } @make_vec(double %28226, double %28228, double %28229, double %28231), !dbg !372
  %28233 = extractvalue { double, double } %28232, 0, !dbg !372
  store double %28233, ptr %16, align 8, !dbg !372
  %28234 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28235 = extractvalue { double, double } %28232, 1, !dbg !372
  store double %28235, ptr %28234, align 8, !dbg !372
  %28236 = load i32, ptr %10, align 4, !dbg !373
  %28237 = add nsw i32 %28236, 1, !dbg !374
  %28238 = sext i32 %28237 to i64, !dbg !375
  %28239 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28238, !dbg !375
  %28240 = load double, ptr %6, align 8, !dbg !376
  %28241 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28242 = load double, ptr %28241, align 8, !dbg !376
  %28243 = load double, ptr %28239, align 16, !dbg !376
  %28244 = getelementptr inbounds { double, double }, ptr %28239, i32 0, i32 1, !dbg !376
  %28245 = load double, ptr %28244, align 8, !dbg !376
  %28246 = call { double, double } @make_vec(double %28240, double %28242, double %28243, double %28245), !dbg !376
  %28247 = extractvalue { double, double } %28246, 0, !dbg !376
  store double %28247, ptr %17, align 8, !dbg !376
  %28248 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28249 = extractvalue { double, double } %28246, 1, !dbg !376
  store double %28249, ptr %28248, align 8, !dbg !376
  %28250 = load double, ptr %16, align 8, !dbg !377
  %28251 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28252 = load double, ptr %28251, align 8, !dbg !377
  %28253 = load double, ptr %17, align 8, !dbg !377
  %28254 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28255 = load double, ptr %28254, align 8, !dbg !377
  %28256 = call double @cross(double %28250, double %28252, double %28253, double %28255), !dbg !377
  %28257 = load i32, ptr %10, align 4, !dbg !378
  %28258 = sext i32 %28257 to i64, !dbg !379
  %28259 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28258, !dbg !379
  %28260 = load double, ptr %6, align 8, !dbg !380
  %28261 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28262 = load double, ptr %28261, align 8, !dbg !380
  %28263 = load double, ptr %28259, align 16, !dbg !380
  %28264 = getelementptr inbounds { double, double }, ptr %28259, i32 0, i32 1, !dbg !380
  %28265 = load double, ptr %28264, align 8, !dbg !380
  %28266 = call { double, double } @make_vec(double %28260, double %28262, double %28263, double %28265), !dbg !380
  %28267 = extractvalue { double, double } %28266, 0, !dbg !380
  store double %28267, ptr %18, align 8, !dbg !380
  %28268 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28269 = extractvalue { double, double } %28266, 1, !dbg !380
  store double %28269, ptr %28268, align 8, !dbg !380
  %28270 = load i32, ptr %10, align 4, !dbg !381
  %28271 = add nsw i32 %28270, 1, !dbg !382
  %28272 = sext i32 %28271 to i64, !dbg !383
  %28273 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28272, !dbg !383
  %28274 = load double, ptr %6, align 8, !dbg !384
  %28275 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28276 = load double, ptr %28275, align 8, !dbg !384
  %28277 = load double, ptr %28273, align 16, !dbg !384
  %28278 = getelementptr inbounds { double, double }, ptr %28273, i32 0, i32 1, !dbg !384
  %28279 = load double, ptr %28278, align 8, !dbg !384
  %28280 = call { double, double } @make_vec(double %28274, double %28276, double %28277, double %28279), !dbg !384
  %28281 = extractvalue { double, double } %28280, 0, !dbg !384
  store double %28281, ptr %19, align 8, !dbg !384
  %28282 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28283 = extractvalue { double, double } %28280, 1, !dbg !384
  store double %28283, ptr %28282, align 8, !dbg !384
  %28284 = load double, ptr %18, align 8, !dbg !385
  %28285 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28286 = load double, ptr %28285, align 8, !dbg !385
  %28287 = load double, ptr %19, align 8, !dbg !385
  %28288 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28289 = load double, ptr %28288, align 8, !dbg !385
  %28290 = call double @dot(double %28284, double %28286, double %28287, double %28289), !dbg !385
  %28291 = call double @atan2(double noundef %28256, double noundef %28290) #6, !dbg !386
  store double %28291, ptr %13, align 8, !dbg !387
  %28292 = load double, ptr %13, align 8, !dbg !388
  %28293 = load double, ptr %14, align 8, !dbg !389
  %28294 = fadd double %28293, %28292, !dbg !389
  store double %28294, ptr %14, align 8, !dbg !389
  %28295 = load double, ptr %13, align 8, !dbg !390
  %28296 = fsub double %28295, 0x400921FB54442D18, !dbg !392
  %28297 = call double @llvm.fabs.f64(double %28296), !dbg !393
  %28298 = fcmp ole double %28297, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28298, label %14330, label %28299, !dbg !395

28299:                                            ; preds = %28222
  %28300 = load double, ptr %13, align 8, !dbg !396
  %28301 = fadd double %28300, 0x400921FB54442D18, !dbg !397
  %28302 = call double @llvm.fabs.f64(double %28301), !dbg !398
  %28303 = fcmp ole double %28302, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28303, label %14330, label %28304, !dbg !400

28304:                                            ; preds = %28299
  br label %28305, !dbg !403

28305:                                            ; preds = %28304
  %28306 = load i32, ptr %10, align 4, !dbg !404
  %28307 = add nsw i32 %28306, 1, !dbg !404
  store i32 %28307, ptr %10, align 4, !dbg !404
  %28308 = load i32, ptr %10, align 4, !dbg !364
  %28309 = load i32, ptr %8, align 4, !dbg !366
  %28310 = icmp slt i32 %28308, %28309, !dbg !367
  br i1 %28310, label %28311, label %48422, !dbg !368

28311:                                            ; preds = %28305
  %28312 = load i32, ptr %10, align 4, !dbg !369
  %28313 = sext i32 %28312 to i64, !dbg !371
  %28314 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28313, !dbg !371
  %28315 = load double, ptr %6, align 8, !dbg !372
  %28316 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28317 = load double, ptr %28316, align 8, !dbg !372
  %28318 = load double, ptr %28314, align 16, !dbg !372
  %28319 = getelementptr inbounds { double, double }, ptr %28314, i32 0, i32 1, !dbg !372
  %28320 = load double, ptr %28319, align 8, !dbg !372
  %28321 = call { double, double } @make_vec(double %28315, double %28317, double %28318, double %28320), !dbg !372
  %28322 = extractvalue { double, double } %28321, 0, !dbg !372
  store double %28322, ptr %16, align 8, !dbg !372
  %28323 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28324 = extractvalue { double, double } %28321, 1, !dbg !372
  store double %28324, ptr %28323, align 8, !dbg !372
  %28325 = load i32, ptr %10, align 4, !dbg !373
  %28326 = add nsw i32 %28325, 1, !dbg !374
  %28327 = sext i32 %28326 to i64, !dbg !375
  %28328 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28327, !dbg !375
  %28329 = load double, ptr %6, align 8, !dbg !376
  %28330 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28331 = load double, ptr %28330, align 8, !dbg !376
  %28332 = load double, ptr %28328, align 16, !dbg !376
  %28333 = getelementptr inbounds { double, double }, ptr %28328, i32 0, i32 1, !dbg !376
  %28334 = load double, ptr %28333, align 8, !dbg !376
  %28335 = call { double, double } @make_vec(double %28329, double %28331, double %28332, double %28334), !dbg !376
  %28336 = extractvalue { double, double } %28335, 0, !dbg !376
  store double %28336, ptr %17, align 8, !dbg !376
  %28337 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28338 = extractvalue { double, double } %28335, 1, !dbg !376
  store double %28338, ptr %28337, align 8, !dbg !376
  %28339 = load double, ptr %16, align 8, !dbg !377
  %28340 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28341 = load double, ptr %28340, align 8, !dbg !377
  %28342 = load double, ptr %17, align 8, !dbg !377
  %28343 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28344 = load double, ptr %28343, align 8, !dbg !377
  %28345 = call double @cross(double %28339, double %28341, double %28342, double %28344), !dbg !377
  %28346 = load i32, ptr %10, align 4, !dbg !378
  %28347 = sext i32 %28346 to i64, !dbg !379
  %28348 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28347, !dbg !379
  %28349 = load double, ptr %6, align 8, !dbg !380
  %28350 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28351 = load double, ptr %28350, align 8, !dbg !380
  %28352 = load double, ptr %28348, align 16, !dbg !380
  %28353 = getelementptr inbounds { double, double }, ptr %28348, i32 0, i32 1, !dbg !380
  %28354 = load double, ptr %28353, align 8, !dbg !380
  %28355 = call { double, double } @make_vec(double %28349, double %28351, double %28352, double %28354), !dbg !380
  %28356 = extractvalue { double, double } %28355, 0, !dbg !380
  store double %28356, ptr %18, align 8, !dbg !380
  %28357 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28358 = extractvalue { double, double } %28355, 1, !dbg !380
  store double %28358, ptr %28357, align 8, !dbg !380
  %28359 = load i32, ptr %10, align 4, !dbg !381
  %28360 = add nsw i32 %28359, 1, !dbg !382
  %28361 = sext i32 %28360 to i64, !dbg !383
  %28362 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28361, !dbg !383
  %28363 = load double, ptr %6, align 8, !dbg !384
  %28364 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28365 = load double, ptr %28364, align 8, !dbg !384
  %28366 = load double, ptr %28362, align 16, !dbg !384
  %28367 = getelementptr inbounds { double, double }, ptr %28362, i32 0, i32 1, !dbg !384
  %28368 = load double, ptr %28367, align 8, !dbg !384
  %28369 = call { double, double } @make_vec(double %28363, double %28365, double %28366, double %28368), !dbg !384
  %28370 = extractvalue { double, double } %28369, 0, !dbg !384
  store double %28370, ptr %19, align 8, !dbg !384
  %28371 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28372 = extractvalue { double, double } %28369, 1, !dbg !384
  store double %28372, ptr %28371, align 8, !dbg !384
  %28373 = load double, ptr %18, align 8, !dbg !385
  %28374 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28375 = load double, ptr %28374, align 8, !dbg !385
  %28376 = load double, ptr %19, align 8, !dbg !385
  %28377 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28378 = load double, ptr %28377, align 8, !dbg !385
  %28379 = call double @dot(double %28373, double %28375, double %28376, double %28378), !dbg !385
  %28380 = call double @atan2(double noundef %28345, double noundef %28379) #6, !dbg !386
  store double %28380, ptr %13, align 8, !dbg !387
  %28381 = load double, ptr %13, align 8, !dbg !388
  %28382 = load double, ptr %14, align 8, !dbg !389
  %28383 = fadd double %28382, %28381, !dbg !389
  store double %28383, ptr %14, align 8, !dbg !389
  %28384 = load double, ptr %13, align 8, !dbg !390
  %28385 = fsub double %28384, 0x400921FB54442D18, !dbg !392
  %28386 = call double @llvm.fabs.f64(double %28385), !dbg !393
  %28387 = fcmp ole double %28386, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28387, label %14330, label %28388, !dbg !395

28388:                                            ; preds = %28311
  %28389 = load double, ptr %13, align 8, !dbg !396
  %28390 = fadd double %28389, 0x400921FB54442D18, !dbg !397
  %28391 = call double @llvm.fabs.f64(double %28390), !dbg !398
  %28392 = fcmp ole double %28391, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28392, label %14330, label %28393, !dbg !400

28393:                                            ; preds = %28388
  br label %28394, !dbg !403

28394:                                            ; preds = %28393
  %28395 = load i32, ptr %10, align 4, !dbg !404
  %28396 = add nsw i32 %28395, 1, !dbg !404
  store i32 %28396, ptr %10, align 4, !dbg !404
  %28397 = load i32, ptr %10, align 4, !dbg !364
  %28398 = load i32, ptr %8, align 4, !dbg !366
  %28399 = icmp slt i32 %28397, %28398, !dbg !367
  br i1 %28399, label %28400, label %48422, !dbg !368

28400:                                            ; preds = %28394
  %28401 = load i32, ptr %10, align 4, !dbg !369
  %28402 = sext i32 %28401 to i64, !dbg !371
  %28403 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28402, !dbg !371
  %28404 = load double, ptr %6, align 8, !dbg !372
  %28405 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28406 = load double, ptr %28405, align 8, !dbg !372
  %28407 = load double, ptr %28403, align 16, !dbg !372
  %28408 = getelementptr inbounds { double, double }, ptr %28403, i32 0, i32 1, !dbg !372
  %28409 = load double, ptr %28408, align 8, !dbg !372
  %28410 = call { double, double } @make_vec(double %28404, double %28406, double %28407, double %28409), !dbg !372
  %28411 = extractvalue { double, double } %28410, 0, !dbg !372
  store double %28411, ptr %16, align 8, !dbg !372
  %28412 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28413 = extractvalue { double, double } %28410, 1, !dbg !372
  store double %28413, ptr %28412, align 8, !dbg !372
  %28414 = load i32, ptr %10, align 4, !dbg !373
  %28415 = add nsw i32 %28414, 1, !dbg !374
  %28416 = sext i32 %28415 to i64, !dbg !375
  %28417 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28416, !dbg !375
  %28418 = load double, ptr %6, align 8, !dbg !376
  %28419 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28420 = load double, ptr %28419, align 8, !dbg !376
  %28421 = load double, ptr %28417, align 16, !dbg !376
  %28422 = getelementptr inbounds { double, double }, ptr %28417, i32 0, i32 1, !dbg !376
  %28423 = load double, ptr %28422, align 8, !dbg !376
  %28424 = call { double, double } @make_vec(double %28418, double %28420, double %28421, double %28423), !dbg !376
  %28425 = extractvalue { double, double } %28424, 0, !dbg !376
  store double %28425, ptr %17, align 8, !dbg !376
  %28426 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28427 = extractvalue { double, double } %28424, 1, !dbg !376
  store double %28427, ptr %28426, align 8, !dbg !376
  %28428 = load double, ptr %16, align 8, !dbg !377
  %28429 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28430 = load double, ptr %28429, align 8, !dbg !377
  %28431 = load double, ptr %17, align 8, !dbg !377
  %28432 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28433 = load double, ptr %28432, align 8, !dbg !377
  %28434 = call double @cross(double %28428, double %28430, double %28431, double %28433), !dbg !377
  %28435 = load i32, ptr %10, align 4, !dbg !378
  %28436 = sext i32 %28435 to i64, !dbg !379
  %28437 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28436, !dbg !379
  %28438 = load double, ptr %6, align 8, !dbg !380
  %28439 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28440 = load double, ptr %28439, align 8, !dbg !380
  %28441 = load double, ptr %28437, align 16, !dbg !380
  %28442 = getelementptr inbounds { double, double }, ptr %28437, i32 0, i32 1, !dbg !380
  %28443 = load double, ptr %28442, align 8, !dbg !380
  %28444 = call { double, double } @make_vec(double %28438, double %28440, double %28441, double %28443), !dbg !380
  %28445 = extractvalue { double, double } %28444, 0, !dbg !380
  store double %28445, ptr %18, align 8, !dbg !380
  %28446 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28447 = extractvalue { double, double } %28444, 1, !dbg !380
  store double %28447, ptr %28446, align 8, !dbg !380
  %28448 = load i32, ptr %10, align 4, !dbg !381
  %28449 = add nsw i32 %28448, 1, !dbg !382
  %28450 = sext i32 %28449 to i64, !dbg !383
  %28451 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28450, !dbg !383
  %28452 = load double, ptr %6, align 8, !dbg !384
  %28453 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28454 = load double, ptr %28453, align 8, !dbg !384
  %28455 = load double, ptr %28451, align 16, !dbg !384
  %28456 = getelementptr inbounds { double, double }, ptr %28451, i32 0, i32 1, !dbg !384
  %28457 = load double, ptr %28456, align 8, !dbg !384
  %28458 = call { double, double } @make_vec(double %28452, double %28454, double %28455, double %28457), !dbg !384
  %28459 = extractvalue { double, double } %28458, 0, !dbg !384
  store double %28459, ptr %19, align 8, !dbg !384
  %28460 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28461 = extractvalue { double, double } %28458, 1, !dbg !384
  store double %28461, ptr %28460, align 8, !dbg !384
  %28462 = load double, ptr %18, align 8, !dbg !385
  %28463 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28464 = load double, ptr %28463, align 8, !dbg !385
  %28465 = load double, ptr %19, align 8, !dbg !385
  %28466 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28467 = load double, ptr %28466, align 8, !dbg !385
  %28468 = call double @dot(double %28462, double %28464, double %28465, double %28467), !dbg !385
  %28469 = call double @atan2(double noundef %28434, double noundef %28468) #6, !dbg !386
  store double %28469, ptr %13, align 8, !dbg !387
  %28470 = load double, ptr %13, align 8, !dbg !388
  %28471 = load double, ptr %14, align 8, !dbg !389
  %28472 = fadd double %28471, %28470, !dbg !389
  store double %28472, ptr %14, align 8, !dbg !389
  %28473 = load double, ptr %13, align 8, !dbg !390
  %28474 = fsub double %28473, 0x400921FB54442D18, !dbg !392
  %28475 = call double @llvm.fabs.f64(double %28474), !dbg !393
  %28476 = fcmp ole double %28475, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28476, label %14330, label %28477, !dbg !395

28477:                                            ; preds = %28400
  %28478 = load double, ptr %13, align 8, !dbg !396
  %28479 = fadd double %28478, 0x400921FB54442D18, !dbg !397
  %28480 = call double @llvm.fabs.f64(double %28479), !dbg !398
  %28481 = fcmp ole double %28480, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28481, label %14330, label %28482, !dbg !400

28482:                                            ; preds = %28477
  br label %28483, !dbg !403

28483:                                            ; preds = %28482
  %28484 = load i32, ptr %10, align 4, !dbg !404
  %28485 = add nsw i32 %28484, 1, !dbg !404
  store i32 %28485, ptr %10, align 4, !dbg !404
  %28486 = load i32, ptr %10, align 4, !dbg !364
  %28487 = load i32, ptr %8, align 4, !dbg !366
  %28488 = icmp slt i32 %28486, %28487, !dbg !367
  br i1 %28488, label %28489, label %48422, !dbg !368

28489:                                            ; preds = %28483
  %28490 = load i32, ptr %10, align 4, !dbg !369
  %28491 = sext i32 %28490 to i64, !dbg !371
  %28492 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28491, !dbg !371
  %28493 = load double, ptr %6, align 8, !dbg !372
  %28494 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28495 = load double, ptr %28494, align 8, !dbg !372
  %28496 = load double, ptr %28492, align 16, !dbg !372
  %28497 = getelementptr inbounds { double, double }, ptr %28492, i32 0, i32 1, !dbg !372
  %28498 = load double, ptr %28497, align 8, !dbg !372
  %28499 = call { double, double } @make_vec(double %28493, double %28495, double %28496, double %28498), !dbg !372
  %28500 = extractvalue { double, double } %28499, 0, !dbg !372
  store double %28500, ptr %16, align 8, !dbg !372
  %28501 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28502 = extractvalue { double, double } %28499, 1, !dbg !372
  store double %28502, ptr %28501, align 8, !dbg !372
  %28503 = load i32, ptr %10, align 4, !dbg !373
  %28504 = add nsw i32 %28503, 1, !dbg !374
  %28505 = sext i32 %28504 to i64, !dbg !375
  %28506 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28505, !dbg !375
  %28507 = load double, ptr %6, align 8, !dbg !376
  %28508 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28509 = load double, ptr %28508, align 8, !dbg !376
  %28510 = load double, ptr %28506, align 16, !dbg !376
  %28511 = getelementptr inbounds { double, double }, ptr %28506, i32 0, i32 1, !dbg !376
  %28512 = load double, ptr %28511, align 8, !dbg !376
  %28513 = call { double, double } @make_vec(double %28507, double %28509, double %28510, double %28512), !dbg !376
  %28514 = extractvalue { double, double } %28513, 0, !dbg !376
  store double %28514, ptr %17, align 8, !dbg !376
  %28515 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28516 = extractvalue { double, double } %28513, 1, !dbg !376
  store double %28516, ptr %28515, align 8, !dbg !376
  %28517 = load double, ptr %16, align 8, !dbg !377
  %28518 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28519 = load double, ptr %28518, align 8, !dbg !377
  %28520 = load double, ptr %17, align 8, !dbg !377
  %28521 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28522 = load double, ptr %28521, align 8, !dbg !377
  %28523 = call double @cross(double %28517, double %28519, double %28520, double %28522), !dbg !377
  %28524 = load i32, ptr %10, align 4, !dbg !378
  %28525 = sext i32 %28524 to i64, !dbg !379
  %28526 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28525, !dbg !379
  %28527 = load double, ptr %6, align 8, !dbg !380
  %28528 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28529 = load double, ptr %28528, align 8, !dbg !380
  %28530 = load double, ptr %28526, align 16, !dbg !380
  %28531 = getelementptr inbounds { double, double }, ptr %28526, i32 0, i32 1, !dbg !380
  %28532 = load double, ptr %28531, align 8, !dbg !380
  %28533 = call { double, double } @make_vec(double %28527, double %28529, double %28530, double %28532), !dbg !380
  %28534 = extractvalue { double, double } %28533, 0, !dbg !380
  store double %28534, ptr %18, align 8, !dbg !380
  %28535 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28536 = extractvalue { double, double } %28533, 1, !dbg !380
  store double %28536, ptr %28535, align 8, !dbg !380
  %28537 = load i32, ptr %10, align 4, !dbg !381
  %28538 = add nsw i32 %28537, 1, !dbg !382
  %28539 = sext i32 %28538 to i64, !dbg !383
  %28540 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28539, !dbg !383
  %28541 = load double, ptr %6, align 8, !dbg !384
  %28542 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28543 = load double, ptr %28542, align 8, !dbg !384
  %28544 = load double, ptr %28540, align 16, !dbg !384
  %28545 = getelementptr inbounds { double, double }, ptr %28540, i32 0, i32 1, !dbg !384
  %28546 = load double, ptr %28545, align 8, !dbg !384
  %28547 = call { double, double } @make_vec(double %28541, double %28543, double %28544, double %28546), !dbg !384
  %28548 = extractvalue { double, double } %28547, 0, !dbg !384
  store double %28548, ptr %19, align 8, !dbg !384
  %28549 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28550 = extractvalue { double, double } %28547, 1, !dbg !384
  store double %28550, ptr %28549, align 8, !dbg !384
  %28551 = load double, ptr %18, align 8, !dbg !385
  %28552 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28553 = load double, ptr %28552, align 8, !dbg !385
  %28554 = load double, ptr %19, align 8, !dbg !385
  %28555 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28556 = load double, ptr %28555, align 8, !dbg !385
  %28557 = call double @dot(double %28551, double %28553, double %28554, double %28556), !dbg !385
  %28558 = call double @atan2(double noundef %28523, double noundef %28557) #6, !dbg !386
  store double %28558, ptr %13, align 8, !dbg !387
  %28559 = load double, ptr %13, align 8, !dbg !388
  %28560 = load double, ptr %14, align 8, !dbg !389
  %28561 = fadd double %28560, %28559, !dbg !389
  store double %28561, ptr %14, align 8, !dbg !389
  %28562 = load double, ptr %13, align 8, !dbg !390
  %28563 = fsub double %28562, 0x400921FB54442D18, !dbg !392
  %28564 = call double @llvm.fabs.f64(double %28563), !dbg !393
  %28565 = fcmp ole double %28564, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28565, label %14330, label %28566, !dbg !395

28566:                                            ; preds = %28489
  %28567 = load double, ptr %13, align 8, !dbg !396
  %28568 = fadd double %28567, 0x400921FB54442D18, !dbg !397
  %28569 = call double @llvm.fabs.f64(double %28568), !dbg !398
  %28570 = fcmp ole double %28569, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28570, label %14330, label %28571, !dbg !400

28571:                                            ; preds = %28566
  br label %28572, !dbg !403

28572:                                            ; preds = %28571
  %28573 = load i32, ptr %10, align 4, !dbg !404
  %28574 = add nsw i32 %28573, 1, !dbg !404
  store i32 %28574, ptr %10, align 4, !dbg !404
  %28575 = load i32, ptr %10, align 4, !dbg !364
  %28576 = load i32, ptr %8, align 4, !dbg !366
  %28577 = icmp slt i32 %28575, %28576, !dbg !367
  br i1 %28577, label %28578, label %48422, !dbg !368

28578:                                            ; preds = %28572
  %28579 = load i32, ptr %10, align 4, !dbg !369
  %28580 = sext i32 %28579 to i64, !dbg !371
  %28581 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28580, !dbg !371
  %28582 = load double, ptr %6, align 8, !dbg !372
  %28583 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28584 = load double, ptr %28583, align 8, !dbg !372
  %28585 = load double, ptr %28581, align 16, !dbg !372
  %28586 = getelementptr inbounds { double, double }, ptr %28581, i32 0, i32 1, !dbg !372
  %28587 = load double, ptr %28586, align 8, !dbg !372
  %28588 = call { double, double } @make_vec(double %28582, double %28584, double %28585, double %28587), !dbg !372
  %28589 = extractvalue { double, double } %28588, 0, !dbg !372
  store double %28589, ptr %16, align 8, !dbg !372
  %28590 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28591 = extractvalue { double, double } %28588, 1, !dbg !372
  store double %28591, ptr %28590, align 8, !dbg !372
  %28592 = load i32, ptr %10, align 4, !dbg !373
  %28593 = add nsw i32 %28592, 1, !dbg !374
  %28594 = sext i32 %28593 to i64, !dbg !375
  %28595 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28594, !dbg !375
  %28596 = load double, ptr %6, align 8, !dbg !376
  %28597 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28598 = load double, ptr %28597, align 8, !dbg !376
  %28599 = load double, ptr %28595, align 16, !dbg !376
  %28600 = getelementptr inbounds { double, double }, ptr %28595, i32 0, i32 1, !dbg !376
  %28601 = load double, ptr %28600, align 8, !dbg !376
  %28602 = call { double, double } @make_vec(double %28596, double %28598, double %28599, double %28601), !dbg !376
  %28603 = extractvalue { double, double } %28602, 0, !dbg !376
  store double %28603, ptr %17, align 8, !dbg !376
  %28604 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28605 = extractvalue { double, double } %28602, 1, !dbg !376
  store double %28605, ptr %28604, align 8, !dbg !376
  %28606 = load double, ptr %16, align 8, !dbg !377
  %28607 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28608 = load double, ptr %28607, align 8, !dbg !377
  %28609 = load double, ptr %17, align 8, !dbg !377
  %28610 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28611 = load double, ptr %28610, align 8, !dbg !377
  %28612 = call double @cross(double %28606, double %28608, double %28609, double %28611), !dbg !377
  %28613 = load i32, ptr %10, align 4, !dbg !378
  %28614 = sext i32 %28613 to i64, !dbg !379
  %28615 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28614, !dbg !379
  %28616 = load double, ptr %6, align 8, !dbg !380
  %28617 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28618 = load double, ptr %28617, align 8, !dbg !380
  %28619 = load double, ptr %28615, align 16, !dbg !380
  %28620 = getelementptr inbounds { double, double }, ptr %28615, i32 0, i32 1, !dbg !380
  %28621 = load double, ptr %28620, align 8, !dbg !380
  %28622 = call { double, double } @make_vec(double %28616, double %28618, double %28619, double %28621), !dbg !380
  %28623 = extractvalue { double, double } %28622, 0, !dbg !380
  store double %28623, ptr %18, align 8, !dbg !380
  %28624 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28625 = extractvalue { double, double } %28622, 1, !dbg !380
  store double %28625, ptr %28624, align 8, !dbg !380
  %28626 = load i32, ptr %10, align 4, !dbg !381
  %28627 = add nsw i32 %28626, 1, !dbg !382
  %28628 = sext i32 %28627 to i64, !dbg !383
  %28629 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28628, !dbg !383
  %28630 = load double, ptr %6, align 8, !dbg !384
  %28631 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28632 = load double, ptr %28631, align 8, !dbg !384
  %28633 = load double, ptr %28629, align 16, !dbg !384
  %28634 = getelementptr inbounds { double, double }, ptr %28629, i32 0, i32 1, !dbg !384
  %28635 = load double, ptr %28634, align 8, !dbg !384
  %28636 = call { double, double } @make_vec(double %28630, double %28632, double %28633, double %28635), !dbg !384
  %28637 = extractvalue { double, double } %28636, 0, !dbg !384
  store double %28637, ptr %19, align 8, !dbg !384
  %28638 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28639 = extractvalue { double, double } %28636, 1, !dbg !384
  store double %28639, ptr %28638, align 8, !dbg !384
  %28640 = load double, ptr %18, align 8, !dbg !385
  %28641 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28642 = load double, ptr %28641, align 8, !dbg !385
  %28643 = load double, ptr %19, align 8, !dbg !385
  %28644 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28645 = load double, ptr %28644, align 8, !dbg !385
  %28646 = call double @dot(double %28640, double %28642, double %28643, double %28645), !dbg !385
  %28647 = call double @atan2(double noundef %28612, double noundef %28646) #6, !dbg !386
  store double %28647, ptr %13, align 8, !dbg !387
  %28648 = load double, ptr %13, align 8, !dbg !388
  %28649 = load double, ptr %14, align 8, !dbg !389
  %28650 = fadd double %28649, %28648, !dbg !389
  store double %28650, ptr %14, align 8, !dbg !389
  %28651 = load double, ptr %13, align 8, !dbg !390
  %28652 = fsub double %28651, 0x400921FB54442D18, !dbg !392
  %28653 = call double @llvm.fabs.f64(double %28652), !dbg !393
  %28654 = fcmp ole double %28653, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28654, label %14330, label %28655, !dbg !395

28655:                                            ; preds = %28578
  %28656 = load double, ptr %13, align 8, !dbg !396
  %28657 = fadd double %28656, 0x400921FB54442D18, !dbg !397
  %28658 = call double @llvm.fabs.f64(double %28657), !dbg !398
  %28659 = fcmp ole double %28658, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28659, label %14330, label %28660, !dbg !400

28660:                                            ; preds = %28655
  br label %28661, !dbg !403

28661:                                            ; preds = %28660
  %28662 = load i32, ptr %10, align 4, !dbg !404
  %28663 = add nsw i32 %28662, 1, !dbg !404
  store i32 %28663, ptr %10, align 4, !dbg !404
  %28664 = load i32, ptr %10, align 4, !dbg !364
  %28665 = load i32, ptr %8, align 4, !dbg !366
  %28666 = icmp slt i32 %28664, %28665, !dbg !367
  br i1 %28666, label %28667, label %48422, !dbg !368

28667:                                            ; preds = %28661
  %28668 = load i32, ptr %10, align 4, !dbg !369
  %28669 = sext i32 %28668 to i64, !dbg !371
  %28670 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28669, !dbg !371
  %28671 = load double, ptr %6, align 8, !dbg !372
  %28672 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28673 = load double, ptr %28672, align 8, !dbg !372
  %28674 = load double, ptr %28670, align 16, !dbg !372
  %28675 = getelementptr inbounds { double, double }, ptr %28670, i32 0, i32 1, !dbg !372
  %28676 = load double, ptr %28675, align 8, !dbg !372
  %28677 = call { double, double } @make_vec(double %28671, double %28673, double %28674, double %28676), !dbg !372
  %28678 = extractvalue { double, double } %28677, 0, !dbg !372
  store double %28678, ptr %16, align 8, !dbg !372
  %28679 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28680 = extractvalue { double, double } %28677, 1, !dbg !372
  store double %28680, ptr %28679, align 8, !dbg !372
  %28681 = load i32, ptr %10, align 4, !dbg !373
  %28682 = add nsw i32 %28681, 1, !dbg !374
  %28683 = sext i32 %28682 to i64, !dbg !375
  %28684 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28683, !dbg !375
  %28685 = load double, ptr %6, align 8, !dbg !376
  %28686 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28687 = load double, ptr %28686, align 8, !dbg !376
  %28688 = load double, ptr %28684, align 16, !dbg !376
  %28689 = getelementptr inbounds { double, double }, ptr %28684, i32 0, i32 1, !dbg !376
  %28690 = load double, ptr %28689, align 8, !dbg !376
  %28691 = call { double, double } @make_vec(double %28685, double %28687, double %28688, double %28690), !dbg !376
  %28692 = extractvalue { double, double } %28691, 0, !dbg !376
  store double %28692, ptr %17, align 8, !dbg !376
  %28693 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28694 = extractvalue { double, double } %28691, 1, !dbg !376
  store double %28694, ptr %28693, align 8, !dbg !376
  %28695 = load double, ptr %16, align 8, !dbg !377
  %28696 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28697 = load double, ptr %28696, align 8, !dbg !377
  %28698 = load double, ptr %17, align 8, !dbg !377
  %28699 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28700 = load double, ptr %28699, align 8, !dbg !377
  %28701 = call double @cross(double %28695, double %28697, double %28698, double %28700), !dbg !377
  %28702 = load i32, ptr %10, align 4, !dbg !378
  %28703 = sext i32 %28702 to i64, !dbg !379
  %28704 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28703, !dbg !379
  %28705 = load double, ptr %6, align 8, !dbg !380
  %28706 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28707 = load double, ptr %28706, align 8, !dbg !380
  %28708 = load double, ptr %28704, align 16, !dbg !380
  %28709 = getelementptr inbounds { double, double }, ptr %28704, i32 0, i32 1, !dbg !380
  %28710 = load double, ptr %28709, align 8, !dbg !380
  %28711 = call { double, double } @make_vec(double %28705, double %28707, double %28708, double %28710), !dbg !380
  %28712 = extractvalue { double, double } %28711, 0, !dbg !380
  store double %28712, ptr %18, align 8, !dbg !380
  %28713 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28714 = extractvalue { double, double } %28711, 1, !dbg !380
  store double %28714, ptr %28713, align 8, !dbg !380
  %28715 = load i32, ptr %10, align 4, !dbg !381
  %28716 = add nsw i32 %28715, 1, !dbg !382
  %28717 = sext i32 %28716 to i64, !dbg !383
  %28718 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28717, !dbg !383
  %28719 = load double, ptr %6, align 8, !dbg !384
  %28720 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28721 = load double, ptr %28720, align 8, !dbg !384
  %28722 = load double, ptr %28718, align 16, !dbg !384
  %28723 = getelementptr inbounds { double, double }, ptr %28718, i32 0, i32 1, !dbg !384
  %28724 = load double, ptr %28723, align 8, !dbg !384
  %28725 = call { double, double } @make_vec(double %28719, double %28721, double %28722, double %28724), !dbg !384
  %28726 = extractvalue { double, double } %28725, 0, !dbg !384
  store double %28726, ptr %19, align 8, !dbg !384
  %28727 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28728 = extractvalue { double, double } %28725, 1, !dbg !384
  store double %28728, ptr %28727, align 8, !dbg !384
  %28729 = load double, ptr %18, align 8, !dbg !385
  %28730 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28731 = load double, ptr %28730, align 8, !dbg !385
  %28732 = load double, ptr %19, align 8, !dbg !385
  %28733 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28734 = load double, ptr %28733, align 8, !dbg !385
  %28735 = call double @dot(double %28729, double %28731, double %28732, double %28734), !dbg !385
  %28736 = call double @atan2(double noundef %28701, double noundef %28735) #6, !dbg !386
  store double %28736, ptr %13, align 8, !dbg !387
  %28737 = load double, ptr %13, align 8, !dbg !388
  %28738 = load double, ptr %14, align 8, !dbg !389
  %28739 = fadd double %28738, %28737, !dbg !389
  store double %28739, ptr %14, align 8, !dbg !389
  %28740 = load double, ptr %13, align 8, !dbg !390
  %28741 = fsub double %28740, 0x400921FB54442D18, !dbg !392
  %28742 = call double @llvm.fabs.f64(double %28741), !dbg !393
  %28743 = fcmp ole double %28742, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28743, label %14330, label %28744, !dbg !395

28744:                                            ; preds = %28667
  %28745 = load double, ptr %13, align 8, !dbg !396
  %28746 = fadd double %28745, 0x400921FB54442D18, !dbg !397
  %28747 = call double @llvm.fabs.f64(double %28746), !dbg !398
  %28748 = fcmp ole double %28747, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28748, label %14330, label %28749, !dbg !400

28749:                                            ; preds = %28744
  br label %28750, !dbg !403

28750:                                            ; preds = %28749
  %28751 = load i32, ptr %10, align 4, !dbg !404
  %28752 = add nsw i32 %28751, 1, !dbg !404
  store i32 %28752, ptr %10, align 4, !dbg !404
  %28753 = load i32, ptr %10, align 4, !dbg !364
  %28754 = load i32, ptr %8, align 4, !dbg !366
  %28755 = icmp slt i32 %28753, %28754, !dbg !367
  br i1 %28755, label %28756, label %48422, !dbg !368

28756:                                            ; preds = %28750
  %28757 = load i32, ptr %10, align 4, !dbg !369
  %28758 = sext i32 %28757 to i64, !dbg !371
  %28759 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28758, !dbg !371
  %28760 = load double, ptr %6, align 8, !dbg !372
  %28761 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28762 = load double, ptr %28761, align 8, !dbg !372
  %28763 = load double, ptr %28759, align 16, !dbg !372
  %28764 = getelementptr inbounds { double, double }, ptr %28759, i32 0, i32 1, !dbg !372
  %28765 = load double, ptr %28764, align 8, !dbg !372
  %28766 = call { double, double } @make_vec(double %28760, double %28762, double %28763, double %28765), !dbg !372
  %28767 = extractvalue { double, double } %28766, 0, !dbg !372
  store double %28767, ptr %16, align 8, !dbg !372
  %28768 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28769 = extractvalue { double, double } %28766, 1, !dbg !372
  store double %28769, ptr %28768, align 8, !dbg !372
  %28770 = load i32, ptr %10, align 4, !dbg !373
  %28771 = add nsw i32 %28770, 1, !dbg !374
  %28772 = sext i32 %28771 to i64, !dbg !375
  %28773 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28772, !dbg !375
  %28774 = load double, ptr %6, align 8, !dbg !376
  %28775 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28776 = load double, ptr %28775, align 8, !dbg !376
  %28777 = load double, ptr %28773, align 16, !dbg !376
  %28778 = getelementptr inbounds { double, double }, ptr %28773, i32 0, i32 1, !dbg !376
  %28779 = load double, ptr %28778, align 8, !dbg !376
  %28780 = call { double, double } @make_vec(double %28774, double %28776, double %28777, double %28779), !dbg !376
  %28781 = extractvalue { double, double } %28780, 0, !dbg !376
  store double %28781, ptr %17, align 8, !dbg !376
  %28782 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28783 = extractvalue { double, double } %28780, 1, !dbg !376
  store double %28783, ptr %28782, align 8, !dbg !376
  %28784 = load double, ptr %16, align 8, !dbg !377
  %28785 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28786 = load double, ptr %28785, align 8, !dbg !377
  %28787 = load double, ptr %17, align 8, !dbg !377
  %28788 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28789 = load double, ptr %28788, align 8, !dbg !377
  %28790 = call double @cross(double %28784, double %28786, double %28787, double %28789), !dbg !377
  %28791 = load i32, ptr %10, align 4, !dbg !378
  %28792 = sext i32 %28791 to i64, !dbg !379
  %28793 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28792, !dbg !379
  %28794 = load double, ptr %6, align 8, !dbg !380
  %28795 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28796 = load double, ptr %28795, align 8, !dbg !380
  %28797 = load double, ptr %28793, align 16, !dbg !380
  %28798 = getelementptr inbounds { double, double }, ptr %28793, i32 0, i32 1, !dbg !380
  %28799 = load double, ptr %28798, align 8, !dbg !380
  %28800 = call { double, double } @make_vec(double %28794, double %28796, double %28797, double %28799), !dbg !380
  %28801 = extractvalue { double, double } %28800, 0, !dbg !380
  store double %28801, ptr %18, align 8, !dbg !380
  %28802 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28803 = extractvalue { double, double } %28800, 1, !dbg !380
  store double %28803, ptr %28802, align 8, !dbg !380
  %28804 = load i32, ptr %10, align 4, !dbg !381
  %28805 = add nsw i32 %28804, 1, !dbg !382
  %28806 = sext i32 %28805 to i64, !dbg !383
  %28807 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28806, !dbg !383
  %28808 = load double, ptr %6, align 8, !dbg !384
  %28809 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28810 = load double, ptr %28809, align 8, !dbg !384
  %28811 = load double, ptr %28807, align 16, !dbg !384
  %28812 = getelementptr inbounds { double, double }, ptr %28807, i32 0, i32 1, !dbg !384
  %28813 = load double, ptr %28812, align 8, !dbg !384
  %28814 = call { double, double } @make_vec(double %28808, double %28810, double %28811, double %28813), !dbg !384
  %28815 = extractvalue { double, double } %28814, 0, !dbg !384
  store double %28815, ptr %19, align 8, !dbg !384
  %28816 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28817 = extractvalue { double, double } %28814, 1, !dbg !384
  store double %28817, ptr %28816, align 8, !dbg !384
  %28818 = load double, ptr %18, align 8, !dbg !385
  %28819 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28820 = load double, ptr %28819, align 8, !dbg !385
  %28821 = load double, ptr %19, align 8, !dbg !385
  %28822 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28823 = load double, ptr %28822, align 8, !dbg !385
  %28824 = call double @dot(double %28818, double %28820, double %28821, double %28823), !dbg !385
  %28825 = call double @atan2(double noundef %28790, double noundef %28824) #6, !dbg !386
  store double %28825, ptr %13, align 8, !dbg !387
  %28826 = load double, ptr %13, align 8, !dbg !388
  %28827 = load double, ptr %14, align 8, !dbg !389
  %28828 = fadd double %28827, %28826, !dbg !389
  store double %28828, ptr %14, align 8, !dbg !389
  %28829 = load double, ptr %13, align 8, !dbg !390
  %28830 = fsub double %28829, 0x400921FB54442D18, !dbg !392
  %28831 = call double @llvm.fabs.f64(double %28830), !dbg !393
  %28832 = fcmp ole double %28831, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28832, label %14330, label %28833, !dbg !395

28833:                                            ; preds = %28756
  %28834 = load double, ptr %13, align 8, !dbg !396
  %28835 = fadd double %28834, 0x400921FB54442D18, !dbg !397
  %28836 = call double @llvm.fabs.f64(double %28835), !dbg !398
  %28837 = fcmp ole double %28836, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28837, label %14330, label %28838, !dbg !400

28838:                                            ; preds = %28833
  br label %28839, !dbg !403

28839:                                            ; preds = %28838
  %28840 = load i32, ptr %10, align 4, !dbg !404
  %28841 = add nsw i32 %28840, 1, !dbg !404
  store i32 %28841, ptr %10, align 4, !dbg !404
  %28842 = load i32, ptr %10, align 4, !dbg !364
  %28843 = load i32, ptr %8, align 4, !dbg !366
  %28844 = icmp slt i32 %28842, %28843, !dbg !367
  br i1 %28844, label %28845, label %48422, !dbg !368

28845:                                            ; preds = %28839
  %28846 = load i32, ptr %10, align 4, !dbg !369
  %28847 = sext i32 %28846 to i64, !dbg !371
  %28848 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28847, !dbg !371
  %28849 = load double, ptr %6, align 8, !dbg !372
  %28850 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28851 = load double, ptr %28850, align 8, !dbg !372
  %28852 = load double, ptr %28848, align 16, !dbg !372
  %28853 = getelementptr inbounds { double, double }, ptr %28848, i32 0, i32 1, !dbg !372
  %28854 = load double, ptr %28853, align 8, !dbg !372
  %28855 = call { double, double } @make_vec(double %28849, double %28851, double %28852, double %28854), !dbg !372
  %28856 = extractvalue { double, double } %28855, 0, !dbg !372
  store double %28856, ptr %16, align 8, !dbg !372
  %28857 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28858 = extractvalue { double, double } %28855, 1, !dbg !372
  store double %28858, ptr %28857, align 8, !dbg !372
  %28859 = load i32, ptr %10, align 4, !dbg !373
  %28860 = add nsw i32 %28859, 1, !dbg !374
  %28861 = sext i32 %28860 to i64, !dbg !375
  %28862 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28861, !dbg !375
  %28863 = load double, ptr %6, align 8, !dbg !376
  %28864 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28865 = load double, ptr %28864, align 8, !dbg !376
  %28866 = load double, ptr %28862, align 16, !dbg !376
  %28867 = getelementptr inbounds { double, double }, ptr %28862, i32 0, i32 1, !dbg !376
  %28868 = load double, ptr %28867, align 8, !dbg !376
  %28869 = call { double, double } @make_vec(double %28863, double %28865, double %28866, double %28868), !dbg !376
  %28870 = extractvalue { double, double } %28869, 0, !dbg !376
  store double %28870, ptr %17, align 8, !dbg !376
  %28871 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28872 = extractvalue { double, double } %28869, 1, !dbg !376
  store double %28872, ptr %28871, align 8, !dbg !376
  %28873 = load double, ptr %16, align 8, !dbg !377
  %28874 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28875 = load double, ptr %28874, align 8, !dbg !377
  %28876 = load double, ptr %17, align 8, !dbg !377
  %28877 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28878 = load double, ptr %28877, align 8, !dbg !377
  %28879 = call double @cross(double %28873, double %28875, double %28876, double %28878), !dbg !377
  %28880 = load i32, ptr %10, align 4, !dbg !378
  %28881 = sext i32 %28880 to i64, !dbg !379
  %28882 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28881, !dbg !379
  %28883 = load double, ptr %6, align 8, !dbg !380
  %28884 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28885 = load double, ptr %28884, align 8, !dbg !380
  %28886 = load double, ptr %28882, align 16, !dbg !380
  %28887 = getelementptr inbounds { double, double }, ptr %28882, i32 0, i32 1, !dbg !380
  %28888 = load double, ptr %28887, align 8, !dbg !380
  %28889 = call { double, double } @make_vec(double %28883, double %28885, double %28886, double %28888), !dbg !380
  %28890 = extractvalue { double, double } %28889, 0, !dbg !380
  store double %28890, ptr %18, align 8, !dbg !380
  %28891 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28892 = extractvalue { double, double } %28889, 1, !dbg !380
  store double %28892, ptr %28891, align 8, !dbg !380
  %28893 = load i32, ptr %10, align 4, !dbg !381
  %28894 = add nsw i32 %28893, 1, !dbg !382
  %28895 = sext i32 %28894 to i64, !dbg !383
  %28896 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28895, !dbg !383
  %28897 = load double, ptr %6, align 8, !dbg !384
  %28898 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28899 = load double, ptr %28898, align 8, !dbg !384
  %28900 = load double, ptr %28896, align 16, !dbg !384
  %28901 = getelementptr inbounds { double, double }, ptr %28896, i32 0, i32 1, !dbg !384
  %28902 = load double, ptr %28901, align 8, !dbg !384
  %28903 = call { double, double } @make_vec(double %28897, double %28899, double %28900, double %28902), !dbg !384
  %28904 = extractvalue { double, double } %28903, 0, !dbg !384
  store double %28904, ptr %19, align 8, !dbg !384
  %28905 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28906 = extractvalue { double, double } %28903, 1, !dbg !384
  store double %28906, ptr %28905, align 8, !dbg !384
  %28907 = load double, ptr %18, align 8, !dbg !385
  %28908 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28909 = load double, ptr %28908, align 8, !dbg !385
  %28910 = load double, ptr %19, align 8, !dbg !385
  %28911 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %28912 = load double, ptr %28911, align 8, !dbg !385
  %28913 = call double @dot(double %28907, double %28909, double %28910, double %28912), !dbg !385
  %28914 = call double @atan2(double noundef %28879, double noundef %28913) #6, !dbg !386
  store double %28914, ptr %13, align 8, !dbg !387
  %28915 = load double, ptr %13, align 8, !dbg !388
  %28916 = load double, ptr %14, align 8, !dbg !389
  %28917 = fadd double %28916, %28915, !dbg !389
  store double %28917, ptr %14, align 8, !dbg !389
  %28918 = load double, ptr %13, align 8, !dbg !390
  %28919 = fsub double %28918, 0x400921FB54442D18, !dbg !392
  %28920 = call double @llvm.fabs.f64(double %28919), !dbg !393
  %28921 = fcmp ole double %28920, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %28921, label %14330, label %28922, !dbg !395

28922:                                            ; preds = %28845
  %28923 = load double, ptr %13, align 8, !dbg !396
  %28924 = fadd double %28923, 0x400921FB54442D18, !dbg !397
  %28925 = call double @llvm.fabs.f64(double %28924), !dbg !398
  %28926 = fcmp ole double %28925, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %28926, label %14330, label %28927, !dbg !400

28927:                                            ; preds = %28922
  br label %28928, !dbg !403

28928:                                            ; preds = %28927
  %28929 = load i32, ptr %10, align 4, !dbg !404
  %28930 = add nsw i32 %28929, 1, !dbg !404
  store i32 %28930, ptr %10, align 4, !dbg !404
  %28931 = load i32, ptr %10, align 4, !dbg !364
  %28932 = load i32, ptr %8, align 4, !dbg !366
  %28933 = icmp slt i32 %28931, %28932, !dbg !367
  br i1 %28933, label %28934, label %48422, !dbg !368

28934:                                            ; preds = %28928
  %28935 = load i32, ptr %10, align 4, !dbg !369
  %28936 = sext i32 %28935 to i64, !dbg !371
  %28937 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28936, !dbg !371
  %28938 = load double, ptr %6, align 8, !dbg !372
  %28939 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %28940 = load double, ptr %28939, align 8, !dbg !372
  %28941 = load double, ptr %28937, align 16, !dbg !372
  %28942 = getelementptr inbounds { double, double }, ptr %28937, i32 0, i32 1, !dbg !372
  %28943 = load double, ptr %28942, align 8, !dbg !372
  %28944 = call { double, double } @make_vec(double %28938, double %28940, double %28941, double %28943), !dbg !372
  %28945 = extractvalue { double, double } %28944, 0, !dbg !372
  store double %28945, ptr %16, align 8, !dbg !372
  %28946 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %28947 = extractvalue { double, double } %28944, 1, !dbg !372
  store double %28947, ptr %28946, align 8, !dbg !372
  %28948 = load i32, ptr %10, align 4, !dbg !373
  %28949 = add nsw i32 %28948, 1, !dbg !374
  %28950 = sext i32 %28949 to i64, !dbg !375
  %28951 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28950, !dbg !375
  %28952 = load double, ptr %6, align 8, !dbg !376
  %28953 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %28954 = load double, ptr %28953, align 8, !dbg !376
  %28955 = load double, ptr %28951, align 16, !dbg !376
  %28956 = getelementptr inbounds { double, double }, ptr %28951, i32 0, i32 1, !dbg !376
  %28957 = load double, ptr %28956, align 8, !dbg !376
  %28958 = call { double, double } @make_vec(double %28952, double %28954, double %28955, double %28957), !dbg !376
  %28959 = extractvalue { double, double } %28958, 0, !dbg !376
  store double %28959, ptr %17, align 8, !dbg !376
  %28960 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %28961 = extractvalue { double, double } %28958, 1, !dbg !376
  store double %28961, ptr %28960, align 8, !dbg !376
  %28962 = load double, ptr %16, align 8, !dbg !377
  %28963 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %28964 = load double, ptr %28963, align 8, !dbg !377
  %28965 = load double, ptr %17, align 8, !dbg !377
  %28966 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %28967 = load double, ptr %28966, align 8, !dbg !377
  %28968 = call double @cross(double %28962, double %28964, double %28965, double %28967), !dbg !377
  %28969 = load i32, ptr %10, align 4, !dbg !378
  %28970 = sext i32 %28969 to i64, !dbg !379
  %28971 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28970, !dbg !379
  %28972 = load double, ptr %6, align 8, !dbg !380
  %28973 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %28974 = load double, ptr %28973, align 8, !dbg !380
  %28975 = load double, ptr %28971, align 16, !dbg !380
  %28976 = getelementptr inbounds { double, double }, ptr %28971, i32 0, i32 1, !dbg !380
  %28977 = load double, ptr %28976, align 8, !dbg !380
  %28978 = call { double, double } @make_vec(double %28972, double %28974, double %28975, double %28977), !dbg !380
  %28979 = extractvalue { double, double } %28978, 0, !dbg !380
  store double %28979, ptr %18, align 8, !dbg !380
  %28980 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %28981 = extractvalue { double, double } %28978, 1, !dbg !380
  store double %28981, ptr %28980, align 8, !dbg !380
  %28982 = load i32, ptr %10, align 4, !dbg !381
  %28983 = add nsw i32 %28982, 1, !dbg !382
  %28984 = sext i32 %28983 to i64, !dbg !383
  %28985 = getelementptr inbounds %struct.POINT, ptr %26, i64 %28984, !dbg !383
  %28986 = load double, ptr %6, align 8, !dbg !384
  %28987 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %28988 = load double, ptr %28987, align 8, !dbg !384
  %28989 = load double, ptr %28985, align 16, !dbg !384
  %28990 = getelementptr inbounds { double, double }, ptr %28985, i32 0, i32 1, !dbg !384
  %28991 = load double, ptr %28990, align 8, !dbg !384
  %28992 = call { double, double } @make_vec(double %28986, double %28988, double %28989, double %28991), !dbg !384
  %28993 = extractvalue { double, double } %28992, 0, !dbg !384
  store double %28993, ptr %19, align 8, !dbg !384
  %28994 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %28995 = extractvalue { double, double } %28992, 1, !dbg !384
  store double %28995, ptr %28994, align 8, !dbg !384
  %28996 = load double, ptr %18, align 8, !dbg !385
  %28997 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %28998 = load double, ptr %28997, align 8, !dbg !385
  %28999 = load double, ptr %19, align 8, !dbg !385
  %29000 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29001 = load double, ptr %29000, align 8, !dbg !385
  %29002 = call double @dot(double %28996, double %28998, double %28999, double %29001), !dbg !385
  %29003 = call double @atan2(double noundef %28968, double noundef %29002) #6, !dbg !386
  store double %29003, ptr %13, align 8, !dbg !387
  %29004 = load double, ptr %13, align 8, !dbg !388
  %29005 = load double, ptr %14, align 8, !dbg !389
  %29006 = fadd double %29005, %29004, !dbg !389
  store double %29006, ptr %14, align 8, !dbg !389
  %29007 = load double, ptr %13, align 8, !dbg !390
  %29008 = fsub double %29007, 0x400921FB54442D18, !dbg !392
  %29009 = call double @llvm.fabs.f64(double %29008), !dbg !393
  %29010 = fcmp ole double %29009, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29010, label %14330, label %29011, !dbg !395

29011:                                            ; preds = %28934
  %29012 = load double, ptr %13, align 8, !dbg !396
  %29013 = fadd double %29012, 0x400921FB54442D18, !dbg !397
  %29014 = call double @llvm.fabs.f64(double %29013), !dbg !398
  %29015 = fcmp ole double %29014, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29015, label %14330, label %29016, !dbg !400

29016:                                            ; preds = %29011
  br label %29017, !dbg !403

29017:                                            ; preds = %29016
  %29018 = load i32, ptr %10, align 4, !dbg !404
  %29019 = add nsw i32 %29018, 1, !dbg !404
  store i32 %29019, ptr %10, align 4, !dbg !404
  %29020 = load i32, ptr %10, align 4, !dbg !364
  %29021 = load i32, ptr %8, align 4, !dbg !366
  %29022 = icmp slt i32 %29020, %29021, !dbg !367
  br i1 %29022, label %29023, label %48422, !dbg !368

29023:                                            ; preds = %29017
  %29024 = load i32, ptr %10, align 4, !dbg !369
  %29025 = sext i32 %29024 to i64, !dbg !371
  %29026 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29025, !dbg !371
  %29027 = load double, ptr %6, align 8, !dbg !372
  %29028 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29029 = load double, ptr %29028, align 8, !dbg !372
  %29030 = load double, ptr %29026, align 16, !dbg !372
  %29031 = getelementptr inbounds { double, double }, ptr %29026, i32 0, i32 1, !dbg !372
  %29032 = load double, ptr %29031, align 8, !dbg !372
  %29033 = call { double, double } @make_vec(double %29027, double %29029, double %29030, double %29032), !dbg !372
  %29034 = extractvalue { double, double } %29033, 0, !dbg !372
  store double %29034, ptr %16, align 8, !dbg !372
  %29035 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29036 = extractvalue { double, double } %29033, 1, !dbg !372
  store double %29036, ptr %29035, align 8, !dbg !372
  %29037 = load i32, ptr %10, align 4, !dbg !373
  %29038 = add nsw i32 %29037, 1, !dbg !374
  %29039 = sext i32 %29038 to i64, !dbg !375
  %29040 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29039, !dbg !375
  %29041 = load double, ptr %6, align 8, !dbg !376
  %29042 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29043 = load double, ptr %29042, align 8, !dbg !376
  %29044 = load double, ptr %29040, align 16, !dbg !376
  %29045 = getelementptr inbounds { double, double }, ptr %29040, i32 0, i32 1, !dbg !376
  %29046 = load double, ptr %29045, align 8, !dbg !376
  %29047 = call { double, double } @make_vec(double %29041, double %29043, double %29044, double %29046), !dbg !376
  %29048 = extractvalue { double, double } %29047, 0, !dbg !376
  store double %29048, ptr %17, align 8, !dbg !376
  %29049 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29050 = extractvalue { double, double } %29047, 1, !dbg !376
  store double %29050, ptr %29049, align 8, !dbg !376
  %29051 = load double, ptr %16, align 8, !dbg !377
  %29052 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29053 = load double, ptr %29052, align 8, !dbg !377
  %29054 = load double, ptr %17, align 8, !dbg !377
  %29055 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29056 = load double, ptr %29055, align 8, !dbg !377
  %29057 = call double @cross(double %29051, double %29053, double %29054, double %29056), !dbg !377
  %29058 = load i32, ptr %10, align 4, !dbg !378
  %29059 = sext i32 %29058 to i64, !dbg !379
  %29060 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29059, !dbg !379
  %29061 = load double, ptr %6, align 8, !dbg !380
  %29062 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29063 = load double, ptr %29062, align 8, !dbg !380
  %29064 = load double, ptr %29060, align 16, !dbg !380
  %29065 = getelementptr inbounds { double, double }, ptr %29060, i32 0, i32 1, !dbg !380
  %29066 = load double, ptr %29065, align 8, !dbg !380
  %29067 = call { double, double } @make_vec(double %29061, double %29063, double %29064, double %29066), !dbg !380
  %29068 = extractvalue { double, double } %29067, 0, !dbg !380
  store double %29068, ptr %18, align 8, !dbg !380
  %29069 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29070 = extractvalue { double, double } %29067, 1, !dbg !380
  store double %29070, ptr %29069, align 8, !dbg !380
  %29071 = load i32, ptr %10, align 4, !dbg !381
  %29072 = add nsw i32 %29071, 1, !dbg !382
  %29073 = sext i32 %29072 to i64, !dbg !383
  %29074 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29073, !dbg !383
  %29075 = load double, ptr %6, align 8, !dbg !384
  %29076 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29077 = load double, ptr %29076, align 8, !dbg !384
  %29078 = load double, ptr %29074, align 16, !dbg !384
  %29079 = getelementptr inbounds { double, double }, ptr %29074, i32 0, i32 1, !dbg !384
  %29080 = load double, ptr %29079, align 8, !dbg !384
  %29081 = call { double, double } @make_vec(double %29075, double %29077, double %29078, double %29080), !dbg !384
  %29082 = extractvalue { double, double } %29081, 0, !dbg !384
  store double %29082, ptr %19, align 8, !dbg !384
  %29083 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29084 = extractvalue { double, double } %29081, 1, !dbg !384
  store double %29084, ptr %29083, align 8, !dbg !384
  %29085 = load double, ptr %18, align 8, !dbg !385
  %29086 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29087 = load double, ptr %29086, align 8, !dbg !385
  %29088 = load double, ptr %19, align 8, !dbg !385
  %29089 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29090 = load double, ptr %29089, align 8, !dbg !385
  %29091 = call double @dot(double %29085, double %29087, double %29088, double %29090), !dbg !385
  %29092 = call double @atan2(double noundef %29057, double noundef %29091) #6, !dbg !386
  store double %29092, ptr %13, align 8, !dbg !387
  %29093 = load double, ptr %13, align 8, !dbg !388
  %29094 = load double, ptr %14, align 8, !dbg !389
  %29095 = fadd double %29094, %29093, !dbg !389
  store double %29095, ptr %14, align 8, !dbg !389
  %29096 = load double, ptr %13, align 8, !dbg !390
  %29097 = fsub double %29096, 0x400921FB54442D18, !dbg !392
  %29098 = call double @llvm.fabs.f64(double %29097), !dbg !393
  %29099 = fcmp ole double %29098, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29099, label %14330, label %29100, !dbg !395

29100:                                            ; preds = %29023
  %29101 = load double, ptr %13, align 8, !dbg !396
  %29102 = fadd double %29101, 0x400921FB54442D18, !dbg !397
  %29103 = call double @llvm.fabs.f64(double %29102), !dbg !398
  %29104 = fcmp ole double %29103, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29104, label %14330, label %29105, !dbg !400

29105:                                            ; preds = %29100
  br label %29106, !dbg !403

29106:                                            ; preds = %29105
  %29107 = load i32, ptr %10, align 4, !dbg !404
  %29108 = add nsw i32 %29107, 1, !dbg !404
  store i32 %29108, ptr %10, align 4, !dbg !404
  %29109 = load i32, ptr %10, align 4, !dbg !364
  %29110 = load i32, ptr %8, align 4, !dbg !366
  %29111 = icmp slt i32 %29109, %29110, !dbg !367
  br i1 %29111, label %29112, label %48422, !dbg !368

29112:                                            ; preds = %29106
  %29113 = load i32, ptr %10, align 4, !dbg !369
  %29114 = sext i32 %29113 to i64, !dbg !371
  %29115 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29114, !dbg !371
  %29116 = load double, ptr %6, align 8, !dbg !372
  %29117 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29118 = load double, ptr %29117, align 8, !dbg !372
  %29119 = load double, ptr %29115, align 16, !dbg !372
  %29120 = getelementptr inbounds { double, double }, ptr %29115, i32 0, i32 1, !dbg !372
  %29121 = load double, ptr %29120, align 8, !dbg !372
  %29122 = call { double, double } @make_vec(double %29116, double %29118, double %29119, double %29121), !dbg !372
  %29123 = extractvalue { double, double } %29122, 0, !dbg !372
  store double %29123, ptr %16, align 8, !dbg !372
  %29124 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29125 = extractvalue { double, double } %29122, 1, !dbg !372
  store double %29125, ptr %29124, align 8, !dbg !372
  %29126 = load i32, ptr %10, align 4, !dbg !373
  %29127 = add nsw i32 %29126, 1, !dbg !374
  %29128 = sext i32 %29127 to i64, !dbg !375
  %29129 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29128, !dbg !375
  %29130 = load double, ptr %6, align 8, !dbg !376
  %29131 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29132 = load double, ptr %29131, align 8, !dbg !376
  %29133 = load double, ptr %29129, align 16, !dbg !376
  %29134 = getelementptr inbounds { double, double }, ptr %29129, i32 0, i32 1, !dbg !376
  %29135 = load double, ptr %29134, align 8, !dbg !376
  %29136 = call { double, double } @make_vec(double %29130, double %29132, double %29133, double %29135), !dbg !376
  %29137 = extractvalue { double, double } %29136, 0, !dbg !376
  store double %29137, ptr %17, align 8, !dbg !376
  %29138 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29139 = extractvalue { double, double } %29136, 1, !dbg !376
  store double %29139, ptr %29138, align 8, !dbg !376
  %29140 = load double, ptr %16, align 8, !dbg !377
  %29141 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29142 = load double, ptr %29141, align 8, !dbg !377
  %29143 = load double, ptr %17, align 8, !dbg !377
  %29144 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29145 = load double, ptr %29144, align 8, !dbg !377
  %29146 = call double @cross(double %29140, double %29142, double %29143, double %29145), !dbg !377
  %29147 = load i32, ptr %10, align 4, !dbg !378
  %29148 = sext i32 %29147 to i64, !dbg !379
  %29149 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29148, !dbg !379
  %29150 = load double, ptr %6, align 8, !dbg !380
  %29151 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29152 = load double, ptr %29151, align 8, !dbg !380
  %29153 = load double, ptr %29149, align 16, !dbg !380
  %29154 = getelementptr inbounds { double, double }, ptr %29149, i32 0, i32 1, !dbg !380
  %29155 = load double, ptr %29154, align 8, !dbg !380
  %29156 = call { double, double } @make_vec(double %29150, double %29152, double %29153, double %29155), !dbg !380
  %29157 = extractvalue { double, double } %29156, 0, !dbg !380
  store double %29157, ptr %18, align 8, !dbg !380
  %29158 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29159 = extractvalue { double, double } %29156, 1, !dbg !380
  store double %29159, ptr %29158, align 8, !dbg !380
  %29160 = load i32, ptr %10, align 4, !dbg !381
  %29161 = add nsw i32 %29160, 1, !dbg !382
  %29162 = sext i32 %29161 to i64, !dbg !383
  %29163 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29162, !dbg !383
  %29164 = load double, ptr %6, align 8, !dbg !384
  %29165 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29166 = load double, ptr %29165, align 8, !dbg !384
  %29167 = load double, ptr %29163, align 16, !dbg !384
  %29168 = getelementptr inbounds { double, double }, ptr %29163, i32 0, i32 1, !dbg !384
  %29169 = load double, ptr %29168, align 8, !dbg !384
  %29170 = call { double, double } @make_vec(double %29164, double %29166, double %29167, double %29169), !dbg !384
  %29171 = extractvalue { double, double } %29170, 0, !dbg !384
  store double %29171, ptr %19, align 8, !dbg !384
  %29172 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29173 = extractvalue { double, double } %29170, 1, !dbg !384
  store double %29173, ptr %29172, align 8, !dbg !384
  %29174 = load double, ptr %18, align 8, !dbg !385
  %29175 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29176 = load double, ptr %29175, align 8, !dbg !385
  %29177 = load double, ptr %19, align 8, !dbg !385
  %29178 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29179 = load double, ptr %29178, align 8, !dbg !385
  %29180 = call double @dot(double %29174, double %29176, double %29177, double %29179), !dbg !385
  %29181 = call double @atan2(double noundef %29146, double noundef %29180) #6, !dbg !386
  store double %29181, ptr %13, align 8, !dbg !387
  %29182 = load double, ptr %13, align 8, !dbg !388
  %29183 = load double, ptr %14, align 8, !dbg !389
  %29184 = fadd double %29183, %29182, !dbg !389
  store double %29184, ptr %14, align 8, !dbg !389
  %29185 = load double, ptr %13, align 8, !dbg !390
  %29186 = fsub double %29185, 0x400921FB54442D18, !dbg !392
  %29187 = call double @llvm.fabs.f64(double %29186), !dbg !393
  %29188 = fcmp ole double %29187, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29188, label %14330, label %29189, !dbg !395

29189:                                            ; preds = %29112
  %29190 = load double, ptr %13, align 8, !dbg !396
  %29191 = fadd double %29190, 0x400921FB54442D18, !dbg !397
  %29192 = call double @llvm.fabs.f64(double %29191), !dbg !398
  %29193 = fcmp ole double %29192, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29193, label %14330, label %29194, !dbg !400

29194:                                            ; preds = %29189
  br label %29195, !dbg !403

29195:                                            ; preds = %29194
  %29196 = load i32, ptr %10, align 4, !dbg !404
  %29197 = add nsw i32 %29196, 1, !dbg !404
  store i32 %29197, ptr %10, align 4, !dbg !404
  %29198 = load i32, ptr %10, align 4, !dbg !364
  %29199 = load i32, ptr %8, align 4, !dbg !366
  %29200 = icmp slt i32 %29198, %29199, !dbg !367
  br i1 %29200, label %29201, label %48422, !dbg !368

29201:                                            ; preds = %29195
  %29202 = load i32, ptr %10, align 4, !dbg !369
  %29203 = sext i32 %29202 to i64, !dbg !371
  %29204 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29203, !dbg !371
  %29205 = load double, ptr %6, align 8, !dbg !372
  %29206 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29207 = load double, ptr %29206, align 8, !dbg !372
  %29208 = load double, ptr %29204, align 16, !dbg !372
  %29209 = getelementptr inbounds { double, double }, ptr %29204, i32 0, i32 1, !dbg !372
  %29210 = load double, ptr %29209, align 8, !dbg !372
  %29211 = call { double, double } @make_vec(double %29205, double %29207, double %29208, double %29210), !dbg !372
  %29212 = extractvalue { double, double } %29211, 0, !dbg !372
  store double %29212, ptr %16, align 8, !dbg !372
  %29213 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29214 = extractvalue { double, double } %29211, 1, !dbg !372
  store double %29214, ptr %29213, align 8, !dbg !372
  %29215 = load i32, ptr %10, align 4, !dbg !373
  %29216 = add nsw i32 %29215, 1, !dbg !374
  %29217 = sext i32 %29216 to i64, !dbg !375
  %29218 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29217, !dbg !375
  %29219 = load double, ptr %6, align 8, !dbg !376
  %29220 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29221 = load double, ptr %29220, align 8, !dbg !376
  %29222 = load double, ptr %29218, align 16, !dbg !376
  %29223 = getelementptr inbounds { double, double }, ptr %29218, i32 0, i32 1, !dbg !376
  %29224 = load double, ptr %29223, align 8, !dbg !376
  %29225 = call { double, double } @make_vec(double %29219, double %29221, double %29222, double %29224), !dbg !376
  %29226 = extractvalue { double, double } %29225, 0, !dbg !376
  store double %29226, ptr %17, align 8, !dbg !376
  %29227 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29228 = extractvalue { double, double } %29225, 1, !dbg !376
  store double %29228, ptr %29227, align 8, !dbg !376
  %29229 = load double, ptr %16, align 8, !dbg !377
  %29230 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29231 = load double, ptr %29230, align 8, !dbg !377
  %29232 = load double, ptr %17, align 8, !dbg !377
  %29233 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29234 = load double, ptr %29233, align 8, !dbg !377
  %29235 = call double @cross(double %29229, double %29231, double %29232, double %29234), !dbg !377
  %29236 = load i32, ptr %10, align 4, !dbg !378
  %29237 = sext i32 %29236 to i64, !dbg !379
  %29238 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29237, !dbg !379
  %29239 = load double, ptr %6, align 8, !dbg !380
  %29240 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29241 = load double, ptr %29240, align 8, !dbg !380
  %29242 = load double, ptr %29238, align 16, !dbg !380
  %29243 = getelementptr inbounds { double, double }, ptr %29238, i32 0, i32 1, !dbg !380
  %29244 = load double, ptr %29243, align 8, !dbg !380
  %29245 = call { double, double } @make_vec(double %29239, double %29241, double %29242, double %29244), !dbg !380
  %29246 = extractvalue { double, double } %29245, 0, !dbg !380
  store double %29246, ptr %18, align 8, !dbg !380
  %29247 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29248 = extractvalue { double, double } %29245, 1, !dbg !380
  store double %29248, ptr %29247, align 8, !dbg !380
  %29249 = load i32, ptr %10, align 4, !dbg !381
  %29250 = add nsw i32 %29249, 1, !dbg !382
  %29251 = sext i32 %29250 to i64, !dbg !383
  %29252 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29251, !dbg !383
  %29253 = load double, ptr %6, align 8, !dbg !384
  %29254 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29255 = load double, ptr %29254, align 8, !dbg !384
  %29256 = load double, ptr %29252, align 16, !dbg !384
  %29257 = getelementptr inbounds { double, double }, ptr %29252, i32 0, i32 1, !dbg !384
  %29258 = load double, ptr %29257, align 8, !dbg !384
  %29259 = call { double, double } @make_vec(double %29253, double %29255, double %29256, double %29258), !dbg !384
  %29260 = extractvalue { double, double } %29259, 0, !dbg !384
  store double %29260, ptr %19, align 8, !dbg !384
  %29261 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29262 = extractvalue { double, double } %29259, 1, !dbg !384
  store double %29262, ptr %29261, align 8, !dbg !384
  %29263 = load double, ptr %18, align 8, !dbg !385
  %29264 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29265 = load double, ptr %29264, align 8, !dbg !385
  %29266 = load double, ptr %19, align 8, !dbg !385
  %29267 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29268 = load double, ptr %29267, align 8, !dbg !385
  %29269 = call double @dot(double %29263, double %29265, double %29266, double %29268), !dbg !385
  %29270 = call double @atan2(double noundef %29235, double noundef %29269) #6, !dbg !386
  store double %29270, ptr %13, align 8, !dbg !387
  %29271 = load double, ptr %13, align 8, !dbg !388
  %29272 = load double, ptr %14, align 8, !dbg !389
  %29273 = fadd double %29272, %29271, !dbg !389
  store double %29273, ptr %14, align 8, !dbg !389
  %29274 = load double, ptr %13, align 8, !dbg !390
  %29275 = fsub double %29274, 0x400921FB54442D18, !dbg !392
  %29276 = call double @llvm.fabs.f64(double %29275), !dbg !393
  %29277 = fcmp ole double %29276, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29277, label %14330, label %29278, !dbg !395

29278:                                            ; preds = %29201
  %29279 = load double, ptr %13, align 8, !dbg !396
  %29280 = fadd double %29279, 0x400921FB54442D18, !dbg !397
  %29281 = call double @llvm.fabs.f64(double %29280), !dbg !398
  %29282 = fcmp ole double %29281, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29282, label %14330, label %29283, !dbg !400

29283:                                            ; preds = %29278
  br label %29284, !dbg !403

29284:                                            ; preds = %29283
  %29285 = load i32, ptr %10, align 4, !dbg !404
  %29286 = add nsw i32 %29285, 1, !dbg !404
  store i32 %29286, ptr %10, align 4, !dbg !404
  %29287 = load i32, ptr %10, align 4, !dbg !364
  %29288 = load i32, ptr %8, align 4, !dbg !366
  %29289 = icmp slt i32 %29287, %29288, !dbg !367
  br i1 %29289, label %29290, label %48422, !dbg !368

29290:                                            ; preds = %29284
  %29291 = load i32, ptr %10, align 4, !dbg !369
  %29292 = sext i32 %29291 to i64, !dbg !371
  %29293 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29292, !dbg !371
  %29294 = load double, ptr %6, align 8, !dbg !372
  %29295 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29296 = load double, ptr %29295, align 8, !dbg !372
  %29297 = load double, ptr %29293, align 16, !dbg !372
  %29298 = getelementptr inbounds { double, double }, ptr %29293, i32 0, i32 1, !dbg !372
  %29299 = load double, ptr %29298, align 8, !dbg !372
  %29300 = call { double, double } @make_vec(double %29294, double %29296, double %29297, double %29299), !dbg !372
  %29301 = extractvalue { double, double } %29300, 0, !dbg !372
  store double %29301, ptr %16, align 8, !dbg !372
  %29302 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29303 = extractvalue { double, double } %29300, 1, !dbg !372
  store double %29303, ptr %29302, align 8, !dbg !372
  %29304 = load i32, ptr %10, align 4, !dbg !373
  %29305 = add nsw i32 %29304, 1, !dbg !374
  %29306 = sext i32 %29305 to i64, !dbg !375
  %29307 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29306, !dbg !375
  %29308 = load double, ptr %6, align 8, !dbg !376
  %29309 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29310 = load double, ptr %29309, align 8, !dbg !376
  %29311 = load double, ptr %29307, align 16, !dbg !376
  %29312 = getelementptr inbounds { double, double }, ptr %29307, i32 0, i32 1, !dbg !376
  %29313 = load double, ptr %29312, align 8, !dbg !376
  %29314 = call { double, double } @make_vec(double %29308, double %29310, double %29311, double %29313), !dbg !376
  %29315 = extractvalue { double, double } %29314, 0, !dbg !376
  store double %29315, ptr %17, align 8, !dbg !376
  %29316 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29317 = extractvalue { double, double } %29314, 1, !dbg !376
  store double %29317, ptr %29316, align 8, !dbg !376
  %29318 = load double, ptr %16, align 8, !dbg !377
  %29319 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29320 = load double, ptr %29319, align 8, !dbg !377
  %29321 = load double, ptr %17, align 8, !dbg !377
  %29322 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29323 = load double, ptr %29322, align 8, !dbg !377
  %29324 = call double @cross(double %29318, double %29320, double %29321, double %29323), !dbg !377
  %29325 = load i32, ptr %10, align 4, !dbg !378
  %29326 = sext i32 %29325 to i64, !dbg !379
  %29327 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29326, !dbg !379
  %29328 = load double, ptr %6, align 8, !dbg !380
  %29329 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29330 = load double, ptr %29329, align 8, !dbg !380
  %29331 = load double, ptr %29327, align 16, !dbg !380
  %29332 = getelementptr inbounds { double, double }, ptr %29327, i32 0, i32 1, !dbg !380
  %29333 = load double, ptr %29332, align 8, !dbg !380
  %29334 = call { double, double } @make_vec(double %29328, double %29330, double %29331, double %29333), !dbg !380
  %29335 = extractvalue { double, double } %29334, 0, !dbg !380
  store double %29335, ptr %18, align 8, !dbg !380
  %29336 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29337 = extractvalue { double, double } %29334, 1, !dbg !380
  store double %29337, ptr %29336, align 8, !dbg !380
  %29338 = load i32, ptr %10, align 4, !dbg !381
  %29339 = add nsw i32 %29338, 1, !dbg !382
  %29340 = sext i32 %29339 to i64, !dbg !383
  %29341 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29340, !dbg !383
  %29342 = load double, ptr %6, align 8, !dbg !384
  %29343 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29344 = load double, ptr %29343, align 8, !dbg !384
  %29345 = load double, ptr %29341, align 16, !dbg !384
  %29346 = getelementptr inbounds { double, double }, ptr %29341, i32 0, i32 1, !dbg !384
  %29347 = load double, ptr %29346, align 8, !dbg !384
  %29348 = call { double, double } @make_vec(double %29342, double %29344, double %29345, double %29347), !dbg !384
  %29349 = extractvalue { double, double } %29348, 0, !dbg !384
  store double %29349, ptr %19, align 8, !dbg !384
  %29350 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29351 = extractvalue { double, double } %29348, 1, !dbg !384
  store double %29351, ptr %29350, align 8, !dbg !384
  %29352 = load double, ptr %18, align 8, !dbg !385
  %29353 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29354 = load double, ptr %29353, align 8, !dbg !385
  %29355 = load double, ptr %19, align 8, !dbg !385
  %29356 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29357 = load double, ptr %29356, align 8, !dbg !385
  %29358 = call double @dot(double %29352, double %29354, double %29355, double %29357), !dbg !385
  %29359 = call double @atan2(double noundef %29324, double noundef %29358) #6, !dbg !386
  store double %29359, ptr %13, align 8, !dbg !387
  %29360 = load double, ptr %13, align 8, !dbg !388
  %29361 = load double, ptr %14, align 8, !dbg !389
  %29362 = fadd double %29361, %29360, !dbg !389
  store double %29362, ptr %14, align 8, !dbg !389
  %29363 = load double, ptr %13, align 8, !dbg !390
  %29364 = fsub double %29363, 0x400921FB54442D18, !dbg !392
  %29365 = call double @llvm.fabs.f64(double %29364), !dbg !393
  %29366 = fcmp ole double %29365, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29366, label %14330, label %29367, !dbg !395

29367:                                            ; preds = %29290
  %29368 = load double, ptr %13, align 8, !dbg !396
  %29369 = fadd double %29368, 0x400921FB54442D18, !dbg !397
  %29370 = call double @llvm.fabs.f64(double %29369), !dbg !398
  %29371 = fcmp ole double %29370, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29371, label %14330, label %29372, !dbg !400

29372:                                            ; preds = %29367
  br label %29373, !dbg !403

29373:                                            ; preds = %29372
  %29374 = load i32, ptr %10, align 4, !dbg !404
  %29375 = add nsw i32 %29374, 1, !dbg !404
  store i32 %29375, ptr %10, align 4, !dbg !404
  %29376 = load i32, ptr %10, align 4, !dbg !364
  %29377 = load i32, ptr %8, align 4, !dbg !366
  %29378 = icmp slt i32 %29376, %29377, !dbg !367
  br i1 %29378, label %29379, label %48422, !dbg !368

29379:                                            ; preds = %29373
  %29380 = load i32, ptr %10, align 4, !dbg !369
  %29381 = sext i32 %29380 to i64, !dbg !371
  %29382 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29381, !dbg !371
  %29383 = load double, ptr %6, align 8, !dbg !372
  %29384 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29385 = load double, ptr %29384, align 8, !dbg !372
  %29386 = load double, ptr %29382, align 16, !dbg !372
  %29387 = getelementptr inbounds { double, double }, ptr %29382, i32 0, i32 1, !dbg !372
  %29388 = load double, ptr %29387, align 8, !dbg !372
  %29389 = call { double, double } @make_vec(double %29383, double %29385, double %29386, double %29388), !dbg !372
  %29390 = extractvalue { double, double } %29389, 0, !dbg !372
  store double %29390, ptr %16, align 8, !dbg !372
  %29391 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29392 = extractvalue { double, double } %29389, 1, !dbg !372
  store double %29392, ptr %29391, align 8, !dbg !372
  %29393 = load i32, ptr %10, align 4, !dbg !373
  %29394 = add nsw i32 %29393, 1, !dbg !374
  %29395 = sext i32 %29394 to i64, !dbg !375
  %29396 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29395, !dbg !375
  %29397 = load double, ptr %6, align 8, !dbg !376
  %29398 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29399 = load double, ptr %29398, align 8, !dbg !376
  %29400 = load double, ptr %29396, align 16, !dbg !376
  %29401 = getelementptr inbounds { double, double }, ptr %29396, i32 0, i32 1, !dbg !376
  %29402 = load double, ptr %29401, align 8, !dbg !376
  %29403 = call { double, double } @make_vec(double %29397, double %29399, double %29400, double %29402), !dbg !376
  %29404 = extractvalue { double, double } %29403, 0, !dbg !376
  store double %29404, ptr %17, align 8, !dbg !376
  %29405 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29406 = extractvalue { double, double } %29403, 1, !dbg !376
  store double %29406, ptr %29405, align 8, !dbg !376
  %29407 = load double, ptr %16, align 8, !dbg !377
  %29408 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29409 = load double, ptr %29408, align 8, !dbg !377
  %29410 = load double, ptr %17, align 8, !dbg !377
  %29411 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29412 = load double, ptr %29411, align 8, !dbg !377
  %29413 = call double @cross(double %29407, double %29409, double %29410, double %29412), !dbg !377
  %29414 = load i32, ptr %10, align 4, !dbg !378
  %29415 = sext i32 %29414 to i64, !dbg !379
  %29416 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29415, !dbg !379
  %29417 = load double, ptr %6, align 8, !dbg !380
  %29418 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29419 = load double, ptr %29418, align 8, !dbg !380
  %29420 = load double, ptr %29416, align 16, !dbg !380
  %29421 = getelementptr inbounds { double, double }, ptr %29416, i32 0, i32 1, !dbg !380
  %29422 = load double, ptr %29421, align 8, !dbg !380
  %29423 = call { double, double } @make_vec(double %29417, double %29419, double %29420, double %29422), !dbg !380
  %29424 = extractvalue { double, double } %29423, 0, !dbg !380
  store double %29424, ptr %18, align 8, !dbg !380
  %29425 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29426 = extractvalue { double, double } %29423, 1, !dbg !380
  store double %29426, ptr %29425, align 8, !dbg !380
  %29427 = load i32, ptr %10, align 4, !dbg !381
  %29428 = add nsw i32 %29427, 1, !dbg !382
  %29429 = sext i32 %29428 to i64, !dbg !383
  %29430 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29429, !dbg !383
  %29431 = load double, ptr %6, align 8, !dbg !384
  %29432 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29433 = load double, ptr %29432, align 8, !dbg !384
  %29434 = load double, ptr %29430, align 16, !dbg !384
  %29435 = getelementptr inbounds { double, double }, ptr %29430, i32 0, i32 1, !dbg !384
  %29436 = load double, ptr %29435, align 8, !dbg !384
  %29437 = call { double, double } @make_vec(double %29431, double %29433, double %29434, double %29436), !dbg !384
  %29438 = extractvalue { double, double } %29437, 0, !dbg !384
  store double %29438, ptr %19, align 8, !dbg !384
  %29439 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29440 = extractvalue { double, double } %29437, 1, !dbg !384
  store double %29440, ptr %29439, align 8, !dbg !384
  %29441 = load double, ptr %18, align 8, !dbg !385
  %29442 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29443 = load double, ptr %29442, align 8, !dbg !385
  %29444 = load double, ptr %19, align 8, !dbg !385
  %29445 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29446 = load double, ptr %29445, align 8, !dbg !385
  %29447 = call double @dot(double %29441, double %29443, double %29444, double %29446), !dbg !385
  %29448 = call double @atan2(double noundef %29413, double noundef %29447) #6, !dbg !386
  store double %29448, ptr %13, align 8, !dbg !387
  %29449 = load double, ptr %13, align 8, !dbg !388
  %29450 = load double, ptr %14, align 8, !dbg !389
  %29451 = fadd double %29450, %29449, !dbg !389
  store double %29451, ptr %14, align 8, !dbg !389
  %29452 = load double, ptr %13, align 8, !dbg !390
  %29453 = fsub double %29452, 0x400921FB54442D18, !dbg !392
  %29454 = call double @llvm.fabs.f64(double %29453), !dbg !393
  %29455 = fcmp ole double %29454, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29455, label %14330, label %29456, !dbg !395

29456:                                            ; preds = %29379
  %29457 = load double, ptr %13, align 8, !dbg !396
  %29458 = fadd double %29457, 0x400921FB54442D18, !dbg !397
  %29459 = call double @llvm.fabs.f64(double %29458), !dbg !398
  %29460 = fcmp ole double %29459, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29460, label %14330, label %29461, !dbg !400

29461:                                            ; preds = %29456
  br label %29462, !dbg !403

29462:                                            ; preds = %29461
  %29463 = load i32, ptr %10, align 4, !dbg !404
  %29464 = add nsw i32 %29463, 1, !dbg !404
  store i32 %29464, ptr %10, align 4, !dbg !404
  %29465 = load i32, ptr %10, align 4, !dbg !364
  %29466 = load i32, ptr %8, align 4, !dbg !366
  %29467 = icmp slt i32 %29465, %29466, !dbg !367
  br i1 %29467, label %29468, label %48422, !dbg !368

29468:                                            ; preds = %29462
  %29469 = load i32, ptr %10, align 4, !dbg !369
  %29470 = sext i32 %29469 to i64, !dbg !371
  %29471 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29470, !dbg !371
  %29472 = load double, ptr %6, align 8, !dbg !372
  %29473 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29474 = load double, ptr %29473, align 8, !dbg !372
  %29475 = load double, ptr %29471, align 16, !dbg !372
  %29476 = getelementptr inbounds { double, double }, ptr %29471, i32 0, i32 1, !dbg !372
  %29477 = load double, ptr %29476, align 8, !dbg !372
  %29478 = call { double, double } @make_vec(double %29472, double %29474, double %29475, double %29477), !dbg !372
  %29479 = extractvalue { double, double } %29478, 0, !dbg !372
  store double %29479, ptr %16, align 8, !dbg !372
  %29480 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29481 = extractvalue { double, double } %29478, 1, !dbg !372
  store double %29481, ptr %29480, align 8, !dbg !372
  %29482 = load i32, ptr %10, align 4, !dbg !373
  %29483 = add nsw i32 %29482, 1, !dbg !374
  %29484 = sext i32 %29483 to i64, !dbg !375
  %29485 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29484, !dbg !375
  %29486 = load double, ptr %6, align 8, !dbg !376
  %29487 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29488 = load double, ptr %29487, align 8, !dbg !376
  %29489 = load double, ptr %29485, align 16, !dbg !376
  %29490 = getelementptr inbounds { double, double }, ptr %29485, i32 0, i32 1, !dbg !376
  %29491 = load double, ptr %29490, align 8, !dbg !376
  %29492 = call { double, double } @make_vec(double %29486, double %29488, double %29489, double %29491), !dbg !376
  %29493 = extractvalue { double, double } %29492, 0, !dbg !376
  store double %29493, ptr %17, align 8, !dbg !376
  %29494 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29495 = extractvalue { double, double } %29492, 1, !dbg !376
  store double %29495, ptr %29494, align 8, !dbg !376
  %29496 = load double, ptr %16, align 8, !dbg !377
  %29497 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29498 = load double, ptr %29497, align 8, !dbg !377
  %29499 = load double, ptr %17, align 8, !dbg !377
  %29500 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29501 = load double, ptr %29500, align 8, !dbg !377
  %29502 = call double @cross(double %29496, double %29498, double %29499, double %29501), !dbg !377
  %29503 = load i32, ptr %10, align 4, !dbg !378
  %29504 = sext i32 %29503 to i64, !dbg !379
  %29505 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29504, !dbg !379
  %29506 = load double, ptr %6, align 8, !dbg !380
  %29507 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29508 = load double, ptr %29507, align 8, !dbg !380
  %29509 = load double, ptr %29505, align 16, !dbg !380
  %29510 = getelementptr inbounds { double, double }, ptr %29505, i32 0, i32 1, !dbg !380
  %29511 = load double, ptr %29510, align 8, !dbg !380
  %29512 = call { double, double } @make_vec(double %29506, double %29508, double %29509, double %29511), !dbg !380
  %29513 = extractvalue { double, double } %29512, 0, !dbg !380
  store double %29513, ptr %18, align 8, !dbg !380
  %29514 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29515 = extractvalue { double, double } %29512, 1, !dbg !380
  store double %29515, ptr %29514, align 8, !dbg !380
  %29516 = load i32, ptr %10, align 4, !dbg !381
  %29517 = add nsw i32 %29516, 1, !dbg !382
  %29518 = sext i32 %29517 to i64, !dbg !383
  %29519 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29518, !dbg !383
  %29520 = load double, ptr %6, align 8, !dbg !384
  %29521 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29522 = load double, ptr %29521, align 8, !dbg !384
  %29523 = load double, ptr %29519, align 16, !dbg !384
  %29524 = getelementptr inbounds { double, double }, ptr %29519, i32 0, i32 1, !dbg !384
  %29525 = load double, ptr %29524, align 8, !dbg !384
  %29526 = call { double, double } @make_vec(double %29520, double %29522, double %29523, double %29525), !dbg !384
  %29527 = extractvalue { double, double } %29526, 0, !dbg !384
  store double %29527, ptr %19, align 8, !dbg !384
  %29528 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29529 = extractvalue { double, double } %29526, 1, !dbg !384
  store double %29529, ptr %29528, align 8, !dbg !384
  %29530 = load double, ptr %18, align 8, !dbg !385
  %29531 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29532 = load double, ptr %29531, align 8, !dbg !385
  %29533 = load double, ptr %19, align 8, !dbg !385
  %29534 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29535 = load double, ptr %29534, align 8, !dbg !385
  %29536 = call double @dot(double %29530, double %29532, double %29533, double %29535), !dbg !385
  %29537 = call double @atan2(double noundef %29502, double noundef %29536) #6, !dbg !386
  store double %29537, ptr %13, align 8, !dbg !387
  %29538 = load double, ptr %13, align 8, !dbg !388
  %29539 = load double, ptr %14, align 8, !dbg !389
  %29540 = fadd double %29539, %29538, !dbg !389
  store double %29540, ptr %14, align 8, !dbg !389
  %29541 = load double, ptr %13, align 8, !dbg !390
  %29542 = fsub double %29541, 0x400921FB54442D18, !dbg !392
  %29543 = call double @llvm.fabs.f64(double %29542), !dbg !393
  %29544 = fcmp ole double %29543, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29544, label %14330, label %29545, !dbg !395

29545:                                            ; preds = %29468
  %29546 = load double, ptr %13, align 8, !dbg !396
  %29547 = fadd double %29546, 0x400921FB54442D18, !dbg !397
  %29548 = call double @llvm.fabs.f64(double %29547), !dbg !398
  %29549 = fcmp ole double %29548, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29549, label %14330, label %29550, !dbg !400

29550:                                            ; preds = %29545
  br label %29551, !dbg !403

29551:                                            ; preds = %29550
  %29552 = load i32, ptr %10, align 4, !dbg !404
  %29553 = add nsw i32 %29552, 1, !dbg !404
  store i32 %29553, ptr %10, align 4, !dbg !404
  %29554 = load i32, ptr %10, align 4, !dbg !364
  %29555 = load i32, ptr %8, align 4, !dbg !366
  %29556 = icmp slt i32 %29554, %29555, !dbg !367
  br i1 %29556, label %29557, label %48422, !dbg !368

29557:                                            ; preds = %29551
  %29558 = load i32, ptr %10, align 4, !dbg !369
  %29559 = sext i32 %29558 to i64, !dbg !371
  %29560 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29559, !dbg !371
  %29561 = load double, ptr %6, align 8, !dbg !372
  %29562 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29563 = load double, ptr %29562, align 8, !dbg !372
  %29564 = load double, ptr %29560, align 16, !dbg !372
  %29565 = getelementptr inbounds { double, double }, ptr %29560, i32 0, i32 1, !dbg !372
  %29566 = load double, ptr %29565, align 8, !dbg !372
  %29567 = call { double, double } @make_vec(double %29561, double %29563, double %29564, double %29566), !dbg !372
  %29568 = extractvalue { double, double } %29567, 0, !dbg !372
  store double %29568, ptr %16, align 8, !dbg !372
  %29569 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29570 = extractvalue { double, double } %29567, 1, !dbg !372
  store double %29570, ptr %29569, align 8, !dbg !372
  %29571 = load i32, ptr %10, align 4, !dbg !373
  %29572 = add nsw i32 %29571, 1, !dbg !374
  %29573 = sext i32 %29572 to i64, !dbg !375
  %29574 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29573, !dbg !375
  %29575 = load double, ptr %6, align 8, !dbg !376
  %29576 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29577 = load double, ptr %29576, align 8, !dbg !376
  %29578 = load double, ptr %29574, align 16, !dbg !376
  %29579 = getelementptr inbounds { double, double }, ptr %29574, i32 0, i32 1, !dbg !376
  %29580 = load double, ptr %29579, align 8, !dbg !376
  %29581 = call { double, double } @make_vec(double %29575, double %29577, double %29578, double %29580), !dbg !376
  %29582 = extractvalue { double, double } %29581, 0, !dbg !376
  store double %29582, ptr %17, align 8, !dbg !376
  %29583 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29584 = extractvalue { double, double } %29581, 1, !dbg !376
  store double %29584, ptr %29583, align 8, !dbg !376
  %29585 = load double, ptr %16, align 8, !dbg !377
  %29586 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29587 = load double, ptr %29586, align 8, !dbg !377
  %29588 = load double, ptr %17, align 8, !dbg !377
  %29589 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29590 = load double, ptr %29589, align 8, !dbg !377
  %29591 = call double @cross(double %29585, double %29587, double %29588, double %29590), !dbg !377
  %29592 = load i32, ptr %10, align 4, !dbg !378
  %29593 = sext i32 %29592 to i64, !dbg !379
  %29594 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29593, !dbg !379
  %29595 = load double, ptr %6, align 8, !dbg !380
  %29596 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29597 = load double, ptr %29596, align 8, !dbg !380
  %29598 = load double, ptr %29594, align 16, !dbg !380
  %29599 = getelementptr inbounds { double, double }, ptr %29594, i32 0, i32 1, !dbg !380
  %29600 = load double, ptr %29599, align 8, !dbg !380
  %29601 = call { double, double } @make_vec(double %29595, double %29597, double %29598, double %29600), !dbg !380
  %29602 = extractvalue { double, double } %29601, 0, !dbg !380
  store double %29602, ptr %18, align 8, !dbg !380
  %29603 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29604 = extractvalue { double, double } %29601, 1, !dbg !380
  store double %29604, ptr %29603, align 8, !dbg !380
  %29605 = load i32, ptr %10, align 4, !dbg !381
  %29606 = add nsw i32 %29605, 1, !dbg !382
  %29607 = sext i32 %29606 to i64, !dbg !383
  %29608 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29607, !dbg !383
  %29609 = load double, ptr %6, align 8, !dbg !384
  %29610 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29611 = load double, ptr %29610, align 8, !dbg !384
  %29612 = load double, ptr %29608, align 16, !dbg !384
  %29613 = getelementptr inbounds { double, double }, ptr %29608, i32 0, i32 1, !dbg !384
  %29614 = load double, ptr %29613, align 8, !dbg !384
  %29615 = call { double, double } @make_vec(double %29609, double %29611, double %29612, double %29614), !dbg !384
  %29616 = extractvalue { double, double } %29615, 0, !dbg !384
  store double %29616, ptr %19, align 8, !dbg !384
  %29617 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29618 = extractvalue { double, double } %29615, 1, !dbg !384
  store double %29618, ptr %29617, align 8, !dbg !384
  %29619 = load double, ptr %18, align 8, !dbg !385
  %29620 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29621 = load double, ptr %29620, align 8, !dbg !385
  %29622 = load double, ptr %19, align 8, !dbg !385
  %29623 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29624 = load double, ptr %29623, align 8, !dbg !385
  %29625 = call double @dot(double %29619, double %29621, double %29622, double %29624), !dbg !385
  %29626 = call double @atan2(double noundef %29591, double noundef %29625) #6, !dbg !386
  store double %29626, ptr %13, align 8, !dbg !387
  %29627 = load double, ptr %13, align 8, !dbg !388
  %29628 = load double, ptr %14, align 8, !dbg !389
  %29629 = fadd double %29628, %29627, !dbg !389
  store double %29629, ptr %14, align 8, !dbg !389
  %29630 = load double, ptr %13, align 8, !dbg !390
  %29631 = fsub double %29630, 0x400921FB54442D18, !dbg !392
  %29632 = call double @llvm.fabs.f64(double %29631), !dbg !393
  %29633 = fcmp ole double %29632, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29633, label %14330, label %29634, !dbg !395

29634:                                            ; preds = %29557
  %29635 = load double, ptr %13, align 8, !dbg !396
  %29636 = fadd double %29635, 0x400921FB54442D18, !dbg !397
  %29637 = call double @llvm.fabs.f64(double %29636), !dbg !398
  %29638 = fcmp ole double %29637, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29638, label %14330, label %29639, !dbg !400

29639:                                            ; preds = %29634
  br label %29640, !dbg !403

29640:                                            ; preds = %29639
  %29641 = load i32, ptr %10, align 4, !dbg !404
  %29642 = add nsw i32 %29641, 1, !dbg !404
  store i32 %29642, ptr %10, align 4, !dbg !404
  %29643 = load i32, ptr %10, align 4, !dbg !364
  %29644 = load i32, ptr %8, align 4, !dbg !366
  %29645 = icmp slt i32 %29643, %29644, !dbg !367
  br i1 %29645, label %29646, label %48422, !dbg !368

29646:                                            ; preds = %29640
  %29647 = load i32, ptr %10, align 4, !dbg !369
  %29648 = sext i32 %29647 to i64, !dbg !371
  %29649 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29648, !dbg !371
  %29650 = load double, ptr %6, align 8, !dbg !372
  %29651 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29652 = load double, ptr %29651, align 8, !dbg !372
  %29653 = load double, ptr %29649, align 16, !dbg !372
  %29654 = getelementptr inbounds { double, double }, ptr %29649, i32 0, i32 1, !dbg !372
  %29655 = load double, ptr %29654, align 8, !dbg !372
  %29656 = call { double, double } @make_vec(double %29650, double %29652, double %29653, double %29655), !dbg !372
  %29657 = extractvalue { double, double } %29656, 0, !dbg !372
  store double %29657, ptr %16, align 8, !dbg !372
  %29658 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29659 = extractvalue { double, double } %29656, 1, !dbg !372
  store double %29659, ptr %29658, align 8, !dbg !372
  %29660 = load i32, ptr %10, align 4, !dbg !373
  %29661 = add nsw i32 %29660, 1, !dbg !374
  %29662 = sext i32 %29661 to i64, !dbg !375
  %29663 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29662, !dbg !375
  %29664 = load double, ptr %6, align 8, !dbg !376
  %29665 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29666 = load double, ptr %29665, align 8, !dbg !376
  %29667 = load double, ptr %29663, align 16, !dbg !376
  %29668 = getelementptr inbounds { double, double }, ptr %29663, i32 0, i32 1, !dbg !376
  %29669 = load double, ptr %29668, align 8, !dbg !376
  %29670 = call { double, double } @make_vec(double %29664, double %29666, double %29667, double %29669), !dbg !376
  %29671 = extractvalue { double, double } %29670, 0, !dbg !376
  store double %29671, ptr %17, align 8, !dbg !376
  %29672 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29673 = extractvalue { double, double } %29670, 1, !dbg !376
  store double %29673, ptr %29672, align 8, !dbg !376
  %29674 = load double, ptr %16, align 8, !dbg !377
  %29675 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29676 = load double, ptr %29675, align 8, !dbg !377
  %29677 = load double, ptr %17, align 8, !dbg !377
  %29678 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29679 = load double, ptr %29678, align 8, !dbg !377
  %29680 = call double @cross(double %29674, double %29676, double %29677, double %29679), !dbg !377
  %29681 = load i32, ptr %10, align 4, !dbg !378
  %29682 = sext i32 %29681 to i64, !dbg !379
  %29683 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29682, !dbg !379
  %29684 = load double, ptr %6, align 8, !dbg !380
  %29685 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29686 = load double, ptr %29685, align 8, !dbg !380
  %29687 = load double, ptr %29683, align 16, !dbg !380
  %29688 = getelementptr inbounds { double, double }, ptr %29683, i32 0, i32 1, !dbg !380
  %29689 = load double, ptr %29688, align 8, !dbg !380
  %29690 = call { double, double } @make_vec(double %29684, double %29686, double %29687, double %29689), !dbg !380
  %29691 = extractvalue { double, double } %29690, 0, !dbg !380
  store double %29691, ptr %18, align 8, !dbg !380
  %29692 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29693 = extractvalue { double, double } %29690, 1, !dbg !380
  store double %29693, ptr %29692, align 8, !dbg !380
  %29694 = load i32, ptr %10, align 4, !dbg !381
  %29695 = add nsw i32 %29694, 1, !dbg !382
  %29696 = sext i32 %29695 to i64, !dbg !383
  %29697 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29696, !dbg !383
  %29698 = load double, ptr %6, align 8, !dbg !384
  %29699 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29700 = load double, ptr %29699, align 8, !dbg !384
  %29701 = load double, ptr %29697, align 16, !dbg !384
  %29702 = getelementptr inbounds { double, double }, ptr %29697, i32 0, i32 1, !dbg !384
  %29703 = load double, ptr %29702, align 8, !dbg !384
  %29704 = call { double, double } @make_vec(double %29698, double %29700, double %29701, double %29703), !dbg !384
  %29705 = extractvalue { double, double } %29704, 0, !dbg !384
  store double %29705, ptr %19, align 8, !dbg !384
  %29706 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29707 = extractvalue { double, double } %29704, 1, !dbg !384
  store double %29707, ptr %29706, align 8, !dbg !384
  %29708 = load double, ptr %18, align 8, !dbg !385
  %29709 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29710 = load double, ptr %29709, align 8, !dbg !385
  %29711 = load double, ptr %19, align 8, !dbg !385
  %29712 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29713 = load double, ptr %29712, align 8, !dbg !385
  %29714 = call double @dot(double %29708, double %29710, double %29711, double %29713), !dbg !385
  %29715 = call double @atan2(double noundef %29680, double noundef %29714) #6, !dbg !386
  store double %29715, ptr %13, align 8, !dbg !387
  %29716 = load double, ptr %13, align 8, !dbg !388
  %29717 = load double, ptr %14, align 8, !dbg !389
  %29718 = fadd double %29717, %29716, !dbg !389
  store double %29718, ptr %14, align 8, !dbg !389
  %29719 = load double, ptr %13, align 8, !dbg !390
  %29720 = fsub double %29719, 0x400921FB54442D18, !dbg !392
  %29721 = call double @llvm.fabs.f64(double %29720), !dbg !393
  %29722 = fcmp ole double %29721, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29722, label %14330, label %29723, !dbg !395

29723:                                            ; preds = %29646
  %29724 = load double, ptr %13, align 8, !dbg !396
  %29725 = fadd double %29724, 0x400921FB54442D18, !dbg !397
  %29726 = call double @llvm.fabs.f64(double %29725), !dbg !398
  %29727 = fcmp ole double %29726, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29727, label %14330, label %29728, !dbg !400

29728:                                            ; preds = %29723
  br label %29729, !dbg !403

29729:                                            ; preds = %29728
  %29730 = load i32, ptr %10, align 4, !dbg !404
  %29731 = add nsw i32 %29730, 1, !dbg !404
  store i32 %29731, ptr %10, align 4, !dbg !404
  %29732 = load i32, ptr %10, align 4, !dbg !364
  %29733 = load i32, ptr %8, align 4, !dbg !366
  %29734 = icmp slt i32 %29732, %29733, !dbg !367
  br i1 %29734, label %29735, label %48422, !dbg !368

29735:                                            ; preds = %29729
  %29736 = load i32, ptr %10, align 4, !dbg !369
  %29737 = sext i32 %29736 to i64, !dbg !371
  %29738 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29737, !dbg !371
  %29739 = load double, ptr %6, align 8, !dbg !372
  %29740 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29741 = load double, ptr %29740, align 8, !dbg !372
  %29742 = load double, ptr %29738, align 16, !dbg !372
  %29743 = getelementptr inbounds { double, double }, ptr %29738, i32 0, i32 1, !dbg !372
  %29744 = load double, ptr %29743, align 8, !dbg !372
  %29745 = call { double, double } @make_vec(double %29739, double %29741, double %29742, double %29744), !dbg !372
  %29746 = extractvalue { double, double } %29745, 0, !dbg !372
  store double %29746, ptr %16, align 8, !dbg !372
  %29747 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29748 = extractvalue { double, double } %29745, 1, !dbg !372
  store double %29748, ptr %29747, align 8, !dbg !372
  %29749 = load i32, ptr %10, align 4, !dbg !373
  %29750 = add nsw i32 %29749, 1, !dbg !374
  %29751 = sext i32 %29750 to i64, !dbg !375
  %29752 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29751, !dbg !375
  %29753 = load double, ptr %6, align 8, !dbg !376
  %29754 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29755 = load double, ptr %29754, align 8, !dbg !376
  %29756 = load double, ptr %29752, align 16, !dbg !376
  %29757 = getelementptr inbounds { double, double }, ptr %29752, i32 0, i32 1, !dbg !376
  %29758 = load double, ptr %29757, align 8, !dbg !376
  %29759 = call { double, double } @make_vec(double %29753, double %29755, double %29756, double %29758), !dbg !376
  %29760 = extractvalue { double, double } %29759, 0, !dbg !376
  store double %29760, ptr %17, align 8, !dbg !376
  %29761 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29762 = extractvalue { double, double } %29759, 1, !dbg !376
  store double %29762, ptr %29761, align 8, !dbg !376
  %29763 = load double, ptr %16, align 8, !dbg !377
  %29764 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29765 = load double, ptr %29764, align 8, !dbg !377
  %29766 = load double, ptr %17, align 8, !dbg !377
  %29767 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29768 = load double, ptr %29767, align 8, !dbg !377
  %29769 = call double @cross(double %29763, double %29765, double %29766, double %29768), !dbg !377
  %29770 = load i32, ptr %10, align 4, !dbg !378
  %29771 = sext i32 %29770 to i64, !dbg !379
  %29772 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29771, !dbg !379
  %29773 = load double, ptr %6, align 8, !dbg !380
  %29774 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29775 = load double, ptr %29774, align 8, !dbg !380
  %29776 = load double, ptr %29772, align 16, !dbg !380
  %29777 = getelementptr inbounds { double, double }, ptr %29772, i32 0, i32 1, !dbg !380
  %29778 = load double, ptr %29777, align 8, !dbg !380
  %29779 = call { double, double } @make_vec(double %29773, double %29775, double %29776, double %29778), !dbg !380
  %29780 = extractvalue { double, double } %29779, 0, !dbg !380
  store double %29780, ptr %18, align 8, !dbg !380
  %29781 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29782 = extractvalue { double, double } %29779, 1, !dbg !380
  store double %29782, ptr %29781, align 8, !dbg !380
  %29783 = load i32, ptr %10, align 4, !dbg !381
  %29784 = add nsw i32 %29783, 1, !dbg !382
  %29785 = sext i32 %29784 to i64, !dbg !383
  %29786 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29785, !dbg !383
  %29787 = load double, ptr %6, align 8, !dbg !384
  %29788 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29789 = load double, ptr %29788, align 8, !dbg !384
  %29790 = load double, ptr %29786, align 16, !dbg !384
  %29791 = getelementptr inbounds { double, double }, ptr %29786, i32 0, i32 1, !dbg !384
  %29792 = load double, ptr %29791, align 8, !dbg !384
  %29793 = call { double, double } @make_vec(double %29787, double %29789, double %29790, double %29792), !dbg !384
  %29794 = extractvalue { double, double } %29793, 0, !dbg !384
  store double %29794, ptr %19, align 8, !dbg !384
  %29795 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29796 = extractvalue { double, double } %29793, 1, !dbg !384
  store double %29796, ptr %29795, align 8, !dbg !384
  %29797 = load double, ptr %18, align 8, !dbg !385
  %29798 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29799 = load double, ptr %29798, align 8, !dbg !385
  %29800 = load double, ptr %19, align 8, !dbg !385
  %29801 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29802 = load double, ptr %29801, align 8, !dbg !385
  %29803 = call double @dot(double %29797, double %29799, double %29800, double %29802), !dbg !385
  %29804 = call double @atan2(double noundef %29769, double noundef %29803) #6, !dbg !386
  store double %29804, ptr %13, align 8, !dbg !387
  %29805 = load double, ptr %13, align 8, !dbg !388
  %29806 = load double, ptr %14, align 8, !dbg !389
  %29807 = fadd double %29806, %29805, !dbg !389
  store double %29807, ptr %14, align 8, !dbg !389
  %29808 = load double, ptr %13, align 8, !dbg !390
  %29809 = fsub double %29808, 0x400921FB54442D18, !dbg !392
  %29810 = call double @llvm.fabs.f64(double %29809), !dbg !393
  %29811 = fcmp ole double %29810, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29811, label %14330, label %29812, !dbg !395

29812:                                            ; preds = %29735
  %29813 = load double, ptr %13, align 8, !dbg !396
  %29814 = fadd double %29813, 0x400921FB54442D18, !dbg !397
  %29815 = call double @llvm.fabs.f64(double %29814), !dbg !398
  %29816 = fcmp ole double %29815, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29816, label %14330, label %29817, !dbg !400

29817:                                            ; preds = %29812
  br label %29818, !dbg !403

29818:                                            ; preds = %29817
  %29819 = load i32, ptr %10, align 4, !dbg !404
  %29820 = add nsw i32 %29819, 1, !dbg !404
  store i32 %29820, ptr %10, align 4, !dbg !404
  %29821 = load i32, ptr %10, align 4, !dbg !364
  %29822 = load i32, ptr %8, align 4, !dbg !366
  %29823 = icmp slt i32 %29821, %29822, !dbg !367
  br i1 %29823, label %29824, label %48422, !dbg !368

29824:                                            ; preds = %29818
  %29825 = load i32, ptr %10, align 4, !dbg !369
  %29826 = sext i32 %29825 to i64, !dbg !371
  %29827 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29826, !dbg !371
  %29828 = load double, ptr %6, align 8, !dbg !372
  %29829 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29830 = load double, ptr %29829, align 8, !dbg !372
  %29831 = load double, ptr %29827, align 16, !dbg !372
  %29832 = getelementptr inbounds { double, double }, ptr %29827, i32 0, i32 1, !dbg !372
  %29833 = load double, ptr %29832, align 8, !dbg !372
  %29834 = call { double, double } @make_vec(double %29828, double %29830, double %29831, double %29833), !dbg !372
  %29835 = extractvalue { double, double } %29834, 0, !dbg !372
  store double %29835, ptr %16, align 8, !dbg !372
  %29836 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29837 = extractvalue { double, double } %29834, 1, !dbg !372
  store double %29837, ptr %29836, align 8, !dbg !372
  %29838 = load i32, ptr %10, align 4, !dbg !373
  %29839 = add nsw i32 %29838, 1, !dbg !374
  %29840 = sext i32 %29839 to i64, !dbg !375
  %29841 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29840, !dbg !375
  %29842 = load double, ptr %6, align 8, !dbg !376
  %29843 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29844 = load double, ptr %29843, align 8, !dbg !376
  %29845 = load double, ptr %29841, align 16, !dbg !376
  %29846 = getelementptr inbounds { double, double }, ptr %29841, i32 0, i32 1, !dbg !376
  %29847 = load double, ptr %29846, align 8, !dbg !376
  %29848 = call { double, double } @make_vec(double %29842, double %29844, double %29845, double %29847), !dbg !376
  %29849 = extractvalue { double, double } %29848, 0, !dbg !376
  store double %29849, ptr %17, align 8, !dbg !376
  %29850 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29851 = extractvalue { double, double } %29848, 1, !dbg !376
  store double %29851, ptr %29850, align 8, !dbg !376
  %29852 = load double, ptr %16, align 8, !dbg !377
  %29853 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29854 = load double, ptr %29853, align 8, !dbg !377
  %29855 = load double, ptr %17, align 8, !dbg !377
  %29856 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29857 = load double, ptr %29856, align 8, !dbg !377
  %29858 = call double @cross(double %29852, double %29854, double %29855, double %29857), !dbg !377
  %29859 = load i32, ptr %10, align 4, !dbg !378
  %29860 = sext i32 %29859 to i64, !dbg !379
  %29861 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29860, !dbg !379
  %29862 = load double, ptr %6, align 8, !dbg !380
  %29863 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29864 = load double, ptr %29863, align 8, !dbg !380
  %29865 = load double, ptr %29861, align 16, !dbg !380
  %29866 = getelementptr inbounds { double, double }, ptr %29861, i32 0, i32 1, !dbg !380
  %29867 = load double, ptr %29866, align 8, !dbg !380
  %29868 = call { double, double } @make_vec(double %29862, double %29864, double %29865, double %29867), !dbg !380
  %29869 = extractvalue { double, double } %29868, 0, !dbg !380
  store double %29869, ptr %18, align 8, !dbg !380
  %29870 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29871 = extractvalue { double, double } %29868, 1, !dbg !380
  store double %29871, ptr %29870, align 8, !dbg !380
  %29872 = load i32, ptr %10, align 4, !dbg !381
  %29873 = add nsw i32 %29872, 1, !dbg !382
  %29874 = sext i32 %29873 to i64, !dbg !383
  %29875 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29874, !dbg !383
  %29876 = load double, ptr %6, align 8, !dbg !384
  %29877 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29878 = load double, ptr %29877, align 8, !dbg !384
  %29879 = load double, ptr %29875, align 16, !dbg !384
  %29880 = getelementptr inbounds { double, double }, ptr %29875, i32 0, i32 1, !dbg !384
  %29881 = load double, ptr %29880, align 8, !dbg !384
  %29882 = call { double, double } @make_vec(double %29876, double %29878, double %29879, double %29881), !dbg !384
  %29883 = extractvalue { double, double } %29882, 0, !dbg !384
  store double %29883, ptr %19, align 8, !dbg !384
  %29884 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29885 = extractvalue { double, double } %29882, 1, !dbg !384
  store double %29885, ptr %29884, align 8, !dbg !384
  %29886 = load double, ptr %18, align 8, !dbg !385
  %29887 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29888 = load double, ptr %29887, align 8, !dbg !385
  %29889 = load double, ptr %19, align 8, !dbg !385
  %29890 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29891 = load double, ptr %29890, align 8, !dbg !385
  %29892 = call double @dot(double %29886, double %29888, double %29889, double %29891), !dbg !385
  %29893 = call double @atan2(double noundef %29858, double noundef %29892) #6, !dbg !386
  store double %29893, ptr %13, align 8, !dbg !387
  %29894 = load double, ptr %13, align 8, !dbg !388
  %29895 = load double, ptr %14, align 8, !dbg !389
  %29896 = fadd double %29895, %29894, !dbg !389
  store double %29896, ptr %14, align 8, !dbg !389
  %29897 = load double, ptr %13, align 8, !dbg !390
  %29898 = fsub double %29897, 0x400921FB54442D18, !dbg !392
  %29899 = call double @llvm.fabs.f64(double %29898), !dbg !393
  %29900 = fcmp ole double %29899, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29900, label %14330, label %29901, !dbg !395

29901:                                            ; preds = %29824
  %29902 = load double, ptr %13, align 8, !dbg !396
  %29903 = fadd double %29902, 0x400921FB54442D18, !dbg !397
  %29904 = call double @llvm.fabs.f64(double %29903), !dbg !398
  %29905 = fcmp ole double %29904, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29905, label %14330, label %29906, !dbg !400

29906:                                            ; preds = %29901
  br label %29907, !dbg !403

29907:                                            ; preds = %29906
  %29908 = load i32, ptr %10, align 4, !dbg !404
  %29909 = add nsw i32 %29908, 1, !dbg !404
  store i32 %29909, ptr %10, align 4, !dbg !404
  %29910 = load i32, ptr %10, align 4, !dbg !364
  %29911 = load i32, ptr %8, align 4, !dbg !366
  %29912 = icmp slt i32 %29910, %29911, !dbg !367
  br i1 %29912, label %29913, label %48422, !dbg !368

29913:                                            ; preds = %29907
  %29914 = load i32, ptr %10, align 4, !dbg !369
  %29915 = sext i32 %29914 to i64, !dbg !371
  %29916 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29915, !dbg !371
  %29917 = load double, ptr %6, align 8, !dbg !372
  %29918 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %29919 = load double, ptr %29918, align 8, !dbg !372
  %29920 = load double, ptr %29916, align 16, !dbg !372
  %29921 = getelementptr inbounds { double, double }, ptr %29916, i32 0, i32 1, !dbg !372
  %29922 = load double, ptr %29921, align 8, !dbg !372
  %29923 = call { double, double } @make_vec(double %29917, double %29919, double %29920, double %29922), !dbg !372
  %29924 = extractvalue { double, double } %29923, 0, !dbg !372
  store double %29924, ptr %16, align 8, !dbg !372
  %29925 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %29926 = extractvalue { double, double } %29923, 1, !dbg !372
  store double %29926, ptr %29925, align 8, !dbg !372
  %29927 = load i32, ptr %10, align 4, !dbg !373
  %29928 = add nsw i32 %29927, 1, !dbg !374
  %29929 = sext i32 %29928 to i64, !dbg !375
  %29930 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29929, !dbg !375
  %29931 = load double, ptr %6, align 8, !dbg !376
  %29932 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %29933 = load double, ptr %29932, align 8, !dbg !376
  %29934 = load double, ptr %29930, align 16, !dbg !376
  %29935 = getelementptr inbounds { double, double }, ptr %29930, i32 0, i32 1, !dbg !376
  %29936 = load double, ptr %29935, align 8, !dbg !376
  %29937 = call { double, double } @make_vec(double %29931, double %29933, double %29934, double %29936), !dbg !376
  %29938 = extractvalue { double, double } %29937, 0, !dbg !376
  store double %29938, ptr %17, align 8, !dbg !376
  %29939 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %29940 = extractvalue { double, double } %29937, 1, !dbg !376
  store double %29940, ptr %29939, align 8, !dbg !376
  %29941 = load double, ptr %16, align 8, !dbg !377
  %29942 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %29943 = load double, ptr %29942, align 8, !dbg !377
  %29944 = load double, ptr %17, align 8, !dbg !377
  %29945 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %29946 = load double, ptr %29945, align 8, !dbg !377
  %29947 = call double @cross(double %29941, double %29943, double %29944, double %29946), !dbg !377
  %29948 = load i32, ptr %10, align 4, !dbg !378
  %29949 = sext i32 %29948 to i64, !dbg !379
  %29950 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29949, !dbg !379
  %29951 = load double, ptr %6, align 8, !dbg !380
  %29952 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %29953 = load double, ptr %29952, align 8, !dbg !380
  %29954 = load double, ptr %29950, align 16, !dbg !380
  %29955 = getelementptr inbounds { double, double }, ptr %29950, i32 0, i32 1, !dbg !380
  %29956 = load double, ptr %29955, align 8, !dbg !380
  %29957 = call { double, double } @make_vec(double %29951, double %29953, double %29954, double %29956), !dbg !380
  %29958 = extractvalue { double, double } %29957, 0, !dbg !380
  store double %29958, ptr %18, align 8, !dbg !380
  %29959 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %29960 = extractvalue { double, double } %29957, 1, !dbg !380
  store double %29960, ptr %29959, align 8, !dbg !380
  %29961 = load i32, ptr %10, align 4, !dbg !381
  %29962 = add nsw i32 %29961, 1, !dbg !382
  %29963 = sext i32 %29962 to i64, !dbg !383
  %29964 = getelementptr inbounds %struct.POINT, ptr %26, i64 %29963, !dbg !383
  %29965 = load double, ptr %6, align 8, !dbg !384
  %29966 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %29967 = load double, ptr %29966, align 8, !dbg !384
  %29968 = load double, ptr %29964, align 16, !dbg !384
  %29969 = getelementptr inbounds { double, double }, ptr %29964, i32 0, i32 1, !dbg !384
  %29970 = load double, ptr %29969, align 8, !dbg !384
  %29971 = call { double, double } @make_vec(double %29965, double %29967, double %29968, double %29970), !dbg !384
  %29972 = extractvalue { double, double } %29971, 0, !dbg !384
  store double %29972, ptr %19, align 8, !dbg !384
  %29973 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %29974 = extractvalue { double, double } %29971, 1, !dbg !384
  store double %29974, ptr %29973, align 8, !dbg !384
  %29975 = load double, ptr %18, align 8, !dbg !385
  %29976 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %29977 = load double, ptr %29976, align 8, !dbg !385
  %29978 = load double, ptr %19, align 8, !dbg !385
  %29979 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %29980 = load double, ptr %29979, align 8, !dbg !385
  %29981 = call double @dot(double %29975, double %29977, double %29978, double %29980), !dbg !385
  %29982 = call double @atan2(double noundef %29947, double noundef %29981) #6, !dbg !386
  store double %29982, ptr %13, align 8, !dbg !387
  %29983 = load double, ptr %13, align 8, !dbg !388
  %29984 = load double, ptr %14, align 8, !dbg !389
  %29985 = fadd double %29984, %29983, !dbg !389
  store double %29985, ptr %14, align 8, !dbg !389
  %29986 = load double, ptr %13, align 8, !dbg !390
  %29987 = fsub double %29986, 0x400921FB54442D18, !dbg !392
  %29988 = call double @llvm.fabs.f64(double %29987), !dbg !393
  %29989 = fcmp ole double %29988, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %29989, label %14330, label %29990, !dbg !395

29990:                                            ; preds = %29913
  %29991 = load double, ptr %13, align 8, !dbg !396
  %29992 = fadd double %29991, 0x400921FB54442D18, !dbg !397
  %29993 = call double @llvm.fabs.f64(double %29992), !dbg !398
  %29994 = fcmp ole double %29993, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %29994, label %14330, label %29995, !dbg !400

29995:                                            ; preds = %29990
  br label %29996, !dbg !403

29996:                                            ; preds = %29995
  %29997 = load i32, ptr %10, align 4, !dbg !404
  %29998 = add nsw i32 %29997, 1, !dbg !404
  store i32 %29998, ptr %10, align 4, !dbg !404
  %29999 = load i32, ptr %10, align 4, !dbg !364
  %30000 = load i32, ptr %8, align 4, !dbg !366
  %30001 = icmp slt i32 %29999, %30000, !dbg !367
  br i1 %30001, label %30002, label %48422, !dbg !368

30002:                                            ; preds = %29996
  %30003 = load i32, ptr %10, align 4, !dbg !369
  %30004 = sext i32 %30003 to i64, !dbg !371
  %30005 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30004, !dbg !371
  %30006 = load double, ptr %6, align 8, !dbg !372
  %30007 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30008 = load double, ptr %30007, align 8, !dbg !372
  %30009 = load double, ptr %30005, align 16, !dbg !372
  %30010 = getelementptr inbounds { double, double }, ptr %30005, i32 0, i32 1, !dbg !372
  %30011 = load double, ptr %30010, align 8, !dbg !372
  %30012 = call { double, double } @make_vec(double %30006, double %30008, double %30009, double %30011), !dbg !372
  %30013 = extractvalue { double, double } %30012, 0, !dbg !372
  store double %30013, ptr %16, align 8, !dbg !372
  %30014 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30015 = extractvalue { double, double } %30012, 1, !dbg !372
  store double %30015, ptr %30014, align 8, !dbg !372
  %30016 = load i32, ptr %10, align 4, !dbg !373
  %30017 = add nsw i32 %30016, 1, !dbg !374
  %30018 = sext i32 %30017 to i64, !dbg !375
  %30019 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30018, !dbg !375
  %30020 = load double, ptr %6, align 8, !dbg !376
  %30021 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30022 = load double, ptr %30021, align 8, !dbg !376
  %30023 = load double, ptr %30019, align 16, !dbg !376
  %30024 = getelementptr inbounds { double, double }, ptr %30019, i32 0, i32 1, !dbg !376
  %30025 = load double, ptr %30024, align 8, !dbg !376
  %30026 = call { double, double } @make_vec(double %30020, double %30022, double %30023, double %30025), !dbg !376
  %30027 = extractvalue { double, double } %30026, 0, !dbg !376
  store double %30027, ptr %17, align 8, !dbg !376
  %30028 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30029 = extractvalue { double, double } %30026, 1, !dbg !376
  store double %30029, ptr %30028, align 8, !dbg !376
  %30030 = load double, ptr %16, align 8, !dbg !377
  %30031 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30032 = load double, ptr %30031, align 8, !dbg !377
  %30033 = load double, ptr %17, align 8, !dbg !377
  %30034 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30035 = load double, ptr %30034, align 8, !dbg !377
  %30036 = call double @cross(double %30030, double %30032, double %30033, double %30035), !dbg !377
  %30037 = load i32, ptr %10, align 4, !dbg !378
  %30038 = sext i32 %30037 to i64, !dbg !379
  %30039 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30038, !dbg !379
  %30040 = load double, ptr %6, align 8, !dbg !380
  %30041 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30042 = load double, ptr %30041, align 8, !dbg !380
  %30043 = load double, ptr %30039, align 16, !dbg !380
  %30044 = getelementptr inbounds { double, double }, ptr %30039, i32 0, i32 1, !dbg !380
  %30045 = load double, ptr %30044, align 8, !dbg !380
  %30046 = call { double, double } @make_vec(double %30040, double %30042, double %30043, double %30045), !dbg !380
  %30047 = extractvalue { double, double } %30046, 0, !dbg !380
  store double %30047, ptr %18, align 8, !dbg !380
  %30048 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30049 = extractvalue { double, double } %30046, 1, !dbg !380
  store double %30049, ptr %30048, align 8, !dbg !380
  %30050 = load i32, ptr %10, align 4, !dbg !381
  %30051 = add nsw i32 %30050, 1, !dbg !382
  %30052 = sext i32 %30051 to i64, !dbg !383
  %30053 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30052, !dbg !383
  %30054 = load double, ptr %6, align 8, !dbg !384
  %30055 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30056 = load double, ptr %30055, align 8, !dbg !384
  %30057 = load double, ptr %30053, align 16, !dbg !384
  %30058 = getelementptr inbounds { double, double }, ptr %30053, i32 0, i32 1, !dbg !384
  %30059 = load double, ptr %30058, align 8, !dbg !384
  %30060 = call { double, double } @make_vec(double %30054, double %30056, double %30057, double %30059), !dbg !384
  %30061 = extractvalue { double, double } %30060, 0, !dbg !384
  store double %30061, ptr %19, align 8, !dbg !384
  %30062 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30063 = extractvalue { double, double } %30060, 1, !dbg !384
  store double %30063, ptr %30062, align 8, !dbg !384
  %30064 = load double, ptr %18, align 8, !dbg !385
  %30065 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30066 = load double, ptr %30065, align 8, !dbg !385
  %30067 = load double, ptr %19, align 8, !dbg !385
  %30068 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30069 = load double, ptr %30068, align 8, !dbg !385
  %30070 = call double @dot(double %30064, double %30066, double %30067, double %30069), !dbg !385
  %30071 = call double @atan2(double noundef %30036, double noundef %30070) #6, !dbg !386
  store double %30071, ptr %13, align 8, !dbg !387
  %30072 = load double, ptr %13, align 8, !dbg !388
  %30073 = load double, ptr %14, align 8, !dbg !389
  %30074 = fadd double %30073, %30072, !dbg !389
  store double %30074, ptr %14, align 8, !dbg !389
  %30075 = load double, ptr %13, align 8, !dbg !390
  %30076 = fsub double %30075, 0x400921FB54442D18, !dbg !392
  %30077 = call double @llvm.fabs.f64(double %30076), !dbg !393
  %30078 = fcmp ole double %30077, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30078, label %14330, label %30079, !dbg !395

30079:                                            ; preds = %30002
  %30080 = load double, ptr %13, align 8, !dbg !396
  %30081 = fadd double %30080, 0x400921FB54442D18, !dbg !397
  %30082 = call double @llvm.fabs.f64(double %30081), !dbg !398
  %30083 = fcmp ole double %30082, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30083, label %14330, label %30084, !dbg !400

30084:                                            ; preds = %30079
  br label %30085, !dbg !403

30085:                                            ; preds = %30084
  %30086 = load i32, ptr %10, align 4, !dbg !404
  %30087 = add nsw i32 %30086, 1, !dbg !404
  store i32 %30087, ptr %10, align 4, !dbg !404
  %30088 = load i32, ptr %10, align 4, !dbg !364
  %30089 = load i32, ptr %8, align 4, !dbg !366
  %30090 = icmp slt i32 %30088, %30089, !dbg !367
  br i1 %30090, label %30091, label %48422, !dbg !368

30091:                                            ; preds = %30085
  %30092 = load i32, ptr %10, align 4, !dbg !369
  %30093 = sext i32 %30092 to i64, !dbg !371
  %30094 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30093, !dbg !371
  %30095 = load double, ptr %6, align 8, !dbg !372
  %30096 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30097 = load double, ptr %30096, align 8, !dbg !372
  %30098 = load double, ptr %30094, align 16, !dbg !372
  %30099 = getelementptr inbounds { double, double }, ptr %30094, i32 0, i32 1, !dbg !372
  %30100 = load double, ptr %30099, align 8, !dbg !372
  %30101 = call { double, double } @make_vec(double %30095, double %30097, double %30098, double %30100), !dbg !372
  %30102 = extractvalue { double, double } %30101, 0, !dbg !372
  store double %30102, ptr %16, align 8, !dbg !372
  %30103 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30104 = extractvalue { double, double } %30101, 1, !dbg !372
  store double %30104, ptr %30103, align 8, !dbg !372
  %30105 = load i32, ptr %10, align 4, !dbg !373
  %30106 = add nsw i32 %30105, 1, !dbg !374
  %30107 = sext i32 %30106 to i64, !dbg !375
  %30108 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30107, !dbg !375
  %30109 = load double, ptr %6, align 8, !dbg !376
  %30110 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30111 = load double, ptr %30110, align 8, !dbg !376
  %30112 = load double, ptr %30108, align 16, !dbg !376
  %30113 = getelementptr inbounds { double, double }, ptr %30108, i32 0, i32 1, !dbg !376
  %30114 = load double, ptr %30113, align 8, !dbg !376
  %30115 = call { double, double } @make_vec(double %30109, double %30111, double %30112, double %30114), !dbg !376
  %30116 = extractvalue { double, double } %30115, 0, !dbg !376
  store double %30116, ptr %17, align 8, !dbg !376
  %30117 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30118 = extractvalue { double, double } %30115, 1, !dbg !376
  store double %30118, ptr %30117, align 8, !dbg !376
  %30119 = load double, ptr %16, align 8, !dbg !377
  %30120 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30121 = load double, ptr %30120, align 8, !dbg !377
  %30122 = load double, ptr %17, align 8, !dbg !377
  %30123 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30124 = load double, ptr %30123, align 8, !dbg !377
  %30125 = call double @cross(double %30119, double %30121, double %30122, double %30124), !dbg !377
  %30126 = load i32, ptr %10, align 4, !dbg !378
  %30127 = sext i32 %30126 to i64, !dbg !379
  %30128 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30127, !dbg !379
  %30129 = load double, ptr %6, align 8, !dbg !380
  %30130 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30131 = load double, ptr %30130, align 8, !dbg !380
  %30132 = load double, ptr %30128, align 16, !dbg !380
  %30133 = getelementptr inbounds { double, double }, ptr %30128, i32 0, i32 1, !dbg !380
  %30134 = load double, ptr %30133, align 8, !dbg !380
  %30135 = call { double, double } @make_vec(double %30129, double %30131, double %30132, double %30134), !dbg !380
  %30136 = extractvalue { double, double } %30135, 0, !dbg !380
  store double %30136, ptr %18, align 8, !dbg !380
  %30137 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30138 = extractvalue { double, double } %30135, 1, !dbg !380
  store double %30138, ptr %30137, align 8, !dbg !380
  %30139 = load i32, ptr %10, align 4, !dbg !381
  %30140 = add nsw i32 %30139, 1, !dbg !382
  %30141 = sext i32 %30140 to i64, !dbg !383
  %30142 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30141, !dbg !383
  %30143 = load double, ptr %6, align 8, !dbg !384
  %30144 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30145 = load double, ptr %30144, align 8, !dbg !384
  %30146 = load double, ptr %30142, align 16, !dbg !384
  %30147 = getelementptr inbounds { double, double }, ptr %30142, i32 0, i32 1, !dbg !384
  %30148 = load double, ptr %30147, align 8, !dbg !384
  %30149 = call { double, double } @make_vec(double %30143, double %30145, double %30146, double %30148), !dbg !384
  %30150 = extractvalue { double, double } %30149, 0, !dbg !384
  store double %30150, ptr %19, align 8, !dbg !384
  %30151 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30152 = extractvalue { double, double } %30149, 1, !dbg !384
  store double %30152, ptr %30151, align 8, !dbg !384
  %30153 = load double, ptr %18, align 8, !dbg !385
  %30154 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30155 = load double, ptr %30154, align 8, !dbg !385
  %30156 = load double, ptr %19, align 8, !dbg !385
  %30157 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30158 = load double, ptr %30157, align 8, !dbg !385
  %30159 = call double @dot(double %30153, double %30155, double %30156, double %30158), !dbg !385
  %30160 = call double @atan2(double noundef %30125, double noundef %30159) #6, !dbg !386
  store double %30160, ptr %13, align 8, !dbg !387
  %30161 = load double, ptr %13, align 8, !dbg !388
  %30162 = load double, ptr %14, align 8, !dbg !389
  %30163 = fadd double %30162, %30161, !dbg !389
  store double %30163, ptr %14, align 8, !dbg !389
  %30164 = load double, ptr %13, align 8, !dbg !390
  %30165 = fsub double %30164, 0x400921FB54442D18, !dbg !392
  %30166 = call double @llvm.fabs.f64(double %30165), !dbg !393
  %30167 = fcmp ole double %30166, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30167, label %14330, label %30168, !dbg !395

30168:                                            ; preds = %30091
  %30169 = load double, ptr %13, align 8, !dbg !396
  %30170 = fadd double %30169, 0x400921FB54442D18, !dbg !397
  %30171 = call double @llvm.fabs.f64(double %30170), !dbg !398
  %30172 = fcmp ole double %30171, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30172, label %14330, label %30173, !dbg !400

30173:                                            ; preds = %30168
  br label %30174, !dbg !403

30174:                                            ; preds = %30173
  %30175 = load i32, ptr %10, align 4, !dbg !404
  %30176 = add nsw i32 %30175, 1, !dbg !404
  store i32 %30176, ptr %10, align 4, !dbg !404
  %30177 = load i32, ptr %10, align 4, !dbg !364
  %30178 = load i32, ptr %8, align 4, !dbg !366
  %30179 = icmp slt i32 %30177, %30178, !dbg !367
  br i1 %30179, label %30180, label %48422, !dbg !368

30180:                                            ; preds = %30174
  %30181 = load i32, ptr %10, align 4, !dbg !369
  %30182 = sext i32 %30181 to i64, !dbg !371
  %30183 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30182, !dbg !371
  %30184 = load double, ptr %6, align 8, !dbg !372
  %30185 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30186 = load double, ptr %30185, align 8, !dbg !372
  %30187 = load double, ptr %30183, align 16, !dbg !372
  %30188 = getelementptr inbounds { double, double }, ptr %30183, i32 0, i32 1, !dbg !372
  %30189 = load double, ptr %30188, align 8, !dbg !372
  %30190 = call { double, double } @make_vec(double %30184, double %30186, double %30187, double %30189), !dbg !372
  %30191 = extractvalue { double, double } %30190, 0, !dbg !372
  store double %30191, ptr %16, align 8, !dbg !372
  %30192 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30193 = extractvalue { double, double } %30190, 1, !dbg !372
  store double %30193, ptr %30192, align 8, !dbg !372
  %30194 = load i32, ptr %10, align 4, !dbg !373
  %30195 = add nsw i32 %30194, 1, !dbg !374
  %30196 = sext i32 %30195 to i64, !dbg !375
  %30197 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30196, !dbg !375
  %30198 = load double, ptr %6, align 8, !dbg !376
  %30199 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30200 = load double, ptr %30199, align 8, !dbg !376
  %30201 = load double, ptr %30197, align 16, !dbg !376
  %30202 = getelementptr inbounds { double, double }, ptr %30197, i32 0, i32 1, !dbg !376
  %30203 = load double, ptr %30202, align 8, !dbg !376
  %30204 = call { double, double } @make_vec(double %30198, double %30200, double %30201, double %30203), !dbg !376
  %30205 = extractvalue { double, double } %30204, 0, !dbg !376
  store double %30205, ptr %17, align 8, !dbg !376
  %30206 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30207 = extractvalue { double, double } %30204, 1, !dbg !376
  store double %30207, ptr %30206, align 8, !dbg !376
  %30208 = load double, ptr %16, align 8, !dbg !377
  %30209 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30210 = load double, ptr %30209, align 8, !dbg !377
  %30211 = load double, ptr %17, align 8, !dbg !377
  %30212 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30213 = load double, ptr %30212, align 8, !dbg !377
  %30214 = call double @cross(double %30208, double %30210, double %30211, double %30213), !dbg !377
  %30215 = load i32, ptr %10, align 4, !dbg !378
  %30216 = sext i32 %30215 to i64, !dbg !379
  %30217 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30216, !dbg !379
  %30218 = load double, ptr %6, align 8, !dbg !380
  %30219 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30220 = load double, ptr %30219, align 8, !dbg !380
  %30221 = load double, ptr %30217, align 16, !dbg !380
  %30222 = getelementptr inbounds { double, double }, ptr %30217, i32 0, i32 1, !dbg !380
  %30223 = load double, ptr %30222, align 8, !dbg !380
  %30224 = call { double, double } @make_vec(double %30218, double %30220, double %30221, double %30223), !dbg !380
  %30225 = extractvalue { double, double } %30224, 0, !dbg !380
  store double %30225, ptr %18, align 8, !dbg !380
  %30226 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30227 = extractvalue { double, double } %30224, 1, !dbg !380
  store double %30227, ptr %30226, align 8, !dbg !380
  %30228 = load i32, ptr %10, align 4, !dbg !381
  %30229 = add nsw i32 %30228, 1, !dbg !382
  %30230 = sext i32 %30229 to i64, !dbg !383
  %30231 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30230, !dbg !383
  %30232 = load double, ptr %6, align 8, !dbg !384
  %30233 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30234 = load double, ptr %30233, align 8, !dbg !384
  %30235 = load double, ptr %30231, align 16, !dbg !384
  %30236 = getelementptr inbounds { double, double }, ptr %30231, i32 0, i32 1, !dbg !384
  %30237 = load double, ptr %30236, align 8, !dbg !384
  %30238 = call { double, double } @make_vec(double %30232, double %30234, double %30235, double %30237), !dbg !384
  %30239 = extractvalue { double, double } %30238, 0, !dbg !384
  store double %30239, ptr %19, align 8, !dbg !384
  %30240 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30241 = extractvalue { double, double } %30238, 1, !dbg !384
  store double %30241, ptr %30240, align 8, !dbg !384
  %30242 = load double, ptr %18, align 8, !dbg !385
  %30243 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30244 = load double, ptr %30243, align 8, !dbg !385
  %30245 = load double, ptr %19, align 8, !dbg !385
  %30246 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30247 = load double, ptr %30246, align 8, !dbg !385
  %30248 = call double @dot(double %30242, double %30244, double %30245, double %30247), !dbg !385
  %30249 = call double @atan2(double noundef %30214, double noundef %30248) #6, !dbg !386
  store double %30249, ptr %13, align 8, !dbg !387
  %30250 = load double, ptr %13, align 8, !dbg !388
  %30251 = load double, ptr %14, align 8, !dbg !389
  %30252 = fadd double %30251, %30250, !dbg !389
  store double %30252, ptr %14, align 8, !dbg !389
  %30253 = load double, ptr %13, align 8, !dbg !390
  %30254 = fsub double %30253, 0x400921FB54442D18, !dbg !392
  %30255 = call double @llvm.fabs.f64(double %30254), !dbg !393
  %30256 = fcmp ole double %30255, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30256, label %14330, label %30257, !dbg !395

30257:                                            ; preds = %30180
  %30258 = load double, ptr %13, align 8, !dbg !396
  %30259 = fadd double %30258, 0x400921FB54442D18, !dbg !397
  %30260 = call double @llvm.fabs.f64(double %30259), !dbg !398
  %30261 = fcmp ole double %30260, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30261, label %14330, label %30262, !dbg !400

30262:                                            ; preds = %30257
  br label %30263, !dbg !403

30263:                                            ; preds = %30262
  %30264 = load i32, ptr %10, align 4, !dbg !404
  %30265 = add nsw i32 %30264, 1, !dbg !404
  store i32 %30265, ptr %10, align 4, !dbg !404
  %30266 = load i32, ptr %10, align 4, !dbg !364
  %30267 = load i32, ptr %8, align 4, !dbg !366
  %30268 = icmp slt i32 %30266, %30267, !dbg !367
  br i1 %30268, label %30269, label %48422, !dbg !368

30269:                                            ; preds = %30263
  %30270 = load i32, ptr %10, align 4, !dbg !369
  %30271 = sext i32 %30270 to i64, !dbg !371
  %30272 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30271, !dbg !371
  %30273 = load double, ptr %6, align 8, !dbg !372
  %30274 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30275 = load double, ptr %30274, align 8, !dbg !372
  %30276 = load double, ptr %30272, align 16, !dbg !372
  %30277 = getelementptr inbounds { double, double }, ptr %30272, i32 0, i32 1, !dbg !372
  %30278 = load double, ptr %30277, align 8, !dbg !372
  %30279 = call { double, double } @make_vec(double %30273, double %30275, double %30276, double %30278), !dbg !372
  %30280 = extractvalue { double, double } %30279, 0, !dbg !372
  store double %30280, ptr %16, align 8, !dbg !372
  %30281 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30282 = extractvalue { double, double } %30279, 1, !dbg !372
  store double %30282, ptr %30281, align 8, !dbg !372
  %30283 = load i32, ptr %10, align 4, !dbg !373
  %30284 = add nsw i32 %30283, 1, !dbg !374
  %30285 = sext i32 %30284 to i64, !dbg !375
  %30286 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30285, !dbg !375
  %30287 = load double, ptr %6, align 8, !dbg !376
  %30288 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30289 = load double, ptr %30288, align 8, !dbg !376
  %30290 = load double, ptr %30286, align 16, !dbg !376
  %30291 = getelementptr inbounds { double, double }, ptr %30286, i32 0, i32 1, !dbg !376
  %30292 = load double, ptr %30291, align 8, !dbg !376
  %30293 = call { double, double } @make_vec(double %30287, double %30289, double %30290, double %30292), !dbg !376
  %30294 = extractvalue { double, double } %30293, 0, !dbg !376
  store double %30294, ptr %17, align 8, !dbg !376
  %30295 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30296 = extractvalue { double, double } %30293, 1, !dbg !376
  store double %30296, ptr %30295, align 8, !dbg !376
  %30297 = load double, ptr %16, align 8, !dbg !377
  %30298 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30299 = load double, ptr %30298, align 8, !dbg !377
  %30300 = load double, ptr %17, align 8, !dbg !377
  %30301 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30302 = load double, ptr %30301, align 8, !dbg !377
  %30303 = call double @cross(double %30297, double %30299, double %30300, double %30302), !dbg !377
  %30304 = load i32, ptr %10, align 4, !dbg !378
  %30305 = sext i32 %30304 to i64, !dbg !379
  %30306 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30305, !dbg !379
  %30307 = load double, ptr %6, align 8, !dbg !380
  %30308 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30309 = load double, ptr %30308, align 8, !dbg !380
  %30310 = load double, ptr %30306, align 16, !dbg !380
  %30311 = getelementptr inbounds { double, double }, ptr %30306, i32 0, i32 1, !dbg !380
  %30312 = load double, ptr %30311, align 8, !dbg !380
  %30313 = call { double, double } @make_vec(double %30307, double %30309, double %30310, double %30312), !dbg !380
  %30314 = extractvalue { double, double } %30313, 0, !dbg !380
  store double %30314, ptr %18, align 8, !dbg !380
  %30315 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30316 = extractvalue { double, double } %30313, 1, !dbg !380
  store double %30316, ptr %30315, align 8, !dbg !380
  %30317 = load i32, ptr %10, align 4, !dbg !381
  %30318 = add nsw i32 %30317, 1, !dbg !382
  %30319 = sext i32 %30318 to i64, !dbg !383
  %30320 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30319, !dbg !383
  %30321 = load double, ptr %6, align 8, !dbg !384
  %30322 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30323 = load double, ptr %30322, align 8, !dbg !384
  %30324 = load double, ptr %30320, align 16, !dbg !384
  %30325 = getelementptr inbounds { double, double }, ptr %30320, i32 0, i32 1, !dbg !384
  %30326 = load double, ptr %30325, align 8, !dbg !384
  %30327 = call { double, double } @make_vec(double %30321, double %30323, double %30324, double %30326), !dbg !384
  %30328 = extractvalue { double, double } %30327, 0, !dbg !384
  store double %30328, ptr %19, align 8, !dbg !384
  %30329 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30330 = extractvalue { double, double } %30327, 1, !dbg !384
  store double %30330, ptr %30329, align 8, !dbg !384
  %30331 = load double, ptr %18, align 8, !dbg !385
  %30332 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30333 = load double, ptr %30332, align 8, !dbg !385
  %30334 = load double, ptr %19, align 8, !dbg !385
  %30335 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30336 = load double, ptr %30335, align 8, !dbg !385
  %30337 = call double @dot(double %30331, double %30333, double %30334, double %30336), !dbg !385
  %30338 = call double @atan2(double noundef %30303, double noundef %30337) #6, !dbg !386
  store double %30338, ptr %13, align 8, !dbg !387
  %30339 = load double, ptr %13, align 8, !dbg !388
  %30340 = load double, ptr %14, align 8, !dbg !389
  %30341 = fadd double %30340, %30339, !dbg !389
  store double %30341, ptr %14, align 8, !dbg !389
  %30342 = load double, ptr %13, align 8, !dbg !390
  %30343 = fsub double %30342, 0x400921FB54442D18, !dbg !392
  %30344 = call double @llvm.fabs.f64(double %30343), !dbg !393
  %30345 = fcmp ole double %30344, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30345, label %14330, label %30346, !dbg !395

30346:                                            ; preds = %30269
  %30347 = load double, ptr %13, align 8, !dbg !396
  %30348 = fadd double %30347, 0x400921FB54442D18, !dbg !397
  %30349 = call double @llvm.fabs.f64(double %30348), !dbg !398
  %30350 = fcmp ole double %30349, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30350, label %14330, label %30351, !dbg !400

30351:                                            ; preds = %30346
  br label %30352, !dbg !403

30352:                                            ; preds = %30351
  %30353 = load i32, ptr %10, align 4, !dbg !404
  %30354 = add nsw i32 %30353, 1, !dbg !404
  store i32 %30354, ptr %10, align 4, !dbg !404
  %30355 = load i32, ptr %10, align 4, !dbg !364
  %30356 = load i32, ptr %8, align 4, !dbg !366
  %30357 = icmp slt i32 %30355, %30356, !dbg !367
  br i1 %30357, label %30358, label %48422, !dbg !368

30358:                                            ; preds = %30352
  %30359 = load i32, ptr %10, align 4, !dbg !369
  %30360 = sext i32 %30359 to i64, !dbg !371
  %30361 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30360, !dbg !371
  %30362 = load double, ptr %6, align 8, !dbg !372
  %30363 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30364 = load double, ptr %30363, align 8, !dbg !372
  %30365 = load double, ptr %30361, align 16, !dbg !372
  %30366 = getelementptr inbounds { double, double }, ptr %30361, i32 0, i32 1, !dbg !372
  %30367 = load double, ptr %30366, align 8, !dbg !372
  %30368 = call { double, double } @make_vec(double %30362, double %30364, double %30365, double %30367), !dbg !372
  %30369 = extractvalue { double, double } %30368, 0, !dbg !372
  store double %30369, ptr %16, align 8, !dbg !372
  %30370 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30371 = extractvalue { double, double } %30368, 1, !dbg !372
  store double %30371, ptr %30370, align 8, !dbg !372
  %30372 = load i32, ptr %10, align 4, !dbg !373
  %30373 = add nsw i32 %30372, 1, !dbg !374
  %30374 = sext i32 %30373 to i64, !dbg !375
  %30375 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30374, !dbg !375
  %30376 = load double, ptr %6, align 8, !dbg !376
  %30377 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30378 = load double, ptr %30377, align 8, !dbg !376
  %30379 = load double, ptr %30375, align 16, !dbg !376
  %30380 = getelementptr inbounds { double, double }, ptr %30375, i32 0, i32 1, !dbg !376
  %30381 = load double, ptr %30380, align 8, !dbg !376
  %30382 = call { double, double } @make_vec(double %30376, double %30378, double %30379, double %30381), !dbg !376
  %30383 = extractvalue { double, double } %30382, 0, !dbg !376
  store double %30383, ptr %17, align 8, !dbg !376
  %30384 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30385 = extractvalue { double, double } %30382, 1, !dbg !376
  store double %30385, ptr %30384, align 8, !dbg !376
  %30386 = load double, ptr %16, align 8, !dbg !377
  %30387 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30388 = load double, ptr %30387, align 8, !dbg !377
  %30389 = load double, ptr %17, align 8, !dbg !377
  %30390 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30391 = load double, ptr %30390, align 8, !dbg !377
  %30392 = call double @cross(double %30386, double %30388, double %30389, double %30391), !dbg !377
  %30393 = load i32, ptr %10, align 4, !dbg !378
  %30394 = sext i32 %30393 to i64, !dbg !379
  %30395 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30394, !dbg !379
  %30396 = load double, ptr %6, align 8, !dbg !380
  %30397 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30398 = load double, ptr %30397, align 8, !dbg !380
  %30399 = load double, ptr %30395, align 16, !dbg !380
  %30400 = getelementptr inbounds { double, double }, ptr %30395, i32 0, i32 1, !dbg !380
  %30401 = load double, ptr %30400, align 8, !dbg !380
  %30402 = call { double, double } @make_vec(double %30396, double %30398, double %30399, double %30401), !dbg !380
  %30403 = extractvalue { double, double } %30402, 0, !dbg !380
  store double %30403, ptr %18, align 8, !dbg !380
  %30404 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30405 = extractvalue { double, double } %30402, 1, !dbg !380
  store double %30405, ptr %30404, align 8, !dbg !380
  %30406 = load i32, ptr %10, align 4, !dbg !381
  %30407 = add nsw i32 %30406, 1, !dbg !382
  %30408 = sext i32 %30407 to i64, !dbg !383
  %30409 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30408, !dbg !383
  %30410 = load double, ptr %6, align 8, !dbg !384
  %30411 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30412 = load double, ptr %30411, align 8, !dbg !384
  %30413 = load double, ptr %30409, align 16, !dbg !384
  %30414 = getelementptr inbounds { double, double }, ptr %30409, i32 0, i32 1, !dbg !384
  %30415 = load double, ptr %30414, align 8, !dbg !384
  %30416 = call { double, double } @make_vec(double %30410, double %30412, double %30413, double %30415), !dbg !384
  %30417 = extractvalue { double, double } %30416, 0, !dbg !384
  store double %30417, ptr %19, align 8, !dbg !384
  %30418 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30419 = extractvalue { double, double } %30416, 1, !dbg !384
  store double %30419, ptr %30418, align 8, !dbg !384
  %30420 = load double, ptr %18, align 8, !dbg !385
  %30421 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30422 = load double, ptr %30421, align 8, !dbg !385
  %30423 = load double, ptr %19, align 8, !dbg !385
  %30424 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30425 = load double, ptr %30424, align 8, !dbg !385
  %30426 = call double @dot(double %30420, double %30422, double %30423, double %30425), !dbg !385
  %30427 = call double @atan2(double noundef %30392, double noundef %30426) #6, !dbg !386
  store double %30427, ptr %13, align 8, !dbg !387
  %30428 = load double, ptr %13, align 8, !dbg !388
  %30429 = load double, ptr %14, align 8, !dbg !389
  %30430 = fadd double %30429, %30428, !dbg !389
  store double %30430, ptr %14, align 8, !dbg !389
  %30431 = load double, ptr %13, align 8, !dbg !390
  %30432 = fsub double %30431, 0x400921FB54442D18, !dbg !392
  %30433 = call double @llvm.fabs.f64(double %30432), !dbg !393
  %30434 = fcmp ole double %30433, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30434, label %14330, label %30435, !dbg !395

30435:                                            ; preds = %30358
  %30436 = load double, ptr %13, align 8, !dbg !396
  %30437 = fadd double %30436, 0x400921FB54442D18, !dbg !397
  %30438 = call double @llvm.fabs.f64(double %30437), !dbg !398
  %30439 = fcmp ole double %30438, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30439, label %14330, label %30440, !dbg !400

30440:                                            ; preds = %30435
  br label %30441, !dbg !403

30441:                                            ; preds = %30440
  %30442 = load i32, ptr %10, align 4, !dbg !404
  %30443 = add nsw i32 %30442, 1, !dbg !404
  store i32 %30443, ptr %10, align 4, !dbg !404
  %30444 = load i32, ptr %10, align 4, !dbg !364
  %30445 = load i32, ptr %8, align 4, !dbg !366
  %30446 = icmp slt i32 %30444, %30445, !dbg !367
  br i1 %30446, label %30447, label %48422, !dbg !368

30447:                                            ; preds = %30441
  %30448 = load i32, ptr %10, align 4, !dbg !369
  %30449 = sext i32 %30448 to i64, !dbg !371
  %30450 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30449, !dbg !371
  %30451 = load double, ptr %6, align 8, !dbg !372
  %30452 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30453 = load double, ptr %30452, align 8, !dbg !372
  %30454 = load double, ptr %30450, align 16, !dbg !372
  %30455 = getelementptr inbounds { double, double }, ptr %30450, i32 0, i32 1, !dbg !372
  %30456 = load double, ptr %30455, align 8, !dbg !372
  %30457 = call { double, double } @make_vec(double %30451, double %30453, double %30454, double %30456), !dbg !372
  %30458 = extractvalue { double, double } %30457, 0, !dbg !372
  store double %30458, ptr %16, align 8, !dbg !372
  %30459 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30460 = extractvalue { double, double } %30457, 1, !dbg !372
  store double %30460, ptr %30459, align 8, !dbg !372
  %30461 = load i32, ptr %10, align 4, !dbg !373
  %30462 = add nsw i32 %30461, 1, !dbg !374
  %30463 = sext i32 %30462 to i64, !dbg !375
  %30464 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30463, !dbg !375
  %30465 = load double, ptr %6, align 8, !dbg !376
  %30466 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30467 = load double, ptr %30466, align 8, !dbg !376
  %30468 = load double, ptr %30464, align 16, !dbg !376
  %30469 = getelementptr inbounds { double, double }, ptr %30464, i32 0, i32 1, !dbg !376
  %30470 = load double, ptr %30469, align 8, !dbg !376
  %30471 = call { double, double } @make_vec(double %30465, double %30467, double %30468, double %30470), !dbg !376
  %30472 = extractvalue { double, double } %30471, 0, !dbg !376
  store double %30472, ptr %17, align 8, !dbg !376
  %30473 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30474 = extractvalue { double, double } %30471, 1, !dbg !376
  store double %30474, ptr %30473, align 8, !dbg !376
  %30475 = load double, ptr %16, align 8, !dbg !377
  %30476 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30477 = load double, ptr %30476, align 8, !dbg !377
  %30478 = load double, ptr %17, align 8, !dbg !377
  %30479 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30480 = load double, ptr %30479, align 8, !dbg !377
  %30481 = call double @cross(double %30475, double %30477, double %30478, double %30480), !dbg !377
  %30482 = load i32, ptr %10, align 4, !dbg !378
  %30483 = sext i32 %30482 to i64, !dbg !379
  %30484 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30483, !dbg !379
  %30485 = load double, ptr %6, align 8, !dbg !380
  %30486 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30487 = load double, ptr %30486, align 8, !dbg !380
  %30488 = load double, ptr %30484, align 16, !dbg !380
  %30489 = getelementptr inbounds { double, double }, ptr %30484, i32 0, i32 1, !dbg !380
  %30490 = load double, ptr %30489, align 8, !dbg !380
  %30491 = call { double, double } @make_vec(double %30485, double %30487, double %30488, double %30490), !dbg !380
  %30492 = extractvalue { double, double } %30491, 0, !dbg !380
  store double %30492, ptr %18, align 8, !dbg !380
  %30493 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30494 = extractvalue { double, double } %30491, 1, !dbg !380
  store double %30494, ptr %30493, align 8, !dbg !380
  %30495 = load i32, ptr %10, align 4, !dbg !381
  %30496 = add nsw i32 %30495, 1, !dbg !382
  %30497 = sext i32 %30496 to i64, !dbg !383
  %30498 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30497, !dbg !383
  %30499 = load double, ptr %6, align 8, !dbg !384
  %30500 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30501 = load double, ptr %30500, align 8, !dbg !384
  %30502 = load double, ptr %30498, align 16, !dbg !384
  %30503 = getelementptr inbounds { double, double }, ptr %30498, i32 0, i32 1, !dbg !384
  %30504 = load double, ptr %30503, align 8, !dbg !384
  %30505 = call { double, double } @make_vec(double %30499, double %30501, double %30502, double %30504), !dbg !384
  %30506 = extractvalue { double, double } %30505, 0, !dbg !384
  store double %30506, ptr %19, align 8, !dbg !384
  %30507 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30508 = extractvalue { double, double } %30505, 1, !dbg !384
  store double %30508, ptr %30507, align 8, !dbg !384
  %30509 = load double, ptr %18, align 8, !dbg !385
  %30510 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30511 = load double, ptr %30510, align 8, !dbg !385
  %30512 = load double, ptr %19, align 8, !dbg !385
  %30513 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30514 = load double, ptr %30513, align 8, !dbg !385
  %30515 = call double @dot(double %30509, double %30511, double %30512, double %30514), !dbg !385
  %30516 = call double @atan2(double noundef %30481, double noundef %30515) #6, !dbg !386
  store double %30516, ptr %13, align 8, !dbg !387
  %30517 = load double, ptr %13, align 8, !dbg !388
  %30518 = load double, ptr %14, align 8, !dbg !389
  %30519 = fadd double %30518, %30517, !dbg !389
  store double %30519, ptr %14, align 8, !dbg !389
  %30520 = load double, ptr %13, align 8, !dbg !390
  %30521 = fsub double %30520, 0x400921FB54442D18, !dbg !392
  %30522 = call double @llvm.fabs.f64(double %30521), !dbg !393
  %30523 = fcmp ole double %30522, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30523, label %14330, label %30524, !dbg !395

30524:                                            ; preds = %30447
  %30525 = load double, ptr %13, align 8, !dbg !396
  %30526 = fadd double %30525, 0x400921FB54442D18, !dbg !397
  %30527 = call double @llvm.fabs.f64(double %30526), !dbg !398
  %30528 = fcmp ole double %30527, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30528, label %14330, label %30529, !dbg !400

30529:                                            ; preds = %30524
  br label %30530, !dbg !403

30530:                                            ; preds = %30529
  %30531 = load i32, ptr %10, align 4, !dbg !404
  %30532 = add nsw i32 %30531, 1, !dbg !404
  store i32 %30532, ptr %10, align 4, !dbg !404
  %30533 = load i32, ptr %10, align 4, !dbg !364
  %30534 = load i32, ptr %8, align 4, !dbg !366
  %30535 = icmp slt i32 %30533, %30534, !dbg !367
  br i1 %30535, label %30536, label %48422, !dbg !368

30536:                                            ; preds = %30530
  %30537 = load i32, ptr %10, align 4, !dbg !369
  %30538 = sext i32 %30537 to i64, !dbg !371
  %30539 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30538, !dbg !371
  %30540 = load double, ptr %6, align 8, !dbg !372
  %30541 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30542 = load double, ptr %30541, align 8, !dbg !372
  %30543 = load double, ptr %30539, align 16, !dbg !372
  %30544 = getelementptr inbounds { double, double }, ptr %30539, i32 0, i32 1, !dbg !372
  %30545 = load double, ptr %30544, align 8, !dbg !372
  %30546 = call { double, double } @make_vec(double %30540, double %30542, double %30543, double %30545), !dbg !372
  %30547 = extractvalue { double, double } %30546, 0, !dbg !372
  store double %30547, ptr %16, align 8, !dbg !372
  %30548 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30549 = extractvalue { double, double } %30546, 1, !dbg !372
  store double %30549, ptr %30548, align 8, !dbg !372
  %30550 = load i32, ptr %10, align 4, !dbg !373
  %30551 = add nsw i32 %30550, 1, !dbg !374
  %30552 = sext i32 %30551 to i64, !dbg !375
  %30553 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30552, !dbg !375
  %30554 = load double, ptr %6, align 8, !dbg !376
  %30555 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30556 = load double, ptr %30555, align 8, !dbg !376
  %30557 = load double, ptr %30553, align 16, !dbg !376
  %30558 = getelementptr inbounds { double, double }, ptr %30553, i32 0, i32 1, !dbg !376
  %30559 = load double, ptr %30558, align 8, !dbg !376
  %30560 = call { double, double } @make_vec(double %30554, double %30556, double %30557, double %30559), !dbg !376
  %30561 = extractvalue { double, double } %30560, 0, !dbg !376
  store double %30561, ptr %17, align 8, !dbg !376
  %30562 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30563 = extractvalue { double, double } %30560, 1, !dbg !376
  store double %30563, ptr %30562, align 8, !dbg !376
  %30564 = load double, ptr %16, align 8, !dbg !377
  %30565 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30566 = load double, ptr %30565, align 8, !dbg !377
  %30567 = load double, ptr %17, align 8, !dbg !377
  %30568 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30569 = load double, ptr %30568, align 8, !dbg !377
  %30570 = call double @cross(double %30564, double %30566, double %30567, double %30569), !dbg !377
  %30571 = load i32, ptr %10, align 4, !dbg !378
  %30572 = sext i32 %30571 to i64, !dbg !379
  %30573 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30572, !dbg !379
  %30574 = load double, ptr %6, align 8, !dbg !380
  %30575 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30576 = load double, ptr %30575, align 8, !dbg !380
  %30577 = load double, ptr %30573, align 16, !dbg !380
  %30578 = getelementptr inbounds { double, double }, ptr %30573, i32 0, i32 1, !dbg !380
  %30579 = load double, ptr %30578, align 8, !dbg !380
  %30580 = call { double, double } @make_vec(double %30574, double %30576, double %30577, double %30579), !dbg !380
  %30581 = extractvalue { double, double } %30580, 0, !dbg !380
  store double %30581, ptr %18, align 8, !dbg !380
  %30582 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30583 = extractvalue { double, double } %30580, 1, !dbg !380
  store double %30583, ptr %30582, align 8, !dbg !380
  %30584 = load i32, ptr %10, align 4, !dbg !381
  %30585 = add nsw i32 %30584, 1, !dbg !382
  %30586 = sext i32 %30585 to i64, !dbg !383
  %30587 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30586, !dbg !383
  %30588 = load double, ptr %6, align 8, !dbg !384
  %30589 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30590 = load double, ptr %30589, align 8, !dbg !384
  %30591 = load double, ptr %30587, align 16, !dbg !384
  %30592 = getelementptr inbounds { double, double }, ptr %30587, i32 0, i32 1, !dbg !384
  %30593 = load double, ptr %30592, align 8, !dbg !384
  %30594 = call { double, double } @make_vec(double %30588, double %30590, double %30591, double %30593), !dbg !384
  %30595 = extractvalue { double, double } %30594, 0, !dbg !384
  store double %30595, ptr %19, align 8, !dbg !384
  %30596 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30597 = extractvalue { double, double } %30594, 1, !dbg !384
  store double %30597, ptr %30596, align 8, !dbg !384
  %30598 = load double, ptr %18, align 8, !dbg !385
  %30599 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30600 = load double, ptr %30599, align 8, !dbg !385
  %30601 = load double, ptr %19, align 8, !dbg !385
  %30602 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30603 = load double, ptr %30602, align 8, !dbg !385
  %30604 = call double @dot(double %30598, double %30600, double %30601, double %30603), !dbg !385
  %30605 = call double @atan2(double noundef %30570, double noundef %30604) #6, !dbg !386
  store double %30605, ptr %13, align 8, !dbg !387
  %30606 = load double, ptr %13, align 8, !dbg !388
  %30607 = load double, ptr %14, align 8, !dbg !389
  %30608 = fadd double %30607, %30606, !dbg !389
  store double %30608, ptr %14, align 8, !dbg !389
  %30609 = load double, ptr %13, align 8, !dbg !390
  %30610 = fsub double %30609, 0x400921FB54442D18, !dbg !392
  %30611 = call double @llvm.fabs.f64(double %30610), !dbg !393
  %30612 = fcmp ole double %30611, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30612, label %14330, label %30613, !dbg !395

30613:                                            ; preds = %30536
  %30614 = load double, ptr %13, align 8, !dbg !396
  %30615 = fadd double %30614, 0x400921FB54442D18, !dbg !397
  %30616 = call double @llvm.fabs.f64(double %30615), !dbg !398
  %30617 = fcmp ole double %30616, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30617, label %14330, label %30618, !dbg !400

30618:                                            ; preds = %30613
  br label %30619, !dbg !403

30619:                                            ; preds = %30618
  %30620 = load i32, ptr %10, align 4, !dbg !404
  %30621 = add nsw i32 %30620, 1, !dbg !404
  store i32 %30621, ptr %10, align 4, !dbg !404
  %30622 = load i32, ptr %10, align 4, !dbg !364
  %30623 = load i32, ptr %8, align 4, !dbg !366
  %30624 = icmp slt i32 %30622, %30623, !dbg !367
  br i1 %30624, label %30625, label %48422, !dbg !368

30625:                                            ; preds = %30619
  %30626 = load i32, ptr %10, align 4, !dbg !369
  %30627 = sext i32 %30626 to i64, !dbg !371
  %30628 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30627, !dbg !371
  %30629 = load double, ptr %6, align 8, !dbg !372
  %30630 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30631 = load double, ptr %30630, align 8, !dbg !372
  %30632 = load double, ptr %30628, align 16, !dbg !372
  %30633 = getelementptr inbounds { double, double }, ptr %30628, i32 0, i32 1, !dbg !372
  %30634 = load double, ptr %30633, align 8, !dbg !372
  %30635 = call { double, double } @make_vec(double %30629, double %30631, double %30632, double %30634), !dbg !372
  %30636 = extractvalue { double, double } %30635, 0, !dbg !372
  store double %30636, ptr %16, align 8, !dbg !372
  %30637 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30638 = extractvalue { double, double } %30635, 1, !dbg !372
  store double %30638, ptr %30637, align 8, !dbg !372
  %30639 = load i32, ptr %10, align 4, !dbg !373
  %30640 = add nsw i32 %30639, 1, !dbg !374
  %30641 = sext i32 %30640 to i64, !dbg !375
  %30642 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30641, !dbg !375
  %30643 = load double, ptr %6, align 8, !dbg !376
  %30644 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30645 = load double, ptr %30644, align 8, !dbg !376
  %30646 = load double, ptr %30642, align 16, !dbg !376
  %30647 = getelementptr inbounds { double, double }, ptr %30642, i32 0, i32 1, !dbg !376
  %30648 = load double, ptr %30647, align 8, !dbg !376
  %30649 = call { double, double } @make_vec(double %30643, double %30645, double %30646, double %30648), !dbg !376
  %30650 = extractvalue { double, double } %30649, 0, !dbg !376
  store double %30650, ptr %17, align 8, !dbg !376
  %30651 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30652 = extractvalue { double, double } %30649, 1, !dbg !376
  store double %30652, ptr %30651, align 8, !dbg !376
  %30653 = load double, ptr %16, align 8, !dbg !377
  %30654 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30655 = load double, ptr %30654, align 8, !dbg !377
  %30656 = load double, ptr %17, align 8, !dbg !377
  %30657 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30658 = load double, ptr %30657, align 8, !dbg !377
  %30659 = call double @cross(double %30653, double %30655, double %30656, double %30658), !dbg !377
  %30660 = load i32, ptr %10, align 4, !dbg !378
  %30661 = sext i32 %30660 to i64, !dbg !379
  %30662 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30661, !dbg !379
  %30663 = load double, ptr %6, align 8, !dbg !380
  %30664 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30665 = load double, ptr %30664, align 8, !dbg !380
  %30666 = load double, ptr %30662, align 16, !dbg !380
  %30667 = getelementptr inbounds { double, double }, ptr %30662, i32 0, i32 1, !dbg !380
  %30668 = load double, ptr %30667, align 8, !dbg !380
  %30669 = call { double, double } @make_vec(double %30663, double %30665, double %30666, double %30668), !dbg !380
  %30670 = extractvalue { double, double } %30669, 0, !dbg !380
  store double %30670, ptr %18, align 8, !dbg !380
  %30671 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30672 = extractvalue { double, double } %30669, 1, !dbg !380
  store double %30672, ptr %30671, align 8, !dbg !380
  %30673 = load i32, ptr %10, align 4, !dbg !381
  %30674 = add nsw i32 %30673, 1, !dbg !382
  %30675 = sext i32 %30674 to i64, !dbg !383
  %30676 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30675, !dbg !383
  %30677 = load double, ptr %6, align 8, !dbg !384
  %30678 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30679 = load double, ptr %30678, align 8, !dbg !384
  %30680 = load double, ptr %30676, align 16, !dbg !384
  %30681 = getelementptr inbounds { double, double }, ptr %30676, i32 0, i32 1, !dbg !384
  %30682 = load double, ptr %30681, align 8, !dbg !384
  %30683 = call { double, double } @make_vec(double %30677, double %30679, double %30680, double %30682), !dbg !384
  %30684 = extractvalue { double, double } %30683, 0, !dbg !384
  store double %30684, ptr %19, align 8, !dbg !384
  %30685 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30686 = extractvalue { double, double } %30683, 1, !dbg !384
  store double %30686, ptr %30685, align 8, !dbg !384
  %30687 = load double, ptr %18, align 8, !dbg !385
  %30688 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30689 = load double, ptr %30688, align 8, !dbg !385
  %30690 = load double, ptr %19, align 8, !dbg !385
  %30691 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30692 = load double, ptr %30691, align 8, !dbg !385
  %30693 = call double @dot(double %30687, double %30689, double %30690, double %30692), !dbg !385
  %30694 = call double @atan2(double noundef %30659, double noundef %30693) #6, !dbg !386
  store double %30694, ptr %13, align 8, !dbg !387
  %30695 = load double, ptr %13, align 8, !dbg !388
  %30696 = load double, ptr %14, align 8, !dbg !389
  %30697 = fadd double %30696, %30695, !dbg !389
  store double %30697, ptr %14, align 8, !dbg !389
  %30698 = load double, ptr %13, align 8, !dbg !390
  %30699 = fsub double %30698, 0x400921FB54442D18, !dbg !392
  %30700 = call double @llvm.fabs.f64(double %30699), !dbg !393
  %30701 = fcmp ole double %30700, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30701, label %14330, label %30702, !dbg !395

30702:                                            ; preds = %30625
  %30703 = load double, ptr %13, align 8, !dbg !396
  %30704 = fadd double %30703, 0x400921FB54442D18, !dbg !397
  %30705 = call double @llvm.fabs.f64(double %30704), !dbg !398
  %30706 = fcmp ole double %30705, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30706, label %14330, label %30707, !dbg !400

30707:                                            ; preds = %30702
  br label %30708, !dbg !403

30708:                                            ; preds = %30707
  %30709 = load i32, ptr %10, align 4, !dbg !404
  %30710 = add nsw i32 %30709, 1, !dbg !404
  store i32 %30710, ptr %10, align 4, !dbg !404
  %30711 = load i32, ptr %10, align 4, !dbg !364
  %30712 = load i32, ptr %8, align 4, !dbg !366
  %30713 = icmp slt i32 %30711, %30712, !dbg !367
  br i1 %30713, label %30714, label %48422, !dbg !368

30714:                                            ; preds = %30708
  %30715 = load i32, ptr %10, align 4, !dbg !369
  %30716 = sext i32 %30715 to i64, !dbg !371
  %30717 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30716, !dbg !371
  %30718 = load double, ptr %6, align 8, !dbg !372
  %30719 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30720 = load double, ptr %30719, align 8, !dbg !372
  %30721 = load double, ptr %30717, align 16, !dbg !372
  %30722 = getelementptr inbounds { double, double }, ptr %30717, i32 0, i32 1, !dbg !372
  %30723 = load double, ptr %30722, align 8, !dbg !372
  %30724 = call { double, double } @make_vec(double %30718, double %30720, double %30721, double %30723), !dbg !372
  %30725 = extractvalue { double, double } %30724, 0, !dbg !372
  store double %30725, ptr %16, align 8, !dbg !372
  %30726 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30727 = extractvalue { double, double } %30724, 1, !dbg !372
  store double %30727, ptr %30726, align 8, !dbg !372
  %30728 = load i32, ptr %10, align 4, !dbg !373
  %30729 = add nsw i32 %30728, 1, !dbg !374
  %30730 = sext i32 %30729 to i64, !dbg !375
  %30731 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30730, !dbg !375
  %30732 = load double, ptr %6, align 8, !dbg !376
  %30733 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30734 = load double, ptr %30733, align 8, !dbg !376
  %30735 = load double, ptr %30731, align 16, !dbg !376
  %30736 = getelementptr inbounds { double, double }, ptr %30731, i32 0, i32 1, !dbg !376
  %30737 = load double, ptr %30736, align 8, !dbg !376
  %30738 = call { double, double } @make_vec(double %30732, double %30734, double %30735, double %30737), !dbg !376
  %30739 = extractvalue { double, double } %30738, 0, !dbg !376
  store double %30739, ptr %17, align 8, !dbg !376
  %30740 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30741 = extractvalue { double, double } %30738, 1, !dbg !376
  store double %30741, ptr %30740, align 8, !dbg !376
  %30742 = load double, ptr %16, align 8, !dbg !377
  %30743 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30744 = load double, ptr %30743, align 8, !dbg !377
  %30745 = load double, ptr %17, align 8, !dbg !377
  %30746 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30747 = load double, ptr %30746, align 8, !dbg !377
  %30748 = call double @cross(double %30742, double %30744, double %30745, double %30747), !dbg !377
  %30749 = load i32, ptr %10, align 4, !dbg !378
  %30750 = sext i32 %30749 to i64, !dbg !379
  %30751 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30750, !dbg !379
  %30752 = load double, ptr %6, align 8, !dbg !380
  %30753 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30754 = load double, ptr %30753, align 8, !dbg !380
  %30755 = load double, ptr %30751, align 16, !dbg !380
  %30756 = getelementptr inbounds { double, double }, ptr %30751, i32 0, i32 1, !dbg !380
  %30757 = load double, ptr %30756, align 8, !dbg !380
  %30758 = call { double, double } @make_vec(double %30752, double %30754, double %30755, double %30757), !dbg !380
  %30759 = extractvalue { double, double } %30758, 0, !dbg !380
  store double %30759, ptr %18, align 8, !dbg !380
  %30760 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30761 = extractvalue { double, double } %30758, 1, !dbg !380
  store double %30761, ptr %30760, align 8, !dbg !380
  %30762 = load i32, ptr %10, align 4, !dbg !381
  %30763 = add nsw i32 %30762, 1, !dbg !382
  %30764 = sext i32 %30763 to i64, !dbg !383
  %30765 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30764, !dbg !383
  %30766 = load double, ptr %6, align 8, !dbg !384
  %30767 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30768 = load double, ptr %30767, align 8, !dbg !384
  %30769 = load double, ptr %30765, align 16, !dbg !384
  %30770 = getelementptr inbounds { double, double }, ptr %30765, i32 0, i32 1, !dbg !384
  %30771 = load double, ptr %30770, align 8, !dbg !384
  %30772 = call { double, double } @make_vec(double %30766, double %30768, double %30769, double %30771), !dbg !384
  %30773 = extractvalue { double, double } %30772, 0, !dbg !384
  store double %30773, ptr %19, align 8, !dbg !384
  %30774 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30775 = extractvalue { double, double } %30772, 1, !dbg !384
  store double %30775, ptr %30774, align 8, !dbg !384
  %30776 = load double, ptr %18, align 8, !dbg !385
  %30777 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30778 = load double, ptr %30777, align 8, !dbg !385
  %30779 = load double, ptr %19, align 8, !dbg !385
  %30780 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30781 = load double, ptr %30780, align 8, !dbg !385
  %30782 = call double @dot(double %30776, double %30778, double %30779, double %30781), !dbg !385
  %30783 = call double @atan2(double noundef %30748, double noundef %30782) #6, !dbg !386
  store double %30783, ptr %13, align 8, !dbg !387
  %30784 = load double, ptr %13, align 8, !dbg !388
  %30785 = load double, ptr %14, align 8, !dbg !389
  %30786 = fadd double %30785, %30784, !dbg !389
  store double %30786, ptr %14, align 8, !dbg !389
  %30787 = load double, ptr %13, align 8, !dbg !390
  %30788 = fsub double %30787, 0x400921FB54442D18, !dbg !392
  %30789 = call double @llvm.fabs.f64(double %30788), !dbg !393
  %30790 = fcmp ole double %30789, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30790, label %14330, label %30791, !dbg !395

30791:                                            ; preds = %30714
  %30792 = load double, ptr %13, align 8, !dbg !396
  %30793 = fadd double %30792, 0x400921FB54442D18, !dbg !397
  %30794 = call double @llvm.fabs.f64(double %30793), !dbg !398
  %30795 = fcmp ole double %30794, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30795, label %14330, label %30796, !dbg !400

30796:                                            ; preds = %30791
  br label %30797, !dbg !403

30797:                                            ; preds = %30796
  %30798 = load i32, ptr %10, align 4, !dbg !404
  %30799 = add nsw i32 %30798, 1, !dbg !404
  store i32 %30799, ptr %10, align 4, !dbg !404
  %30800 = load i32, ptr %10, align 4, !dbg !364
  %30801 = load i32, ptr %8, align 4, !dbg !366
  %30802 = icmp slt i32 %30800, %30801, !dbg !367
  br i1 %30802, label %30803, label %48422, !dbg !368

30803:                                            ; preds = %30797
  %30804 = load i32, ptr %10, align 4, !dbg !369
  %30805 = sext i32 %30804 to i64, !dbg !371
  %30806 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30805, !dbg !371
  %30807 = load double, ptr %6, align 8, !dbg !372
  %30808 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30809 = load double, ptr %30808, align 8, !dbg !372
  %30810 = load double, ptr %30806, align 16, !dbg !372
  %30811 = getelementptr inbounds { double, double }, ptr %30806, i32 0, i32 1, !dbg !372
  %30812 = load double, ptr %30811, align 8, !dbg !372
  %30813 = call { double, double } @make_vec(double %30807, double %30809, double %30810, double %30812), !dbg !372
  %30814 = extractvalue { double, double } %30813, 0, !dbg !372
  store double %30814, ptr %16, align 8, !dbg !372
  %30815 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30816 = extractvalue { double, double } %30813, 1, !dbg !372
  store double %30816, ptr %30815, align 8, !dbg !372
  %30817 = load i32, ptr %10, align 4, !dbg !373
  %30818 = add nsw i32 %30817, 1, !dbg !374
  %30819 = sext i32 %30818 to i64, !dbg !375
  %30820 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30819, !dbg !375
  %30821 = load double, ptr %6, align 8, !dbg !376
  %30822 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30823 = load double, ptr %30822, align 8, !dbg !376
  %30824 = load double, ptr %30820, align 16, !dbg !376
  %30825 = getelementptr inbounds { double, double }, ptr %30820, i32 0, i32 1, !dbg !376
  %30826 = load double, ptr %30825, align 8, !dbg !376
  %30827 = call { double, double } @make_vec(double %30821, double %30823, double %30824, double %30826), !dbg !376
  %30828 = extractvalue { double, double } %30827, 0, !dbg !376
  store double %30828, ptr %17, align 8, !dbg !376
  %30829 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30830 = extractvalue { double, double } %30827, 1, !dbg !376
  store double %30830, ptr %30829, align 8, !dbg !376
  %30831 = load double, ptr %16, align 8, !dbg !377
  %30832 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30833 = load double, ptr %30832, align 8, !dbg !377
  %30834 = load double, ptr %17, align 8, !dbg !377
  %30835 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30836 = load double, ptr %30835, align 8, !dbg !377
  %30837 = call double @cross(double %30831, double %30833, double %30834, double %30836), !dbg !377
  %30838 = load i32, ptr %10, align 4, !dbg !378
  %30839 = sext i32 %30838 to i64, !dbg !379
  %30840 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30839, !dbg !379
  %30841 = load double, ptr %6, align 8, !dbg !380
  %30842 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30843 = load double, ptr %30842, align 8, !dbg !380
  %30844 = load double, ptr %30840, align 16, !dbg !380
  %30845 = getelementptr inbounds { double, double }, ptr %30840, i32 0, i32 1, !dbg !380
  %30846 = load double, ptr %30845, align 8, !dbg !380
  %30847 = call { double, double } @make_vec(double %30841, double %30843, double %30844, double %30846), !dbg !380
  %30848 = extractvalue { double, double } %30847, 0, !dbg !380
  store double %30848, ptr %18, align 8, !dbg !380
  %30849 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30850 = extractvalue { double, double } %30847, 1, !dbg !380
  store double %30850, ptr %30849, align 8, !dbg !380
  %30851 = load i32, ptr %10, align 4, !dbg !381
  %30852 = add nsw i32 %30851, 1, !dbg !382
  %30853 = sext i32 %30852 to i64, !dbg !383
  %30854 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30853, !dbg !383
  %30855 = load double, ptr %6, align 8, !dbg !384
  %30856 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30857 = load double, ptr %30856, align 8, !dbg !384
  %30858 = load double, ptr %30854, align 16, !dbg !384
  %30859 = getelementptr inbounds { double, double }, ptr %30854, i32 0, i32 1, !dbg !384
  %30860 = load double, ptr %30859, align 8, !dbg !384
  %30861 = call { double, double } @make_vec(double %30855, double %30857, double %30858, double %30860), !dbg !384
  %30862 = extractvalue { double, double } %30861, 0, !dbg !384
  store double %30862, ptr %19, align 8, !dbg !384
  %30863 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30864 = extractvalue { double, double } %30861, 1, !dbg !384
  store double %30864, ptr %30863, align 8, !dbg !384
  %30865 = load double, ptr %18, align 8, !dbg !385
  %30866 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30867 = load double, ptr %30866, align 8, !dbg !385
  %30868 = load double, ptr %19, align 8, !dbg !385
  %30869 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30870 = load double, ptr %30869, align 8, !dbg !385
  %30871 = call double @dot(double %30865, double %30867, double %30868, double %30870), !dbg !385
  %30872 = call double @atan2(double noundef %30837, double noundef %30871) #6, !dbg !386
  store double %30872, ptr %13, align 8, !dbg !387
  %30873 = load double, ptr %13, align 8, !dbg !388
  %30874 = load double, ptr %14, align 8, !dbg !389
  %30875 = fadd double %30874, %30873, !dbg !389
  store double %30875, ptr %14, align 8, !dbg !389
  %30876 = load double, ptr %13, align 8, !dbg !390
  %30877 = fsub double %30876, 0x400921FB54442D18, !dbg !392
  %30878 = call double @llvm.fabs.f64(double %30877), !dbg !393
  %30879 = fcmp ole double %30878, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30879, label %14330, label %30880, !dbg !395

30880:                                            ; preds = %30803
  %30881 = load double, ptr %13, align 8, !dbg !396
  %30882 = fadd double %30881, 0x400921FB54442D18, !dbg !397
  %30883 = call double @llvm.fabs.f64(double %30882), !dbg !398
  %30884 = fcmp ole double %30883, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30884, label %14330, label %30885, !dbg !400

30885:                                            ; preds = %30880
  br label %30886, !dbg !403

30886:                                            ; preds = %30885
  %30887 = load i32, ptr %10, align 4, !dbg !404
  %30888 = add nsw i32 %30887, 1, !dbg !404
  store i32 %30888, ptr %10, align 4, !dbg !404
  %30889 = load i32, ptr %10, align 4, !dbg !364
  %30890 = load i32, ptr %8, align 4, !dbg !366
  %30891 = icmp slt i32 %30889, %30890, !dbg !367
  br i1 %30891, label %30892, label %48422, !dbg !368

30892:                                            ; preds = %30886
  %30893 = load i32, ptr %10, align 4, !dbg !369
  %30894 = sext i32 %30893 to i64, !dbg !371
  %30895 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30894, !dbg !371
  %30896 = load double, ptr %6, align 8, !dbg !372
  %30897 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30898 = load double, ptr %30897, align 8, !dbg !372
  %30899 = load double, ptr %30895, align 16, !dbg !372
  %30900 = getelementptr inbounds { double, double }, ptr %30895, i32 0, i32 1, !dbg !372
  %30901 = load double, ptr %30900, align 8, !dbg !372
  %30902 = call { double, double } @make_vec(double %30896, double %30898, double %30899, double %30901), !dbg !372
  %30903 = extractvalue { double, double } %30902, 0, !dbg !372
  store double %30903, ptr %16, align 8, !dbg !372
  %30904 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30905 = extractvalue { double, double } %30902, 1, !dbg !372
  store double %30905, ptr %30904, align 8, !dbg !372
  %30906 = load i32, ptr %10, align 4, !dbg !373
  %30907 = add nsw i32 %30906, 1, !dbg !374
  %30908 = sext i32 %30907 to i64, !dbg !375
  %30909 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30908, !dbg !375
  %30910 = load double, ptr %6, align 8, !dbg !376
  %30911 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %30912 = load double, ptr %30911, align 8, !dbg !376
  %30913 = load double, ptr %30909, align 16, !dbg !376
  %30914 = getelementptr inbounds { double, double }, ptr %30909, i32 0, i32 1, !dbg !376
  %30915 = load double, ptr %30914, align 8, !dbg !376
  %30916 = call { double, double } @make_vec(double %30910, double %30912, double %30913, double %30915), !dbg !376
  %30917 = extractvalue { double, double } %30916, 0, !dbg !376
  store double %30917, ptr %17, align 8, !dbg !376
  %30918 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %30919 = extractvalue { double, double } %30916, 1, !dbg !376
  store double %30919, ptr %30918, align 8, !dbg !376
  %30920 = load double, ptr %16, align 8, !dbg !377
  %30921 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %30922 = load double, ptr %30921, align 8, !dbg !377
  %30923 = load double, ptr %17, align 8, !dbg !377
  %30924 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %30925 = load double, ptr %30924, align 8, !dbg !377
  %30926 = call double @cross(double %30920, double %30922, double %30923, double %30925), !dbg !377
  %30927 = load i32, ptr %10, align 4, !dbg !378
  %30928 = sext i32 %30927 to i64, !dbg !379
  %30929 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30928, !dbg !379
  %30930 = load double, ptr %6, align 8, !dbg !380
  %30931 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %30932 = load double, ptr %30931, align 8, !dbg !380
  %30933 = load double, ptr %30929, align 16, !dbg !380
  %30934 = getelementptr inbounds { double, double }, ptr %30929, i32 0, i32 1, !dbg !380
  %30935 = load double, ptr %30934, align 8, !dbg !380
  %30936 = call { double, double } @make_vec(double %30930, double %30932, double %30933, double %30935), !dbg !380
  %30937 = extractvalue { double, double } %30936, 0, !dbg !380
  store double %30937, ptr %18, align 8, !dbg !380
  %30938 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %30939 = extractvalue { double, double } %30936, 1, !dbg !380
  store double %30939, ptr %30938, align 8, !dbg !380
  %30940 = load i32, ptr %10, align 4, !dbg !381
  %30941 = add nsw i32 %30940, 1, !dbg !382
  %30942 = sext i32 %30941 to i64, !dbg !383
  %30943 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30942, !dbg !383
  %30944 = load double, ptr %6, align 8, !dbg !384
  %30945 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %30946 = load double, ptr %30945, align 8, !dbg !384
  %30947 = load double, ptr %30943, align 16, !dbg !384
  %30948 = getelementptr inbounds { double, double }, ptr %30943, i32 0, i32 1, !dbg !384
  %30949 = load double, ptr %30948, align 8, !dbg !384
  %30950 = call { double, double } @make_vec(double %30944, double %30946, double %30947, double %30949), !dbg !384
  %30951 = extractvalue { double, double } %30950, 0, !dbg !384
  store double %30951, ptr %19, align 8, !dbg !384
  %30952 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %30953 = extractvalue { double, double } %30950, 1, !dbg !384
  store double %30953, ptr %30952, align 8, !dbg !384
  %30954 = load double, ptr %18, align 8, !dbg !385
  %30955 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %30956 = load double, ptr %30955, align 8, !dbg !385
  %30957 = load double, ptr %19, align 8, !dbg !385
  %30958 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %30959 = load double, ptr %30958, align 8, !dbg !385
  %30960 = call double @dot(double %30954, double %30956, double %30957, double %30959), !dbg !385
  %30961 = call double @atan2(double noundef %30926, double noundef %30960) #6, !dbg !386
  store double %30961, ptr %13, align 8, !dbg !387
  %30962 = load double, ptr %13, align 8, !dbg !388
  %30963 = load double, ptr %14, align 8, !dbg !389
  %30964 = fadd double %30963, %30962, !dbg !389
  store double %30964, ptr %14, align 8, !dbg !389
  %30965 = load double, ptr %13, align 8, !dbg !390
  %30966 = fsub double %30965, 0x400921FB54442D18, !dbg !392
  %30967 = call double @llvm.fabs.f64(double %30966), !dbg !393
  %30968 = fcmp ole double %30967, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %30968, label %14330, label %30969, !dbg !395

30969:                                            ; preds = %30892
  %30970 = load double, ptr %13, align 8, !dbg !396
  %30971 = fadd double %30970, 0x400921FB54442D18, !dbg !397
  %30972 = call double @llvm.fabs.f64(double %30971), !dbg !398
  %30973 = fcmp ole double %30972, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %30973, label %14330, label %30974, !dbg !400

30974:                                            ; preds = %30969
  br label %30975, !dbg !403

30975:                                            ; preds = %30974
  %30976 = load i32, ptr %10, align 4, !dbg !404
  %30977 = add nsw i32 %30976, 1, !dbg !404
  store i32 %30977, ptr %10, align 4, !dbg !404
  %30978 = load i32, ptr %10, align 4, !dbg !364
  %30979 = load i32, ptr %8, align 4, !dbg !366
  %30980 = icmp slt i32 %30978, %30979, !dbg !367
  br i1 %30980, label %30981, label %48422, !dbg !368

30981:                                            ; preds = %30975
  %30982 = load i32, ptr %10, align 4, !dbg !369
  %30983 = sext i32 %30982 to i64, !dbg !371
  %30984 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30983, !dbg !371
  %30985 = load double, ptr %6, align 8, !dbg !372
  %30986 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %30987 = load double, ptr %30986, align 8, !dbg !372
  %30988 = load double, ptr %30984, align 16, !dbg !372
  %30989 = getelementptr inbounds { double, double }, ptr %30984, i32 0, i32 1, !dbg !372
  %30990 = load double, ptr %30989, align 8, !dbg !372
  %30991 = call { double, double } @make_vec(double %30985, double %30987, double %30988, double %30990), !dbg !372
  %30992 = extractvalue { double, double } %30991, 0, !dbg !372
  store double %30992, ptr %16, align 8, !dbg !372
  %30993 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %30994 = extractvalue { double, double } %30991, 1, !dbg !372
  store double %30994, ptr %30993, align 8, !dbg !372
  %30995 = load i32, ptr %10, align 4, !dbg !373
  %30996 = add nsw i32 %30995, 1, !dbg !374
  %30997 = sext i32 %30996 to i64, !dbg !375
  %30998 = getelementptr inbounds %struct.POINT, ptr %26, i64 %30997, !dbg !375
  %30999 = load double, ptr %6, align 8, !dbg !376
  %31000 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31001 = load double, ptr %31000, align 8, !dbg !376
  %31002 = load double, ptr %30998, align 16, !dbg !376
  %31003 = getelementptr inbounds { double, double }, ptr %30998, i32 0, i32 1, !dbg !376
  %31004 = load double, ptr %31003, align 8, !dbg !376
  %31005 = call { double, double } @make_vec(double %30999, double %31001, double %31002, double %31004), !dbg !376
  %31006 = extractvalue { double, double } %31005, 0, !dbg !376
  store double %31006, ptr %17, align 8, !dbg !376
  %31007 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31008 = extractvalue { double, double } %31005, 1, !dbg !376
  store double %31008, ptr %31007, align 8, !dbg !376
  %31009 = load double, ptr %16, align 8, !dbg !377
  %31010 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31011 = load double, ptr %31010, align 8, !dbg !377
  %31012 = load double, ptr %17, align 8, !dbg !377
  %31013 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31014 = load double, ptr %31013, align 8, !dbg !377
  %31015 = call double @cross(double %31009, double %31011, double %31012, double %31014), !dbg !377
  %31016 = load i32, ptr %10, align 4, !dbg !378
  %31017 = sext i32 %31016 to i64, !dbg !379
  %31018 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31017, !dbg !379
  %31019 = load double, ptr %6, align 8, !dbg !380
  %31020 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31021 = load double, ptr %31020, align 8, !dbg !380
  %31022 = load double, ptr %31018, align 16, !dbg !380
  %31023 = getelementptr inbounds { double, double }, ptr %31018, i32 0, i32 1, !dbg !380
  %31024 = load double, ptr %31023, align 8, !dbg !380
  %31025 = call { double, double } @make_vec(double %31019, double %31021, double %31022, double %31024), !dbg !380
  %31026 = extractvalue { double, double } %31025, 0, !dbg !380
  store double %31026, ptr %18, align 8, !dbg !380
  %31027 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31028 = extractvalue { double, double } %31025, 1, !dbg !380
  store double %31028, ptr %31027, align 8, !dbg !380
  %31029 = load i32, ptr %10, align 4, !dbg !381
  %31030 = add nsw i32 %31029, 1, !dbg !382
  %31031 = sext i32 %31030 to i64, !dbg !383
  %31032 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31031, !dbg !383
  %31033 = load double, ptr %6, align 8, !dbg !384
  %31034 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31035 = load double, ptr %31034, align 8, !dbg !384
  %31036 = load double, ptr %31032, align 16, !dbg !384
  %31037 = getelementptr inbounds { double, double }, ptr %31032, i32 0, i32 1, !dbg !384
  %31038 = load double, ptr %31037, align 8, !dbg !384
  %31039 = call { double, double } @make_vec(double %31033, double %31035, double %31036, double %31038), !dbg !384
  %31040 = extractvalue { double, double } %31039, 0, !dbg !384
  store double %31040, ptr %19, align 8, !dbg !384
  %31041 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31042 = extractvalue { double, double } %31039, 1, !dbg !384
  store double %31042, ptr %31041, align 8, !dbg !384
  %31043 = load double, ptr %18, align 8, !dbg !385
  %31044 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31045 = load double, ptr %31044, align 8, !dbg !385
  %31046 = load double, ptr %19, align 8, !dbg !385
  %31047 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31048 = load double, ptr %31047, align 8, !dbg !385
  %31049 = call double @dot(double %31043, double %31045, double %31046, double %31048), !dbg !385
  %31050 = call double @atan2(double noundef %31015, double noundef %31049) #6, !dbg !386
  store double %31050, ptr %13, align 8, !dbg !387
  %31051 = load double, ptr %13, align 8, !dbg !388
  %31052 = load double, ptr %14, align 8, !dbg !389
  %31053 = fadd double %31052, %31051, !dbg !389
  store double %31053, ptr %14, align 8, !dbg !389
  %31054 = load double, ptr %13, align 8, !dbg !390
  %31055 = fsub double %31054, 0x400921FB54442D18, !dbg !392
  %31056 = call double @llvm.fabs.f64(double %31055), !dbg !393
  %31057 = fcmp ole double %31056, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31057, label %14330, label %31058, !dbg !395

31058:                                            ; preds = %30981
  %31059 = load double, ptr %13, align 8, !dbg !396
  %31060 = fadd double %31059, 0x400921FB54442D18, !dbg !397
  %31061 = call double @llvm.fabs.f64(double %31060), !dbg !398
  %31062 = fcmp ole double %31061, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31062, label %14330, label %31063, !dbg !400

31063:                                            ; preds = %31058
  br label %31064, !dbg !403

31064:                                            ; preds = %31063
  %31065 = load i32, ptr %10, align 4, !dbg !404
  %31066 = add nsw i32 %31065, 1, !dbg !404
  store i32 %31066, ptr %10, align 4, !dbg !404
  %31067 = load i32, ptr %10, align 4, !dbg !364
  %31068 = load i32, ptr %8, align 4, !dbg !366
  %31069 = icmp slt i32 %31067, %31068, !dbg !367
  br i1 %31069, label %31070, label %48422, !dbg !368

31070:                                            ; preds = %31064
  %31071 = load i32, ptr %10, align 4, !dbg !369
  %31072 = sext i32 %31071 to i64, !dbg !371
  %31073 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31072, !dbg !371
  %31074 = load double, ptr %6, align 8, !dbg !372
  %31075 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31076 = load double, ptr %31075, align 8, !dbg !372
  %31077 = load double, ptr %31073, align 16, !dbg !372
  %31078 = getelementptr inbounds { double, double }, ptr %31073, i32 0, i32 1, !dbg !372
  %31079 = load double, ptr %31078, align 8, !dbg !372
  %31080 = call { double, double } @make_vec(double %31074, double %31076, double %31077, double %31079), !dbg !372
  %31081 = extractvalue { double, double } %31080, 0, !dbg !372
  store double %31081, ptr %16, align 8, !dbg !372
  %31082 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31083 = extractvalue { double, double } %31080, 1, !dbg !372
  store double %31083, ptr %31082, align 8, !dbg !372
  %31084 = load i32, ptr %10, align 4, !dbg !373
  %31085 = add nsw i32 %31084, 1, !dbg !374
  %31086 = sext i32 %31085 to i64, !dbg !375
  %31087 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31086, !dbg !375
  %31088 = load double, ptr %6, align 8, !dbg !376
  %31089 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31090 = load double, ptr %31089, align 8, !dbg !376
  %31091 = load double, ptr %31087, align 16, !dbg !376
  %31092 = getelementptr inbounds { double, double }, ptr %31087, i32 0, i32 1, !dbg !376
  %31093 = load double, ptr %31092, align 8, !dbg !376
  %31094 = call { double, double } @make_vec(double %31088, double %31090, double %31091, double %31093), !dbg !376
  %31095 = extractvalue { double, double } %31094, 0, !dbg !376
  store double %31095, ptr %17, align 8, !dbg !376
  %31096 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31097 = extractvalue { double, double } %31094, 1, !dbg !376
  store double %31097, ptr %31096, align 8, !dbg !376
  %31098 = load double, ptr %16, align 8, !dbg !377
  %31099 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31100 = load double, ptr %31099, align 8, !dbg !377
  %31101 = load double, ptr %17, align 8, !dbg !377
  %31102 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31103 = load double, ptr %31102, align 8, !dbg !377
  %31104 = call double @cross(double %31098, double %31100, double %31101, double %31103), !dbg !377
  %31105 = load i32, ptr %10, align 4, !dbg !378
  %31106 = sext i32 %31105 to i64, !dbg !379
  %31107 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31106, !dbg !379
  %31108 = load double, ptr %6, align 8, !dbg !380
  %31109 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31110 = load double, ptr %31109, align 8, !dbg !380
  %31111 = load double, ptr %31107, align 16, !dbg !380
  %31112 = getelementptr inbounds { double, double }, ptr %31107, i32 0, i32 1, !dbg !380
  %31113 = load double, ptr %31112, align 8, !dbg !380
  %31114 = call { double, double } @make_vec(double %31108, double %31110, double %31111, double %31113), !dbg !380
  %31115 = extractvalue { double, double } %31114, 0, !dbg !380
  store double %31115, ptr %18, align 8, !dbg !380
  %31116 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31117 = extractvalue { double, double } %31114, 1, !dbg !380
  store double %31117, ptr %31116, align 8, !dbg !380
  %31118 = load i32, ptr %10, align 4, !dbg !381
  %31119 = add nsw i32 %31118, 1, !dbg !382
  %31120 = sext i32 %31119 to i64, !dbg !383
  %31121 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31120, !dbg !383
  %31122 = load double, ptr %6, align 8, !dbg !384
  %31123 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31124 = load double, ptr %31123, align 8, !dbg !384
  %31125 = load double, ptr %31121, align 16, !dbg !384
  %31126 = getelementptr inbounds { double, double }, ptr %31121, i32 0, i32 1, !dbg !384
  %31127 = load double, ptr %31126, align 8, !dbg !384
  %31128 = call { double, double } @make_vec(double %31122, double %31124, double %31125, double %31127), !dbg !384
  %31129 = extractvalue { double, double } %31128, 0, !dbg !384
  store double %31129, ptr %19, align 8, !dbg !384
  %31130 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31131 = extractvalue { double, double } %31128, 1, !dbg !384
  store double %31131, ptr %31130, align 8, !dbg !384
  %31132 = load double, ptr %18, align 8, !dbg !385
  %31133 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31134 = load double, ptr %31133, align 8, !dbg !385
  %31135 = load double, ptr %19, align 8, !dbg !385
  %31136 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31137 = load double, ptr %31136, align 8, !dbg !385
  %31138 = call double @dot(double %31132, double %31134, double %31135, double %31137), !dbg !385
  %31139 = call double @atan2(double noundef %31104, double noundef %31138) #6, !dbg !386
  store double %31139, ptr %13, align 8, !dbg !387
  %31140 = load double, ptr %13, align 8, !dbg !388
  %31141 = load double, ptr %14, align 8, !dbg !389
  %31142 = fadd double %31141, %31140, !dbg !389
  store double %31142, ptr %14, align 8, !dbg !389
  %31143 = load double, ptr %13, align 8, !dbg !390
  %31144 = fsub double %31143, 0x400921FB54442D18, !dbg !392
  %31145 = call double @llvm.fabs.f64(double %31144), !dbg !393
  %31146 = fcmp ole double %31145, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31146, label %14330, label %31147, !dbg !395

31147:                                            ; preds = %31070
  %31148 = load double, ptr %13, align 8, !dbg !396
  %31149 = fadd double %31148, 0x400921FB54442D18, !dbg !397
  %31150 = call double @llvm.fabs.f64(double %31149), !dbg !398
  %31151 = fcmp ole double %31150, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31151, label %14330, label %31152, !dbg !400

31152:                                            ; preds = %31147
  br label %31153, !dbg !403

31153:                                            ; preds = %31152
  %31154 = load i32, ptr %10, align 4, !dbg !404
  %31155 = add nsw i32 %31154, 1, !dbg !404
  store i32 %31155, ptr %10, align 4, !dbg !404
  %31156 = load i32, ptr %10, align 4, !dbg !364
  %31157 = load i32, ptr %8, align 4, !dbg !366
  %31158 = icmp slt i32 %31156, %31157, !dbg !367
  br i1 %31158, label %31159, label %48422, !dbg !368

31159:                                            ; preds = %31153
  %31160 = load i32, ptr %10, align 4, !dbg !369
  %31161 = sext i32 %31160 to i64, !dbg !371
  %31162 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31161, !dbg !371
  %31163 = load double, ptr %6, align 8, !dbg !372
  %31164 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31165 = load double, ptr %31164, align 8, !dbg !372
  %31166 = load double, ptr %31162, align 16, !dbg !372
  %31167 = getelementptr inbounds { double, double }, ptr %31162, i32 0, i32 1, !dbg !372
  %31168 = load double, ptr %31167, align 8, !dbg !372
  %31169 = call { double, double } @make_vec(double %31163, double %31165, double %31166, double %31168), !dbg !372
  %31170 = extractvalue { double, double } %31169, 0, !dbg !372
  store double %31170, ptr %16, align 8, !dbg !372
  %31171 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31172 = extractvalue { double, double } %31169, 1, !dbg !372
  store double %31172, ptr %31171, align 8, !dbg !372
  %31173 = load i32, ptr %10, align 4, !dbg !373
  %31174 = add nsw i32 %31173, 1, !dbg !374
  %31175 = sext i32 %31174 to i64, !dbg !375
  %31176 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31175, !dbg !375
  %31177 = load double, ptr %6, align 8, !dbg !376
  %31178 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31179 = load double, ptr %31178, align 8, !dbg !376
  %31180 = load double, ptr %31176, align 16, !dbg !376
  %31181 = getelementptr inbounds { double, double }, ptr %31176, i32 0, i32 1, !dbg !376
  %31182 = load double, ptr %31181, align 8, !dbg !376
  %31183 = call { double, double } @make_vec(double %31177, double %31179, double %31180, double %31182), !dbg !376
  %31184 = extractvalue { double, double } %31183, 0, !dbg !376
  store double %31184, ptr %17, align 8, !dbg !376
  %31185 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31186 = extractvalue { double, double } %31183, 1, !dbg !376
  store double %31186, ptr %31185, align 8, !dbg !376
  %31187 = load double, ptr %16, align 8, !dbg !377
  %31188 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31189 = load double, ptr %31188, align 8, !dbg !377
  %31190 = load double, ptr %17, align 8, !dbg !377
  %31191 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31192 = load double, ptr %31191, align 8, !dbg !377
  %31193 = call double @cross(double %31187, double %31189, double %31190, double %31192), !dbg !377
  %31194 = load i32, ptr %10, align 4, !dbg !378
  %31195 = sext i32 %31194 to i64, !dbg !379
  %31196 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31195, !dbg !379
  %31197 = load double, ptr %6, align 8, !dbg !380
  %31198 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31199 = load double, ptr %31198, align 8, !dbg !380
  %31200 = load double, ptr %31196, align 16, !dbg !380
  %31201 = getelementptr inbounds { double, double }, ptr %31196, i32 0, i32 1, !dbg !380
  %31202 = load double, ptr %31201, align 8, !dbg !380
  %31203 = call { double, double } @make_vec(double %31197, double %31199, double %31200, double %31202), !dbg !380
  %31204 = extractvalue { double, double } %31203, 0, !dbg !380
  store double %31204, ptr %18, align 8, !dbg !380
  %31205 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31206 = extractvalue { double, double } %31203, 1, !dbg !380
  store double %31206, ptr %31205, align 8, !dbg !380
  %31207 = load i32, ptr %10, align 4, !dbg !381
  %31208 = add nsw i32 %31207, 1, !dbg !382
  %31209 = sext i32 %31208 to i64, !dbg !383
  %31210 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31209, !dbg !383
  %31211 = load double, ptr %6, align 8, !dbg !384
  %31212 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31213 = load double, ptr %31212, align 8, !dbg !384
  %31214 = load double, ptr %31210, align 16, !dbg !384
  %31215 = getelementptr inbounds { double, double }, ptr %31210, i32 0, i32 1, !dbg !384
  %31216 = load double, ptr %31215, align 8, !dbg !384
  %31217 = call { double, double } @make_vec(double %31211, double %31213, double %31214, double %31216), !dbg !384
  %31218 = extractvalue { double, double } %31217, 0, !dbg !384
  store double %31218, ptr %19, align 8, !dbg !384
  %31219 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31220 = extractvalue { double, double } %31217, 1, !dbg !384
  store double %31220, ptr %31219, align 8, !dbg !384
  %31221 = load double, ptr %18, align 8, !dbg !385
  %31222 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31223 = load double, ptr %31222, align 8, !dbg !385
  %31224 = load double, ptr %19, align 8, !dbg !385
  %31225 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31226 = load double, ptr %31225, align 8, !dbg !385
  %31227 = call double @dot(double %31221, double %31223, double %31224, double %31226), !dbg !385
  %31228 = call double @atan2(double noundef %31193, double noundef %31227) #6, !dbg !386
  store double %31228, ptr %13, align 8, !dbg !387
  %31229 = load double, ptr %13, align 8, !dbg !388
  %31230 = load double, ptr %14, align 8, !dbg !389
  %31231 = fadd double %31230, %31229, !dbg !389
  store double %31231, ptr %14, align 8, !dbg !389
  %31232 = load double, ptr %13, align 8, !dbg !390
  %31233 = fsub double %31232, 0x400921FB54442D18, !dbg !392
  %31234 = call double @llvm.fabs.f64(double %31233), !dbg !393
  %31235 = fcmp ole double %31234, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31235, label %14330, label %31236, !dbg !395

31236:                                            ; preds = %31159
  %31237 = load double, ptr %13, align 8, !dbg !396
  %31238 = fadd double %31237, 0x400921FB54442D18, !dbg !397
  %31239 = call double @llvm.fabs.f64(double %31238), !dbg !398
  %31240 = fcmp ole double %31239, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31240, label %14330, label %31241, !dbg !400

31241:                                            ; preds = %31236
  br label %31242, !dbg !403

31242:                                            ; preds = %31241
  %31243 = load i32, ptr %10, align 4, !dbg !404
  %31244 = add nsw i32 %31243, 1, !dbg !404
  store i32 %31244, ptr %10, align 4, !dbg !404
  %31245 = load i32, ptr %10, align 4, !dbg !364
  %31246 = load i32, ptr %8, align 4, !dbg !366
  %31247 = icmp slt i32 %31245, %31246, !dbg !367
  br i1 %31247, label %31248, label %48422, !dbg !368

31248:                                            ; preds = %31242
  %31249 = load i32, ptr %10, align 4, !dbg !369
  %31250 = sext i32 %31249 to i64, !dbg !371
  %31251 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31250, !dbg !371
  %31252 = load double, ptr %6, align 8, !dbg !372
  %31253 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31254 = load double, ptr %31253, align 8, !dbg !372
  %31255 = load double, ptr %31251, align 16, !dbg !372
  %31256 = getelementptr inbounds { double, double }, ptr %31251, i32 0, i32 1, !dbg !372
  %31257 = load double, ptr %31256, align 8, !dbg !372
  %31258 = call { double, double } @make_vec(double %31252, double %31254, double %31255, double %31257), !dbg !372
  %31259 = extractvalue { double, double } %31258, 0, !dbg !372
  store double %31259, ptr %16, align 8, !dbg !372
  %31260 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31261 = extractvalue { double, double } %31258, 1, !dbg !372
  store double %31261, ptr %31260, align 8, !dbg !372
  %31262 = load i32, ptr %10, align 4, !dbg !373
  %31263 = add nsw i32 %31262, 1, !dbg !374
  %31264 = sext i32 %31263 to i64, !dbg !375
  %31265 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31264, !dbg !375
  %31266 = load double, ptr %6, align 8, !dbg !376
  %31267 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31268 = load double, ptr %31267, align 8, !dbg !376
  %31269 = load double, ptr %31265, align 16, !dbg !376
  %31270 = getelementptr inbounds { double, double }, ptr %31265, i32 0, i32 1, !dbg !376
  %31271 = load double, ptr %31270, align 8, !dbg !376
  %31272 = call { double, double } @make_vec(double %31266, double %31268, double %31269, double %31271), !dbg !376
  %31273 = extractvalue { double, double } %31272, 0, !dbg !376
  store double %31273, ptr %17, align 8, !dbg !376
  %31274 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31275 = extractvalue { double, double } %31272, 1, !dbg !376
  store double %31275, ptr %31274, align 8, !dbg !376
  %31276 = load double, ptr %16, align 8, !dbg !377
  %31277 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31278 = load double, ptr %31277, align 8, !dbg !377
  %31279 = load double, ptr %17, align 8, !dbg !377
  %31280 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31281 = load double, ptr %31280, align 8, !dbg !377
  %31282 = call double @cross(double %31276, double %31278, double %31279, double %31281), !dbg !377
  %31283 = load i32, ptr %10, align 4, !dbg !378
  %31284 = sext i32 %31283 to i64, !dbg !379
  %31285 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31284, !dbg !379
  %31286 = load double, ptr %6, align 8, !dbg !380
  %31287 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31288 = load double, ptr %31287, align 8, !dbg !380
  %31289 = load double, ptr %31285, align 16, !dbg !380
  %31290 = getelementptr inbounds { double, double }, ptr %31285, i32 0, i32 1, !dbg !380
  %31291 = load double, ptr %31290, align 8, !dbg !380
  %31292 = call { double, double } @make_vec(double %31286, double %31288, double %31289, double %31291), !dbg !380
  %31293 = extractvalue { double, double } %31292, 0, !dbg !380
  store double %31293, ptr %18, align 8, !dbg !380
  %31294 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31295 = extractvalue { double, double } %31292, 1, !dbg !380
  store double %31295, ptr %31294, align 8, !dbg !380
  %31296 = load i32, ptr %10, align 4, !dbg !381
  %31297 = add nsw i32 %31296, 1, !dbg !382
  %31298 = sext i32 %31297 to i64, !dbg !383
  %31299 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31298, !dbg !383
  %31300 = load double, ptr %6, align 8, !dbg !384
  %31301 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31302 = load double, ptr %31301, align 8, !dbg !384
  %31303 = load double, ptr %31299, align 16, !dbg !384
  %31304 = getelementptr inbounds { double, double }, ptr %31299, i32 0, i32 1, !dbg !384
  %31305 = load double, ptr %31304, align 8, !dbg !384
  %31306 = call { double, double } @make_vec(double %31300, double %31302, double %31303, double %31305), !dbg !384
  %31307 = extractvalue { double, double } %31306, 0, !dbg !384
  store double %31307, ptr %19, align 8, !dbg !384
  %31308 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31309 = extractvalue { double, double } %31306, 1, !dbg !384
  store double %31309, ptr %31308, align 8, !dbg !384
  %31310 = load double, ptr %18, align 8, !dbg !385
  %31311 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31312 = load double, ptr %31311, align 8, !dbg !385
  %31313 = load double, ptr %19, align 8, !dbg !385
  %31314 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31315 = load double, ptr %31314, align 8, !dbg !385
  %31316 = call double @dot(double %31310, double %31312, double %31313, double %31315), !dbg !385
  %31317 = call double @atan2(double noundef %31282, double noundef %31316) #6, !dbg !386
  store double %31317, ptr %13, align 8, !dbg !387
  %31318 = load double, ptr %13, align 8, !dbg !388
  %31319 = load double, ptr %14, align 8, !dbg !389
  %31320 = fadd double %31319, %31318, !dbg !389
  store double %31320, ptr %14, align 8, !dbg !389
  %31321 = load double, ptr %13, align 8, !dbg !390
  %31322 = fsub double %31321, 0x400921FB54442D18, !dbg !392
  %31323 = call double @llvm.fabs.f64(double %31322), !dbg !393
  %31324 = fcmp ole double %31323, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31324, label %14330, label %31325, !dbg !395

31325:                                            ; preds = %31248
  %31326 = load double, ptr %13, align 8, !dbg !396
  %31327 = fadd double %31326, 0x400921FB54442D18, !dbg !397
  %31328 = call double @llvm.fabs.f64(double %31327), !dbg !398
  %31329 = fcmp ole double %31328, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31329, label %14330, label %31330, !dbg !400

31330:                                            ; preds = %31325
  br label %31331, !dbg !403

31331:                                            ; preds = %31330
  %31332 = load i32, ptr %10, align 4, !dbg !404
  %31333 = add nsw i32 %31332, 1, !dbg !404
  store i32 %31333, ptr %10, align 4, !dbg !404
  %31334 = load i32, ptr %10, align 4, !dbg !364
  %31335 = load i32, ptr %8, align 4, !dbg !366
  %31336 = icmp slt i32 %31334, %31335, !dbg !367
  br i1 %31336, label %31337, label %48422, !dbg !368

31337:                                            ; preds = %31331
  %31338 = load i32, ptr %10, align 4, !dbg !369
  %31339 = sext i32 %31338 to i64, !dbg !371
  %31340 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31339, !dbg !371
  %31341 = load double, ptr %6, align 8, !dbg !372
  %31342 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31343 = load double, ptr %31342, align 8, !dbg !372
  %31344 = load double, ptr %31340, align 16, !dbg !372
  %31345 = getelementptr inbounds { double, double }, ptr %31340, i32 0, i32 1, !dbg !372
  %31346 = load double, ptr %31345, align 8, !dbg !372
  %31347 = call { double, double } @make_vec(double %31341, double %31343, double %31344, double %31346), !dbg !372
  %31348 = extractvalue { double, double } %31347, 0, !dbg !372
  store double %31348, ptr %16, align 8, !dbg !372
  %31349 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31350 = extractvalue { double, double } %31347, 1, !dbg !372
  store double %31350, ptr %31349, align 8, !dbg !372
  %31351 = load i32, ptr %10, align 4, !dbg !373
  %31352 = add nsw i32 %31351, 1, !dbg !374
  %31353 = sext i32 %31352 to i64, !dbg !375
  %31354 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31353, !dbg !375
  %31355 = load double, ptr %6, align 8, !dbg !376
  %31356 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31357 = load double, ptr %31356, align 8, !dbg !376
  %31358 = load double, ptr %31354, align 16, !dbg !376
  %31359 = getelementptr inbounds { double, double }, ptr %31354, i32 0, i32 1, !dbg !376
  %31360 = load double, ptr %31359, align 8, !dbg !376
  %31361 = call { double, double } @make_vec(double %31355, double %31357, double %31358, double %31360), !dbg !376
  %31362 = extractvalue { double, double } %31361, 0, !dbg !376
  store double %31362, ptr %17, align 8, !dbg !376
  %31363 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31364 = extractvalue { double, double } %31361, 1, !dbg !376
  store double %31364, ptr %31363, align 8, !dbg !376
  %31365 = load double, ptr %16, align 8, !dbg !377
  %31366 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31367 = load double, ptr %31366, align 8, !dbg !377
  %31368 = load double, ptr %17, align 8, !dbg !377
  %31369 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31370 = load double, ptr %31369, align 8, !dbg !377
  %31371 = call double @cross(double %31365, double %31367, double %31368, double %31370), !dbg !377
  %31372 = load i32, ptr %10, align 4, !dbg !378
  %31373 = sext i32 %31372 to i64, !dbg !379
  %31374 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31373, !dbg !379
  %31375 = load double, ptr %6, align 8, !dbg !380
  %31376 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31377 = load double, ptr %31376, align 8, !dbg !380
  %31378 = load double, ptr %31374, align 16, !dbg !380
  %31379 = getelementptr inbounds { double, double }, ptr %31374, i32 0, i32 1, !dbg !380
  %31380 = load double, ptr %31379, align 8, !dbg !380
  %31381 = call { double, double } @make_vec(double %31375, double %31377, double %31378, double %31380), !dbg !380
  %31382 = extractvalue { double, double } %31381, 0, !dbg !380
  store double %31382, ptr %18, align 8, !dbg !380
  %31383 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31384 = extractvalue { double, double } %31381, 1, !dbg !380
  store double %31384, ptr %31383, align 8, !dbg !380
  %31385 = load i32, ptr %10, align 4, !dbg !381
  %31386 = add nsw i32 %31385, 1, !dbg !382
  %31387 = sext i32 %31386 to i64, !dbg !383
  %31388 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31387, !dbg !383
  %31389 = load double, ptr %6, align 8, !dbg !384
  %31390 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31391 = load double, ptr %31390, align 8, !dbg !384
  %31392 = load double, ptr %31388, align 16, !dbg !384
  %31393 = getelementptr inbounds { double, double }, ptr %31388, i32 0, i32 1, !dbg !384
  %31394 = load double, ptr %31393, align 8, !dbg !384
  %31395 = call { double, double } @make_vec(double %31389, double %31391, double %31392, double %31394), !dbg !384
  %31396 = extractvalue { double, double } %31395, 0, !dbg !384
  store double %31396, ptr %19, align 8, !dbg !384
  %31397 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31398 = extractvalue { double, double } %31395, 1, !dbg !384
  store double %31398, ptr %31397, align 8, !dbg !384
  %31399 = load double, ptr %18, align 8, !dbg !385
  %31400 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31401 = load double, ptr %31400, align 8, !dbg !385
  %31402 = load double, ptr %19, align 8, !dbg !385
  %31403 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31404 = load double, ptr %31403, align 8, !dbg !385
  %31405 = call double @dot(double %31399, double %31401, double %31402, double %31404), !dbg !385
  %31406 = call double @atan2(double noundef %31371, double noundef %31405) #6, !dbg !386
  store double %31406, ptr %13, align 8, !dbg !387
  %31407 = load double, ptr %13, align 8, !dbg !388
  %31408 = load double, ptr %14, align 8, !dbg !389
  %31409 = fadd double %31408, %31407, !dbg !389
  store double %31409, ptr %14, align 8, !dbg !389
  %31410 = load double, ptr %13, align 8, !dbg !390
  %31411 = fsub double %31410, 0x400921FB54442D18, !dbg !392
  %31412 = call double @llvm.fabs.f64(double %31411), !dbg !393
  %31413 = fcmp ole double %31412, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31413, label %14330, label %31414, !dbg !395

31414:                                            ; preds = %31337
  %31415 = load double, ptr %13, align 8, !dbg !396
  %31416 = fadd double %31415, 0x400921FB54442D18, !dbg !397
  %31417 = call double @llvm.fabs.f64(double %31416), !dbg !398
  %31418 = fcmp ole double %31417, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31418, label %14330, label %31419, !dbg !400

31419:                                            ; preds = %31414
  br label %31420, !dbg !403

31420:                                            ; preds = %31419
  %31421 = load i32, ptr %10, align 4, !dbg !404
  %31422 = add nsw i32 %31421, 1, !dbg !404
  store i32 %31422, ptr %10, align 4, !dbg !404
  %31423 = load i32, ptr %10, align 4, !dbg !364
  %31424 = load i32, ptr %8, align 4, !dbg !366
  %31425 = icmp slt i32 %31423, %31424, !dbg !367
  br i1 %31425, label %31426, label %48422, !dbg !368

31426:                                            ; preds = %31420
  %31427 = load i32, ptr %10, align 4, !dbg !369
  %31428 = sext i32 %31427 to i64, !dbg !371
  %31429 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31428, !dbg !371
  %31430 = load double, ptr %6, align 8, !dbg !372
  %31431 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31432 = load double, ptr %31431, align 8, !dbg !372
  %31433 = load double, ptr %31429, align 16, !dbg !372
  %31434 = getelementptr inbounds { double, double }, ptr %31429, i32 0, i32 1, !dbg !372
  %31435 = load double, ptr %31434, align 8, !dbg !372
  %31436 = call { double, double } @make_vec(double %31430, double %31432, double %31433, double %31435), !dbg !372
  %31437 = extractvalue { double, double } %31436, 0, !dbg !372
  store double %31437, ptr %16, align 8, !dbg !372
  %31438 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31439 = extractvalue { double, double } %31436, 1, !dbg !372
  store double %31439, ptr %31438, align 8, !dbg !372
  %31440 = load i32, ptr %10, align 4, !dbg !373
  %31441 = add nsw i32 %31440, 1, !dbg !374
  %31442 = sext i32 %31441 to i64, !dbg !375
  %31443 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31442, !dbg !375
  %31444 = load double, ptr %6, align 8, !dbg !376
  %31445 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31446 = load double, ptr %31445, align 8, !dbg !376
  %31447 = load double, ptr %31443, align 16, !dbg !376
  %31448 = getelementptr inbounds { double, double }, ptr %31443, i32 0, i32 1, !dbg !376
  %31449 = load double, ptr %31448, align 8, !dbg !376
  %31450 = call { double, double } @make_vec(double %31444, double %31446, double %31447, double %31449), !dbg !376
  %31451 = extractvalue { double, double } %31450, 0, !dbg !376
  store double %31451, ptr %17, align 8, !dbg !376
  %31452 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31453 = extractvalue { double, double } %31450, 1, !dbg !376
  store double %31453, ptr %31452, align 8, !dbg !376
  %31454 = load double, ptr %16, align 8, !dbg !377
  %31455 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31456 = load double, ptr %31455, align 8, !dbg !377
  %31457 = load double, ptr %17, align 8, !dbg !377
  %31458 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31459 = load double, ptr %31458, align 8, !dbg !377
  %31460 = call double @cross(double %31454, double %31456, double %31457, double %31459), !dbg !377
  %31461 = load i32, ptr %10, align 4, !dbg !378
  %31462 = sext i32 %31461 to i64, !dbg !379
  %31463 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31462, !dbg !379
  %31464 = load double, ptr %6, align 8, !dbg !380
  %31465 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31466 = load double, ptr %31465, align 8, !dbg !380
  %31467 = load double, ptr %31463, align 16, !dbg !380
  %31468 = getelementptr inbounds { double, double }, ptr %31463, i32 0, i32 1, !dbg !380
  %31469 = load double, ptr %31468, align 8, !dbg !380
  %31470 = call { double, double } @make_vec(double %31464, double %31466, double %31467, double %31469), !dbg !380
  %31471 = extractvalue { double, double } %31470, 0, !dbg !380
  store double %31471, ptr %18, align 8, !dbg !380
  %31472 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31473 = extractvalue { double, double } %31470, 1, !dbg !380
  store double %31473, ptr %31472, align 8, !dbg !380
  %31474 = load i32, ptr %10, align 4, !dbg !381
  %31475 = add nsw i32 %31474, 1, !dbg !382
  %31476 = sext i32 %31475 to i64, !dbg !383
  %31477 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31476, !dbg !383
  %31478 = load double, ptr %6, align 8, !dbg !384
  %31479 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31480 = load double, ptr %31479, align 8, !dbg !384
  %31481 = load double, ptr %31477, align 16, !dbg !384
  %31482 = getelementptr inbounds { double, double }, ptr %31477, i32 0, i32 1, !dbg !384
  %31483 = load double, ptr %31482, align 8, !dbg !384
  %31484 = call { double, double } @make_vec(double %31478, double %31480, double %31481, double %31483), !dbg !384
  %31485 = extractvalue { double, double } %31484, 0, !dbg !384
  store double %31485, ptr %19, align 8, !dbg !384
  %31486 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31487 = extractvalue { double, double } %31484, 1, !dbg !384
  store double %31487, ptr %31486, align 8, !dbg !384
  %31488 = load double, ptr %18, align 8, !dbg !385
  %31489 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31490 = load double, ptr %31489, align 8, !dbg !385
  %31491 = load double, ptr %19, align 8, !dbg !385
  %31492 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31493 = load double, ptr %31492, align 8, !dbg !385
  %31494 = call double @dot(double %31488, double %31490, double %31491, double %31493), !dbg !385
  %31495 = call double @atan2(double noundef %31460, double noundef %31494) #6, !dbg !386
  store double %31495, ptr %13, align 8, !dbg !387
  %31496 = load double, ptr %13, align 8, !dbg !388
  %31497 = load double, ptr %14, align 8, !dbg !389
  %31498 = fadd double %31497, %31496, !dbg !389
  store double %31498, ptr %14, align 8, !dbg !389
  %31499 = load double, ptr %13, align 8, !dbg !390
  %31500 = fsub double %31499, 0x400921FB54442D18, !dbg !392
  %31501 = call double @llvm.fabs.f64(double %31500), !dbg !393
  %31502 = fcmp ole double %31501, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31502, label %14330, label %31503, !dbg !395

31503:                                            ; preds = %31426
  %31504 = load double, ptr %13, align 8, !dbg !396
  %31505 = fadd double %31504, 0x400921FB54442D18, !dbg !397
  %31506 = call double @llvm.fabs.f64(double %31505), !dbg !398
  %31507 = fcmp ole double %31506, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31507, label %14330, label %31508, !dbg !400

31508:                                            ; preds = %31503
  br label %31509, !dbg !403

31509:                                            ; preds = %31508
  %31510 = load i32, ptr %10, align 4, !dbg !404
  %31511 = add nsw i32 %31510, 1, !dbg !404
  store i32 %31511, ptr %10, align 4, !dbg !404
  %31512 = load i32, ptr %10, align 4, !dbg !364
  %31513 = load i32, ptr %8, align 4, !dbg !366
  %31514 = icmp slt i32 %31512, %31513, !dbg !367
  br i1 %31514, label %31515, label %48422, !dbg !368

31515:                                            ; preds = %31509
  %31516 = load i32, ptr %10, align 4, !dbg !369
  %31517 = sext i32 %31516 to i64, !dbg !371
  %31518 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31517, !dbg !371
  %31519 = load double, ptr %6, align 8, !dbg !372
  %31520 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31521 = load double, ptr %31520, align 8, !dbg !372
  %31522 = load double, ptr %31518, align 16, !dbg !372
  %31523 = getelementptr inbounds { double, double }, ptr %31518, i32 0, i32 1, !dbg !372
  %31524 = load double, ptr %31523, align 8, !dbg !372
  %31525 = call { double, double } @make_vec(double %31519, double %31521, double %31522, double %31524), !dbg !372
  %31526 = extractvalue { double, double } %31525, 0, !dbg !372
  store double %31526, ptr %16, align 8, !dbg !372
  %31527 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31528 = extractvalue { double, double } %31525, 1, !dbg !372
  store double %31528, ptr %31527, align 8, !dbg !372
  %31529 = load i32, ptr %10, align 4, !dbg !373
  %31530 = add nsw i32 %31529, 1, !dbg !374
  %31531 = sext i32 %31530 to i64, !dbg !375
  %31532 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31531, !dbg !375
  %31533 = load double, ptr %6, align 8, !dbg !376
  %31534 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31535 = load double, ptr %31534, align 8, !dbg !376
  %31536 = load double, ptr %31532, align 16, !dbg !376
  %31537 = getelementptr inbounds { double, double }, ptr %31532, i32 0, i32 1, !dbg !376
  %31538 = load double, ptr %31537, align 8, !dbg !376
  %31539 = call { double, double } @make_vec(double %31533, double %31535, double %31536, double %31538), !dbg !376
  %31540 = extractvalue { double, double } %31539, 0, !dbg !376
  store double %31540, ptr %17, align 8, !dbg !376
  %31541 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31542 = extractvalue { double, double } %31539, 1, !dbg !376
  store double %31542, ptr %31541, align 8, !dbg !376
  %31543 = load double, ptr %16, align 8, !dbg !377
  %31544 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31545 = load double, ptr %31544, align 8, !dbg !377
  %31546 = load double, ptr %17, align 8, !dbg !377
  %31547 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31548 = load double, ptr %31547, align 8, !dbg !377
  %31549 = call double @cross(double %31543, double %31545, double %31546, double %31548), !dbg !377
  %31550 = load i32, ptr %10, align 4, !dbg !378
  %31551 = sext i32 %31550 to i64, !dbg !379
  %31552 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31551, !dbg !379
  %31553 = load double, ptr %6, align 8, !dbg !380
  %31554 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31555 = load double, ptr %31554, align 8, !dbg !380
  %31556 = load double, ptr %31552, align 16, !dbg !380
  %31557 = getelementptr inbounds { double, double }, ptr %31552, i32 0, i32 1, !dbg !380
  %31558 = load double, ptr %31557, align 8, !dbg !380
  %31559 = call { double, double } @make_vec(double %31553, double %31555, double %31556, double %31558), !dbg !380
  %31560 = extractvalue { double, double } %31559, 0, !dbg !380
  store double %31560, ptr %18, align 8, !dbg !380
  %31561 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31562 = extractvalue { double, double } %31559, 1, !dbg !380
  store double %31562, ptr %31561, align 8, !dbg !380
  %31563 = load i32, ptr %10, align 4, !dbg !381
  %31564 = add nsw i32 %31563, 1, !dbg !382
  %31565 = sext i32 %31564 to i64, !dbg !383
  %31566 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31565, !dbg !383
  %31567 = load double, ptr %6, align 8, !dbg !384
  %31568 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31569 = load double, ptr %31568, align 8, !dbg !384
  %31570 = load double, ptr %31566, align 16, !dbg !384
  %31571 = getelementptr inbounds { double, double }, ptr %31566, i32 0, i32 1, !dbg !384
  %31572 = load double, ptr %31571, align 8, !dbg !384
  %31573 = call { double, double } @make_vec(double %31567, double %31569, double %31570, double %31572), !dbg !384
  %31574 = extractvalue { double, double } %31573, 0, !dbg !384
  store double %31574, ptr %19, align 8, !dbg !384
  %31575 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31576 = extractvalue { double, double } %31573, 1, !dbg !384
  store double %31576, ptr %31575, align 8, !dbg !384
  %31577 = load double, ptr %18, align 8, !dbg !385
  %31578 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31579 = load double, ptr %31578, align 8, !dbg !385
  %31580 = load double, ptr %19, align 8, !dbg !385
  %31581 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31582 = load double, ptr %31581, align 8, !dbg !385
  %31583 = call double @dot(double %31577, double %31579, double %31580, double %31582), !dbg !385
  %31584 = call double @atan2(double noundef %31549, double noundef %31583) #6, !dbg !386
  store double %31584, ptr %13, align 8, !dbg !387
  %31585 = load double, ptr %13, align 8, !dbg !388
  %31586 = load double, ptr %14, align 8, !dbg !389
  %31587 = fadd double %31586, %31585, !dbg !389
  store double %31587, ptr %14, align 8, !dbg !389
  %31588 = load double, ptr %13, align 8, !dbg !390
  %31589 = fsub double %31588, 0x400921FB54442D18, !dbg !392
  %31590 = call double @llvm.fabs.f64(double %31589), !dbg !393
  %31591 = fcmp ole double %31590, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31591, label %14330, label %31592, !dbg !395

31592:                                            ; preds = %31515
  %31593 = load double, ptr %13, align 8, !dbg !396
  %31594 = fadd double %31593, 0x400921FB54442D18, !dbg !397
  %31595 = call double @llvm.fabs.f64(double %31594), !dbg !398
  %31596 = fcmp ole double %31595, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31596, label %14330, label %31597, !dbg !400

31597:                                            ; preds = %31592
  br label %31598, !dbg !403

31598:                                            ; preds = %31597
  %31599 = load i32, ptr %10, align 4, !dbg !404
  %31600 = add nsw i32 %31599, 1, !dbg !404
  store i32 %31600, ptr %10, align 4, !dbg !404
  %31601 = load i32, ptr %10, align 4, !dbg !364
  %31602 = load i32, ptr %8, align 4, !dbg !366
  %31603 = icmp slt i32 %31601, %31602, !dbg !367
  br i1 %31603, label %31604, label %48422, !dbg !368

31604:                                            ; preds = %31598
  %31605 = load i32, ptr %10, align 4, !dbg !369
  %31606 = sext i32 %31605 to i64, !dbg !371
  %31607 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31606, !dbg !371
  %31608 = load double, ptr %6, align 8, !dbg !372
  %31609 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31610 = load double, ptr %31609, align 8, !dbg !372
  %31611 = load double, ptr %31607, align 16, !dbg !372
  %31612 = getelementptr inbounds { double, double }, ptr %31607, i32 0, i32 1, !dbg !372
  %31613 = load double, ptr %31612, align 8, !dbg !372
  %31614 = call { double, double } @make_vec(double %31608, double %31610, double %31611, double %31613), !dbg !372
  %31615 = extractvalue { double, double } %31614, 0, !dbg !372
  store double %31615, ptr %16, align 8, !dbg !372
  %31616 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31617 = extractvalue { double, double } %31614, 1, !dbg !372
  store double %31617, ptr %31616, align 8, !dbg !372
  %31618 = load i32, ptr %10, align 4, !dbg !373
  %31619 = add nsw i32 %31618, 1, !dbg !374
  %31620 = sext i32 %31619 to i64, !dbg !375
  %31621 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31620, !dbg !375
  %31622 = load double, ptr %6, align 8, !dbg !376
  %31623 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31624 = load double, ptr %31623, align 8, !dbg !376
  %31625 = load double, ptr %31621, align 16, !dbg !376
  %31626 = getelementptr inbounds { double, double }, ptr %31621, i32 0, i32 1, !dbg !376
  %31627 = load double, ptr %31626, align 8, !dbg !376
  %31628 = call { double, double } @make_vec(double %31622, double %31624, double %31625, double %31627), !dbg !376
  %31629 = extractvalue { double, double } %31628, 0, !dbg !376
  store double %31629, ptr %17, align 8, !dbg !376
  %31630 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31631 = extractvalue { double, double } %31628, 1, !dbg !376
  store double %31631, ptr %31630, align 8, !dbg !376
  %31632 = load double, ptr %16, align 8, !dbg !377
  %31633 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31634 = load double, ptr %31633, align 8, !dbg !377
  %31635 = load double, ptr %17, align 8, !dbg !377
  %31636 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31637 = load double, ptr %31636, align 8, !dbg !377
  %31638 = call double @cross(double %31632, double %31634, double %31635, double %31637), !dbg !377
  %31639 = load i32, ptr %10, align 4, !dbg !378
  %31640 = sext i32 %31639 to i64, !dbg !379
  %31641 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31640, !dbg !379
  %31642 = load double, ptr %6, align 8, !dbg !380
  %31643 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31644 = load double, ptr %31643, align 8, !dbg !380
  %31645 = load double, ptr %31641, align 16, !dbg !380
  %31646 = getelementptr inbounds { double, double }, ptr %31641, i32 0, i32 1, !dbg !380
  %31647 = load double, ptr %31646, align 8, !dbg !380
  %31648 = call { double, double } @make_vec(double %31642, double %31644, double %31645, double %31647), !dbg !380
  %31649 = extractvalue { double, double } %31648, 0, !dbg !380
  store double %31649, ptr %18, align 8, !dbg !380
  %31650 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31651 = extractvalue { double, double } %31648, 1, !dbg !380
  store double %31651, ptr %31650, align 8, !dbg !380
  %31652 = load i32, ptr %10, align 4, !dbg !381
  %31653 = add nsw i32 %31652, 1, !dbg !382
  %31654 = sext i32 %31653 to i64, !dbg !383
  %31655 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31654, !dbg !383
  %31656 = load double, ptr %6, align 8, !dbg !384
  %31657 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31658 = load double, ptr %31657, align 8, !dbg !384
  %31659 = load double, ptr %31655, align 16, !dbg !384
  %31660 = getelementptr inbounds { double, double }, ptr %31655, i32 0, i32 1, !dbg !384
  %31661 = load double, ptr %31660, align 8, !dbg !384
  %31662 = call { double, double } @make_vec(double %31656, double %31658, double %31659, double %31661), !dbg !384
  %31663 = extractvalue { double, double } %31662, 0, !dbg !384
  store double %31663, ptr %19, align 8, !dbg !384
  %31664 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31665 = extractvalue { double, double } %31662, 1, !dbg !384
  store double %31665, ptr %31664, align 8, !dbg !384
  %31666 = load double, ptr %18, align 8, !dbg !385
  %31667 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31668 = load double, ptr %31667, align 8, !dbg !385
  %31669 = load double, ptr %19, align 8, !dbg !385
  %31670 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31671 = load double, ptr %31670, align 8, !dbg !385
  %31672 = call double @dot(double %31666, double %31668, double %31669, double %31671), !dbg !385
  %31673 = call double @atan2(double noundef %31638, double noundef %31672) #6, !dbg !386
  store double %31673, ptr %13, align 8, !dbg !387
  %31674 = load double, ptr %13, align 8, !dbg !388
  %31675 = load double, ptr %14, align 8, !dbg !389
  %31676 = fadd double %31675, %31674, !dbg !389
  store double %31676, ptr %14, align 8, !dbg !389
  %31677 = load double, ptr %13, align 8, !dbg !390
  %31678 = fsub double %31677, 0x400921FB54442D18, !dbg !392
  %31679 = call double @llvm.fabs.f64(double %31678), !dbg !393
  %31680 = fcmp ole double %31679, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31680, label %14330, label %31681, !dbg !395

31681:                                            ; preds = %31604
  %31682 = load double, ptr %13, align 8, !dbg !396
  %31683 = fadd double %31682, 0x400921FB54442D18, !dbg !397
  %31684 = call double @llvm.fabs.f64(double %31683), !dbg !398
  %31685 = fcmp ole double %31684, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31685, label %14330, label %31686, !dbg !400

31686:                                            ; preds = %31681
  br label %31687, !dbg !403

31687:                                            ; preds = %31686
  %31688 = load i32, ptr %10, align 4, !dbg !404
  %31689 = add nsw i32 %31688, 1, !dbg !404
  store i32 %31689, ptr %10, align 4, !dbg !404
  %31690 = load i32, ptr %10, align 4, !dbg !364
  %31691 = load i32, ptr %8, align 4, !dbg !366
  %31692 = icmp slt i32 %31690, %31691, !dbg !367
  br i1 %31692, label %31693, label %48422, !dbg !368

31693:                                            ; preds = %31687
  %31694 = load i32, ptr %10, align 4, !dbg !369
  %31695 = sext i32 %31694 to i64, !dbg !371
  %31696 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31695, !dbg !371
  %31697 = load double, ptr %6, align 8, !dbg !372
  %31698 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31699 = load double, ptr %31698, align 8, !dbg !372
  %31700 = load double, ptr %31696, align 16, !dbg !372
  %31701 = getelementptr inbounds { double, double }, ptr %31696, i32 0, i32 1, !dbg !372
  %31702 = load double, ptr %31701, align 8, !dbg !372
  %31703 = call { double, double } @make_vec(double %31697, double %31699, double %31700, double %31702), !dbg !372
  %31704 = extractvalue { double, double } %31703, 0, !dbg !372
  store double %31704, ptr %16, align 8, !dbg !372
  %31705 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31706 = extractvalue { double, double } %31703, 1, !dbg !372
  store double %31706, ptr %31705, align 8, !dbg !372
  %31707 = load i32, ptr %10, align 4, !dbg !373
  %31708 = add nsw i32 %31707, 1, !dbg !374
  %31709 = sext i32 %31708 to i64, !dbg !375
  %31710 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31709, !dbg !375
  %31711 = load double, ptr %6, align 8, !dbg !376
  %31712 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31713 = load double, ptr %31712, align 8, !dbg !376
  %31714 = load double, ptr %31710, align 16, !dbg !376
  %31715 = getelementptr inbounds { double, double }, ptr %31710, i32 0, i32 1, !dbg !376
  %31716 = load double, ptr %31715, align 8, !dbg !376
  %31717 = call { double, double } @make_vec(double %31711, double %31713, double %31714, double %31716), !dbg !376
  %31718 = extractvalue { double, double } %31717, 0, !dbg !376
  store double %31718, ptr %17, align 8, !dbg !376
  %31719 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31720 = extractvalue { double, double } %31717, 1, !dbg !376
  store double %31720, ptr %31719, align 8, !dbg !376
  %31721 = load double, ptr %16, align 8, !dbg !377
  %31722 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31723 = load double, ptr %31722, align 8, !dbg !377
  %31724 = load double, ptr %17, align 8, !dbg !377
  %31725 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31726 = load double, ptr %31725, align 8, !dbg !377
  %31727 = call double @cross(double %31721, double %31723, double %31724, double %31726), !dbg !377
  %31728 = load i32, ptr %10, align 4, !dbg !378
  %31729 = sext i32 %31728 to i64, !dbg !379
  %31730 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31729, !dbg !379
  %31731 = load double, ptr %6, align 8, !dbg !380
  %31732 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31733 = load double, ptr %31732, align 8, !dbg !380
  %31734 = load double, ptr %31730, align 16, !dbg !380
  %31735 = getelementptr inbounds { double, double }, ptr %31730, i32 0, i32 1, !dbg !380
  %31736 = load double, ptr %31735, align 8, !dbg !380
  %31737 = call { double, double } @make_vec(double %31731, double %31733, double %31734, double %31736), !dbg !380
  %31738 = extractvalue { double, double } %31737, 0, !dbg !380
  store double %31738, ptr %18, align 8, !dbg !380
  %31739 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31740 = extractvalue { double, double } %31737, 1, !dbg !380
  store double %31740, ptr %31739, align 8, !dbg !380
  %31741 = load i32, ptr %10, align 4, !dbg !381
  %31742 = add nsw i32 %31741, 1, !dbg !382
  %31743 = sext i32 %31742 to i64, !dbg !383
  %31744 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31743, !dbg !383
  %31745 = load double, ptr %6, align 8, !dbg !384
  %31746 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31747 = load double, ptr %31746, align 8, !dbg !384
  %31748 = load double, ptr %31744, align 16, !dbg !384
  %31749 = getelementptr inbounds { double, double }, ptr %31744, i32 0, i32 1, !dbg !384
  %31750 = load double, ptr %31749, align 8, !dbg !384
  %31751 = call { double, double } @make_vec(double %31745, double %31747, double %31748, double %31750), !dbg !384
  %31752 = extractvalue { double, double } %31751, 0, !dbg !384
  store double %31752, ptr %19, align 8, !dbg !384
  %31753 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31754 = extractvalue { double, double } %31751, 1, !dbg !384
  store double %31754, ptr %31753, align 8, !dbg !384
  %31755 = load double, ptr %18, align 8, !dbg !385
  %31756 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31757 = load double, ptr %31756, align 8, !dbg !385
  %31758 = load double, ptr %19, align 8, !dbg !385
  %31759 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31760 = load double, ptr %31759, align 8, !dbg !385
  %31761 = call double @dot(double %31755, double %31757, double %31758, double %31760), !dbg !385
  %31762 = call double @atan2(double noundef %31727, double noundef %31761) #6, !dbg !386
  store double %31762, ptr %13, align 8, !dbg !387
  %31763 = load double, ptr %13, align 8, !dbg !388
  %31764 = load double, ptr %14, align 8, !dbg !389
  %31765 = fadd double %31764, %31763, !dbg !389
  store double %31765, ptr %14, align 8, !dbg !389
  %31766 = load double, ptr %13, align 8, !dbg !390
  %31767 = fsub double %31766, 0x400921FB54442D18, !dbg !392
  %31768 = call double @llvm.fabs.f64(double %31767), !dbg !393
  %31769 = fcmp ole double %31768, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31769, label %14330, label %31770, !dbg !395

31770:                                            ; preds = %31693
  %31771 = load double, ptr %13, align 8, !dbg !396
  %31772 = fadd double %31771, 0x400921FB54442D18, !dbg !397
  %31773 = call double @llvm.fabs.f64(double %31772), !dbg !398
  %31774 = fcmp ole double %31773, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31774, label %14330, label %31775, !dbg !400

31775:                                            ; preds = %31770
  br label %31776, !dbg !403

31776:                                            ; preds = %31775
  %31777 = load i32, ptr %10, align 4, !dbg !404
  %31778 = add nsw i32 %31777, 1, !dbg !404
  store i32 %31778, ptr %10, align 4, !dbg !404
  %31779 = load i32, ptr %10, align 4, !dbg !364
  %31780 = load i32, ptr %8, align 4, !dbg !366
  %31781 = icmp slt i32 %31779, %31780, !dbg !367
  br i1 %31781, label %31782, label %48422, !dbg !368

31782:                                            ; preds = %31776
  %31783 = load i32, ptr %10, align 4, !dbg !369
  %31784 = sext i32 %31783 to i64, !dbg !371
  %31785 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31784, !dbg !371
  %31786 = load double, ptr %6, align 8, !dbg !372
  %31787 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31788 = load double, ptr %31787, align 8, !dbg !372
  %31789 = load double, ptr %31785, align 16, !dbg !372
  %31790 = getelementptr inbounds { double, double }, ptr %31785, i32 0, i32 1, !dbg !372
  %31791 = load double, ptr %31790, align 8, !dbg !372
  %31792 = call { double, double } @make_vec(double %31786, double %31788, double %31789, double %31791), !dbg !372
  %31793 = extractvalue { double, double } %31792, 0, !dbg !372
  store double %31793, ptr %16, align 8, !dbg !372
  %31794 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31795 = extractvalue { double, double } %31792, 1, !dbg !372
  store double %31795, ptr %31794, align 8, !dbg !372
  %31796 = load i32, ptr %10, align 4, !dbg !373
  %31797 = add nsw i32 %31796, 1, !dbg !374
  %31798 = sext i32 %31797 to i64, !dbg !375
  %31799 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31798, !dbg !375
  %31800 = load double, ptr %6, align 8, !dbg !376
  %31801 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31802 = load double, ptr %31801, align 8, !dbg !376
  %31803 = load double, ptr %31799, align 16, !dbg !376
  %31804 = getelementptr inbounds { double, double }, ptr %31799, i32 0, i32 1, !dbg !376
  %31805 = load double, ptr %31804, align 8, !dbg !376
  %31806 = call { double, double } @make_vec(double %31800, double %31802, double %31803, double %31805), !dbg !376
  %31807 = extractvalue { double, double } %31806, 0, !dbg !376
  store double %31807, ptr %17, align 8, !dbg !376
  %31808 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31809 = extractvalue { double, double } %31806, 1, !dbg !376
  store double %31809, ptr %31808, align 8, !dbg !376
  %31810 = load double, ptr %16, align 8, !dbg !377
  %31811 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31812 = load double, ptr %31811, align 8, !dbg !377
  %31813 = load double, ptr %17, align 8, !dbg !377
  %31814 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31815 = load double, ptr %31814, align 8, !dbg !377
  %31816 = call double @cross(double %31810, double %31812, double %31813, double %31815), !dbg !377
  %31817 = load i32, ptr %10, align 4, !dbg !378
  %31818 = sext i32 %31817 to i64, !dbg !379
  %31819 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31818, !dbg !379
  %31820 = load double, ptr %6, align 8, !dbg !380
  %31821 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31822 = load double, ptr %31821, align 8, !dbg !380
  %31823 = load double, ptr %31819, align 16, !dbg !380
  %31824 = getelementptr inbounds { double, double }, ptr %31819, i32 0, i32 1, !dbg !380
  %31825 = load double, ptr %31824, align 8, !dbg !380
  %31826 = call { double, double } @make_vec(double %31820, double %31822, double %31823, double %31825), !dbg !380
  %31827 = extractvalue { double, double } %31826, 0, !dbg !380
  store double %31827, ptr %18, align 8, !dbg !380
  %31828 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31829 = extractvalue { double, double } %31826, 1, !dbg !380
  store double %31829, ptr %31828, align 8, !dbg !380
  %31830 = load i32, ptr %10, align 4, !dbg !381
  %31831 = add nsw i32 %31830, 1, !dbg !382
  %31832 = sext i32 %31831 to i64, !dbg !383
  %31833 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31832, !dbg !383
  %31834 = load double, ptr %6, align 8, !dbg !384
  %31835 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31836 = load double, ptr %31835, align 8, !dbg !384
  %31837 = load double, ptr %31833, align 16, !dbg !384
  %31838 = getelementptr inbounds { double, double }, ptr %31833, i32 0, i32 1, !dbg !384
  %31839 = load double, ptr %31838, align 8, !dbg !384
  %31840 = call { double, double } @make_vec(double %31834, double %31836, double %31837, double %31839), !dbg !384
  %31841 = extractvalue { double, double } %31840, 0, !dbg !384
  store double %31841, ptr %19, align 8, !dbg !384
  %31842 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31843 = extractvalue { double, double } %31840, 1, !dbg !384
  store double %31843, ptr %31842, align 8, !dbg !384
  %31844 = load double, ptr %18, align 8, !dbg !385
  %31845 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31846 = load double, ptr %31845, align 8, !dbg !385
  %31847 = load double, ptr %19, align 8, !dbg !385
  %31848 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31849 = load double, ptr %31848, align 8, !dbg !385
  %31850 = call double @dot(double %31844, double %31846, double %31847, double %31849), !dbg !385
  %31851 = call double @atan2(double noundef %31816, double noundef %31850) #6, !dbg !386
  store double %31851, ptr %13, align 8, !dbg !387
  %31852 = load double, ptr %13, align 8, !dbg !388
  %31853 = load double, ptr %14, align 8, !dbg !389
  %31854 = fadd double %31853, %31852, !dbg !389
  store double %31854, ptr %14, align 8, !dbg !389
  %31855 = load double, ptr %13, align 8, !dbg !390
  %31856 = fsub double %31855, 0x400921FB54442D18, !dbg !392
  %31857 = call double @llvm.fabs.f64(double %31856), !dbg !393
  %31858 = fcmp ole double %31857, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31858, label %14330, label %31859, !dbg !395

31859:                                            ; preds = %31782
  %31860 = load double, ptr %13, align 8, !dbg !396
  %31861 = fadd double %31860, 0x400921FB54442D18, !dbg !397
  %31862 = call double @llvm.fabs.f64(double %31861), !dbg !398
  %31863 = fcmp ole double %31862, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31863, label %14330, label %31864, !dbg !400

31864:                                            ; preds = %31859
  br label %31865, !dbg !403

31865:                                            ; preds = %31864
  %31866 = load i32, ptr %10, align 4, !dbg !404
  %31867 = add nsw i32 %31866, 1, !dbg !404
  store i32 %31867, ptr %10, align 4, !dbg !404
  %31868 = load i32, ptr %10, align 4, !dbg !364
  %31869 = load i32, ptr %8, align 4, !dbg !366
  %31870 = icmp slt i32 %31868, %31869, !dbg !367
  br i1 %31870, label %31871, label %48422, !dbg !368

31871:                                            ; preds = %31865
  %31872 = load i32, ptr %10, align 4, !dbg !369
  %31873 = sext i32 %31872 to i64, !dbg !371
  %31874 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31873, !dbg !371
  %31875 = load double, ptr %6, align 8, !dbg !372
  %31876 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31877 = load double, ptr %31876, align 8, !dbg !372
  %31878 = load double, ptr %31874, align 16, !dbg !372
  %31879 = getelementptr inbounds { double, double }, ptr %31874, i32 0, i32 1, !dbg !372
  %31880 = load double, ptr %31879, align 8, !dbg !372
  %31881 = call { double, double } @make_vec(double %31875, double %31877, double %31878, double %31880), !dbg !372
  %31882 = extractvalue { double, double } %31881, 0, !dbg !372
  store double %31882, ptr %16, align 8, !dbg !372
  %31883 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31884 = extractvalue { double, double } %31881, 1, !dbg !372
  store double %31884, ptr %31883, align 8, !dbg !372
  %31885 = load i32, ptr %10, align 4, !dbg !373
  %31886 = add nsw i32 %31885, 1, !dbg !374
  %31887 = sext i32 %31886 to i64, !dbg !375
  %31888 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31887, !dbg !375
  %31889 = load double, ptr %6, align 8, !dbg !376
  %31890 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31891 = load double, ptr %31890, align 8, !dbg !376
  %31892 = load double, ptr %31888, align 16, !dbg !376
  %31893 = getelementptr inbounds { double, double }, ptr %31888, i32 0, i32 1, !dbg !376
  %31894 = load double, ptr %31893, align 8, !dbg !376
  %31895 = call { double, double } @make_vec(double %31889, double %31891, double %31892, double %31894), !dbg !376
  %31896 = extractvalue { double, double } %31895, 0, !dbg !376
  store double %31896, ptr %17, align 8, !dbg !376
  %31897 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31898 = extractvalue { double, double } %31895, 1, !dbg !376
  store double %31898, ptr %31897, align 8, !dbg !376
  %31899 = load double, ptr %16, align 8, !dbg !377
  %31900 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31901 = load double, ptr %31900, align 8, !dbg !377
  %31902 = load double, ptr %17, align 8, !dbg !377
  %31903 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31904 = load double, ptr %31903, align 8, !dbg !377
  %31905 = call double @cross(double %31899, double %31901, double %31902, double %31904), !dbg !377
  %31906 = load i32, ptr %10, align 4, !dbg !378
  %31907 = sext i32 %31906 to i64, !dbg !379
  %31908 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31907, !dbg !379
  %31909 = load double, ptr %6, align 8, !dbg !380
  %31910 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %31911 = load double, ptr %31910, align 8, !dbg !380
  %31912 = load double, ptr %31908, align 16, !dbg !380
  %31913 = getelementptr inbounds { double, double }, ptr %31908, i32 0, i32 1, !dbg !380
  %31914 = load double, ptr %31913, align 8, !dbg !380
  %31915 = call { double, double } @make_vec(double %31909, double %31911, double %31912, double %31914), !dbg !380
  %31916 = extractvalue { double, double } %31915, 0, !dbg !380
  store double %31916, ptr %18, align 8, !dbg !380
  %31917 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %31918 = extractvalue { double, double } %31915, 1, !dbg !380
  store double %31918, ptr %31917, align 8, !dbg !380
  %31919 = load i32, ptr %10, align 4, !dbg !381
  %31920 = add nsw i32 %31919, 1, !dbg !382
  %31921 = sext i32 %31920 to i64, !dbg !383
  %31922 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31921, !dbg !383
  %31923 = load double, ptr %6, align 8, !dbg !384
  %31924 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %31925 = load double, ptr %31924, align 8, !dbg !384
  %31926 = load double, ptr %31922, align 16, !dbg !384
  %31927 = getelementptr inbounds { double, double }, ptr %31922, i32 0, i32 1, !dbg !384
  %31928 = load double, ptr %31927, align 8, !dbg !384
  %31929 = call { double, double } @make_vec(double %31923, double %31925, double %31926, double %31928), !dbg !384
  %31930 = extractvalue { double, double } %31929, 0, !dbg !384
  store double %31930, ptr %19, align 8, !dbg !384
  %31931 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %31932 = extractvalue { double, double } %31929, 1, !dbg !384
  store double %31932, ptr %31931, align 8, !dbg !384
  %31933 = load double, ptr %18, align 8, !dbg !385
  %31934 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %31935 = load double, ptr %31934, align 8, !dbg !385
  %31936 = load double, ptr %19, align 8, !dbg !385
  %31937 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %31938 = load double, ptr %31937, align 8, !dbg !385
  %31939 = call double @dot(double %31933, double %31935, double %31936, double %31938), !dbg !385
  %31940 = call double @atan2(double noundef %31905, double noundef %31939) #6, !dbg !386
  store double %31940, ptr %13, align 8, !dbg !387
  %31941 = load double, ptr %13, align 8, !dbg !388
  %31942 = load double, ptr %14, align 8, !dbg !389
  %31943 = fadd double %31942, %31941, !dbg !389
  store double %31943, ptr %14, align 8, !dbg !389
  %31944 = load double, ptr %13, align 8, !dbg !390
  %31945 = fsub double %31944, 0x400921FB54442D18, !dbg !392
  %31946 = call double @llvm.fabs.f64(double %31945), !dbg !393
  %31947 = fcmp ole double %31946, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %31947, label %14330, label %31948, !dbg !395

31948:                                            ; preds = %31871
  %31949 = load double, ptr %13, align 8, !dbg !396
  %31950 = fadd double %31949, 0x400921FB54442D18, !dbg !397
  %31951 = call double @llvm.fabs.f64(double %31950), !dbg !398
  %31952 = fcmp ole double %31951, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %31952, label %14330, label %31953, !dbg !400

31953:                                            ; preds = %31948
  br label %31954, !dbg !403

31954:                                            ; preds = %31953
  %31955 = load i32, ptr %10, align 4, !dbg !404
  %31956 = add nsw i32 %31955, 1, !dbg !404
  store i32 %31956, ptr %10, align 4, !dbg !404
  %31957 = load i32, ptr %10, align 4, !dbg !364
  %31958 = load i32, ptr %8, align 4, !dbg !366
  %31959 = icmp slt i32 %31957, %31958, !dbg !367
  br i1 %31959, label %31960, label %48422, !dbg !368

31960:                                            ; preds = %31954
  %31961 = load i32, ptr %10, align 4, !dbg !369
  %31962 = sext i32 %31961 to i64, !dbg !371
  %31963 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31962, !dbg !371
  %31964 = load double, ptr %6, align 8, !dbg !372
  %31965 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %31966 = load double, ptr %31965, align 8, !dbg !372
  %31967 = load double, ptr %31963, align 16, !dbg !372
  %31968 = getelementptr inbounds { double, double }, ptr %31963, i32 0, i32 1, !dbg !372
  %31969 = load double, ptr %31968, align 8, !dbg !372
  %31970 = call { double, double } @make_vec(double %31964, double %31966, double %31967, double %31969), !dbg !372
  %31971 = extractvalue { double, double } %31970, 0, !dbg !372
  store double %31971, ptr %16, align 8, !dbg !372
  %31972 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %31973 = extractvalue { double, double } %31970, 1, !dbg !372
  store double %31973, ptr %31972, align 8, !dbg !372
  %31974 = load i32, ptr %10, align 4, !dbg !373
  %31975 = add nsw i32 %31974, 1, !dbg !374
  %31976 = sext i32 %31975 to i64, !dbg !375
  %31977 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31976, !dbg !375
  %31978 = load double, ptr %6, align 8, !dbg !376
  %31979 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %31980 = load double, ptr %31979, align 8, !dbg !376
  %31981 = load double, ptr %31977, align 16, !dbg !376
  %31982 = getelementptr inbounds { double, double }, ptr %31977, i32 0, i32 1, !dbg !376
  %31983 = load double, ptr %31982, align 8, !dbg !376
  %31984 = call { double, double } @make_vec(double %31978, double %31980, double %31981, double %31983), !dbg !376
  %31985 = extractvalue { double, double } %31984, 0, !dbg !376
  store double %31985, ptr %17, align 8, !dbg !376
  %31986 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %31987 = extractvalue { double, double } %31984, 1, !dbg !376
  store double %31987, ptr %31986, align 8, !dbg !376
  %31988 = load double, ptr %16, align 8, !dbg !377
  %31989 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %31990 = load double, ptr %31989, align 8, !dbg !377
  %31991 = load double, ptr %17, align 8, !dbg !377
  %31992 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %31993 = load double, ptr %31992, align 8, !dbg !377
  %31994 = call double @cross(double %31988, double %31990, double %31991, double %31993), !dbg !377
  %31995 = load i32, ptr %10, align 4, !dbg !378
  %31996 = sext i32 %31995 to i64, !dbg !379
  %31997 = getelementptr inbounds %struct.POINT, ptr %26, i64 %31996, !dbg !379
  %31998 = load double, ptr %6, align 8, !dbg !380
  %31999 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32000 = load double, ptr %31999, align 8, !dbg !380
  %32001 = load double, ptr %31997, align 16, !dbg !380
  %32002 = getelementptr inbounds { double, double }, ptr %31997, i32 0, i32 1, !dbg !380
  %32003 = load double, ptr %32002, align 8, !dbg !380
  %32004 = call { double, double } @make_vec(double %31998, double %32000, double %32001, double %32003), !dbg !380
  %32005 = extractvalue { double, double } %32004, 0, !dbg !380
  store double %32005, ptr %18, align 8, !dbg !380
  %32006 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32007 = extractvalue { double, double } %32004, 1, !dbg !380
  store double %32007, ptr %32006, align 8, !dbg !380
  %32008 = load i32, ptr %10, align 4, !dbg !381
  %32009 = add nsw i32 %32008, 1, !dbg !382
  %32010 = sext i32 %32009 to i64, !dbg !383
  %32011 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32010, !dbg !383
  %32012 = load double, ptr %6, align 8, !dbg !384
  %32013 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32014 = load double, ptr %32013, align 8, !dbg !384
  %32015 = load double, ptr %32011, align 16, !dbg !384
  %32016 = getelementptr inbounds { double, double }, ptr %32011, i32 0, i32 1, !dbg !384
  %32017 = load double, ptr %32016, align 8, !dbg !384
  %32018 = call { double, double } @make_vec(double %32012, double %32014, double %32015, double %32017), !dbg !384
  %32019 = extractvalue { double, double } %32018, 0, !dbg !384
  store double %32019, ptr %19, align 8, !dbg !384
  %32020 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32021 = extractvalue { double, double } %32018, 1, !dbg !384
  store double %32021, ptr %32020, align 8, !dbg !384
  %32022 = load double, ptr %18, align 8, !dbg !385
  %32023 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32024 = load double, ptr %32023, align 8, !dbg !385
  %32025 = load double, ptr %19, align 8, !dbg !385
  %32026 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32027 = load double, ptr %32026, align 8, !dbg !385
  %32028 = call double @dot(double %32022, double %32024, double %32025, double %32027), !dbg !385
  %32029 = call double @atan2(double noundef %31994, double noundef %32028) #6, !dbg !386
  store double %32029, ptr %13, align 8, !dbg !387
  %32030 = load double, ptr %13, align 8, !dbg !388
  %32031 = load double, ptr %14, align 8, !dbg !389
  %32032 = fadd double %32031, %32030, !dbg !389
  store double %32032, ptr %14, align 8, !dbg !389
  %32033 = load double, ptr %13, align 8, !dbg !390
  %32034 = fsub double %32033, 0x400921FB54442D18, !dbg !392
  %32035 = call double @llvm.fabs.f64(double %32034), !dbg !393
  %32036 = fcmp ole double %32035, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32036, label %14330, label %32037, !dbg !395

32037:                                            ; preds = %31960
  %32038 = load double, ptr %13, align 8, !dbg !396
  %32039 = fadd double %32038, 0x400921FB54442D18, !dbg !397
  %32040 = call double @llvm.fabs.f64(double %32039), !dbg !398
  %32041 = fcmp ole double %32040, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32041, label %14330, label %32042, !dbg !400

32042:                                            ; preds = %32037
  br label %32043, !dbg !403

32043:                                            ; preds = %32042
  %32044 = load i32, ptr %10, align 4, !dbg !404
  %32045 = add nsw i32 %32044, 1, !dbg !404
  store i32 %32045, ptr %10, align 4, !dbg !404
  %32046 = load i32, ptr %10, align 4, !dbg !364
  %32047 = load i32, ptr %8, align 4, !dbg !366
  %32048 = icmp slt i32 %32046, %32047, !dbg !367
  br i1 %32048, label %32049, label %48422, !dbg !368

32049:                                            ; preds = %32043
  %32050 = load i32, ptr %10, align 4, !dbg !369
  %32051 = sext i32 %32050 to i64, !dbg !371
  %32052 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32051, !dbg !371
  %32053 = load double, ptr %6, align 8, !dbg !372
  %32054 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32055 = load double, ptr %32054, align 8, !dbg !372
  %32056 = load double, ptr %32052, align 16, !dbg !372
  %32057 = getelementptr inbounds { double, double }, ptr %32052, i32 0, i32 1, !dbg !372
  %32058 = load double, ptr %32057, align 8, !dbg !372
  %32059 = call { double, double } @make_vec(double %32053, double %32055, double %32056, double %32058), !dbg !372
  %32060 = extractvalue { double, double } %32059, 0, !dbg !372
  store double %32060, ptr %16, align 8, !dbg !372
  %32061 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32062 = extractvalue { double, double } %32059, 1, !dbg !372
  store double %32062, ptr %32061, align 8, !dbg !372
  %32063 = load i32, ptr %10, align 4, !dbg !373
  %32064 = add nsw i32 %32063, 1, !dbg !374
  %32065 = sext i32 %32064 to i64, !dbg !375
  %32066 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32065, !dbg !375
  %32067 = load double, ptr %6, align 8, !dbg !376
  %32068 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32069 = load double, ptr %32068, align 8, !dbg !376
  %32070 = load double, ptr %32066, align 16, !dbg !376
  %32071 = getelementptr inbounds { double, double }, ptr %32066, i32 0, i32 1, !dbg !376
  %32072 = load double, ptr %32071, align 8, !dbg !376
  %32073 = call { double, double } @make_vec(double %32067, double %32069, double %32070, double %32072), !dbg !376
  %32074 = extractvalue { double, double } %32073, 0, !dbg !376
  store double %32074, ptr %17, align 8, !dbg !376
  %32075 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32076 = extractvalue { double, double } %32073, 1, !dbg !376
  store double %32076, ptr %32075, align 8, !dbg !376
  %32077 = load double, ptr %16, align 8, !dbg !377
  %32078 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32079 = load double, ptr %32078, align 8, !dbg !377
  %32080 = load double, ptr %17, align 8, !dbg !377
  %32081 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32082 = load double, ptr %32081, align 8, !dbg !377
  %32083 = call double @cross(double %32077, double %32079, double %32080, double %32082), !dbg !377
  %32084 = load i32, ptr %10, align 4, !dbg !378
  %32085 = sext i32 %32084 to i64, !dbg !379
  %32086 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32085, !dbg !379
  %32087 = load double, ptr %6, align 8, !dbg !380
  %32088 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32089 = load double, ptr %32088, align 8, !dbg !380
  %32090 = load double, ptr %32086, align 16, !dbg !380
  %32091 = getelementptr inbounds { double, double }, ptr %32086, i32 0, i32 1, !dbg !380
  %32092 = load double, ptr %32091, align 8, !dbg !380
  %32093 = call { double, double } @make_vec(double %32087, double %32089, double %32090, double %32092), !dbg !380
  %32094 = extractvalue { double, double } %32093, 0, !dbg !380
  store double %32094, ptr %18, align 8, !dbg !380
  %32095 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32096 = extractvalue { double, double } %32093, 1, !dbg !380
  store double %32096, ptr %32095, align 8, !dbg !380
  %32097 = load i32, ptr %10, align 4, !dbg !381
  %32098 = add nsw i32 %32097, 1, !dbg !382
  %32099 = sext i32 %32098 to i64, !dbg !383
  %32100 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32099, !dbg !383
  %32101 = load double, ptr %6, align 8, !dbg !384
  %32102 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32103 = load double, ptr %32102, align 8, !dbg !384
  %32104 = load double, ptr %32100, align 16, !dbg !384
  %32105 = getelementptr inbounds { double, double }, ptr %32100, i32 0, i32 1, !dbg !384
  %32106 = load double, ptr %32105, align 8, !dbg !384
  %32107 = call { double, double } @make_vec(double %32101, double %32103, double %32104, double %32106), !dbg !384
  %32108 = extractvalue { double, double } %32107, 0, !dbg !384
  store double %32108, ptr %19, align 8, !dbg !384
  %32109 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32110 = extractvalue { double, double } %32107, 1, !dbg !384
  store double %32110, ptr %32109, align 8, !dbg !384
  %32111 = load double, ptr %18, align 8, !dbg !385
  %32112 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32113 = load double, ptr %32112, align 8, !dbg !385
  %32114 = load double, ptr %19, align 8, !dbg !385
  %32115 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32116 = load double, ptr %32115, align 8, !dbg !385
  %32117 = call double @dot(double %32111, double %32113, double %32114, double %32116), !dbg !385
  %32118 = call double @atan2(double noundef %32083, double noundef %32117) #6, !dbg !386
  store double %32118, ptr %13, align 8, !dbg !387
  %32119 = load double, ptr %13, align 8, !dbg !388
  %32120 = load double, ptr %14, align 8, !dbg !389
  %32121 = fadd double %32120, %32119, !dbg !389
  store double %32121, ptr %14, align 8, !dbg !389
  %32122 = load double, ptr %13, align 8, !dbg !390
  %32123 = fsub double %32122, 0x400921FB54442D18, !dbg !392
  %32124 = call double @llvm.fabs.f64(double %32123), !dbg !393
  %32125 = fcmp ole double %32124, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32125, label %14330, label %32126, !dbg !395

32126:                                            ; preds = %32049
  %32127 = load double, ptr %13, align 8, !dbg !396
  %32128 = fadd double %32127, 0x400921FB54442D18, !dbg !397
  %32129 = call double @llvm.fabs.f64(double %32128), !dbg !398
  %32130 = fcmp ole double %32129, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32130, label %14330, label %32131, !dbg !400

32131:                                            ; preds = %32126
  br label %32132, !dbg !403

32132:                                            ; preds = %32131
  %32133 = load i32, ptr %10, align 4, !dbg !404
  %32134 = add nsw i32 %32133, 1, !dbg !404
  store i32 %32134, ptr %10, align 4, !dbg !404
  %32135 = load i32, ptr %10, align 4, !dbg !364
  %32136 = load i32, ptr %8, align 4, !dbg !366
  %32137 = icmp slt i32 %32135, %32136, !dbg !367
  br i1 %32137, label %32138, label %48422, !dbg !368

32138:                                            ; preds = %32132
  %32139 = load i32, ptr %10, align 4, !dbg !369
  %32140 = sext i32 %32139 to i64, !dbg !371
  %32141 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32140, !dbg !371
  %32142 = load double, ptr %6, align 8, !dbg !372
  %32143 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32144 = load double, ptr %32143, align 8, !dbg !372
  %32145 = load double, ptr %32141, align 16, !dbg !372
  %32146 = getelementptr inbounds { double, double }, ptr %32141, i32 0, i32 1, !dbg !372
  %32147 = load double, ptr %32146, align 8, !dbg !372
  %32148 = call { double, double } @make_vec(double %32142, double %32144, double %32145, double %32147), !dbg !372
  %32149 = extractvalue { double, double } %32148, 0, !dbg !372
  store double %32149, ptr %16, align 8, !dbg !372
  %32150 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32151 = extractvalue { double, double } %32148, 1, !dbg !372
  store double %32151, ptr %32150, align 8, !dbg !372
  %32152 = load i32, ptr %10, align 4, !dbg !373
  %32153 = add nsw i32 %32152, 1, !dbg !374
  %32154 = sext i32 %32153 to i64, !dbg !375
  %32155 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32154, !dbg !375
  %32156 = load double, ptr %6, align 8, !dbg !376
  %32157 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32158 = load double, ptr %32157, align 8, !dbg !376
  %32159 = load double, ptr %32155, align 16, !dbg !376
  %32160 = getelementptr inbounds { double, double }, ptr %32155, i32 0, i32 1, !dbg !376
  %32161 = load double, ptr %32160, align 8, !dbg !376
  %32162 = call { double, double } @make_vec(double %32156, double %32158, double %32159, double %32161), !dbg !376
  %32163 = extractvalue { double, double } %32162, 0, !dbg !376
  store double %32163, ptr %17, align 8, !dbg !376
  %32164 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32165 = extractvalue { double, double } %32162, 1, !dbg !376
  store double %32165, ptr %32164, align 8, !dbg !376
  %32166 = load double, ptr %16, align 8, !dbg !377
  %32167 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32168 = load double, ptr %32167, align 8, !dbg !377
  %32169 = load double, ptr %17, align 8, !dbg !377
  %32170 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32171 = load double, ptr %32170, align 8, !dbg !377
  %32172 = call double @cross(double %32166, double %32168, double %32169, double %32171), !dbg !377
  %32173 = load i32, ptr %10, align 4, !dbg !378
  %32174 = sext i32 %32173 to i64, !dbg !379
  %32175 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32174, !dbg !379
  %32176 = load double, ptr %6, align 8, !dbg !380
  %32177 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32178 = load double, ptr %32177, align 8, !dbg !380
  %32179 = load double, ptr %32175, align 16, !dbg !380
  %32180 = getelementptr inbounds { double, double }, ptr %32175, i32 0, i32 1, !dbg !380
  %32181 = load double, ptr %32180, align 8, !dbg !380
  %32182 = call { double, double } @make_vec(double %32176, double %32178, double %32179, double %32181), !dbg !380
  %32183 = extractvalue { double, double } %32182, 0, !dbg !380
  store double %32183, ptr %18, align 8, !dbg !380
  %32184 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32185 = extractvalue { double, double } %32182, 1, !dbg !380
  store double %32185, ptr %32184, align 8, !dbg !380
  %32186 = load i32, ptr %10, align 4, !dbg !381
  %32187 = add nsw i32 %32186, 1, !dbg !382
  %32188 = sext i32 %32187 to i64, !dbg !383
  %32189 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32188, !dbg !383
  %32190 = load double, ptr %6, align 8, !dbg !384
  %32191 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32192 = load double, ptr %32191, align 8, !dbg !384
  %32193 = load double, ptr %32189, align 16, !dbg !384
  %32194 = getelementptr inbounds { double, double }, ptr %32189, i32 0, i32 1, !dbg !384
  %32195 = load double, ptr %32194, align 8, !dbg !384
  %32196 = call { double, double } @make_vec(double %32190, double %32192, double %32193, double %32195), !dbg !384
  %32197 = extractvalue { double, double } %32196, 0, !dbg !384
  store double %32197, ptr %19, align 8, !dbg !384
  %32198 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32199 = extractvalue { double, double } %32196, 1, !dbg !384
  store double %32199, ptr %32198, align 8, !dbg !384
  %32200 = load double, ptr %18, align 8, !dbg !385
  %32201 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32202 = load double, ptr %32201, align 8, !dbg !385
  %32203 = load double, ptr %19, align 8, !dbg !385
  %32204 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32205 = load double, ptr %32204, align 8, !dbg !385
  %32206 = call double @dot(double %32200, double %32202, double %32203, double %32205), !dbg !385
  %32207 = call double @atan2(double noundef %32172, double noundef %32206) #6, !dbg !386
  store double %32207, ptr %13, align 8, !dbg !387
  %32208 = load double, ptr %13, align 8, !dbg !388
  %32209 = load double, ptr %14, align 8, !dbg !389
  %32210 = fadd double %32209, %32208, !dbg !389
  store double %32210, ptr %14, align 8, !dbg !389
  %32211 = load double, ptr %13, align 8, !dbg !390
  %32212 = fsub double %32211, 0x400921FB54442D18, !dbg !392
  %32213 = call double @llvm.fabs.f64(double %32212), !dbg !393
  %32214 = fcmp ole double %32213, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32214, label %14330, label %32215, !dbg !395

32215:                                            ; preds = %32138
  %32216 = load double, ptr %13, align 8, !dbg !396
  %32217 = fadd double %32216, 0x400921FB54442D18, !dbg !397
  %32218 = call double @llvm.fabs.f64(double %32217), !dbg !398
  %32219 = fcmp ole double %32218, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32219, label %14330, label %32220, !dbg !400

32220:                                            ; preds = %32215
  br label %32221, !dbg !403

32221:                                            ; preds = %32220
  %32222 = load i32, ptr %10, align 4, !dbg !404
  %32223 = add nsw i32 %32222, 1, !dbg !404
  store i32 %32223, ptr %10, align 4, !dbg !404
  %32224 = load i32, ptr %10, align 4, !dbg !364
  %32225 = load i32, ptr %8, align 4, !dbg !366
  %32226 = icmp slt i32 %32224, %32225, !dbg !367
  br i1 %32226, label %32227, label %48422, !dbg !368

32227:                                            ; preds = %32221
  %32228 = load i32, ptr %10, align 4, !dbg !369
  %32229 = sext i32 %32228 to i64, !dbg !371
  %32230 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32229, !dbg !371
  %32231 = load double, ptr %6, align 8, !dbg !372
  %32232 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32233 = load double, ptr %32232, align 8, !dbg !372
  %32234 = load double, ptr %32230, align 16, !dbg !372
  %32235 = getelementptr inbounds { double, double }, ptr %32230, i32 0, i32 1, !dbg !372
  %32236 = load double, ptr %32235, align 8, !dbg !372
  %32237 = call { double, double } @make_vec(double %32231, double %32233, double %32234, double %32236), !dbg !372
  %32238 = extractvalue { double, double } %32237, 0, !dbg !372
  store double %32238, ptr %16, align 8, !dbg !372
  %32239 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32240 = extractvalue { double, double } %32237, 1, !dbg !372
  store double %32240, ptr %32239, align 8, !dbg !372
  %32241 = load i32, ptr %10, align 4, !dbg !373
  %32242 = add nsw i32 %32241, 1, !dbg !374
  %32243 = sext i32 %32242 to i64, !dbg !375
  %32244 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32243, !dbg !375
  %32245 = load double, ptr %6, align 8, !dbg !376
  %32246 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32247 = load double, ptr %32246, align 8, !dbg !376
  %32248 = load double, ptr %32244, align 16, !dbg !376
  %32249 = getelementptr inbounds { double, double }, ptr %32244, i32 0, i32 1, !dbg !376
  %32250 = load double, ptr %32249, align 8, !dbg !376
  %32251 = call { double, double } @make_vec(double %32245, double %32247, double %32248, double %32250), !dbg !376
  %32252 = extractvalue { double, double } %32251, 0, !dbg !376
  store double %32252, ptr %17, align 8, !dbg !376
  %32253 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32254 = extractvalue { double, double } %32251, 1, !dbg !376
  store double %32254, ptr %32253, align 8, !dbg !376
  %32255 = load double, ptr %16, align 8, !dbg !377
  %32256 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32257 = load double, ptr %32256, align 8, !dbg !377
  %32258 = load double, ptr %17, align 8, !dbg !377
  %32259 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32260 = load double, ptr %32259, align 8, !dbg !377
  %32261 = call double @cross(double %32255, double %32257, double %32258, double %32260), !dbg !377
  %32262 = load i32, ptr %10, align 4, !dbg !378
  %32263 = sext i32 %32262 to i64, !dbg !379
  %32264 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32263, !dbg !379
  %32265 = load double, ptr %6, align 8, !dbg !380
  %32266 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32267 = load double, ptr %32266, align 8, !dbg !380
  %32268 = load double, ptr %32264, align 16, !dbg !380
  %32269 = getelementptr inbounds { double, double }, ptr %32264, i32 0, i32 1, !dbg !380
  %32270 = load double, ptr %32269, align 8, !dbg !380
  %32271 = call { double, double } @make_vec(double %32265, double %32267, double %32268, double %32270), !dbg !380
  %32272 = extractvalue { double, double } %32271, 0, !dbg !380
  store double %32272, ptr %18, align 8, !dbg !380
  %32273 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32274 = extractvalue { double, double } %32271, 1, !dbg !380
  store double %32274, ptr %32273, align 8, !dbg !380
  %32275 = load i32, ptr %10, align 4, !dbg !381
  %32276 = add nsw i32 %32275, 1, !dbg !382
  %32277 = sext i32 %32276 to i64, !dbg !383
  %32278 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32277, !dbg !383
  %32279 = load double, ptr %6, align 8, !dbg !384
  %32280 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32281 = load double, ptr %32280, align 8, !dbg !384
  %32282 = load double, ptr %32278, align 16, !dbg !384
  %32283 = getelementptr inbounds { double, double }, ptr %32278, i32 0, i32 1, !dbg !384
  %32284 = load double, ptr %32283, align 8, !dbg !384
  %32285 = call { double, double } @make_vec(double %32279, double %32281, double %32282, double %32284), !dbg !384
  %32286 = extractvalue { double, double } %32285, 0, !dbg !384
  store double %32286, ptr %19, align 8, !dbg !384
  %32287 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32288 = extractvalue { double, double } %32285, 1, !dbg !384
  store double %32288, ptr %32287, align 8, !dbg !384
  %32289 = load double, ptr %18, align 8, !dbg !385
  %32290 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32291 = load double, ptr %32290, align 8, !dbg !385
  %32292 = load double, ptr %19, align 8, !dbg !385
  %32293 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32294 = load double, ptr %32293, align 8, !dbg !385
  %32295 = call double @dot(double %32289, double %32291, double %32292, double %32294), !dbg !385
  %32296 = call double @atan2(double noundef %32261, double noundef %32295) #6, !dbg !386
  store double %32296, ptr %13, align 8, !dbg !387
  %32297 = load double, ptr %13, align 8, !dbg !388
  %32298 = load double, ptr %14, align 8, !dbg !389
  %32299 = fadd double %32298, %32297, !dbg !389
  store double %32299, ptr %14, align 8, !dbg !389
  %32300 = load double, ptr %13, align 8, !dbg !390
  %32301 = fsub double %32300, 0x400921FB54442D18, !dbg !392
  %32302 = call double @llvm.fabs.f64(double %32301), !dbg !393
  %32303 = fcmp ole double %32302, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32303, label %14330, label %32304, !dbg !395

32304:                                            ; preds = %32227
  %32305 = load double, ptr %13, align 8, !dbg !396
  %32306 = fadd double %32305, 0x400921FB54442D18, !dbg !397
  %32307 = call double @llvm.fabs.f64(double %32306), !dbg !398
  %32308 = fcmp ole double %32307, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32308, label %14330, label %32309, !dbg !400

32309:                                            ; preds = %32304
  br label %32310, !dbg !403

32310:                                            ; preds = %32309
  %32311 = load i32, ptr %10, align 4, !dbg !404
  %32312 = add nsw i32 %32311, 1, !dbg !404
  store i32 %32312, ptr %10, align 4, !dbg !404
  %32313 = load i32, ptr %10, align 4, !dbg !364
  %32314 = load i32, ptr %8, align 4, !dbg !366
  %32315 = icmp slt i32 %32313, %32314, !dbg !367
  br i1 %32315, label %32316, label %48422, !dbg !368

32316:                                            ; preds = %32310
  %32317 = load i32, ptr %10, align 4, !dbg !369
  %32318 = sext i32 %32317 to i64, !dbg !371
  %32319 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32318, !dbg !371
  %32320 = load double, ptr %6, align 8, !dbg !372
  %32321 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32322 = load double, ptr %32321, align 8, !dbg !372
  %32323 = load double, ptr %32319, align 16, !dbg !372
  %32324 = getelementptr inbounds { double, double }, ptr %32319, i32 0, i32 1, !dbg !372
  %32325 = load double, ptr %32324, align 8, !dbg !372
  %32326 = call { double, double } @make_vec(double %32320, double %32322, double %32323, double %32325), !dbg !372
  %32327 = extractvalue { double, double } %32326, 0, !dbg !372
  store double %32327, ptr %16, align 8, !dbg !372
  %32328 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32329 = extractvalue { double, double } %32326, 1, !dbg !372
  store double %32329, ptr %32328, align 8, !dbg !372
  %32330 = load i32, ptr %10, align 4, !dbg !373
  %32331 = add nsw i32 %32330, 1, !dbg !374
  %32332 = sext i32 %32331 to i64, !dbg !375
  %32333 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32332, !dbg !375
  %32334 = load double, ptr %6, align 8, !dbg !376
  %32335 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32336 = load double, ptr %32335, align 8, !dbg !376
  %32337 = load double, ptr %32333, align 16, !dbg !376
  %32338 = getelementptr inbounds { double, double }, ptr %32333, i32 0, i32 1, !dbg !376
  %32339 = load double, ptr %32338, align 8, !dbg !376
  %32340 = call { double, double } @make_vec(double %32334, double %32336, double %32337, double %32339), !dbg !376
  %32341 = extractvalue { double, double } %32340, 0, !dbg !376
  store double %32341, ptr %17, align 8, !dbg !376
  %32342 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32343 = extractvalue { double, double } %32340, 1, !dbg !376
  store double %32343, ptr %32342, align 8, !dbg !376
  %32344 = load double, ptr %16, align 8, !dbg !377
  %32345 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32346 = load double, ptr %32345, align 8, !dbg !377
  %32347 = load double, ptr %17, align 8, !dbg !377
  %32348 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32349 = load double, ptr %32348, align 8, !dbg !377
  %32350 = call double @cross(double %32344, double %32346, double %32347, double %32349), !dbg !377
  %32351 = load i32, ptr %10, align 4, !dbg !378
  %32352 = sext i32 %32351 to i64, !dbg !379
  %32353 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32352, !dbg !379
  %32354 = load double, ptr %6, align 8, !dbg !380
  %32355 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32356 = load double, ptr %32355, align 8, !dbg !380
  %32357 = load double, ptr %32353, align 16, !dbg !380
  %32358 = getelementptr inbounds { double, double }, ptr %32353, i32 0, i32 1, !dbg !380
  %32359 = load double, ptr %32358, align 8, !dbg !380
  %32360 = call { double, double } @make_vec(double %32354, double %32356, double %32357, double %32359), !dbg !380
  %32361 = extractvalue { double, double } %32360, 0, !dbg !380
  store double %32361, ptr %18, align 8, !dbg !380
  %32362 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32363 = extractvalue { double, double } %32360, 1, !dbg !380
  store double %32363, ptr %32362, align 8, !dbg !380
  %32364 = load i32, ptr %10, align 4, !dbg !381
  %32365 = add nsw i32 %32364, 1, !dbg !382
  %32366 = sext i32 %32365 to i64, !dbg !383
  %32367 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32366, !dbg !383
  %32368 = load double, ptr %6, align 8, !dbg !384
  %32369 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32370 = load double, ptr %32369, align 8, !dbg !384
  %32371 = load double, ptr %32367, align 16, !dbg !384
  %32372 = getelementptr inbounds { double, double }, ptr %32367, i32 0, i32 1, !dbg !384
  %32373 = load double, ptr %32372, align 8, !dbg !384
  %32374 = call { double, double } @make_vec(double %32368, double %32370, double %32371, double %32373), !dbg !384
  %32375 = extractvalue { double, double } %32374, 0, !dbg !384
  store double %32375, ptr %19, align 8, !dbg !384
  %32376 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32377 = extractvalue { double, double } %32374, 1, !dbg !384
  store double %32377, ptr %32376, align 8, !dbg !384
  %32378 = load double, ptr %18, align 8, !dbg !385
  %32379 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32380 = load double, ptr %32379, align 8, !dbg !385
  %32381 = load double, ptr %19, align 8, !dbg !385
  %32382 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32383 = load double, ptr %32382, align 8, !dbg !385
  %32384 = call double @dot(double %32378, double %32380, double %32381, double %32383), !dbg !385
  %32385 = call double @atan2(double noundef %32350, double noundef %32384) #6, !dbg !386
  store double %32385, ptr %13, align 8, !dbg !387
  %32386 = load double, ptr %13, align 8, !dbg !388
  %32387 = load double, ptr %14, align 8, !dbg !389
  %32388 = fadd double %32387, %32386, !dbg !389
  store double %32388, ptr %14, align 8, !dbg !389
  %32389 = load double, ptr %13, align 8, !dbg !390
  %32390 = fsub double %32389, 0x400921FB54442D18, !dbg !392
  %32391 = call double @llvm.fabs.f64(double %32390), !dbg !393
  %32392 = fcmp ole double %32391, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32392, label %14330, label %32393, !dbg !395

32393:                                            ; preds = %32316
  %32394 = load double, ptr %13, align 8, !dbg !396
  %32395 = fadd double %32394, 0x400921FB54442D18, !dbg !397
  %32396 = call double @llvm.fabs.f64(double %32395), !dbg !398
  %32397 = fcmp ole double %32396, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32397, label %14330, label %32398, !dbg !400

32398:                                            ; preds = %32393
  br label %32399, !dbg !403

32399:                                            ; preds = %32398
  %32400 = load i32, ptr %10, align 4, !dbg !404
  %32401 = add nsw i32 %32400, 1, !dbg !404
  store i32 %32401, ptr %10, align 4, !dbg !404
  %32402 = load i32, ptr %10, align 4, !dbg !364
  %32403 = load i32, ptr %8, align 4, !dbg !366
  %32404 = icmp slt i32 %32402, %32403, !dbg !367
  br i1 %32404, label %32405, label %48422, !dbg !368

32405:                                            ; preds = %32399
  %32406 = load i32, ptr %10, align 4, !dbg !369
  %32407 = sext i32 %32406 to i64, !dbg !371
  %32408 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32407, !dbg !371
  %32409 = load double, ptr %6, align 8, !dbg !372
  %32410 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32411 = load double, ptr %32410, align 8, !dbg !372
  %32412 = load double, ptr %32408, align 16, !dbg !372
  %32413 = getelementptr inbounds { double, double }, ptr %32408, i32 0, i32 1, !dbg !372
  %32414 = load double, ptr %32413, align 8, !dbg !372
  %32415 = call { double, double } @make_vec(double %32409, double %32411, double %32412, double %32414), !dbg !372
  %32416 = extractvalue { double, double } %32415, 0, !dbg !372
  store double %32416, ptr %16, align 8, !dbg !372
  %32417 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32418 = extractvalue { double, double } %32415, 1, !dbg !372
  store double %32418, ptr %32417, align 8, !dbg !372
  %32419 = load i32, ptr %10, align 4, !dbg !373
  %32420 = add nsw i32 %32419, 1, !dbg !374
  %32421 = sext i32 %32420 to i64, !dbg !375
  %32422 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32421, !dbg !375
  %32423 = load double, ptr %6, align 8, !dbg !376
  %32424 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32425 = load double, ptr %32424, align 8, !dbg !376
  %32426 = load double, ptr %32422, align 16, !dbg !376
  %32427 = getelementptr inbounds { double, double }, ptr %32422, i32 0, i32 1, !dbg !376
  %32428 = load double, ptr %32427, align 8, !dbg !376
  %32429 = call { double, double } @make_vec(double %32423, double %32425, double %32426, double %32428), !dbg !376
  %32430 = extractvalue { double, double } %32429, 0, !dbg !376
  store double %32430, ptr %17, align 8, !dbg !376
  %32431 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32432 = extractvalue { double, double } %32429, 1, !dbg !376
  store double %32432, ptr %32431, align 8, !dbg !376
  %32433 = load double, ptr %16, align 8, !dbg !377
  %32434 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32435 = load double, ptr %32434, align 8, !dbg !377
  %32436 = load double, ptr %17, align 8, !dbg !377
  %32437 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32438 = load double, ptr %32437, align 8, !dbg !377
  %32439 = call double @cross(double %32433, double %32435, double %32436, double %32438), !dbg !377
  %32440 = load i32, ptr %10, align 4, !dbg !378
  %32441 = sext i32 %32440 to i64, !dbg !379
  %32442 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32441, !dbg !379
  %32443 = load double, ptr %6, align 8, !dbg !380
  %32444 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32445 = load double, ptr %32444, align 8, !dbg !380
  %32446 = load double, ptr %32442, align 16, !dbg !380
  %32447 = getelementptr inbounds { double, double }, ptr %32442, i32 0, i32 1, !dbg !380
  %32448 = load double, ptr %32447, align 8, !dbg !380
  %32449 = call { double, double } @make_vec(double %32443, double %32445, double %32446, double %32448), !dbg !380
  %32450 = extractvalue { double, double } %32449, 0, !dbg !380
  store double %32450, ptr %18, align 8, !dbg !380
  %32451 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32452 = extractvalue { double, double } %32449, 1, !dbg !380
  store double %32452, ptr %32451, align 8, !dbg !380
  %32453 = load i32, ptr %10, align 4, !dbg !381
  %32454 = add nsw i32 %32453, 1, !dbg !382
  %32455 = sext i32 %32454 to i64, !dbg !383
  %32456 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32455, !dbg !383
  %32457 = load double, ptr %6, align 8, !dbg !384
  %32458 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32459 = load double, ptr %32458, align 8, !dbg !384
  %32460 = load double, ptr %32456, align 16, !dbg !384
  %32461 = getelementptr inbounds { double, double }, ptr %32456, i32 0, i32 1, !dbg !384
  %32462 = load double, ptr %32461, align 8, !dbg !384
  %32463 = call { double, double } @make_vec(double %32457, double %32459, double %32460, double %32462), !dbg !384
  %32464 = extractvalue { double, double } %32463, 0, !dbg !384
  store double %32464, ptr %19, align 8, !dbg !384
  %32465 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32466 = extractvalue { double, double } %32463, 1, !dbg !384
  store double %32466, ptr %32465, align 8, !dbg !384
  %32467 = load double, ptr %18, align 8, !dbg !385
  %32468 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32469 = load double, ptr %32468, align 8, !dbg !385
  %32470 = load double, ptr %19, align 8, !dbg !385
  %32471 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32472 = load double, ptr %32471, align 8, !dbg !385
  %32473 = call double @dot(double %32467, double %32469, double %32470, double %32472), !dbg !385
  %32474 = call double @atan2(double noundef %32439, double noundef %32473) #6, !dbg !386
  store double %32474, ptr %13, align 8, !dbg !387
  %32475 = load double, ptr %13, align 8, !dbg !388
  %32476 = load double, ptr %14, align 8, !dbg !389
  %32477 = fadd double %32476, %32475, !dbg !389
  store double %32477, ptr %14, align 8, !dbg !389
  %32478 = load double, ptr %13, align 8, !dbg !390
  %32479 = fsub double %32478, 0x400921FB54442D18, !dbg !392
  %32480 = call double @llvm.fabs.f64(double %32479), !dbg !393
  %32481 = fcmp ole double %32480, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32481, label %14330, label %32482, !dbg !395

32482:                                            ; preds = %32405
  %32483 = load double, ptr %13, align 8, !dbg !396
  %32484 = fadd double %32483, 0x400921FB54442D18, !dbg !397
  %32485 = call double @llvm.fabs.f64(double %32484), !dbg !398
  %32486 = fcmp ole double %32485, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32486, label %14330, label %32487, !dbg !400

32487:                                            ; preds = %32482
  br label %32488, !dbg !403

32488:                                            ; preds = %32487
  %32489 = load i32, ptr %10, align 4, !dbg !404
  %32490 = add nsw i32 %32489, 1, !dbg !404
  store i32 %32490, ptr %10, align 4, !dbg !404
  %32491 = load i32, ptr %10, align 4, !dbg !364
  %32492 = load i32, ptr %8, align 4, !dbg !366
  %32493 = icmp slt i32 %32491, %32492, !dbg !367
  br i1 %32493, label %32494, label %48422, !dbg !368

32494:                                            ; preds = %32488
  %32495 = load i32, ptr %10, align 4, !dbg !369
  %32496 = sext i32 %32495 to i64, !dbg !371
  %32497 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32496, !dbg !371
  %32498 = load double, ptr %6, align 8, !dbg !372
  %32499 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32500 = load double, ptr %32499, align 8, !dbg !372
  %32501 = load double, ptr %32497, align 16, !dbg !372
  %32502 = getelementptr inbounds { double, double }, ptr %32497, i32 0, i32 1, !dbg !372
  %32503 = load double, ptr %32502, align 8, !dbg !372
  %32504 = call { double, double } @make_vec(double %32498, double %32500, double %32501, double %32503), !dbg !372
  %32505 = extractvalue { double, double } %32504, 0, !dbg !372
  store double %32505, ptr %16, align 8, !dbg !372
  %32506 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32507 = extractvalue { double, double } %32504, 1, !dbg !372
  store double %32507, ptr %32506, align 8, !dbg !372
  %32508 = load i32, ptr %10, align 4, !dbg !373
  %32509 = add nsw i32 %32508, 1, !dbg !374
  %32510 = sext i32 %32509 to i64, !dbg !375
  %32511 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32510, !dbg !375
  %32512 = load double, ptr %6, align 8, !dbg !376
  %32513 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32514 = load double, ptr %32513, align 8, !dbg !376
  %32515 = load double, ptr %32511, align 16, !dbg !376
  %32516 = getelementptr inbounds { double, double }, ptr %32511, i32 0, i32 1, !dbg !376
  %32517 = load double, ptr %32516, align 8, !dbg !376
  %32518 = call { double, double } @make_vec(double %32512, double %32514, double %32515, double %32517), !dbg !376
  %32519 = extractvalue { double, double } %32518, 0, !dbg !376
  store double %32519, ptr %17, align 8, !dbg !376
  %32520 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32521 = extractvalue { double, double } %32518, 1, !dbg !376
  store double %32521, ptr %32520, align 8, !dbg !376
  %32522 = load double, ptr %16, align 8, !dbg !377
  %32523 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32524 = load double, ptr %32523, align 8, !dbg !377
  %32525 = load double, ptr %17, align 8, !dbg !377
  %32526 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32527 = load double, ptr %32526, align 8, !dbg !377
  %32528 = call double @cross(double %32522, double %32524, double %32525, double %32527), !dbg !377
  %32529 = load i32, ptr %10, align 4, !dbg !378
  %32530 = sext i32 %32529 to i64, !dbg !379
  %32531 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32530, !dbg !379
  %32532 = load double, ptr %6, align 8, !dbg !380
  %32533 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32534 = load double, ptr %32533, align 8, !dbg !380
  %32535 = load double, ptr %32531, align 16, !dbg !380
  %32536 = getelementptr inbounds { double, double }, ptr %32531, i32 0, i32 1, !dbg !380
  %32537 = load double, ptr %32536, align 8, !dbg !380
  %32538 = call { double, double } @make_vec(double %32532, double %32534, double %32535, double %32537), !dbg !380
  %32539 = extractvalue { double, double } %32538, 0, !dbg !380
  store double %32539, ptr %18, align 8, !dbg !380
  %32540 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32541 = extractvalue { double, double } %32538, 1, !dbg !380
  store double %32541, ptr %32540, align 8, !dbg !380
  %32542 = load i32, ptr %10, align 4, !dbg !381
  %32543 = add nsw i32 %32542, 1, !dbg !382
  %32544 = sext i32 %32543 to i64, !dbg !383
  %32545 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32544, !dbg !383
  %32546 = load double, ptr %6, align 8, !dbg !384
  %32547 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32548 = load double, ptr %32547, align 8, !dbg !384
  %32549 = load double, ptr %32545, align 16, !dbg !384
  %32550 = getelementptr inbounds { double, double }, ptr %32545, i32 0, i32 1, !dbg !384
  %32551 = load double, ptr %32550, align 8, !dbg !384
  %32552 = call { double, double } @make_vec(double %32546, double %32548, double %32549, double %32551), !dbg !384
  %32553 = extractvalue { double, double } %32552, 0, !dbg !384
  store double %32553, ptr %19, align 8, !dbg !384
  %32554 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32555 = extractvalue { double, double } %32552, 1, !dbg !384
  store double %32555, ptr %32554, align 8, !dbg !384
  %32556 = load double, ptr %18, align 8, !dbg !385
  %32557 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32558 = load double, ptr %32557, align 8, !dbg !385
  %32559 = load double, ptr %19, align 8, !dbg !385
  %32560 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32561 = load double, ptr %32560, align 8, !dbg !385
  %32562 = call double @dot(double %32556, double %32558, double %32559, double %32561), !dbg !385
  %32563 = call double @atan2(double noundef %32528, double noundef %32562) #6, !dbg !386
  store double %32563, ptr %13, align 8, !dbg !387
  %32564 = load double, ptr %13, align 8, !dbg !388
  %32565 = load double, ptr %14, align 8, !dbg !389
  %32566 = fadd double %32565, %32564, !dbg !389
  store double %32566, ptr %14, align 8, !dbg !389
  %32567 = load double, ptr %13, align 8, !dbg !390
  %32568 = fsub double %32567, 0x400921FB54442D18, !dbg !392
  %32569 = call double @llvm.fabs.f64(double %32568), !dbg !393
  %32570 = fcmp ole double %32569, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32570, label %14330, label %32571, !dbg !395

32571:                                            ; preds = %32494
  %32572 = load double, ptr %13, align 8, !dbg !396
  %32573 = fadd double %32572, 0x400921FB54442D18, !dbg !397
  %32574 = call double @llvm.fabs.f64(double %32573), !dbg !398
  %32575 = fcmp ole double %32574, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32575, label %14330, label %32576, !dbg !400

32576:                                            ; preds = %32571
  br label %32577, !dbg !403

32577:                                            ; preds = %32576
  %32578 = load i32, ptr %10, align 4, !dbg !404
  %32579 = add nsw i32 %32578, 1, !dbg !404
  store i32 %32579, ptr %10, align 4, !dbg !404
  %32580 = load i32, ptr %10, align 4, !dbg !364
  %32581 = load i32, ptr %8, align 4, !dbg !366
  %32582 = icmp slt i32 %32580, %32581, !dbg !367
  br i1 %32582, label %32583, label %48422, !dbg !368

32583:                                            ; preds = %32577
  %32584 = load i32, ptr %10, align 4, !dbg !369
  %32585 = sext i32 %32584 to i64, !dbg !371
  %32586 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32585, !dbg !371
  %32587 = load double, ptr %6, align 8, !dbg !372
  %32588 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32589 = load double, ptr %32588, align 8, !dbg !372
  %32590 = load double, ptr %32586, align 16, !dbg !372
  %32591 = getelementptr inbounds { double, double }, ptr %32586, i32 0, i32 1, !dbg !372
  %32592 = load double, ptr %32591, align 8, !dbg !372
  %32593 = call { double, double } @make_vec(double %32587, double %32589, double %32590, double %32592), !dbg !372
  %32594 = extractvalue { double, double } %32593, 0, !dbg !372
  store double %32594, ptr %16, align 8, !dbg !372
  %32595 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32596 = extractvalue { double, double } %32593, 1, !dbg !372
  store double %32596, ptr %32595, align 8, !dbg !372
  %32597 = load i32, ptr %10, align 4, !dbg !373
  %32598 = add nsw i32 %32597, 1, !dbg !374
  %32599 = sext i32 %32598 to i64, !dbg !375
  %32600 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32599, !dbg !375
  %32601 = load double, ptr %6, align 8, !dbg !376
  %32602 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32603 = load double, ptr %32602, align 8, !dbg !376
  %32604 = load double, ptr %32600, align 16, !dbg !376
  %32605 = getelementptr inbounds { double, double }, ptr %32600, i32 0, i32 1, !dbg !376
  %32606 = load double, ptr %32605, align 8, !dbg !376
  %32607 = call { double, double } @make_vec(double %32601, double %32603, double %32604, double %32606), !dbg !376
  %32608 = extractvalue { double, double } %32607, 0, !dbg !376
  store double %32608, ptr %17, align 8, !dbg !376
  %32609 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32610 = extractvalue { double, double } %32607, 1, !dbg !376
  store double %32610, ptr %32609, align 8, !dbg !376
  %32611 = load double, ptr %16, align 8, !dbg !377
  %32612 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32613 = load double, ptr %32612, align 8, !dbg !377
  %32614 = load double, ptr %17, align 8, !dbg !377
  %32615 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32616 = load double, ptr %32615, align 8, !dbg !377
  %32617 = call double @cross(double %32611, double %32613, double %32614, double %32616), !dbg !377
  %32618 = load i32, ptr %10, align 4, !dbg !378
  %32619 = sext i32 %32618 to i64, !dbg !379
  %32620 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32619, !dbg !379
  %32621 = load double, ptr %6, align 8, !dbg !380
  %32622 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32623 = load double, ptr %32622, align 8, !dbg !380
  %32624 = load double, ptr %32620, align 16, !dbg !380
  %32625 = getelementptr inbounds { double, double }, ptr %32620, i32 0, i32 1, !dbg !380
  %32626 = load double, ptr %32625, align 8, !dbg !380
  %32627 = call { double, double } @make_vec(double %32621, double %32623, double %32624, double %32626), !dbg !380
  %32628 = extractvalue { double, double } %32627, 0, !dbg !380
  store double %32628, ptr %18, align 8, !dbg !380
  %32629 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32630 = extractvalue { double, double } %32627, 1, !dbg !380
  store double %32630, ptr %32629, align 8, !dbg !380
  %32631 = load i32, ptr %10, align 4, !dbg !381
  %32632 = add nsw i32 %32631, 1, !dbg !382
  %32633 = sext i32 %32632 to i64, !dbg !383
  %32634 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32633, !dbg !383
  %32635 = load double, ptr %6, align 8, !dbg !384
  %32636 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32637 = load double, ptr %32636, align 8, !dbg !384
  %32638 = load double, ptr %32634, align 16, !dbg !384
  %32639 = getelementptr inbounds { double, double }, ptr %32634, i32 0, i32 1, !dbg !384
  %32640 = load double, ptr %32639, align 8, !dbg !384
  %32641 = call { double, double } @make_vec(double %32635, double %32637, double %32638, double %32640), !dbg !384
  %32642 = extractvalue { double, double } %32641, 0, !dbg !384
  store double %32642, ptr %19, align 8, !dbg !384
  %32643 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32644 = extractvalue { double, double } %32641, 1, !dbg !384
  store double %32644, ptr %32643, align 8, !dbg !384
  %32645 = load double, ptr %18, align 8, !dbg !385
  %32646 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32647 = load double, ptr %32646, align 8, !dbg !385
  %32648 = load double, ptr %19, align 8, !dbg !385
  %32649 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32650 = load double, ptr %32649, align 8, !dbg !385
  %32651 = call double @dot(double %32645, double %32647, double %32648, double %32650), !dbg !385
  %32652 = call double @atan2(double noundef %32617, double noundef %32651) #6, !dbg !386
  store double %32652, ptr %13, align 8, !dbg !387
  %32653 = load double, ptr %13, align 8, !dbg !388
  %32654 = load double, ptr %14, align 8, !dbg !389
  %32655 = fadd double %32654, %32653, !dbg !389
  store double %32655, ptr %14, align 8, !dbg !389
  %32656 = load double, ptr %13, align 8, !dbg !390
  %32657 = fsub double %32656, 0x400921FB54442D18, !dbg !392
  %32658 = call double @llvm.fabs.f64(double %32657), !dbg !393
  %32659 = fcmp ole double %32658, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32659, label %14330, label %32660, !dbg !395

32660:                                            ; preds = %32583
  %32661 = load double, ptr %13, align 8, !dbg !396
  %32662 = fadd double %32661, 0x400921FB54442D18, !dbg !397
  %32663 = call double @llvm.fabs.f64(double %32662), !dbg !398
  %32664 = fcmp ole double %32663, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32664, label %14330, label %32665, !dbg !400

32665:                                            ; preds = %32660
  br label %32666, !dbg !403

32666:                                            ; preds = %32665
  %32667 = load i32, ptr %10, align 4, !dbg !404
  %32668 = add nsw i32 %32667, 1, !dbg !404
  store i32 %32668, ptr %10, align 4, !dbg !404
  %32669 = load i32, ptr %10, align 4, !dbg !364
  %32670 = load i32, ptr %8, align 4, !dbg !366
  %32671 = icmp slt i32 %32669, %32670, !dbg !367
  br i1 %32671, label %32672, label %48422, !dbg !368

32672:                                            ; preds = %32666
  %32673 = load i32, ptr %10, align 4, !dbg !369
  %32674 = sext i32 %32673 to i64, !dbg !371
  %32675 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32674, !dbg !371
  %32676 = load double, ptr %6, align 8, !dbg !372
  %32677 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32678 = load double, ptr %32677, align 8, !dbg !372
  %32679 = load double, ptr %32675, align 16, !dbg !372
  %32680 = getelementptr inbounds { double, double }, ptr %32675, i32 0, i32 1, !dbg !372
  %32681 = load double, ptr %32680, align 8, !dbg !372
  %32682 = call { double, double } @make_vec(double %32676, double %32678, double %32679, double %32681), !dbg !372
  %32683 = extractvalue { double, double } %32682, 0, !dbg !372
  store double %32683, ptr %16, align 8, !dbg !372
  %32684 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32685 = extractvalue { double, double } %32682, 1, !dbg !372
  store double %32685, ptr %32684, align 8, !dbg !372
  %32686 = load i32, ptr %10, align 4, !dbg !373
  %32687 = add nsw i32 %32686, 1, !dbg !374
  %32688 = sext i32 %32687 to i64, !dbg !375
  %32689 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32688, !dbg !375
  %32690 = load double, ptr %6, align 8, !dbg !376
  %32691 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32692 = load double, ptr %32691, align 8, !dbg !376
  %32693 = load double, ptr %32689, align 16, !dbg !376
  %32694 = getelementptr inbounds { double, double }, ptr %32689, i32 0, i32 1, !dbg !376
  %32695 = load double, ptr %32694, align 8, !dbg !376
  %32696 = call { double, double } @make_vec(double %32690, double %32692, double %32693, double %32695), !dbg !376
  %32697 = extractvalue { double, double } %32696, 0, !dbg !376
  store double %32697, ptr %17, align 8, !dbg !376
  %32698 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32699 = extractvalue { double, double } %32696, 1, !dbg !376
  store double %32699, ptr %32698, align 8, !dbg !376
  %32700 = load double, ptr %16, align 8, !dbg !377
  %32701 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32702 = load double, ptr %32701, align 8, !dbg !377
  %32703 = load double, ptr %17, align 8, !dbg !377
  %32704 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32705 = load double, ptr %32704, align 8, !dbg !377
  %32706 = call double @cross(double %32700, double %32702, double %32703, double %32705), !dbg !377
  %32707 = load i32, ptr %10, align 4, !dbg !378
  %32708 = sext i32 %32707 to i64, !dbg !379
  %32709 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32708, !dbg !379
  %32710 = load double, ptr %6, align 8, !dbg !380
  %32711 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32712 = load double, ptr %32711, align 8, !dbg !380
  %32713 = load double, ptr %32709, align 16, !dbg !380
  %32714 = getelementptr inbounds { double, double }, ptr %32709, i32 0, i32 1, !dbg !380
  %32715 = load double, ptr %32714, align 8, !dbg !380
  %32716 = call { double, double } @make_vec(double %32710, double %32712, double %32713, double %32715), !dbg !380
  %32717 = extractvalue { double, double } %32716, 0, !dbg !380
  store double %32717, ptr %18, align 8, !dbg !380
  %32718 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32719 = extractvalue { double, double } %32716, 1, !dbg !380
  store double %32719, ptr %32718, align 8, !dbg !380
  %32720 = load i32, ptr %10, align 4, !dbg !381
  %32721 = add nsw i32 %32720, 1, !dbg !382
  %32722 = sext i32 %32721 to i64, !dbg !383
  %32723 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32722, !dbg !383
  %32724 = load double, ptr %6, align 8, !dbg !384
  %32725 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32726 = load double, ptr %32725, align 8, !dbg !384
  %32727 = load double, ptr %32723, align 16, !dbg !384
  %32728 = getelementptr inbounds { double, double }, ptr %32723, i32 0, i32 1, !dbg !384
  %32729 = load double, ptr %32728, align 8, !dbg !384
  %32730 = call { double, double } @make_vec(double %32724, double %32726, double %32727, double %32729), !dbg !384
  %32731 = extractvalue { double, double } %32730, 0, !dbg !384
  store double %32731, ptr %19, align 8, !dbg !384
  %32732 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32733 = extractvalue { double, double } %32730, 1, !dbg !384
  store double %32733, ptr %32732, align 8, !dbg !384
  %32734 = load double, ptr %18, align 8, !dbg !385
  %32735 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32736 = load double, ptr %32735, align 8, !dbg !385
  %32737 = load double, ptr %19, align 8, !dbg !385
  %32738 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32739 = load double, ptr %32738, align 8, !dbg !385
  %32740 = call double @dot(double %32734, double %32736, double %32737, double %32739), !dbg !385
  %32741 = call double @atan2(double noundef %32706, double noundef %32740) #6, !dbg !386
  store double %32741, ptr %13, align 8, !dbg !387
  %32742 = load double, ptr %13, align 8, !dbg !388
  %32743 = load double, ptr %14, align 8, !dbg !389
  %32744 = fadd double %32743, %32742, !dbg !389
  store double %32744, ptr %14, align 8, !dbg !389
  %32745 = load double, ptr %13, align 8, !dbg !390
  %32746 = fsub double %32745, 0x400921FB54442D18, !dbg !392
  %32747 = call double @llvm.fabs.f64(double %32746), !dbg !393
  %32748 = fcmp ole double %32747, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32748, label %14330, label %32749, !dbg !395

32749:                                            ; preds = %32672
  %32750 = load double, ptr %13, align 8, !dbg !396
  %32751 = fadd double %32750, 0x400921FB54442D18, !dbg !397
  %32752 = call double @llvm.fabs.f64(double %32751), !dbg !398
  %32753 = fcmp ole double %32752, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32753, label %14330, label %32754, !dbg !400

32754:                                            ; preds = %32749
  br label %32755, !dbg !403

32755:                                            ; preds = %32754
  %32756 = load i32, ptr %10, align 4, !dbg !404
  %32757 = add nsw i32 %32756, 1, !dbg !404
  store i32 %32757, ptr %10, align 4, !dbg !404
  %32758 = load i32, ptr %10, align 4, !dbg !364
  %32759 = load i32, ptr %8, align 4, !dbg !366
  %32760 = icmp slt i32 %32758, %32759, !dbg !367
  br i1 %32760, label %32761, label %48422, !dbg !368

32761:                                            ; preds = %32755
  %32762 = load i32, ptr %10, align 4, !dbg !369
  %32763 = sext i32 %32762 to i64, !dbg !371
  %32764 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32763, !dbg !371
  %32765 = load double, ptr %6, align 8, !dbg !372
  %32766 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32767 = load double, ptr %32766, align 8, !dbg !372
  %32768 = load double, ptr %32764, align 16, !dbg !372
  %32769 = getelementptr inbounds { double, double }, ptr %32764, i32 0, i32 1, !dbg !372
  %32770 = load double, ptr %32769, align 8, !dbg !372
  %32771 = call { double, double } @make_vec(double %32765, double %32767, double %32768, double %32770), !dbg !372
  %32772 = extractvalue { double, double } %32771, 0, !dbg !372
  store double %32772, ptr %16, align 8, !dbg !372
  %32773 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32774 = extractvalue { double, double } %32771, 1, !dbg !372
  store double %32774, ptr %32773, align 8, !dbg !372
  %32775 = load i32, ptr %10, align 4, !dbg !373
  %32776 = add nsw i32 %32775, 1, !dbg !374
  %32777 = sext i32 %32776 to i64, !dbg !375
  %32778 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32777, !dbg !375
  %32779 = load double, ptr %6, align 8, !dbg !376
  %32780 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32781 = load double, ptr %32780, align 8, !dbg !376
  %32782 = load double, ptr %32778, align 16, !dbg !376
  %32783 = getelementptr inbounds { double, double }, ptr %32778, i32 0, i32 1, !dbg !376
  %32784 = load double, ptr %32783, align 8, !dbg !376
  %32785 = call { double, double } @make_vec(double %32779, double %32781, double %32782, double %32784), !dbg !376
  %32786 = extractvalue { double, double } %32785, 0, !dbg !376
  store double %32786, ptr %17, align 8, !dbg !376
  %32787 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32788 = extractvalue { double, double } %32785, 1, !dbg !376
  store double %32788, ptr %32787, align 8, !dbg !376
  %32789 = load double, ptr %16, align 8, !dbg !377
  %32790 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32791 = load double, ptr %32790, align 8, !dbg !377
  %32792 = load double, ptr %17, align 8, !dbg !377
  %32793 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32794 = load double, ptr %32793, align 8, !dbg !377
  %32795 = call double @cross(double %32789, double %32791, double %32792, double %32794), !dbg !377
  %32796 = load i32, ptr %10, align 4, !dbg !378
  %32797 = sext i32 %32796 to i64, !dbg !379
  %32798 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32797, !dbg !379
  %32799 = load double, ptr %6, align 8, !dbg !380
  %32800 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32801 = load double, ptr %32800, align 8, !dbg !380
  %32802 = load double, ptr %32798, align 16, !dbg !380
  %32803 = getelementptr inbounds { double, double }, ptr %32798, i32 0, i32 1, !dbg !380
  %32804 = load double, ptr %32803, align 8, !dbg !380
  %32805 = call { double, double } @make_vec(double %32799, double %32801, double %32802, double %32804), !dbg !380
  %32806 = extractvalue { double, double } %32805, 0, !dbg !380
  store double %32806, ptr %18, align 8, !dbg !380
  %32807 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32808 = extractvalue { double, double } %32805, 1, !dbg !380
  store double %32808, ptr %32807, align 8, !dbg !380
  %32809 = load i32, ptr %10, align 4, !dbg !381
  %32810 = add nsw i32 %32809, 1, !dbg !382
  %32811 = sext i32 %32810 to i64, !dbg !383
  %32812 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32811, !dbg !383
  %32813 = load double, ptr %6, align 8, !dbg !384
  %32814 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32815 = load double, ptr %32814, align 8, !dbg !384
  %32816 = load double, ptr %32812, align 16, !dbg !384
  %32817 = getelementptr inbounds { double, double }, ptr %32812, i32 0, i32 1, !dbg !384
  %32818 = load double, ptr %32817, align 8, !dbg !384
  %32819 = call { double, double } @make_vec(double %32813, double %32815, double %32816, double %32818), !dbg !384
  %32820 = extractvalue { double, double } %32819, 0, !dbg !384
  store double %32820, ptr %19, align 8, !dbg !384
  %32821 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32822 = extractvalue { double, double } %32819, 1, !dbg !384
  store double %32822, ptr %32821, align 8, !dbg !384
  %32823 = load double, ptr %18, align 8, !dbg !385
  %32824 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32825 = load double, ptr %32824, align 8, !dbg !385
  %32826 = load double, ptr %19, align 8, !dbg !385
  %32827 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32828 = load double, ptr %32827, align 8, !dbg !385
  %32829 = call double @dot(double %32823, double %32825, double %32826, double %32828), !dbg !385
  %32830 = call double @atan2(double noundef %32795, double noundef %32829) #6, !dbg !386
  store double %32830, ptr %13, align 8, !dbg !387
  %32831 = load double, ptr %13, align 8, !dbg !388
  %32832 = load double, ptr %14, align 8, !dbg !389
  %32833 = fadd double %32832, %32831, !dbg !389
  store double %32833, ptr %14, align 8, !dbg !389
  %32834 = load double, ptr %13, align 8, !dbg !390
  %32835 = fsub double %32834, 0x400921FB54442D18, !dbg !392
  %32836 = call double @llvm.fabs.f64(double %32835), !dbg !393
  %32837 = fcmp ole double %32836, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32837, label %14330, label %32838, !dbg !395

32838:                                            ; preds = %32761
  %32839 = load double, ptr %13, align 8, !dbg !396
  %32840 = fadd double %32839, 0x400921FB54442D18, !dbg !397
  %32841 = call double @llvm.fabs.f64(double %32840), !dbg !398
  %32842 = fcmp ole double %32841, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32842, label %14330, label %32843, !dbg !400

32843:                                            ; preds = %32838
  br label %32844, !dbg !403

32844:                                            ; preds = %32843
  %32845 = load i32, ptr %10, align 4, !dbg !404
  %32846 = add nsw i32 %32845, 1, !dbg !404
  store i32 %32846, ptr %10, align 4, !dbg !404
  %32847 = load i32, ptr %10, align 4, !dbg !364
  %32848 = load i32, ptr %8, align 4, !dbg !366
  %32849 = icmp slt i32 %32847, %32848, !dbg !367
  br i1 %32849, label %32850, label %48422, !dbg !368

32850:                                            ; preds = %32844
  %32851 = load i32, ptr %10, align 4, !dbg !369
  %32852 = sext i32 %32851 to i64, !dbg !371
  %32853 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32852, !dbg !371
  %32854 = load double, ptr %6, align 8, !dbg !372
  %32855 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32856 = load double, ptr %32855, align 8, !dbg !372
  %32857 = load double, ptr %32853, align 16, !dbg !372
  %32858 = getelementptr inbounds { double, double }, ptr %32853, i32 0, i32 1, !dbg !372
  %32859 = load double, ptr %32858, align 8, !dbg !372
  %32860 = call { double, double } @make_vec(double %32854, double %32856, double %32857, double %32859), !dbg !372
  %32861 = extractvalue { double, double } %32860, 0, !dbg !372
  store double %32861, ptr %16, align 8, !dbg !372
  %32862 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32863 = extractvalue { double, double } %32860, 1, !dbg !372
  store double %32863, ptr %32862, align 8, !dbg !372
  %32864 = load i32, ptr %10, align 4, !dbg !373
  %32865 = add nsw i32 %32864, 1, !dbg !374
  %32866 = sext i32 %32865 to i64, !dbg !375
  %32867 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32866, !dbg !375
  %32868 = load double, ptr %6, align 8, !dbg !376
  %32869 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32870 = load double, ptr %32869, align 8, !dbg !376
  %32871 = load double, ptr %32867, align 16, !dbg !376
  %32872 = getelementptr inbounds { double, double }, ptr %32867, i32 0, i32 1, !dbg !376
  %32873 = load double, ptr %32872, align 8, !dbg !376
  %32874 = call { double, double } @make_vec(double %32868, double %32870, double %32871, double %32873), !dbg !376
  %32875 = extractvalue { double, double } %32874, 0, !dbg !376
  store double %32875, ptr %17, align 8, !dbg !376
  %32876 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32877 = extractvalue { double, double } %32874, 1, !dbg !376
  store double %32877, ptr %32876, align 8, !dbg !376
  %32878 = load double, ptr %16, align 8, !dbg !377
  %32879 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32880 = load double, ptr %32879, align 8, !dbg !377
  %32881 = load double, ptr %17, align 8, !dbg !377
  %32882 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32883 = load double, ptr %32882, align 8, !dbg !377
  %32884 = call double @cross(double %32878, double %32880, double %32881, double %32883), !dbg !377
  %32885 = load i32, ptr %10, align 4, !dbg !378
  %32886 = sext i32 %32885 to i64, !dbg !379
  %32887 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32886, !dbg !379
  %32888 = load double, ptr %6, align 8, !dbg !380
  %32889 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32890 = load double, ptr %32889, align 8, !dbg !380
  %32891 = load double, ptr %32887, align 16, !dbg !380
  %32892 = getelementptr inbounds { double, double }, ptr %32887, i32 0, i32 1, !dbg !380
  %32893 = load double, ptr %32892, align 8, !dbg !380
  %32894 = call { double, double } @make_vec(double %32888, double %32890, double %32891, double %32893), !dbg !380
  %32895 = extractvalue { double, double } %32894, 0, !dbg !380
  store double %32895, ptr %18, align 8, !dbg !380
  %32896 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32897 = extractvalue { double, double } %32894, 1, !dbg !380
  store double %32897, ptr %32896, align 8, !dbg !380
  %32898 = load i32, ptr %10, align 4, !dbg !381
  %32899 = add nsw i32 %32898, 1, !dbg !382
  %32900 = sext i32 %32899 to i64, !dbg !383
  %32901 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32900, !dbg !383
  %32902 = load double, ptr %6, align 8, !dbg !384
  %32903 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32904 = load double, ptr %32903, align 8, !dbg !384
  %32905 = load double, ptr %32901, align 16, !dbg !384
  %32906 = getelementptr inbounds { double, double }, ptr %32901, i32 0, i32 1, !dbg !384
  %32907 = load double, ptr %32906, align 8, !dbg !384
  %32908 = call { double, double } @make_vec(double %32902, double %32904, double %32905, double %32907), !dbg !384
  %32909 = extractvalue { double, double } %32908, 0, !dbg !384
  store double %32909, ptr %19, align 8, !dbg !384
  %32910 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %32911 = extractvalue { double, double } %32908, 1, !dbg !384
  store double %32911, ptr %32910, align 8, !dbg !384
  %32912 = load double, ptr %18, align 8, !dbg !385
  %32913 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %32914 = load double, ptr %32913, align 8, !dbg !385
  %32915 = load double, ptr %19, align 8, !dbg !385
  %32916 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %32917 = load double, ptr %32916, align 8, !dbg !385
  %32918 = call double @dot(double %32912, double %32914, double %32915, double %32917), !dbg !385
  %32919 = call double @atan2(double noundef %32884, double noundef %32918) #6, !dbg !386
  store double %32919, ptr %13, align 8, !dbg !387
  %32920 = load double, ptr %13, align 8, !dbg !388
  %32921 = load double, ptr %14, align 8, !dbg !389
  %32922 = fadd double %32921, %32920, !dbg !389
  store double %32922, ptr %14, align 8, !dbg !389
  %32923 = load double, ptr %13, align 8, !dbg !390
  %32924 = fsub double %32923, 0x400921FB54442D18, !dbg !392
  %32925 = call double @llvm.fabs.f64(double %32924), !dbg !393
  %32926 = fcmp ole double %32925, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %32926, label %14330, label %32927, !dbg !395

32927:                                            ; preds = %32850
  %32928 = load double, ptr %13, align 8, !dbg !396
  %32929 = fadd double %32928, 0x400921FB54442D18, !dbg !397
  %32930 = call double @llvm.fabs.f64(double %32929), !dbg !398
  %32931 = fcmp ole double %32930, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %32931, label %14330, label %32932, !dbg !400

32932:                                            ; preds = %32927
  br label %32933, !dbg !403

32933:                                            ; preds = %32932
  %32934 = load i32, ptr %10, align 4, !dbg !404
  %32935 = add nsw i32 %32934, 1, !dbg !404
  store i32 %32935, ptr %10, align 4, !dbg !404
  %32936 = load i32, ptr %10, align 4, !dbg !364
  %32937 = load i32, ptr %8, align 4, !dbg !366
  %32938 = icmp slt i32 %32936, %32937, !dbg !367
  br i1 %32938, label %32939, label %48422, !dbg !368

32939:                                            ; preds = %32933
  %32940 = load i32, ptr %10, align 4, !dbg !369
  %32941 = sext i32 %32940 to i64, !dbg !371
  %32942 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32941, !dbg !371
  %32943 = load double, ptr %6, align 8, !dbg !372
  %32944 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %32945 = load double, ptr %32944, align 8, !dbg !372
  %32946 = load double, ptr %32942, align 16, !dbg !372
  %32947 = getelementptr inbounds { double, double }, ptr %32942, i32 0, i32 1, !dbg !372
  %32948 = load double, ptr %32947, align 8, !dbg !372
  %32949 = call { double, double } @make_vec(double %32943, double %32945, double %32946, double %32948), !dbg !372
  %32950 = extractvalue { double, double } %32949, 0, !dbg !372
  store double %32950, ptr %16, align 8, !dbg !372
  %32951 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %32952 = extractvalue { double, double } %32949, 1, !dbg !372
  store double %32952, ptr %32951, align 8, !dbg !372
  %32953 = load i32, ptr %10, align 4, !dbg !373
  %32954 = add nsw i32 %32953, 1, !dbg !374
  %32955 = sext i32 %32954 to i64, !dbg !375
  %32956 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32955, !dbg !375
  %32957 = load double, ptr %6, align 8, !dbg !376
  %32958 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %32959 = load double, ptr %32958, align 8, !dbg !376
  %32960 = load double, ptr %32956, align 16, !dbg !376
  %32961 = getelementptr inbounds { double, double }, ptr %32956, i32 0, i32 1, !dbg !376
  %32962 = load double, ptr %32961, align 8, !dbg !376
  %32963 = call { double, double } @make_vec(double %32957, double %32959, double %32960, double %32962), !dbg !376
  %32964 = extractvalue { double, double } %32963, 0, !dbg !376
  store double %32964, ptr %17, align 8, !dbg !376
  %32965 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %32966 = extractvalue { double, double } %32963, 1, !dbg !376
  store double %32966, ptr %32965, align 8, !dbg !376
  %32967 = load double, ptr %16, align 8, !dbg !377
  %32968 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %32969 = load double, ptr %32968, align 8, !dbg !377
  %32970 = load double, ptr %17, align 8, !dbg !377
  %32971 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %32972 = load double, ptr %32971, align 8, !dbg !377
  %32973 = call double @cross(double %32967, double %32969, double %32970, double %32972), !dbg !377
  %32974 = load i32, ptr %10, align 4, !dbg !378
  %32975 = sext i32 %32974 to i64, !dbg !379
  %32976 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32975, !dbg !379
  %32977 = load double, ptr %6, align 8, !dbg !380
  %32978 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %32979 = load double, ptr %32978, align 8, !dbg !380
  %32980 = load double, ptr %32976, align 16, !dbg !380
  %32981 = getelementptr inbounds { double, double }, ptr %32976, i32 0, i32 1, !dbg !380
  %32982 = load double, ptr %32981, align 8, !dbg !380
  %32983 = call { double, double } @make_vec(double %32977, double %32979, double %32980, double %32982), !dbg !380
  %32984 = extractvalue { double, double } %32983, 0, !dbg !380
  store double %32984, ptr %18, align 8, !dbg !380
  %32985 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %32986 = extractvalue { double, double } %32983, 1, !dbg !380
  store double %32986, ptr %32985, align 8, !dbg !380
  %32987 = load i32, ptr %10, align 4, !dbg !381
  %32988 = add nsw i32 %32987, 1, !dbg !382
  %32989 = sext i32 %32988 to i64, !dbg !383
  %32990 = getelementptr inbounds %struct.POINT, ptr %26, i64 %32989, !dbg !383
  %32991 = load double, ptr %6, align 8, !dbg !384
  %32992 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %32993 = load double, ptr %32992, align 8, !dbg !384
  %32994 = load double, ptr %32990, align 16, !dbg !384
  %32995 = getelementptr inbounds { double, double }, ptr %32990, i32 0, i32 1, !dbg !384
  %32996 = load double, ptr %32995, align 8, !dbg !384
  %32997 = call { double, double } @make_vec(double %32991, double %32993, double %32994, double %32996), !dbg !384
  %32998 = extractvalue { double, double } %32997, 0, !dbg !384
  store double %32998, ptr %19, align 8, !dbg !384
  %32999 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33000 = extractvalue { double, double } %32997, 1, !dbg !384
  store double %33000, ptr %32999, align 8, !dbg !384
  %33001 = load double, ptr %18, align 8, !dbg !385
  %33002 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33003 = load double, ptr %33002, align 8, !dbg !385
  %33004 = load double, ptr %19, align 8, !dbg !385
  %33005 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33006 = load double, ptr %33005, align 8, !dbg !385
  %33007 = call double @dot(double %33001, double %33003, double %33004, double %33006), !dbg !385
  %33008 = call double @atan2(double noundef %32973, double noundef %33007) #6, !dbg !386
  store double %33008, ptr %13, align 8, !dbg !387
  %33009 = load double, ptr %13, align 8, !dbg !388
  %33010 = load double, ptr %14, align 8, !dbg !389
  %33011 = fadd double %33010, %33009, !dbg !389
  store double %33011, ptr %14, align 8, !dbg !389
  %33012 = load double, ptr %13, align 8, !dbg !390
  %33013 = fsub double %33012, 0x400921FB54442D18, !dbg !392
  %33014 = call double @llvm.fabs.f64(double %33013), !dbg !393
  %33015 = fcmp ole double %33014, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33015, label %14330, label %33016, !dbg !395

33016:                                            ; preds = %32939
  %33017 = load double, ptr %13, align 8, !dbg !396
  %33018 = fadd double %33017, 0x400921FB54442D18, !dbg !397
  %33019 = call double @llvm.fabs.f64(double %33018), !dbg !398
  %33020 = fcmp ole double %33019, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33020, label %14330, label %33021, !dbg !400

33021:                                            ; preds = %33016
  br label %33022, !dbg !403

33022:                                            ; preds = %33021
  %33023 = load i32, ptr %10, align 4, !dbg !404
  %33024 = add nsw i32 %33023, 1, !dbg !404
  store i32 %33024, ptr %10, align 4, !dbg !404
  %33025 = load i32, ptr %10, align 4, !dbg !364
  %33026 = load i32, ptr %8, align 4, !dbg !366
  %33027 = icmp slt i32 %33025, %33026, !dbg !367
  br i1 %33027, label %33028, label %48422, !dbg !368

33028:                                            ; preds = %33022
  %33029 = load i32, ptr %10, align 4, !dbg !369
  %33030 = sext i32 %33029 to i64, !dbg !371
  %33031 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33030, !dbg !371
  %33032 = load double, ptr %6, align 8, !dbg !372
  %33033 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33034 = load double, ptr %33033, align 8, !dbg !372
  %33035 = load double, ptr %33031, align 16, !dbg !372
  %33036 = getelementptr inbounds { double, double }, ptr %33031, i32 0, i32 1, !dbg !372
  %33037 = load double, ptr %33036, align 8, !dbg !372
  %33038 = call { double, double } @make_vec(double %33032, double %33034, double %33035, double %33037), !dbg !372
  %33039 = extractvalue { double, double } %33038, 0, !dbg !372
  store double %33039, ptr %16, align 8, !dbg !372
  %33040 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33041 = extractvalue { double, double } %33038, 1, !dbg !372
  store double %33041, ptr %33040, align 8, !dbg !372
  %33042 = load i32, ptr %10, align 4, !dbg !373
  %33043 = add nsw i32 %33042, 1, !dbg !374
  %33044 = sext i32 %33043 to i64, !dbg !375
  %33045 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33044, !dbg !375
  %33046 = load double, ptr %6, align 8, !dbg !376
  %33047 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33048 = load double, ptr %33047, align 8, !dbg !376
  %33049 = load double, ptr %33045, align 16, !dbg !376
  %33050 = getelementptr inbounds { double, double }, ptr %33045, i32 0, i32 1, !dbg !376
  %33051 = load double, ptr %33050, align 8, !dbg !376
  %33052 = call { double, double } @make_vec(double %33046, double %33048, double %33049, double %33051), !dbg !376
  %33053 = extractvalue { double, double } %33052, 0, !dbg !376
  store double %33053, ptr %17, align 8, !dbg !376
  %33054 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33055 = extractvalue { double, double } %33052, 1, !dbg !376
  store double %33055, ptr %33054, align 8, !dbg !376
  %33056 = load double, ptr %16, align 8, !dbg !377
  %33057 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33058 = load double, ptr %33057, align 8, !dbg !377
  %33059 = load double, ptr %17, align 8, !dbg !377
  %33060 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33061 = load double, ptr %33060, align 8, !dbg !377
  %33062 = call double @cross(double %33056, double %33058, double %33059, double %33061), !dbg !377
  %33063 = load i32, ptr %10, align 4, !dbg !378
  %33064 = sext i32 %33063 to i64, !dbg !379
  %33065 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33064, !dbg !379
  %33066 = load double, ptr %6, align 8, !dbg !380
  %33067 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33068 = load double, ptr %33067, align 8, !dbg !380
  %33069 = load double, ptr %33065, align 16, !dbg !380
  %33070 = getelementptr inbounds { double, double }, ptr %33065, i32 0, i32 1, !dbg !380
  %33071 = load double, ptr %33070, align 8, !dbg !380
  %33072 = call { double, double } @make_vec(double %33066, double %33068, double %33069, double %33071), !dbg !380
  %33073 = extractvalue { double, double } %33072, 0, !dbg !380
  store double %33073, ptr %18, align 8, !dbg !380
  %33074 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33075 = extractvalue { double, double } %33072, 1, !dbg !380
  store double %33075, ptr %33074, align 8, !dbg !380
  %33076 = load i32, ptr %10, align 4, !dbg !381
  %33077 = add nsw i32 %33076, 1, !dbg !382
  %33078 = sext i32 %33077 to i64, !dbg !383
  %33079 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33078, !dbg !383
  %33080 = load double, ptr %6, align 8, !dbg !384
  %33081 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33082 = load double, ptr %33081, align 8, !dbg !384
  %33083 = load double, ptr %33079, align 16, !dbg !384
  %33084 = getelementptr inbounds { double, double }, ptr %33079, i32 0, i32 1, !dbg !384
  %33085 = load double, ptr %33084, align 8, !dbg !384
  %33086 = call { double, double } @make_vec(double %33080, double %33082, double %33083, double %33085), !dbg !384
  %33087 = extractvalue { double, double } %33086, 0, !dbg !384
  store double %33087, ptr %19, align 8, !dbg !384
  %33088 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33089 = extractvalue { double, double } %33086, 1, !dbg !384
  store double %33089, ptr %33088, align 8, !dbg !384
  %33090 = load double, ptr %18, align 8, !dbg !385
  %33091 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33092 = load double, ptr %33091, align 8, !dbg !385
  %33093 = load double, ptr %19, align 8, !dbg !385
  %33094 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33095 = load double, ptr %33094, align 8, !dbg !385
  %33096 = call double @dot(double %33090, double %33092, double %33093, double %33095), !dbg !385
  %33097 = call double @atan2(double noundef %33062, double noundef %33096) #6, !dbg !386
  store double %33097, ptr %13, align 8, !dbg !387
  %33098 = load double, ptr %13, align 8, !dbg !388
  %33099 = load double, ptr %14, align 8, !dbg !389
  %33100 = fadd double %33099, %33098, !dbg !389
  store double %33100, ptr %14, align 8, !dbg !389
  %33101 = load double, ptr %13, align 8, !dbg !390
  %33102 = fsub double %33101, 0x400921FB54442D18, !dbg !392
  %33103 = call double @llvm.fabs.f64(double %33102), !dbg !393
  %33104 = fcmp ole double %33103, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33104, label %14330, label %33105, !dbg !395

33105:                                            ; preds = %33028
  %33106 = load double, ptr %13, align 8, !dbg !396
  %33107 = fadd double %33106, 0x400921FB54442D18, !dbg !397
  %33108 = call double @llvm.fabs.f64(double %33107), !dbg !398
  %33109 = fcmp ole double %33108, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33109, label %14330, label %33110, !dbg !400

33110:                                            ; preds = %33105
  br label %33111, !dbg !403

33111:                                            ; preds = %33110
  %33112 = load i32, ptr %10, align 4, !dbg !404
  %33113 = add nsw i32 %33112, 1, !dbg !404
  store i32 %33113, ptr %10, align 4, !dbg !404
  %33114 = load i32, ptr %10, align 4, !dbg !364
  %33115 = load i32, ptr %8, align 4, !dbg !366
  %33116 = icmp slt i32 %33114, %33115, !dbg !367
  br i1 %33116, label %33117, label %48422, !dbg !368

33117:                                            ; preds = %33111
  %33118 = load i32, ptr %10, align 4, !dbg !369
  %33119 = sext i32 %33118 to i64, !dbg !371
  %33120 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33119, !dbg !371
  %33121 = load double, ptr %6, align 8, !dbg !372
  %33122 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33123 = load double, ptr %33122, align 8, !dbg !372
  %33124 = load double, ptr %33120, align 16, !dbg !372
  %33125 = getelementptr inbounds { double, double }, ptr %33120, i32 0, i32 1, !dbg !372
  %33126 = load double, ptr %33125, align 8, !dbg !372
  %33127 = call { double, double } @make_vec(double %33121, double %33123, double %33124, double %33126), !dbg !372
  %33128 = extractvalue { double, double } %33127, 0, !dbg !372
  store double %33128, ptr %16, align 8, !dbg !372
  %33129 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33130 = extractvalue { double, double } %33127, 1, !dbg !372
  store double %33130, ptr %33129, align 8, !dbg !372
  %33131 = load i32, ptr %10, align 4, !dbg !373
  %33132 = add nsw i32 %33131, 1, !dbg !374
  %33133 = sext i32 %33132 to i64, !dbg !375
  %33134 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33133, !dbg !375
  %33135 = load double, ptr %6, align 8, !dbg !376
  %33136 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33137 = load double, ptr %33136, align 8, !dbg !376
  %33138 = load double, ptr %33134, align 16, !dbg !376
  %33139 = getelementptr inbounds { double, double }, ptr %33134, i32 0, i32 1, !dbg !376
  %33140 = load double, ptr %33139, align 8, !dbg !376
  %33141 = call { double, double } @make_vec(double %33135, double %33137, double %33138, double %33140), !dbg !376
  %33142 = extractvalue { double, double } %33141, 0, !dbg !376
  store double %33142, ptr %17, align 8, !dbg !376
  %33143 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33144 = extractvalue { double, double } %33141, 1, !dbg !376
  store double %33144, ptr %33143, align 8, !dbg !376
  %33145 = load double, ptr %16, align 8, !dbg !377
  %33146 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33147 = load double, ptr %33146, align 8, !dbg !377
  %33148 = load double, ptr %17, align 8, !dbg !377
  %33149 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33150 = load double, ptr %33149, align 8, !dbg !377
  %33151 = call double @cross(double %33145, double %33147, double %33148, double %33150), !dbg !377
  %33152 = load i32, ptr %10, align 4, !dbg !378
  %33153 = sext i32 %33152 to i64, !dbg !379
  %33154 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33153, !dbg !379
  %33155 = load double, ptr %6, align 8, !dbg !380
  %33156 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33157 = load double, ptr %33156, align 8, !dbg !380
  %33158 = load double, ptr %33154, align 16, !dbg !380
  %33159 = getelementptr inbounds { double, double }, ptr %33154, i32 0, i32 1, !dbg !380
  %33160 = load double, ptr %33159, align 8, !dbg !380
  %33161 = call { double, double } @make_vec(double %33155, double %33157, double %33158, double %33160), !dbg !380
  %33162 = extractvalue { double, double } %33161, 0, !dbg !380
  store double %33162, ptr %18, align 8, !dbg !380
  %33163 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33164 = extractvalue { double, double } %33161, 1, !dbg !380
  store double %33164, ptr %33163, align 8, !dbg !380
  %33165 = load i32, ptr %10, align 4, !dbg !381
  %33166 = add nsw i32 %33165, 1, !dbg !382
  %33167 = sext i32 %33166 to i64, !dbg !383
  %33168 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33167, !dbg !383
  %33169 = load double, ptr %6, align 8, !dbg !384
  %33170 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33171 = load double, ptr %33170, align 8, !dbg !384
  %33172 = load double, ptr %33168, align 16, !dbg !384
  %33173 = getelementptr inbounds { double, double }, ptr %33168, i32 0, i32 1, !dbg !384
  %33174 = load double, ptr %33173, align 8, !dbg !384
  %33175 = call { double, double } @make_vec(double %33169, double %33171, double %33172, double %33174), !dbg !384
  %33176 = extractvalue { double, double } %33175, 0, !dbg !384
  store double %33176, ptr %19, align 8, !dbg !384
  %33177 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33178 = extractvalue { double, double } %33175, 1, !dbg !384
  store double %33178, ptr %33177, align 8, !dbg !384
  %33179 = load double, ptr %18, align 8, !dbg !385
  %33180 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33181 = load double, ptr %33180, align 8, !dbg !385
  %33182 = load double, ptr %19, align 8, !dbg !385
  %33183 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33184 = load double, ptr %33183, align 8, !dbg !385
  %33185 = call double @dot(double %33179, double %33181, double %33182, double %33184), !dbg !385
  %33186 = call double @atan2(double noundef %33151, double noundef %33185) #6, !dbg !386
  store double %33186, ptr %13, align 8, !dbg !387
  %33187 = load double, ptr %13, align 8, !dbg !388
  %33188 = load double, ptr %14, align 8, !dbg !389
  %33189 = fadd double %33188, %33187, !dbg !389
  store double %33189, ptr %14, align 8, !dbg !389
  %33190 = load double, ptr %13, align 8, !dbg !390
  %33191 = fsub double %33190, 0x400921FB54442D18, !dbg !392
  %33192 = call double @llvm.fabs.f64(double %33191), !dbg !393
  %33193 = fcmp ole double %33192, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33193, label %14330, label %33194, !dbg !395

33194:                                            ; preds = %33117
  %33195 = load double, ptr %13, align 8, !dbg !396
  %33196 = fadd double %33195, 0x400921FB54442D18, !dbg !397
  %33197 = call double @llvm.fabs.f64(double %33196), !dbg !398
  %33198 = fcmp ole double %33197, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33198, label %14330, label %33199, !dbg !400

33199:                                            ; preds = %33194
  br label %33200, !dbg !403

33200:                                            ; preds = %33199
  %33201 = load i32, ptr %10, align 4, !dbg !404
  %33202 = add nsw i32 %33201, 1, !dbg !404
  store i32 %33202, ptr %10, align 4, !dbg !404
  %33203 = load i32, ptr %10, align 4, !dbg !364
  %33204 = load i32, ptr %8, align 4, !dbg !366
  %33205 = icmp slt i32 %33203, %33204, !dbg !367
  br i1 %33205, label %33206, label %48422, !dbg !368

33206:                                            ; preds = %33200
  %33207 = load i32, ptr %10, align 4, !dbg !369
  %33208 = sext i32 %33207 to i64, !dbg !371
  %33209 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33208, !dbg !371
  %33210 = load double, ptr %6, align 8, !dbg !372
  %33211 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33212 = load double, ptr %33211, align 8, !dbg !372
  %33213 = load double, ptr %33209, align 16, !dbg !372
  %33214 = getelementptr inbounds { double, double }, ptr %33209, i32 0, i32 1, !dbg !372
  %33215 = load double, ptr %33214, align 8, !dbg !372
  %33216 = call { double, double } @make_vec(double %33210, double %33212, double %33213, double %33215), !dbg !372
  %33217 = extractvalue { double, double } %33216, 0, !dbg !372
  store double %33217, ptr %16, align 8, !dbg !372
  %33218 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33219 = extractvalue { double, double } %33216, 1, !dbg !372
  store double %33219, ptr %33218, align 8, !dbg !372
  %33220 = load i32, ptr %10, align 4, !dbg !373
  %33221 = add nsw i32 %33220, 1, !dbg !374
  %33222 = sext i32 %33221 to i64, !dbg !375
  %33223 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33222, !dbg !375
  %33224 = load double, ptr %6, align 8, !dbg !376
  %33225 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33226 = load double, ptr %33225, align 8, !dbg !376
  %33227 = load double, ptr %33223, align 16, !dbg !376
  %33228 = getelementptr inbounds { double, double }, ptr %33223, i32 0, i32 1, !dbg !376
  %33229 = load double, ptr %33228, align 8, !dbg !376
  %33230 = call { double, double } @make_vec(double %33224, double %33226, double %33227, double %33229), !dbg !376
  %33231 = extractvalue { double, double } %33230, 0, !dbg !376
  store double %33231, ptr %17, align 8, !dbg !376
  %33232 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33233 = extractvalue { double, double } %33230, 1, !dbg !376
  store double %33233, ptr %33232, align 8, !dbg !376
  %33234 = load double, ptr %16, align 8, !dbg !377
  %33235 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33236 = load double, ptr %33235, align 8, !dbg !377
  %33237 = load double, ptr %17, align 8, !dbg !377
  %33238 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33239 = load double, ptr %33238, align 8, !dbg !377
  %33240 = call double @cross(double %33234, double %33236, double %33237, double %33239), !dbg !377
  %33241 = load i32, ptr %10, align 4, !dbg !378
  %33242 = sext i32 %33241 to i64, !dbg !379
  %33243 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33242, !dbg !379
  %33244 = load double, ptr %6, align 8, !dbg !380
  %33245 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33246 = load double, ptr %33245, align 8, !dbg !380
  %33247 = load double, ptr %33243, align 16, !dbg !380
  %33248 = getelementptr inbounds { double, double }, ptr %33243, i32 0, i32 1, !dbg !380
  %33249 = load double, ptr %33248, align 8, !dbg !380
  %33250 = call { double, double } @make_vec(double %33244, double %33246, double %33247, double %33249), !dbg !380
  %33251 = extractvalue { double, double } %33250, 0, !dbg !380
  store double %33251, ptr %18, align 8, !dbg !380
  %33252 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33253 = extractvalue { double, double } %33250, 1, !dbg !380
  store double %33253, ptr %33252, align 8, !dbg !380
  %33254 = load i32, ptr %10, align 4, !dbg !381
  %33255 = add nsw i32 %33254, 1, !dbg !382
  %33256 = sext i32 %33255 to i64, !dbg !383
  %33257 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33256, !dbg !383
  %33258 = load double, ptr %6, align 8, !dbg !384
  %33259 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33260 = load double, ptr %33259, align 8, !dbg !384
  %33261 = load double, ptr %33257, align 16, !dbg !384
  %33262 = getelementptr inbounds { double, double }, ptr %33257, i32 0, i32 1, !dbg !384
  %33263 = load double, ptr %33262, align 8, !dbg !384
  %33264 = call { double, double } @make_vec(double %33258, double %33260, double %33261, double %33263), !dbg !384
  %33265 = extractvalue { double, double } %33264, 0, !dbg !384
  store double %33265, ptr %19, align 8, !dbg !384
  %33266 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33267 = extractvalue { double, double } %33264, 1, !dbg !384
  store double %33267, ptr %33266, align 8, !dbg !384
  %33268 = load double, ptr %18, align 8, !dbg !385
  %33269 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33270 = load double, ptr %33269, align 8, !dbg !385
  %33271 = load double, ptr %19, align 8, !dbg !385
  %33272 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33273 = load double, ptr %33272, align 8, !dbg !385
  %33274 = call double @dot(double %33268, double %33270, double %33271, double %33273), !dbg !385
  %33275 = call double @atan2(double noundef %33240, double noundef %33274) #6, !dbg !386
  store double %33275, ptr %13, align 8, !dbg !387
  %33276 = load double, ptr %13, align 8, !dbg !388
  %33277 = load double, ptr %14, align 8, !dbg !389
  %33278 = fadd double %33277, %33276, !dbg !389
  store double %33278, ptr %14, align 8, !dbg !389
  %33279 = load double, ptr %13, align 8, !dbg !390
  %33280 = fsub double %33279, 0x400921FB54442D18, !dbg !392
  %33281 = call double @llvm.fabs.f64(double %33280), !dbg !393
  %33282 = fcmp ole double %33281, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33282, label %14330, label %33283, !dbg !395

33283:                                            ; preds = %33206
  %33284 = load double, ptr %13, align 8, !dbg !396
  %33285 = fadd double %33284, 0x400921FB54442D18, !dbg !397
  %33286 = call double @llvm.fabs.f64(double %33285), !dbg !398
  %33287 = fcmp ole double %33286, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33287, label %14330, label %33288, !dbg !400

33288:                                            ; preds = %33283
  br label %33289, !dbg !403

33289:                                            ; preds = %33288
  %33290 = load i32, ptr %10, align 4, !dbg !404
  %33291 = add nsw i32 %33290, 1, !dbg !404
  store i32 %33291, ptr %10, align 4, !dbg !404
  %33292 = load i32, ptr %10, align 4, !dbg !364
  %33293 = load i32, ptr %8, align 4, !dbg !366
  %33294 = icmp slt i32 %33292, %33293, !dbg !367
  br i1 %33294, label %33295, label %48422, !dbg !368

33295:                                            ; preds = %33289
  %33296 = load i32, ptr %10, align 4, !dbg !369
  %33297 = sext i32 %33296 to i64, !dbg !371
  %33298 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33297, !dbg !371
  %33299 = load double, ptr %6, align 8, !dbg !372
  %33300 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33301 = load double, ptr %33300, align 8, !dbg !372
  %33302 = load double, ptr %33298, align 16, !dbg !372
  %33303 = getelementptr inbounds { double, double }, ptr %33298, i32 0, i32 1, !dbg !372
  %33304 = load double, ptr %33303, align 8, !dbg !372
  %33305 = call { double, double } @make_vec(double %33299, double %33301, double %33302, double %33304), !dbg !372
  %33306 = extractvalue { double, double } %33305, 0, !dbg !372
  store double %33306, ptr %16, align 8, !dbg !372
  %33307 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33308 = extractvalue { double, double } %33305, 1, !dbg !372
  store double %33308, ptr %33307, align 8, !dbg !372
  %33309 = load i32, ptr %10, align 4, !dbg !373
  %33310 = add nsw i32 %33309, 1, !dbg !374
  %33311 = sext i32 %33310 to i64, !dbg !375
  %33312 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33311, !dbg !375
  %33313 = load double, ptr %6, align 8, !dbg !376
  %33314 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33315 = load double, ptr %33314, align 8, !dbg !376
  %33316 = load double, ptr %33312, align 16, !dbg !376
  %33317 = getelementptr inbounds { double, double }, ptr %33312, i32 0, i32 1, !dbg !376
  %33318 = load double, ptr %33317, align 8, !dbg !376
  %33319 = call { double, double } @make_vec(double %33313, double %33315, double %33316, double %33318), !dbg !376
  %33320 = extractvalue { double, double } %33319, 0, !dbg !376
  store double %33320, ptr %17, align 8, !dbg !376
  %33321 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33322 = extractvalue { double, double } %33319, 1, !dbg !376
  store double %33322, ptr %33321, align 8, !dbg !376
  %33323 = load double, ptr %16, align 8, !dbg !377
  %33324 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33325 = load double, ptr %33324, align 8, !dbg !377
  %33326 = load double, ptr %17, align 8, !dbg !377
  %33327 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33328 = load double, ptr %33327, align 8, !dbg !377
  %33329 = call double @cross(double %33323, double %33325, double %33326, double %33328), !dbg !377
  %33330 = load i32, ptr %10, align 4, !dbg !378
  %33331 = sext i32 %33330 to i64, !dbg !379
  %33332 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33331, !dbg !379
  %33333 = load double, ptr %6, align 8, !dbg !380
  %33334 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33335 = load double, ptr %33334, align 8, !dbg !380
  %33336 = load double, ptr %33332, align 16, !dbg !380
  %33337 = getelementptr inbounds { double, double }, ptr %33332, i32 0, i32 1, !dbg !380
  %33338 = load double, ptr %33337, align 8, !dbg !380
  %33339 = call { double, double } @make_vec(double %33333, double %33335, double %33336, double %33338), !dbg !380
  %33340 = extractvalue { double, double } %33339, 0, !dbg !380
  store double %33340, ptr %18, align 8, !dbg !380
  %33341 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33342 = extractvalue { double, double } %33339, 1, !dbg !380
  store double %33342, ptr %33341, align 8, !dbg !380
  %33343 = load i32, ptr %10, align 4, !dbg !381
  %33344 = add nsw i32 %33343, 1, !dbg !382
  %33345 = sext i32 %33344 to i64, !dbg !383
  %33346 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33345, !dbg !383
  %33347 = load double, ptr %6, align 8, !dbg !384
  %33348 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33349 = load double, ptr %33348, align 8, !dbg !384
  %33350 = load double, ptr %33346, align 16, !dbg !384
  %33351 = getelementptr inbounds { double, double }, ptr %33346, i32 0, i32 1, !dbg !384
  %33352 = load double, ptr %33351, align 8, !dbg !384
  %33353 = call { double, double } @make_vec(double %33347, double %33349, double %33350, double %33352), !dbg !384
  %33354 = extractvalue { double, double } %33353, 0, !dbg !384
  store double %33354, ptr %19, align 8, !dbg !384
  %33355 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33356 = extractvalue { double, double } %33353, 1, !dbg !384
  store double %33356, ptr %33355, align 8, !dbg !384
  %33357 = load double, ptr %18, align 8, !dbg !385
  %33358 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33359 = load double, ptr %33358, align 8, !dbg !385
  %33360 = load double, ptr %19, align 8, !dbg !385
  %33361 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33362 = load double, ptr %33361, align 8, !dbg !385
  %33363 = call double @dot(double %33357, double %33359, double %33360, double %33362), !dbg !385
  %33364 = call double @atan2(double noundef %33329, double noundef %33363) #6, !dbg !386
  store double %33364, ptr %13, align 8, !dbg !387
  %33365 = load double, ptr %13, align 8, !dbg !388
  %33366 = load double, ptr %14, align 8, !dbg !389
  %33367 = fadd double %33366, %33365, !dbg !389
  store double %33367, ptr %14, align 8, !dbg !389
  %33368 = load double, ptr %13, align 8, !dbg !390
  %33369 = fsub double %33368, 0x400921FB54442D18, !dbg !392
  %33370 = call double @llvm.fabs.f64(double %33369), !dbg !393
  %33371 = fcmp ole double %33370, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33371, label %14330, label %33372, !dbg !395

33372:                                            ; preds = %33295
  %33373 = load double, ptr %13, align 8, !dbg !396
  %33374 = fadd double %33373, 0x400921FB54442D18, !dbg !397
  %33375 = call double @llvm.fabs.f64(double %33374), !dbg !398
  %33376 = fcmp ole double %33375, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33376, label %14330, label %33377, !dbg !400

33377:                                            ; preds = %33372
  br label %33378, !dbg !403

33378:                                            ; preds = %33377
  %33379 = load i32, ptr %10, align 4, !dbg !404
  %33380 = add nsw i32 %33379, 1, !dbg !404
  store i32 %33380, ptr %10, align 4, !dbg !404
  %33381 = load i32, ptr %10, align 4, !dbg !364
  %33382 = load i32, ptr %8, align 4, !dbg !366
  %33383 = icmp slt i32 %33381, %33382, !dbg !367
  br i1 %33383, label %33384, label %48422, !dbg !368

33384:                                            ; preds = %33378
  %33385 = load i32, ptr %10, align 4, !dbg !369
  %33386 = sext i32 %33385 to i64, !dbg !371
  %33387 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33386, !dbg !371
  %33388 = load double, ptr %6, align 8, !dbg !372
  %33389 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33390 = load double, ptr %33389, align 8, !dbg !372
  %33391 = load double, ptr %33387, align 16, !dbg !372
  %33392 = getelementptr inbounds { double, double }, ptr %33387, i32 0, i32 1, !dbg !372
  %33393 = load double, ptr %33392, align 8, !dbg !372
  %33394 = call { double, double } @make_vec(double %33388, double %33390, double %33391, double %33393), !dbg !372
  %33395 = extractvalue { double, double } %33394, 0, !dbg !372
  store double %33395, ptr %16, align 8, !dbg !372
  %33396 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33397 = extractvalue { double, double } %33394, 1, !dbg !372
  store double %33397, ptr %33396, align 8, !dbg !372
  %33398 = load i32, ptr %10, align 4, !dbg !373
  %33399 = add nsw i32 %33398, 1, !dbg !374
  %33400 = sext i32 %33399 to i64, !dbg !375
  %33401 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33400, !dbg !375
  %33402 = load double, ptr %6, align 8, !dbg !376
  %33403 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33404 = load double, ptr %33403, align 8, !dbg !376
  %33405 = load double, ptr %33401, align 16, !dbg !376
  %33406 = getelementptr inbounds { double, double }, ptr %33401, i32 0, i32 1, !dbg !376
  %33407 = load double, ptr %33406, align 8, !dbg !376
  %33408 = call { double, double } @make_vec(double %33402, double %33404, double %33405, double %33407), !dbg !376
  %33409 = extractvalue { double, double } %33408, 0, !dbg !376
  store double %33409, ptr %17, align 8, !dbg !376
  %33410 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33411 = extractvalue { double, double } %33408, 1, !dbg !376
  store double %33411, ptr %33410, align 8, !dbg !376
  %33412 = load double, ptr %16, align 8, !dbg !377
  %33413 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33414 = load double, ptr %33413, align 8, !dbg !377
  %33415 = load double, ptr %17, align 8, !dbg !377
  %33416 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33417 = load double, ptr %33416, align 8, !dbg !377
  %33418 = call double @cross(double %33412, double %33414, double %33415, double %33417), !dbg !377
  %33419 = load i32, ptr %10, align 4, !dbg !378
  %33420 = sext i32 %33419 to i64, !dbg !379
  %33421 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33420, !dbg !379
  %33422 = load double, ptr %6, align 8, !dbg !380
  %33423 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33424 = load double, ptr %33423, align 8, !dbg !380
  %33425 = load double, ptr %33421, align 16, !dbg !380
  %33426 = getelementptr inbounds { double, double }, ptr %33421, i32 0, i32 1, !dbg !380
  %33427 = load double, ptr %33426, align 8, !dbg !380
  %33428 = call { double, double } @make_vec(double %33422, double %33424, double %33425, double %33427), !dbg !380
  %33429 = extractvalue { double, double } %33428, 0, !dbg !380
  store double %33429, ptr %18, align 8, !dbg !380
  %33430 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33431 = extractvalue { double, double } %33428, 1, !dbg !380
  store double %33431, ptr %33430, align 8, !dbg !380
  %33432 = load i32, ptr %10, align 4, !dbg !381
  %33433 = add nsw i32 %33432, 1, !dbg !382
  %33434 = sext i32 %33433 to i64, !dbg !383
  %33435 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33434, !dbg !383
  %33436 = load double, ptr %6, align 8, !dbg !384
  %33437 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33438 = load double, ptr %33437, align 8, !dbg !384
  %33439 = load double, ptr %33435, align 16, !dbg !384
  %33440 = getelementptr inbounds { double, double }, ptr %33435, i32 0, i32 1, !dbg !384
  %33441 = load double, ptr %33440, align 8, !dbg !384
  %33442 = call { double, double } @make_vec(double %33436, double %33438, double %33439, double %33441), !dbg !384
  %33443 = extractvalue { double, double } %33442, 0, !dbg !384
  store double %33443, ptr %19, align 8, !dbg !384
  %33444 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33445 = extractvalue { double, double } %33442, 1, !dbg !384
  store double %33445, ptr %33444, align 8, !dbg !384
  %33446 = load double, ptr %18, align 8, !dbg !385
  %33447 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33448 = load double, ptr %33447, align 8, !dbg !385
  %33449 = load double, ptr %19, align 8, !dbg !385
  %33450 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33451 = load double, ptr %33450, align 8, !dbg !385
  %33452 = call double @dot(double %33446, double %33448, double %33449, double %33451), !dbg !385
  %33453 = call double @atan2(double noundef %33418, double noundef %33452) #6, !dbg !386
  store double %33453, ptr %13, align 8, !dbg !387
  %33454 = load double, ptr %13, align 8, !dbg !388
  %33455 = load double, ptr %14, align 8, !dbg !389
  %33456 = fadd double %33455, %33454, !dbg !389
  store double %33456, ptr %14, align 8, !dbg !389
  %33457 = load double, ptr %13, align 8, !dbg !390
  %33458 = fsub double %33457, 0x400921FB54442D18, !dbg !392
  %33459 = call double @llvm.fabs.f64(double %33458), !dbg !393
  %33460 = fcmp ole double %33459, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33460, label %14330, label %33461, !dbg !395

33461:                                            ; preds = %33384
  %33462 = load double, ptr %13, align 8, !dbg !396
  %33463 = fadd double %33462, 0x400921FB54442D18, !dbg !397
  %33464 = call double @llvm.fabs.f64(double %33463), !dbg !398
  %33465 = fcmp ole double %33464, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33465, label %14330, label %33466, !dbg !400

33466:                                            ; preds = %33461
  br label %33467, !dbg !403

33467:                                            ; preds = %33466
  %33468 = load i32, ptr %10, align 4, !dbg !404
  %33469 = add nsw i32 %33468, 1, !dbg !404
  store i32 %33469, ptr %10, align 4, !dbg !404
  %33470 = load i32, ptr %10, align 4, !dbg !364
  %33471 = load i32, ptr %8, align 4, !dbg !366
  %33472 = icmp slt i32 %33470, %33471, !dbg !367
  br i1 %33472, label %33473, label %48422, !dbg !368

33473:                                            ; preds = %33467
  %33474 = load i32, ptr %10, align 4, !dbg !369
  %33475 = sext i32 %33474 to i64, !dbg !371
  %33476 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33475, !dbg !371
  %33477 = load double, ptr %6, align 8, !dbg !372
  %33478 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33479 = load double, ptr %33478, align 8, !dbg !372
  %33480 = load double, ptr %33476, align 16, !dbg !372
  %33481 = getelementptr inbounds { double, double }, ptr %33476, i32 0, i32 1, !dbg !372
  %33482 = load double, ptr %33481, align 8, !dbg !372
  %33483 = call { double, double } @make_vec(double %33477, double %33479, double %33480, double %33482), !dbg !372
  %33484 = extractvalue { double, double } %33483, 0, !dbg !372
  store double %33484, ptr %16, align 8, !dbg !372
  %33485 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33486 = extractvalue { double, double } %33483, 1, !dbg !372
  store double %33486, ptr %33485, align 8, !dbg !372
  %33487 = load i32, ptr %10, align 4, !dbg !373
  %33488 = add nsw i32 %33487, 1, !dbg !374
  %33489 = sext i32 %33488 to i64, !dbg !375
  %33490 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33489, !dbg !375
  %33491 = load double, ptr %6, align 8, !dbg !376
  %33492 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33493 = load double, ptr %33492, align 8, !dbg !376
  %33494 = load double, ptr %33490, align 16, !dbg !376
  %33495 = getelementptr inbounds { double, double }, ptr %33490, i32 0, i32 1, !dbg !376
  %33496 = load double, ptr %33495, align 8, !dbg !376
  %33497 = call { double, double } @make_vec(double %33491, double %33493, double %33494, double %33496), !dbg !376
  %33498 = extractvalue { double, double } %33497, 0, !dbg !376
  store double %33498, ptr %17, align 8, !dbg !376
  %33499 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33500 = extractvalue { double, double } %33497, 1, !dbg !376
  store double %33500, ptr %33499, align 8, !dbg !376
  %33501 = load double, ptr %16, align 8, !dbg !377
  %33502 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33503 = load double, ptr %33502, align 8, !dbg !377
  %33504 = load double, ptr %17, align 8, !dbg !377
  %33505 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33506 = load double, ptr %33505, align 8, !dbg !377
  %33507 = call double @cross(double %33501, double %33503, double %33504, double %33506), !dbg !377
  %33508 = load i32, ptr %10, align 4, !dbg !378
  %33509 = sext i32 %33508 to i64, !dbg !379
  %33510 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33509, !dbg !379
  %33511 = load double, ptr %6, align 8, !dbg !380
  %33512 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33513 = load double, ptr %33512, align 8, !dbg !380
  %33514 = load double, ptr %33510, align 16, !dbg !380
  %33515 = getelementptr inbounds { double, double }, ptr %33510, i32 0, i32 1, !dbg !380
  %33516 = load double, ptr %33515, align 8, !dbg !380
  %33517 = call { double, double } @make_vec(double %33511, double %33513, double %33514, double %33516), !dbg !380
  %33518 = extractvalue { double, double } %33517, 0, !dbg !380
  store double %33518, ptr %18, align 8, !dbg !380
  %33519 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33520 = extractvalue { double, double } %33517, 1, !dbg !380
  store double %33520, ptr %33519, align 8, !dbg !380
  %33521 = load i32, ptr %10, align 4, !dbg !381
  %33522 = add nsw i32 %33521, 1, !dbg !382
  %33523 = sext i32 %33522 to i64, !dbg !383
  %33524 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33523, !dbg !383
  %33525 = load double, ptr %6, align 8, !dbg !384
  %33526 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33527 = load double, ptr %33526, align 8, !dbg !384
  %33528 = load double, ptr %33524, align 16, !dbg !384
  %33529 = getelementptr inbounds { double, double }, ptr %33524, i32 0, i32 1, !dbg !384
  %33530 = load double, ptr %33529, align 8, !dbg !384
  %33531 = call { double, double } @make_vec(double %33525, double %33527, double %33528, double %33530), !dbg !384
  %33532 = extractvalue { double, double } %33531, 0, !dbg !384
  store double %33532, ptr %19, align 8, !dbg !384
  %33533 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33534 = extractvalue { double, double } %33531, 1, !dbg !384
  store double %33534, ptr %33533, align 8, !dbg !384
  %33535 = load double, ptr %18, align 8, !dbg !385
  %33536 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33537 = load double, ptr %33536, align 8, !dbg !385
  %33538 = load double, ptr %19, align 8, !dbg !385
  %33539 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33540 = load double, ptr %33539, align 8, !dbg !385
  %33541 = call double @dot(double %33535, double %33537, double %33538, double %33540), !dbg !385
  %33542 = call double @atan2(double noundef %33507, double noundef %33541) #6, !dbg !386
  store double %33542, ptr %13, align 8, !dbg !387
  %33543 = load double, ptr %13, align 8, !dbg !388
  %33544 = load double, ptr %14, align 8, !dbg !389
  %33545 = fadd double %33544, %33543, !dbg !389
  store double %33545, ptr %14, align 8, !dbg !389
  %33546 = load double, ptr %13, align 8, !dbg !390
  %33547 = fsub double %33546, 0x400921FB54442D18, !dbg !392
  %33548 = call double @llvm.fabs.f64(double %33547), !dbg !393
  %33549 = fcmp ole double %33548, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33549, label %14330, label %33550, !dbg !395

33550:                                            ; preds = %33473
  %33551 = load double, ptr %13, align 8, !dbg !396
  %33552 = fadd double %33551, 0x400921FB54442D18, !dbg !397
  %33553 = call double @llvm.fabs.f64(double %33552), !dbg !398
  %33554 = fcmp ole double %33553, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33554, label %14330, label %33555, !dbg !400

33555:                                            ; preds = %33550
  br label %33556, !dbg !403

33556:                                            ; preds = %33555
  %33557 = load i32, ptr %10, align 4, !dbg !404
  %33558 = add nsw i32 %33557, 1, !dbg !404
  store i32 %33558, ptr %10, align 4, !dbg !404
  %33559 = load i32, ptr %10, align 4, !dbg !364
  %33560 = load i32, ptr %8, align 4, !dbg !366
  %33561 = icmp slt i32 %33559, %33560, !dbg !367
  br i1 %33561, label %33562, label %48422, !dbg !368

33562:                                            ; preds = %33556
  %33563 = load i32, ptr %10, align 4, !dbg !369
  %33564 = sext i32 %33563 to i64, !dbg !371
  %33565 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33564, !dbg !371
  %33566 = load double, ptr %6, align 8, !dbg !372
  %33567 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33568 = load double, ptr %33567, align 8, !dbg !372
  %33569 = load double, ptr %33565, align 16, !dbg !372
  %33570 = getelementptr inbounds { double, double }, ptr %33565, i32 0, i32 1, !dbg !372
  %33571 = load double, ptr %33570, align 8, !dbg !372
  %33572 = call { double, double } @make_vec(double %33566, double %33568, double %33569, double %33571), !dbg !372
  %33573 = extractvalue { double, double } %33572, 0, !dbg !372
  store double %33573, ptr %16, align 8, !dbg !372
  %33574 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33575 = extractvalue { double, double } %33572, 1, !dbg !372
  store double %33575, ptr %33574, align 8, !dbg !372
  %33576 = load i32, ptr %10, align 4, !dbg !373
  %33577 = add nsw i32 %33576, 1, !dbg !374
  %33578 = sext i32 %33577 to i64, !dbg !375
  %33579 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33578, !dbg !375
  %33580 = load double, ptr %6, align 8, !dbg !376
  %33581 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33582 = load double, ptr %33581, align 8, !dbg !376
  %33583 = load double, ptr %33579, align 16, !dbg !376
  %33584 = getelementptr inbounds { double, double }, ptr %33579, i32 0, i32 1, !dbg !376
  %33585 = load double, ptr %33584, align 8, !dbg !376
  %33586 = call { double, double } @make_vec(double %33580, double %33582, double %33583, double %33585), !dbg !376
  %33587 = extractvalue { double, double } %33586, 0, !dbg !376
  store double %33587, ptr %17, align 8, !dbg !376
  %33588 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33589 = extractvalue { double, double } %33586, 1, !dbg !376
  store double %33589, ptr %33588, align 8, !dbg !376
  %33590 = load double, ptr %16, align 8, !dbg !377
  %33591 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33592 = load double, ptr %33591, align 8, !dbg !377
  %33593 = load double, ptr %17, align 8, !dbg !377
  %33594 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33595 = load double, ptr %33594, align 8, !dbg !377
  %33596 = call double @cross(double %33590, double %33592, double %33593, double %33595), !dbg !377
  %33597 = load i32, ptr %10, align 4, !dbg !378
  %33598 = sext i32 %33597 to i64, !dbg !379
  %33599 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33598, !dbg !379
  %33600 = load double, ptr %6, align 8, !dbg !380
  %33601 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33602 = load double, ptr %33601, align 8, !dbg !380
  %33603 = load double, ptr %33599, align 16, !dbg !380
  %33604 = getelementptr inbounds { double, double }, ptr %33599, i32 0, i32 1, !dbg !380
  %33605 = load double, ptr %33604, align 8, !dbg !380
  %33606 = call { double, double } @make_vec(double %33600, double %33602, double %33603, double %33605), !dbg !380
  %33607 = extractvalue { double, double } %33606, 0, !dbg !380
  store double %33607, ptr %18, align 8, !dbg !380
  %33608 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33609 = extractvalue { double, double } %33606, 1, !dbg !380
  store double %33609, ptr %33608, align 8, !dbg !380
  %33610 = load i32, ptr %10, align 4, !dbg !381
  %33611 = add nsw i32 %33610, 1, !dbg !382
  %33612 = sext i32 %33611 to i64, !dbg !383
  %33613 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33612, !dbg !383
  %33614 = load double, ptr %6, align 8, !dbg !384
  %33615 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33616 = load double, ptr %33615, align 8, !dbg !384
  %33617 = load double, ptr %33613, align 16, !dbg !384
  %33618 = getelementptr inbounds { double, double }, ptr %33613, i32 0, i32 1, !dbg !384
  %33619 = load double, ptr %33618, align 8, !dbg !384
  %33620 = call { double, double } @make_vec(double %33614, double %33616, double %33617, double %33619), !dbg !384
  %33621 = extractvalue { double, double } %33620, 0, !dbg !384
  store double %33621, ptr %19, align 8, !dbg !384
  %33622 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33623 = extractvalue { double, double } %33620, 1, !dbg !384
  store double %33623, ptr %33622, align 8, !dbg !384
  %33624 = load double, ptr %18, align 8, !dbg !385
  %33625 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33626 = load double, ptr %33625, align 8, !dbg !385
  %33627 = load double, ptr %19, align 8, !dbg !385
  %33628 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33629 = load double, ptr %33628, align 8, !dbg !385
  %33630 = call double @dot(double %33624, double %33626, double %33627, double %33629), !dbg !385
  %33631 = call double @atan2(double noundef %33596, double noundef %33630) #6, !dbg !386
  store double %33631, ptr %13, align 8, !dbg !387
  %33632 = load double, ptr %13, align 8, !dbg !388
  %33633 = load double, ptr %14, align 8, !dbg !389
  %33634 = fadd double %33633, %33632, !dbg !389
  store double %33634, ptr %14, align 8, !dbg !389
  %33635 = load double, ptr %13, align 8, !dbg !390
  %33636 = fsub double %33635, 0x400921FB54442D18, !dbg !392
  %33637 = call double @llvm.fabs.f64(double %33636), !dbg !393
  %33638 = fcmp ole double %33637, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33638, label %14330, label %33639, !dbg !395

33639:                                            ; preds = %33562
  %33640 = load double, ptr %13, align 8, !dbg !396
  %33641 = fadd double %33640, 0x400921FB54442D18, !dbg !397
  %33642 = call double @llvm.fabs.f64(double %33641), !dbg !398
  %33643 = fcmp ole double %33642, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33643, label %14330, label %33644, !dbg !400

33644:                                            ; preds = %33639
  br label %33645, !dbg !403

33645:                                            ; preds = %33644
  %33646 = load i32, ptr %10, align 4, !dbg !404
  %33647 = add nsw i32 %33646, 1, !dbg !404
  store i32 %33647, ptr %10, align 4, !dbg !404
  %33648 = load i32, ptr %10, align 4, !dbg !364
  %33649 = load i32, ptr %8, align 4, !dbg !366
  %33650 = icmp slt i32 %33648, %33649, !dbg !367
  br i1 %33650, label %33651, label %48422, !dbg !368

33651:                                            ; preds = %33645
  %33652 = load i32, ptr %10, align 4, !dbg !369
  %33653 = sext i32 %33652 to i64, !dbg !371
  %33654 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33653, !dbg !371
  %33655 = load double, ptr %6, align 8, !dbg !372
  %33656 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33657 = load double, ptr %33656, align 8, !dbg !372
  %33658 = load double, ptr %33654, align 16, !dbg !372
  %33659 = getelementptr inbounds { double, double }, ptr %33654, i32 0, i32 1, !dbg !372
  %33660 = load double, ptr %33659, align 8, !dbg !372
  %33661 = call { double, double } @make_vec(double %33655, double %33657, double %33658, double %33660), !dbg !372
  %33662 = extractvalue { double, double } %33661, 0, !dbg !372
  store double %33662, ptr %16, align 8, !dbg !372
  %33663 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33664 = extractvalue { double, double } %33661, 1, !dbg !372
  store double %33664, ptr %33663, align 8, !dbg !372
  %33665 = load i32, ptr %10, align 4, !dbg !373
  %33666 = add nsw i32 %33665, 1, !dbg !374
  %33667 = sext i32 %33666 to i64, !dbg !375
  %33668 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33667, !dbg !375
  %33669 = load double, ptr %6, align 8, !dbg !376
  %33670 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33671 = load double, ptr %33670, align 8, !dbg !376
  %33672 = load double, ptr %33668, align 16, !dbg !376
  %33673 = getelementptr inbounds { double, double }, ptr %33668, i32 0, i32 1, !dbg !376
  %33674 = load double, ptr %33673, align 8, !dbg !376
  %33675 = call { double, double } @make_vec(double %33669, double %33671, double %33672, double %33674), !dbg !376
  %33676 = extractvalue { double, double } %33675, 0, !dbg !376
  store double %33676, ptr %17, align 8, !dbg !376
  %33677 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33678 = extractvalue { double, double } %33675, 1, !dbg !376
  store double %33678, ptr %33677, align 8, !dbg !376
  %33679 = load double, ptr %16, align 8, !dbg !377
  %33680 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33681 = load double, ptr %33680, align 8, !dbg !377
  %33682 = load double, ptr %17, align 8, !dbg !377
  %33683 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33684 = load double, ptr %33683, align 8, !dbg !377
  %33685 = call double @cross(double %33679, double %33681, double %33682, double %33684), !dbg !377
  %33686 = load i32, ptr %10, align 4, !dbg !378
  %33687 = sext i32 %33686 to i64, !dbg !379
  %33688 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33687, !dbg !379
  %33689 = load double, ptr %6, align 8, !dbg !380
  %33690 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33691 = load double, ptr %33690, align 8, !dbg !380
  %33692 = load double, ptr %33688, align 16, !dbg !380
  %33693 = getelementptr inbounds { double, double }, ptr %33688, i32 0, i32 1, !dbg !380
  %33694 = load double, ptr %33693, align 8, !dbg !380
  %33695 = call { double, double } @make_vec(double %33689, double %33691, double %33692, double %33694), !dbg !380
  %33696 = extractvalue { double, double } %33695, 0, !dbg !380
  store double %33696, ptr %18, align 8, !dbg !380
  %33697 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33698 = extractvalue { double, double } %33695, 1, !dbg !380
  store double %33698, ptr %33697, align 8, !dbg !380
  %33699 = load i32, ptr %10, align 4, !dbg !381
  %33700 = add nsw i32 %33699, 1, !dbg !382
  %33701 = sext i32 %33700 to i64, !dbg !383
  %33702 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33701, !dbg !383
  %33703 = load double, ptr %6, align 8, !dbg !384
  %33704 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33705 = load double, ptr %33704, align 8, !dbg !384
  %33706 = load double, ptr %33702, align 16, !dbg !384
  %33707 = getelementptr inbounds { double, double }, ptr %33702, i32 0, i32 1, !dbg !384
  %33708 = load double, ptr %33707, align 8, !dbg !384
  %33709 = call { double, double } @make_vec(double %33703, double %33705, double %33706, double %33708), !dbg !384
  %33710 = extractvalue { double, double } %33709, 0, !dbg !384
  store double %33710, ptr %19, align 8, !dbg !384
  %33711 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33712 = extractvalue { double, double } %33709, 1, !dbg !384
  store double %33712, ptr %33711, align 8, !dbg !384
  %33713 = load double, ptr %18, align 8, !dbg !385
  %33714 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33715 = load double, ptr %33714, align 8, !dbg !385
  %33716 = load double, ptr %19, align 8, !dbg !385
  %33717 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33718 = load double, ptr %33717, align 8, !dbg !385
  %33719 = call double @dot(double %33713, double %33715, double %33716, double %33718), !dbg !385
  %33720 = call double @atan2(double noundef %33685, double noundef %33719) #6, !dbg !386
  store double %33720, ptr %13, align 8, !dbg !387
  %33721 = load double, ptr %13, align 8, !dbg !388
  %33722 = load double, ptr %14, align 8, !dbg !389
  %33723 = fadd double %33722, %33721, !dbg !389
  store double %33723, ptr %14, align 8, !dbg !389
  %33724 = load double, ptr %13, align 8, !dbg !390
  %33725 = fsub double %33724, 0x400921FB54442D18, !dbg !392
  %33726 = call double @llvm.fabs.f64(double %33725), !dbg !393
  %33727 = fcmp ole double %33726, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33727, label %14330, label %33728, !dbg !395

33728:                                            ; preds = %33651
  %33729 = load double, ptr %13, align 8, !dbg !396
  %33730 = fadd double %33729, 0x400921FB54442D18, !dbg !397
  %33731 = call double @llvm.fabs.f64(double %33730), !dbg !398
  %33732 = fcmp ole double %33731, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33732, label %14330, label %33733, !dbg !400

33733:                                            ; preds = %33728
  br label %33734, !dbg !403

33734:                                            ; preds = %33733
  %33735 = load i32, ptr %10, align 4, !dbg !404
  %33736 = add nsw i32 %33735, 1, !dbg !404
  store i32 %33736, ptr %10, align 4, !dbg !404
  %33737 = load i32, ptr %10, align 4, !dbg !364
  %33738 = load i32, ptr %8, align 4, !dbg !366
  %33739 = icmp slt i32 %33737, %33738, !dbg !367
  br i1 %33739, label %33740, label %48422, !dbg !368

33740:                                            ; preds = %33734
  %33741 = load i32, ptr %10, align 4, !dbg !369
  %33742 = sext i32 %33741 to i64, !dbg !371
  %33743 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33742, !dbg !371
  %33744 = load double, ptr %6, align 8, !dbg !372
  %33745 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33746 = load double, ptr %33745, align 8, !dbg !372
  %33747 = load double, ptr %33743, align 16, !dbg !372
  %33748 = getelementptr inbounds { double, double }, ptr %33743, i32 0, i32 1, !dbg !372
  %33749 = load double, ptr %33748, align 8, !dbg !372
  %33750 = call { double, double } @make_vec(double %33744, double %33746, double %33747, double %33749), !dbg !372
  %33751 = extractvalue { double, double } %33750, 0, !dbg !372
  store double %33751, ptr %16, align 8, !dbg !372
  %33752 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33753 = extractvalue { double, double } %33750, 1, !dbg !372
  store double %33753, ptr %33752, align 8, !dbg !372
  %33754 = load i32, ptr %10, align 4, !dbg !373
  %33755 = add nsw i32 %33754, 1, !dbg !374
  %33756 = sext i32 %33755 to i64, !dbg !375
  %33757 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33756, !dbg !375
  %33758 = load double, ptr %6, align 8, !dbg !376
  %33759 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33760 = load double, ptr %33759, align 8, !dbg !376
  %33761 = load double, ptr %33757, align 16, !dbg !376
  %33762 = getelementptr inbounds { double, double }, ptr %33757, i32 0, i32 1, !dbg !376
  %33763 = load double, ptr %33762, align 8, !dbg !376
  %33764 = call { double, double } @make_vec(double %33758, double %33760, double %33761, double %33763), !dbg !376
  %33765 = extractvalue { double, double } %33764, 0, !dbg !376
  store double %33765, ptr %17, align 8, !dbg !376
  %33766 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33767 = extractvalue { double, double } %33764, 1, !dbg !376
  store double %33767, ptr %33766, align 8, !dbg !376
  %33768 = load double, ptr %16, align 8, !dbg !377
  %33769 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33770 = load double, ptr %33769, align 8, !dbg !377
  %33771 = load double, ptr %17, align 8, !dbg !377
  %33772 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33773 = load double, ptr %33772, align 8, !dbg !377
  %33774 = call double @cross(double %33768, double %33770, double %33771, double %33773), !dbg !377
  %33775 = load i32, ptr %10, align 4, !dbg !378
  %33776 = sext i32 %33775 to i64, !dbg !379
  %33777 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33776, !dbg !379
  %33778 = load double, ptr %6, align 8, !dbg !380
  %33779 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33780 = load double, ptr %33779, align 8, !dbg !380
  %33781 = load double, ptr %33777, align 16, !dbg !380
  %33782 = getelementptr inbounds { double, double }, ptr %33777, i32 0, i32 1, !dbg !380
  %33783 = load double, ptr %33782, align 8, !dbg !380
  %33784 = call { double, double } @make_vec(double %33778, double %33780, double %33781, double %33783), !dbg !380
  %33785 = extractvalue { double, double } %33784, 0, !dbg !380
  store double %33785, ptr %18, align 8, !dbg !380
  %33786 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33787 = extractvalue { double, double } %33784, 1, !dbg !380
  store double %33787, ptr %33786, align 8, !dbg !380
  %33788 = load i32, ptr %10, align 4, !dbg !381
  %33789 = add nsw i32 %33788, 1, !dbg !382
  %33790 = sext i32 %33789 to i64, !dbg !383
  %33791 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33790, !dbg !383
  %33792 = load double, ptr %6, align 8, !dbg !384
  %33793 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33794 = load double, ptr %33793, align 8, !dbg !384
  %33795 = load double, ptr %33791, align 16, !dbg !384
  %33796 = getelementptr inbounds { double, double }, ptr %33791, i32 0, i32 1, !dbg !384
  %33797 = load double, ptr %33796, align 8, !dbg !384
  %33798 = call { double, double } @make_vec(double %33792, double %33794, double %33795, double %33797), !dbg !384
  %33799 = extractvalue { double, double } %33798, 0, !dbg !384
  store double %33799, ptr %19, align 8, !dbg !384
  %33800 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33801 = extractvalue { double, double } %33798, 1, !dbg !384
  store double %33801, ptr %33800, align 8, !dbg !384
  %33802 = load double, ptr %18, align 8, !dbg !385
  %33803 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33804 = load double, ptr %33803, align 8, !dbg !385
  %33805 = load double, ptr %19, align 8, !dbg !385
  %33806 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33807 = load double, ptr %33806, align 8, !dbg !385
  %33808 = call double @dot(double %33802, double %33804, double %33805, double %33807), !dbg !385
  %33809 = call double @atan2(double noundef %33774, double noundef %33808) #6, !dbg !386
  store double %33809, ptr %13, align 8, !dbg !387
  %33810 = load double, ptr %13, align 8, !dbg !388
  %33811 = load double, ptr %14, align 8, !dbg !389
  %33812 = fadd double %33811, %33810, !dbg !389
  store double %33812, ptr %14, align 8, !dbg !389
  %33813 = load double, ptr %13, align 8, !dbg !390
  %33814 = fsub double %33813, 0x400921FB54442D18, !dbg !392
  %33815 = call double @llvm.fabs.f64(double %33814), !dbg !393
  %33816 = fcmp ole double %33815, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33816, label %14330, label %33817, !dbg !395

33817:                                            ; preds = %33740
  %33818 = load double, ptr %13, align 8, !dbg !396
  %33819 = fadd double %33818, 0x400921FB54442D18, !dbg !397
  %33820 = call double @llvm.fabs.f64(double %33819), !dbg !398
  %33821 = fcmp ole double %33820, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33821, label %14330, label %33822, !dbg !400

33822:                                            ; preds = %33817
  br label %33823, !dbg !403

33823:                                            ; preds = %33822
  %33824 = load i32, ptr %10, align 4, !dbg !404
  %33825 = add nsw i32 %33824, 1, !dbg !404
  store i32 %33825, ptr %10, align 4, !dbg !404
  %33826 = load i32, ptr %10, align 4, !dbg !364
  %33827 = load i32, ptr %8, align 4, !dbg !366
  %33828 = icmp slt i32 %33826, %33827, !dbg !367
  br i1 %33828, label %33829, label %48422, !dbg !368

33829:                                            ; preds = %33823
  %33830 = load i32, ptr %10, align 4, !dbg !369
  %33831 = sext i32 %33830 to i64, !dbg !371
  %33832 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33831, !dbg !371
  %33833 = load double, ptr %6, align 8, !dbg !372
  %33834 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33835 = load double, ptr %33834, align 8, !dbg !372
  %33836 = load double, ptr %33832, align 16, !dbg !372
  %33837 = getelementptr inbounds { double, double }, ptr %33832, i32 0, i32 1, !dbg !372
  %33838 = load double, ptr %33837, align 8, !dbg !372
  %33839 = call { double, double } @make_vec(double %33833, double %33835, double %33836, double %33838), !dbg !372
  %33840 = extractvalue { double, double } %33839, 0, !dbg !372
  store double %33840, ptr %16, align 8, !dbg !372
  %33841 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33842 = extractvalue { double, double } %33839, 1, !dbg !372
  store double %33842, ptr %33841, align 8, !dbg !372
  %33843 = load i32, ptr %10, align 4, !dbg !373
  %33844 = add nsw i32 %33843, 1, !dbg !374
  %33845 = sext i32 %33844 to i64, !dbg !375
  %33846 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33845, !dbg !375
  %33847 = load double, ptr %6, align 8, !dbg !376
  %33848 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33849 = load double, ptr %33848, align 8, !dbg !376
  %33850 = load double, ptr %33846, align 16, !dbg !376
  %33851 = getelementptr inbounds { double, double }, ptr %33846, i32 0, i32 1, !dbg !376
  %33852 = load double, ptr %33851, align 8, !dbg !376
  %33853 = call { double, double } @make_vec(double %33847, double %33849, double %33850, double %33852), !dbg !376
  %33854 = extractvalue { double, double } %33853, 0, !dbg !376
  store double %33854, ptr %17, align 8, !dbg !376
  %33855 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33856 = extractvalue { double, double } %33853, 1, !dbg !376
  store double %33856, ptr %33855, align 8, !dbg !376
  %33857 = load double, ptr %16, align 8, !dbg !377
  %33858 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33859 = load double, ptr %33858, align 8, !dbg !377
  %33860 = load double, ptr %17, align 8, !dbg !377
  %33861 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33862 = load double, ptr %33861, align 8, !dbg !377
  %33863 = call double @cross(double %33857, double %33859, double %33860, double %33862), !dbg !377
  %33864 = load i32, ptr %10, align 4, !dbg !378
  %33865 = sext i32 %33864 to i64, !dbg !379
  %33866 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33865, !dbg !379
  %33867 = load double, ptr %6, align 8, !dbg !380
  %33868 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33869 = load double, ptr %33868, align 8, !dbg !380
  %33870 = load double, ptr %33866, align 16, !dbg !380
  %33871 = getelementptr inbounds { double, double }, ptr %33866, i32 0, i32 1, !dbg !380
  %33872 = load double, ptr %33871, align 8, !dbg !380
  %33873 = call { double, double } @make_vec(double %33867, double %33869, double %33870, double %33872), !dbg !380
  %33874 = extractvalue { double, double } %33873, 0, !dbg !380
  store double %33874, ptr %18, align 8, !dbg !380
  %33875 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33876 = extractvalue { double, double } %33873, 1, !dbg !380
  store double %33876, ptr %33875, align 8, !dbg !380
  %33877 = load i32, ptr %10, align 4, !dbg !381
  %33878 = add nsw i32 %33877, 1, !dbg !382
  %33879 = sext i32 %33878 to i64, !dbg !383
  %33880 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33879, !dbg !383
  %33881 = load double, ptr %6, align 8, !dbg !384
  %33882 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33883 = load double, ptr %33882, align 8, !dbg !384
  %33884 = load double, ptr %33880, align 16, !dbg !384
  %33885 = getelementptr inbounds { double, double }, ptr %33880, i32 0, i32 1, !dbg !384
  %33886 = load double, ptr %33885, align 8, !dbg !384
  %33887 = call { double, double } @make_vec(double %33881, double %33883, double %33884, double %33886), !dbg !384
  %33888 = extractvalue { double, double } %33887, 0, !dbg !384
  store double %33888, ptr %19, align 8, !dbg !384
  %33889 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33890 = extractvalue { double, double } %33887, 1, !dbg !384
  store double %33890, ptr %33889, align 8, !dbg !384
  %33891 = load double, ptr %18, align 8, !dbg !385
  %33892 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33893 = load double, ptr %33892, align 8, !dbg !385
  %33894 = load double, ptr %19, align 8, !dbg !385
  %33895 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33896 = load double, ptr %33895, align 8, !dbg !385
  %33897 = call double @dot(double %33891, double %33893, double %33894, double %33896), !dbg !385
  %33898 = call double @atan2(double noundef %33863, double noundef %33897) #6, !dbg !386
  store double %33898, ptr %13, align 8, !dbg !387
  %33899 = load double, ptr %13, align 8, !dbg !388
  %33900 = load double, ptr %14, align 8, !dbg !389
  %33901 = fadd double %33900, %33899, !dbg !389
  store double %33901, ptr %14, align 8, !dbg !389
  %33902 = load double, ptr %13, align 8, !dbg !390
  %33903 = fsub double %33902, 0x400921FB54442D18, !dbg !392
  %33904 = call double @llvm.fabs.f64(double %33903), !dbg !393
  %33905 = fcmp ole double %33904, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33905, label %14330, label %33906, !dbg !395

33906:                                            ; preds = %33829
  %33907 = load double, ptr %13, align 8, !dbg !396
  %33908 = fadd double %33907, 0x400921FB54442D18, !dbg !397
  %33909 = call double @llvm.fabs.f64(double %33908), !dbg !398
  %33910 = fcmp ole double %33909, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33910, label %14330, label %33911, !dbg !400

33911:                                            ; preds = %33906
  br label %33912, !dbg !403

33912:                                            ; preds = %33911
  %33913 = load i32, ptr %10, align 4, !dbg !404
  %33914 = add nsw i32 %33913, 1, !dbg !404
  store i32 %33914, ptr %10, align 4, !dbg !404
  %33915 = load i32, ptr %10, align 4, !dbg !364
  %33916 = load i32, ptr %8, align 4, !dbg !366
  %33917 = icmp slt i32 %33915, %33916, !dbg !367
  br i1 %33917, label %33918, label %48422, !dbg !368

33918:                                            ; preds = %33912
  %33919 = load i32, ptr %10, align 4, !dbg !369
  %33920 = sext i32 %33919 to i64, !dbg !371
  %33921 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33920, !dbg !371
  %33922 = load double, ptr %6, align 8, !dbg !372
  %33923 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %33924 = load double, ptr %33923, align 8, !dbg !372
  %33925 = load double, ptr %33921, align 16, !dbg !372
  %33926 = getelementptr inbounds { double, double }, ptr %33921, i32 0, i32 1, !dbg !372
  %33927 = load double, ptr %33926, align 8, !dbg !372
  %33928 = call { double, double } @make_vec(double %33922, double %33924, double %33925, double %33927), !dbg !372
  %33929 = extractvalue { double, double } %33928, 0, !dbg !372
  store double %33929, ptr %16, align 8, !dbg !372
  %33930 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %33931 = extractvalue { double, double } %33928, 1, !dbg !372
  store double %33931, ptr %33930, align 8, !dbg !372
  %33932 = load i32, ptr %10, align 4, !dbg !373
  %33933 = add nsw i32 %33932, 1, !dbg !374
  %33934 = sext i32 %33933 to i64, !dbg !375
  %33935 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33934, !dbg !375
  %33936 = load double, ptr %6, align 8, !dbg !376
  %33937 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %33938 = load double, ptr %33937, align 8, !dbg !376
  %33939 = load double, ptr %33935, align 16, !dbg !376
  %33940 = getelementptr inbounds { double, double }, ptr %33935, i32 0, i32 1, !dbg !376
  %33941 = load double, ptr %33940, align 8, !dbg !376
  %33942 = call { double, double } @make_vec(double %33936, double %33938, double %33939, double %33941), !dbg !376
  %33943 = extractvalue { double, double } %33942, 0, !dbg !376
  store double %33943, ptr %17, align 8, !dbg !376
  %33944 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %33945 = extractvalue { double, double } %33942, 1, !dbg !376
  store double %33945, ptr %33944, align 8, !dbg !376
  %33946 = load double, ptr %16, align 8, !dbg !377
  %33947 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %33948 = load double, ptr %33947, align 8, !dbg !377
  %33949 = load double, ptr %17, align 8, !dbg !377
  %33950 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %33951 = load double, ptr %33950, align 8, !dbg !377
  %33952 = call double @cross(double %33946, double %33948, double %33949, double %33951), !dbg !377
  %33953 = load i32, ptr %10, align 4, !dbg !378
  %33954 = sext i32 %33953 to i64, !dbg !379
  %33955 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33954, !dbg !379
  %33956 = load double, ptr %6, align 8, !dbg !380
  %33957 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %33958 = load double, ptr %33957, align 8, !dbg !380
  %33959 = load double, ptr %33955, align 16, !dbg !380
  %33960 = getelementptr inbounds { double, double }, ptr %33955, i32 0, i32 1, !dbg !380
  %33961 = load double, ptr %33960, align 8, !dbg !380
  %33962 = call { double, double } @make_vec(double %33956, double %33958, double %33959, double %33961), !dbg !380
  %33963 = extractvalue { double, double } %33962, 0, !dbg !380
  store double %33963, ptr %18, align 8, !dbg !380
  %33964 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %33965 = extractvalue { double, double } %33962, 1, !dbg !380
  store double %33965, ptr %33964, align 8, !dbg !380
  %33966 = load i32, ptr %10, align 4, !dbg !381
  %33967 = add nsw i32 %33966, 1, !dbg !382
  %33968 = sext i32 %33967 to i64, !dbg !383
  %33969 = getelementptr inbounds %struct.POINT, ptr %26, i64 %33968, !dbg !383
  %33970 = load double, ptr %6, align 8, !dbg !384
  %33971 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %33972 = load double, ptr %33971, align 8, !dbg !384
  %33973 = load double, ptr %33969, align 16, !dbg !384
  %33974 = getelementptr inbounds { double, double }, ptr %33969, i32 0, i32 1, !dbg !384
  %33975 = load double, ptr %33974, align 8, !dbg !384
  %33976 = call { double, double } @make_vec(double %33970, double %33972, double %33973, double %33975), !dbg !384
  %33977 = extractvalue { double, double } %33976, 0, !dbg !384
  store double %33977, ptr %19, align 8, !dbg !384
  %33978 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %33979 = extractvalue { double, double } %33976, 1, !dbg !384
  store double %33979, ptr %33978, align 8, !dbg !384
  %33980 = load double, ptr %18, align 8, !dbg !385
  %33981 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %33982 = load double, ptr %33981, align 8, !dbg !385
  %33983 = load double, ptr %19, align 8, !dbg !385
  %33984 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %33985 = load double, ptr %33984, align 8, !dbg !385
  %33986 = call double @dot(double %33980, double %33982, double %33983, double %33985), !dbg !385
  %33987 = call double @atan2(double noundef %33952, double noundef %33986) #6, !dbg !386
  store double %33987, ptr %13, align 8, !dbg !387
  %33988 = load double, ptr %13, align 8, !dbg !388
  %33989 = load double, ptr %14, align 8, !dbg !389
  %33990 = fadd double %33989, %33988, !dbg !389
  store double %33990, ptr %14, align 8, !dbg !389
  %33991 = load double, ptr %13, align 8, !dbg !390
  %33992 = fsub double %33991, 0x400921FB54442D18, !dbg !392
  %33993 = call double @llvm.fabs.f64(double %33992), !dbg !393
  %33994 = fcmp ole double %33993, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %33994, label %14330, label %33995, !dbg !395

33995:                                            ; preds = %33918
  %33996 = load double, ptr %13, align 8, !dbg !396
  %33997 = fadd double %33996, 0x400921FB54442D18, !dbg !397
  %33998 = call double @llvm.fabs.f64(double %33997), !dbg !398
  %33999 = fcmp ole double %33998, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %33999, label %14330, label %34000, !dbg !400

34000:                                            ; preds = %33995
  br label %34001, !dbg !403

34001:                                            ; preds = %34000
  %34002 = load i32, ptr %10, align 4, !dbg !404
  %34003 = add nsw i32 %34002, 1, !dbg !404
  store i32 %34003, ptr %10, align 4, !dbg !404
  %34004 = load i32, ptr %10, align 4, !dbg !364
  %34005 = load i32, ptr %8, align 4, !dbg !366
  %34006 = icmp slt i32 %34004, %34005, !dbg !367
  br i1 %34006, label %34007, label %48422, !dbg !368

34007:                                            ; preds = %34001
  %34008 = load i32, ptr %10, align 4, !dbg !369
  %34009 = sext i32 %34008 to i64, !dbg !371
  %34010 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34009, !dbg !371
  %34011 = load double, ptr %6, align 8, !dbg !372
  %34012 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34013 = load double, ptr %34012, align 8, !dbg !372
  %34014 = load double, ptr %34010, align 16, !dbg !372
  %34015 = getelementptr inbounds { double, double }, ptr %34010, i32 0, i32 1, !dbg !372
  %34016 = load double, ptr %34015, align 8, !dbg !372
  %34017 = call { double, double } @make_vec(double %34011, double %34013, double %34014, double %34016), !dbg !372
  %34018 = extractvalue { double, double } %34017, 0, !dbg !372
  store double %34018, ptr %16, align 8, !dbg !372
  %34019 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34020 = extractvalue { double, double } %34017, 1, !dbg !372
  store double %34020, ptr %34019, align 8, !dbg !372
  %34021 = load i32, ptr %10, align 4, !dbg !373
  %34022 = add nsw i32 %34021, 1, !dbg !374
  %34023 = sext i32 %34022 to i64, !dbg !375
  %34024 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34023, !dbg !375
  %34025 = load double, ptr %6, align 8, !dbg !376
  %34026 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34027 = load double, ptr %34026, align 8, !dbg !376
  %34028 = load double, ptr %34024, align 16, !dbg !376
  %34029 = getelementptr inbounds { double, double }, ptr %34024, i32 0, i32 1, !dbg !376
  %34030 = load double, ptr %34029, align 8, !dbg !376
  %34031 = call { double, double } @make_vec(double %34025, double %34027, double %34028, double %34030), !dbg !376
  %34032 = extractvalue { double, double } %34031, 0, !dbg !376
  store double %34032, ptr %17, align 8, !dbg !376
  %34033 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34034 = extractvalue { double, double } %34031, 1, !dbg !376
  store double %34034, ptr %34033, align 8, !dbg !376
  %34035 = load double, ptr %16, align 8, !dbg !377
  %34036 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34037 = load double, ptr %34036, align 8, !dbg !377
  %34038 = load double, ptr %17, align 8, !dbg !377
  %34039 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34040 = load double, ptr %34039, align 8, !dbg !377
  %34041 = call double @cross(double %34035, double %34037, double %34038, double %34040), !dbg !377
  %34042 = load i32, ptr %10, align 4, !dbg !378
  %34043 = sext i32 %34042 to i64, !dbg !379
  %34044 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34043, !dbg !379
  %34045 = load double, ptr %6, align 8, !dbg !380
  %34046 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34047 = load double, ptr %34046, align 8, !dbg !380
  %34048 = load double, ptr %34044, align 16, !dbg !380
  %34049 = getelementptr inbounds { double, double }, ptr %34044, i32 0, i32 1, !dbg !380
  %34050 = load double, ptr %34049, align 8, !dbg !380
  %34051 = call { double, double } @make_vec(double %34045, double %34047, double %34048, double %34050), !dbg !380
  %34052 = extractvalue { double, double } %34051, 0, !dbg !380
  store double %34052, ptr %18, align 8, !dbg !380
  %34053 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34054 = extractvalue { double, double } %34051, 1, !dbg !380
  store double %34054, ptr %34053, align 8, !dbg !380
  %34055 = load i32, ptr %10, align 4, !dbg !381
  %34056 = add nsw i32 %34055, 1, !dbg !382
  %34057 = sext i32 %34056 to i64, !dbg !383
  %34058 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34057, !dbg !383
  %34059 = load double, ptr %6, align 8, !dbg !384
  %34060 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34061 = load double, ptr %34060, align 8, !dbg !384
  %34062 = load double, ptr %34058, align 16, !dbg !384
  %34063 = getelementptr inbounds { double, double }, ptr %34058, i32 0, i32 1, !dbg !384
  %34064 = load double, ptr %34063, align 8, !dbg !384
  %34065 = call { double, double } @make_vec(double %34059, double %34061, double %34062, double %34064), !dbg !384
  %34066 = extractvalue { double, double } %34065, 0, !dbg !384
  store double %34066, ptr %19, align 8, !dbg !384
  %34067 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34068 = extractvalue { double, double } %34065, 1, !dbg !384
  store double %34068, ptr %34067, align 8, !dbg !384
  %34069 = load double, ptr %18, align 8, !dbg !385
  %34070 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34071 = load double, ptr %34070, align 8, !dbg !385
  %34072 = load double, ptr %19, align 8, !dbg !385
  %34073 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34074 = load double, ptr %34073, align 8, !dbg !385
  %34075 = call double @dot(double %34069, double %34071, double %34072, double %34074), !dbg !385
  %34076 = call double @atan2(double noundef %34041, double noundef %34075) #6, !dbg !386
  store double %34076, ptr %13, align 8, !dbg !387
  %34077 = load double, ptr %13, align 8, !dbg !388
  %34078 = load double, ptr %14, align 8, !dbg !389
  %34079 = fadd double %34078, %34077, !dbg !389
  store double %34079, ptr %14, align 8, !dbg !389
  %34080 = load double, ptr %13, align 8, !dbg !390
  %34081 = fsub double %34080, 0x400921FB54442D18, !dbg !392
  %34082 = call double @llvm.fabs.f64(double %34081), !dbg !393
  %34083 = fcmp ole double %34082, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34083, label %14330, label %34084, !dbg !395

34084:                                            ; preds = %34007
  %34085 = load double, ptr %13, align 8, !dbg !396
  %34086 = fadd double %34085, 0x400921FB54442D18, !dbg !397
  %34087 = call double @llvm.fabs.f64(double %34086), !dbg !398
  %34088 = fcmp ole double %34087, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34088, label %14330, label %34089, !dbg !400

34089:                                            ; preds = %34084
  br label %34090, !dbg !403

34090:                                            ; preds = %34089
  %34091 = load i32, ptr %10, align 4, !dbg !404
  %34092 = add nsw i32 %34091, 1, !dbg !404
  store i32 %34092, ptr %10, align 4, !dbg !404
  %34093 = load i32, ptr %10, align 4, !dbg !364
  %34094 = load i32, ptr %8, align 4, !dbg !366
  %34095 = icmp slt i32 %34093, %34094, !dbg !367
  br i1 %34095, label %34096, label %48422, !dbg !368

34096:                                            ; preds = %34090
  %34097 = load i32, ptr %10, align 4, !dbg !369
  %34098 = sext i32 %34097 to i64, !dbg !371
  %34099 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34098, !dbg !371
  %34100 = load double, ptr %6, align 8, !dbg !372
  %34101 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34102 = load double, ptr %34101, align 8, !dbg !372
  %34103 = load double, ptr %34099, align 16, !dbg !372
  %34104 = getelementptr inbounds { double, double }, ptr %34099, i32 0, i32 1, !dbg !372
  %34105 = load double, ptr %34104, align 8, !dbg !372
  %34106 = call { double, double } @make_vec(double %34100, double %34102, double %34103, double %34105), !dbg !372
  %34107 = extractvalue { double, double } %34106, 0, !dbg !372
  store double %34107, ptr %16, align 8, !dbg !372
  %34108 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34109 = extractvalue { double, double } %34106, 1, !dbg !372
  store double %34109, ptr %34108, align 8, !dbg !372
  %34110 = load i32, ptr %10, align 4, !dbg !373
  %34111 = add nsw i32 %34110, 1, !dbg !374
  %34112 = sext i32 %34111 to i64, !dbg !375
  %34113 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34112, !dbg !375
  %34114 = load double, ptr %6, align 8, !dbg !376
  %34115 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34116 = load double, ptr %34115, align 8, !dbg !376
  %34117 = load double, ptr %34113, align 16, !dbg !376
  %34118 = getelementptr inbounds { double, double }, ptr %34113, i32 0, i32 1, !dbg !376
  %34119 = load double, ptr %34118, align 8, !dbg !376
  %34120 = call { double, double } @make_vec(double %34114, double %34116, double %34117, double %34119), !dbg !376
  %34121 = extractvalue { double, double } %34120, 0, !dbg !376
  store double %34121, ptr %17, align 8, !dbg !376
  %34122 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34123 = extractvalue { double, double } %34120, 1, !dbg !376
  store double %34123, ptr %34122, align 8, !dbg !376
  %34124 = load double, ptr %16, align 8, !dbg !377
  %34125 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34126 = load double, ptr %34125, align 8, !dbg !377
  %34127 = load double, ptr %17, align 8, !dbg !377
  %34128 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34129 = load double, ptr %34128, align 8, !dbg !377
  %34130 = call double @cross(double %34124, double %34126, double %34127, double %34129), !dbg !377
  %34131 = load i32, ptr %10, align 4, !dbg !378
  %34132 = sext i32 %34131 to i64, !dbg !379
  %34133 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34132, !dbg !379
  %34134 = load double, ptr %6, align 8, !dbg !380
  %34135 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34136 = load double, ptr %34135, align 8, !dbg !380
  %34137 = load double, ptr %34133, align 16, !dbg !380
  %34138 = getelementptr inbounds { double, double }, ptr %34133, i32 0, i32 1, !dbg !380
  %34139 = load double, ptr %34138, align 8, !dbg !380
  %34140 = call { double, double } @make_vec(double %34134, double %34136, double %34137, double %34139), !dbg !380
  %34141 = extractvalue { double, double } %34140, 0, !dbg !380
  store double %34141, ptr %18, align 8, !dbg !380
  %34142 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34143 = extractvalue { double, double } %34140, 1, !dbg !380
  store double %34143, ptr %34142, align 8, !dbg !380
  %34144 = load i32, ptr %10, align 4, !dbg !381
  %34145 = add nsw i32 %34144, 1, !dbg !382
  %34146 = sext i32 %34145 to i64, !dbg !383
  %34147 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34146, !dbg !383
  %34148 = load double, ptr %6, align 8, !dbg !384
  %34149 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34150 = load double, ptr %34149, align 8, !dbg !384
  %34151 = load double, ptr %34147, align 16, !dbg !384
  %34152 = getelementptr inbounds { double, double }, ptr %34147, i32 0, i32 1, !dbg !384
  %34153 = load double, ptr %34152, align 8, !dbg !384
  %34154 = call { double, double } @make_vec(double %34148, double %34150, double %34151, double %34153), !dbg !384
  %34155 = extractvalue { double, double } %34154, 0, !dbg !384
  store double %34155, ptr %19, align 8, !dbg !384
  %34156 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34157 = extractvalue { double, double } %34154, 1, !dbg !384
  store double %34157, ptr %34156, align 8, !dbg !384
  %34158 = load double, ptr %18, align 8, !dbg !385
  %34159 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34160 = load double, ptr %34159, align 8, !dbg !385
  %34161 = load double, ptr %19, align 8, !dbg !385
  %34162 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34163 = load double, ptr %34162, align 8, !dbg !385
  %34164 = call double @dot(double %34158, double %34160, double %34161, double %34163), !dbg !385
  %34165 = call double @atan2(double noundef %34130, double noundef %34164) #6, !dbg !386
  store double %34165, ptr %13, align 8, !dbg !387
  %34166 = load double, ptr %13, align 8, !dbg !388
  %34167 = load double, ptr %14, align 8, !dbg !389
  %34168 = fadd double %34167, %34166, !dbg !389
  store double %34168, ptr %14, align 8, !dbg !389
  %34169 = load double, ptr %13, align 8, !dbg !390
  %34170 = fsub double %34169, 0x400921FB54442D18, !dbg !392
  %34171 = call double @llvm.fabs.f64(double %34170), !dbg !393
  %34172 = fcmp ole double %34171, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34172, label %14330, label %34173, !dbg !395

34173:                                            ; preds = %34096
  %34174 = load double, ptr %13, align 8, !dbg !396
  %34175 = fadd double %34174, 0x400921FB54442D18, !dbg !397
  %34176 = call double @llvm.fabs.f64(double %34175), !dbg !398
  %34177 = fcmp ole double %34176, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34177, label %14330, label %34178, !dbg !400

34178:                                            ; preds = %34173
  br label %34179, !dbg !403

34179:                                            ; preds = %34178
  %34180 = load i32, ptr %10, align 4, !dbg !404
  %34181 = add nsw i32 %34180, 1, !dbg !404
  store i32 %34181, ptr %10, align 4, !dbg !404
  %34182 = load i32, ptr %10, align 4, !dbg !364
  %34183 = load i32, ptr %8, align 4, !dbg !366
  %34184 = icmp slt i32 %34182, %34183, !dbg !367
  br i1 %34184, label %34185, label %48422, !dbg !368

34185:                                            ; preds = %34179
  %34186 = load i32, ptr %10, align 4, !dbg !369
  %34187 = sext i32 %34186 to i64, !dbg !371
  %34188 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34187, !dbg !371
  %34189 = load double, ptr %6, align 8, !dbg !372
  %34190 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34191 = load double, ptr %34190, align 8, !dbg !372
  %34192 = load double, ptr %34188, align 16, !dbg !372
  %34193 = getelementptr inbounds { double, double }, ptr %34188, i32 0, i32 1, !dbg !372
  %34194 = load double, ptr %34193, align 8, !dbg !372
  %34195 = call { double, double } @make_vec(double %34189, double %34191, double %34192, double %34194), !dbg !372
  %34196 = extractvalue { double, double } %34195, 0, !dbg !372
  store double %34196, ptr %16, align 8, !dbg !372
  %34197 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34198 = extractvalue { double, double } %34195, 1, !dbg !372
  store double %34198, ptr %34197, align 8, !dbg !372
  %34199 = load i32, ptr %10, align 4, !dbg !373
  %34200 = add nsw i32 %34199, 1, !dbg !374
  %34201 = sext i32 %34200 to i64, !dbg !375
  %34202 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34201, !dbg !375
  %34203 = load double, ptr %6, align 8, !dbg !376
  %34204 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34205 = load double, ptr %34204, align 8, !dbg !376
  %34206 = load double, ptr %34202, align 16, !dbg !376
  %34207 = getelementptr inbounds { double, double }, ptr %34202, i32 0, i32 1, !dbg !376
  %34208 = load double, ptr %34207, align 8, !dbg !376
  %34209 = call { double, double } @make_vec(double %34203, double %34205, double %34206, double %34208), !dbg !376
  %34210 = extractvalue { double, double } %34209, 0, !dbg !376
  store double %34210, ptr %17, align 8, !dbg !376
  %34211 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34212 = extractvalue { double, double } %34209, 1, !dbg !376
  store double %34212, ptr %34211, align 8, !dbg !376
  %34213 = load double, ptr %16, align 8, !dbg !377
  %34214 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34215 = load double, ptr %34214, align 8, !dbg !377
  %34216 = load double, ptr %17, align 8, !dbg !377
  %34217 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34218 = load double, ptr %34217, align 8, !dbg !377
  %34219 = call double @cross(double %34213, double %34215, double %34216, double %34218), !dbg !377
  %34220 = load i32, ptr %10, align 4, !dbg !378
  %34221 = sext i32 %34220 to i64, !dbg !379
  %34222 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34221, !dbg !379
  %34223 = load double, ptr %6, align 8, !dbg !380
  %34224 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34225 = load double, ptr %34224, align 8, !dbg !380
  %34226 = load double, ptr %34222, align 16, !dbg !380
  %34227 = getelementptr inbounds { double, double }, ptr %34222, i32 0, i32 1, !dbg !380
  %34228 = load double, ptr %34227, align 8, !dbg !380
  %34229 = call { double, double } @make_vec(double %34223, double %34225, double %34226, double %34228), !dbg !380
  %34230 = extractvalue { double, double } %34229, 0, !dbg !380
  store double %34230, ptr %18, align 8, !dbg !380
  %34231 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34232 = extractvalue { double, double } %34229, 1, !dbg !380
  store double %34232, ptr %34231, align 8, !dbg !380
  %34233 = load i32, ptr %10, align 4, !dbg !381
  %34234 = add nsw i32 %34233, 1, !dbg !382
  %34235 = sext i32 %34234 to i64, !dbg !383
  %34236 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34235, !dbg !383
  %34237 = load double, ptr %6, align 8, !dbg !384
  %34238 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34239 = load double, ptr %34238, align 8, !dbg !384
  %34240 = load double, ptr %34236, align 16, !dbg !384
  %34241 = getelementptr inbounds { double, double }, ptr %34236, i32 0, i32 1, !dbg !384
  %34242 = load double, ptr %34241, align 8, !dbg !384
  %34243 = call { double, double } @make_vec(double %34237, double %34239, double %34240, double %34242), !dbg !384
  %34244 = extractvalue { double, double } %34243, 0, !dbg !384
  store double %34244, ptr %19, align 8, !dbg !384
  %34245 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34246 = extractvalue { double, double } %34243, 1, !dbg !384
  store double %34246, ptr %34245, align 8, !dbg !384
  %34247 = load double, ptr %18, align 8, !dbg !385
  %34248 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34249 = load double, ptr %34248, align 8, !dbg !385
  %34250 = load double, ptr %19, align 8, !dbg !385
  %34251 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34252 = load double, ptr %34251, align 8, !dbg !385
  %34253 = call double @dot(double %34247, double %34249, double %34250, double %34252), !dbg !385
  %34254 = call double @atan2(double noundef %34219, double noundef %34253) #6, !dbg !386
  store double %34254, ptr %13, align 8, !dbg !387
  %34255 = load double, ptr %13, align 8, !dbg !388
  %34256 = load double, ptr %14, align 8, !dbg !389
  %34257 = fadd double %34256, %34255, !dbg !389
  store double %34257, ptr %14, align 8, !dbg !389
  %34258 = load double, ptr %13, align 8, !dbg !390
  %34259 = fsub double %34258, 0x400921FB54442D18, !dbg !392
  %34260 = call double @llvm.fabs.f64(double %34259), !dbg !393
  %34261 = fcmp ole double %34260, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34261, label %14330, label %34262, !dbg !395

34262:                                            ; preds = %34185
  %34263 = load double, ptr %13, align 8, !dbg !396
  %34264 = fadd double %34263, 0x400921FB54442D18, !dbg !397
  %34265 = call double @llvm.fabs.f64(double %34264), !dbg !398
  %34266 = fcmp ole double %34265, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34266, label %14330, label %34267, !dbg !400

34267:                                            ; preds = %34262
  br label %34268, !dbg !403

34268:                                            ; preds = %34267
  %34269 = load i32, ptr %10, align 4, !dbg !404
  %34270 = add nsw i32 %34269, 1, !dbg !404
  store i32 %34270, ptr %10, align 4, !dbg !404
  %34271 = load i32, ptr %10, align 4, !dbg !364
  %34272 = load i32, ptr %8, align 4, !dbg !366
  %34273 = icmp slt i32 %34271, %34272, !dbg !367
  br i1 %34273, label %34274, label %48422, !dbg !368

34274:                                            ; preds = %34268
  %34275 = load i32, ptr %10, align 4, !dbg !369
  %34276 = sext i32 %34275 to i64, !dbg !371
  %34277 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34276, !dbg !371
  %34278 = load double, ptr %6, align 8, !dbg !372
  %34279 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34280 = load double, ptr %34279, align 8, !dbg !372
  %34281 = load double, ptr %34277, align 16, !dbg !372
  %34282 = getelementptr inbounds { double, double }, ptr %34277, i32 0, i32 1, !dbg !372
  %34283 = load double, ptr %34282, align 8, !dbg !372
  %34284 = call { double, double } @make_vec(double %34278, double %34280, double %34281, double %34283), !dbg !372
  %34285 = extractvalue { double, double } %34284, 0, !dbg !372
  store double %34285, ptr %16, align 8, !dbg !372
  %34286 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34287 = extractvalue { double, double } %34284, 1, !dbg !372
  store double %34287, ptr %34286, align 8, !dbg !372
  %34288 = load i32, ptr %10, align 4, !dbg !373
  %34289 = add nsw i32 %34288, 1, !dbg !374
  %34290 = sext i32 %34289 to i64, !dbg !375
  %34291 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34290, !dbg !375
  %34292 = load double, ptr %6, align 8, !dbg !376
  %34293 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34294 = load double, ptr %34293, align 8, !dbg !376
  %34295 = load double, ptr %34291, align 16, !dbg !376
  %34296 = getelementptr inbounds { double, double }, ptr %34291, i32 0, i32 1, !dbg !376
  %34297 = load double, ptr %34296, align 8, !dbg !376
  %34298 = call { double, double } @make_vec(double %34292, double %34294, double %34295, double %34297), !dbg !376
  %34299 = extractvalue { double, double } %34298, 0, !dbg !376
  store double %34299, ptr %17, align 8, !dbg !376
  %34300 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34301 = extractvalue { double, double } %34298, 1, !dbg !376
  store double %34301, ptr %34300, align 8, !dbg !376
  %34302 = load double, ptr %16, align 8, !dbg !377
  %34303 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34304 = load double, ptr %34303, align 8, !dbg !377
  %34305 = load double, ptr %17, align 8, !dbg !377
  %34306 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34307 = load double, ptr %34306, align 8, !dbg !377
  %34308 = call double @cross(double %34302, double %34304, double %34305, double %34307), !dbg !377
  %34309 = load i32, ptr %10, align 4, !dbg !378
  %34310 = sext i32 %34309 to i64, !dbg !379
  %34311 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34310, !dbg !379
  %34312 = load double, ptr %6, align 8, !dbg !380
  %34313 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34314 = load double, ptr %34313, align 8, !dbg !380
  %34315 = load double, ptr %34311, align 16, !dbg !380
  %34316 = getelementptr inbounds { double, double }, ptr %34311, i32 0, i32 1, !dbg !380
  %34317 = load double, ptr %34316, align 8, !dbg !380
  %34318 = call { double, double } @make_vec(double %34312, double %34314, double %34315, double %34317), !dbg !380
  %34319 = extractvalue { double, double } %34318, 0, !dbg !380
  store double %34319, ptr %18, align 8, !dbg !380
  %34320 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34321 = extractvalue { double, double } %34318, 1, !dbg !380
  store double %34321, ptr %34320, align 8, !dbg !380
  %34322 = load i32, ptr %10, align 4, !dbg !381
  %34323 = add nsw i32 %34322, 1, !dbg !382
  %34324 = sext i32 %34323 to i64, !dbg !383
  %34325 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34324, !dbg !383
  %34326 = load double, ptr %6, align 8, !dbg !384
  %34327 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34328 = load double, ptr %34327, align 8, !dbg !384
  %34329 = load double, ptr %34325, align 16, !dbg !384
  %34330 = getelementptr inbounds { double, double }, ptr %34325, i32 0, i32 1, !dbg !384
  %34331 = load double, ptr %34330, align 8, !dbg !384
  %34332 = call { double, double } @make_vec(double %34326, double %34328, double %34329, double %34331), !dbg !384
  %34333 = extractvalue { double, double } %34332, 0, !dbg !384
  store double %34333, ptr %19, align 8, !dbg !384
  %34334 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34335 = extractvalue { double, double } %34332, 1, !dbg !384
  store double %34335, ptr %34334, align 8, !dbg !384
  %34336 = load double, ptr %18, align 8, !dbg !385
  %34337 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34338 = load double, ptr %34337, align 8, !dbg !385
  %34339 = load double, ptr %19, align 8, !dbg !385
  %34340 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34341 = load double, ptr %34340, align 8, !dbg !385
  %34342 = call double @dot(double %34336, double %34338, double %34339, double %34341), !dbg !385
  %34343 = call double @atan2(double noundef %34308, double noundef %34342) #6, !dbg !386
  store double %34343, ptr %13, align 8, !dbg !387
  %34344 = load double, ptr %13, align 8, !dbg !388
  %34345 = load double, ptr %14, align 8, !dbg !389
  %34346 = fadd double %34345, %34344, !dbg !389
  store double %34346, ptr %14, align 8, !dbg !389
  %34347 = load double, ptr %13, align 8, !dbg !390
  %34348 = fsub double %34347, 0x400921FB54442D18, !dbg !392
  %34349 = call double @llvm.fabs.f64(double %34348), !dbg !393
  %34350 = fcmp ole double %34349, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34350, label %14330, label %34351, !dbg !395

34351:                                            ; preds = %34274
  %34352 = load double, ptr %13, align 8, !dbg !396
  %34353 = fadd double %34352, 0x400921FB54442D18, !dbg !397
  %34354 = call double @llvm.fabs.f64(double %34353), !dbg !398
  %34355 = fcmp ole double %34354, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34355, label %14330, label %34356, !dbg !400

34356:                                            ; preds = %34351
  br label %34357, !dbg !403

34357:                                            ; preds = %34356
  %34358 = load i32, ptr %10, align 4, !dbg !404
  %34359 = add nsw i32 %34358, 1, !dbg !404
  store i32 %34359, ptr %10, align 4, !dbg !404
  %34360 = load i32, ptr %10, align 4, !dbg !364
  %34361 = load i32, ptr %8, align 4, !dbg !366
  %34362 = icmp slt i32 %34360, %34361, !dbg !367
  br i1 %34362, label %34363, label %48422, !dbg !368

34363:                                            ; preds = %34357
  %34364 = load i32, ptr %10, align 4, !dbg !369
  %34365 = sext i32 %34364 to i64, !dbg !371
  %34366 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34365, !dbg !371
  %34367 = load double, ptr %6, align 8, !dbg !372
  %34368 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34369 = load double, ptr %34368, align 8, !dbg !372
  %34370 = load double, ptr %34366, align 16, !dbg !372
  %34371 = getelementptr inbounds { double, double }, ptr %34366, i32 0, i32 1, !dbg !372
  %34372 = load double, ptr %34371, align 8, !dbg !372
  %34373 = call { double, double } @make_vec(double %34367, double %34369, double %34370, double %34372), !dbg !372
  %34374 = extractvalue { double, double } %34373, 0, !dbg !372
  store double %34374, ptr %16, align 8, !dbg !372
  %34375 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34376 = extractvalue { double, double } %34373, 1, !dbg !372
  store double %34376, ptr %34375, align 8, !dbg !372
  %34377 = load i32, ptr %10, align 4, !dbg !373
  %34378 = add nsw i32 %34377, 1, !dbg !374
  %34379 = sext i32 %34378 to i64, !dbg !375
  %34380 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34379, !dbg !375
  %34381 = load double, ptr %6, align 8, !dbg !376
  %34382 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34383 = load double, ptr %34382, align 8, !dbg !376
  %34384 = load double, ptr %34380, align 16, !dbg !376
  %34385 = getelementptr inbounds { double, double }, ptr %34380, i32 0, i32 1, !dbg !376
  %34386 = load double, ptr %34385, align 8, !dbg !376
  %34387 = call { double, double } @make_vec(double %34381, double %34383, double %34384, double %34386), !dbg !376
  %34388 = extractvalue { double, double } %34387, 0, !dbg !376
  store double %34388, ptr %17, align 8, !dbg !376
  %34389 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34390 = extractvalue { double, double } %34387, 1, !dbg !376
  store double %34390, ptr %34389, align 8, !dbg !376
  %34391 = load double, ptr %16, align 8, !dbg !377
  %34392 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34393 = load double, ptr %34392, align 8, !dbg !377
  %34394 = load double, ptr %17, align 8, !dbg !377
  %34395 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34396 = load double, ptr %34395, align 8, !dbg !377
  %34397 = call double @cross(double %34391, double %34393, double %34394, double %34396), !dbg !377
  %34398 = load i32, ptr %10, align 4, !dbg !378
  %34399 = sext i32 %34398 to i64, !dbg !379
  %34400 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34399, !dbg !379
  %34401 = load double, ptr %6, align 8, !dbg !380
  %34402 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34403 = load double, ptr %34402, align 8, !dbg !380
  %34404 = load double, ptr %34400, align 16, !dbg !380
  %34405 = getelementptr inbounds { double, double }, ptr %34400, i32 0, i32 1, !dbg !380
  %34406 = load double, ptr %34405, align 8, !dbg !380
  %34407 = call { double, double } @make_vec(double %34401, double %34403, double %34404, double %34406), !dbg !380
  %34408 = extractvalue { double, double } %34407, 0, !dbg !380
  store double %34408, ptr %18, align 8, !dbg !380
  %34409 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34410 = extractvalue { double, double } %34407, 1, !dbg !380
  store double %34410, ptr %34409, align 8, !dbg !380
  %34411 = load i32, ptr %10, align 4, !dbg !381
  %34412 = add nsw i32 %34411, 1, !dbg !382
  %34413 = sext i32 %34412 to i64, !dbg !383
  %34414 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34413, !dbg !383
  %34415 = load double, ptr %6, align 8, !dbg !384
  %34416 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34417 = load double, ptr %34416, align 8, !dbg !384
  %34418 = load double, ptr %34414, align 16, !dbg !384
  %34419 = getelementptr inbounds { double, double }, ptr %34414, i32 0, i32 1, !dbg !384
  %34420 = load double, ptr %34419, align 8, !dbg !384
  %34421 = call { double, double } @make_vec(double %34415, double %34417, double %34418, double %34420), !dbg !384
  %34422 = extractvalue { double, double } %34421, 0, !dbg !384
  store double %34422, ptr %19, align 8, !dbg !384
  %34423 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34424 = extractvalue { double, double } %34421, 1, !dbg !384
  store double %34424, ptr %34423, align 8, !dbg !384
  %34425 = load double, ptr %18, align 8, !dbg !385
  %34426 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34427 = load double, ptr %34426, align 8, !dbg !385
  %34428 = load double, ptr %19, align 8, !dbg !385
  %34429 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34430 = load double, ptr %34429, align 8, !dbg !385
  %34431 = call double @dot(double %34425, double %34427, double %34428, double %34430), !dbg !385
  %34432 = call double @atan2(double noundef %34397, double noundef %34431) #6, !dbg !386
  store double %34432, ptr %13, align 8, !dbg !387
  %34433 = load double, ptr %13, align 8, !dbg !388
  %34434 = load double, ptr %14, align 8, !dbg !389
  %34435 = fadd double %34434, %34433, !dbg !389
  store double %34435, ptr %14, align 8, !dbg !389
  %34436 = load double, ptr %13, align 8, !dbg !390
  %34437 = fsub double %34436, 0x400921FB54442D18, !dbg !392
  %34438 = call double @llvm.fabs.f64(double %34437), !dbg !393
  %34439 = fcmp ole double %34438, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34439, label %14330, label %34440, !dbg !395

34440:                                            ; preds = %34363
  %34441 = load double, ptr %13, align 8, !dbg !396
  %34442 = fadd double %34441, 0x400921FB54442D18, !dbg !397
  %34443 = call double @llvm.fabs.f64(double %34442), !dbg !398
  %34444 = fcmp ole double %34443, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34444, label %14330, label %34445, !dbg !400

34445:                                            ; preds = %34440
  br label %34446, !dbg !403

34446:                                            ; preds = %34445
  %34447 = load i32, ptr %10, align 4, !dbg !404
  %34448 = add nsw i32 %34447, 1, !dbg !404
  store i32 %34448, ptr %10, align 4, !dbg !404
  %34449 = load i32, ptr %10, align 4, !dbg !364
  %34450 = load i32, ptr %8, align 4, !dbg !366
  %34451 = icmp slt i32 %34449, %34450, !dbg !367
  br i1 %34451, label %34452, label %48422, !dbg !368

34452:                                            ; preds = %34446
  %34453 = load i32, ptr %10, align 4, !dbg !369
  %34454 = sext i32 %34453 to i64, !dbg !371
  %34455 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34454, !dbg !371
  %34456 = load double, ptr %6, align 8, !dbg !372
  %34457 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34458 = load double, ptr %34457, align 8, !dbg !372
  %34459 = load double, ptr %34455, align 16, !dbg !372
  %34460 = getelementptr inbounds { double, double }, ptr %34455, i32 0, i32 1, !dbg !372
  %34461 = load double, ptr %34460, align 8, !dbg !372
  %34462 = call { double, double } @make_vec(double %34456, double %34458, double %34459, double %34461), !dbg !372
  %34463 = extractvalue { double, double } %34462, 0, !dbg !372
  store double %34463, ptr %16, align 8, !dbg !372
  %34464 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34465 = extractvalue { double, double } %34462, 1, !dbg !372
  store double %34465, ptr %34464, align 8, !dbg !372
  %34466 = load i32, ptr %10, align 4, !dbg !373
  %34467 = add nsw i32 %34466, 1, !dbg !374
  %34468 = sext i32 %34467 to i64, !dbg !375
  %34469 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34468, !dbg !375
  %34470 = load double, ptr %6, align 8, !dbg !376
  %34471 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34472 = load double, ptr %34471, align 8, !dbg !376
  %34473 = load double, ptr %34469, align 16, !dbg !376
  %34474 = getelementptr inbounds { double, double }, ptr %34469, i32 0, i32 1, !dbg !376
  %34475 = load double, ptr %34474, align 8, !dbg !376
  %34476 = call { double, double } @make_vec(double %34470, double %34472, double %34473, double %34475), !dbg !376
  %34477 = extractvalue { double, double } %34476, 0, !dbg !376
  store double %34477, ptr %17, align 8, !dbg !376
  %34478 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34479 = extractvalue { double, double } %34476, 1, !dbg !376
  store double %34479, ptr %34478, align 8, !dbg !376
  %34480 = load double, ptr %16, align 8, !dbg !377
  %34481 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34482 = load double, ptr %34481, align 8, !dbg !377
  %34483 = load double, ptr %17, align 8, !dbg !377
  %34484 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34485 = load double, ptr %34484, align 8, !dbg !377
  %34486 = call double @cross(double %34480, double %34482, double %34483, double %34485), !dbg !377
  %34487 = load i32, ptr %10, align 4, !dbg !378
  %34488 = sext i32 %34487 to i64, !dbg !379
  %34489 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34488, !dbg !379
  %34490 = load double, ptr %6, align 8, !dbg !380
  %34491 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34492 = load double, ptr %34491, align 8, !dbg !380
  %34493 = load double, ptr %34489, align 16, !dbg !380
  %34494 = getelementptr inbounds { double, double }, ptr %34489, i32 0, i32 1, !dbg !380
  %34495 = load double, ptr %34494, align 8, !dbg !380
  %34496 = call { double, double } @make_vec(double %34490, double %34492, double %34493, double %34495), !dbg !380
  %34497 = extractvalue { double, double } %34496, 0, !dbg !380
  store double %34497, ptr %18, align 8, !dbg !380
  %34498 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34499 = extractvalue { double, double } %34496, 1, !dbg !380
  store double %34499, ptr %34498, align 8, !dbg !380
  %34500 = load i32, ptr %10, align 4, !dbg !381
  %34501 = add nsw i32 %34500, 1, !dbg !382
  %34502 = sext i32 %34501 to i64, !dbg !383
  %34503 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34502, !dbg !383
  %34504 = load double, ptr %6, align 8, !dbg !384
  %34505 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34506 = load double, ptr %34505, align 8, !dbg !384
  %34507 = load double, ptr %34503, align 16, !dbg !384
  %34508 = getelementptr inbounds { double, double }, ptr %34503, i32 0, i32 1, !dbg !384
  %34509 = load double, ptr %34508, align 8, !dbg !384
  %34510 = call { double, double } @make_vec(double %34504, double %34506, double %34507, double %34509), !dbg !384
  %34511 = extractvalue { double, double } %34510, 0, !dbg !384
  store double %34511, ptr %19, align 8, !dbg !384
  %34512 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34513 = extractvalue { double, double } %34510, 1, !dbg !384
  store double %34513, ptr %34512, align 8, !dbg !384
  %34514 = load double, ptr %18, align 8, !dbg !385
  %34515 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34516 = load double, ptr %34515, align 8, !dbg !385
  %34517 = load double, ptr %19, align 8, !dbg !385
  %34518 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34519 = load double, ptr %34518, align 8, !dbg !385
  %34520 = call double @dot(double %34514, double %34516, double %34517, double %34519), !dbg !385
  %34521 = call double @atan2(double noundef %34486, double noundef %34520) #6, !dbg !386
  store double %34521, ptr %13, align 8, !dbg !387
  %34522 = load double, ptr %13, align 8, !dbg !388
  %34523 = load double, ptr %14, align 8, !dbg !389
  %34524 = fadd double %34523, %34522, !dbg !389
  store double %34524, ptr %14, align 8, !dbg !389
  %34525 = load double, ptr %13, align 8, !dbg !390
  %34526 = fsub double %34525, 0x400921FB54442D18, !dbg !392
  %34527 = call double @llvm.fabs.f64(double %34526), !dbg !393
  %34528 = fcmp ole double %34527, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34528, label %14330, label %34529, !dbg !395

34529:                                            ; preds = %34452
  %34530 = load double, ptr %13, align 8, !dbg !396
  %34531 = fadd double %34530, 0x400921FB54442D18, !dbg !397
  %34532 = call double @llvm.fabs.f64(double %34531), !dbg !398
  %34533 = fcmp ole double %34532, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34533, label %14330, label %34534, !dbg !400

34534:                                            ; preds = %34529
  br label %34535, !dbg !403

34535:                                            ; preds = %34534
  %34536 = load i32, ptr %10, align 4, !dbg !404
  %34537 = add nsw i32 %34536, 1, !dbg !404
  store i32 %34537, ptr %10, align 4, !dbg !404
  %34538 = load i32, ptr %10, align 4, !dbg !364
  %34539 = load i32, ptr %8, align 4, !dbg !366
  %34540 = icmp slt i32 %34538, %34539, !dbg !367
  br i1 %34540, label %34541, label %48422, !dbg !368

34541:                                            ; preds = %34535
  %34542 = load i32, ptr %10, align 4, !dbg !369
  %34543 = sext i32 %34542 to i64, !dbg !371
  %34544 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34543, !dbg !371
  %34545 = load double, ptr %6, align 8, !dbg !372
  %34546 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34547 = load double, ptr %34546, align 8, !dbg !372
  %34548 = load double, ptr %34544, align 16, !dbg !372
  %34549 = getelementptr inbounds { double, double }, ptr %34544, i32 0, i32 1, !dbg !372
  %34550 = load double, ptr %34549, align 8, !dbg !372
  %34551 = call { double, double } @make_vec(double %34545, double %34547, double %34548, double %34550), !dbg !372
  %34552 = extractvalue { double, double } %34551, 0, !dbg !372
  store double %34552, ptr %16, align 8, !dbg !372
  %34553 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34554 = extractvalue { double, double } %34551, 1, !dbg !372
  store double %34554, ptr %34553, align 8, !dbg !372
  %34555 = load i32, ptr %10, align 4, !dbg !373
  %34556 = add nsw i32 %34555, 1, !dbg !374
  %34557 = sext i32 %34556 to i64, !dbg !375
  %34558 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34557, !dbg !375
  %34559 = load double, ptr %6, align 8, !dbg !376
  %34560 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34561 = load double, ptr %34560, align 8, !dbg !376
  %34562 = load double, ptr %34558, align 16, !dbg !376
  %34563 = getelementptr inbounds { double, double }, ptr %34558, i32 0, i32 1, !dbg !376
  %34564 = load double, ptr %34563, align 8, !dbg !376
  %34565 = call { double, double } @make_vec(double %34559, double %34561, double %34562, double %34564), !dbg !376
  %34566 = extractvalue { double, double } %34565, 0, !dbg !376
  store double %34566, ptr %17, align 8, !dbg !376
  %34567 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34568 = extractvalue { double, double } %34565, 1, !dbg !376
  store double %34568, ptr %34567, align 8, !dbg !376
  %34569 = load double, ptr %16, align 8, !dbg !377
  %34570 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34571 = load double, ptr %34570, align 8, !dbg !377
  %34572 = load double, ptr %17, align 8, !dbg !377
  %34573 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34574 = load double, ptr %34573, align 8, !dbg !377
  %34575 = call double @cross(double %34569, double %34571, double %34572, double %34574), !dbg !377
  %34576 = load i32, ptr %10, align 4, !dbg !378
  %34577 = sext i32 %34576 to i64, !dbg !379
  %34578 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34577, !dbg !379
  %34579 = load double, ptr %6, align 8, !dbg !380
  %34580 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34581 = load double, ptr %34580, align 8, !dbg !380
  %34582 = load double, ptr %34578, align 16, !dbg !380
  %34583 = getelementptr inbounds { double, double }, ptr %34578, i32 0, i32 1, !dbg !380
  %34584 = load double, ptr %34583, align 8, !dbg !380
  %34585 = call { double, double } @make_vec(double %34579, double %34581, double %34582, double %34584), !dbg !380
  %34586 = extractvalue { double, double } %34585, 0, !dbg !380
  store double %34586, ptr %18, align 8, !dbg !380
  %34587 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34588 = extractvalue { double, double } %34585, 1, !dbg !380
  store double %34588, ptr %34587, align 8, !dbg !380
  %34589 = load i32, ptr %10, align 4, !dbg !381
  %34590 = add nsw i32 %34589, 1, !dbg !382
  %34591 = sext i32 %34590 to i64, !dbg !383
  %34592 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34591, !dbg !383
  %34593 = load double, ptr %6, align 8, !dbg !384
  %34594 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34595 = load double, ptr %34594, align 8, !dbg !384
  %34596 = load double, ptr %34592, align 16, !dbg !384
  %34597 = getelementptr inbounds { double, double }, ptr %34592, i32 0, i32 1, !dbg !384
  %34598 = load double, ptr %34597, align 8, !dbg !384
  %34599 = call { double, double } @make_vec(double %34593, double %34595, double %34596, double %34598), !dbg !384
  %34600 = extractvalue { double, double } %34599, 0, !dbg !384
  store double %34600, ptr %19, align 8, !dbg !384
  %34601 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34602 = extractvalue { double, double } %34599, 1, !dbg !384
  store double %34602, ptr %34601, align 8, !dbg !384
  %34603 = load double, ptr %18, align 8, !dbg !385
  %34604 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34605 = load double, ptr %34604, align 8, !dbg !385
  %34606 = load double, ptr %19, align 8, !dbg !385
  %34607 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34608 = load double, ptr %34607, align 8, !dbg !385
  %34609 = call double @dot(double %34603, double %34605, double %34606, double %34608), !dbg !385
  %34610 = call double @atan2(double noundef %34575, double noundef %34609) #6, !dbg !386
  store double %34610, ptr %13, align 8, !dbg !387
  %34611 = load double, ptr %13, align 8, !dbg !388
  %34612 = load double, ptr %14, align 8, !dbg !389
  %34613 = fadd double %34612, %34611, !dbg !389
  store double %34613, ptr %14, align 8, !dbg !389
  %34614 = load double, ptr %13, align 8, !dbg !390
  %34615 = fsub double %34614, 0x400921FB54442D18, !dbg !392
  %34616 = call double @llvm.fabs.f64(double %34615), !dbg !393
  %34617 = fcmp ole double %34616, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34617, label %14330, label %34618, !dbg !395

34618:                                            ; preds = %34541
  %34619 = load double, ptr %13, align 8, !dbg !396
  %34620 = fadd double %34619, 0x400921FB54442D18, !dbg !397
  %34621 = call double @llvm.fabs.f64(double %34620), !dbg !398
  %34622 = fcmp ole double %34621, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34622, label %14330, label %34623, !dbg !400

34623:                                            ; preds = %34618
  br label %34624, !dbg !403

34624:                                            ; preds = %34623
  %34625 = load i32, ptr %10, align 4, !dbg !404
  %34626 = add nsw i32 %34625, 1, !dbg !404
  store i32 %34626, ptr %10, align 4, !dbg !404
  %34627 = load i32, ptr %10, align 4, !dbg !364
  %34628 = load i32, ptr %8, align 4, !dbg !366
  %34629 = icmp slt i32 %34627, %34628, !dbg !367
  br i1 %34629, label %34630, label %48422, !dbg !368

34630:                                            ; preds = %34624
  %34631 = load i32, ptr %10, align 4, !dbg !369
  %34632 = sext i32 %34631 to i64, !dbg !371
  %34633 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34632, !dbg !371
  %34634 = load double, ptr %6, align 8, !dbg !372
  %34635 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34636 = load double, ptr %34635, align 8, !dbg !372
  %34637 = load double, ptr %34633, align 16, !dbg !372
  %34638 = getelementptr inbounds { double, double }, ptr %34633, i32 0, i32 1, !dbg !372
  %34639 = load double, ptr %34638, align 8, !dbg !372
  %34640 = call { double, double } @make_vec(double %34634, double %34636, double %34637, double %34639), !dbg !372
  %34641 = extractvalue { double, double } %34640, 0, !dbg !372
  store double %34641, ptr %16, align 8, !dbg !372
  %34642 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34643 = extractvalue { double, double } %34640, 1, !dbg !372
  store double %34643, ptr %34642, align 8, !dbg !372
  %34644 = load i32, ptr %10, align 4, !dbg !373
  %34645 = add nsw i32 %34644, 1, !dbg !374
  %34646 = sext i32 %34645 to i64, !dbg !375
  %34647 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34646, !dbg !375
  %34648 = load double, ptr %6, align 8, !dbg !376
  %34649 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34650 = load double, ptr %34649, align 8, !dbg !376
  %34651 = load double, ptr %34647, align 16, !dbg !376
  %34652 = getelementptr inbounds { double, double }, ptr %34647, i32 0, i32 1, !dbg !376
  %34653 = load double, ptr %34652, align 8, !dbg !376
  %34654 = call { double, double } @make_vec(double %34648, double %34650, double %34651, double %34653), !dbg !376
  %34655 = extractvalue { double, double } %34654, 0, !dbg !376
  store double %34655, ptr %17, align 8, !dbg !376
  %34656 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34657 = extractvalue { double, double } %34654, 1, !dbg !376
  store double %34657, ptr %34656, align 8, !dbg !376
  %34658 = load double, ptr %16, align 8, !dbg !377
  %34659 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34660 = load double, ptr %34659, align 8, !dbg !377
  %34661 = load double, ptr %17, align 8, !dbg !377
  %34662 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34663 = load double, ptr %34662, align 8, !dbg !377
  %34664 = call double @cross(double %34658, double %34660, double %34661, double %34663), !dbg !377
  %34665 = load i32, ptr %10, align 4, !dbg !378
  %34666 = sext i32 %34665 to i64, !dbg !379
  %34667 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34666, !dbg !379
  %34668 = load double, ptr %6, align 8, !dbg !380
  %34669 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34670 = load double, ptr %34669, align 8, !dbg !380
  %34671 = load double, ptr %34667, align 16, !dbg !380
  %34672 = getelementptr inbounds { double, double }, ptr %34667, i32 0, i32 1, !dbg !380
  %34673 = load double, ptr %34672, align 8, !dbg !380
  %34674 = call { double, double } @make_vec(double %34668, double %34670, double %34671, double %34673), !dbg !380
  %34675 = extractvalue { double, double } %34674, 0, !dbg !380
  store double %34675, ptr %18, align 8, !dbg !380
  %34676 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34677 = extractvalue { double, double } %34674, 1, !dbg !380
  store double %34677, ptr %34676, align 8, !dbg !380
  %34678 = load i32, ptr %10, align 4, !dbg !381
  %34679 = add nsw i32 %34678, 1, !dbg !382
  %34680 = sext i32 %34679 to i64, !dbg !383
  %34681 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34680, !dbg !383
  %34682 = load double, ptr %6, align 8, !dbg !384
  %34683 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34684 = load double, ptr %34683, align 8, !dbg !384
  %34685 = load double, ptr %34681, align 16, !dbg !384
  %34686 = getelementptr inbounds { double, double }, ptr %34681, i32 0, i32 1, !dbg !384
  %34687 = load double, ptr %34686, align 8, !dbg !384
  %34688 = call { double, double } @make_vec(double %34682, double %34684, double %34685, double %34687), !dbg !384
  %34689 = extractvalue { double, double } %34688, 0, !dbg !384
  store double %34689, ptr %19, align 8, !dbg !384
  %34690 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34691 = extractvalue { double, double } %34688, 1, !dbg !384
  store double %34691, ptr %34690, align 8, !dbg !384
  %34692 = load double, ptr %18, align 8, !dbg !385
  %34693 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34694 = load double, ptr %34693, align 8, !dbg !385
  %34695 = load double, ptr %19, align 8, !dbg !385
  %34696 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34697 = load double, ptr %34696, align 8, !dbg !385
  %34698 = call double @dot(double %34692, double %34694, double %34695, double %34697), !dbg !385
  %34699 = call double @atan2(double noundef %34664, double noundef %34698) #6, !dbg !386
  store double %34699, ptr %13, align 8, !dbg !387
  %34700 = load double, ptr %13, align 8, !dbg !388
  %34701 = load double, ptr %14, align 8, !dbg !389
  %34702 = fadd double %34701, %34700, !dbg !389
  store double %34702, ptr %14, align 8, !dbg !389
  %34703 = load double, ptr %13, align 8, !dbg !390
  %34704 = fsub double %34703, 0x400921FB54442D18, !dbg !392
  %34705 = call double @llvm.fabs.f64(double %34704), !dbg !393
  %34706 = fcmp ole double %34705, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34706, label %14330, label %34707, !dbg !395

34707:                                            ; preds = %34630
  %34708 = load double, ptr %13, align 8, !dbg !396
  %34709 = fadd double %34708, 0x400921FB54442D18, !dbg !397
  %34710 = call double @llvm.fabs.f64(double %34709), !dbg !398
  %34711 = fcmp ole double %34710, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34711, label %14330, label %34712, !dbg !400

34712:                                            ; preds = %34707
  br label %34713, !dbg !403

34713:                                            ; preds = %34712
  %34714 = load i32, ptr %10, align 4, !dbg !404
  %34715 = add nsw i32 %34714, 1, !dbg !404
  store i32 %34715, ptr %10, align 4, !dbg !404
  %34716 = load i32, ptr %10, align 4, !dbg !364
  %34717 = load i32, ptr %8, align 4, !dbg !366
  %34718 = icmp slt i32 %34716, %34717, !dbg !367
  br i1 %34718, label %34719, label %48422, !dbg !368

34719:                                            ; preds = %34713
  %34720 = load i32, ptr %10, align 4, !dbg !369
  %34721 = sext i32 %34720 to i64, !dbg !371
  %34722 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34721, !dbg !371
  %34723 = load double, ptr %6, align 8, !dbg !372
  %34724 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34725 = load double, ptr %34724, align 8, !dbg !372
  %34726 = load double, ptr %34722, align 16, !dbg !372
  %34727 = getelementptr inbounds { double, double }, ptr %34722, i32 0, i32 1, !dbg !372
  %34728 = load double, ptr %34727, align 8, !dbg !372
  %34729 = call { double, double } @make_vec(double %34723, double %34725, double %34726, double %34728), !dbg !372
  %34730 = extractvalue { double, double } %34729, 0, !dbg !372
  store double %34730, ptr %16, align 8, !dbg !372
  %34731 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34732 = extractvalue { double, double } %34729, 1, !dbg !372
  store double %34732, ptr %34731, align 8, !dbg !372
  %34733 = load i32, ptr %10, align 4, !dbg !373
  %34734 = add nsw i32 %34733, 1, !dbg !374
  %34735 = sext i32 %34734 to i64, !dbg !375
  %34736 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34735, !dbg !375
  %34737 = load double, ptr %6, align 8, !dbg !376
  %34738 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34739 = load double, ptr %34738, align 8, !dbg !376
  %34740 = load double, ptr %34736, align 16, !dbg !376
  %34741 = getelementptr inbounds { double, double }, ptr %34736, i32 0, i32 1, !dbg !376
  %34742 = load double, ptr %34741, align 8, !dbg !376
  %34743 = call { double, double } @make_vec(double %34737, double %34739, double %34740, double %34742), !dbg !376
  %34744 = extractvalue { double, double } %34743, 0, !dbg !376
  store double %34744, ptr %17, align 8, !dbg !376
  %34745 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34746 = extractvalue { double, double } %34743, 1, !dbg !376
  store double %34746, ptr %34745, align 8, !dbg !376
  %34747 = load double, ptr %16, align 8, !dbg !377
  %34748 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34749 = load double, ptr %34748, align 8, !dbg !377
  %34750 = load double, ptr %17, align 8, !dbg !377
  %34751 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34752 = load double, ptr %34751, align 8, !dbg !377
  %34753 = call double @cross(double %34747, double %34749, double %34750, double %34752), !dbg !377
  %34754 = load i32, ptr %10, align 4, !dbg !378
  %34755 = sext i32 %34754 to i64, !dbg !379
  %34756 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34755, !dbg !379
  %34757 = load double, ptr %6, align 8, !dbg !380
  %34758 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34759 = load double, ptr %34758, align 8, !dbg !380
  %34760 = load double, ptr %34756, align 16, !dbg !380
  %34761 = getelementptr inbounds { double, double }, ptr %34756, i32 0, i32 1, !dbg !380
  %34762 = load double, ptr %34761, align 8, !dbg !380
  %34763 = call { double, double } @make_vec(double %34757, double %34759, double %34760, double %34762), !dbg !380
  %34764 = extractvalue { double, double } %34763, 0, !dbg !380
  store double %34764, ptr %18, align 8, !dbg !380
  %34765 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34766 = extractvalue { double, double } %34763, 1, !dbg !380
  store double %34766, ptr %34765, align 8, !dbg !380
  %34767 = load i32, ptr %10, align 4, !dbg !381
  %34768 = add nsw i32 %34767, 1, !dbg !382
  %34769 = sext i32 %34768 to i64, !dbg !383
  %34770 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34769, !dbg !383
  %34771 = load double, ptr %6, align 8, !dbg !384
  %34772 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34773 = load double, ptr %34772, align 8, !dbg !384
  %34774 = load double, ptr %34770, align 16, !dbg !384
  %34775 = getelementptr inbounds { double, double }, ptr %34770, i32 0, i32 1, !dbg !384
  %34776 = load double, ptr %34775, align 8, !dbg !384
  %34777 = call { double, double } @make_vec(double %34771, double %34773, double %34774, double %34776), !dbg !384
  %34778 = extractvalue { double, double } %34777, 0, !dbg !384
  store double %34778, ptr %19, align 8, !dbg !384
  %34779 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34780 = extractvalue { double, double } %34777, 1, !dbg !384
  store double %34780, ptr %34779, align 8, !dbg !384
  %34781 = load double, ptr %18, align 8, !dbg !385
  %34782 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34783 = load double, ptr %34782, align 8, !dbg !385
  %34784 = load double, ptr %19, align 8, !dbg !385
  %34785 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34786 = load double, ptr %34785, align 8, !dbg !385
  %34787 = call double @dot(double %34781, double %34783, double %34784, double %34786), !dbg !385
  %34788 = call double @atan2(double noundef %34753, double noundef %34787) #6, !dbg !386
  store double %34788, ptr %13, align 8, !dbg !387
  %34789 = load double, ptr %13, align 8, !dbg !388
  %34790 = load double, ptr %14, align 8, !dbg !389
  %34791 = fadd double %34790, %34789, !dbg !389
  store double %34791, ptr %14, align 8, !dbg !389
  %34792 = load double, ptr %13, align 8, !dbg !390
  %34793 = fsub double %34792, 0x400921FB54442D18, !dbg !392
  %34794 = call double @llvm.fabs.f64(double %34793), !dbg !393
  %34795 = fcmp ole double %34794, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34795, label %14330, label %34796, !dbg !395

34796:                                            ; preds = %34719
  %34797 = load double, ptr %13, align 8, !dbg !396
  %34798 = fadd double %34797, 0x400921FB54442D18, !dbg !397
  %34799 = call double @llvm.fabs.f64(double %34798), !dbg !398
  %34800 = fcmp ole double %34799, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34800, label %14330, label %34801, !dbg !400

34801:                                            ; preds = %34796
  br label %34802, !dbg !403

34802:                                            ; preds = %34801
  %34803 = load i32, ptr %10, align 4, !dbg !404
  %34804 = add nsw i32 %34803, 1, !dbg !404
  store i32 %34804, ptr %10, align 4, !dbg !404
  %34805 = load i32, ptr %10, align 4, !dbg !364
  %34806 = load i32, ptr %8, align 4, !dbg !366
  %34807 = icmp slt i32 %34805, %34806, !dbg !367
  br i1 %34807, label %34808, label %48422, !dbg !368

34808:                                            ; preds = %34802
  %34809 = load i32, ptr %10, align 4, !dbg !369
  %34810 = sext i32 %34809 to i64, !dbg !371
  %34811 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34810, !dbg !371
  %34812 = load double, ptr %6, align 8, !dbg !372
  %34813 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34814 = load double, ptr %34813, align 8, !dbg !372
  %34815 = load double, ptr %34811, align 16, !dbg !372
  %34816 = getelementptr inbounds { double, double }, ptr %34811, i32 0, i32 1, !dbg !372
  %34817 = load double, ptr %34816, align 8, !dbg !372
  %34818 = call { double, double } @make_vec(double %34812, double %34814, double %34815, double %34817), !dbg !372
  %34819 = extractvalue { double, double } %34818, 0, !dbg !372
  store double %34819, ptr %16, align 8, !dbg !372
  %34820 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34821 = extractvalue { double, double } %34818, 1, !dbg !372
  store double %34821, ptr %34820, align 8, !dbg !372
  %34822 = load i32, ptr %10, align 4, !dbg !373
  %34823 = add nsw i32 %34822, 1, !dbg !374
  %34824 = sext i32 %34823 to i64, !dbg !375
  %34825 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34824, !dbg !375
  %34826 = load double, ptr %6, align 8, !dbg !376
  %34827 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34828 = load double, ptr %34827, align 8, !dbg !376
  %34829 = load double, ptr %34825, align 16, !dbg !376
  %34830 = getelementptr inbounds { double, double }, ptr %34825, i32 0, i32 1, !dbg !376
  %34831 = load double, ptr %34830, align 8, !dbg !376
  %34832 = call { double, double } @make_vec(double %34826, double %34828, double %34829, double %34831), !dbg !376
  %34833 = extractvalue { double, double } %34832, 0, !dbg !376
  store double %34833, ptr %17, align 8, !dbg !376
  %34834 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34835 = extractvalue { double, double } %34832, 1, !dbg !376
  store double %34835, ptr %34834, align 8, !dbg !376
  %34836 = load double, ptr %16, align 8, !dbg !377
  %34837 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34838 = load double, ptr %34837, align 8, !dbg !377
  %34839 = load double, ptr %17, align 8, !dbg !377
  %34840 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34841 = load double, ptr %34840, align 8, !dbg !377
  %34842 = call double @cross(double %34836, double %34838, double %34839, double %34841), !dbg !377
  %34843 = load i32, ptr %10, align 4, !dbg !378
  %34844 = sext i32 %34843 to i64, !dbg !379
  %34845 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34844, !dbg !379
  %34846 = load double, ptr %6, align 8, !dbg !380
  %34847 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34848 = load double, ptr %34847, align 8, !dbg !380
  %34849 = load double, ptr %34845, align 16, !dbg !380
  %34850 = getelementptr inbounds { double, double }, ptr %34845, i32 0, i32 1, !dbg !380
  %34851 = load double, ptr %34850, align 8, !dbg !380
  %34852 = call { double, double } @make_vec(double %34846, double %34848, double %34849, double %34851), !dbg !380
  %34853 = extractvalue { double, double } %34852, 0, !dbg !380
  store double %34853, ptr %18, align 8, !dbg !380
  %34854 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34855 = extractvalue { double, double } %34852, 1, !dbg !380
  store double %34855, ptr %34854, align 8, !dbg !380
  %34856 = load i32, ptr %10, align 4, !dbg !381
  %34857 = add nsw i32 %34856, 1, !dbg !382
  %34858 = sext i32 %34857 to i64, !dbg !383
  %34859 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34858, !dbg !383
  %34860 = load double, ptr %6, align 8, !dbg !384
  %34861 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34862 = load double, ptr %34861, align 8, !dbg !384
  %34863 = load double, ptr %34859, align 16, !dbg !384
  %34864 = getelementptr inbounds { double, double }, ptr %34859, i32 0, i32 1, !dbg !384
  %34865 = load double, ptr %34864, align 8, !dbg !384
  %34866 = call { double, double } @make_vec(double %34860, double %34862, double %34863, double %34865), !dbg !384
  %34867 = extractvalue { double, double } %34866, 0, !dbg !384
  store double %34867, ptr %19, align 8, !dbg !384
  %34868 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34869 = extractvalue { double, double } %34866, 1, !dbg !384
  store double %34869, ptr %34868, align 8, !dbg !384
  %34870 = load double, ptr %18, align 8, !dbg !385
  %34871 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34872 = load double, ptr %34871, align 8, !dbg !385
  %34873 = load double, ptr %19, align 8, !dbg !385
  %34874 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34875 = load double, ptr %34874, align 8, !dbg !385
  %34876 = call double @dot(double %34870, double %34872, double %34873, double %34875), !dbg !385
  %34877 = call double @atan2(double noundef %34842, double noundef %34876) #6, !dbg !386
  store double %34877, ptr %13, align 8, !dbg !387
  %34878 = load double, ptr %13, align 8, !dbg !388
  %34879 = load double, ptr %14, align 8, !dbg !389
  %34880 = fadd double %34879, %34878, !dbg !389
  store double %34880, ptr %14, align 8, !dbg !389
  %34881 = load double, ptr %13, align 8, !dbg !390
  %34882 = fsub double %34881, 0x400921FB54442D18, !dbg !392
  %34883 = call double @llvm.fabs.f64(double %34882), !dbg !393
  %34884 = fcmp ole double %34883, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34884, label %14330, label %34885, !dbg !395

34885:                                            ; preds = %34808
  %34886 = load double, ptr %13, align 8, !dbg !396
  %34887 = fadd double %34886, 0x400921FB54442D18, !dbg !397
  %34888 = call double @llvm.fabs.f64(double %34887), !dbg !398
  %34889 = fcmp ole double %34888, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34889, label %14330, label %34890, !dbg !400

34890:                                            ; preds = %34885
  br label %34891, !dbg !403

34891:                                            ; preds = %34890
  %34892 = load i32, ptr %10, align 4, !dbg !404
  %34893 = add nsw i32 %34892, 1, !dbg !404
  store i32 %34893, ptr %10, align 4, !dbg !404
  %34894 = load i32, ptr %10, align 4, !dbg !364
  %34895 = load i32, ptr %8, align 4, !dbg !366
  %34896 = icmp slt i32 %34894, %34895, !dbg !367
  br i1 %34896, label %34897, label %48422, !dbg !368

34897:                                            ; preds = %34891
  %34898 = load i32, ptr %10, align 4, !dbg !369
  %34899 = sext i32 %34898 to i64, !dbg !371
  %34900 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34899, !dbg !371
  %34901 = load double, ptr %6, align 8, !dbg !372
  %34902 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34903 = load double, ptr %34902, align 8, !dbg !372
  %34904 = load double, ptr %34900, align 16, !dbg !372
  %34905 = getelementptr inbounds { double, double }, ptr %34900, i32 0, i32 1, !dbg !372
  %34906 = load double, ptr %34905, align 8, !dbg !372
  %34907 = call { double, double } @make_vec(double %34901, double %34903, double %34904, double %34906), !dbg !372
  %34908 = extractvalue { double, double } %34907, 0, !dbg !372
  store double %34908, ptr %16, align 8, !dbg !372
  %34909 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34910 = extractvalue { double, double } %34907, 1, !dbg !372
  store double %34910, ptr %34909, align 8, !dbg !372
  %34911 = load i32, ptr %10, align 4, !dbg !373
  %34912 = add nsw i32 %34911, 1, !dbg !374
  %34913 = sext i32 %34912 to i64, !dbg !375
  %34914 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34913, !dbg !375
  %34915 = load double, ptr %6, align 8, !dbg !376
  %34916 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %34917 = load double, ptr %34916, align 8, !dbg !376
  %34918 = load double, ptr %34914, align 16, !dbg !376
  %34919 = getelementptr inbounds { double, double }, ptr %34914, i32 0, i32 1, !dbg !376
  %34920 = load double, ptr %34919, align 8, !dbg !376
  %34921 = call { double, double } @make_vec(double %34915, double %34917, double %34918, double %34920), !dbg !376
  %34922 = extractvalue { double, double } %34921, 0, !dbg !376
  store double %34922, ptr %17, align 8, !dbg !376
  %34923 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %34924 = extractvalue { double, double } %34921, 1, !dbg !376
  store double %34924, ptr %34923, align 8, !dbg !376
  %34925 = load double, ptr %16, align 8, !dbg !377
  %34926 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %34927 = load double, ptr %34926, align 8, !dbg !377
  %34928 = load double, ptr %17, align 8, !dbg !377
  %34929 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %34930 = load double, ptr %34929, align 8, !dbg !377
  %34931 = call double @cross(double %34925, double %34927, double %34928, double %34930), !dbg !377
  %34932 = load i32, ptr %10, align 4, !dbg !378
  %34933 = sext i32 %34932 to i64, !dbg !379
  %34934 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34933, !dbg !379
  %34935 = load double, ptr %6, align 8, !dbg !380
  %34936 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %34937 = load double, ptr %34936, align 8, !dbg !380
  %34938 = load double, ptr %34934, align 16, !dbg !380
  %34939 = getelementptr inbounds { double, double }, ptr %34934, i32 0, i32 1, !dbg !380
  %34940 = load double, ptr %34939, align 8, !dbg !380
  %34941 = call { double, double } @make_vec(double %34935, double %34937, double %34938, double %34940), !dbg !380
  %34942 = extractvalue { double, double } %34941, 0, !dbg !380
  store double %34942, ptr %18, align 8, !dbg !380
  %34943 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %34944 = extractvalue { double, double } %34941, 1, !dbg !380
  store double %34944, ptr %34943, align 8, !dbg !380
  %34945 = load i32, ptr %10, align 4, !dbg !381
  %34946 = add nsw i32 %34945, 1, !dbg !382
  %34947 = sext i32 %34946 to i64, !dbg !383
  %34948 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34947, !dbg !383
  %34949 = load double, ptr %6, align 8, !dbg !384
  %34950 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %34951 = load double, ptr %34950, align 8, !dbg !384
  %34952 = load double, ptr %34948, align 16, !dbg !384
  %34953 = getelementptr inbounds { double, double }, ptr %34948, i32 0, i32 1, !dbg !384
  %34954 = load double, ptr %34953, align 8, !dbg !384
  %34955 = call { double, double } @make_vec(double %34949, double %34951, double %34952, double %34954), !dbg !384
  %34956 = extractvalue { double, double } %34955, 0, !dbg !384
  store double %34956, ptr %19, align 8, !dbg !384
  %34957 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %34958 = extractvalue { double, double } %34955, 1, !dbg !384
  store double %34958, ptr %34957, align 8, !dbg !384
  %34959 = load double, ptr %18, align 8, !dbg !385
  %34960 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %34961 = load double, ptr %34960, align 8, !dbg !385
  %34962 = load double, ptr %19, align 8, !dbg !385
  %34963 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %34964 = load double, ptr %34963, align 8, !dbg !385
  %34965 = call double @dot(double %34959, double %34961, double %34962, double %34964), !dbg !385
  %34966 = call double @atan2(double noundef %34931, double noundef %34965) #6, !dbg !386
  store double %34966, ptr %13, align 8, !dbg !387
  %34967 = load double, ptr %13, align 8, !dbg !388
  %34968 = load double, ptr %14, align 8, !dbg !389
  %34969 = fadd double %34968, %34967, !dbg !389
  store double %34969, ptr %14, align 8, !dbg !389
  %34970 = load double, ptr %13, align 8, !dbg !390
  %34971 = fsub double %34970, 0x400921FB54442D18, !dbg !392
  %34972 = call double @llvm.fabs.f64(double %34971), !dbg !393
  %34973 = fcmp ole double %34972, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %34973, label %14330, label %34974, !dbg !395

34974:                                            ; preds = %34897
  %34975 = load double, ptr %13, align 8, !dbg !396
  %34976 = fadd double %34975, 0x400921FB54442D18, !dbg !397
  %34977 = call double @llvm.fabs.f64(double %34976), !dbg !398
  %34978 = fcmp ole double %34977, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %34978, label %14330, label %34979, !dbg !400

34979:                                            ; preds = %34974
  br label %34980, !dbg !403

34980:                                            ; preds = %34979
  %34981 = load i32, ptr %10, align 4, !dbg !404
  %34982 = add nsw i32 %34981, 1, !dbg !404
  store i32 %34982, ptr %10, align 4, !dbg !404
  %34983 = load i32, ptr %10, align 4, !dbg !364
  %34984 = load i32, ptr %8, align 4, !dbg !366
  %34985 = icmp slt i32 %34983, %34984, !dbg !367
  br i1 %34985, label %34986, label %48422, !dbg !368

34986:                                            ; preds = %34980
  %34987 = load i32, ptr %10, align 4, !dbg !369
  %34988 = sext i32 %34987 to i64, !dbg !371
  %34989 = getelementptr inbounds %struct.POINT, ptr %26, i64 %34988, !dbg !371
  %34990 = load double, ptr %6, align 8, !dbg !372
  %34991 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %34992 = load double, ptr %34991, align 8, !dbg !372
  %34993 = load double, ptr %34989, align 16, !dbg !372
  %34994 = getelementptr inbounds { double, double }, ptr %34989, i32 0, i32 1, !dbg !372
  %34995 = load double, ptr %34994, align 8, !dbg !372
  %34996 = call { double, double } @make_vec(double %34990, double %34992, double %34993, double %34995), !dbg !372
  %34997 = extractvalue { double, double } %34996, 0, !dbg !372
  store double %34997, ptr %16, align 8, !dbg !372
  %34998 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %34999 = extractvalue { double, double } %34996, 1, !dbg !372
  store double %34999, ptr %34998, align 8, !dbg !372
  %35000 = load i32, ptr %10, align 4, !dbg !373
  %35001 = add nsw i32 %35000, 1, !dbg !374
  %35002 = sext i32 %35001 to i64, !dbg !375
  %35003 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35002, !dbg !375
  %35004 = load double, ptr %6, align 8, !dbg !376
  %35005 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35006 = load double, ptr %35005, align 8, !dbg !376
  %35007 = load double, ptr %35003, align 16, !dbg !376
  %35008 = getelementptr inbounds { double, double }, ptr %35003, i32 0, i32 1, !dbg !376
  %35009 = load double, ptr %35008, align 8, !dbg !376
  %35010 = call { double, double } @make_vec(double %35004, double %35006, double %35007, double %35009), !dbg !376
  %35011 = extractvalue { double, double } %35010, 0, !dbg !376
  store double %35011, ptr %17, align 8, !dbg !376
  %35012 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35013 = extractvalue { double, double } %35010, 1, !dbg !376
  store double %35013, ptr %35012, align 8, !dbg !376
  %35014 = load double, ptr %16, align 8, !dbg !377
  %35015 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35016 = load double, ptr %35015, align 8, !dbg !377
  %35017 = load double, ptr %17, align 8, !dbg !377
  %35018 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35019 = load double, ptr %35018, align 8, !dbg !377
  %35020 = call double @cross(double %35014, double %35016, double %35017, double %35019), !dbg !377
  %35021 = load i32, ptr %10, align 4, !dbg !378
  %35022 = sext i32 %35021 to i64, !dbg !379
  %35023 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35022, !dbg !379
  %35024 = load double, ptr %6, align 8, !dbg !380
  %35025 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35026 = load double, ptr %35025, align 8, !dbg !380
  %35027 = load double, ptr %35023, align 16, !dbg !380
  %35028 = getelementptr inbounds { double, double }, ptr %35023, i32 0, i32 1, !dbg !380
  %35029 = load double, ptr %35028, align 8, !dbg !380
  %35030 = call { double, double } @make_vec(double %35024, double %35026, double %35027, double %35029), !dbg !380
  %35031 = extractvalue { double, double } %35030, 0, !dbg !380
  store double %35031, ptr %18, align 8, !dbg !380
  %35032 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35033 = extractvalue { double, double } %35030, 1, !dbg !380
  store double %35033, ptr %35032, align 8, !dbg !380
  %35034 = load i32, ptr %10, align 4, !dbg !381
  %35035 = add nsw i32 %35034, 1, !dbg !382
  %35036 = sext i32 %35035 to i64, !dbg !383
  %35037 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35036, !dbg !383
  %35038 = load double, ptr %6, align 8, !dbg !384
  %35039 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35040 = load double, ptr %35039, align 8, !dbg !384
  %35041 = load double, ptr %35037, align 16, !dbg !384
  %35042 = getelementptr inbounds { double, double }, ptr %35037, i32 0, i32 1, !dbg !384
  %35043 = load double, ptr %35042, align 8, !dbg !384
  %35044 = call { double, double } @make_vec(double %35038, double %35040, double %35041, double %35043), !dbg !384
  %35045 = extractvalue { double, double } %35044, 0, !dbg !384
  store double %35045, ptr %19, align 8, !dbg !384
  %35046 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35047 = extractvalue { double, double } %35044, 1, !dbg !384
  store double %35047, ptr %35046, align 8, !dbg !384
  %35048 = load double, ptr %18, align 8, !dbg !385
  %35049 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35050 = load double, ptr %35049, align 8, !dbg !385
  %35051 = load double, ptr %19, align 8, !dbg !385
  %35052 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35053 = load double, ptr %35052, align 8, !dbg !385
  %35054 = call double @dot(double %35048, double %35050, double %35051, double %35053), !dbg !385
  %35055 = call double @atan2(double noundef %35020, double noundef %35054) #6, !dbg !386
  store double %35055, ptr %13, align 8, !dbg !387
  %35056 = load double, ptr %13, align 8, !dbg !388
  %35057 = load double, ptr %14, align 8, !dbg !389
  %35058 = fadd double %35057, %35056, !dbg !389
  store double %35058, ptr %14, align 8, !dbg !389
  %35059 = load double, ptr %13, align 8, !dbg !390
  %35060 = fsub double %35059, 0x400921FB54442D18, !dbg !392
  %35061 = call double @llvm.fabs.f64(double %35060), !dbg !393
  %35062 = fcmp ole double %35061, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35062, label %14330, label %35063, !dbg !395

35063:                                            ; preds = %34986
  %35064 = load double, ptr %13, align 8, !dbg !396
  %35065 = fadd double %35064, 0x400921FB54442D18, !dbg !397
  %35066 = call double @llvm.fabs.f64(double %35065), !dbg !398
  %35067 = fcmp ole double %35066, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35067, label %14330, label %35068, !dbg !400

35068:                                            ; preds = %35063
  br label %35069, !dbg !403

35069:                                            ; preds = %35068
  %35070 = load i32, ptr %10, align 4, !dbg !404
  %35071 = add nsw i32 %35070, 1, !dbg !404
  store i32 %35071, ptr %10, align 4, !dbg !404
  %35072 = load i32, ptr %10, align 4, !dbg !364
  %35073 = load i32, ptr %8, align 4, !dbg !366
  %35074 = icmp slt i32 %35072, %35073, !dbg !367
  br i1 %35074, label %35075, label %48422, !dbg !368

35075:                                            ; preds = %35069
  %35076 = load i32, ptr %10, align 4, !dbg !369
  %35077 = sext i32 %35076 to i64, !dbg !371
  %35078 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35077, !dbg !371
  %35079 = load double, ptr %6, align 8, !dbg !372
  %35080 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35081 = load double, ptr %35080, align 8, !dbg !372
  %35082 = load double, ptr %35078, align 16, !dbg !372
  %35083 = getelementptr inbounds { double, double }, ptr %35078, i32 0, i32 1, !dbg !372
  %35084 = load double, ptr %35083, align 8, !dbg !372
  %35085 = call { double, double } @make_vec(double %35079, double %35081, double %35082, double %35084), !dbg !372
  %35086 = extractvalue { double, double } %35085, 0, !dbg !372
  store double %35086, ptr %16, align 8, !dbg !372
  %35087 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35088 = extractvalue { double, double } %35085, 1, !dbg !372
  store double %35088, ptr %35087, align 8, !dbg !372
  %35089 = load i32, ptr %10, align 4, !dbg !373
  %35090 = add nsw i32 %35089, 1, !dbg !374
  %35091 = sext i32 %35090 to i64, !dbg !375
  %35092 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35091, !dbg !375
  %35093 = load double, ptr %6, align 8, !dbg !376
  %35094 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35095 = load double, ptr %35094, align 8, !dbg !376
  %35096 = load double, ptr %35092, align 16, !dbg !376
  %35097 = getelementptr inbounds { double, double }, ptr %35092, i32 0, i32 1, !dbg !376
  %35098 = load double, ptr %35097, align 8, !dbg !376
  %35099 = call { double, double } @make_vec(double %35093, double %35095, double %35096, double %35098), !dbg !376
  %35100 = extractvalue { double, double } %35099, 0, !dbg !376
  store double %35100, ptr %17, align 8, !dbg !376
  %35101 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35102 = extractvalue { double, double } %35099, 1, !dbg !376
  store double %35102, ptr %35101, align 8, !dbg !376
  %35103 = load double, ptr %16, align 8, !dbg !377
  %35104 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35105 = load double, ptr %35104, align 8, !dbg !377
  %35106 = load double, ptr %17, align 8, !dbg !377
  %35107 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35108 = load double, ptr %35107, align 8, !dbg !377
  %35109 = call double @cross(double %35103, double %35105, double %35106, double %35108), !dbg !377
  %35110 = load i32, ptr %10, align 4, !dbg !378
  %35111 = sext i32 %35110 to i64, !dbg !379
  %35112 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35111, !dbg !379
  %35113 = load double, ptr %6, align 8, !dbg !380
  %35114 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35115 = load double, ptr %35114, align 8, !dbg !380
  %35116 = load double, ptr %35112, align 16, !dbg !380
  %35117 = getelementptr inbounds { double, double }, ptr %35112, i32 0, i32 1, !dbg !380
  %35118 = load double, ptr %35117, align 8, !dbg !380
  %35119 = call { double, double } @make_vec(double %35113, double %35115, double %35116, double %35118), !dbg !380
  %35120 = extractvalue { double, double } %35119, 0, !dbg !380
  store double %35120, ptr %18, align 8, !dbg !380
  %35121 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35122 = extractvalue { double, double } %35119, 1, !dbg !380
  store double %35122, ptr %35121, align 8, !dbg !380
  %35123 = load i32, ptr %10, align 4, !dbg !381
  %35124 = add nsw i32 %35123, 1, !dbg !382
  %35125 = sext i32 %35124 to i64, !dbg !383
  %35126 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35125, !dbg !383
  %35127 = load double, ptr %6, align 8, !dbg !384
  %35128 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35129 = load double, ptr %35128, align 8, !dbg !384
  %35130 = load double, ptr %35126, align 16, !dbg !384
  %35131 = getelementptr inbounds { double, double }, ptr %35126, i32 0, i32 1, !dbg !384
  %35132 = load double, ptr %35131, align 8, !dbg !384
  %35133 = call { double, double } @make_vec(double %35127, double %35129, double %35130, double %35132), !dbg !384
  %35134 = extractvalue { double, double } %35133, 0, !dbg !384
  store double %35134, ptr %19, align 8, !dbg !384
  %35135 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35136 = extractvalue { double, double } %35133, 1, !dbg !384
  store double %35136, ptr %35135, align 8, !dbg !384
  %35137 = load double, ptr %18, align 8, !dbg !385
  %35138 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35139 = load double, ptr %35138, align 8, !dbg !385
  %35140 = load double, ptr %19, align 8, !dbg !385
  %35141 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35142 = load double, ptr %35141, align 8, !dbg !385
  %35143 = call double @dot(double %35137, double %35139, double %35140, double %35142), !dbg !385
  %35144 = call double @atan2(double noundef %35109, double noundef %35143) #6, !dbg !386
  store double %35144, ptr %13, align 8, !dbg !387
  %35145 = load double, ptr %13, align 8, !dbg !388
  %35146 = load double, ptr %14, align 8, !dbg !389
  %35147 = fadd double %35146, %35145, !dbg !389
  store double %35147, ptr %14, align 8, !dbg !389
  %35148 = load double, ptr %13, align 8, !dbg !390
  %35149 = fsub double %35148, 0x400921FB54442D18, !dbg !392
  %35150 = call double @llvm.fabs.f64(double %35149), !dbg !393
  %35151 = fcmp ole double %35150, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35151, label %14330, label %35152, !dbg !395

35152:                                            ; preds = %35075
  %35153 = load double, ptr %13, align 8, !dbg !396
  %35154 = fadd double %35153, 0x400921FB54442D18, !dbg !397
  %35155 = call double @llvm.fabs.f64(double %35154), !dbg !398
  %35156 = fcmp ole double %35155, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35156, label %14330, label %35157, !dbg !400

35157:                                            ; preds = %35152
  br label %35158, !dbg !403

35158:                                            ; preds = %35157
  %35159 = load i32, ptr %10, align 4, !dbg !404
  %35160 = add nsw i32 %35159, 1, !dbg !404
  store i32 %35160, ptr %10, align 4, !dbg !404
  %35161 = load i32, ptr %10, align 4, !dbg !364
  %35162 = load i32, ptr %8, align 4, !dbg !366
  %35163 = icmp slt i32 %35161, %35162, !dbg !367
  br i1 %35163, label %35164, label %48422, !dbg !368

35164:                                            ; preds = %35158
  %35165 = load i32, ptr %10, align 4, !dbg !369
  %35166 = sext i32 %35165 to i64, !dbg !371
  %35167 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35166, !dbg !371
  %35168 = load double, ptr %6, align 8, !dbg !372
  %35169 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35170 = load double, ptr %35169, align 8, !dbg !372
  %35171 = load double, ptr %35167, align 16, !dbg !372
  %35172 = getelementptr inbounds { double, double }, ptr %35167, i32 0, i32 1, !dbg !372
  %35173 = load double, ptr %35172, align 8, !dbg !372
  %35174 = call { double, double } @make_vec(double %35168, double %35170, double %35171, double %35173), !dbg !372
  %35175 = extractvalue { double, double } %35174, 0, !dbg !372
  store double %35175, ptr %16, align 8, !dbg !372
  %35176 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35177 = extractvalue { double, double } %35174, 1, !dbg !372
  store double %35177, ptr %35176, align 8, !dbg !372
  %35178 = load i32, ptr %10, align 4, !dbg !373
  %35179 = add nsw i32 %35178, 1, !dbg !374
  %35180 = sext i32 %35179 to i64, !dbg !375
  %35181 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35180, !dbg !375
  %35182 = load double, ptr %6, align 8, !dbg !376
  %35183 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35184 = load double, ptr %35183, align 8, !dbg !376
  %35185 = load double, ptr %35181, align 16, !dbg !376
  %35186 = getelementptr inbounds { double, double }, ptr %35181, i32 0, i32 1, !dbg !376
  %35187 = load double, ptr %35186, align 8, !dbg !376
  %35188 = call { double, double } @make_vec(double %35182, double %35184, double %35185, double %35187), !dbg !376
  %35189 = extractvalue { double, double } %35188, 0, !dbg !376
  store double %35189, ptr %17, align 8, !dbg !376
  %35190 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35191 = extractvalue { double, double } %35188, 1, !dbg !376
  store double %35191, ptr %35190, align 8, !dbg !376
  %35192 = load double, ptr %16, align 8, !dbg !377
  %35193 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35194 = load double, ptr %35193, align 8, !dbg !377
  %35195 = load double, ptr %17, align 8, !dbg !377
  %35196 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35197 = load double, ptr %35196, align 8, !dbg !377
  %35198 = call double @cross(double %35192, double %35194, double %35195, double %35197), !dbg !377
  %35199 = load i32, ptr %10, align 4, !dbg !378
  %35200 = sext i32 %35199 to i64, !dbg !379
  %35201 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35200, !dbg !379
  %35202 = load double, ptr %6, align 8, !dbg !380
  %35203 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35204 = load double, ptr %35203, align 8, !dbg !380
  %35205 = load double, ptr %35201, align 16, !dbg !380
  %35206 = getelementptr inbounds { double, double }, ptr %35201, i32 0, i32 1, !dbg !380
  %35207 = load double, ptr %35206, align 8, !dbg !380
  %35208 = call { double, double } @make_vec(double %35202, double %35204, double %35205, double %35207), !dbg !380
  %35209 = extractvalue { double, double } %35208, 0, !dbg !380
  store double %35209, ptr %18, align 8, !dbg !380
  %35210 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35211 = extractvalue { double, double } %35208, 1, !dbg !380
  store double %35211, ptr %35210, align 8, !dbg !380
  %35212 = load i32, ptr %10, align 4, !dbg !381
  %35213 = add nsw i32 %35212, 1, !dbg !382
  %35214 = sext i32 %35213 to i64, !dbg !383
  %35215 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35214, !dbg !383
  %35216 = load double, ptr %6, align 8, !dbg !384
  %35217 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35218 = load double, ptr %35217, align 8, !dbg !384
  %35219 = load double, ptr %35215, align 16, !dbg !384
  %35220 = getelementptr inbounds { double, double }, ptr %35215, i32 0, i32 1, !dbg !384
  %35221 = load double, ptr %35220, align 8, !dbg !384
  %35222 = call { double, double } @make_vec(double %35216, double %35218, double %35219, double %35221), !dbg !384
  %35223 = extractvalue { double, double } %35222, 0, !dbg !384
  store double %35223, ptr %19, align 8, !dbg !384
  %35224 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35225 = extractvalue { double, double } %35222, 1, !dbg !384
  store double %35225, ptr %35224, align 8, !dbg !384
  %35226 = load double, ptr %18, align 8, !dbg !385
  %35227 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35228 = load double, ptr %35227, align 8, !dbg !385
  %35229 = load double, ptr %19, align 8, !dbg !385
  %35230 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35231 = load double, ptr %35230, align 8, !dbg !385
  %35232 = call double @dot(double %35226, double %35228, double %35229, double %35231), !dbg !385
  %35233 = call double @atan2(double noundef %35198, double noundef %35232) #6, !dbg !386
  store double %35233, ptr %13, align 8, !dbg !387
  %35234 = load double, ptr %13, align 8, !dbg !388
  %35235 = load double, ptr %14, align 8, !dbg !389
  %35236 = fadd double %35235, %35234, !dbg !389
  store double %35236, ptr %14, align 8, !dbg !389
  %35237 = load double, ptr %13, align 8, !dbg !390
  %35238 = fsub double %35237, 0x400921FB54442D18, !dbg !392
  %35239 = call double @llvm.fabs.f64(double %35238), !dbg !393
  %35240 = fcmp ole double %35239, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35240, label %14330, label %35241, !dbg !395

35241:                                            ; preds = %35164
  %35242 = load double, ptr %13, align 8, !dbg !396
  %35243 = fadd double %35242, 0x400921FB54442D18, !dbg !397
  %35244 = call double @llvm.fabs.f64(double %35243), !dbg !398
  %35245 = fcmp ole double %35244, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35245, label %14330, label %35246, !dbg !400

35246:                                            ; preds = %35241
  br label %35247, !dbg !403

35247:                                            ; preds = %35246
  %35248 = load i32, ptr %10, align 4, !dbg !404
  %35249 = add nsw i32 %35248, 1, !dbg !404
  store i32 %35249, ptr %10, align 4, !dbg !404
  %35250 = load i32, ptr %10, align 4, !dbg !364
  %35251 = load i32, ptr %8, align 4, !dbg !366
  %35252 = icmp slt i32 %35250, %35251, !dbg !367
  br i1 %35252, label %35253, label %48422, !dbg !368

35253:                                            ; preds = %35247
  %35254 = load i32, ptr %10, align 4, !dbg !369
  %35255 = sext i32 %35254 to i64, !dbg !371
  %35256 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35255, !dbg !371
  %35257 = load double, ptr %6, align 8, !dbg !372
  %35258 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35259 = load double, ptr %35258, align 8, !dbg !372
  %35260 = load double, ptr %35256, align 16, !dbg !372
  %35261 = getelementptr inbounds { double, double }, ptr %35256, i32 0, i32 1, !dbg !372
  %35262 = load double, ptr %35261, align 8, !dbg !372
  %35263 = call { double, double } @make_vec(double %35257, double %35259, double %35260, double %35262), !dbg !372
  %35264 = extractvalue { double, double } %35263, 0, !dbg !372
  store double %35264, ptr %16, align 8, !dbg !372
  %35265 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35266 = extractvalue { double, double } %35263, 1, !dbg !372
  store double %35266, ptr %35265, align 8, !dbg !372
  %35267 = load i32, ptr %10, align 4, !dbg !373
  %35268 = add nsw i32 %35267, 1, !dbg !374
  %35269 = sext i32 %35268 to i64, !dbg !375
  %35270 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35269, !dbg !375
  %35271 = load double, ptr %6, align 8, !dbg !376
  %35272 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35273 = load double, ptr %35272, align 8, !dbg !376
  %35274 = load double, ptr %35270, align 16, !dbg !376
  %35275 = getelementptr inbounds { double, double }, ptr %35270, i32 0, i32 1, !dbg !376
  %35276 = load double, ptr %35275, align 8, !dbg !376
  %35277 = call { double, double } @make_vec(double %35271, double %35273, double %35274, double %35276), !dbg !376
  %35278 = extractvalue { double, double } %35277, 0, !dbg !376
  store double %35278, ptr %17, align 8, !dbg !376
  %35279 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35280 = extractvalue { double, double } %35277, 1, !dbg !376
  store double %35280, ptr %35279, align 8, !dbg !376
  %35281 = load double, ptr %16, align 8, !dbg !377
  %35282 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35283 = load double, ptr %35282, align 8, !dbg !377
  %35284 = load double, ptr %17, align 8, !dbg !377
  %35285 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35286 = load double, ptr %35285, align 8, !dbg !377
  %35287 = call double @cross(double %35281, double %35283, double %35284, double %35286), !dbg !377
  %35288 = load i32, ptr %10, align 4, !dbg !378
  %35289 = sext i32 %35288 to i64, !dbg !379
  %35290 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35289, !dbg !379
  %35291 = load double, ptr %6, align 8, !dbg !380
  %35292 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35293 = load double, ptr %35292, align 8, !dbg !380
  %35294 = load double, ptr %35290, align 16, !dbg !380
  %35295 = getelementptr inbounds { double, double }, ptr %35290, i32 0, i32 1, !dbg !380
  %35296 = load double, ptr %35295, align 8, !dbg !380
  %35297 = call { double, double } @make_vec(double %35291, double %35293, double %35294, double %35296), !dbg !380
  %35298 = extractvalue { double, double } %35297, 0, !dbg !380
  store double %35298, ptr %18, align 8, !dbg !380
  %35299 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35300 = extractvalue { double, double } %35297, 1, !dbg !380
  store double %35300, ptr %35299, align 8, !dbg !380
  %35301 = load i32, ptr %10, align 4, !dbg !381
  %35302 = add nsw i32 %35301, 1, !dbg !382
  %35303 = sext i32 %35302 to i64, !dbg !383
  %35304 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35303, !dbg !383
  %35305 = load double, ptr %6, align 8, !dbg !384
  %35306 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35307 = load double, ptr %35306, align 8, !dbg !384
  %35308 = load double, ptr %35304, align 16, !dbg !384
  %35309 = getelementptr inbounds { double, double }, ptr %35304, i32 0, i32 1, !dbg !384
  %35310 = load double, ptr %35309, align 8, !dbg !384
  %35311 = call { double, double } @make_vec(double %35305, double %35307, double %35308, double %35310), !dbg !384
  %35312 = extractvalue { double, double } %35311, 0, !dbg !384
  store double %35312, ptr %19, align 8, !dbg !384
  %35313 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35314 = extractvalue { double, double } %35311, 1, !dbg !384
  store double %35314, ptr %35313, align 8, !dbg !384
  %35315 = load double, ptr %18, align 8, !dbg !385
  %35316 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35317 = load double, ptr %35316, align 8, !dbg !385
  %35318 = load double, ptr %19, align 8, !dbg !385
  %35319 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35320 = load double, ptr %35319, align 8, !dbg !385
  %35321 = call double @dot(double %35315, double %35317, double %35318, double %35320), !dbg !385
  %35322 = call double @atan2(double noundef %35287, double noundef %35321) #6, !dbg !386
  store double %35322, ptr %13, align 8, !dbg !387
  %35323 = load double, ptr %13, align 8, !dbg !388
  %35324 = load double, ptr %14, align 8, !dbg !389
  %35325 = fadd double %35324, %35323, !dbg !389
  store double %35325, ptr %14, align 8, !dbg !389
  %35326 = load double, ptr %13, align 8, !dbg !390
  %35327 = fsub double %35326, 0x400921FB54442D18, !dbg !392
  %35328 = call double @llvm.fabs.f64(double %35327), !dbg !393
  %35329 = fcmp ole double %35328, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35329, label %14330, label %35330, !dbg !395

35330:                                            ; preds = %35253
  %35331 = load double, ptr %13, align 8, !dbg !396
  %35332 = fadd double %35331, 0x400921FB54442D18, !dbg !397
  %35333 = call double @llvm.fabs.f64(double %35332), !dbg !398
  %35334 = fcmp ole double %35333, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35334, label %14330, label %35335, !dbg !400

35335:                                            ; preds = %35330
  br label %35336, !dbg !403

35336:                                            ; preds = %35335
  %35337 = load i32, ptr %10, align 4, !dbg !404
  %35338 = add nsw i32 %35337, 1, !dbg !404
  store i32 %35338, ptr %10, align 4, !dbg !404
  %35339 = load i32, ptr %10, align 4, !dbg !364
  %35340 = load i32, ptr %8, align 4, !dbg !366
  %35341 = icmp slt i32 %35339, %35340, !dbg !367
  br i1 %35341, label %35342, label %48422, !dbg !368

35342:                                            ; preds = %35336
  %35343 = load i32, ptr %10, align 4, !dbg !369
  %35344 = sext i32 %35343 to i64, !dbg !371
  %35345 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35344, !dbg !371
  %35346 = load double, ptr %6, align 8, !dbg !372
  %35347 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35348 = load double, ptr %35347, align 8, !dbg !372
  %35349 = load double, ptr %35345, align 16, !dbg !372
  %35350 = getelementptr inbounds { double, double }, ptr %35345, i32 0, i32 1, !dbg !372
  %35351 = load double, ptr %35350, align 8, !dbg !372
  %35352 = call { double, double } @make_vec(double %35346, double %35348, double %35349, double %35351), !dbg !372
  %35353 = extractvalue { double, double } %35352, 0, !dbg !372
  store double %35353, ptr %16, align 8, !dbg !372
  %35354 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35355 = extractvalue { double, double } %35352, 1, !dbg !372
  store double %35355, ptr %35354, align 8, !dbg !372
  %35356 = load i32, ptr %10, align 4, !dbg !373
  %35357 = add nsw i32 %35356, 1, !dbg !374
  %35358 = sext i32 %35357 to i64, !dbg !375
  %35359 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35358, !dbg !375
  %35360 = load double, ptr %6, align 8, !dbg !376
  %35361 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35362 = load double, ptr %35361, align 8, !dbg !376
  %35363 = load double, ptr %35359, align 16, !dbg !376
  %35364 = getelementptr inbounds { double, double }, ptr %35359, i32 0, i32 1, !dbg !376
  %35365 = load double, ptr %35364, align 8, !dbg !376
  %35366 = call { double, double } @make_vec(double %35360, double %35362, double %35363, double %35365), !dbg !376
  %35367 = extractvalue { double, double } %35366, 0, !dbg !376
  store double %35367, ptr %17, align 8, !dbg !376
  %35368 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35369 = extractvalue { double, double } %35366, 1, !dbg !376
  store double %35369, ptr %35368, align 8, !dbg !376
  %35370 = load double, ptr %16, align 8, !dbg !377
  %35371 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35372 = load double, ptr %35371, align 8, !dbg !377
  %35373 = load double, ptr %17, align 8, !dbg !377
  %35374 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35375 = load double, ptr %35374, align 8, !dbg !377
  %35376 = call double @cross(double %35370, double %35372, double %35373, double %35375), !dbg !377
  %35377 = load i32, ptr %10, align 4, !dbg !378
  %35378 = sext i32 %35377 to i64, !dbg !379
  %35379 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35378, !dbg !379
  %35380 = load double, ptr %6, align 8, !dbg !380
  %35381 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35382 = load double, ptr %35381, align 8, !dbg !380
  %35383 = load double, ptr %35379, align 16, !dbg !380
  %35384 = getelementptr inbounds { double, double }, ptr %35379, i32 0, i32 1, !dbg !380
  %35385 = load double, ptr %35384, align 8, !dbg !380
  %35386 = call { double, double } @make_vec(double %35380, double %35382, double %35383, double %35385), !dbg !380
  %35387 = extractvalue { double, double } %35386, 0, !dbg !380
  store double %35387, ptr %18, align 8, !dbg !380
  %35388 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35389 = extractvalue { double, double } %35386, 1, !dbg !380
  store double %35389, ptr %35388, align 8, !dbg !380
  %35390 = load i32, ptr %10, align 4, !dbg !381
  %35391 = add nsw i32 %35390, 1, !dbg !382
  %35392 = sext i32 %35391 to i64, !dbg !383
  %35393 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35392, !dbg !383
  %35394 = load double, ptr %6, align 8, !dbg !384
  %35395 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35396 = load double, ptr %35395, align 8, !dbg !384
  %35397 = load double, ptr %35393, align 16, !dbg !384
  %35398 = getelementptr inbounds { double, double }, ptr %35393, i32 0, i32 1, !dbg !384
  %35399 = load double, ptr %35398, align 8, !dbg !384
  %35400 = call { double, double } @make_vec(double %35394, double %35396, double %35397, double %35399), !dbg !384
  %35401 = extractvalue { double, double } %35400, 0, !dbg !384
  store double %35401, ptr %19, align 8, !dbg !384
  %35402 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35403 = extractvalue { double, double } %35400, 1, !dbg !384
  store double %35403, ptr %35402, align 8, !dbg !384
  %35404 = load double, ptr %18, align 8, !dbg !385
  %35405 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35406 = load double, ptr %35405, align 8, !dbg !385
  %35407 = load double, ptr %19, align 8, !dbg !385
  %35408 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35409 = load double, ptr %35408, align 8, !dbg !385
  %35410 = call double @dot(double %35404, double %35406, double %35407, double %35409), !dbg !385
  %35411 = call double @atan2(double noundef %35376, double noundef %35410) #6, !dbg !386
  store double %35411, ptr %13, align 8, !dbg !387
  %35412 = load double, ptr %13, align 8, !dbg !388
  %35413 = load double, ptr %14, align 8, !dbg !389
  %35414 = fadd double %35413, %35412, !dbg !389
  store double %35414, ptr %14, align 8, !dbg !389
  %35415 = load double, ptr %13, align 8, !dbg !390
  %35416 = fsub double %35415, 0x400921FB54442D18, !dbg !392
  %35417 = call double @llvm.fabs.f64(double %35416), !dbg !393
  %35418 = fcmp ole double %35417, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35418, label %14330, label %35419, !dbg !395

35419:                                            ; preds = %35342
  %35420 = load double, ptr %13, align 8, !dbg !396
  %35421 = fadd double %35420, 0x400921FB54442D18, !dbg !397
  %35422 = call double @llvm.fabs.f64(double %35421), !dbg !398
  %35423 = fcmp ole double %35422, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35423, label %14330, label %35424, !dbg !400

35424:                                            ; preds = %35419
  br label %35425, !dbg !403

35425:                                            ; preds = %35424
  %35426 = load i32, ptr %10, align 4, !dbg !404
  %35427 = add nsw i32 %35426, 1, !dbg !404
  store i32 %35427, ptr %10, align 4, !dbg !404
  %35428 = load i32, ptr %10, align 4, !dbg !364
  %35429 = load i32, ptr %8, align 4, !dbg !366
  %35430 = icmp slt i32 %35428, %35429, !dbg !367
  br i1 %35430, label %35431, label %48422, !dbg !368

35431:                                            ; preds = %35425
  %35432 = load i32, ptr %10, align 4, !dbg !369
  %35433 = sext i32 %35432 to i64, !dbg !371
  %35434 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35433, !dbg !371
  %35435 = load double, ptr %6, align 8, !dbg !372
  %35436 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35437 = load double, ptr %35436, align 8, !dbg !372
  %35438 = load double, ptr %35434, align 16, !dbg !372
  %35439 = getelementptr inbounds { double, double }, ptr %35434, i32 0, i32 1, !dbg !372
  %35440 = load double, ptr %35439, align 8, !dbg !372
  %35441 = call { double, double } @make_vec(double %35435, double %35437, double %35438, double %35440), !dbg !372
  %35442 = extractvalue { double, double } %35441, 0, !dbg !372
  store double %35442, ptr %16, align 8, !dbg !372
  %35443 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35444 = extractvalue { double, double } %35441, 1, !dbg !372
  store double %35444, ptr %35443, align 8, !dbg !372
  %35445 = load i32, ptr %10, align 4, !dbg !373
  %35446 = add nsw i32 %35445, 1, !dbg !374
  %35447 = sext i32 %35446 to i64, !dbg !375
  %35448 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35447, !dbg !375
  %35449 = load double, ptr %6, align 8, !dbg !376
  %35450 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35451 = load double, ptr %35450, align 8, !dbg !376
  %35452 = load double, ptr %35448, align 16, !dbg !376
  %35453 = getelementptr inbounds { double, double }, ptr %35448, i32 0, i32 1, !dbg !376
  %35454 = load double, ptr %35453, align 8, !dbg !376
  %35455 = call { double, double } @make_vec(double %35449, double %35451, double %35452, double %35454), !dbg !376
  %35456 = extractvalue { double, double } %35455, 0, !dbg !376
  store double %35456, ptr %17, align 8, !dbg !376
  %35457 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35458 = extractvalue { double, double } %35455, 1, !dbg !376
  store double %35458, ptr %35457, align 8, !dbg !376
  %35459 = load double, ptr %16, align 8, !dbg !377
  %35460 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35461 = load double, ptr %35460, align 8, !dbg !377
  %35462 = load double, ptr %17, align 8, !dbg !377
  %35463 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35464 = load double, ptr %35463, align 8, !dbg !377
  %35465 = call double @cross(double %35459, double %35461, double %35462, double %35464), !dbg !377
  %35466 = load i32, ptr %10, align 4, !dbg !378
  %35467 = sext i32 %35466 to i64, !dbg !379
  %35468 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35467, !dbg !379
  %35469 = load double, ptr %6, align 8, !dbg !380
  %35470 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35471 = load double, ptr %35470, align 8, !dbg !380
  %35472 = load double, ptr %35468, align 16, !dbg !380
  %35473 = getelementptr inbounds { double, double }, ptr %35468, i32 0, i32 1, !dbg !380
  %35474 = load double, ptr %35473, align 8, !dbg !380
  %35475 = call { double, double } @make_vec(double %35469, double %35471, double %35472, double %35474), !dbg !380
  %35476 = extractvalue { double, double } %35475, 0, !dbg !380
  store double %35476, ptr %18, align 8, !dbg !380
  %35477 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35478 = extractvalue { double, double } %35475, 1, !dbg !380
  store double %35478, ptr %35477, align 8, !dbg !380
  %35479 = load i32, ptr %10, align 4, !dbg !381
  %35480 = add nsw i32 %35479, 1, !dbg !382
  %35481 = sext i32 %35480 to i64, !dbg !383
  %35482 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35481, !dbg !383
  %35483 = load double, ptr %6, align 8, !dbg !384
  %35484 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35485 = load double, ptr %35484, align 8, !dbg !384
  %35486 = load double, ptr %35482, align 16, !dbg !384
  %35487 = getelementptr inbounds { double, double }, ptr %35482, i32 0, i32 1, !dbg !384
  %35488 = load double, ptr %35487, align 8, !dbg !384
  %35489 = call { double, double } @make_vec(double %35483, double %35485, double %35486, double %35488), !dbg !384
  %35490 = extractvalue { double, double } %35489, 0, !dbg !384
  store double %35490, ptr %19, align 8, !dbg !384
  %35491 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35492 = extractvalue { double, double } %35489, 1, !dbg !384
  store double %35492, ptr %35491, align 8, !dbg !384
  %35493 = load double, ptr %18, align 8, !dbg !385
  %35494 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35495 = load double, ptr %35494, align 8, !dbg !385
  %35496 = load double, ptr %19, align 8, !dbg !385
  %35497 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35498 = load double, ptr %35497, align 8, !dbg !385
  %35499 = call double @dot(double %35493, double %35495, double %35496, double %35498), !dbg !385
  %35500 = call double @atan2(double noundef %35465, double noundef %35499) #6, !dbg !386
  store double %35500, ptr %13, align 8, !dbg !387
  %35501 = load double, ptr %13, align 8, !dbg !388
  %35502 = load double, ptr %14, align 8, !dbg !389
  %35503 = fadd double %35502, %35501, !dbg !389
  store double %35503, ptr %14, align 8, !dbg !389
  %35504 = load double, ptr %13, align 8, !dbg !390
  %35505 = fsub double %35504, 0x400921FB54442D18, !dbg !392
  %35506 = call double @llvm.fabs.f64(double %35505), !dbg !393
  %35507 = fcmp ole double %35506, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35507, label %14330, label %35508, !dbg !395

35508:                                            ; preds = %35431
  %35509 = load double, ptr %13, align 8, !dbg !396
  %35510 = fadd double %35509, 0x400921FB54442D18, !dbg !397
  %35511 = call double @llvm.fabs.f64(double %35510), !dbg !398
  %35512 = fcmp ole double %35511, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35512, label %14330, label %35513, !dbg !400

35513:                                            ; preds = %35508
  br label %35514, !dbg !403

35514:                                            ; preds = %35513
  %35515 = load i32, ptr %10, align 4, !dbg !404
  %35516 = add nsw i32 %35515, 1, !dbg !404
  store i32 %35516, ptr %10, align 4, !dbg !404
  %35517 = load i32, ptr %10, align 4, !dbg !364
  %35518 = load i32, ptr %8, align 4, !dbg !366
  %35519 = icmp slt i32 %35517, %35518, !dbg !367
  br i1 %35519, label %35520, label %48422, !dbg !368

35520:                                            ; preds = %35514
  %35521 = load i32, ptr %10, align 4, !dbg !369
  %35522 = sext i32 %35521 to i64, !dbg !371
  %35523 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35522, !dbg !371
  %35524 = load double, ptr %6, align 8, !dbg !372
  %35525 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35526 = load double, ptr %35525, align 8, !dbg !372
  %35527 = load double, ptr %35523, align 16, !dbg !372
  %35528 = getelementptr inbounds { double, double }, ptr %35523, i32 0, i32 1, !dbg !372
  %35529 = load double, ptr %35528, align 8, !dbg !372
  %35530 = call { double, double } @make_vec(double %35524, double %35526, double %35527, double %35529), !dbg !372
  %35531 = extractvalue { double, double } %35530, 0, !dbg !372
  store double %35531, ptr %16, align 8, !dbg !372
  %35532 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35533 = extractvalue { double, double } %35530, 1, !dbg !372
  store double %35533, ptr %35532, align 8, !dbg !372
  %35534 = load i32, ptr %10, align 4, !dbg !373
  %35535 = add nsw i32 %35534, 1, !dbg !374
  %35536 = sext i32 %35535 to i64, !dbg !375
  %35537 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35536, !dbg !375
  %35538 = load double, ptr %6, align 8, !dbg !376
  %35539 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35540 = load double, ptr %35539, align 8, !dbg !376
  %35541 = load double, ptr %35537, align 16, !dbg !376
  %35542 = getelementptr inbounds { double, double }, ptr %35537, i32 0, i32 1, !dbg !376
  %35543 = load double, ptr %35542, align 8, !dbg !376
  %35544 = call { double, double } @make_vec(double %35538, double %35540, double %35541, double %35543), !dbg !376
  %35545 = extractvalue { double, double } %35544, 0, !dbg !376
  store double %35545, ptr %17, align 8, !dbg !376
  %35546 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35547 = extractvalue { double, double } %35544, 1, !dbg !376
  store double %35547, ptr %35546, align 8, !dbg !376
  %35548 = load double, ptr %16, align 8, !dbg !377
  %35549 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35550 = load double, ptr %35549, align 8, !dbg !377
  %35551 = load double, ptr %17, align 8, !dbg !377
  %35552 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35553 = load double, ptr %35552, align 8, !dbg !377
  %35554 = call double @cross(double %35548, double %35550, double %35551, double %35553), !dbg !377
  %35555 = load i32, ptr %10, align 4, !dbg !378
  %35556 = sext i32 %35555 to i64, !dbg !379
  %35557 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35556, !dbg !379
  %35558 = load double, ptr %6, align 8, !dbg !380
  %35559 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35560 = load double, ptr %35559, align 8, !dbg !380
  %35561 = load double, ptr %35557, align 16, !dbg !380
  %35562 = getelementptr inbounds { double, double }, ptr %35557, i32 0, i32 1, !dbg !380
  %35563 = load double, ptr %35562, align 8, !dbg !380
  %35564 = call { double, double } @make_vec(double %35558, double %35560, double %35561, double %35563), !dbg !380
  %35565 = extractvalue { double, double } %35564, 0, !dbg !380
  store double %35565, ptr %18, align 8, !dbg !380
  %35566 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35567 = extractvalue { double, double } %35564, 1, !dbg !380
  store double %35567, ptr %35566, align 8, !dbg !380
  %35568 = load i32, ptr %10, align 4, !dbg !381
  %35569 = add nsw i32 %35568, 1, !dbg !382
  %35570 = sext i32 %35569 to i64, !dbg !383
  %35571 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35570, !dbg !383
  %35572 = load double, ptr %6, align 8, !dbg !384
  %35573 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35574 = load double, ptr %35573, align 8, !dbg !384
  %35575 = load double, ptr %35571, align 16, !dbg !384
  %35576 = getelementptr inbounds { double, double }, ptr %35571, i32 0, i32 1, !dbg !384
  %35577 = load double, ptr %35576, align 8, !dbg !384
  %35578 = call { double, double } @make_vec(double %35572, double %35574, double %35575, double %35577), !dbg !384
  %35579 = extractvalue { double, double } %35578, 0, !dbg !384
  store double %35579, ptr %19, align 8, !dbg !384
  %35580 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35581 = extractvalue { double, double } %35578, 1, !dbg !384
  store double %35581, ptr %35580, align 8, !dbg !384
  %35582 = load double, ptr %18, align 8, !dbg !385
  %35583 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35584 = load double, ptr %35583, align 8, !dbg !385
  %35585 = load double, ptr %19, align 8, !dbg !385
  %35586 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35587 = load double, ptr %35586, align 8, !dbg !385
  %35588 = call double @dot(double %35582, double %35584, double %35585, double %35587), !dbg !385
  %35589 = call double @atan2(double noundef %35554, double noundef %35588) #6, !dbg !386
  store double %35589, ptr %13, align 8, !dbg !387
  %35590 = load double, ptr %13, align 8, !dbg !388
  %35591 = load double, ptr %14, align 8, !dbg !389
  %35592 = fadd double %35591, %35590, !dbg !389
  store double %35592, ptr %14, align 8, !dbg !389
  %35593 = load double, ptr %13, align 8, !dbg !390
  %35594 = fsub double %35593, 0x400921FB54442D18, !dbg !392
  %35595 = call double @llvm.fabs.f64(double %35594), !dbg !393
  %35596 = fcmp ole double %35595, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35596, label %14330, label %35597, !dbg !395

35597:                                            ; preds = %35520
  %35598 = load double, ptr %13, align 8, !dbg !396
  %35599 = fadd double %35598, 0x400921FB54442D18, !dbg !397
  %35600 = call double @llvm.fabs.f64(double %35599), !dbg !398
  %35601 = fcmp ole double %35600, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35601, label %14330, label %35602, !dbg !400

35602:                                            ; preds = %35597
  br label %35603, !dbg !403

35603:                                            ; preds = %35602
  %35604 = load i32, ptr %10, align 4, !dbg !404
  %35605 = add nsw i32 %35604, 1, !dbg !404
  store i32 %35605, ptr %10, align 4, !dbg !404
  %35606 = load i32, ptr %10, align 4, !dbg !364
  %35607 = load i32, ptr %8, align 4, !dbg !366
  %35608 = icmp slt i32 %35606, %35607, !dbg !367
  br i1 %35608, label %35609, label %48422, !dbg !368

35609:                                            ; preds = %35603
  %35610 = load i32, ptr %10, align 4, !dbg !369
  %35611 = sext i32 %35610 to i64, !dbg !371
  %35612 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35611, !dbg !371
  %35613 = load double, ptr %6, align 8, !dbg !372
  %35614 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35615 = load double, ptr %35614, align 8, !dbg !372
  %35616 = load double, ptr %35612, align 16, !dbg !372
  %35617 = getelementptr inbounds { double, double }, ptr %35612, i32 0, i32 1, !dbg !372
  %35618 = load double, ptr %35617, align 8, !dbg !372
  %35619 = call { double, double } @make_vec(double %35613, double %35615, double %35616, double %35618), !dbg !372
  %35620 = extractvalue { double, double } %35619, 0, !dbg !372
  store double %35620, ptr %16, align 8, !dbg !372
  %35621 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35622 = extractvalue { double, double } %35619, 1, !dbg !372
  store double %35622, ptr %35621, align 8, !dbg !372
  %35623 = load i32, ptr %10, align 4, !dbg !373
  %35624 = add nsw i32 %35623, 1, !dbg !374
  %35625 = sext i32 %35624 to i64, !dbg !375
  %35626 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35625, !dbg !375
  %35627 = load double, ptr %6, align 8, !dbg !376
  %35628 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35629 = load double, ptr %35628, align 8, !dbg !376
  %35630 = load double, ptr %35626, align 16, !dbg !376
  %35631 = getelementptr inbounds { double, double }, ptr %35626, i32 0, i32 1, !dbg !376
  %35632 = load double, ptr %35631, align 8, !dbg !376
  %35633 = call { double, double } @make_vec(double %35627, double %35629, double %35630, double %35632), !dbg !376
  %35634 = extractvalue { double, double } %35633, 0, !dbg !376
  store double %35634, ptr %17, align 8, !dbg !376
  %35635 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35636 = extractvalue { double, double } %35633, 1, !dbg !376
  store double %35636, ptr %35635, align 8, !dbg !376
  %35637 = load double, ptr %16, align 8, !dbg !377
  %35638 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35639 = load double, ptr %35638, align 8, !dbg !377
  %35640 = load double, ptr %17, align 8, !dbg !377
  %35641 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35642 = load double, ptr %35641, align 8, !dbg !377
  %35643 = call double @cross(double %35637, double %35639, double %35640, double %35642), !dbg !377
  %35644 = load i32, ptr %10, align 4, !dbg !378
  %35645 = sext i32 %35644 to i64, !dbg !379
  %35646 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35645, !dbg !379
  %35647 = load double, ptr %6, align 8, !dbg !380
  %35648 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35649 = load double, ptr %35648, align 8, !dbg !380
  %35650 = load double, ptr %35646, align 16, !dbg !380
  %35651 = getelementptr inbounds { double, double }, ptr %35646, i32 0, i32 1, !dbg !380
  %35652 = load double, ptr %35651, align 8, !dbg !380
  %35653 = call { double, double } @make_vec(double %35647, double %35649, double %35650, double %35652), !dbg !380
  %35654 = extractvalue { double, double } %35653, 0, !dbg !380
  store double %35654, ptr %18, align 8, !dbg !380
  %35655 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35656 = extractvalue { double, double } %35653, 1, !dbg !380
  store double %35656, ptr %35655, align 8, !dbg !380
  %35657 = load i32, ptr %10, align 4, !dbg !381
  %35658 = add nsw i32 %35657, 1, !dbg !382
  %35659 = sext i32 %35658 to i64, !dbg !383
  %35660 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35659, !dbg !383
  %35661 = load double, ptr %6, align 8, !dbg !384
  %35662 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35663 = load double, ptr %35662, align 8, !dbg !384
  %35664 = load double, ptr %35660, align 16, !dbg !384
  %35665 = getelementptr inbounds { double, double }, ptr %35660, i32 0, i32 1, !dbg !384
  %35666 = load double, ptr %35665, align 8, !dbg !384
  %35667 = call { double, double } @make_vec(double %35661, double %35663, double %35664, double %35666), !dbg !384
  %35668 = extractvalue { double, double } %35667, 0, !dbg !384
  store double %35668, ptr %19, align 8, !dbg !384
  %35669 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35670 = extractvalue { double, double } %35667, 1, !dbg !384
  store double %35670, ptr %35669, align 8, !dbg !384
  %35671 = load double, ptr %18, align 8, !dbg !385
  %35672 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35673 = load double, ptr %35672, align 8, !dbg !385
  %35674 = load double, ptr %19, align 8, !dbg !385
  %35675 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35676 = load double, ptr %35675, align 8, !dbg !385
  %35677 = call double @dot(double %35671, double %35673, double %35674, double %35676), !dbg !385
  %35678 = call double @atan2(double noundef %35643, double noundef %35677) #6, !dbg !386
  store double %35678, ptr %13, align 8, !dbg !387
  %35679 = load double, ptr %13, align 8, !dbg !388
  %35680 = load double, ptr %14, align 8, !dbg !389
  %35681 = fadd double %35680, %35679, !dbg !389
  store double %35681, ptr %14, align 8, !dbg !389
  %35682 = load double, ptr %13, align 8, !dbg !390
  %35683 = fsub double %35682, 0x400921FB54442D18, !dbg !392
  %35684 = call double @llvm.fabs.f64(double %35683), !dbg !393
  %35685 = fcmp ole double %35684, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35685, label %14330, label %35686, !dbg !395

35686:                                            ; preds = %35609
  %35687 = load double, ptr %13, align 8, !dbg !396
  %35688 = fadd double %35687, 0x400921FB54442D18, !dbg !397
  %35689 = call double @llvm.fabs.f64(double %35688), !dbg !398
  %35690 = fcmp ole double %35689, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35690, label %14330, label %35691, !dbg !400

35691:                                            ; preds = %35686
  br label %35692, !dbg !403

35692:                                            ; preds = %35691
  %35693 = load i32, ptr %10, align 4, !dbg !404
  %35694 = add nsw i32 %35693, 1, !dbg !404
  store i32 %35694, ptr %10, align 4, !dbg !404
  %35695 = load i32, ptr %10, align 4, !dbg !364
  %35696 = load i32, ptr %8, align 4, !dbg !366
  %35697 = icmp slt i32 %35695, %35696, !dbg !367
  br i1 %35697, label %35698, label %48422, !dbg !368

35698:                                            ; preds = %35692
  %35699 = load i32, ptr %10, align 4, !dbg !369
  %35700 = sext i32 %35699 to i64, !dbg !371
  %35701 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35700, !dbg !371
  %35702 = load double, ptr %6, align 8, !dbg !372
  %35703 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35704 = load double, ptr %35703, align 8, !dbg !372
  %35705 = load double, ptr %35701, align 16, !dbg !372
  %35706 = getelementptr inbounds { double, double }, ptr %35701, i32 0, i32 1, !dbg !372
  %35707 = load double, ptr %35706, align 8, !dbg !372
  %35708 = call { double, double } @make_vec(double %35702, double %35704, double %35705, double %35707), !dbg !372
  %35709 = extractvalue { double, double } %35708, 0, !dbg !372
  store double %35709, ptr %16, align 8, !dbg !372
  %35710 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35711 = extractvalue { double, double } %35708, 1, !dbg !372
  store double %35711, ptr %35710, align 8, !dbg !372
  %35712 = load i32, ptr %10, align 4, !dbg !373
  %35713 = add nsw i32 %35712, 1, !dbg !374
  %35714 = sext i32 %35713 to i64, !dbg !375
  %35715 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35714, !dbg !375
  %35716 = load double, ptr %6, align 8, !dbg !376
  %35717 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35718 = load double, ptr %35717, align 8, !dbg !376
  %35719 = load double, ptr %35715, align 16, !dbg !376
  %35720 = getelementptr inbounds { double, double }, ptr %35715, i32 0, i32 1, !dbg !376
  %35721 = load double, ptr %35720, align 8, !dbg !376
  %35722 = call { double, double } @make_vec(double %35716, double %35718, double %35719, double %35721), !dbg !376
  %35723 = extractvalue { double, double } %35722, 0, !dbg !376
  store double %35723, ptr %17, align 8, !dbg !376
  %35724 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35725 = extractvalue { double, double } %35722, 1, !dbg !376
  store double %35725, ptr %35724, align 8, !dbg !376
  %35726 = load double, ptr %16, align 8, !dbg !377
  %35727 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35728 = load double, ptr %35727, align 8, !dbg !377
  %35729 = load double, ptr %17, align 8, !dbg !377
  %35730 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35731 = load double, ptr %35730, align 8, !dbg !377
  %35732 = call double @cross(double %35726, double %35728, double %35729, double %35731), !dbg !377
  %35733 = load i32, ptr %10, align 4, !dbg !378
  %35734 = sext i32 %35733 to i64, !dbg !379
  %35735 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35734, !dbg !379
  %35736 = load double, ptr %6, align 8, !dbg !380
  %35737 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35738 = load double, ptr %35737, align 8, !dbg !380
  %35739 = load double, ptr %35735, align 16, !dbg !380
  %35740 = getelementptr inbounds { double, double }, ptr %35735, i32 0, i32 1, !dbg !380
  %35741 = load double, ptr %35740, align 8, !dbg !380
  %35742 = call { double, double } @make_vec(double %35736, double %35738, double %35739, double %35741), !dbg !380
  %35743 = extractvalue { double, double } %35742, 0, !dbg !380
  store double %35743, ptr %18, align 8, !dbg !380
  %35744 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35745 = extractvalue { double, double } %35742, 1, !dbg !380
  store double %35745, ptr %35744, align 8, !dbg !380
  %35746 = load i32, ptr %10, align 4, !dbg !381
  %35747 = add nsw i32 %35746, 1, !dbg !382
  %35748 = sext i32 %35747 to i64, !dbg !383
  %35749 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35748, !dbg !383
  %35750 = load double, ptr %6, align 8, !dbg !384
  %35751 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35752 = load double, ptr %35751, align 8, !dbg !384
  %35753 = load double, ptr %35749, align 16, !dbg !384
  %35754 = getelementptr inbounds { double, double }, ptr %35749, i32 0, i32 1, !dbg !384
  %35755 = load double, ptr %35754, align 8, !dbg !384
  %35756 = call { double, double } @make_vec(double %35750, double %35752, double %35753, double %35755), !dbg !384
  %35757 = extractvalue { double, double } %35756, 0, !dbg !384
  store double %35757, ptr %19, align 8, !dbg !384
  %35758 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35759 = extractvalue { double, double } %35756, 1, !dbg !384
  store double %35759, ptr %35758, align 8, !dbg !384
  %35760 = load double, ptr %18, align 8, !dbg !385
  %35761 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35762 = load double, ptr %35761, align 8, !dbg !385
  %35763 = load double, ptr %19, align 8, !dbg !385
  %35764 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35765 = load double, ptr %35764, align 8, !dbg !385
  %35766 = call double @dot(double %35760, double %35762, double %35763, double %35765), !dbg !385
  %35767 = call double @atan2(double noundef %35732, double noundef %35766) #6, !dbg !386
  store double %35767, ptr %13, align 8, !dbg !387
  %35768 = load double, ptr %13, align 8, !dbg !388
  %35769 = load double, ptr %14, align 8, !dbg !389
  %35770 = fadd double %35769, %35768, !dbg !389
  store double %35770, ptr %14, align 8, !dbg !389
  %35771 = load double, ptr %13, align 8, !dbg !390
  %35772 = fsub double %35771, 0x400921FB54442D18, !dbg !392
  %35773 = call double @llvm.fabs.f64(double %35772), !dbg !393
  %35774 = fcmp ole double %35773, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35774, label %14330, label %35775, !dbg !395

35775:                                            ; preds = %35698
  %35776 = load double, ptr %13, align 8, !dbg !396
  %35777 = fadd double %35776, 0x400921FB54442D18, !dbg !397
  %35778 = call double @llvm.fabs.f64(double %35777), !dbg !398
  %35779 = fcmp ole double %35778, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35779, label %14330, label %35780, !dbg !400

35780:                                            ; preds = %35775
  br label %35781, !dbg !403

35781:                                            ; preds = %35780
  %35782 = load i32, ptr %10, align 4, !dbg !404
  %35783 = add nsw i32 %35782, 1, !dbg !404
  store i32 %35783, ptr %10, align 4, !dbg !404
  %35784 = load i32, ptr %10, align 4, !dbg !364
  %35785 = load i32, ptr %8, align 4, !dbg !366
  %35786 = icmp slt i32 %35784, %35785, !dbg !367
  br i1 %35786, label %35787, label %48422, !dbg !368

35787:                                            ; preds = %35781
  %35788 = load i32, ptr %10, align 4, !dbg !369
  %35789 = sext i32 %35788 to i64, !dbg !371
  %35790 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35789, !dbg !371
  %35791 = load double, ptr %6, align 8, !dbg !372
  %35792 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35793 = load double, ptr %35792, align 8, !dbg !372
  %35794 = load double, ptr %35790, align 16, !dbg !372
  %35795 = getelementptr inbounds { double, double }, ptr %35790, i32 0, i32 1, !dbg !372
  %35796 = load double, ptr %35795, align 8, !dbg !372
  %35797 = call { double, double } @make_vec(double %35791, double %35793, double %35794, double %35796), !dbg !372
  %35798 = extractvalue { double, double } %35797, 0, !dbg !372
  store double %35798, ptr %16, align 8, !dbg !372
  %35799 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35800 = extractvalue { double, double } %35797, 1, !dbg !372
  store double %35800, ptr %35799, align 8, !dbg !372
  %35801 = load i32, ptr %10, align 4, !dbg !373
  %35802 = add nsw i32 %35801, 1, !dbg !374
  %35803 = sext i32 %35802 to i64, !dbg !375
  %35804 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35803, !dbg !375
  %35805 = load double, ptr %6, align 8, !dbg !376
  %35806 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35807 = load double, ptr %35806, align 8, !dbg !376
  %35808 = load double, ptr %35804, align 16, !dbg !376
  %35809 = getelementptr inbounds { double, double }, ptr %35804, i32 0, i32 1, !dbg !376
  %35810 = load double, ptr %35809, align 8, !dbg !376
  %35811 = call { double, double } @make_vec(double %35805, double %35807, double %35808, double %35810), !dbg !376
  %35812 = extractvalue { double, double } %35811, 0, !dbg !376
  store double %35812, ptr %17, align 8, !dbg !376
  %35813 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35814 = extractvalue { double, double } %35811, 1, !dbg !376
  store double %35814, ptr %35813, align 8, !dbg !376
  %35815 = load double, ptr %16, align 8, !dbg !377
  %35816 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35817 = load double, ptr %35816, align 8, !dbg !377
  %35818 = load double, ptr %17, align 8, !dbg !377
  %35819 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35820 = load double, ptr %35819, align 8, !dbg !377
  %35821 = call double @cross(double %35815, double %35817, double %35818, double %35820), !dbg !377
  %35822 = load i32, ptr %10, align 4, !dbg !378
  %35823 = sext i32 %35822 to i64, !dbg !379
  %35824 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35823, !dbg !379
  %35825 = load double, ptr %6, align 8, !dbg !380
  %35826 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35827 = load double, ptr %35826, align 8, !dbg !380
  %35828 = load double, ptr %35824, align 16, !dbg !380
  %35829 = getelementptr inbounds { double, double }, ptr %35824, i32 0, i32 1, !dbg !380
  %35830 = load double, ptr %35829, align 8, !dbg !380
  %35831 = call { double, double } @make_vec(double %35825, double %35827, double %35828, double %35830), !dbg !380
  %35832 = extractvalue { double, double } %35831, 0, !dbg !380
  store double %35832, ptr %18, align 8, !dbg !380
  %35833 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35834 = extractvalue { double, double } %35831, 1, !dbg !380
  store double %35834, ptr %35833, align 8, !dbg !380
  %35835 = load i32, ptr %10, align 4, !dbg !381
  %35836 = add nsw i32 %35835, 1, !dbg !382
  %35837 = sext i32 %35836 to i64, !dbg !383
  %35838 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35837, !dbg !383
  %35839 = load double, ptr %6, align 8, !dbg !384
  %35840 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35841 = load double, ptr %35840, align 8, !dbg !384
  %35842 = load double, ptr %35838, align 16, !dbg !384
  %35843 = getelementptr inbounds { double, double }, ptr %35838, i32 0, i32 1, !dbg !384
  %35844 = load double, ptr %35843, align 8, !dbg !384
  %35845 = call { double, double } @make_vec(double %35839, double %35841, double %35842, double %35844), !dbg !384
  %35846 = extractvalue { double, double } %35845, 0, !dbg !384
  store double %35846, ptr %19, align 8, !dbg !384
  %35847 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35848 = extractvalue { double, double } %35845, 1, !dbg !384
  store double %35848, ptr %35847, align 8, !dbg !384
  %35849 = load double, ptr %18, align 8, !dbg !385
  %35850 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35851 = load double, ptr %35850, align 8, !dbg !385
  %35852 = load double, ptr %19, align 8, !dbg !385
  %35853 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35854 = load double, ptr %35853, align 8, !dbg !385
  %35855 = call double @dot(double %35849, double %35851, double %35852, double %35854), !dbg !385
  %35856 = call double @atan2(double noundef %35821, double noundef %35855) #6, !dbg !386
  store double %35856, ptr %13, align 8, !dbg !387
  %35857 = load double, ptr %13, align 8, !dbg !388
  %35858 = load double, ptr %14, align 8, !dbg !389
  %35859 = fadd double %35858, %35857, !dbg !389
  store double %35859, ptr %14, align 8, !dbg !389
  %35860 = load double, ptr %13, align 8, !dbg !390
  %35861 = fsub double %35860, 0x400921FB54442D18, !dbg !392
  %35862 = call double @llvm.fabs.f64(double %35861), !dbg !393
  %35863 = fcmp ole double %35862, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35863, label %14330, label %35864, !dbg !395

35864:                                            ; preds = %35787
  %35865 = load double, ptr %13, align 8, !dbg !396
  %35866 = fadd double %35865, 0x400921FB54442D18, !dbg !397
  %35867 = call double @llvm.fabs.f64(double %35866), !dbg !398
  %35868 = fcmp ole double %35867, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35868, label %14330, label %35869, !dbg !400

35869:                                            ; preds = %35864
  br label %35870, !dbg !403

35870:                                            ; preds = %35869
  %35871 = load i32, ptr %10, align 4, !dbg !404
  %35872 = add nsw i32 %35871, 1, !dbg !404
  store i32 %35872, ptr %10, align 4, !dbg !404
  %35873 = load i32, ptr %10, align 4, !dbg !364
  %35874 = load i32, ptr %8, align 4, !dbg !366
  %35875 = icmp slt i32 %35873, %35874, !dbg !367
  br i1 %35875, label %35876, label %48422, !dbg !368

35876:                                            ; preds = %35870
  %35877 = load i32, ptr %10, align 4, !dbg !369
  %35878 = sext i32 %35877 to i64, !dbg !371
  %35879 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35878, !dbg !371
  %35880 = load double, ptr %6, align 8, !dbg !372
  %35881 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35882 = load double, ptr %35881, align 8, !dbg !372
  %35883 = load double, ptr %35879, align 16, !dbg !372
  %35884 = getelementptr inbounds { double, double }, ptr %35879, i32 0, i32 1, !dbg !372
  %35885 = load double, ptr %35884, align 8, !dbg !372
  %35886 = call { double, double } @make_vec(double %35880, double %35882, double %35883, double %35885), !dbg !372
  %35887 = extractvalue { double, double } %35886, 0, !dbg !372
  store double %35887, ptr %16, align 8, !dbg !372
  %35888 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35889 = extractvalue { double, double } %35886, 1, !dbg !372
  store double %35889, ptr %35888, align 8, !dbg !372
  %35890 = load i32, ptr %10, align 4, !dbg !373
  %35891 = add nsw i32 %35890, 1, !dbg !374
  %35892 = sext i32 %35891 to i64, !dbg !375
  %35893 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35892, !dbg !375
  %35894 = load double, ptr %6, align 8, !dbg !376
  %35895 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35896 = load double, ptr %35895, align 8, !dbg !376
  %35897 = load double, ptr %35893, align 16, !dbg !376
  %35898 = getelementptr inbounds { double, double }, ptr %35893, i32 0, i32 1, !dbg !376
  %35899 = load double, ptr %35898, align 8, !dbg !376
  %35900 = call { double, double } @make_vec(double %35894, double %35896, double %35897, double %35899), !dbg !376
  %35901 = extractvalue { double, double } %35900, 0, !dbg !376
  store double %35901, ptr %17, align 8, !dbg !376
  %35902 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35903 = extractvalue { double, double } %35900, 1, !dbg !376
  store double %35903, ptr %35902, align 8, !dbg !376
  %35904 = load double, ptr %16, align 8, !dbg !377
  %35905 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35906 = load double, ptr %35905, align 8, !dbg !377
  %35907 = load double, ptr %17, align 8, !dbg !377
  %35908 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35909 = load double, ptr %35908, align 8, !dbg !377
  %35910 = call double @cross(double %35904, double %35906, double %35907, double %35909), !dbg !377
  %35911 = load i32, ptr %10, align 4, !dbg !378
  %35912 = sext i32 %35911 to i64, !dbg !379
  %35913 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35912, !dbg !379
  %35914 = load double, ptr %6, align 8, !dbg !380
  %35915 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %35916 = load double, ptr %35915, align 8, !dbg !380
  %35917 = load double, ptr %35913, align 16, !dbg !380
  %35918 = getelementptr inbounds { double, double }, ptr %35913, i32 0, i32 1, !dbg !380
  %35919 = load double, ptr %35918, align 8, !dbg !380
  %35920 = call { double, double } @make_vec(double %35914, double %35916, double %35917, double %35919), !dbg !380
  %35921 = extractvalue { double, double } %35920, 0, !dbg !380
  store double %35921, ptr %18, align 8, !dbg !380
  %35922 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %35923 = extractvalue { double, double } %35920, 1, !dbg !380
  store double %35923, ptr %35922, align 8, !dbg !380
  %35924 = load i32, ptr %10, align 4, !dbg !381
  %35925 = add nsw i32 %35924, 1, !dbg !382
  %35926 = sext i32 %35925 to i64, !dbg !383
  %35927 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35926, !dbg !383
  %35928 = load double, ptr %6, align 8, !dbg !384
  %35929 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %35930 = load double, ptr %35929, align 8, !dbg !384
  %35931 = load double, ptr %35927, align 16, !dbg !384
  %35932 = getelementptr inbounds { double, double }, ptr %35927, i32 0, i32 1, !dbg !384
  %35933 = load double, ptr %35932, align 8, !dbg !384
  %35934 = call { double, double } @make_vec(double %35928, double %35930, double %35931, double %35933), !dbg !384
  %35935 = extractvalue { double, double } %35934, 0, !dbg !384
  store double %35935, ptr %19, align 8, !dbg !384
  %35936 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %35937 = extractvalue { double, double } %35934, 1, !dbg !384
  store double %35937, ptr %35936, align 8, !dbg !384
  %35938 = load double, ptr %18, align 8, !dbg !385
  %35939 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %35940 = load double, ptr %35939, align 8, !dbg !385
  %35941 = load double, ptr %19, align 8, !dbg !385
  %35942 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %35943 = load double, ptr %35942, align 8, !dbg !385
  %35944 = call double @dot(double %35938, double %35940, double %35941, double %35943), !dbg !385
  %35945 = call double @atan2(double noundef %35910, double noundef %35944) #6, !dbg !386
  store double %35945, ptr %13, align 8, !dbg !387
  %35946 = load double, ptr %13, align 8, !dbg !388
  %35947 = load double, ptr %14, align 8, !dbg !389
  %35948 = fadd double %35947, %35946, !dbg !389
  store double %35948, ptr %14, align 8, !dbg !389
  %35949 = load double, ptr %13, align 8, !dbg !390
  %35950 = fsub double %35949, 0x400921FB54442D18, !dbg !392
  %35951 = call double @llvm.fabs.f64(double %35950), !dbg !393
  %35952 = fcmp ole double %35951, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %35952, label %14330, label %35953, !dbg !395

35953:                                            ; preds = %35876
  %35954 = load double, ptr %13, align 8, !dbg !396
  %35955 = fadd double %35954, 0x400921FB54442D18, !dbg !397
  %35956 = call double @llvm.fabs.f64(double %35955), !dbg !398
  %35957 = fcmp ole double %35956, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %35957, label %14330, label %35958, !dbg !400

35958:                                            ; preds = %35953
  br label %35959, !dbg !403

35959:                                            ; preds = %35958
  %35960 = load i32, ptr %10, align 4, !dbg !404
  %35961 = add nsw i32 %35960, 1, !dbg !404
  store i32 %35961, ptr %10, align 4, !dbg !404
  %35962 = load i32, ptr %10, align 4, !dbg !364
  %35963 = load i32, ptr %8, align 4, !dbg !366
  %35964 = icmp slt i32 %35962, %35963, !dbg !367
  br i1 %35964, label %35965, label %48422, !dbg !368

35965:                                            ; preds = %35959
  %35966 = load i32, ptr %10, align 4, !dbg !369
  %35967 = sext i32 %35966 to i64, !dbg !371
  %35968 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35967, !dbg !371
  %35969 = load double, ptr %6, align 8, !dbg !372
  %35970 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %35971 = load double, ptr %35970, align 8, !dbg !372
  %35972 = load double, ptr %35968, align 16, !dbg !372
  %35973 = getelementptr inbounds { double, double }, ptr %35968, i32 0, i32 1, !dbg !372
  %35974 = load double, ptr %35973, align 8, !dbg !372
  %35975 = call { double, double } @make_vec(double %35969, double %35971, double %35972, double %35974), !dbg !372
  %35976 = extractvalue { double, double } %35975, 0, !dbg !372
  store double %35976, ptr %16, align 8, !dbg !372
  %35977 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %35978 = extractvalue { double, double } %35975, 1, !dbg !372
  store double %35978, ptr %35977, align 8, !dbg !372
  %35979 = load i32, ptr %10, align 4, !dbg !373
  %35980 = add nsw i32 %35979, 1, !dbg !374
  %35981 = sext i32 %35980 to i64, !dbg !375
  %35982 = getelementptr inbounds %struct.POINT, ptr %26, i64 %35981, !dbg !375
  %35983 = load double, ptr %6, align 8, !dbg !376
  %35984 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %35985 = load double, ptr %35984, align 8, !dbg !376
  %35986 = load double, ptr %35982, align 16, !dbg !376
  %35987 = getelementptr inbounds { double, double }, ptr %35982, i32 0, i32 1, !dbg !376
  %35988 = load double, ptr %35987, align 8, !dbg !376
  %35989 = call { double, double } @make_vec(double %35983, double %35985, double %35986, double %35988), !dbg !376
  %35990 = extractvalue { double, double } %35989, 0, !dbg !376
  store double %35990, ptr %17, align 8, !dbg !376
  %35991 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %35992 = extractvalue { double, double } %35989, 1, !dbg !376
  store double %35992, ptr %35991, align 8, !dbg !376
  %35993 = load double, ptr %16, align 8, !dbg !377
  %35994 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %35995 = load double, ptr %35994, align 8, !dbg !377
  %35996 = load double, ptr %17, align 8, !dbg !377
  %35997 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %35998 = load double, ptr %35997, align 8, !dbg !377
  %35999 = call double @cross(double %35993, double %35995, double %35996, double %35998), !dbg !377
  %36000 = load i32, ptr %10, align 4, !dbg !378
  %36001 = sext i32 %36000 to i64, !dbg !379
  %36002 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36001, !dbg !379
  %36003 = load double, ptr %6, align 8, !dbg !380
  %36004 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36005 = load double, ptr %36004, align 8, !dbg !380
  %36006 = load double, ptr %36002, align 16, !dbg !380
  %36007 = getelementptr inbounds { double, double }, ptr %36002, i32 0, i32 1, !dbg !380
  %36008 = load double, ptr %36007, align 8, !dbg !380
  %36009 = call { double, double } @make_vec(double %36003, double %36005, double %36006, double %36008), !dbg !380
  %36010 = extractvalue { double, double } %36009, 0, !dbg !380
  store double %36010, ptr %18, align 8, !dbg !380
  %36011 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36012 = extractvalue { double, double } %36009, 1, !dbg !380
  store double %36012, ptr %36011, align 8, !dbg !380
  %36013 = load i32, ptr %10, align 4, !dbg !381
  %36014 = add nsw i32 %36013, 1, !dbg !382
  %36015 = sext i32 %36014 to i64, !dbg !383
  %36016 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36015, !dbg !383
  %36017 = load double, ptr %6, align 8, !dbg !384
  %36018 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36019 = load double, ptr %36018, align 8, !dbg !384
  %36020 = load double, ptr %36016, align 16, !dbg !384
  %36021 = getelementptr inbounds { double, double }, ptr %36016, i32 0, i32 1, !dbg !384
  %36022 = load double, ptr %36021, align 8, !dbg !384
  %36023 = call { double, double } @make_vec(double %36017, double %36019, double %36020, double %36022), !dbg !384
  %36024 = extractvalue { double, double } %36023, 0, !dbg !384
  store double %36024, ptr %19, align 8, !dbg !384
  %36025 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36026 = extractvalue { double, double } %36023, 1, !dbg !384
  store double %36026, ptr %36025, align 8, !dbg !384
  %36027 = load double, ptr %18, align 8, !dbg !385
  %36028 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36029 = load double, ptr %36028, align 8, !dbg !385
  %36030 = load double, ptr %19, align 8, !dbg !385
  %36031 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36032 = load double, ptr %36031, align 8, !dbg !385
  %36033 = call double @dot(double %36027, double %36029, double %36030, double %36032), !dbg !385
  %36034 = call double @atan2(double noundef %35999, double noundef %36033) #6, !dbg !386
  store double %36034, ptr %13, align 8, !dbg !387
  %36035 = load double, ptr %13, align 8, !dbg !388
  %36036 = load double, ptr %14, align 8, !dbg !389
  %36037 = fadd double %36036, %36035, !dbg !389
  store double %36037, ptr %14, align 8, !dbg !389
  %36038 = load double, ptr %13, align 8, !dbg !390
  %36039 = fsub double %36038, 0x400921FB54442D18, !dbg !392
  %36040 = call double @llvm.fabs.f64(double %36039), !dbg !393
  %36041 = fcmp ole double %36040, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36041, label %14330, label %36042, !dbg !395

36042:                                            ; preds = %35965
  %36043 = load double, ptr %13, align 8, !dbg !396
  %36044 = fadd double %36043, 0x400921FB54442D18, !dbg !397
  %36045 = call double @llvm.fabs.f64(double %36044), !dbg !398
  %36046 = fcmp ole double %36045, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36046, label %14330, label %36047, !dbg !400

36047:                                            ; preds = %36042
  br label %36048, !dbg !403

36048:                                            ; preds = %36047
  %36049 = load i32, ptr %10, align 4, !dbg !404
  %36050 = add nsw i32 %36049, 1, !dbg !404
  store i32 %36050, ptr %10, align 4, !dbg !404
  %36051 = load i32, ptr %10, align 4, !dbg !364
  %36052 = load i32, ptr %8, align 4, !dbg !366
  %36053 = icmp slt i32 %36051, %36052, !dbg !367
  br i1 %36053, label %36054, label %48422, !dbg !368

36054:                                            ; preds = %36048
  %36055 = load i32, ptr %10, align 4, !dbg !369
  %36056 = sext i32 %36055 to i64, !dbg !371
  %36057 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36056, !dbg !371
  %36058 = load double, ptr %6, align 8, !dbg !372
  %36059 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36060 = load double, ptr %36059, align 8, !dbg !372
  %36061 = load double, ptr %36057, align 16, !dbg !372
  %36062 = getelementptr inbounds { double, double }, ptr %36057, i32 0, i32 1, !dbg !372
  %36063 = load double, ptr %36062, align 8, !dbg !372
  %36064 = call { double, double } @make_vec(double %36058, double %36060, double %36061, double %36063), !dbg !372
  %36065 = extractvalue { double, double } %36064, 0, !dbg !372
  store double %36065, ptr %16, align 8, !dbg !372
  %36066 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36067 = extractvalue { double, double } %36064, 1, !dbg !372
  store double %36067, ptr %36066, align 8, !dbg !372
  %36068 = load i32, ptr %10, align 4, !dbg !373
  %36069 = add nsw i32 %36068, 1, !dbg !374
  %36070 = sext i32 %36069 to i64, !dbg !375
  %36071 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36070, !dbg !375
  %36072 = load double, ptr %6, align 8, !dbg !376
  %36073 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36074 = load double, ptr %36073, align 8, !dbg !376
  %36075 = load double, ptr %36071, align 16, !dbg !376
  %36076 = getelementptr inbounds { double, double }, ptr %36071, i32 0, i32 1, !dbg !376
  %36077 = load double, ptr %36076, align 8, !dbg !376
  %36078 = call { double, double } @make_vec(double %36072, double %36074, double %36075, double %36077), !dbg !376
  %36079 = extractvalue { double, double } %36078, 0, !dbg !376
  store double %36079, ptr %17, align 8, !dbg !376
  %36080 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36081 = extractvalue { double, double } %36078, 1, !dbg !376
  store double %36081, ptr %36080, align 8, !dbg !376
  %36082 = load double, ptr %16, align 8, !dbg !377
  %36083 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36084 = load double, ptr %36083, align 8, !dbg !377
  %36085 = load double, ptr %17, align 8, !dbg !377
  %36086 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36087 = load double, ptr %36086, align 8, !dbg !377
  %36088 = call double @cross(double %36082, double %36084, double %36085, double %36087), !dbg !377
  %36089 = load i32, ptr %10, align 4, !dbg !378
  %36090 = sext i32 %36089 to i64, !dbg !379
  %36091 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36090, !dbg !379
  %36092 = load double, ptr %6, align 8, !dbg !380
  %36093 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36094 = load double, ptr %36093, align 8, !dbg !380
  %36095 = load double, ptr %36091, align 16, !dbg !380
  %36096 = getelementptr inbounds { double, double }, ptr %36091, i32 0, i32 1, !dbg !380
  %36097 = load double, ptr %36096, align 8, !dbg !380
  %36098 = call { double, double } @make_vec(double %36092, double %36094, double %36095, double %36097), !dbg !380
  %36099 = extractvalue { double, double } %36098, 0, !dbg !380
  store double %36099, ptr %18, align 8, !dbg !380
  %36100 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36101 = extractvalue { double, double } %36098, 1, !dbg !380
  store double %36101, ptr %36100, align 8, !dbg !380
  %36102 = load i32, ptr %10, align 4, !dbg !381
  %36103 = add nsw i32 %36102, 1, !dbg !382
  %36104 = sext i32 %36103 to i64, !dbg !383
  %36105 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36104, !dbg !383
  %36106 = load double, ptr %6, align 8, !dbg !384
  %36107 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36108 = load double, ptr %36107, align 8, !dbg !384
  %36109 = load double, ptr %36105, align 16, !dbg !384
  %36110 = getelementptr inbounds { double, double }, ptr %36105, i32 0, i32 1, !dbg !384
  %36111 = load double, ptr %36110, align 8, !dbg !384
  %36112 = call { double, double } @make_vec(double %36106, double %36108, double %36109, double %36111), !dbg !384
  %36113 = extractvalue { double, double } %36112, 0, !dbg !384
  store double %36113, ptr %19, align 8, !dbg !384
  %36114 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36115 = extractvalue { double, double } %36112, 1, !dbg !384
  store double %36115, ptr %36114, align 8, !dbg !384
  %36116 = load double, ptr %18, align 8, !dbg !385
  %36117 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36118 = load double, ptr %36117, align 8, !dbg !385
  %36119 = load double, ptr %19, align 8, !dbg !385
  %36120 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36121 = load double, ptr %36120, align 8, !dbg !385
  %36122 = call double @dot(double %36116, double %36118, double %36119, double %36121), !dbg !385
  %36123 = call double @atan2(double noundef %36088, double noundef %36122) #6, !dbg !386
  store double %36123, ptr %13, align 8, !dbg !387
  %36124 = load double, ptr %13, align 8, !dbg !388
  %36125 = load double, ptr %14, align 8, !dbg !389
  %36126 = fadd double %36125, %36124, !dbg !389
  store double %36126, ptr %14, align 8, !dbg !389
  %36127 = load double, ptr %13, align 8, !dbg !390
  %36128 = fsub double %36127, 0x400921FB54442D18, !dbg !392
  %36129 = call double @llvm.fabs.f64(double %36128), !dbg !393
  %36130 = fcmp ole double %36129, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36130, label %14330, label %36131, !dbg !395

36131:                                            ; preds = %36054
  %36132 = load double, ptr %13, align 8, !dbg !396
  %36133 = fadd double %36132, 0x400921FB54442D18, !dbg !397
  %36134 = call double @llvm.fabs.f64(double %36133), !dbg !398
  %36135 = fcmp ole double %36134, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36135, label %14330, label %36136, !dbg !400

36136:                                            ; preds = %36131
  br label %36137, !dbg !403

36137:                                            ; preds = %36136
  %36138 = load i32, ptr %10, align 4, !dbg !404
  %36139 = add nsw i32 %36138, 1, !dbg !404
  store i32 %36139, ptr %10, align 4, !dbg !404
  %36140 = load i32, ptr %10, align 4, !dbg !364
  %36141 = load i32, ptr %8, align 4, !dbg !366
  %36142 = icmp slt i32 %36140, %36141, !dbg !367
  br i1 %36142, label %36143, label %48422, !dbg !368

36143:                                            ; preds = %36137
  %36144 = load i32, ptr %10, align 4, !dbg !369
  %36145 = sext i32 %36144 to i64, !dbg !371
  %36146 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36145, !dbg !371
  %36147 = load double, ptr %6, align 8, !dbg !372
  %36148 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36149 = load double, ptr %36148, align 8, !dbg !372
  %36150 = load double, ptr %36146, align 16, !dbg !372
  %36151 = getelementptr inbounds { double, double }, ptr %36146, i32 0, i32 1, !dbg !372
  %36152 = load double, ptr %36151, align 8, !dbg !372
  %36153 = call { double, double } @make_vec(double %36147, double %36149, double %36150, double %36152), !dbg !372
  %36154 = extractvalue { double, double } %36153, 0, !dbg !372
  store double %36154, ptr %16, align 8, !dbg !372
  %36155 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36156 = extractvalue { double, double } %36153, 1, !dbg !372
  store double %36156, ptr %36155, align 8, !dbg !372
  %36157 = load i32, ptr %10, align 4, !dbg !373
  %36158 = add nsw i32 %36157, 1, !dbg !374
  %36159 = sext i32 %36158 to i64, !dbg !375
  %36160 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36159, !dbg !375
  %36161 = load double, ptr %6, align 8, !dbg !376
  %36162 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36163 = load double, ptr %36162, align 8, !dbg !376
  %36164 = load double, ptr %36160, align 16, !dbg !376
  %36165 = getelementptr inbounds { double, double }, ptr %36160, i32 0, i32 1, !dbg !376
  %36166 = load double, ptr %36165, align 8, !dbg !376
  %36167 = call { double, double } @make_vec(double %36161, double %36163, double %36164, double %36166), !dbg !376
  %36168 = extractvalue { double, double } %36167, 0, !dbg !376
  store double %36168, ptr %17, align 8, !dbg !376
  %36169 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36170 = extractvalue { double, double } %36167, 1, !dbg !376
  store double %36170, ptr %36169, align 8, !dbg !376
  %36171 = load double, ptr %16, align 8, !dbg !377
  %36172 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36173 = load double, ptr %36172, align 8, !dbg !377
  %36174 = load double, ptr %17, align 8, !dbg !377
  %36175 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36176 = load double, ptr %36175, align 8, !dbg !377
  %36177 = call double @cross(double %36171, double %36173, double %36174, double %36176), !dbg !377
  %36178 = load i32, ptr %10, align 4, !dbg !378
  %36179 = sext i32 %36178 to i64, !dbg !379
  %36180 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36179, !dbg !379
  %36181 = load double, ptr %6, align 8, !dbg !380
  %36182 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36183 = load double, ptr %36182, align 8, !dbg !380
  %36184 = load double, ptr %36180, align 16, !dbg !380
  %36185 = getelementptr inbounds { double, double }, ptr %36180, i32 0, i32 1, !dbg !380
  %36186 = load double, ptr %36185, align 8, !dbg !380
  %36187 = call { double, double } @make_vec(double %36181, double %36183, double %36184, double %36186), !dbg !380
  %36188 = extractvalue { double, double } %36187, 0, !dbg !380
  store double %36188, ptr %18, align 8, !dbg !380
  %36189 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36190 = extractvalue { double, double } %36187, 1, !dbg !380
  store double %36190, ptr %36189, align 8, !dbg !380
  %36191 = load i32, ptr %10, align 4, !dbg !381
  %36192 = add nsw i32 %36191, 1, !dbg !382
  %36193 = sext i32 %36192 to i64, !dbg !383
  %36194 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36193, !dbg !383
  %36195 = load double, ptr %6, align 8, !dbg !384
  %36196 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36197 = load double, ptr %36196, align 8, !dbg !384
  %36198 = load double, ptr %36194, align 16, !dbg !384
  %36199 = getelementptr inbounds { double, double }, ptr %36194, i32 0, i32 1, !dbg !384
  %36200 = load double, ptr %36199, align 8, !dbg !384
  %36201 = call { double, double } @make_vec(double %36195, double %36197, double %36198, double %36200), !dbg !384
  %36202 = extractvalue { double, double } %36201, 0, !dbg !384
  store double %36202, ptr %19, align 8, !dbg !384
  %36203 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36204 = extractvalue { double, double } %36201, 1, !dbg !384
  store double %36204, ptr %36203, align 8, !dbg !384
  %36205 = load double, ptr %18, align 8, !dbg !385
  %36206 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36207 = load double, ptr %36206, align 8, !dbg !385
  %36208 = load double, ptr %19, align 8, !dbg !385
  %36209 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36210 = load double, ptr %36209, align 8, !dbg !385
  %36211 = call double @dot(double %36205, double %36207, double %36208, double %36210), !dbg !385
  %36212 = call double @atan2(double noundef %36177, double noundef %36211) #6, !dbg !386
  store double %36212, ptr %13, align 8, !dbg !387
  %36213 = load double, ptr %13, align 8, !dbg !388
  %36214 = load double, ptr %14, align 8, !dbg !389
  %36215 = fadd double %36214, %36213, !dbg !389
  store double %36215, ptr %14, align 8, !dbg !389
  %36216 = load double, ptr %13, align 8, !dbg !390
  %36217 = fsub double %36216, 0x400921FB54442D18, !dbg !392
  %36218 = call double @llvm.fabs.f64(double %36217), !dbg !393
  %36219 = fcmp ole double %36218, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36219, label %14330, label %36220, !dbg !395

36220:                                            ; preds = %36143
  %36221 = load double, ptr %13, align 8, !dbg !396
  %36222 = fadd double %36221, 0x400921FB54442D18, !dbg !397
  %36223 = call double @llvm.fabs.f64(double %36222), !dbg !398
  %36224 = fcmp ole double %36223, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36224, label %14330, label %36225, !dbg !400

36225:                                            ; preds = %36220
  br label %36226, !dbg !403

36226:                                            ; preds = %36225
  %36227 = load i32, ptr %10, align 4, !dbg !404
  %36228 = add nsw i32 %36227, 1, !dbg !404
  store i32 %36228, ptr %10, align 4, !dbg !404
  %36229 = load i32, ptr %10, align 4, !dbg !364
  %36230 = load i32, ptr %8, align 4, !dbg !366
  %36231 = icmp slt i32 %36229, %36230, !dbg !367
  br i1 %36231, label %36232, label %48422, !dbg !368

36232:                                            ; preds = %36226
  %36233 = load i32, ptr %10, align 4, !dbg !369
  %36234 = sext i32 %36233 to i64, !dbg !371
  %36235 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36234, !dbg !371
  %36236 = load double, ptr %6, align 8, !dbg !372
  %36237 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36238 = load double, ptr %36237, align 8, !dbg !372
  %36239 = load double, ptr %36235, align 16, !dbg !372
  %36240 = getelementptr inbounds { double, double }, ptr %36235, i32 0, i32 1, !dbg !372
  %36241 = load double, ptr %36240, align 8, !dbg !372
  %36242 = call { double, double } @make_vec(double %36236, double %36238, double %36239, double %36241), !dbg !372
  %36243 = extractvalue { double, double } %36242, 0, !dbg !372
  store double %36243, ptr %16, align 8, !dbg !372
  %36244 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36245 = extractvalue { double, double } %36242, 1, !dbg !372
  store double %36245, ptr %36244, align 8, !dbg !372
  %36246 = load i32, ptr %10, align 4, !dbg !373
  %36247 = add nsw i32 %36246, 1, !dbg !374
  %36248 = sext i32 %36247 to i64, !dbg !375
  %36249 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36248, !dbg !375
  %36250 = load double, ptr %6, align 8, !dbg !376
  %36251 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36252 = load double, ptr %36251, align 8, !dbg !376
  %36253 = load double, ptr %36249, align 16, !dbg !376
  %36254 = getelementptr inbounds { double, double }, ptr %36249, i32 0, i32 1, !dbg !376
  %36255 = load double, ptr %36254, align 8, !dbg !376
  %36256 = call { double, double } @make_vec(double %36250, double %36252, double %36253, double %36255), !dbg !376
  %36257 = extractvalue { double, double } %36256, 0, !dbg !376
  store double %36257, ptr %17, align 8, !dbg !376
  %36258 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36259 = extractvalue { double, double } %36256, 1, !dbg !376
  store double %36259, ptr %36258, align 8, !dbg !376
  %36260 = load double, ptr %16, align 8, !dbg !377
  %36261 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36262 = load double, ptr %36261, align 8, !dbg !377
  %36263 = load double, ptr %17, align 8, !dbg !377
  %36264 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36265 = load double, ptr %36264, align 8, !dbg !377
  %36266 = call double @cross(double %36260, double %36262, double %36263, double %36265), !dbg !377
  %36267 = load i32, ptr %10, align 4, !dbg !378
  %36268 = sext i32 %36267 to i64, !dbg !379
  %36269 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36268, !dbg !379
  %36270 = load double, ptr %6, align 8, !dbg !380
  %36271 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36272 = load double, ptr %36271, align 8, !dbg !380
  %36273 = load double, ptr %36269, align 16, !dbg !380
  %36274 = getelementptr inbounds { double, double }, ptr %36269, i32 0, i32 1, !dbg !380
  %36275 = load double, ptr %36274, align 8, !dbg !380
  %36276 = call { double, double } @make_vec(double %36270, double %36272, double %36273, double %36275), !dbg !380
  %36277 = extractvalue { double, double } %36276, 0, !dbg !380
  store double %36277, ptr %18, align 8, !dbg !380
  %36278 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36279 = extractvalue { double, double } %36276, 1, !dbg !380
  store double %36279, ptr %36278, align 8, !dbg !380
  %36280 = load i32, ptr %10, align 4, !dbg !381
  %36281 = add nsw i32 %36280, 1, !dbg !382
  %36282 = sext i32 %36281 to i64, !dbg !383
  %36283 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36282, !dbg !383
  %36284 = load double, ptr %6, align 8, !dbg !384
  %36285 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36286 = load double, ptr %36285, align 8, !dbg !384
  %36287 = load double, ptr %36283, align 16, !dbg !384
  %36288 = getelementptr inbounds { double, double }, ptr %36283, i32 0, i32 1, !dbg !384
  %36289 = load double, ptr %36288, align 8, !dbg !384
  %36290 = call { double, double } @make_vec(double %36284, double %36286, double %36287, double %36289), !dbg !384
  %36291 = extractvalue { double, double } %36290, 0, !dbg !384
  store double %36291, ptr %19, align 8, !dbg !384
  %36292 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36293 = extractvalue { double, double } %36290, 1, !dbg !384
  store double %36293, ptr %36292, align 8, !dbg !384
  %36294 = load double, ptr %18, align 8, !dbg !385
  %36295 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36296 = load double, ptr %36295, align 8, !dbg !385
  %36297 = load double, ptr %19, align 8, !dbg !385
  %36298 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36299 = load double, ptr %36298, align 8, !dbg !385
  %36300 = call double @dot(double %36294, double %36296, double %36297, double %36299), !dbg !385
  %36301 = call double @atan2(double noundef %36266, double noundef %36300) #6, !dbg !386
  store double %36301, ptr %13, align 8, !dbg !387
  %36302 = load double, ptr %13, align 8, !dbg !388
  %36303 = load double, ptr %14, align 8, !dbg !389
  %36304 = fadd double %36303, %36302, !dbg !389
  store double %36304, ptr %14, align 8, !dbg !389
  %36305 = load double, ptr %13, align 8, !dbg !390
  %36306 = fsub double %36305, 0x400921FB54442D18, !dbg !392
  %36307 = call double @llvm.fabs.f64(double %36306), !dbg !393
  %36308 = fcmp ole double %36307, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36308, label %14330, label %36309, !dbg !395

36309:                                            ; preds = %36232
  %36310 = load double, ptr %13, align 8, !dbg !396
  %36311 = fadd double %36310, 0x400921FB54442D18, !dbg !397
  %36312 = call double @llvm.fabs.f64(double %36311), !dbg !398
  %36313 = fcmp ole double %36312, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36313, label %14330, label %36314, !dbg !400

36314:                                            ; preds = %36309
  br label %36315, !dbg !403

36315:                                            ; preds = %36314
  %36316 = load i32, ptr %10, align 4, !dbg !404
  %36317 = add nsw i32 %36316, 1, !dbg !404
  store i32 %36317, ptr %10, align 4, !dbg !404
  %36318 = load i32, ptr %10, align 4, !dbg !364
  %36319 = load i32, ptr %8, align 4, !dbg !366
  %36320 = icmp slt i32 %36318, %36319, !dbg !367
  br i1 %36320, label %36321, label %48422, !dbg !368

36321:                                            ; preds = %36315
  %36322 = load i32, ptr %10, align 4, !dbg !369
  %36323 = sext i32 %36322 to i64, !dbg !371
  %36324 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36323, !dbg !371
  %36325 = load double, ptr %6, align 8, !dbg !372
  %36326 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36327 = load double, ptr %36326, align 8, !dbg !372
  %36328 = load double, ptr %36324, align 16, !dbg !372
  %36329 = getelementptr inbounds { double, double }, ptr %36324, i32 0, i32 1, !dbg !372
  %36330 = load double, ptr %36329, align 8, !dbg !372
  %36331 = call { double, double } @make_vec(double %36325, double %36327, double %36328, double %36330), !dbg !372
  %36332 = extractvalue { double, double } %36331, 0, !dbg !372
  store double %36332, ptr %16, align 8, !dbg !372
  %36333 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36334 = extractvalue { double, double } %36331, 1, !dbg !372
  store double %36334, ptr %36333, align 8, !dbg !372
  %36335 = load i32, ptr %10, align 4, !dbg !373
  %36336 = add nsw i32 %36335, 1, !dbg !374
  %36337 = sext i32 %36336 to i64, !dbg !375
  %36338 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36337, !dbg !375
  %36339 = load double, ptr %6, align 8, !dbg !376
  %36340 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36341 = load double, ptr %36340, align 8, !dbg !376
  %36342 = load double, ptr %36338, align 16, !dbg !376
  %36343 = getelementptr inbounds { double, double }, ptr %36338, i32 0, i32 1, !dbg !376
  %36344 = load double, ptr %36343, align 8, !dbg !376
  %36345 = call { double, double } @make_vec(double %36339, double %36341, double %36342, double %36344), !dbg !376
  %36346 = extractvalue { double, double } %36345, 0, !dbg !376
  store double %36346, ptr %17, align 8, !dbg !376
  %36347 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36348 = extractvalue { double, double } %36345, 1, !dbg !376
  store double %36348, ptr %36347, align 8, !dbg !376
  %36349 = load double, ptr %16, align 8, !dbg !377
  %36350 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36351 = load double, ptr %36350, align 8, !dbg !377
  %36352 = load double, ptr %17, align 8, !dbg !377
  %36353 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36354 = load double, ptr %36353, align 8, !dbg !377
  %36355 = call double @cross(double %36349, double %36351, double %36352, double %36354), !dbg !377
  %36356 = load i32, ptr %10, align 4, !dbg !378
  %36357 = sext i32 %36356 to i64, !dbg !379
  %36358 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36357, !dbg !379
  %36359 = load double, ptr %6, align 8, !dbg !380
  %36360 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36361 = load double, ptr %36360, align 8, !dbg !380
  %36362 = load double, ptr %36358, align 16, !dbg !380
  %36363 = getelementptr inbounds { double, double }, ptr %36358, i32 0, i32 1, !dbg !380
  %36364 = load double, ptr %36363, align 8, !dbg !380
  %36365 = call { double, double } @make_vec(double %36359, double %36361, double %36362, double %36364), !dbg !380
  %36366 = extractvalue { double, double } %36365, 0, !dbg !380
  store double %36366, ptr %18, align 8, !dbg !380
  %36367 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36368 = extractvalue { double, double } %36365, 1, !dbg !380
  store double %36368, ptr %36367, align 8, !dbg !380
  %36369 = load i32, ptr %10, align 4, !dbg !381
  %36370 = add nsw i32 %36369, 1, !dbg !382
  %36371 = sext i32 %36370 to i64, !dbg !383
  %36372 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36371, !dbg !383
  %36373 = load double, ptr %6, align 8, !dbg !384
  %36374 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36375 = load double, ptr %36374, align 8, !dbg !384
  %36376 = load double, ptr %36372, align 16, !dbg !384
  %36377 = getelementptr inbounds { double, double }, ptr %36372, i32 0, i32 1, !dbg !384
  %36378 = load double, ptr %36377, align 8, !dbg !384
  %36379 = call { double, double } @make_vec(double %36373, double %36375, double %36376, double %36378), !dbg !384
  %36380 = extractvalue { double, double } %36379, 0, !dbg !384
  store double %36380, ptr %19, align 8, !dbg !384
  %36381 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36382 = extractvalue { double, double } %36379, 1, !dbg !384
  store double %36382, ptr %36381, align 8, !dbg !384
  %36383 = load double, ptr %18, align 8, !dbg !385
  %36384 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36385 = load double, ptr %36384, align 8, !dbg !385
  %36386 = load double, ptr %19, align 8, !dbg !385
  %36387 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36388 = load double, ptr %36387, align 8, !dbg !385
  %36389 = call double @dot(double %36383, double %36385, double %36386, double %36388), !dbg !385
  %36390 = call double @atan2(double noundef %36355, double noundef %36389) #6, !dbg !386
  store double %36390, ptr %13, align 8, !dbg !387
  %36391 = load double, ptr %13, align 8, !dbg !388
  %36392 = load double, ptr %14, align 8, !dbg !389
  %36393 = fadd double %36392, %36391, !dbg !389
  store double %36393, ptr %14, align 8, !dbg !389
  %36394 = load double, ptr %13, align 8, !dbg !390
  %36395 = fsub double %36394, 0x400921FB54442D18, !dbg !392
  %36396 = call double @llvm.fabs.f64(double %36395), !dbg !393
  %36397 = fcmp ole double %36396, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36397, label %14330, label %36398, !dbg !395

36398:                                            ; preds = %36321
  %36399 = load double, ptr %13, align 8, !dbg !396
  %36400 = fadd double %36399, 0x400921FB54442D18, !dbg !397
  %36401 = call double @llvm.fabs.f64(double %36400), !dbg !398
  %36402 = fcmp ole double %36401, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36402, label %14330, label %36403, !dbg !400

36403:                                            ; preds = %36398
  br label %36404, !dbg !403

36404:                                            ; preds = %36403
  %36405 = load i32, ptr %10, align 4, !dbg !404
  %36406 = add nsw i32 %36405, 1, !dbg !404
  store i32 %36406, ptr %10, align 4, !dbg !404
  %36407 = load i32, ptr %10, align 4, !dbg !364
  %36408 = load i32, ptr %8, align 4, !dbg !366
  %36409 = icmp slt i32 %36407, %36408, !dbg !367
  br i1 %36409, label %36410, label %48422, !dbg !368

36410:                                            ; preds = %36404
  %36411 = load i32, ptr %10, align 4, !dbg !369
  %36412 = sext i32 %36411 to i64, !dbg !371
  %36413 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36412, !dbg !371
  %36414 = load double, ptr %6, align 8, !dbg !372
  %36415 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36416 = load double, ptr %36415, align 8, !dbg !372
  %36417 = load double, ptr %36413, align 16, !dbg !372
  %36418 = getelementptr inbounds { double, double }, ptr %36413, i32 0, i32 1, !dbg !372
  %36419 = load double, ptr %36418, align 8, !dbg !372
  %36420 = call { double, double } @make_vec(double %36414, double %36416, double %36417, double %36419), !dbg !372
  %36421 = extractvalue { double, double } %36420, 0, !dbg !372
  store double %36421, ptr %16, align 8, !dbg !372
  %36422 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36423 = extractvalue { double, double } %36420, 1, !dbg !372
  store double %36423, ptr %36422, align 8, !dbg !372
  %36424 = load i32, ptr %10, align 4, !dbg !373
  %36425 = add nsw i32 %36424, 1, !dbg !374
  %36426 = sext i32 %36425 to i64, !dbg !375
  %36427 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36426, !dbg !375
  %36428 = load double, ptr %6, align 8, !dbg !376
  %36429 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36430 = load double, ptr %36429, align 8, !dbg !376
  %36431 = load double, ptr %36427, align 16, !dbg !376
  %36432 = getelementptr inbounds { double, double }, ptr %36427, i32 0, i32 1, !dbg !376
  %36433 = load double, ptr %36432, align 8, !dbg !376
  %36434 = call { double, double } @make_vec(double %36428, double %36430, double %36431, double %36433), !dbg !376
  %36435 = extractvalue { double, double } %36434, 0, !dbg !376
  store double %36435, ptr %17, align 8, !dbg !376
  %36436 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36437 = extractvalue { double, double } %36434, 1, !dbg !376
  store double %36437, ptr %36436, align 8, !dbg !376
  %36438 = load double, ptr %16, align 8, !dbg !377
  %36439 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36440 = load double, ptr %36439, align 8, !dbg !377
  %36441 = load double, ptr %17, align 8, !dbg !377
  %36442 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36443 = load double, ptr %36442, align 8, !dbg !377
  %36444 = call double @cross(double %36438, double %36440, double %36441, double %36443), !dbg !377
  %36445 = load i32, ptr %10, align 4, !dbg !378
  %36446 = sext i32 %36445 to i64, !dbg !379
  %36447 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36446, !dbg !379
  %36448 = load double, ptr %6, align 8, !dbg !380
  %36449 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36450 = load double, ptr %36449, align 8, !dbg !380
  %36451 = load double, ptr %36447, align 16, !dbg !380
  %36452 = getelementptr inbounds { double, double }, ptr %36447, i32 0, i32 1, !dbg !380
  %36453 = load double, ptr %36452, align 8, !dbg !380
  %36454 = call { double, double } @make_vec(double %36448, double %36450, double %36451, double %36453), !dbg !380
  %36455 = extractvalue { double, double } %36454, 0, !dbg !380
  store double %36455, ptr %18, align 8, !dbg !380
  %36456 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36457 = extractvalue { double, double } %36454, 1, !dbg !380
  store double %36457, ptr %36456, align 8, !dbg !380
  %36458 = load i32, ptr %10, align 4, !dbg !381
  %36459 = add nsw i32 %36458, 1, !dbg !382
  %36460 = sext i32 %36459 to i64, !dbg !383
  %36461 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36460, !dbg !383
  %36462 = load double, ptr %6, align 8, !dbg !384
  %36463 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36464 = load double, ptr %36463, align 8, !dbg !384
  %36465 = load double, ptr %36461, align 16, !dbg !384
  %36466 = getelementptr inbounds { double, double }, ptr %36461, i32 0, i32 1, !dbg !384
  %36467 = load double, ptr %36466, align 8, !dbg !384
  %36468 = call { double, double } @make_vec(double %36462, double %36464, double %36465, double %36467), !dbg !384
  %36469 = extractvalue { double, double } %36468, 0, !dbg !384
  store double %36469, ptr %19, align 8, !dbg !384
  %36470 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36471 = extractvalue { double, double } %36468, 1, !dbg !384
  store double %36471, ptr %36470, align 8, !dbg !384
  %36472 = load double, ptr %18, align 8, !dbg !385
  %36473 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36474 = load double, ptr %36473, align 8, !dbg !385
  %36475 = load double, ptr %19, align 8, !dbg !385
  %36476 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36477 = load double, ptr %36476, align 8, !dbg !385
  %36478 = call double @dot(double %36472, double %36474, double %36475, double %36477), !dbg !385
  %36479 = call double @atan2(double noundef %36444, double noundef %36478) #6, !dbg !386
  store double %36479, ptr %13, align 8, !dbg !387
  %36480 = load double, ptr %13, align 8, !dbg !388
  %36481 = load double, ptr %14, align 8, !dbg !389
  %36482 = fadd double %36481, %36480, !dbg !389
  store double %36482, ptr %14, align 8, !dbg !389
  %36483 = load double, ptr %13, align 8, !dbg !390
  %36484 = fsub double %36483, 0x400921FB54442D18, !dbg !392
  %36485 = call double @llvm.fabs.f64(double %36484), !dbg !393
  %36486 = fcmp ole double %36485, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36486, label %14330, label %36487, !dbg !395

36487:                                            ; preds = %36410
  %36488 = load double, ptr %13, align 8, !dbg !396
  %36489 = fadd double %36488, 0x400921FB54442D18, !dbg !397
  %36490 = call double @llvm.fabs.f64(double %36489), !dbg !398
  %36491 = fcmp ole double %36490, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36491, label %14330, label %36492, !dbg !400

36492:                                            ; preds = %36487
  br label %36493, !dbg !403

36493:                                            ; preds = %36492
  %36494 = load i32, ptr %10, align 4, !dbg !404
  %36495 = add nsw i32 %36494, 1, !dbg !404
  store i32 %36495, ptr %10, align 4, !dbg !404
  %36496 = load i32, ptr %10, align 4, !dbg !364
  %36497 = load i32, ptr %8, align 4, !dbg !366
  %36498 = icmp slt i32 %36496, %36497, !dbg !367
  br i1 %36498, label %36499, label %48422, !dbg !368

36499:                                            ; preds = %36493
  %36500 = load i32, ptr %10, align 4, !dbg !369
  %36501 = sext i32 %36500 to i64, !dbg !371
  %36502 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36501, !dbg !371
  %36503 = load double, ptr %6, align 8, !dbg !372
  %36504 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36505 = load double, ptr %36504, align 8, !dbg !372
  %36506 = load double, ptr %36502, align 16, !dbg !372
  %36507 = getelementptr inbounds { double, double }, ptr %36502, i32 0, i32 1, !dbg !372
  %36508 = load double, ptr %36507, align 8, !dbg !372
  %36509 = call { double, double } @make_vec(double %36503, double %36505, double %36506, double %36508), !dbg !372
  %36510 = extractvalue { double, double } %36509, 0, !dbg !372
  store double %36510, ptr %16, align 8, !dbg !372
  %36511 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36512 = extractvalue { double, double } %36509, 1, !dbg !372
  store double %36512, ptr %36511, align 8, !dbg !372
  %36513 = load i32, ptr %10, align 4, !dbg !373
  %36514 = add nsw i32 %36513, 1, !dbg !374
  %36515 = sext i32 %36514 to i64, !dbg !375
  %36516 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36515, !dbg !375
  %36517 = load double, ptr %6, align 8, !dbg !376
  %36518 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36519 = load double, ptr %36518, align 8, !dbg !376
  %36520 = load double, ptr %36516, align 16, !dbg !376
  %36521 = getelementptr inbounds { double, double }, ptr %36516, i32 0, i32 1, !dbg !376
  %36522 = load double, ptr %36521, align 8, !dbg !376
  %36523 = call { double, double } @make_vec(double %36517, double %36519, double %36520, double %36522), !dbg !376
  %36524 = extractvalue { double, double } %36523, 0, !dbg !376
  store double %36524, ptr %17, align 8, !dbg !376
  %36525 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36526 = extractvalue { double, double } %36523, 1, !dbg !376
  store double %36526, ptr %36525, align 8, !dbg !376
  %36527 = load double, ptr %16, align 8, !dbg !377
  %36528 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36529 = load double, ptr %36528, align 8, !dbg !377
  %36530 = load double, ptr %17, align 8, !dbg !377
  %36531 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36532 = load double, ptr %36531, align 8, !dbg !377
  %36533 = call double @cross(double %36527, double %36529, double %36530, double %36532), !dbg !377
  %36534 = load i32, ptr %10, align 4, !dbg !378
  %36535 = sext i32 %36534 to i64, !dbg !379
  %36536 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36535, !dbg !379
  %36537 = load double, ptr %6, align 8, !dbg !380
  %36538 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36539 = load double, ptr %36538, align 8, !dbg !380
  %36540 = load double, ptr %36536, align 16, !dbg !380
  %36541 = getelementptr inbounds { double, double }, ptr %36536, i32 0, i32 1, !dbg !380
  %36542 = load double, ptr %36541, align 8, !dbg !380
  %36543 = call { double, double } @make_vec(double %36537, double %36539, double %36540, double %36542), !dbg !380
  %36544 = extractvalue { double, double } %36543, 0, !dbg !380
  store double %36544, ptr %18, align 8, !dbg !380
  %36545 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36546 = extractvalue { double, double } %36543, 1, !dbg !380
  store double %36546, ptr %36545, align 8, !dbg !380
  %36547 = load i32, ptr %10, align 4, !dbg !381
  %36548 = add nsw i32 %36547, 1, !dbg !382
  %36549 = sext i32 %36548 to i64, !dbg !383
  %36550 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36549, !dbg !383
  %36551 = load double, ptr %6, align 8, !dbg !384
  %36552 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36553 = load double, ptr %36552, align 8, !dbg !384
  %36554 = load double, ptr %36550, align 16, !dbg !384
  %36555 = getelementptr inbounds { double, double }, ptr %36550, i32 0, i32 1, !dbg !384
  %36556 = load double, ptr %36555, align 8, !dbg !384
  %36557 = call { double, double } @make_vec(double %36551, double %36553, double %36554, double %36556), !dbg !384
  %36558 = extractvalue { double, double } %36557, 0, !dbg !384
  store double %36558, ptr %19, align 8, !dbg !384
  %36559 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36560 = extractvalue { double, double } %36557, 1, !dbg !384
  store double %36560, ptr %36559, align 8, !dbg !384
  %36561 = load double, ptr %18, align 8, !dbg !385
  %36562 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36563 = load double, ptr %36562, align 8, !dbg !385
  %36564 = load double, ptr %19, align 8, !dbg !385
  %36565 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36566 = load double, ptr %36565, align 8, !dbg !385
  %36567 = call double @dot(double %36561, double %36563, double %36564, double %36566), !dbg !385
  %36568 = call double @atan2(double noundef %36533, double noundef %36567) #6, !dbg !386
  store double %36568, ptr %13, align 8, !dbg !387
  %36569 = load double, ptr %13, align 8, !dbg !388
  %36570 = load double, ptr %14, align 8, !dbg !389
  %36571 = fadd double %36570, %36569, !dbg !389
  store double %36571, ptr %14, align 8, !dbg !389
  %36572 = load double, ptr %13, align 8, !dbg !390
  %36573 = fsub double %36572, 0x400921FB54442D18, !dbg !392
  %36574 = call double @llvm.fabs.f64(double %36573), !dbg !393
  %36575 = fcmp ole double %36574, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36575, label %14330, label %36576, !dbg !395

36576:                                            ; preds = %36499
  %36577 = load double, ptr %13, align 8, !dbg !396
  %36578 = fadd double %36577, 0x400921FB54442D18, !dbg !397
  %36579 = call double @llvm.fabs.f64(double %36578), !dbg !398
  %36580 = fcmp ole double %36579, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36580, label %14330, label %36581, !dbg !400

36581:                                            ; preds = %36576
  br label %36582, !dbg !403

36582:                                            ; preds = %36581
  %36583 = load i32, ptr %10, align 4, !dbg !404
  %36584 = add nsw i32 %36583, 1, !dbg !404
  store i32 %36584, ptr %10, align 4, !dbg !404
  %36585 = load i32, ptr %10, align 4, !dbg !364
  %36586 = load i32, ptr %8, align 4, !dbg !366
  %36587 = icmp slt i32 %36585, %36586, !dbg !367
  br i1 %36587, label %36588, label %48422, !dbg !368

36588:                                            ; preds = %36582
  %36589 = load i32, ptr %10, align 4, !dbg !369
  %36590 = sext i32 %36589 to i64, !dbg !371
  %36591 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36590, !dbg !371
  %36592 = load double, ptr %6, align 8, !dbg !372
  %36593 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36594 = load double, ptr %36593, align 8, !dbg !372
  %36595 = load double, ptr %36591, align 16, !dbg !372
  %36596 = getelementptr inbounds { double, double }, ptr %36591, i32 0, i32 1, !dbg !372
  %36597 = load double, ptr %36596, align 8, !dbg !372
  %36598 = call { double, double } @make_vec(double %36592, double %36594, double %36595, double %36597), !dbg !372
  %36599 = extractvalue { double, double } %36598, 0, !dbg !372
  store double %36599, ptr %16, align 8, !dbg !372
  %36600 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36601 = extractvalue { double, double } %36598, 1, !dbg !372
  store double %36601, ptr %36600, align 8, !dbg !372
  %36602 = load i32, ptr %10, align 4, !dbg !373
  %36603 = add nsw i32 %36602, 1, !dbg !374
  %36604 = sext i32 %36603 to i64, !dbg !375
  %36605 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36604, !dbg !375
  %36606 = load double, ptr %6, align 8, !dbg !376
  %36607 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36608 = load double, ptr %36607, align 8, !dbg !376
  %36609 = load double, ptr %36605, align 16, !dbg !376
  %36610 = getelementptr inbounds { double, double }, ptr %36605, i32 0, i32 1, !dbg !376
  %36611 = load double, ptr %36610, align 8, !dbg !376
  %36612 = call { double, double } @make_vec(double %36606, double %36608, double %36609, double %36611), !dbg !376
  %36613 = extractvalue { double, double } %36612, 0, !dbg !376
  store double %36613, ptr %17, align 8, !dbg !376
  %36614 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36615 = extractvalue { double, double } %36612, 1, !dbg !376
  store double %36615, ptr %36614, align 8, !dbg !376
  %36616 = load double, ptr %16, align 8, !dbg !377
  %36617 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36618 = load double, ptr %36617, align 8, !dbg !377
  %36619 = load double, ptr %17, align 8, !dbg !377
  %36620 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36621 = load double, ptr %36620, align 8, !dbg !377
  %36622 = call double @cross(double %36616, double %36618, double %36619, double %36621), !dbg !377
  %36623 = load i32, ptr %10, align 4, !dbg !378
  %36624 = sext i32 %36623 to i64, !dbg !379
  %36625 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36624, !dbg !379
  %36626 = load double, ptr %6, align 8, !dbg !380
  %36627 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36628 = load double, ptr %36627, align 8, !dbg !380
  %36629 = load double, ptr %36625, align 16, !dbg !380
  %36630 = getelementptr inbounds { double, double }, ptr %36625, i32 0, i32 1, !dbg !380
  %36631 = load double, ptr %36630, align 8, !dbg !380
  %36632 = call { double, double } @make_vec(double %36626, double %36628, double %36629, double %36631), !dbg !380
  %36633 = extractvalue { double, double } %36632, 0, !dbg !380
  store double %36633, ptr %18, align 8, !dbg !380
  %36634 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36635 = extractvalue { double, double } %36632, 1, !dbg !380
  store double %36635, ptr %36634, align 8, !dbg !380
  %36636 = load i32, ptr %10, align 4, !dbg !381
  %36637 = add nsw i32 %36636, 1, !dbg !382
  %36638 = sext i32 %36637 to i64, !dbg !383
  %36639 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36638, !dbg !383
  %36640 = load double, ptr %6, align 8, !dbg !384
  %36641 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36642 = load double, ptr %36641, align 8, !dbg !384
  %36643 = load double, ptr %36639, align 16, !dbg !384
  %36644 = getelementptr inbounds { double, double }, ptr %36639, i32 0, i32 1, !dbg !384
  %36645 = load double, ptr %36644, align 8, !dbg !384
  %36646 = call { double, double } @make_vec(double %36640, double %36642, double %36643, double %36645), !dbg !384
  %36647 = extractvalue { double, double } %36646, 0, !dbg !384
  store double %36647, ptr %19, align 8, !dbg !384
  %36648 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36649 = extractvalue { double, double } %36646, 1, !dbg !384
  store double %36649, ptr %36648, align 8, !dbg !384
  %36650 = load double, ptr %18, align 8, !dbg !385
  %36651 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36652 = load double, ptr %36651, align 8, !dbg !385
  %36653 = load double, ptr %19, align 8, !dbg !385
  %36654 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36655 = load double, ptr %36654, align 8, !dbg !385
  %36656 = call double @dot(double %36650, double %36652, double %36653, double %36655), !dbg !385
  %36657 = call double @atan2(double noundef %36622, double noundef %36656) #6, !dbg !386
  store double %36657, ptr %13, align 8, !dbg !387
  %36658 = load double, ptr %13, align 8, !dbg !388
  %36659 = load double, ptr %14, align 8, !dbg !389
  %36660 = fadd double %36659, %36658, !dbg !389
  store double %36660, ptr %14, align 8, !dbg !389
  %36661 = load double, ptr %13, align 8, !dbg !390
  %36662 = fsub double %36661, 0x400921FB54442D18, !dbg !392
  %36663 = call double @llvm.fabs.f64(double %36662), !dbg !393
  %36664 = fcmp ole double %36663, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36664, label %14330, label %36665, !dbg !395

36665:                                            ; preds = %36588
  %36666 = load double, ptr %13, align 8, !dbg !396
  %36667 = fadd double %36666, 0x400921FB54442D18, !dbg !397
  %36668 = call double @llvm.fabs.f64(double %36667), !dbg !398
  %36669 = fcmp ole double %36668, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36669, label %14330, label %36670, !dbg !400

36670:                                            ; preds = %36665
  br label %36671, !dbg !403

36671:                                            ; preds = %36670
  %36672 = load i32, ptr %10, align 4, !dbg !404
  %36673 = add nsw i32 %36672, 1, !dbg !404
  store i32 %36673, ptr %10, align 4, !dbg !404
  %36674 = load i32, ptr %10, align 4, !dbg !364
  %36675 = load i32, ptr %8, align 4, !dbg !366
  %36676 = icmp slt i32 %36674, %36675, !dbg !367
  br i1 %36676, label %36677, label %48422, !dbg !368

36677:                                            ; preds = %36671
  %36678 = load i32, ptr %10, align 4, !dbg !369
  %36679 = sext i32 %36678 to i64, !dbg !371
  %36680 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36679, !dbg !371
  %36681 = load double, ptr %6, align 8, !dbg !372
  %36682 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36683 = load double, ptr %36682, align 8, !dbg !372
  %36684 = load double, ptr %36680, align 16, !dbg !372
  %36685 = getelementptr inbounds { double, double }, ptr %36680, i32 0, i32 1, !dbg !372
  %36686 = load double, ptr %36685, align 8, !dbg !372
  %36687 = call { double, double } @make_vec(double %36681, double %36683, double %36684, double %36686), !dbg !372
  %36688 = extractvalue { double, double } %36687, 0, !dbg !372
  store double %36688, ptr %16, align 8, !dbg !372
  %36689 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36690 = extractvalue { double, double } %36687, 1, !dbg !372
  store double %36690, ptr %36689, align 8, !dbg !372
  %36691 = load i32, ptr %10, align 4, !dbg !373
  %36692 = add nsw i32 %36691, 1, !dbg !374
  %36693 = sext i32 %36692 to i64, !dbg !375
  %36694 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36693, !dbg !375
  %36695 = load double, ptr %6, align 8, !dbg !376
  %36696 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36697 = load double, ptr %36696, align 8, !dbg !376
  %36698 = load double, ptr %36694, align 16, !dbg !376
  %36699 = getelementptr inbounds { double, double }, ptr %36694, i32 0, i32 1, !dbg !376
  %36700 = load double, ptr %36699, align 8, !dbg !376
  %36701 = call { double, double } @make_vec(double %36695, double %36697, double %36698, double %36700), !dbg !376
  %36702 = extractvalue { double, double } %36701, 0, !dbg !376
  store double %36702, ptr %17, align 8, !dbg !376
  %36703 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36704 = extractvalue { double, double } %36701, 1, !dbg !376
  store double %36704, ptr %36703, align 8, !dbg !376
  %36705 = load double, ptr %16, align 8, !dbg !377
  %36706 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36707 = load double, ptr %36706, align 8, !dbg !377
  %36708 = load double, ptr %17, align 8, !dbg !377
  %36709 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36710 = load double, ptr %36709, align 8, !dbg !377
  %36711 = call double @cross(double %36705, double %36707, double %36708, double %36710), !dbg !377
  %36712 = load i32, ptr %10, align 4, !dbg !378
  %36713 = sext i32 %36712 to i64, !dbg !379
  %36714 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36713, !dbg !379
  %36715 = load double, ptr %6, align 8, !dbg !380
  %36716 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36717 = load double, ptr %36716, align 8, !dbg !380
  %36718 = load double, ptr %36714, align 16, !dbg !380
  %36719 = getelementptr inbounds { double, double }, ptr %36714, i32 0, i32 1, !dbg !380
  %36720 = load double, ptr %36719, align 8, !dbg !380
  %36721 = call { double, double } @make_vec(double %36715, double %36717, double %36718, double %36720), !dbg !380
  %36722 = extractvalue { double, double } %36721, 0, !dbg !380
  store double %36722, ptr %18, align 8, !dbg !380
  %36723 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36724 = extractvalue { double, double } %36721, 1, !dbg !380
  store double %36724, ptr %36723, align 8, !dbg !380
  %36725 = load i32, ptr %10, align 4, !dbg !381
  %36726 = add nsw i32 %36725, 1, !dbg !382
  %36727 = sext i32 %36726 to i64, !dbg !383
  %36728 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36727, !dbg !383
  %36729 = load double, ptr %6, align 8, !dbg !384
  %36730 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36731 = load double, ptr %36730, align 8, !dbg !384
  %36732 = load double, ptr %36728, align 16, !dbg !384
  %36733 = getelementptr inbounds { double, double }, ptr %36728, i32 0, i32 1, !dbg !384
  %36734 = load double, ptr %36733, align 8, !dbg !384
  %36735 = call { double, double } @make_vec(double %36729, double %36731, double %36732, double %36734), !dbg !384
  %36736 = extractvalue { double, double } %36735, 0, !dbg !384
  store double %36736, ptr %19, align 8, !dbg !384
  %36737 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36738 = extractvalue { double, double } %36735, 1, !dbg !384
  store double %36738, ptr %36737, align 8, !dbg !384
  %36739 = load double, ptr %18, align 8, !dbg !385
  %36740 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36741 = load double, ptr %36740, align 8, !dbg !385
  %36742 = load double, ptr %19, align 8, !dbg !385
  %36743 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36744 = load double, ptr %36743, align 8, !dbg !385
  %36745 = call double @dot(double %36739, double %36741, double %36742, double %36744), !dbg !385
  %36746 = call double @atan2(double noundef %36711, double noundef %36745) #6, !dbg !386
  store double %36746, ptr %13, align 8, !dbg !387
  %36747 = load double, ptr %13, align 8, !dbg !388
  %36748 = load double, ptr %14, align 8, !dbg !389
  %36749 = fadd double %36748, %36747, !dbg !389
  store double %36749, ptr %14, align 8, !dbg !389
  %36750 = load double, ptr %13, align 8, !dbg !390
  %36751 = fsub double %36750, 0x400921FB54442D18, !dbg !392
  %36752 = call double @llvm.fabs.f64(double %36751), !dbg !393
  %36753 = fcmp ole double %36752, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36753, label %14330, label %36754, !dbg !395

36754:                                            ; preds = %36677
  %36755 = load double, ptr %13, align 8, !dbg !396
  %36756 = fadd double %36755, 0x400921FB54442D18, !dbg !397
  %36757 = call double @llvm.fabs.f64(double %36756), !dbg !398
  %36758 = fcmp ole double %36757, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36758, label %14330, label %36759, !dbg !400

36759:                                            ; preds = %36754
  br label %36760, !dbg !403

36760:                                            ; preds = %36759
  %36761 = load i32, ptr %10, align 4, !dbg !404
  %36762 = add nsw i32 %36761, 1, !dbg !404
  store i32 %36762, ptr %10, align 4, !dbg !404
  %36763 = load i32, ptr %10, align 4, !dbg !364
  %36764 = load i32, ptr %8, align 4, !dbg !366
  %36765 = icmp slt i32 %36763, %36764, !dbg !367
  br i1 %36765, label %36766, label %48422, !dbg !368

36766:                                            ; preds = %36760
  %36767 = load i32, ptr %10, align 4, !dbg !369
  %36768 = sext i32 %36767 to i64, !dbg !371
  %36769 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36768, !dbg !371
  %36770 = load double, ptr %6, align 8, !dbg !372
  %36771 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36772 = load double, ptr %36771, align 8, !dbg !372
  %36773 = load double, ptr %36769, align 16, !dbg !372
  %36774 = getelementptr inbounds { double, double }, ptr %36769, i32 0, i32 1, !dbg !372
  %36775 = load double, ptr %36774, align 8, !dbg !372
  %36776 = call { double, double } @make_vec(double %36770, double %36772, double %36773, double %36775), !dbg !372
  %36777 = extractvalue { double, double } %36776, 0, !dbg !372
  store double %36777, ptr %16, align 8, !dbg !372
  %36778 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36779 = extractvalue { double, double } %36776, 1, !dbg !372
  store double %36779, ptr %36778, align 8, !dbg !372
  %36780 = load i32, ptr %10, align 4, !dbg !373
  %36781 = add nsw i32 %36780, 1, !dbg !374
  %36782 = sext i32 %36781 to i64, !dbg !375
  %36783 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36782, !dbg !375
  %36784 = load double, ptr %6, align 8, !dbg !376
  %36785 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36786 = load double, ptr %36785, align 8, !dbg !376
  %36787 = load double, ptr %36783, align 16, !dbg !376
  %36788 = getelementptr inbounds { double, double }, ptr %36783, i32 0, i32 1, !dbg !376
  %36789 = load double, ptr %36788, align 8, !dbg !376
  %36790 = call { double, double } @make_vec(double %36784, double %36786, double %36787, double %36789), !dbg !376
  %36791 = extractvalue { double, double } %36790, 0, !dbg !376
  store double %36791, ptr %17, align 8, !dbg !376
  %36792 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36793 = extractvalue { double, double } %36790, 1, !dbg !376
  store double %36793, ptr %36792, align 8, !dbg !376
  %36794 = load double, ptr %16, align 8, !dbg !377
  %36795 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36796 = load double, ptr %36795, align 8, !dbg !377
  %36797 = load double, ptr %17, align 8, !dbg !377
  %36798 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36799 = load double, ptr %36798, align 8, !dbg !377
  %36800 = call double @cross(double %36794, double %36796, double %36797, double %36799), !dbg !377
  %36801 = load i32, ptr %10, align 4, !dbg !378
  %36802 = sext i32 %36801 to i64, !dbg !379
  %36803 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36802, !dbg !379
  %36804 = load double, ptr %6, align 8, !dbg !380
  %36805 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36806 = load double, ptr %36805, align 8, !dbg !380
  %36807 = load double, ptr %36803, align 16, !dbg !380
  %36808 = getelementptr inbounds { double, double }, ptr %36803, i32 0, i32 1, !dbg !380
  %36809 = load double, ptr %36808, align 8, !dbg !380
  %36810 = call { double, double } @make_vec(double %36804, double %36806, double %36807, double %36809), !dbg !380
  %36811 = extractvalue { double, double } %36810, 0, !dbg !380
  store double %36811, ptr %18, align 8, !dbg !380
  %36812 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36813 = extractvalue { double, double } %36810, 1, !dbg !380
  store double %36813, ptr %36812, align 8, !dbg !380
  %36814 = load i32, ptr %10, align 4, !dbg !381
  %36815 = add nsw i32 %36814, 1, !dbg !382
  %36816 = sext i32 %36815 to i64, !dbg !383
  %36817 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36816, !dbg !383
  %36818 = load double, ptr %6, align 8, !dbg !384
  %36819 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36820 = load double, ptr %36819, align 8, !dbg !384
  %36821 = load double, ptr %36817, align 16, !dbg !384
  %36822 = getelementptr inbounds { double, double }, ptr %36817, i32 0, i32 1, !dbg !384
  %36823 = load double, ptr %36822, align 8, !dbg !384
  %36824 = call { double, double } @make_vec(double %36818, double %36820, double %36821, double %36823), !dbg !384
  %36825 = extractvalue { double, double } %36824, 0, !dbg !384
  store double %36825, ptr %19, align 8, !dbg !384
  %36826 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36827 = extractvalue { double, double } %36824, 1, !dbg !384
  store double %36827, ptr %36826, align 8, !dbg !384
  %36828 = load double, ptr %18, align 8, !dbg !385
  %36829 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36830 = load double, ptr %36829, align 8, !dbg !385
  %36831 = load double, ptr %19, align 8, !dbg !385
  %36832 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36833 = load double, ptr %36832, align 8, !dbg !385
  %36834 = call double @dot(double %36828, double %36830, double %36831, double %36833), !dbg !385
  %36835 = call double @atan2(double noundef %36800, double noundef %36834) #6, !dbg !386
  store double %36835, ptr %13, align 8, !dbg !387
  %36836 = load double, ptr %13, align 8, !dbg !388
  %36837 = load double, ptr %14, align 8, !dbg !389
  %36838 = fadd double %36837, %36836, !dbg !389
  store double %36838, ptr %14, align 8, !dbg !389
  %36839 = load double, ptr %13, align 8, !dbg !390
  %36840 = fsub double %36839, 0x400921FB54442D18, !dbg !392
  %36841 = call double @llvm.fabs.f64(double %36840), !dbg !393
  %36842 = fcmp ole double %36841, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36842, label %14330, label %36843, !dbg !395

36843:                                            ; preds = %36766
  %36844 = load double, ptr %13, align 8, !dbg !396
  %36845 = fadd double %36844, 0x400921FB54442D18, !dbg !397
  %36846 = call double @llvm.fabs.f64(double %36845), !dbg !398
  %36847 = fcmp ole double %36846, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36847, label %14330, label %36848, !dbg !400

36848:                                            ; preds = %36843
  br label %36849, !dbg !403

36849:                                            ; preds = %36848
  %36850 = load i32, ptr %10, align 4, !dbg !404
  %36851 = add nsw i32 %36850, 1, !dbg !404
  store i32 %36851, ptr %10, align 4, !dbg !404
  %36852 = load i32, ptr %10, align 4, !dbg !364
  %36853 = load i32, ptr %8, align 4, !dbg !366
  %36854 = icmp slt i32 %36852, %36853, !dbg !367
  br i1 %36854, label %36855, label %48422, !dbg !368

36855:                                            ; preds = %36849
  %36856 = load i32, ptr %10, align 4, !dbg !369
  %36857 = sext i32 %36856 to i64, !dbg !371
  %36858 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36857, !dbg !371
  %36859 = load double, ptr %6, align 8, !dbg !372
  %36860 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36861 = load double, ptr %36860, align 8, !dbg !372
  %36862 = load double, ptr %36858, align 16, !dbg !372
  %36863 = getelementptr inbounds { double, double }, ptr %36858, i32 0, i32 1, !dbg !372
  %36864 = load double, ptr %36863, align 8, !dbg !372
  %36865 = call { double, double } @make_vec(double %36859, double %36861, double %36862, double %36864), !dbg !372
  %36866 = extractvalue { double, double } %36865, 0, !dbg !372
  store double %36866, ptr %16, align 8, !dbg !372
  %36867 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36868 = extractvalue { double, double } %36865, 1, !dbg !372
  store double %36868, ptr %36867, align 8, !dbg !372
  %36869 = load i32, ptr %10, align 4, !dbg !373
  %36870 = add nsw i32 %36869, 1, !dbg !374
  %36871 = sext i32 %36870 to i64, !dbg !375
  %36872 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36871, !dbg !375
  %36873 = load double, ptr %6, align 8, !dbg !376
  %36874 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36875 = load double, ptr %36874, align 8, !dbg !376
  %36876 = load double, ptr %36872, align 16, !dbg !376
  %36877 = getelementptr inbounds { double, double }, ptr %36872, i32 0, i32 1, !dbg !376
  %36878 = load double, ptr %36877, align 8, !dbg !376
  %36879 = call { double, double } @make_vec(double %36873, double %36875, double %36876, double %36878), !dbg !376
  %36880 = extractvalue { double, double } %36879, 0, !dbg !376
  store double %36880, ptr %17, align 8, !dbg !376
  %36881 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36882 = extractvalue { double, double } %36879, 1, !dbg !376
  store double %36882, ptr %36881, align 8, !dbg !376
  %36883 = load double, ptr %16, align 8, !dbg !377
  %36884 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36885 = load double, ptr %36884, align 8, !dbg !377
  %36886 = load double, ptr %17, align 8, !dbg !377
  %36887 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36888 = load double, ptr %36887, align 8, !dbg !377
  %36889 = call double @cross(double %36883, double %36885, double %36886, double %36888), !dbg !377
  %36890 = load i32, ptr %10, align 4, !dbg !378
  %36891 = sext i32 %36890 to i64, !dbg !379
  %36892 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36891, !dbg !379
  %36893 = load double, ptr %6, align 8, !dbg !380
  %36894 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36895 = load double, ptr %36894, align 8, !dbg !380
  %36896 = load double, ptr %36892, align 16, !dbg !380
  %36897 = getelementptr inbounds { double, double }, ptr %36892, i32 0, i32 1, !dbg !380
  %36898 = load double, ptr %36897, align 8, !dbg !380
  %36899 = call { double, double } @make_vec(double %36893, double %36895, double %36896, double %36898), !dbg !380
  %36900 = extractvalue { double, double } %36899, 0, !dbg !380
  store double %36900, ptr %18, align 8, !dbg !380
  %36901 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36902 = extractvalue { double, double } %36899, 1, !dbg !380
  store double %36902, ptr %36901, align 8, !dbg !380
  %36903 = load i32, ptr %10, align 4, !dbg !381
  %36904 = add nsw i32 %36903, 1, !dbg !382
  %36905 = sext i32 %36904 to i64, !dbg !383
  %36906 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36905, !dbg !383
  %36907 = load double, ptr %6, align 8, !dbg !384
  %36908 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36909 = load double, ptr %36908, align 8, !dbg !384
  %36910 = load double, ptr %36906, align 16, !dbg !384
  %36911 = getelementptr inbounds { double, double }, ptr %36906, i32 0, i32 1, !dbg !384
  %36912 = load double, ptr %36911, align 8, !dbg !384
  %36913 = call { double, double } @make_vec(double %36907, double %36909, double %36910, double %36912), !dbg !384
  %36914 = extractvalue { double, double } %36913, 0, !dbg !384
  store double %36914, ptr %19, align 8, !dbg !384
  %36915 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %36916 = extractvalue { double, double } %36913, 1, !dbg !384
  store double %36916, ptr %36915, align 8, !dbg !384
  %36917 = load double, ptr %18, align 8, !dbg !385
  %36918 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %36919 = load double, ptr %36918, align 8, !dbg !385
  %36920 = load double, ptr %19, align 8, !dbg !385
  %36921 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %36922 = load double, ptr %36921, align 8, !dbg !385
  %36923 = call double @dot(double %36917, double %36919, double %36920, double %36922), !dbg !385
  %36924 = call double @atan2(double noundef %36889, double noundef %36923) #6, !dbg !386
  store double %36924, ptr %13, align 8, !dbg !387
  %36925 = load double, ptr %13, align 8, !dbg !388
  %36926 = load double, ptr %14, align 8, !dbg !389
  %36927 = fadd double %36926, %36925, !dbg !389
  store double %36927, ptr %14, align 8, !dbg !389
  %36928 = load double, ptr %13, align 8, !dbg !390
  %36929 = fsub double %36928, 0x400921FB54442D18, !dbg !392
  %36930 = call double @llvm.fabs.f64(double %36929), !dbg !393
  %36931 = fcmp ole double %36930, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %36931, label %14330, label %36932, !dbg !395

36932:                                            ; preds = %36855
  %36933 = load double, ptr %13, align 8, !dbg !396
  %36934 = fadd double %36933, 0x400921FB54442D18, !dbg !397
  %36935 = call double @llvm.fabs.f64(double %36934), !dbg !398
  %36936 = fcmp ole double %36935, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %36936, label %14330, label %36937, !dbg !400

36937:                                            ; preds = %36932
  br label %36938, !dbg !403

36938:                                            ; preds = %36937
  %36939 = load i32, ptr %10, align 4, !dbg !404
  %36940 = add nsw i32 %36939, 1, !dbg !404
  store i32 %36940, ptr %10, align 4, !dbg !404
  %36941 = load i32, ptr %10, align 4, !dbg !364
  %36942 = load i32, ptr %8, align 4, !dbg !366
  %36943 = icmp slt i32 %36941, %36942, !dbg !367
  br i1 %36943, label %36944, label %48422, !dbg !368

36944:                                            ; preds = %36938
  %36945 = load i32, ptr %10, align 4, !dbg !369
  %36946 = sext i32 %36945 to i64, !dbg !371
  %36947 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36946, !dbg !371
  %36948 = load double, ptr %6, align 8, !dbg !372
  %36949 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %36950 = load double, ptr %36949, align 8, !dbg !372
  %36951 = load double, ptr %36947, align 16, !dbg !372
  %36952 = getelementptr inbounds { double, double }, ptr %36947, i32 0, i32 1, !dbg !372
  %36953 = load double, ptr %36952, align 8, !dbg !372
  %36954 = call { double, double } @make_vec(double %36948, double %36950, double %36951, double %36953), !dbg !372
  %36955 = extractvalue { double, double } %36954, 0, !dbg !372
  store double %36955, ptr %16, align 8, !dbg !372
  %36956 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %36957 = extractvalue { double, double } %36954, 1, !dbg !372
  store double %36957, ptr %36956, align 8, !dbg !372
  %36958 = load i32, ptr %10, align 4, !dbg !373
  %36959 = add nsw i32 %36958, 1, !dbg !374
  %36960 = sext i32 %36959 to i64, !dbg !375
  %36961 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36960, !dbg !375
  %36962 = load double, ptr %6, align 8, !dbg !376
  %36963 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %36964 = load double, ptr %36963, align 8, !dbg !376
  %36965 = load double, ptr %36961, align 16, !dbg !376
  %36966 = getelementptr inbounds { double, double }, ptr %36961, i32 0, i32 1, !dbg !376
  %36967 = load double, ptr %36966, align 8, !dbg !376
  %36968 = call { double, double } @make_vec(double %36962, double %36964, double %36965, double %36967), !dbg !376
  %36969 = extractvalue { double, double } %36968, 0, !dbg !376
  store double %36969, ptr %17, align 8, !dbg !376
  %36970 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %36971 = extractvalue { double, double } %36968, 1, !dbg !376
  store double %36971, ptr %36970, align 8, !dbg !376
  %36972 = load double, ptr %16, align 8, !dbg !377
  %36973 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %36974 = load double, ptr %36973, align 8, !dbg !377
  %36975 = load double, ptr %17, align 8, !dbg !377
  %36976 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %36977 = load double, ptr %36976, align 8, !dbg !377
  %36978 = call double @cross(double %36972, double %36974, double %36975, double %36977), !dbg !377
  %36979 = load i32, ptr %10, align 4, !dbg !378
  %36980 = sext i32 %36979 to i64, !dbg !379
  %36981 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36980, !dbg !379
  %36982 = load double, ptr %6, align 8, !dbg !380
  %36983 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %36984 = load double, ptr %36983, align 8, !dbg !380
  %36985 = load double, ptr %36981, align 16, !dbg !380
  %36986 = getelementptr inbounds { double, double }, ptr %36981, i32 0, i32 1, !dbg !380
  %36987 = load double, ptr %36986, align 8, !dbg !380
  %36988 = call { double, double } @make_vec(double %36982, double %36984, double %36985, double %36987), !dbg !380
  %36989 = extractvalue { double, double } %36988, 0, !dbg !380
  store double %36989, ptr %18, align 8, !dbg !380
  %36990 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %36991 = extractvalue { double, double } %36988, 1, !dbg !380
  store double %36991, ptr %36990, align 8, !dbg !380
  %36992 = load i32, ptr %10, align 4, !dbg !381
  %36993 = add nsw i32 %36992, 1, !dbg !382
  %36994 = sext i32 %36993 to i64, !dbg !383
  %36995 = getelementptr inbounds %struct.POINT, ptr %26, i64 %36994, !dbg !383
  %36996 = load double, ptr %6, align 8, !dbg !384
  %36997 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %36998 = load double, ptr %36997, align 8, !dbg !384
  %36999 = load double, ptr %36995, align 16, !dbg !384
  %37000 = getelementptr inbounds { double, double }, ptr %36995, i32 0, i32 1, !dbg !384
  %37001 = load double, ptr %37000, align 8, !dbg !384
  %37002 = call { double, double } @make_vec(double %36996, double %36998, double %36999, double %37001), !dbg !384
  %37003 = extractvalue { double, double } %37002, 0, !dbg !384
  store double %37003, ptr %19, align 8, !dbg !384
  %37004 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37005 = extractvalue { double, double } %37002, 1, !dbg !384
  store double %37005, ptr %37004, align 8, !dbg !384
  %37006 = load double, ptr %18, align 8, !dbg !385
  %37007 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37008 = load double, ptr %37007, align 8, !dbg !385
  %37009 = load double, ptr %19, align 8, !dbg !385
  %37010 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37011 = load double, ptr %37010, align 8, !dbg !385
  %37012 = call double @dot(double %37006, double %37008, double %37009, double %37011), !dbg !385
  %37013 = call double @atan2(double noundef %36978, double noundef %37012) #6, !dbg !386
  store double %37013, ptr %13, align 8, !dbg !387
  %37014 = load double, ptr %13, align 8, !dbg !388
  %37015 = load double, ptr %14, align 8, !dbg !389
  %37016 = fadd double %37015, %37014, !dbg !389
  store double %37016, ptr %14, align 8, !dbg !389
  %37017 = load double, ptr %13, align 8, !dbg !390
  %37018 = fsub double %37017, 0x400921FB54442D18, !dbg !392
  %37019 = call double @llvm.fabs.f64(double %37018), !dbg !393
  %37020 = fcmp ole double %37019, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37020, label %14330, label %37021, !dbg !395

37021:                                            ; preds = %36944
  %37022 = load double, ptr %13, align 8, !dbg !396
  %37023 = fadd double %37022, 0x400921FB54442D18, !dbg !397
  %37024 = call double @llvm.fabs.f64(double %37023), !dbg !398
  %37025 = fcmp ole double %37024, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37025, label %14330, label %37026, !dbg !400

37026:                                            ; preds = %37021
  br label %37027, !dbg !403

37027:                                            ; preds = %37026
  %37028 = load i32, ptr %10, align 4, !dbg !404
  %37029 = add nsw i32 %37028, 1, !dbg !404
  store i32 %37029, ptr %10, align 4, !dbg !404
  %37030 = load i32, ptr %10, align 4, !dbg !364
  %37031 = load i32, ptr %8, align 4, !dbg !366
  %37032 = icmp slt i32 %37030, %37031, !dbg !367
  br i1 %37032, label %37033, label %48422, !dbg !368

37033:                                            ; preds = %37027
  %37034 = load i32, ptr %10, align 4, !dbg !369
  %37035 = sext i32 %37034 to i64, !dbg !371
  %37036 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37035, !dbg !371
  %37037 = load double, ptr %6, align 8, !dbg !372
  %37038 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37039 = load double, ptr %37038, align 8, !dbg !372
  %37040 = load double, ptr %37036, align 16, !dbg !372
  %37041 = getelementptr inbounds { double, double }, ptr %37036, i32 0, i32 1, !dbg !372
  %37042 = load double, ptr %37041, align 8, !dbg !372
  %37043 = call { double, double } @make_vec(double %37037, double %37039, double %37040, double %37042), !dbg !372
  %37044 = extractvalue { double, double } %37043, 0, !dbg !372
  store double %37044, ptr %16, align 8, !dbg !372
  %37045 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37046 = extractvalue { double, double } %37043, 1, !dbg !372
  store double %37046, ptr %37045, align 8, !dbg !372
  %37047 = load i32, ptr %10, align 4, !dbg !373
  %37048 = add nsw i32 %37047, 1, !dbg !374
  %37049 = sext i32 %37048 to i64, !dbg !375
  %37050 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37049, !dbg !375
  %37051 = load double, ptr %6, align 8, !dbg !376
  %37052 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37053 = load double, ptr %37052, align 8, !dbg !376
  %37054 = load double, ptr %37050, align 16, !dbg !376
  %37055 = getelementptr inbounds { double, double }, ptr %37050, i32 0, i32 1, !dbg !376
  %37056 = load double, ptr %37055, align 8, !dbg !376
  %37057 = call { double, double } @make_vec(double %37051, double %37053, double %37054, double %37056), !dbg !376
  %37058 = extractvalue { double, double } %37057, 0, !dbg !376
  store double %37058, ptr %17, align 8, !dbg !376
  %37059 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37060 = extractvalue { double, double } %37057, 1, !dbg !376
  store double %37060, ptr %37059, align 8, !dbg !376
  %37061 = load double, ptr %16, align 8, !dbg !377
  %37062 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37063 = load double, ptr %37062, align 8, !dbg !377
  %37064 = load double, ptr %17, align 8, !dbg !377
  %37065 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37066 = load double, ptr %37065, align 8, !dbg !377
  %37067 = call double @cross(double %37061, double %37063, double %37064, double %37066), !dbg !377
  %37068 = load i32, ptr %10, align 4, !dbg !378
  %37069 = sext i32 %37068 to i64, !dbg !379
  %37070 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37069, !dbg !379
  %37071 = load double, ptr %6, align 8, !dbg !380
  %37072 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37073 = load double, ptr %37072, align 8, !dbg !380
  %37074 = load double, ptr %37070, align 16, !dbg !380
  %37075 = getelementptr inbounds { double, double }, ptr %37070, i32 0, i32 1, !dbg !380
  %37076 = load double, ptr %37075, align 8, !dbg !380
  %37077 = call { double, double } @make_vec(double %37071, double %37073, double %37074, double %37076), !dbg !380
  %37078 = extractvalue { double, double } %37077, 0, !dbg !380
  store double %37078, ptr %18, align 8, !dbg !380
  %37079 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37080 = extractvalue { double, double } %37077, 1, !dbg !380
  store double %37080, ptr %37079, align 8, !dbg !380
  %37081 = load i32, ptr %10, align 4, !dbg !381
  %37082 = add nsw i32 %37081, 1, !dbg !382
  %37083 = sext i32 %37082 to i64, !dbg !383
  %37084 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37083, !dbg !383
  %37085 = load double, ptr %6, align 8, !dbg !384
  %37086 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37087 = load double, ptr %37086, align 8, !dbg !384
  %37088 = load double, ptr %37084, align 16, !dbg !384
  %37089 = getelementptr inbounds { double, double }, ptr %37084, i32 0, i32 1, !dbg !384
  %37090 = load double, ptr %37089, align 8, !dbg !384
  %37091 = call { double, double } @make_vec(double %37085, double %37087, double %37088, double %37090), !dbg !384
  %37092 = extractvalue { double, double } %37091, 0, !dbg !384
  store double %37092, ptr %19, align 8, !dbg !384
  %37093 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37094 = extractvalue { double, double } %37091, 1, !dbg !384
  store double %37094, ptr %37093, align 8, !dbg !384
  %37095 = load double, ptr %18, align 8, !dbg !385
  %37096 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37097 = load double, ptr %37096, align 8, !dbg !385
  %37098 = load double, ptr %19, align 8, !dbg !385
  %37099 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37100 = load double, ptr %37099, align 8, !dbg !385
  %37101 = call double @dot(double %37095, double %37097, double %37098, double %37100), !dbg !385
  %37102 = call double @atan2(double noundef %37067, double noundef %37101) #6, !dbg !386
  store double %37102, ptr %13, align 8, !dbg !387
  %37103 = load double, ptr %13, align 8, !dbg !388
  %37104 = load double, ptr %14, align 8, !dbg !389
  %37105 = fadd double %37104, %37103, !dbg !389
  store double %37105, ptr %14, align 8, !dbg !389
  %37106 = load double, ptr %13, align 8, !dbg !390
  %37107 = fsub double %37106, 0x400921FB54442D18, !dbg !392
  %37108 = call double @llvm.fabs.f64(double %37107), !dbg !393
  %37109 = fcmp ole double %37108, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37109, label %14330, label %37110, !dbg !395

37110:                                            ; preds = %37033
  %37111 = load double, ptr %13, align 8, !dbg !396
  %37112 = fadd double %37111, 0x400921FB54442D18, !dbg !397
  %37113 = call double @llvm.fabs.f64(double %37112), !dbg !398
  %37114 = fcmp ole double %37113, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37114, label %14330, label %37115, !dbg !400

37115:                                            ; preds = %37110
  br label %37116, !dbg !403

37116:                                            ; preds = %37115
  %37117 = load i32, ptr %10, align 4, !dbg !404
  %37118 = add nsw i32 %37117, 1, !dbg !404
  store i32 %37118, ptr %10, align 4, !dbg !404
  %37119 = load i32, ptr %10, align 4, !dbg !364
  %37120 = load i32, ptr %8, align 4, !dbg !366
  %37121 = icmp slt i32 %37119, %37120, !dbg !367
  br i1 %37121, label %37122, label %48422, !dbg !368

37122:                                            ; preds = %37116
  %37123 = load i32, ptr %10, align 4, !dbg !369
  %37124 = sext i32 %37123 to i64, !dbg !371
  %37125 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37124, !dbg !371
  %37126 = load double, ptr %6, align 8, !dbg !372
  %37127 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37128 = load double, ptr %37127, align 8, !dbg !372
  %37129 = load double, ptr %37125, align 16, !dbg !372
  %37130 = getelementptr inbounds { double, double }, ptr %37125, i32 0, i32 1, !dbg !372
  %37131 = load double, ptr %37130, align 8, !dbg !372
  %37132 = call { double, double } @make_vec(double %37126, double %37128, double %37129, double %37131), !dbg !372
  %37133 = extractvalue { double, double } %37132, 0, !dbg !372
  store double %37133, ptr %16, align 8, !dbg !372
  %37134 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37135 = extractvalue { double, double } %37132, 1, !dbg !372
  store double %37135, ptr %37134, align 8, !dbg !372
  %37136 = load i32, ptr %10, align 4, !dbg !373
  %37137 = add nsw i32 %37136, 1, !dbg !374
  %37138 = sext i32 %37137 to i64, !dbg !375
  %37139 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37138, !dbg !375
  %37140 = load double, ptr %6, align 8, !dbg !376
  %37141 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37142 = load double, ptr %37141, align 8, !dbg !376
  %37143 = load double, ptr %37139, align 16, !dbg !376
  %37144 = getelementptr inbounds { double, double }, ptr %37139, i32 0, i32 1, !dbg !376
  %37145 = load double, ptr %37144, align 8, !dbg !376
  %37146 = call { double, double } @make_vec(double %37140, double %37142, double %37143, double %37145), !dbg !376
  %37147 = extractvalue { double, double } %37146, 0, !dbg !376
  store double %37147, ptr %17, align 8, !dbg !376
  %37148 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37149 = extractvalue { double, double } %37146, 1, !dbg !376
  store double %37149, ptr %37148, align 8, !dbg !376
  %37150 = load double, ptr %16, align 8, !dbg !377
  %37151 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37152 = load double, ptr %37151, align 8, !dbg !377
  %37153 = load double, ptr %17, align 8, !dbg !377
  %37154 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37155 = load double, ptr %37154, align 8, !dbg !377
  %37156 = call double @cross(double %37150, double %37152, double %37153, double %37155), !dbg !377
  %37157 = load i32, ptr %10, align 4, !dbg !378
  %37158 = sext i32 %37157 to i64, !dbg !379
  %37159 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37158, !dbg !379
  %37160 = load double, ptr %6, align 8, !dbg !380
  %37161 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37162 = load double, ptr %37161, align 8, !dbg !380
  %37163 = load double, ptr %37159, align 16, !dbg !380
  %37164 = getelementptr inbounds { double, double }, ptr %37159, i32 0, i32 1, !dbg !380
  %37165 = load double, ptr %37164, align 8, !dbg !380
  %37166 = call { double, double } @make_vec(double %37160, double %37162, double %37163, double %37165), !dbg !380
  %37167 = extractvalue { double, double } %37166, 0, !dbg !380
  store double %37167, ptr %18, align 8, !dbg !380
  %37168 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37169 = extractvalue { double, double } %37166, 1, !dbg !380
  store double %37169, ptr %37168, align 8, !dbg !380
  %37170 = load i32, ptr %10, align 4, !dbg !381
  %37171 = add nsw i32 %37170, 1, !dbg !382
  %37172 = sext i32 %37171 to i64, !dbg !383
  %37173 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37172, !dbg !383
  %37174 = load double, ptr %6, align 8, !dbg !384
  %37175 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37176 = load double, ptr %37175, align 8, !dbg !384
  %37177 = load double, ptr %37173, align 16, !dbg !384
  %37178 = getelementptr inbounds { double, double }, ptr %37173, i32 0, i32 1, !dbg !384
  %37179 = load double, ptr %37178, align 8, !dbg !384
  %37180 = call { double, double } @make_vec(double %37174, double %37176, double %37177, double %37179), !dbg !384
  %37181 = extractvalue { double, double } %37180, 0, !dbg !384
  store double %37181, ptr %19, align 8, !dbg !384
  %37182 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37183 = extractvalue { double, double } %37180, 1, !dbg !384
  store double %37183, ptr %37182, align 8, !dbg !384
  %37184 = load double, ptr %18, align 8, !dbg !385
  %37185 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37186 = load double, ptr %37185, align 8, !dbg !385
  %37187 = load double, ptr %19, align 8, !dbg !385
  %37188 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37189 = load double, ptr %37188, align 8, !dbg !385
  %37190 = call double @dot(double %37184, double %37186, double %37187, double %37189), !dbg !385
  %37191 = call double @atan2(double noundef %37156, double noundef %37190) #6, !dbg !386
  store double %37191, ptr %13, align 8, !dbg !387
  %37192 = load double, ptr %13, align 8, !dbg !388
  %37193 = load double, ptr %14, align 8, !dbg !389
  %37194 = fadd double %37193, %37192, !dbg !389
  store double %37194, ptr %14, align 8, !dbg !389
  %37195 = load double, ptr %13, align 8, !dbg !390
  %37196 = fsub double %37195, 0x400921FB54442D18, !dbg !392
  %37197 = call double @llvm.fabs.f64(double %37196), !dbg !393
  %37198 = fcmp ole double %37197, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37198, label %14330, label %37199, !dbg !395

37199:                                            ; preds = %37122
  %37200 = load double, ptr %13, align 8, !dbg !396
  %37201 = fadd double %37200, 0x400921FB54442D18, !dbg !397
  %37202 = call double @llvm.fabs.f64(double %37201), !dbg !398
  %37203 = fcmp ole double %37202, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37203, label %14330, label %37204, !dbg !400

37204:                                            ; preds = %37199
  br label %37205, !dbg !403

37205:                                            ; preds = %37204
  %37206 = load i32, ptr %10, align 4, !dbg !404
  %37207 = add nsw i32 %37206, 1, !dbg !404
  store i32 %37207, ptr %10, align 4, !dbg !404
  %37208 = load i32, ptr %10, align 4, !dbg !364
  %37209 = load i32, ptr %8, align 4, !dbg !366
  %37210 = icmp slt i32 %37208, %37209, !dbg !367
  br i1 %37210, label %37211, label %48422, !dbg !368

37211:                                            ; preds = %37205
  %37212 = load i32, ptr %10, align 4, !dbg !369
  %37213 = sext i32 %37212 to i64, !dbg !371
  %37214 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37213, !dbg !371
  %37215 = load double, ptr %6, align 8, !dbg !372
  %37216 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37217 = load double, ptr %37216, align 8, !dbg !372
  %37218 = load double, ptr %37214, align 16, !dbg !372
  %37219 = getelementptr inbounds { double, double }, ptr %37214, i32 0, i32 1, !dbg !372
  %37220 = load double, ptr %37219, align 8, !dbg !372
  %37221 = call { double, double } @make_vec(double %37215, double %37217, double %37218, double %37220), !dbg !372
  %37222 = extractvalue { double, double } %37221, 0, !dbg !372
  store double %37222, ptr %16, align 8, !dbg !372
  %37223 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37224 = extractvalue { double, double } %37221, 1, !dbg !372
  store double %37224, ptr %37223, align 8, !dbg !372
  %37225 = load i32, ptr %10, align 4, !dbg !373
  %37226 = add nsw i32 %37225, 1, !dbg !374
  %37227 = sext i32 %37226 to i64, !dbg !375
  %37228 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37227, !dbg !375
  %37229 = load double, ptr %6, align 8, !dbg !376
  %37230 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37231 = load double, ptr %37230, align 8, !dbg !376
  %37232 = load double, ptr %37228, align 16, !dbg !376
  %37233 = getelementptr inbounds { double, double }, ptr %37228, i32 0, i32 1, !dbg !376
  %37234 = load double, ptr %37233, align 8, !dbg !376
  %37235 = call { double, double } @make_vec(double %37229, double %37231, double %37232, double %37234), !dbg !376
  %37236 = extractvalue { double, double } %37235, 0, !dbg !376
  store double %37236, ptr %17, align 8, !dbg !376
  %37237 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37238 = extractvalue { double, double } %37235, 1, !dbg !376
  store double %37238, ptr %37237, align 8, !dbg !376
  %37239 = load double, ptr %16, align 8, !dbg !377
  %37240 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37241 = load double, ptr %37240, align 8, !dbg !377
  %37242 = load double, ptr %17, align 8, !dbg !377
  %37243 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37244 = load double, ptr %37243, align 8, !dbg !377
  %37245 = call double @cross(double %37239, double %37241, double %37242, double %37244), !dbg !377
  %37246 = load i32, ptr %10, align 4, !dbg !378
  %37247 = sext i32 %37246 to i64, !dbg !379
  %37248 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37247, !dbg !379
  %37249 = load double, ptr %6, align 8, !dbg !380
  %37250 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37251 = load double, ptr %37250, align 8, !dbg !380
  %37252 = load double, ptr %37248, align 16, !dbg !380
  %37253 = getelementptr inbounds { double, double }, ptr %37248, i32 0, i32 1, !dbg !380
  %37254 = load double, ptr %37253, align 8, !dbg !380
  %37255 = call { double, double } @make_vec(double %37249, double %37251, double %37252, double %37254), !dbg !380
  %37256 = extractvalue { double, double } %37255, 0, !dbg !380
  store double %37256, ptr %18, align 8, !dbg !380
  %37257 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37258 = extractvalue { double, double } %37255, 1, !dbg !380
  store double %37258, ptr %37257, align 8, !dbg !380
  %37259 = load i32, ptr %10, align 4, !dbg !381
  %37260 = add nsw i32 %37259, 1, !dbg !382
  %37261 = sext i32 %37260 to i64, !dbg !383
  %37262 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37261, !dbg !383
  %37263 = load double, ptr %6, align 8, !dbg !384
  %37264 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37265 = load double, ptr %37264, align 8, !dbg !384
  %37266 = load double, ptr %37262, align 16, !dbg !384
  %37267 = getelementptr inbounds { double, double }, ptr %37262, i32 0, i32 1, !dbg !384
  %37268 = load double, ptr %37267, align 8, !dbg !384
  %37269 = call { double, double } @make_vec(double %37263, double %37265, double %37266, double %37268), !dbg !384
  %37270 = extractvalue { double, double } %37269, 0, !dbg !384
  store double %37270, ptr %19, align 8, !dbg !384
  %37271 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37272 = extractvalue { double, double } %37269, 1, !dbg !384
  store double %37272, ptr %37271, align 8, !dbg !384
  %37273 = load double, ptr %18, align 8, !dbg !385
  %37274 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37275 = load double, ptr %37274, align 8, !dbg !385
  %37276 = load double, ptr %19, align 8, !dbg !385
  %37277 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37278 = load double, ptr %37277, align 8, !dbg !385
  %37279 = call double @dot(double %37273, double %37275, double %37276, double %37278), !dbg !385
  %37280 = call double @atan2(double noundef %37245, double noundef %37279) #6, !dbg !386
  store double %37280, ptr %13, align 8, !dbg !387
  %37281 = load double, ptr %13, align 8, !dbg !388
  %37282 = load double, ptr %14, align 8, !dbg !389
  %37283 = fadd double %37282, %37281, !dbg !389
  store double %37283, ptr %14, align 8, !dbg !389
  %37284 = load double, ptr %13, align 8, !dbg !390
  %37285 = fsub double %37284, 0x400921FB54442D18, !dbg !392
  %37286 = call double @llvm.fabs.f64(double %37285), !dbg !393
  %37287 = fcmp ole double %37286, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37287, label %14330, label %37288, !dbg !395

37288:                                            ; preds = %37211
  %37289 = load double, ptr %13, align 8, !dbg !396
  %37290 = fadd double %37289, 0x400921FB54442D18, !dbg !397
  %37291 = call double @llvm.fabs.f64(double %37290), !dbg !398
  %37292 = fcmp ole double %37291, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37292, label %14330, label %37293, !dbg !400

37293:                                            ; preds = %37288
  br label %37294, !dbg !403

37294:                                            ; preds = %37293
  %37295 = load i32, ptr %10, align 4, !dbg !404
  %37296 = add nsw i32 %37295, 1, !dbg !404
  store i32 %37296, ptr %10, align 4, !dbg !404
  %37297 = load i32, ptr %10, align 4, !dbg !364
  %37298 = load i32, ptr %8, align 4, !dbg !366
  %37299 = icmp slt i32 %37297, %37298, !dbg !367
  br i1 %37299, label %37300, label %48422, !dbg !368

37300:                                            ; preds = %37294
  %37301 = load i32, ptr %10, align 4, !dbg !369
  %37302 = sext i32 %37301 to i64, !dbg !371
  %37303 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37302, !dbg !371
  %37304 = load double, ptr %6, align 8, !dbg !372
  %37305 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37306 = load double, ptr %37305, align 8, !dbg !372
  %37307 = load double, ptr %37303, align 16, !dbg !372
  %37308 = getelementptr inbounds { double, double }, ptr %37303, i32 0, i32 1, !dbg !372
  %37309 = load double, ptr %37308, align 8, !dbg !372
  %37310 = call { double, double } @make_vec(double %37304, double %37306, double %37307, double %37309), !dbg !372
  %37311 = extractvalue { double, double } %37310, 0, !dbg !372
  store double %37311, ptr %16, align 8, !dbg !372
  %37312 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37313 = extractvalue { double, double } %37310, 1, !dbg !372
  store double %37313, ptr %37312, align 8, !dbg !372
  %37314 = load i32, ptr %10, align 4, !dbg !373
  %37315 = add nsw i32 %37314, 1, !dbg !374
  %37316 = sext i32 %37315 to i64, !dbg !375
  %37317 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37316, !dbg !375
  %37318 = load double, ptr %6, align 8, !dbg !376
  %37319 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37320 = load double, ptr %37319, align 8, !dbg !376
  %37321 = load double, ptr %37317, align 16, !dbg !376
  %37322 = getelementptr inbounds { double, double }, ptr %37317, i32 0, i32 1, !dbg !376
  %37323 = load double, ptr %37322, align 8, !dbg !376
  %37324 = call { double, double } @make_vec(double %37318, double %37320, double %37321, double %37323), !dbg !376
  %37325 = extractvalue { double, double } %37324, 0, !dbg !376
  store double %37325, ptr %17, align 8, !dbg !376
  %37326 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37327 = extractvalue { double, double } %37324, 1, !dbg !376
  store double %37327, ptr %37326, align 8, !dbg !376
  %37328 = load double, ptr %16, align 8, !dbg !377
  %37329 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37330 = load double, ptr %37329, align 8, !dbg !377
  %37331 = load double, ptr %17, align 8, !dbg !377
  %37332 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37333 = load double, ptr %37332, align 8, !dbg !377
  %37334 = call double @cross(double %37328, double %37330, double %37331, double %37333), !dbg !377
  %37335 = load i32, ptr %10, align 4, !dbg !378
  %37336 = sext i32 %37335 to i64, !dbg !379
  %37337 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37336, !dbg !379
  %37338 = load double, ptr %6, align 8, !dbg !380
  %37339 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37340 = load double, ptr %37339, align 8, !dbg !380
  %37341 = load double, ptr %37337, align 16, !dbg !380
  %37342 = getelementptr inbounds { double, double }, ptr %37337, i32 0, i32 1, !dbg !380
  %37343 = load double, ptr %37342, align 8, !dbg !380
  %37344 = call { double, double } @make_vec(double %37338, double %37340, double %37341, double %37343), !dbg !380
  %37345 = extractvalue { double, double } %37344, 0, !dbg !380
  store double %37345, ptr %18, align 8, !dbg !380
  %37346 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37347 = extractvalue { double, double } %37344, 1, !dbg !380
  store double %37347, ptr %37346, align 8, !dbg !380
  %37348 = load i32, ptr %10, align 4, !dbg !381
  %37349 = add nsw i32 %37348, 1, !dbg !382
  %37350 = sext i32 %37349 to i64, !dbg !383
  %37351 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37350, !dbg !383
  %37352 = load double, ptr %6, align 8, !dbg !384
  %37353 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37354 = load double, ptr %37353, align 8, !dbg !384
  %37355 = load double, ptr %37351, align 16, !dbg !384
  %37356 = getelementptr inbounds { double, double }, ptr %37351, i32 0, i32 1, !dbg !384
  %37357 = load double, ptr %37356, align 8, !dbg !384
  %37358 = call { double, double } @make_vec(double %37352, double %37354, double %37355, double %37357), !dbg !384
  %37359 = extractvalue { double, double } %37358, 0, !dbg !384
  store double %37359, ptr %19, align 8, !dbg !384
  %37360 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37361 = extractvalue { double, double } %37358, 1, !dbg !384
  store double %37361, ptr %37360, align 8, !dbg !384
  %37362 = load double, ptr %18, align 8, !dbg !385
  %37363 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37364 = load double, ptr %37363, align 8, !dbg !385
  %37365 = load double, ptr %19, align 8, !dbg !385
  %37366 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37367 = load double, ptr %37366, align 8, !dbg !385
  %37368 = call double @dot(double %37362, double %37364, double %37365, double %37367), !dbg !385
  %37369 = call double @atan2(double noundef %37334, double noundef %37368) #6, !dbg !386
  store double %37369, ptr %13, align 8, !dbg !387
  %37370 = load double, ptr %13, align 8, !dbg !388
  %37371 = load double, ptr %14, align 8, !dbg !389
  %37372 = fadd double %37371, %37370, !dbg !389
  store double %37372, ptr %14, align 8, !dbg !389
  %37373 = load double, ptr %13, align 8, !dbg !390
  %37374 = fsub double %37373, 0x400921FB54442D18, !dbg !392
  %37375 = call double @llvm.fabs.f64(double %37374), !dbg !393
  %37376 = fcmp ole double %37375, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37376, label %14330, label %37377, !dbg !395

37377:                                            ; preds = %37300
  %37378 = load double, ptr %13, align 8, !dbg !396
  %37379 = fadd double %37378, 0x400921FB54442D18, !dbg !397
  %37380 = call double @llvm.fabs.f64(double %37379), !dbg !398
  %37381 = fcmp ole double %37380, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37381, label %14330, label %37382, !dbg !400

37382:                                            ; preds = %37377
  br label %37383, !dbg !403

37383:                                            ; preds = %37382
  %37384 = load i32, ptr %10, align 4, !dbg !404
  %37385 = add nsw i32 %37384, 1, !dbg !404
  store i32 %37385, ptr %10, align 4, !dbg !404
  %37386 = load i32, ptr %10, align 4, !dbg !364
  %37387 = load i32, ptr %8, align 4, !dbg !366
  %37388 = icmp slt i32 %37386, %37387, !dbg !367
  br i1 %37388, label %37389, label %48422, !dbg !368

37389:                                            ; preds = %37383
  %37390 = load i32, ptr %10, align 4, !dbg !369
  %37391 = sext i32 %37390 to i64, !dbg !371
  %37392 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37391, !dbg !371
  %37393 = load double, ptr %6, align 8, !dbg !372
  %37394 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37395 = load double, ptr %37394, align 8, !dbg !372
  %37396 = load double, ptr %37392, align 16, !dbg !372
  %37397 = getelementptr inbounds { double, double }, ptr %37392, i32 0, i32 1, !dbg !372
  %37398 = load double, ptr %37397, align 8, !dbg !372
  %37399 = call { double, double } @make_vec(double %37393, double %37395, double %37396, double %37398), !dbg !372
  %37400 = extractvalue { double, double } %37399, 0, !dbg !372
  store double %37400, ptr %16, align 8, !dbg !372
  %37401 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37402 = extractvalue { double, double } %37399, 1, !dbg !372
  store double %37402, ptr %37401, align 8, !dbg !372
  %37403 = load i32, ptr %10, align 4, !dbg !373
  %37404 = add nsw i32 %37403, 1, !dbg !374
  %37405 = sext i32 %37404 to i64, !dbg !375
  %37406 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37405, !dbg !375
  %37407 = load double, ptr %6, align 8, !dbg !376
  %37408 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37409 = load double, ptr %37408, align 8, !dbg !376
  %37410 = load double, ptr %37406, align 16, !dbg !376
  %37411 = getelementptr inbounds { double, double }, ptr %37406, i32 0, i32 1, !dbg !376
  %37412 = load double, ptr %37411, align 8, !dbg !376
  %37413 = call { double, double } @make_vec(double %37407, double %37409, double %37410, double %37412), !dbg !376
  %37414 = extractvalue { double, double } %37413, 0, !dbg !376
  store double %37414, ptr %17, align 8, !dbg !376
  %37415 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37416 = extractvalue { double, double } %37413, 1, !dbg !376
  store double %37416, ptr %37415, align 8, !dbg !376
  %37417 = load double, ptr %16, align 8, !dbg !377
  %37418 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37419 = load double, ptr %37418, align 8, !dbg !377
  %37420 = load double, ptr %17, align 8, !dbg !377
  %37421 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37422 = load double, ptr %37421, align 8, !dbg !377
  %37423 = call double @cross(double %37417, double %37419, double %37420, double %37422), !dbg !377
  %37424 = load i32, ptr %10, align 4, !dbg !378
  %37425 = sext i32 %37424 to i64, !dbg !379
  %37426 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37425, !dbg !379
  %37427 = load double, ptr %6, align 8, !dbg !380
  %37428 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37429 = load double, ptr %37428, align 8, !dbg !380
  %37430 = load double, ptr %37426, align 16, !dbg !380
  %37431 = getelementptr inbounds { double, double }, ptr %37426, i32 0, i32 1, !dbg !380
  %37432 = load double, ptr %37431, align 8, !dbg !380
  %37433 = call { double, double } @make_vec(double %37427, double %37429, double %37430, double %37432), !dbg !380
  %37434 = extractvalue { double, double } %37433, 0, !dbg !380
  store double %37434, ptr %18, align 8, !dbg !380
  %37435 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37436 = extractvalue { double, double } %37433, 1, !dbg !380
  store double %37436, ptr %37435, align 8, !dbg !380
  %37437 = load i32, ptr %10, align 4, !dbg !381
  %37438 = add nsw i32 %37437, 1, !dbg !382
  %37439 = sext i32 %37438 to i64, !dbg !383
  %37440 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37439, !dbg !383
  %37441 = load double, ptr %6, align 8, !dbg !384
  %37442 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37443 = load double, ptr %37442, align 8, !dbg !384
  %37444 = load double, ptr %37440, align 16, !dbg !384
  %37445 = getelementptr inbounds { double, double }, ptr %37440, i32 0, i32 1, !dbg !384
  %37446 = load double, ptr %37445, align 8, !dbg !384
  %37447 = call { double, double } @make_vec(double %37441, double %37443, double %37444, double %37446), !dbg !384
  %37448 = extractvalue { double, double } %37447, 0, !dbg !384
  store double %37448, ptr %19, align 8, !dbg !384
  %37449 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37450 = extractvalue { double, double } %37447, 1, !dbg !384
  store double %37450, ptr %37449, align 8, !dbg !384
  %37451 = load double, ptr %18, align 8, !dbg !385
  %37452 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37453 = load double, ptr %37452, align 8, !dbg !385
  %37454 = load double, ptr %19, align 8, !dbg !385
  %37455 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37456 = load double, ptr %37455, align 8, !dbg !385
  %37457 = call double @dot(double %37451, double %37453, double %37454, double %37456), !dbg !385
  %37458 = call double @atan2(double noundef %37423, double noundef %37457) #6, !dbg !386
  store double %37458, ptr %13, align 8, !dbg !387
  %37459 = load double, ptr %13, align 8, !dbg !388
  %37460 = load double, ptr %14, align 8, !dbg !389
  %37461 = fadd double %37460, %37459, !dbg !389
  store double %37461, ptr %14, align 8, !dbg !389
  %37462 = load double, ptr %13, align 8, !dbg !390
  %37463 = fsub double %37462, 0x400921FB54442D18, !dbg !392
  %37464 = call double @llvm.fabs.f64(double %37463), !dbg !393
  %37465 = fcmp ole double %37464, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37465, label %14330, label %37466, !dbg !395

37466:                                            ; preds = %37389
  %37467 = load double, ptr %13, align 8, !dbg !396
  %37468 = fadd double %37467, 0x400921FB54442D18, !dbg !397
  %37469 = call double @llvm.fabs.f64(double %37468), !dbg !398
  %37470 = fcmp ole double %37469, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37470, label %14330, label %37471, !dbg !400

37471:                                            ; preds = %37466
  br label %37472, !dbg !403

37472:                                            ; preds = %37471
  %37473 = load i32, ptr %10, align 4, !dbg !404
  %37474 = add nsw i32 %37473, 1, !dbg !404
  store i32 %37474, ptr %10, align 4, !dbg !404
  %37475 = load i32, ptr %10, align 4, !dbg !364
  %37476 = load i32, ptr %8, align 4, !dbg !366
  %37477 = icmp slt i32 %37475, %37476, !dbg !367
  br i1 %37477, label %37478, label %48422, !dbg !368

37478:                                            ; preds = %37472
  %37479 = load i32, ptr %10, align 4, !dbg !369
  %37480 = sext i32 %37479 to i64, !dbg !371
  %37481 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37480, !dbg !371
  %37482 = load double, ptr %6, align 8, !dbg !372
  %37483 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37484 = load double, ptr %37483, align 8, !dbg !372
  %37485 = load double, ptr %37481, align 16, !dbg !372
  %37486 = getelementptr inbounds { double, double }, ptr %37481, i32 0, i32 1, !dbg !372
  %37487 = load double, ptr %37486, align 8, !dbg !372
  %37488 = call { double, double } @make_vec(double %37482, double %37484, double %37485, double %37487), !dbg !372
  %37489 = extractvalue { double, double } %37488, 0, !dbg !372
  store double %37489, ptr %16, align 8, !dbg !372
  %37490 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37491 = extractvalue { double, double } %37488, 1, !dbg !372
  store double %37491, ptr %37490, align 8, !dbg !372
  %37492 = load i32, ptr %10, align 4, !dbg !373
  %37493 = add nsw i32 %37492, 1, !dbg !374
  %37494 = sext i32 %37493 to i64, !dbg !375
  %37495 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37494, !dbg !375
  %37496 = load double, ptr %6, align 8, !dbg !376
  %37497 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37498 = load double, ptr %37497, align 8, !dbg !376
  %37499 = load double, ptr %37495, align 16, !dbg !376
  %37500 = getelementptr inbounds { double, double }, ptr %37495, i32 0, i32 1, !dbg !376
  %37501 = load double, ptr %37500, align 8, !dbg !376
  %37502 = call { double, double } @make_vec(double %37496, double %37498, double %37499, double %37501), !dbg !376
  %37503 = extractvalue { double, double } %37502, 0, !dbg !376
  store double %37503, ptr %17, align 8, !dbg !376
  %37504 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37505 = extractvalue { double, double } %37502, 1, !dbg !376
  store double %37505, ptr %37504, align 8, !dbg !376
  %37506 = load double, ptr %16, align 8, !dbg !377
  %37507 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37508 = load double, ptr %37507, align 8, !dbg !377
  %37509 = load double, ptr %17, align 8, !dbg !377
  %37510 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37511 = load double, ptr %37510, align 8, !dbg !377
  %37512 = call double @cross(double %37506, double %37508, double %37509, double %37511), !dbg !377
  %37513 = load i32, ptr %10, align 4, !dbg !378
  %37514 = sext i32 %37513 to i64, !dbg !379
  %37515 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37514, !dbg !379
  %37516 = load double, ptr %6, align 8, !dbg !380
  %37517 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37518 = load double, ptr %37517, align 8, !dbg !380
  %37519 = load double, ptr %37515, align 16, !dbg !380
  %37520 = getelementptr inbounds { double, double }, ptr %37515, i32 0, i32 1, !dbg !380
  %37521 = load double, ptr %37520, align 8, !dbg !380
  %37522 = call { double, double } @make_vec(double %37516, double %37518, double %37519, double %37521), !dbg !380
  %37523 = extractvalue { double, double } %37522, 0, !dbg !380
  store double %37523, ptr %18, align 8, !dbg !380
  %37524 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37525 = extractvalue { double, double } %37522, 1, !dbg !380
  store double %37525, ptr %37524, align 8, !dbg !380
  %37526 = load i32, ptr %10, align 4, !dbg !381
  %37527 = add nsw i32 %37526, 1, !dbg !382
  %37528 = sext i32 %37527 to i64, !dbg !383
  %37529 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37528, !dbg !383
  %37530 = load double, ptr %6, align 8, !dbg !384
  %37531 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37532 = load double, ptr %37531, align 8, !dbg !384
  %37533 = load double, ptr %37529, align 16, !dbg !384
  %37534 = getelementptr inbounds { double, double }, ptr %37529, i32 0, i32 1, !dbg !384
  %37535 = load double, ptr %37534, align 8, !dbg !384
  %37536 = call { double, double } @make_vec(double %37530, double %37532, double %37533, double %37535), !dbg !384
  %37537 = extractvalue { double, double } %37536, 0, !dbg !384
  store double %37537, ptr %19, align 8, !dbg !384
  %37538 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37539 = extractvalue { double, double } %37536, 1, !dbg !384
  store double %37539, ptr %37538, align 8, !dbg !384
  %37540 = load double, ptr %18, align 8, !dbg !385
  %37541 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37542 = load double, ptr %37541, align 8, !dbg !385
  %37543 = load double, ptr %19, align 8, !dbg !385
  %37544 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37545 = load double, ptr %37544, align 8, !dbg !385
  %37546 = call double @dot(double %37540, double %37542, double %37543, double %37545), !dbg !385
  %37547 = call double @atan2(double noundef %37512, double noundef %37546) #6, !dbg !386
  store double %37547, ptr %13, align 8, !dbg !387
  %37548 = load double, ptr %13, align 8, !dbg !388
  %37549 = load double, ptr %14, align 8, !dbg !389
  %37550 = fadd double %37549, %37548, !dbg !389
  store double %37550, ptr %14, align 8, !dbg !389
  %37551 = load double, ptr %13, align 8, !dbg !390
  %37552 = fsub double %37551, 0x400921FB54442D18, !dbg !392
  %37553 = call double @llvm.fabs.f64(double %37552), !dbg !393
  %37554 = fcmp ole double %37553, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37554, label %14330, label %37555, !dbg !395

37555:                                            ; preds = %37478
  %37556 = load double, ptr %13, align 8, !dbg !396
  %37557 = fadd double %37556, 0x400921FB54442D18, !dbg !397
  %37558 = call double @llvm.fabs.f64(double %37557), !dbg !398
  %37559 = fcmp ole double %37558, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37559, label %14330, label %37560, !dbg !400

37560:                                            ; preds = %37555
  br label %37561, !dbg !403

37561:                                            ; preds = %37560
  %37562 = load i32, ptr %10, align 4, !dbg !404
  %37563 = add nsw i32 %37562, 1, !dbg !404
  store i32 %37563, ptr %10, align 4, !dbg !404
  %37564 = load i32, ptr %10, align 4, !dbg !364
  %37565 = load i32, ptr %8, align 4, !dbg !366
  %37566 = icmp slt i32 %37564, %37565, !dbg !367
  br i1 %37566, label %37567, label %48422, !dbg !368

37567:                                            ; preds = %37561
  %37568 = load i32, ptr %10, align 4, !dbg !369
  %37569 = sext i32 %37568 to i64, !dbg !371
  %37570 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37569, !dbg !371
  %37571 = load double, ptr %6, align 8, !dbg !372
  %37572 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37573 = load double, ptr %37572, align 8, !dbg !372
  %37574 = load double, ptr %37570, align 16, !dbg !372
  %37575 = getelementptr inbounds { double, double }, ptr %37570, i32 0, i32 1, !dbg !372
  %37576 = load double, ptr %37575, align 8, !dbg !372
  %37577 = call { double, double } @make_vec(double %37571, double %37573, double %37574, double %37576), !dbg !372
  %37578 = extractvalue { double, double } %37577, 0, !dbg !372
  store double %37578, ptr %16, align 8, !dbg !372
  %37579 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37580 = extractvalue { double, double } %37577, 1, !dbg !372
  store double %37580, ptr %37579, align 8, !dbg !372
  %37581 = load i32, ptr %10, align 4, !dbg !373
  %37582 = add nsw i32 %37581, 1, !dbg !374
  %37583 = sext i32 %37582 to i64, !dbg !375
  %37584 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37583, !dbg !375
  %37585 = load double, ptr %6, align 8, !dbg !376
  %37586 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37587 = load double, ptr %37586, align 8, !dbg !376
  %37588 = load double, ptr %37584, align 16, !dbg !376
  %37589 = getelementptr inbounds { double, double }, ptr %37584, i32 0, i32 1, !dbg !376
  %37590 = load double, ptr %37589, align 8, !dbg !376
  %37591 = call { double, double } @make_vec(double %37585, double %37587, double %37588, double %37590), !dbg !376
  %37592 = extractvalue { double, double } %37591, 0, !dbg !376
  store double %37592, ptr %17, align 8, !dbg !376
  %37593 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37594 = extractvalue { double, double } %37591, 1, !dbg !376
  store double %37594, ptr %37593, align 8, !dbg !376
  %37595 = load double, ptr %16, align 8, !dbg !377
  %37596 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37597 = load double, ptr %37596, align 8, !dbg !377
  %37598 = load double, ptr %17, align 8, !dbg !377
  %37599 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37600 = load double, ptr %37599, align 8, !dbg !377
  %37601 = call double @cross(double %37595, double %37597, double %37598, double %37600), !dbg !377
  %37602 = load i32, ptr %10, align 4, !dbg !378
  %37603 = sext i32 %37602 to i64, !dbg !379
  %37604 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37603, !dbg !379
  %37605 = load double, ptr %6, align 8, !dbg !380
  %37606 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37607 = load double, ptr %37606, align 8, !dbg !380
  %37608 = load double, ptr %37604, align 16, !dbg !380
  %37609 = getelementptr inbounds { double, double }, ptr %37604, i32 0, i32 1, !dbg !380
  %37610 = load double, ptr %37609, align 8, !dbg !380
  %37611 = call { double, double } @make_vec(double %37605, double %37607, double %37608, double %37610), !dbg !380
  %37612 = extractvalue { double, double } %37611, 0, !dbg !380
  store double %37612, ptr %18, align 8, !dbg !380
  %37613 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37614 = extractvalue { double, double } %37611, 1, !dbg !380
  store double %37614, ptr %37613, align 8, !dbg !380
  %37615 = load i32, ptr %10, align 4, !dbg !381
  %37616 = add nsw i32 %37615, 1, !dbg !382
  %37617 = sext i32 %37616 to i64, !dbg !383
  %37618 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37617, !dbg !383
  %37619 = load double, ptr %6, align 8, !dbg !384
  %37620 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37621 = load double, ptr %37620, align 8, !dbg !384
  %37622 = load double, ptr %37618, align 16, !dbg !384
  %37623 = getelementptr inbounds { double, double }, ptr %37618, i32 0, i32 1, !dbg !384
  %37624 = load double, ptr %37623, align 8, !dbg !384
  %37625 = call { double, double } @make_vec(double %37619, double %37621, double %37622, double %37624), !dbg !384
  %37626 = extractvalue { double, double } %37625, 0, !dbg !384
  store double %37626, ptr %19, align 8, !dbg !384
  %37627 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37628 = extractvalue { double, double } %37625, 1, !dbg !384
  store double %37628, ptr %37627, align 8, !dbg !384
  %37629 = load double, ptr %18, align 8, !dbg !385
  %37630 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37631 = load double, ptr %37630, align 8, !dbg !385
  %37632 = load double, ptr %19, align 8, !dbg !385
  %37633 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37634 = load double, ptr %37633, align 8, !dbg !385
  %37635 = call double @dot(double %37629, double %37631, double %37632, double %37634), !dbg !385
  %37636 = call double @atan2(double noundef %37601, double noundef %37635) #6, !dbg !386
  store double %37636, ptr %13, align 8, !dbg !387
  %37637 = load double, ptr %13, align 8, !dbg !388
  %37638 = load double, ptr %14, align 8, !dbg !389
  %37639 = fadd double %37638, %37637, !dbg !389
  store double %37639, ptr %14, align 8, !dbg !389
  %37640 = load double, ptr %13, align 8, !dbg !390
  %37641 = fsub double %37640, 0x400921FB54442D18, !dbg !392
  %37642 = call double @llvm.fabs.f64(double %37641), !dbg !393
  %37643 = fcmp ole double %37642, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37643, label %14330, label %37644, !dbg !395

37644:                                            ; preds = %37567
  %37645 = load double, ptr %13, align 8, !dbg !396
  %37646 = fadd double %37645, 0x400921FB54442D18, !dbg !397
  %37647 = call double @llvm.fabs.f64(double %37646), !dbg !398
  %37648 = fcmp ole double %37647, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37648, label %14330, label %37649, !dbg !400

37649:                                            ; preds = %37644
  br label %37650, !dbg !403

37650:                                            ; preds = %37649
  %37651 = load i32, ptr %10, align 4, !dbg !404
  %37652 = add nsw i32 %37651, 1, !dbg !404
  store i32 %37652, ptr %10, align 4, !dbg !404
  %37653 = load i32, ptr %10, align 4, !dbg !364
  %37654 = load i32, ptr %8, align 4, !dbg !366
  %37655 = icmp slt i32 %37653, %37654, !dbg !367
  br i1 %37655, label %37656, label %48422, !dbg !368

37656:                                            ; preds = %37650
  %37657 = load i32, ptr %10, align 4, !dbg !369
  %37658 = sext i32 %37657 to i64, !dbg !371
  %37659 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37658, !dbg !371
  %37660 = load double, ptr %6, align 8, !dbg !372
  %37661 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37662 = load double, ptr %37661, align 8, !dbg !372
  %37663 = load double, ptr %37659, align 16, !dbg !372
  %37664 = getelementptr inbounds { double, double }, ptr %37659, i32 0, i32 1, !dbg !372
  %37665 = load double, ptr %37664, align 8, !dbg !372
  %37666 = call { double, double } @make_vec(double %37660, double %37662, double %37663, double %37665), !dbg !372
  %37667 = extractvalue { double, double } %37666, 0, !dbg !372
  store double %37667, ptr %16, align 8, !dbg !372
  %37668 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37669 = extractvalue { double, double } %37666, 1, !dbg !372
  store double %37669, ptr %37668, align 8, !dbg !372
  %37670 = load i32, ptr %10, align 4, !dbg !373
  %37671 = add nsw i32 %37670, 1, !dbg !374
  %37672 = sext i32 %37671 to i64, !dbg !375
  %37673 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37672, !dbg !375
  %37674 = load double, ptr %6, align 8, !dbg !376
  %37675 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37676 = load double, ptr %37675, align 8, !dbg !376
  %37677 = load double, ptr %37673, align 16, !dbg !376
  %37678 = getelementptr inbounds { double, double }, ptr %37673, i32 0, i32 1, !dbg !376
  %37679 = load double, ptr %37678, align 8, !dbg !376
  %37680 = call { double, double } @make_vec(double %37674, double %37676, double %37677, double %37679), !dbg !376
  %37681 = extractvalue { double, double } %37680, 0, !dbg !376
  store double %37681, ptr %17, align 8, !dbg !376
  %37682 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37683 = extractvalue { double, double } %37680, 1, !dbg !376
  store double %37683, ptr %37682, align 8, !dbg !376
  %37684 = load double, ptr %16, align 8, !dbg !377
  %37685 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37686 = load double, ptr %37685, align 8, !dbg !377
  %37687 = load double, ptr %17, align 8, !dbg !377
  %37688 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37689 = load double, ptr %37688, align 8, !dbg !377
  %37690 = call double @cross(double %37684, double %37686, double %37687, double %37689), !dbg !377
  %37691 = load i32, ptr %10, align 4, !dbg !378
  %37692 = sext i32 %37691 to i64, !dbg !379
  %37693 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37692, !dbg !379
  %37694 = load double, ptr %6, align 8, !dbg !380
  %37695 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37696 = load double, ptr %37695, align 8, !dbg !380
  %37697 = load double, ptr %37693, align 16, !dbg !380
  %37698 = getelementptr inbounds { double, double }, ptr %37693, i32 0, i32 1, !dbg !380
  %37699 = load double, ptr %37698, align 8, !dbg !380
  %37700 = call { double, double } @make_vec(double %37694, double %37696, double %37697, double %37699), !dbg !380
  %37701 = extractvalue { double, double } %37700, 0, !dbg !380
  store double %37701, ptr %18, align 8, !dbg !380
  %37702 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37703 = extractvalue { double, double } %37700, 1, !dbg !380
  store double %37703, ptr %37702, align 8, !dbg !380
  %37704 = load i32, ptr %10, align 4, !dbg !381
  %37705 = add nsw i32 %37704, 1, !dbg !382
  %37706 = sext i32 %37705 to i64, !dbg !383
  %37707 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37706, !dbg !383
  %37708 = load double, ptr %6, align 8, !dbg !384
  %37709 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37710 = load double, ptr %37709, align 8, !dbg !384
  %37711 = load double, ptr %37707, align 16, !dbg !384
  %37712 = getelementptr inbounds { double, double }, ptr %37707, i32 0, i32 1, !dbg !384
  %37713 = load double, ptr %37712, align 8, !dbg !384
  %37714 = call { double, double } @make_vec(double %37708, double %37710, double %37711, double %37713), !dbg !384
  %37715 = extractvalue { double, double } %37714, 0, !dbg !384
  store double %37715, ptr %19, align 8, !dbg !384
  %37716 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37717 = extractvalue { double, double } %37714, 1, !dbg !384
  store double %37717, ptr %37716, align 8, !dbg !384
  %37718 = load double, ptr %18, align 8, !dbg !385
  %37719 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37720 = load double, ptr %37719, align 8, !dbg !385
  %37721 = load double, ptr %19, align 8, !dbg !385
  %37722 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37723 = load double, ptr %37722, align 8, !dbg !385
  %37724 = call double @dot(double %37718, double %37720, double %37721, double %37723), !dbg !385
  %37725 = call double @atan2(double noundef %37690, double noundef %37724) #6, !dbg !386
  store double %37725, ptr %13, align 8, !dbg !387
  %37726 = load double, ptr %13, align 8, !dbg !388
  %37727 = load double, ptr %14, align 8, !dbg !389
  %37728 = fadd double %37727, %37726, !dbg !389
  store double %37728, ptr %14, align 8, !dbg !389
  %37729 = load double, ptr %13, align 8, !dbg !390
  %37730 = fsub double %37729, 0x400921FB54442D18, !dbg !392
  %37731 = call double @llvm.fabs.f64(double %37730), !dbg !393
  %37732 = fcmp ole double %37731, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37732, label %14330, label %37733, !dbg !395

37733:                                            ; preds = %37656
  %37734 = load double, ptr %13, align 8, !dbg !396
  %37735 = fadd double %37734, 0x400921FB54442D18, !dbg !397
  %37736 = call double @llvm.fabs.f64(double %37735), !dbg !398
  %37737 = fcmp ole double %37736, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37737, label %14330, label %37738, !dbg !400

37738:                                            ; preds = %37733
  br label %37739, !dbg !403

37739:                                            ; preds = %37738
  %37740 = load i32, ptr %10, align 4, !dbg !404
  %37741 = add nsw i32 %37740, 1, !dbg !404
  store i32 %37741, ptr %10, align 4, !dbg !404
  %37742 = load i32, ptr %10, align 4, !dbg !364
  %37743 = load i32, ptr %8, align 4, !dbg !366
  %37744 = icmp slt i32 %37742, %37743, !dbg !367
  br i1 %37744, label %37745, label %48422, !dbg !368

37745:                                            ; preds = %37739
  %37746 = load i32, ptr %10, align 4, !dbg !369
  %37747 = sext i32 %37746 to i64, !dbg !371
  %37748 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37747, !dbg !371
  %37749 = load double, ptr %6, align 8, !dbg !372
  %37750 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37751 = load double, ptr %37750, align 8, !dbg !372
  %37752 = load double, ptr %37748, align 16, !dbg !372
  %37753 = getelementptr inbounds { double, double }, ptr %37748, i32 0, i32 1, !dbg !372
  %37754 = load double, ptr %37753, align 8, !dbg !372
  %37755 = call { double, double } @make_vec(double %37749, double %37751, double %37752, double %37754), !dbg !372
  %37756 = extractvalue { double, double } %37755, 0, !dbg !372
  store double %37756, ptr %16, align 8, !dbg !372
  %37757 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37758 = extractvalue { double, double } %37755, 1, !dbg !372
  store double %37758, ptr %37757, align 8, !dbg !372
  %37759 = load i32, ptr %10, align 4, !dbg !373
  %37760 = add nsw i32 %37759, 1, !dbg !374
  %37761 = sext i32 %37760 to i64, !dbg !375
  %37762 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37761, !dbg !375
  %37763 = load double, ptr %6, align 8, !dbg !376
  %37764 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37765 = load double, ptr %37764, align 8, !dbg !376
  %37766 = load double, ptr %37762, align 16, !dbg !376
  %37767 = getelementptr inbounds { double, double }, ptr %37762, i32 0, i32 1, !dbg !376
  %37768 = load double, ptr %37767, align 8, !dbg !376
  %37769 = call { double, double } @make_vec(double %37763, double %37765, double %37766, double %37768), !dbg !376
  %37770 = extractvalue { double, double } %37769, 0, !dbg !376
  store double %37770, ptr %17, align 8, !dbg !376
  %37771 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37772 = extractvalue { double, double } %37769, 1, !dbg !376
  store double %37772, ptr %37771, align 8, !dbg !376
  %37773 = load double, ptr %16, align 8, !dbg !377
  %37774 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37775 = load double, ptr %37774, align 8, !dbg !377
  %37776 = load double, ptr %17, align 8, !dbg !377
  %37777 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37778 = load double, ptr %37777, align 8, !dbg !377
  %37779 = call double @cross(double %37773, double %37775, double %37776, double %37778), !dbg !377
  %37780 = load i32, ptr %10, align 4, !dbg !378
  %37781 = sext i32 %37780 to i64, !dbg !379
  %37782 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37781, !dbg !379
  %37783 = load double, ptr %6, align 8, !dbg !380
  %37784 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37785 = load double, ptr %37784, align 8, !dbg !380
  %37786 = load double, ptr %37782, align 16, !dbg !380
  %37787 = getelementptr inbounds { double, double }, ptr %37782, i32 0, i32 1, !dbg !380
  %37788 = load double, ptr %37787, align 8, !dbg !380
  %37789 = call { double, double } @make_vec(double %37783, double %37785, double %37786, double %37788), !dbg !380
  %37790 = extractvalue { double, double } %37789, 0, !dbg !380
  store double %37790, ptr %18, align 8, !dbg !380
  %37791 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37792 = extractvalue { double, double } %37789, 1, !dbg !380
  store double %37792, ptr %37791, align 8, !dbg !380
  %37793 = load i32, ptr %10, align 4, !dbg !381
  %37794 = add nsw i32 %37793, 1, !dbg !382
  %37795 = sext i32 %37794 to i64, !dbg !383
  %37796 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37795, !dbg !383
  %37797 = load double, ptr %6, align 8, !dbg !384
  %37798 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37799 = load double, ptr %37798, align 8, !dbg !384
  %37800 = load double, ptr %37796, align 16, !dbg !384
  %37801 = getelementptr inbounds { double, double }, ptr %37796, i32 0, i32 1, !dbg !384
  %37802 = load double, ptr %37801, align 8, !dbg !384
  %37803 = call { double, double } @make_vec(double %37797, double %37799, double %37800, double %37802), !dbg !384
  %37804 = extractvalue { double, double } %37803, 0, !dbg !384
  store double %37804, ptr %19, align 8, !dbg !384
  %37805 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37806 = extractvalue { double, double } %37803, 1, !dbg !384
  store double %37806, ptr %37805, align 8, !dbg !384
  %37807 = load double, ptr %18, align 8, !dbg !385
  %37808 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37809 = load double, ptr %37808, align 8, !dbg !385
  %37810 = load double, ptr %19, align 8, !dbg !385
  %37811 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37812 = load double, ptr %37811, align 8, !dbg !385
  %37813 = call double @dot(double %37807, double %37809, double %37810, double %37812), !dbg !385
  %37814 = call double @atan2(double noundef %37779, double noundef %37813) #6, !dbg !386
  store double %37814, ptr %13, align 8, !dbg !387
  %37815 = load double, ptr %13, align 8, !dbg !388
  %37816 = load double, ptr %14, align 8, !dbg !389
  %37817 = fadd double %37816, %37815, !dbg !389
  store double %37817, ptr %14, align 8, !dbg !389
  %37818 = load double, ptr %13, align 8, !dbg !390
  %37819 = fsub double %37818, 0x400921FB54442D18, !dbg !392
  %37820 = call double @llvm.fabs.f64(double %37819), !dbg !393
  %37821 = fcmp ole double %37820, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37821, label %14330, label %37822, !dbg !395

37822:                                            ; preds = %37745
  %37823 = load double, ptr %13, align 8, !dbg !396
  %37824 = fadd double %37823, 0x400921FB54442D18, !dbg !397
  %37825 = call double @llvm.fabs.f64(double %37824), !dbg !398
  %37826 = fcmp ole double %37825, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37826, label %14330, label %37827, !dbg !400

37827:                                            ; preds = %37822
  br label %37828, !dbg !403

37828:                                            ; preds = %37827
  %37829 = load i32, ptr %10, align 4, !dbg !404
  %37830 = add nsw i32 %37829, 1, !dbg !404
  store i32 %37830, ptr %10, align 4, !dbg !404
  %37831 = load i32, ptr %10, align 4, !dbg !364
  %37832 = load i32, ptr %8, align 4, !dbg !366
  %37833 = icmp slt i32 %37831, %37832, !dbg !367
  br i1 %37833, label %37834, label %48422, !dbg !368

37834:                                            ; preds = %37828
  %37835 = load i32, ptr %10, align 4, !dbg !369
  %37836 = sext i32 %37835 to i64, !dbg !371
  %37837 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37836, !dbg !371
  %37838 = load double, ptr %6, align 8, !dbg !372
  %37839 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37840 = load double, ptr %37839, align 8, !dbg !372
  %37841 = load double, ptr %37837, align 16, !dbg !372
  %37842 = getelementptr inbounds { double, double }, ptr %37837, i32 0, i32 1, !dbg !372
  %37843 = load double, ptr %37842, align 8, !dbg !372
  %37844 = call { double, double } @make_vec(double %37838, double %37840, double %37841, double %37843), !dbg !372
  %37845 = extractvalue { double, double } %37844, 0, !dbg !372
  store double %37845, ptr %16, align 8, !dbg !372
  %37846 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37847 = extractvalue { double, double } %37844, 1, !dbg !372
  store double %37847, ptr %37846, align 8, !dbg !372
  %37848 = load i32, ptr %10, align 4, !dbg !373
  %37849 = add nsw i32 %37848, 1, !dbg !374
  %37850 = sext i32 %37849 to i64, !dbg !375
  %37851 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37850, !dbg !375
  %37852 = load double, ptr %6, align 8, !dbg !376
  %37853 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37854 = load double, ptr %37853, align 8, !dbg !376
  %37855 = load double, ptr %37851, align 16, !dbg !376
  %37856 = getelementptr inbounds { double, double }, ptr %37851, i32 0, i32 1, !dbg !376
  %37857 = load double, ptr %37856, align 8, !dbg !376
  %37858 = call { double, double } @make_vec(double %37852, double %37854, double %37855, double %37857), !dbg !376
  %37859 = extractvalue { double, double } %37858, 0, !dbg !376
  store double %37859, ptr %17, align 8, !dbg !376
  %37860 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37861 = extractvalue { double, double } %37858, 1, !dbg !376
  store double %37861, ptr %37860, align 8, !dbg !376
  %37862 = load double, ptr %16, align 8, !dbg !377
  %37863 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37864 = load double, ptr %37863, align 8, !dbg !377
  %37865 = load double, ptr %17, align 8, !dbg !377
  %37866 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37867 = load double, ptr %37866, align 8, !dbg !377
  %37868 = call double @cross(double %37862, double %37864, double %37865, double %37867), !dbg !377
  %37869 = load i32, ptr %10, align 4, !dbg !378
  %37870 = sext i32 %37869 to i64, !dbg !379
  %37871 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37870, !dbg !379
  %37872 = load double, ptr %6, align 8, !dbg !380
  %37873 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37874 = load double, ptr %37873, align 8, !dbg !380
  %37875 = load double, ptr %37871, align 16, !dbg !380
  %37876 = getelementptr inbounds { double, double }, ptr %37871, i32 0, i32 1, !dbg !380
  %37877 = load double, ptr %37876, align 8, !dbg !380
  %37878 = call { double, double } @make_vec(double %37872, double %37874, double %37875, double %37877), !dbg !380
  %37879 = extractvalue { double, double } %37878, 0, !dbg !380
  store double %37879, ptr %18, align 8, !dbg !380
  %37880 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37881 = extractvalue { double, double } %37878, 1, !dbg !380
  store double %37881, ptr %37880, align 8, !dbg !380
  %37882 = load i32, ptr %10, align 4, !dbg !381
  %37883 = add nsw i32 %37882, 1, !dbg !382
  %37884 = sext i32 %37883 to i64, !dbg !383
  %37885 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37884, !dbg !383
  %37886 = load double, ptr %6, align 8, !dbg !384
  %37887 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37888 = load double, ptr %37887, align 8, !dbg !384
  %37889 = load double, ptr %37885, align 16, !dbg !384
  %37890 = getelementptr inbounds { double, double }, ptr %37885, i32 0, i32 1, !dbg !384
  %37891 = load double, ptr %37890, align 8, !dbg !384
  %37892 = call { double, double } @make_vec(double %37886, double %37888, double %37889, double %37891), !dbg !384
  %37893 = extractvalue { double, double } %37892, 0, !dbg !384
  store double %37893, ptr %19, align 8, !dbg !384
  %37894 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37895 = extractvalue { double, double } %37892, 1, !dbg !384
  store double %37895, ptr %37894, align 8, !dbg !384
  %37896 = load double, ptr %18, align 8, !dbg !385
  %37897 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37898 = load double, ptr %37897, align 8, !dbg !385
  %37899 = load double, ptr %19, align 8, !dbg !385
  %37900 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37901 = load double, ptr %37900, align 8, !dbg !385
  %37902 = call double @dot(double %37896, double %37898, double %37899, double %37901), !dbg !385
  %37903 = call double @atan2(double noundef %37868, double noundef %37902) #6, !dbg !386
  store double %37903, ptr %13, align 8, !dbg !387
  %37904 = load double, ptr %13, align 8, !dbg !388
  %37905 = load double, ptr %14, align 8, !dbg !389
  %37906 = fadd double %37905, %37904, !dbg !389
  store double %37906, ptr %14, align 8, !dbg !389
  %37907 = load double, ptr %13, align 8, !dbg !390
  %37908 = fsub double %37907, 0x400921FB54442D18, !dbg !392
  %37909 = call double @llvm.fabs.f64(double %37908), !dbg !393
  %37910 = fcmp ole double %37909, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37910, label %14330, label %37911, !dbg !395

37911:                                            ; preds = %37834
  %37912 = load double, ptr %13, align 8, !dbg !396
  %37913 = fadd double %37912, 0x400921FB54442D18, !dbg !397
  %37914 = call double @llvm.fabs.f64(double %37913), !dbg !398
  %37915 = fcmp ole double %37914, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %37915, label %14330, label %37916, !dbg !400

37916:                                            ; preds = %37911
  br label %37917, !dbg !403

37917:                                            ; preds = %37916
  %37918 = load i32, ptr %10, align 4, !dbg !404
  %37919 = add nsw i32 %37918, 1, !dbg !404
  store i32 %37919, ptr %10, align 4, !dbg !404
  %37920 = load i32, ptr %10, align 4, !dbg !364
  %37921 = load i32, ptr %8, align 4, !dbg !366
  %37922 = icmp slt i32 %37920, %37921, !dbg !367
  br i1 %37922, label %37923, label %48422, !dbg !368

37923:                                            ; preds = %37917
  %37924 = load i32, ptr %10, align 4, !dbg !369
  %37925 = sext i32 %37924 to i64, !dbg !371
  %37926 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37925, !dbg !371
  %37927 = load double, ptr %6, align 8, !dbg !372
  %37928 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %37929 = load double, ptr %37928, align 8, !dbg !372
  %37930 = load double, ptr %37926, align 16, !dbg !372
  %37931 = getelementptr inbounds { double, double }, ptr %37926, i32 0, i32 1, !dbg !372
  %37932 = load double, ptr %37931, align 8, !dbg !372
  %37933 = call { double, double } @make_vec(double %37927, double %37929, double %37930, double %37932), !dbg !372
  %37934 = extractvalue { double, double } %37933, 0, !dbg !372
  store double %37934, ptr %16, align 8, !dbg !372
  %37935 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %37936 = extractvalue { double, double } %37933, 1, !dbg !372
  store double %37936, ptr %37935, align 8, !dbg !372
  %37937 = load i32, ptr %10, align 4, !dbg !373
  %37938 = add nsw i32 %37937, 1, !dbg !374
  %37939 = sext i32 %37938 to i64, !dbg !375
  %37940 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37939, !dbg !375
  %37941 = load double, ptr %6, align 8, !dbg !376
  %37942 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %37943 = load double, ptr %37942, align 8, !dbg !376
  %37944 = load double, ptr %37940, align 16, !dbg !376
  %37945 = getelementptr inbounds { double, double }, ptr %37940, i32 0, i32 1, !dbg !376
  %37946 = load double, ptr %37945, align 8, !dbg !376
  %37947 = call { double, double } @make_vec(double %37941, double %37943, double %37944, double %37946), !dbg !376
  %37948 = extractvalue { double, double } %37947, 0, !dbg !376
  store double %37948, ptr %17, align 8, !dbg !376
  %37949 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %37950 = extractvalue { double, double } %37947, 1, !dbg !376
  store double %37950, ptr %37949, align 8, !dbg !376
  %37951 = load double, ptr %16, align 8, !dbg !377
  %37952 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %37953 = load double, ptr %37952, align 8, !dbg !377
  %37954 = load double, ptr %17, align 8, !dbg !377
  %37955 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %37956 = load double, ptr %37955, align 8, !dbg !377
  %37957 = call double @cross(double %37951, double %37953, double %37954, double %37956), !dbg !377
  %37958 = load i32, ptr %10, align 4, !dbg !378
  %37959 = sext i32 %37958 to i64, !dbg !379
  %37960 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37959, !dbg !379
  %37961 = load double, ptr %6, align 8, !dbg !380
  %37962 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %37963 = load double, ptr %37962, align 8, !dbg !380
  %37964 = load double, ptr %37960, align 16, !dbg !380
  %37965 = getelementptr inbounds { double, double }, ptr %37960, i32 0, i32 1, !dbg !380
  %37966 = load double, ptr %37965, align 8, !dbg !380
  %37967 = call { double, double } @make_vec(double %37961, double %37963, double %37964, double %37966), !dbg !380
  %37968 = extractvalue { double, double } %37967, 0, !dbg !380
  store double %37968, ptr %18, align 8, !dbg !380
  %37969 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %37970 = extractvalue { double, double } %37967, 1, !dbg !380
  store double %37970, ptr %37969, align 8, !dbg !380
  %37971 = load i32, ptr %10, align 4, !dbg !381
  %37972 = add nsw i32 %37971, 1, !dbg !382
  %37973 = sext i32 %37972 to i64, !dbg !383
  %37974 = getelementptr inbounds %struct.POINT, ptr %26, i64 %37973, !dbg !383
  %37975 = load double, ptr %6, align 8, !dbg !384
  %37976 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %37977 = load double, ptr %37976, align 8, !dbg !384
  %37978 = load double, ptr %37974, align 16, !dbg !384
  %37979 = getelementptr inbounds { double, double }, ptr %37974, i32 0, i32 1, !dbg !384
  %37980 = load double, ptr %37979, align 8, !dbg !384
  %37981 = call { double, double } @make_vec(double %37975, double %37977, double %37978, double %37980), !dbg !384
  %37982 = extractvalue { double, double } %37981, 0, !dbg !384
  store double %37982, ptr %19, align 8, !dbg !384
  %37983 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %37984 = extractvalue { double, double } %37981, 1, !dbg !384
  store double %37984, ptr %37983, align 8, !dbg !384
  %37985 = load double, ptr %18, align 8, !dbg !385
  %37986 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %37987 = load double, ptr %37986, align 8, !dbg !385
  %37988 = load double, ptr %19, align 8, !dbg !385
  %37989 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %37990 = load double, ptr %37989, align 8, !dbg !385
  %37991 = call double @dot(double %37985, double %37987, double %37988, double %37990), !dbg !385
  %37992 = call double @atan2(double noundef %37957, double noundef %37991) #6, !dbg !386
  store double %37992, ptr %13, align 8, !dbg !387
  %37993 = load double, ptr %13, align 8, !dbg !388
  %37994 = load double, ptr %14, align 8, !dbg !389
  %37995 = fadd double %37994, %37993, !dbg !389
  store double %37995, ptr %14, align 8, !dbg !389
  %37996 = load double, ptr %13, align 8, !dbg !390
  %37997 = fsub double %37996, 0x400921FB54442D18, !dbg !392
  %37998 = call double @llvm.fabs.f64(double %37997), !dbg !393
  %37999 = fcmp ole double %37998, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %37999, label %14330, label %38000, !dbg !395

38000:                                            ; preds = %37923
  %38001 = load double, ptr %13, align 8, !dbg !396
  %38002 = fadd double %38001, 0x400921FB54442D18, !dbg !397
  %38003 = call double @llvm.fabs.f64(double %38002), !dbg !398
  %38004 = fcmp ole double %38003, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38004, label %14330, label %38005, !dbg !400

38005:                                            ; preds = %38000
  br label %38006, !dbg !403

38006:                                            ; preds = %38005
  %38007 = load i32, ptr %10, align 4, !dbg !404
  %38008 = add nsw i32 %38007, 1, !dbg !404
  store i32 %38008, ptr %10, align 4, !dbg !404
  %38009 = load i32, ptr %10, align 4, !dbg !364
  %38010 = load i32, ptr %8, align 4, !dbg !366
  %38011 = icmp slt i32 %38009, %38010, !dbg !367
  br i1 %38011, label %38012, label %48422, !dbg !368

38012:                                            ; preds = %38006
  %38013 = load i32, ptr %10, align 4, !dbg !369
  %38014 = sext i32 %38013 to i64, !dbg !371
  %38015 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38014, !dbg !371
  %38016 = load double, ptr %6, align 8, !dbg !372
  %38017 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38018 = load double, ptr %38017, align 8, !dbg !372
  %38019 = load double, ptr %38015, align 16, !dbg !372
  %38020 = getelementptr inbounds { double, double }, ptr %38015, i32 0, i32 1, !dbg !372
  %38021 = load double, ptr %38020, align 8, !dbg !372
  %38022 = call { double, double } @make_vec(double %38016, double %38018, double %38019, double %38021), !dbg !372
  %38023 = extractvalue { double, double } %38022, 0, !dbg !372
  store double %38023, ptr %16, align 8, !dbg !372
  %38024 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38025 = extractvalue { double, double } %38022, 1, !dbg !372
  store double %38025, ptr %38024, align 8, !dbg !372
  %38026 = load i32, ptr %10, align 4, !dbg !373
  %38027 = add nsw i32 %38026, 1, !dbg !374
  %38028 = sext i32 %38027 to i64, !dbg !375
  %38029 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38028, !dbg !375
  %38030 = load double, ptr %6, align 8, !dbg !376
  %38031 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38032 = load double, ptr %38031, align 8, !dbg !376
  %38033 = load double, ptr %38029, align 16, !dbg !376
  %38034 = getelementptr inbounds { double, double }, ptr %38029, i32 0, i32 1, !dbg !376
  %38035 = load double, ptr %38034, align 8, !dbg !376
  %38036 = call { double, double } @make_vec(double %38030, double %38032, double %38033, double %38035), !dbg !376
  %38037 = extractvalue { double, double } %38036, 0, !dbg !376
  store double %38037, ptr %17, align 8, !dbg !376
  %38038 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38039 = extractvalue { double, double } %38036, 1, !dbg !376
  store double %38039, ptr %38038, align 8, !dbg !376
  %38040 = load double, ptr %16, align 8, !dbg !377
  %38041 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38042 = load double, ptr %38041, align 8, !dbg !377
  %38043 = load double, ptr %17, align 8, !dbg !377
  %38044 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38045 = load double, ptr %38044, align 8, !dbg !377
  %38046 = call double @cross(double %38040, double %38042, double %38043, double %38045), !dbg !377
  %38047 = load i32, ptr %10, align 4, !dbg !378
  %38048 = sext i32 %38047 to i64, !dbg !379
  %38049 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38048, !dbg !379
  %38050 = load double, ptr %6, align 8, !dbg !380
  %38051 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38052 = load double, ptr %38051, align 8, !dbg !380
  %38053 = load double, ptr %38049, align 16, !dbg !380
  %38054 = getelementptr inbounds { double, double }, ptr %38049, i32 0, i32 1, !dbg !380
  %38055 = load double, ptr %38054, align 8, !dbg !380
  %38056 = call { double, double } @make_vec(double %38050, double %38052, double %38053, double %38055), !dbg !380
  %38057 = extractvalue { double, double } %38056, 0, !dbg !380
  store double %38057, ptr %18, align 8, !dbg !380
  %38058 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38059 = extractvalue { double, double } %38056, 1, !dbg !380
  store double %38059, ptr %38058, align 8, !dbg !380
  %38060 = load i32, ptr %10, align 4, !dbg !381
  %38061 = add nsw i32 %38060, 1, !dbg !382
  %38062 = sext i32 %38061 to i64, !dbg !383
  %38063 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38062, !dbg !383
  %38064 = load double, ptr %6, align 8, !dbg !384
  %38065 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38066 = load double, ptr %38065, align 8, !dbg !384
  %38067 = load double, ptr %38063, align 16, !dbg !384
  %38068 = getelementptr inbounds { double, double }, ptr %38063, i32 0, i32 1, !dbg !384
  %38069 = load double, ptr %38068, align 8, !dbg !384
  %38070 = call { double, double } @make_vec(double %38064, double %38066, double %38067, double %38069), !dbg !384
  %38071 = extractvalue { double, double } %38070, 0, !dbg !384
  store double %38071, ptr %19, align 8, !dbg !384
  %38072 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38073 = extractvalue { double, double } %38070, 1, !dbg !384
  store double %38073, ptr %38072, align 8, !dbg !384
  %38074 = load double, ptr %18, align 8, !dbg !385
  %38075 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38076 = load double, ptr %38075, align 8, !dbg !385
  %38077 = load double, ptr %19, align 8, !dbg !385
  %38078 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38079 = load double, ptr %38078, align 8, !dbg !385
  %38080 = call double @dot(double %38074, double %38076, double %38077, double %38079), !dbg !385
  %38081 = call double @atan2(double noundef %38046, double noundef %38080) #6, !dbg !386
  store double %38081, ptr %13, align 8, !dbg !387
  %38082 = load double, ptr %13, align 8, !dbg !388
  %38083 = load double, ptr %14, align 8, !dbg !389
  %38084 = fadd double %38083, %38082, !dbg !389
  store double %38084, ptr %14, align 8, !dbg !389
  %38085 = load double, ptr %13, align 8, !dbg !390
  %38086 = fsub double %38085, 0x400921FB54442D18, !dbg !392
  %38087 = call double @llvm.fabs.f64(double %38086), !dbg !393
  %38088 = fcmp ole double %38087, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38088, label %14330, label %38089, !dbg !395

38089:                                            ; preds = %38012
  %38090 = load double, ptr %13, align 8, !dbg !396
  %38091 = fadd double %38090, 0x400921FB54442D18, !dbg !397
  %38092 = call double @llvm.fabs.f64(double %38091), !dbg !398
  %38093 = fcmp ole double %38092, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38093, label %14330, label %38094, !dbg !400

38094:                                            ; preds = %38089
  br label %38095, !dbg !403

38095:                                            ; preds = %38094
  %38096 = load i32, ptr %10, align 4, !dbg !404
  %38097 = add nsw i32 %38096, 1, !dbg !404
  store i32 %38097, ptr %10, align 4, !dbg !404
  %38098 = load i32, ptr %10, align 4, !dbg !364
  %38099 = load i32, ptr %8, align 4, !dbg !366
  %38100 = icmp slt i32 %38098, %38099, !dbg !367
  br i1 %38100, label %38101, label %48422, !dbg !368

38101:                                            ; preds = %38095
  %38102 = load i32, ptr %10, align 4, !dbg !369
  %38103 = sext i32 %38102 to i64, !dbg !371
  %38104 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38103, !dbg !371
  %38105 = load double, ptr %6, align 8, !dbg !372
  %38106 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38107 = load double, ptr %38106, align 8, !dbg !372
  %38108 = load double, ptr %38104, align 16, !dbg !372
  %38109 = getelementptr inbounds { double, double }, ptr %38104, i32 0, i32 1, !dbg !372
  %38110 = load double, ptr %38109, align 8, !dbg !372
  %38111 = call { double, double } @make_vec(double %38105, double %38107, double %38108, double %38110), !dbg !372
  %38112 = extractvalue { double, double } %38111, 0, !dbg !372
  store double %38112, ptr %16, align 8, !dbg !372
  %38113 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38114 = extractvalue { double, double } %38111, 1, !dbg !372
  store double %38114, ptr %38113, align 8, !dbg !372
  %38115 = load i32, ptr %10, align 4, !dbg !373
  %38116 = add nsw i32 %38115, 1, !dbg !374
  %38117 = sext i32 %38116 to i64, !dbg !375
  %38118 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38117, !dbg !375
  %38119 = load double, ptr %6, align 8, !dbg !376
  %38120 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38121 = load double, ptr %38120, align 8, !dbg !376
  %38122 = load double, ptr %38118, align 16, !dbg !376
  %38123 = getelementptr inbounds { double, double }, ptr %38118, i32 0, i32 1, !dbg !376
  %38124 = load double, ptr %38123, align 8, !dbg !376
  %38125 = call { double, double } @make_vec(double %38119, double %38121, double %38122, double %38124), !dbg !376
  %38126 = extractvalue { double, double } %38125, 0, !dbg !376
  store double %38126, ptr %17, align 8, !dbg !376
  %38127 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38128 = extractvalue { double, double } %38125, 1, !dbg !376
  store double %38128, ptr %38127, align 8, !dbg !376
  %38129 = load double, ptr %16, align 8, !dbg !377
  %38130 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38131 = load double, ptr %38130, align 8, !dbg !377
  %38132 = load double, ptr %17, align 8, !dbg !377
  %38133 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38134 = load double, ptr %38133, align 8, !dbg !377
  %38135 = call double @cross(double %38129, double %38131, double %38132, double %38134), !dbg !377
  %38136 = load i32, ptr %10, align 4, !dbg !378
  %38137 = sext i32 %38136 to i64, !dbg !379
  %38138 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38137, !dbg !379
  %38139 = load double, ptr %6, align 8, !dbg !380
  %38140 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38141 = load double, ptr %38140, align 8, !dbg !380
  %38142 = load double, ptr %38138, align 16, !dbg !380
  %38143 = getelementptr inbounds { double, double }, ptr %38138, i32 0, i32 1, !dbg !380
  %38144 = load double, ptr %38143, align 8, !dbg !380
  %38145 = call { double, double } @make_vec(double %38139, double %38141, double %38142, double %38144), !dbg !380
  %38146 = extractvalue { double, double } %38145, 0, !dbg !380
  store double %38146, ptr %18, align 8, !dbg !380
  %38147 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38148 = extractvalue { double, double } %38145, 1, !dbg !380
  store double %38148, ptr %38147, align 8, !dbg !380
  %38149 = load i32, ptr %10, align 4, !dbg !381
  %38150 = add nsw i32 %38149, 1, !dbg !382
  %38151 = sext i32 %38150 to i64, !dbg !383
  %38152 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38151, !dbg !383
  %38153 = load double, ptr %6, align 8, !dbg !384
  %38154 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38155 = load double, ptr %38154, align 8, !dbg !384
  %38156 = load double, ptr %38152, align 16, !dbg !384
  %38157 = getelementptr inbounds { double, double }, ptr %38152, i32 0, i32 1, !dbg !384
  %38158 = load double, ptr %38157, align 8, !dbg !384
  %38159 = call { double, double } @make_vec(double %38153, double %38155, double %38156, double %38158), !dbg !384
  %38160 = extractvalue { double, double } %38159, 0, !dbg !384
  store double %38160, ptr %19, align 8, !dbg !384
  %38161 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38162 = extractvalue { double, double } %38159, 1, !dbg !384
  store double %38162, ptr %38161, align 8, !dbg !384
  %38163 = load double, ptr %18, align 8, !dbg !385
  %38164 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38165 = load double, ptr %38164, align 8, !dbg !385
  %38166 = load double, ptr %19, align 8, !dbg !385
  %38167 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38168 = load double, ptr %38167, align 8, !dbg !385
  %38169 = call double @dot(double %38163, double %38165, double %38166, double %38168), !dbg !385
  %38170 = call double @atan2(double noundef %38135, double noundef %38169) #6, !dbg !386
  store double %38170, ptr %13, align 8, !dbg !387
  %38171 = load double, ptr %13, align 8, !dbg !388
  %38172 = load double, ptr %14, align 8, !dbg !389
  %38173 = fadd double %38172, %38171, !dbg !389
  store double %38173, ptr %14, align 8, !dbg !389
  %38174 = load double, ptr %13, align 8, !dbg !390
  %38175 = fsub double %38174, 0x400921FB54442D18, !dbg !392
  %38176 = call double @llvm.fabs.f64(double %38175), !dbg !393
  %38177 = fcmp ole double %38176, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38177, label %14330, label %38178, !dbg !395

38178:                                            ; preds = %38101
  %38179 = load double, ptr %13, align 8, !dbg !396
  %38180 = fadd double %38179, 0x400921FB54442D18, !dbg !397
  %38181 = call double @llvm.fabs.f64(double %38180), !dbg !398
  %38182 = fcmp ole double %38181, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38182, label %14330, label %38183, !dbg !400

38183:                                            ; preds = %38178
  br label %38184, !dbg !403

38184:                                            ; preds = %38183
  %38185 = load i32, ptr %10, align 4, !dbg !404
  %38186 = add nsw i32 %38185, 1, !dbg !404
  store i32 %38186, ptr %10, align 4, !dbg !404
  %38187 = load i32, ptr %10, align 4, !dbg !364
  %38188 = load i32, ptr %8, align 4, !dbg !366
  %38189 = icmp slt i32 %38187, %38188, !dbg !367
  br i1 %38189, label %38190, label %48422, !dbg !368

38190:                                            ; preds = %38184
  %38191 = load i32, ptr %10, align 4, !dbg !369
  %38192 = sext i32 %38191 to i64, !dbg !371
  %38193 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38192, !dbg !371
  %38194 = load double, ptr %6, align 8, !dbg !372
  %38195 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38196 = load double, ptr %38195, align 8, !dbg !372
  %38197 = load double, ptr %38193, align 16, !dbg !372
  %38198 = getelementptr inbounds { double, double }, ptr %38193, i32 0, i32 1, !dbg !372
  %38199 = load double, ptr %38198, align 8, !dbg !372
  %38200 = call { double, double } @make_vec(double %38194, double %38196, double %38197, double %38199), !dbg !372
  %38201 = extractvalue { double, double } %38200, 0, !dbg !372
  store double %38201, ptr %16, align 8, !dbg !372
  %38202 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38203 = extractvalue { double, double } %38200, 1, !dbg !372
  store double %38203, ptr %38202, align 8, !dbg !372
  %38204 = load i32, ptr %10, align 4, !dbg !373
  %38205 = add nsw i32 %38204, 1, !dbg !374
  %38206 = sext i32 %38205 to i64, !dbg !375
  %38207 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38206, !dbg !375
  %38208 = load double, ptr %6, align 8, !dbg !376
  %38209 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38210 = load double, ptr %38209, align 8, !dbg !376
  %38211 = load double, ptr %38207, align 16, !dbg !376
  %38212 = getelementptr inbounds { double, double }, ptr %38207, i32 0, i32 1, !dbg !376
  %38213 = load double, ptr %38212, align 8, !dbg !376
  %38214 = call { double, double } @make_vec(double %38208, double %38210, double %38211, double %38213), !dbg !376
  %38215 = extractvalue { double, double } %38214, 0, !dbg !376
  store double %38215, ptr %17, align 8, !dbg !376
  %38216 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38217 = extractvalue { double, double } %38214, 1, !dbg !376
  store double %38217, ptr %38216, align 8, !dbg !376
  %38218 = load double, ptr %16, align 8, !dbg !377
  %38219 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38220 = load double, ptr %38219, align 8, !dbg !377
  %38221 = load double, ptr %17, align 8, !dbg !377
  %38222 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38223 = load double, ptr %38222, align 8, !dbg !377
  %38224 = call double @cross(double %38218, double %38220, double %38221, double %38223), !dbg !377
  %38225 = load i32, ptr %10, align 4, !dbg !378
  %38226 = sext i32 %38225 to i64, !dbg !379
  %38227 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38226, !dbg !379
  %38228 = load double, ptr %6, align 8, !dbg !380
  %38229 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38230 = load double, ptr %38229, align 8, !dbg !380
  %38231 = load double, ptr %38227, align 16, !dbg !380
  %38232 = getelementptr inbounds { double, double }, ptr %38227, i32 0, i32 1, !dbg !380
  %38233 = load double, ptr %38232, align 8, !dbg !380
  %38234 = call { double, double } @make_vec(double %38228, double %38230, double %38231, double %38233), !dbg !380
  %38235 = extractvalue { double, double } %38234, 0, !dbg !380
  store double %38235, ptr %18, align 8, !dbg !380
  %38236 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38237 = extractvalue { double, double } %38234, 1, !dbg !380
  store double %38237, ptr %38236, align 8, !dbg !380
  %38238 = load i32, ptr %10, align 4, !dbg !381
  %38239 = add nsw i32 %38238, 1, !dbg !382
  %38240 = sext i32 %38239 to i64, !dbg !383
  %38241 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38240, !dbg !383
  %38242 = load double, ptr %6, align 8, !dbg !384
  %38243 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38244 = load double, ptr %38243, align 8, !dbg !384
  %38245 = load double, ptr %38241, align 16, !dbg !384
  %38246 = getelementptr inbounds { double, double }, ptr %38241, i32 0, i32 1, !dbg !384
  %38247 = load double, ptr %38246, align 8, !dbg !384
  %38248 = call { double, double } @make_vec(double %38242, double %38244, double %38245, double %38247), !dbg !384
  %38249 = extractvalue { double, double } %38248, 0, !dbg !384
  store double %38249, ptr %19, align 8, !dbg !384
  %38250 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38251 = extractvalue { double, double } %38248, 1, !dbg !384
  store double %38251, ptr %38250, align 8, !dbg !384
  %38252 = load double, ptr %18, align 8, !dbg !385
  %38253 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38254 = load double, ptr %38253, align 8, !dbg !385
  %38255 = load double, ptr %19, align 8, !dbg !385
  %38256 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38257 = load double, ptr %38256, align 8, !dbg !385
  %38258 = call double @dot(double %38252, double %38254, double %38255, double %38257), !dbg !385
  %38259 = call double @atan2(double noundef %38224, double noundef %38258) #6, !dbg !386
  store double %38259, ptr %13, align 8, !dbg !387
  %38260 = load double, ptr %13, align 8, !dbg !388
  %38261 = load double, ptr %14, align 8, !dbg !389
  %38262 = fadd double %38261, %38260, !dbg !389
  store double %38262, ptr %14, align 8, !dbg !389
  %38263 = load double, ptr %13, align 8, !dbg !390
  %38264 = fsub double %38263, 0x400921FB54442D18, !dbg !392
  %38265 = call double @llvm.fabs.f64(double %38264), !dbg !393
  %38266 = fcmp ole double %38265, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38266, label %14330, label %38267, !dbg !395

38267:                                            ; preds = %38190
  %38268 = load double, ptr %13, align 8, !dbg !396
  %38269 = fadd double %38268, 0x400921FB54442D18, !dbg !397
  %38270 = call double @llvm.fabs.f64(double %38269), !dbg !398
  %38271 = fcmp ole double %38270, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38271, label %14330, label %38272, !dbg !400

38272:                                            ; preds = %38267
  br label %38273, !dbg !403

38273:                                            ; preds = %38272
  %38274 = load i32, ptr %10, align 4, !dbg !404
  %38275 = add nsw i32 %38274, 1, !dbg !404
  store i32 %38275, ptr %10, align 4, !dbg !404
  %38276 = load i32, ptr %10, align 4, !dbg !364
  %38277 = load i32, ptr %8, align 4, !dbg !366
  %38278 = icmp slt i32 %38276, %38277, !dbg !367
  br i1 %38278, label %38279, label %48422, !dbg !368

38279:                                            ; preds = %38273
  %38280 = load i32, ptr %10, align 4, !dbg !369
  %38281 = sext i32 %38280 to i64, !dbg !371
  %38282 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38281, !dbg !371
  %38283 = load double, ptr %6, align 8, !dbg !372
  %38284 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38285 = load double, ptr %38284, align 8, !dbg !372
  %38286 = load double, ptr %38282, align 16, !dbg !372
  %38287 = getelementptr inbounds { double, double }, ptr %38282, i32 0, i32 1, !dbg !372
  %38288 = load double, ptr %38287, align 8, !dbg !372
  %38289 = call { double, double } @make_vec(double %38283, double %38285, double %38286, double %38288), !dbg !372
  %38290 = extractvalue { double, double } %38289, 0, !dbg !372
  store double %38290, ptr %16, align 8, !dbg !372
  %38291 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38292 = extractvalue { double, double } %38289, 1, !dbg !372
  store double %38292, ptr %38291, align 8, !dbg !372
  %38293 = load i32, ptr %10, align 4, !dbg !373
  %38294 = add nsw i32 %38293, 1, !dbg !374
  %38295 = sext i32 %38294 to i64, !dbg !375
  %38296 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38295, !dbg !375
  %38297 = load double, ptr %6, align 8, !dbg !376
  %38298 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38299 = load double, ptr %38298, align 8, !dbg !376
  %38300 = load double, ptr %38296, align 16, !dbg !376
  %38301 = getelementptr inbounds { double, double }, ptr %38296, i32 0, i32 1, !dbg !376
  %38302 = load double, ptr %38301, align 8, !dbg !376
  %38303 = call { double, double } @make_vec(double %38297, double %38299, double %38300, double %38302), !dbg !376
  %38304 = extractvalue { double, double } %38303, 0, !dbg !376
  store double %38304, ptr %17, align 8, !dbg !376
  %38305 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38306 = extractvalue { double, double } %38303, 1, !dbg !376
  store double %38306, ptr %38305, align 8, !dbg !376
  %38307 = load double, ptr %16, align 8, !dbg !377
  %38308 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38309 = load double, ptr %38308, align 8, !dbg !377
  %38310 = load double, ptr %17, align 8, !dbg !377
  %38311 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38312 = load double, ptr %38311, align 8, !dbg !377
  %38313 = call double @cross(double %38307, double %38309, double %38310, double %38312), !dbg !377
  %38314 = load i32, ptr %10, align 4, !dbg !378
  %38315 = sext i32 %38314 to i64, !dbg !379
  %38316 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38315, !dbg !379
  %38317 = load double, ptr %6, align 8, !dbg !380
  %38318 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38319 = load double, ptr %38318, align 8, !dbg !380
  %38320 = load double, ptr %38316, align 16, !dbg !380
  %38321 = getelementptr inbounds { double, double }, ptr %38316, i32 0, i32 1, !dbg !380
  %38322 = load double, ptr %38321, align 8, !dbg !380
  %38323 = call { double, double } @make_vec(double %38317, double %38319, double %38320, double %38322), !dbg !380
  %38324 = extractvalue { double, double } %38323, 0, !dbg !380
  store double %38324, ptr %18, align 8, !dbg !380
  %38325 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38326 = extractvalue { double, double } %38323, 1, !dbg !380
  store double %38326, ptr %38325, align 8, !dbg !380
  %38327 = load i32, ptr %10, align 4, !dbg !381
  %38328 = add nsw i32 %38327, 1, !dbg !382
  %38329 = sext i32 %38328 to i64, !dbg !383
  %38330 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38329, !dbg !383
  %38331 = load double, ptr %6, align 8, !dbg !384
  %38332 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38333 = load double, ptr %38332, align 8, !dbg !384
  %38334 = load double, ptr %38330, align 16, !dbg !384
  %38335 = getelementptr inbounds { double, double }, ptr %38330, i32 0, i32 1, !dbg !384
  %38336 = load double, ptr %38335, align 8, !dbg !384
  %38337 = call { double, double } @make_vec(double %38331, double %38333, double %38334, double %38336), !dbg !384
  %38338 = extractvalue { double, double } %38337, 0, !dbg !384
  store double %38338, ptr %19, align 8, !dbg !384
  %38339 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38340 = extractvalue { double, double } %38337, 1, !dbg !384
  store double %38340, ptr %38339, align 8, !dbg !384
  %38341 = load double, ptr %18, align 8, !dbg !385
  %38342 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38343 = load double, ptr %38342, align 8, !dbg !385
  %38344 = load double, ptr %19, align 8, !dbg !385
  %38345 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38346 = load double, ptr %38345, align 8, !dbg !385
  %38347 = call double @dot(double %38341, double %38343, double %38344, double %38346), !dbg !385
  %38348 = call double @atan2(double noundef %38313, double noundef %38347) #6, !dbg !386
  store double %38348, ptr %13, align 8, !dbg !387
  %38349 = load double, ptr %13, align 8, !dbg !388
  %38350 = load double, ptr %14, align 8, !dbg !389
  %38351 = fadd double %38350, %38349, !dbg !389
  store double %38351, ptr %14, align 8, !dbg !389
  %38352 = load double, ptr %13, align 8, !dbg !390
  %38353 = fsub double %38352, 0x400921FB54442D18, !dbg !392
  %38354 = call double @llvm.fabs.f64(double %38353), !dbg !393
  %38355 = fcmp ole double %38354, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38355, label %14330, label %38356, !dbg !395

38356:                                            ; preds = %38279
  %38357 = load double, ptr %13, align 8, !dbg !396
  %38358 = fadd double %38357, 0x400921FB54442D18, !dbg !397
  %38359 = call double @llvm.fabs.f64(double %38358), !dbg !398
  %38360 = fcmp ole double %38359, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38360, label %14330, label %38361, !dbg !400

38361:                                            ; preds = %38356
  br label %38362, !dbg !403

38362:                                            ; preds = %38361
  %38363 = load i32, ptr %10, align 4, !dbg !404
  %38364 = add nsw i32 %38363, 1, !dbg !404
  store i32 %38364, ptr %10, align 4, !dbg !404
  %38365 = load i32, ptr %10, align 4, !dbg !364
  %38366 = load i32, ptr %8, align 4, !dbg !366
  %38367 = icmp slt i32 %38365, %38366, !dbg !367
  br i1 %38367, label %38368, label %48422, !dbg !368

38368:                                            ; preds = %38362
  %38369 = load i32, ptr %10, align 4, !dbg !369
  %38370 = sext i32 %38369 to i64, !dbg !371
  %38371 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38370, !dbg !371
  %38372 = load double, ptr %6, align 8, !dbg !372
  %38373 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38374 = load double, ptr %38373, align 8, !dbg !372
  %38375 = load double, ptr %38371, align 16, !dbg !372
  %38376 = getelementptr inbounds { double, double }, ptr %38371, i32 0, i32 1, !dbg !372
  %38377 = load double, ptr %38376, align 8, !dbg !372
  %38378 = call { double, double } @make_vec(double %38372, double %38374, double %38375, double %38377), !dbg !372
  %38379 = extractvalue { double, double } %38378, 0, !dbg !372
  store double %38379, ptr %16, align 8, !dbg !372
  %38380 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38381 = extractvalue { double, double } %38378, 1, !dbg !372
  store double %38381, ptr %38380, align 8, !dbg !372
  %38382 = load i32, ptr %10, align 4, !dbg !373
  %38383 = add nsw i32 %38382, 1, !dbg !374
  %38384 = sext i32 %38383 to i64, !dbg !375
  %38385 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38384, !dbg !375
  %38386 = load double, ptr %6, align 8, !dbg !376
  %38387 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38388 = load double, ptr %38387, align 8, !dbg !376
  %38389 = load double, ptr %38385, align 16, !dbg !376
  %38390 = getelementptr inbounds { double, double }, ptr %38385, i32 0, i32 1, !dbg !376
  %38391 = load double, ptr %38390, align 8, !dbg !376
  %38392 = call { double, double } @make_vec(double %38386, double %38388, double %38389, double %38391), !dbg !376
  %38393 = extractvalue { double, double } %38392, 0, !dbg !376
  store double %38393, ptr %17, align 8, !dbg !376
  %38394 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38395 = extractvalue { double, double } %38392, 1, !dbg !376
  store double %38395, ptr %38394, align 8, !dbg !376
  %38396 = load double, ptr %16, align 8, !dbg !377
  %38397 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38398 = load double, ptr %38397, align 8, !dbg !377
  %38399 = load double, ptr %17, align 8, !dbg !377
  %38400 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38401 = load double, ptr %38400, align 8, !dbg !377
  %38402 = call double @cross(double %38396, double %38398, double %38399, double %38401), !dbg !377
  %38403 = load i32, ptr %10, align 4, !dbg !378
  %38404 = sext i32 %38403 to i64, !dbg !379
  %38405 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38404, !dbg !379
  %38406 = load double, ptr %6, align 8, !dbg !380
  %38407 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38408 = load double, ptr %38407, align 8, !dbg !380
  %38409 = load double, ptr %38405, align 16, !dbg !380
  %38410 = getelementptr inbounds { double, double }, ptr %38405, i32 0, i32 1, !dbg !380
  %38411 = load double, ptr %38410, align 8, !dbg !380
  %38412 = call { double, double } @make_vec(double %38406, double %38408, double %38409, double %38411), !dbg !380
  %38413 = extractvalue { double, double } %38412, 0, !dbg !380
  store double %38413, ptr %18, align 8, !dbg !380
  %38414 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38415 = extractvalue { double, double } %38412, 1, !dbg !380
  store double %38415, ptr %38414, align 8, !dbg !380
  %38416 = load i32, ptr %10, align 4, !dbg !381
  %38417 = add nsw i32 %38416, 1, !dbg !382
  %38418 = sext i32 %38417 to i64, !dbg !383
  %38419 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38418, !dbg !383
  %38420 = load double, ptr %6, align 8, !dbg !384
  %38421 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38422 = load double, ptr %38421, align 8, !dbg !384
  %38423 = load double, ptr %38419, align 16, !dbg !384
  %38424 = getelementptr inbounds { double, double }, ptr %38419, i32 0, i32 1, !dbg !384
  %38425 = load double, ptr %38424, align 8, !dbg !384
  %38426 = call { double, double } @make_vec(double %38420, double %38422, double %38423, double %38425), !dbg !384
  %38427 = extractvalue { double, double } %38426, 0, !dbg !384
  store double %38427, ptr %19, align 8, !dbg !384
  %38428 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38429 = extractvalue { double, double } %38426, 1, !dbg !384
  store double %38429, ptr %38428, align 8, !dbg !384
  %38430 = load double, ptr %18, align 8, !dbg !385
  %38431 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38432 = load double, ptr %38431, align 8, !dbg !385
  %38433 = load double, ptr %19, align 8, !dbg !385
  %38434 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38435 = load double, ptr %38434, align 8, !dbg !385
  %38436 = call double @dot(double %38430, double %38432, double %38433, double %38435), !dbg !385
  %38437 = call double @atan2(double noundef %38402, double noundef %38436) #6, !dbg !386
  store double %38437, ptr %13, align 8, !dbg !387
  %38438 = load double, ptr %13, align 8, !dbg !388
  %38439 = load double, ptr %14, align 8, !dbg !389
  %38440 = fadd double %38439, %38438, !dbg !389
  store double %38440, ptr %14, align 8, !dbg !389
  %38441 = load double, ptr %13, align 8, !dbg !390
  %38442 = fsub double %38441, 0x400921FB54442D18, !dbg !392
  %38443 = call double @llvm.fabs.f64(double %38442), !dbg !393
  %38444 = fcmp ole double %38443, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38444, label %14330, label %38445, !dbg !395

38445:                                            ; preds = %38368
  %38446 = load double, ptr %13, align 8, !dbg !396
  %38447 = fadd double %38446, 0x400921FB54442D18, !dbg !397
  %38448 = call double @llvm.fabs.f64(double %38447), !dbg !398
  %38449 = fcmp ole double %38448, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38449, label %14330, label %38450, !dbg !400

38450:                                            ; preds = %38445
  br label %38451, !dbg !403

38451:                                            ; preds = %38450
  %38452 = load i32, ptr %10, align 4, !dbg !404
  %38453 = add nsw i32 %38452, 1, !dbg !404
  store i32 %38453, ptr %10, align 4, !dbg !404
  %38454 = load i32, ptr %10, align 4, !dbg !364
  %38455 = load i32, ptr %8, align 4, !dbg !366
  %38456 = icmp slt i32 %38454, %38455, !dbg !367
  br i1 %38456, label %38457, label %48422, !dbg !368

38457:                                            ; preds = %38451
  %38458 = load i32, ptr %10, align 4, !dbg !369
  %38459 = sext i32 %38458 to i64, !dbg !371
  %38460 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38459, !dbg !371
  %38461 = load double, ptr %6, align 8, !dbg !372
  %38462 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38463 = load double, ptr %38462, align 8, !dbg !372
  %38464 = load double, ptr %38460, align 16, !dbg !372
  %38465 = getelementptr inbounds { double, double }, ptr %38460, i32 0, i32 1, !dbg !372
  %38466 = load double, ptr %38465, align 8, !dbg !372
  %38467 = call { double, double } @make_vec(double %38461, double %38463, double %38464, double %38466), !dbg !372
  %38468 = extractvalue { double, double } %38467, 0, !dbg !372
  store double %38468, ptr %16, align 8, !dbg !372
  %38469 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38470 = extractvalue { double, double } %38467, 1, !dbg !372
  store double %38470, ptr %38469, align 8, !dbg !372
  %38471 = load i32, ptr %10, align 4, !dbg !373
  %38472 = add nsw i32 %38471, 1, !dbg !374
  %38473 = sext i32 %38472 to i64, !dbg !375
  %38474 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38473, !dbg !375
  %38475 = load double, ptr %6, align 8, !dbg !376
  %38476 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38477 = load double, ptr %38476, align 8, !dbg !376
  %38478 = load double, ptr %38474, align 16, !dbg !376
  %38479 = getelementptr inbounds { double, double }, ptr %38474, i32 0, i32 1, !dbg !376
  %38480 = load double, ptr %38479, align 8, !dbg !376
  %38481 = call { double, double } @make_vec(double %38475, double %38477, double %38478, double %38480), !dbg !376
  %38482 = extractvalue { double, double } %38481, 0, !dbg !376
  store double %38482, ptr %17, align 8, !dbg !376
  %38483 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38484 = extractvalue { double, double } %38481, 1, !dbg !376
  store double %38484, ptr %38483, align 8, !dbg !376
  %38485 = load double, ptr %16, align 8, !dbg !377
  %38486 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38487 = load double, ptr %38486, align 8, !dbg !377
  %38488 = load double, ptr %17, align 8, !dbg !377
  %38489 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38490 = load double, ptr %38489, align 8, !dbg !377
  %38491 = call double @cross(double %38485, double %38487, double %38488, double %38490), !dbg !377
  %38492 = load i32, ptr %10, align 4, !dbg !378
  %38493 = sext i32 %38492 to i64, !dbg !379
  %38494 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38493, !dbg !379
  %38495 = load double, ptr %6, align 8, !dbg !380
  %38496 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38497 = load double, ptr %38496, align 8, !dbg !380
  %38498 = load double, ptr %38494, align 16, !dbg !380
  %38499 = getelementptr inbounds { double, double }, ptr %38494, i32 0, i32 1, !dbg !380
  %38500 = load double, ptr %38499, align 8, !dbg !380
  %38501 = call { double, double } @make_vec(double %38495, double %38497, double %38498, double %38500), !dbg !380
  %38502 = extractvalue { double, double } %38501, 0, !dbg !380
  store double %38502, ptr %18, align 8, !dbg !380
  %38503 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38504 = extractvalue { double, double } %38501, 1, !dbg !380
  store double %38504, ptr %38503, align 8, !dbg !380
  %38505 = load i32, ptr %10, align 4, !dbg !381
  %38506 = add nsw i32 %38505, 1, !dbg !382
  %38507 = sext i32 %38506 to i64, !dbg !383
  %38508 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38507, !dbg !383
  %38509 = load double, ptr %6, align 8, !dbg !384
  %38510 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38511 = load double, ptr %38510, align 8, !dbg !384
  %38512 = load double, ptr %38508, align 16, !dbg !384
  %38513 = getelementptr inbounds { double, double }, ptr %38508, i32 0, i32 1, !dbg !384
  %38514 = load double, ptr %38513, align 8, !dbg !384
  %38515 = call { double, double } @make_vec(double %38509, double %38511, double %38512, double %38514), !dbg !384
  %38516 = extractvalue { double, double } %38515, 0, !dbg !384
  store double %38516, ptr %19, align 8, !dbg !384
  %38517 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38518 = extractvalue { double, double } %38515, 1, !dbg !384
  store double %38518, ptr %38517, align 8, !dbg !384
  %38519 = load double, ptr %18, align 8, !dbg !385
  %38520 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38521 = load double, ptr %38520, align 8, !dbg !385
  %38522 = load double, ptr %19, align 8, !dbg !385
  %38523 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38524 = load double, ptr %38523, align 8, !dbg !385
  %38525 = call double @dot(double %38519, double %38521, double %38522, double %38524), !dbg !385
  %38526 = call double @atan2(double noundef %38491, double noundef %38525) #6, !dbg !386
  store double %38526, ptr %13, align 8, !dbg !387
  %38527 = load double, ptr %13, align 8, !dbg !388
  %38528 = load double, ptr %14, align 8, !dbg !389
  %38529 = fadd double %38528, %38527, !dbg !389
  store double %38529, ptr %14, align 8, !dbg !389
  %38530 = load double, ptr %13, align 8, !dbg !390
  %38531 = fsub double %38530, 0x400921FB54442D18, !dbg !392
  %38532 = call double @llvm.fabs.f64(double %38531), !dbg !393
  %38533 = fcmp ole double %38532, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38533, label %14330, label %38534, !dbg !395

38534:                                            ; preds = %38457
  %38535 = load double, ptr %13, align 8, !dbg !396
  %38536 = fadd double %38535, 0x400921FB54442D18, !dbg !397
  %38537 = call double @llvm.fabs.f64(double %38536), !dbg !398
  %38538 = fcmp ole double %38537, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38538, label %14330, label %38539, !dbg !400

38539:                                            ; preds = %38534
  br label %38540, !dbg !403

38540:                                            ; preds = %38539
  %38541 = load i32, ptr %10, align 4, !dbg !404
  %38542 = add nsw i32 %38541, 1, !dbg !404
  store i32 %38542, ptr %10, align 4, !dbg !404
  %38543 = load i32, ptr %10, align 4, !dbg !364
  %38544 = load i32, ptr %8, align 4, !dbg !366
  %38545 = icmp slt i32 %38543, %38544, !dbg !367
  br i1 %38545, label %38546, label %48422, !dbg !368

38546:                                            ; preds = %38540
  %38547 = load i32, ptr %10, align 4, !dbg !369
  %38548 = sext i32 %38547 to i64, !dbg !371
  %38549 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38548, !dbg !371
  %38550 = load double, ptr %6, align 8, !dbg !372
  %38551 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38552 = load double, ptr %38551, align 8, !dbg !372
  %38553 = load double, ptr %38549, align 16, !dbg !372
  %38554 = getelementptr inbounds { double, double }, ptr %38549, i32 0, i32 1, !dbg !372
  %38555 = load double, ptr %38554, align 8, !dbg !372
  %38556 = call { double, double } @make_vec(double %38550, double %38552, double %38553, double %38555), !dbg !372
  %38557 = extractvalue { double, double } %38556, 0, !dbg !372
  store double %38557, ptr %16, align 8, !dbg !372
  %38558 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38559 = extractvalue { double, double } %38556, 1, !dbg !372
  store double %38559, ptr %38558, align 8, !dbg !372
  %38560 = load i32, ptr %10, align 4, !dbg !373
  %38561 = add nsw i32 %38560, 1, !dbg !374
  %38562 = sext i32 %38561 to i64, !dbg !375
  %38563 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38562, !dbg !375
  %38564 = load double, ptr %6, align 8, !dbg !376
  %38565 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38566 = load double, ptr %38565, align 8, !dbg !376
  %38567 = load double, ptr %38563, align 16, !dbg !376
  %38568 = getelementptr inbounds { double, double }, ptr %38563, i32 0, i32 1, !dbg !376
  %38569 = load double, ptr %38568, align 8, !dbg !376
  %38570 = call { double, double } @make_vec(double %38564, double %38566, double %38567, double %38569), !dbg !376
  %38571 = extractvalue { double, double } %38570, 0, !dbg !376
  store double %38571, ptr %17, align 8, !dbg !376
  %38572 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38573 = extractvalue { double, double } %38570, 1, !dbg !376
  store double %38573, ptr %38572, align 8, !dbg !376
  %38574 = load double, ptr %16, align 8, !dbg !377
  %38575 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38576 = load double, ptr %38575, align 8, !dbg !377
  %38577 = load double, ptr %17, align 8, !dbg !377
  %38578 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38579 = load double, ptr %38578, align 8, !dbg !377
  %38580 = call double @cross(double %38574, double %38576, double %38577, double %38579), !dbg !377
  %38581 = load i32, ptr %10, align 4, !dbg !378
  %38582 = sext i32 %38581 to i64, !dbg !379
  %38583 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38582, !dbg !379
  %38584 = load double, ptr %6, align 8, !dbg !380
  %38585 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38586 = load double, ptr %38585, align 8, !dbg !380
  %38587 = load double, ptr %38583, align 16, !dbg !380
  %38588 = getelementptr inbounds { double, double }, ptr %38583, i32 0, i32 1, !dbg !380
  %38589 = load double, ptr %38588, align 8, !dbg !380
  %38590 = call { double, double } @make_vec(double %38584, double %38586, double %38587, double %38589), !dbg !380
  %38591 = extractvalue { double, double } %38590, 0, !dbg !380
  store double %38591, ptr %18, align 8, !dbg !380
  %38592 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38593 = extractvalue { double, double } %38590, 1, !dbg !380
  store double %38593, ptr %38592, align 8, !dbg !380
  %38594 = load i32, ptr %10, align 4, !dbg !381
  %38595 = add nsw i32 %38594, 1, !dbg !382
  %38596 = sext i32 %38595 to i64, !dbg !383
  %38597 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38596, !dbg !383
  %38598 = load double, ptr %6, align 8, !dbg !384
  %38599 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38600 = load double, ptr %38599, align 8, !dbg !384
  %38601 = load double, ptr %38597, align 16, !dbg !384
  %38602 = getelementptr inbounds { double, double }, ptr %38597, i32 0, i32 1, !dbg !384
  %38603 = load double, ptr %38602, align 8, !dbg !384
  %38604 = call { double, double } @make_vec(double %38598, double %38600, double %38601, double %38603), !dbg !384
  %38605 = extractvalue { double, double } %38604, 0, !dbg !384
  store double %38605, ptr %19, align 8, !dbg !384
  %38606 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38607 = extractvalue { double, double } %38604, 1, !dbg !384
  store double %38607, ptr %38606, align 8, !dbg !384
  %38608 = load double, ptr %18, align 8, !dbg !385
  %38609 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38610 = load double, ptr %38609, align 8, !dbg !385
  %38611 = load double, ptr %19, align 8, !dbg !385
  %38612 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38613 = load double, ptr %38612, align 8, !dbg !385
  %38614 = call double @dot(double %38608, double %38610, double %38611, double %38613), !dbg !385
  %38615 = call double @atan2(double noundef %38580, double noundef %38614) #6, !dbg !386
  store double %38615, ptr %13, align 8, !dbg !387
  %38616 = load double, ptr %13, align 8, !dbg !388
  %38617 = load double, ptr %14, align 8, !dbg !389
  %38618 = fadd double %38617, %38616, !dbg !389
  store double %38618, ptr %14, align 8, !dbg !389
  %38619 = load double, ptr %13, align 8, !dbg !390
  %38620 = fsub double %38619, 0x400921FB54442D18, !dbg !392
  %38621 = call double @llvm.fabs.f64(double %38620), !dbg !393
  %38622 = fcmp ole double %38621, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38622, label %14330, label %38623, !dbg !395

38623:                                            ; preds = %38546
  %38624 = load double, ptr %13, align 8, !dbg !396
  %38625 = fadd double %38624, 0x400921FB54442D18, !dbg !397
  %38626 = call double @llvm.fabs.f64(double %38625), !dbg !398
  %38627 = fcmp ole double %38626, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38627, label %14330, label %38628, !dbg !400

38628:                                            ; preds = %38623
  br label %38629, !dbg !403

38629:                                            ; preds = %38628
  %38630 = load i32, ptr %10, align 4, !dbg !404
  %38631 = add nsw i32 %38630, 1, !dbg !404
  store i32 %38631, ptr %10, align 4, !dbg !404
  %38632 = load i32, ptr %10, align 4, !dbg !364
  %38633 = load i32, ptr %8, align 4, !dbg !366
  %38634 = icmp slt i32 %38632, %38633, !dbg !367
  br i1 %38634, label %38635, label %48422, !dbg !368

38635:                                            ; preds = %38629
  %38636 = load i32, ptr %10, align 4, !dbg !369
  %38637 = sext i32 %38636 to i64, !dbg !371
  %38638 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38637, !dbg !371
  %38639 = load double, ptr %6, align 8, !dbg !372
  %38640 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38641 = load double, ptr %38640, align 8, !dbg !372
  %38642 = load double, ptr %38638, align 16, !dbg !372
  %38643 = getelementptr inbounds { double, double }, ptr %38638, i32 0, i32 1, !dbg !372
  %38644 = load double, ptr %38643, align 8, !dbg !372
  %38645 = call { double, double } @make_vec(double %38639, double %38641, double %38642, double %38644), !dbg !372
  %38646 = extractvalue { double, double } %38645, 0, !dbg !372
  store double %38646, ptr %16, align 8, !dbg !372
  %38647 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38648 = extractvalue { double, double } %38645, 1, !dbg !372
  store double %38648, ptr %38647, align 8, !dbg !372
  %38649 = load i32, ptr %10, align 4, !dbg !373
  %38650 = add nsw i32 %38649, 1, !dbg !374
  %38651 = sext i32 %38650 to i64, !dbg !375
  %38652 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38651, !dbg !375
  %38653 = load double, ptr %6, align 8, !dbg !376
  %38654 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38655 = load double, ptr %38654, align 8, !dbg !376
  %38656 = load double, ptr %38652, align 16, !dbg !376
  %38657 = getelementptr inbounds { double, double }, ptr %38652, i32 0, i32 1, !dbg !376
  %38658 = load double, ptr %38657, align 8, !dbg !376
  %38659 = call { double, double } @make_vec(double %38653, double %38655, double %38656, double %38658), !dbg !376
  %38660 = extractvalue { double, double } %38659, 0, !dbg !376
  store double %38660, ptr %17, align 8, !dbg !376
  %38661 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38662 = extractvalue { double, double } %38659, 1, !dbg !376
  store double %38662, ptr %38661, align 8, !dbg !376
  %38663 = load double, ptr %16, align 8, !dbg !377
  %38664 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38665 = load double, ptr %38664, align 8, !dbg !377
  %38666 = load double, ptr %17, align 8, !dbg !377
  %38667 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38668 = load double, ptr %38667, align 8, !dbg !377
  %38669 = call double @cross(double %38663, double %38665, double %38666, double %38668), !dbg !377
  %38670 = load i32, ptr %10, align 4, !dbg !378
  %38671 = sext i32 %38670 to i64, !dbg !379
  %38672 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38671, !dbg !379
  %38673 = load double, ptr %6, align 8, !dbg !380
  %38674 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38675 = load double, ptr %38674, align 8, !dbg !380
  %38676 = load double, ptr %38672, align 16, !dbg !380
  %38677 = getelementptr inbounds { double, double }, ptr %38672, i32 0, i32 1, !dbg !380
  %38678 = load double, ptr %38677, align 8, !dbg !380
  %38679 = call { double, double } @make_vec(double %38673, double %38675, double %38676, double %38678), !dbg !380
  %38680 = extractvalue { double, double } %38679, 0, !dbg !380
  store double %38680, ptr %18, align 8, !dbg !380
  %38681 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38682 = extractvalue { double, double } %38679, 1, !dbg !380
  store double %38682, ptr %38681, align 8, !dbg !380
  %38683 = load i32, ptr %10, align 4, !dbg !381
  %38684 = add nsw i32 %38683, 1, !dbg !382
  %38685 = sext i32 %38684 to i64, !dbg !383
  %38686 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38685, !dbg !383
  %38687 = load double, ptr %6, align 8, !dbg !384
  %38688 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38689 = load double, ptr %38688, align 8, !dbg !384
  %38690 = load double, ptr %38686, align 16, !dbg !384
  %38691 = getelementptr inbounds { double, double }, ptr %38686, i32 0, i32 1, !dbg !384
  %38692 = load double, ptr %38691, align 8, !dbg !384
  %38693 = call { double, double } @make_vec(double %38687, double %38689, double %38690, double %38692), !dbg !384
  %38694 = extractvalue { double, double } %38693, 0, !dbg !384
  store double %38694, ptr %19, align 8, !dbg !384
  %38695 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38696 = extractvalue { double, double } %38693, 1, !dbg !384
  store double %38696, ptr %38695, align 8, !dbg !384
  %38697 = load double, ptr %18, align 8, !dbg !385
  %38698 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38699 = load double, ptr %38698, align 8, !dbg !385
  %38700 = load double, ptr %19, align 8, !dbg !385
  %38701 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38702 = load double, ptr %38701, align 8, !dbg !385
  %38703 = call double @dot(double %38697, double %38699, double %38700, double %38702), !dbg !385
  %38704 = call double @atan2(double noundef %38669, double noundef %38703) #6, !dbg !386
  store double %38704, ptr %13, align 8, !dbg !387
  %38705 = load double, ptr %13, align 8, !dbg !388
  %38706 = load double, ptr %14, align 8, !dbg !389
  %38707 = fadd double %38706, %38705, !dbg !389
  store double %38707, ptr %14, align 8, !dbg !389
  %38708 = load double, ptr %13, align 8, !dbg !390
  %38709 = fsub double %38708, 0x400921FB54442D18, !dbg !392
  %38710 = call double @llvm.fabs.f64(double %38709), !dbg !393
  %38711 = fcmp ole double %38710, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38711, label %14330, label %38712, !dbg !395

38712:                                            ; preds = %38635
  %38713 = load double, ptr %13, align 8, !dbg !396
  %38714 = fadd double %38713, 0x400921FB54442D18, !dbg !397
  %38715 = call double @llvm.fabs.f64(double %38714), !dbg !398
  %38716 = fcmp ole double %38715, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38716, label %14330, label %38717, !dbg !400

38717:                                            ; preds = %38712
  br label %38718, !dbg !403

38718:                                            ; preds = %38717
  %38719 = load i32, ptr %10, align 4, !dbg !404
  %38720 = add nsw i32 %38719, 1, !dbg !404
  store i32 %38720, ptr %10, align 4, !dbg !404
  %38721 = load i32, ptr %10, align 4, !dbg !364
  %38722 = load i32, ptr %8, align 4, !dbg !366
  %38723 = icmp slt i32 %38721, %38722, !dbg !367
  br i1 %38723, label %38724, label %48422, !dbg !368

38724:                                            ; preds = %38718
  %38725 = load i32, ptr %10, align 4, !dbg !369
  %38726 = sext i32 %38725 to i64, !dbg !371
  %38727 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38726, !dbg !371
  %38728 = load double, ptr %6, align 8, !dbg !372
  %38729 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38730 = load double, ptr %38729, align 8, !dbg !372
  %38731 = load double, ptr %38727, align 16, !dbg !372
  %38732 = getelementptr inbounds { double, double }, ptr %38727, i32 0, i32 1, !dbg !372
  %38733 = load double, ptr %38732, align 8, !dbg !372
  %38734 = call { double, double } @make_vec(double %38728, double %38730, double %38731, double %38733), !dbg !372
  %38735 = extractvalue { double, double } %38734, 0, !dbg !372
  store double %38735, ptr %16, align 8, !dbg !372
  %38736 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38737 = extractvalue { double, double } %38734, 1, !dbg !372
  store double %38737, ptr %38736, align 8, !dbg !372
  %38738 = load i32, ptr %10, align 4, !dbg !373
  %38739 = add nsw i32 %38738, 1, !dbg !374
  %38740 = sext i32 %38739 to i64, !dbg !375
  %38741 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38740, !dbg !375
  %38742 = load double, ptr %6, align 8, !dbg !376
  %38743 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38744 = load double, ptr %38743, align 8, !dbg !376
  %38745 = load double, ptr %38741, align 16, !dbg !376
  %38746 = getelementptr inbounds { double, double }, ptr %38741, i32 0, i32 1, !dbg !376
  %38747 = load double, ptr %38746, align 8, !dbg !376
  %38748 = call { double, double } @make_vec(double %38742, double %38744, double %38745, double %38747), !dbg !376
  %38749 = extractvalue { double, double } %38748, 0, !dbg !376
  store double %38749, ptr %17, align 8, !dbg !376
  %38750 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38751 = extractvalue { double, double } %38748, 1, !dbg !376
  store double %38751, ptr %38750, align 8, !dbg !376
  %38752 = load double, ptr %16, align 8, !dbg !377
  %38753 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38754 = load double, ptr %38753, align 8, !dbg !377
  %38755 = load double, ptr %17, align 8, !dbg !377
  %38756 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38757 = load double, ptr %38756, align 8, !dbg !377
  %38758 = call double @cross(double %38752, double %38754, double %38755, double %38757), !dbg !377
  %38759 = load i32, ptr %10, align 4, !dbg !378
  %38760 = sext i32 %38759 to i64, !dbg !379
  %38761 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38760, !dbg !379
  %38762 = load double, ptr %6, align 8, !dbg !380
  %38763 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38764 = load double, ptr %38763, align 8, !dbg !380
  %38765 = load double, ptr %38761, align 16, !dbg !380
  %38766 = getelementptr inbounds { double, double }, ptr %38761, i32 0, i32 1, !dbg !380
  %38767 = load double, ptr %38766, align 8, !dbg !380
  %38768 = call { double, double } @make_vec(double %38762, double %38764, double %38765, double %38767), !dbg !380
  %38769 = extractvalue { double, double } %38768, 0, !dbg !380
  store double %38769, ptr %18, align 8, !dbg !380
  %38770 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38771 = extractvalue { double, double } %38768, 1, !dbg !380
  store double %38771, ptr %38770, align 8, !dbg !380
  %38772 = load i32, ptr %10, align 4, !dbg !381
  %38773 = add nsw i32 %38772, 1, !dbg !382
  %38774 = sext i32 %38773 to i64, !dbg !383
  %38775 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38774, !dbg !383
  %38776 = load double, ptr %6, align 8, !dbg !384
  %38777 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38778 = load double, ptr %38777, align 8, !dbg !384
  %38779 = load double, ptr %38775, align 16, !dbg !384
  %38780 = getelementptr inbounds { double, double }, ptr %38775, i32 0, i32 1, !dbg !384
  %38781 = load double, ptr %38780, align 8, !dbg !384
  %38782 = call { double, double } @make_vec(double %38776, double %38778, double %38779, double %38781), !dbg !384
  %38783 = extractvalue { double, double } %38782, 0, !dbg !384
  store double %38783, ptr %19, align 8, !dbg !384
  %38784 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38785 = extractvalue { double, double } %38782, 1, !dbg !384
  store double %38785, ptr %38784, align 8, !dbg !384
  %38786 = load double, ptr %18, align 8, !dbg !385
  %38787 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38788 = load double, ptr %38787, align 8, !dbg !385
  %38789 = load double, ptr %19, align 8, !dbg !385
  %38790 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38791 = load double, ptr %38790, align 8, !dbg !385
  %38792 = call double @dot(double %38786, double %38788, double %38789, double %38791), !dbg !385
  %38793 = call double @atan2(double noundef %38758, double noundef %38792) #6, !dbg !386
  store double %38793, ptr %13, align 8, !dbg !387
  %38794 = load double, ptr %13, align 8, !dbg !388
  %38795 = load double, ptr %14, align 8, !dbg !389
  %38796 = fadd double %38795, %38794, !dbg !389
  store double %38796, ptr %14, align 8, !dbg !389
  %38797 = load double, ptr %13, align 8, !dbg !390
  %38798 = fsub double %38797, 0x400921FB54442D18, !dbg !392
  %38799 = call double @llvm.fabs.f64(double %38798), !dbg !393
  %38800 = fcmp ole double %38799, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38800, label %14330, label %38801, !dbg !395

38801:                                            ; preds = %38724
  %38802 = load double, ptr %13, align 8, !dbg !396
  %38803 = fadd double %38802, 0x400921FB54442D18, !dbg !397
  %38804 = call double @llvm.fabs.f64(double %38803), !dbg !398
  %38805 = fcmp ole double %38804, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38805, label %14330, label %38806, !dbg !400

38806:                                            ; preds = %38801
  br label %38807, !dbg !403

38807:                                            ; preds = %38806
  %38808 = load i32, ptr %10, align 4, !dbg !404
  %38809 = add nsw i32 %38808, 1, !dbg !404
  store i32 %38809, ptr %10, align 4, !dbg !404
  %38810 = load i32, ptr %10, align 4, !dbg !364
  %38811 = load i32, ptr %8, align 4, !dbg !366
  %38812 = icmp slt i32 %38810, %38811, !dbg !367
  br i1 %38812, label %38813, label %48422, !dbg !368

38813:                                            ; preds = %38807
  %38814 = load i32, ptr %10, align 4, !dbg !369
  %38815 = sext i32 %38814 to i64, !dbg !371
  %38816 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38815, !dbg !371
  %38817 = load double, ptr %6, align 8, !dbg !372
  %38818 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38819 = load double, ptr %38818, align 8, !dbg !372
  %38820 = load double, ptr %38816, align 16, !dbg !372
  %38821 = getelementptr inbounds { double, double }, ptr %38816, i32 0, i32 1, !dbg !372
  %38822 = load double, ptr %38821, align 8, !dbg !372
  %38823 = call { double, double } @make_vec(double %38817, double %38819, double %38820, double %38822), !dbg !372
  %38824 = extractvalue { double, double } %38823, 0, !dbg !372
  store double %38824, ptr %16, align 8, !dbg !372
  %38825 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38826 = extractvalue { double, double } %38823, 1, !dbg !372
  store double %38826, ptr %38825, align 8, !dbg !372
  %38827 = load i32, ptr %10, align 4, !dbg !373
  %38828 = add nsw i32 %38827, 1, !dbg !374
  %38829 = sext i32 %38828 to i64, !dbg !375
  %38830 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38829, !dbg !375
  %38831 = load double, ptr %6, align 8, !dbg !376
  %38832 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38833 = load double, ptr %38832, align 8, !dbg !376
  %38834 = load double, ptr %38830, align 16, !dbg !376
  %38835 = getelementptr inbounds { double, double }, ptr %38830, i32 0, i32 1, !dbg !376
  %38836 = load double, ptr %38835, align 8, !dbg !376
  %38837 = call { double, double } @make_vec(double %38831, double %38833, double %38834, double %38836), !dbg !376
  %38838 = extractvalue { double, double } %38837, 0, !dbg !376
  store double %38838, ptr %17, align 8, !dbg !376
  %38839 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38840 = extractvalue { double, double } %38837, 1, !dbg !376
  store double %38840, ptr %38839, align 8, !dbg !376
  %38841 = load double, ptr %16, align 8, !dbg !377
  %38842 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38843 = load double, ptr %38842, align 8, !dbg !377
  %38844 = load double, ptr %17, align 8, !dbg !377
  %38845 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38846 = load double, ptr %38845, align 8, !dbg !377
  %38847 = call double @cross(double %38841, double %38843, double %38844, double %38846), !dbg !377
  %38848 = load i32, ptr %10, align 4, !dbg !378
  %38849 = sext i32 %38848 to i64, !dbg !379
  %38850 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38849, !dbg !379
  %38851 = load double, ptr %6, align 8, !dbg !380
  %38852 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38853 = load double, ptr %38852, align 8, !dbg !380
  %38854 = load double, ptr %38850, align 16, !dbg !380
  %38855 = getelementptr inbounds { double, double }, ptr %38850, i32 0, i32 1, !dbg !380
  %38856 = load double, ptr %38855, align 8, !dbg !380
  %38857 = call { double, double } @make_vec(double %38851, double %38853, double %38854, double %38856), !dbg !380
  %38858 = extractvalue { double, double } %38857, 0, !dbg !380
  store double %38858, ptr %18, align 8, !dbg !380
  %38859 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38860 = extractvalue { double, double } %38857, 1, !dbg !380
  store double %38860, ptr %38859, align 8, !dbg !380
  %38861 = load i32, ptr %10, align 4, !dbg !381
  %38862 = add nsw i32 %38861, 1, !dbg !382
  %38863 = sext i32 %38862 to i64, !dbg !383
  %38864 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38863, !dbg !383
  %38865 = load double, ptr %6, align 8, !dbg !384
  %38866 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38867 = load double, ptr %38866, align 8, !dbg !384
  %38868 = load double, ptr %38864, align 16, !dbg !384
  %38869 = getelementptr inbounds { double, double }, ptr %38864, i32 0, i32 1, !dbg !384
  %38870 = load double, ptr %38869, align 8, !dbg !384
  %38871 = call { double, double } @make_vec(double %38865, double %38867, double %38868, double %38870), !dbg !384
  %38872 = extractvalue { double, double } %38871, 0, !dbg !384
  store double %38872, ptr %19, align 8, !dbg !384
  %38873 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38874 = extractvalue { double, double } %38871, 1, !dbg !384
  store double %38874, ptr %38873, align 8, !dbg !384
  %38875 = load double, ptr %18, align 8, !dbg !385
  %38876 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38877 = load double, ptr %38876, align 8, !dbg !385
  %38878 = load double, ptr %19, align 8, !dbg !385
  %38879 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38880 = load double, ptr %38879, align 8, !dbg !385
  %38881 = call double @dot(double %38875, double %38877, double %38878, double %38880), !dbg !385
  %38882 = call double @atan2(double noundef %38847, double noundef %38881) #6, !dbg !386
  store double %38882, ptr %13, align 8, !dbg !387
  %38883 = load double, ptr %13, align 8, !dbg !388
  %38884 = load double, ptr %14, align 8, !dbg !389
  %38885 = fadd double %38884, %38883, !dbg !389
  store double %38885, ptr %14, align 8, !dbg !389
  %38886 = load double, ptr %13, align 8, !dbg !390
  %38887 = fsub double %38886, 0x400921FB54442D18, !dbg !392
  %38888 = call double @llvm.fabs.f64(double %38887), !dbg !393
  %38889 = fcmp ole double %38888, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38889, label %14330, label %38890, !dbg !395

38890:                                            ; preds = %38813
  %38891 = load double, ptr %13, align 8, !dbg !396
  %38892 = fadd double %38891, 0x400921FB54442D18, !dbg !397
  %38893 = call double @llvm.fabs.f64(double %38892), !dbg !398
  %38894 = fcmp ole double %38893, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38894, label %14330, label %38895, !dbg !400

38895:                                            ; preds = %38890
  br label %38896, !dbg !403

38896:                                            ; preds = %38895
  %38897 = load i32, ptr %10, align 4, !dbg !404
  %38898 = add nsw i32 %38897, 1, !dbg !404
  store i32 %38898, ptr %10, align 4, !dbg !404
  %38899 = load i32, ptr %10, align 4, !dbg !364
  %38900 = load i32, ptr %8, align 4, !dbg !366
  %38901 = icmp slt i32 %38899, %38900, !dbg !367
  br i1 %38901, label %38902, label %48422, !dbg !368

38902:                                            ; preds = %38896
  %38903 = load i32, ptr %10, align 4, !dbg !369
  %38904 = sext i32 %38903 to i64, !dbg !371
  %38905 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38904, !dbg !371
  %38906 = load double, ptr %6, align 8, !dbg !372
  %38907 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38908 = load double, ptr %38907, align 8, !dbg !372
  %38909 = load double, ptr %38905, align 16, !dbg !372
  %38910 = getelementptr inbounds { double, double }, ptr %38905, i32 0, i32 1, !dbg !372
  %38911 = load double, ptr %38910, align 8, !dbg !372
  %38912 = call { double, double } @make_vec(double %38906, double %38908, double %38909, double %38911), !dbg !372
  %38913 = extractvalue { double, double } %38912, 0, !dbg !372
  store double %38913, ptr %16, align 8, !dbg !372
  %38914 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %38915 = extractvalue { double, double } %38912, 1, !dbg !372
  store double %38915, ptr %38914, align 8, !dbg !372
  %38916 = load i32, ptr %10, align 4, !dbg !373
  %38917 = add nsw i32 %38916, 1, !dbg !374
  %38918 = sext i32 %38917 to i64, !dbg !375
  %38919 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38918, !dbg !375
  %38920 = load double, ptr %6, align 8, !dbg !376
  %38921 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %38922 = load double, ptr %38921, align 8, !dbg !376
  %38923 = load double, ptr %38919, align 16, !dbg !376
  %38924 = getelementptr inbounds { double, double }, ptr %38919, i32 0, i32 1, !dbg !376
  %38925 = load double, ptr %38924, align 8, !dbg !376
  %38926 = call { double, double } @make_vec(double %38920, double %38922, double %38923, double %38925), !dbg !376
  %38927 = extractvalue { double, double } %38926, 0, !dbg !376
  store double %38927, ptr %17, align 8, !dbg !376
  %38928 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %38929 = extractvalue { double, double } %38926, 1, !dbg !376
  store double %38929, ptr %38928, align 8, !dbg !376
  %38930 = load double, ptr %16, align 8, !dbg !377
  %38931 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %38932 = load double, ptr %38931, align 8, !dbg !377
  %38933 = load double, ptr %17, align 8, !dbg !377
  %38934 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %38935 = load double, ptr %38934, align 8, !dbg !377
  %38936 = call double @cross(double %38930, double %38932, double %38933, double %38935), !dbg !377
  %38937 = load i32, ptr %10, align 4, !dbg !378
  %38938 = sext i32 %38937 to i64, !dbg !379
  %38939 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38938, !dbg !379
  %38940 = load double, ptr %6, align 8, !dbg !380
  %38941 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %38942 = load double, ptr %38941, align 8, !dbg !380
  %38943 = load double, ptr %38939, align 16, !dbg !380
  %38944 = getelementptr inbounds { double, double }, ptr %38939, i32 0, i32 1, !dbg !380
  %38945 = load double, ptr %38944, align 8, !dbg !380
  %38946 = call { double, double } @make_vec(double %38940, double %38942, double %38943, double %38945), !dbg !380
  %38947 = extractvalue { double, double } %38946, 0, !dbg !380
  store double %38947, ptr %18, align 8, !dbg !380
  %38948 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %38949 = extractvalue { double, double } %38946, 1, !dbg !380
  store double %38949, ptr %38948, align 8, !dbg !380
  %38950 = load i32, ptr %10, align 4, !dbg !381
  %38951 = add nsw i32 %38950, 1, !dbg !382
  %38952 = sext i32 %38951 to i64, !dbg !383
  %38953 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38952, !dbg !383
  %38954 = load double, ptr %6, align 8, !dbg !384
  %38955 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %38956 = load double, ptr %38955, align 8, !dbg !384
  %38957 = load double, ptr %38953, align 16, !dbg !384
  %38958 = getelementptr inbounds { double, double }, ptr %38953, i32 0, i32 1, !dbg !384
  %38959 = load double, ptr %38958, align 8, !dbg !384
  %38960 = call { double, double } @make_vec(double %38954, double %38956, double %38957, double %38959), !dbg !384
  %38961 = extractvalue { double, double } %38960, 0, !dbg !384
  store double %38961, ptr %19, align 8, !dbg !384
  %38962 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %38963 = extractvalue { double, double } %38960, 1, !dbg !384
  store double %38963, ptr %38962, align 8, !dbg !384
  %38964 = load double, ptr %18, align 8, !dbg !385
  %38965 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %38966 = load double, ptr %38965, align 8, !dbg !385
  %38967 = load double, ptr %19, align 8, !dbg !385
  %38968 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %38969 = load double, ptr %38968, align 8, !dbg !385
  %38970 = call double @dot(double %38964, double %38966, double %38967, double %38969), !dbg !385
  %38971 = call double @atan2(double noundef %38936, double noundef %38970) #6, !dbg !386
  store double %38971, ptr %13, align 8, !dbg !387
  %38972 = load double, ptr %13, align 8, !dbg !388
  %38973 = load double, ptr %14, align 8, !dbg !389
  %38974 = fadd double %38973, %38972, !dbg !389
  store double %38974, ptr %14, align 8, !dbg !389
  %38975 = load double, ptr %13, align 8, !dbg !390
  %38976 = fsub double %38975, 0x400921FB54442D18, !dbg !392
  %38977 = call double @llvm.fabs.f64(double %38976), !dbg !393
  %38978 = fcmp ole double %38977, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %38978, label %14330, label %38979, !dbg !395

38979:                                            ; preds = %38902
  %38980 = load double, ptr %13, align 8, !dbg !396
  %38981 = fadd double %38980, 0x400921FB54442D18, !dbg !397
  %38982 = call double @llvm.fabs.f64(double %38981), !dbg !398
  %38983 = fcmp ole double %38982, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %38983, label %14330, label %38984, !dbg !400

38984:                                            ; preds = %38979
  br label %38985, !dbg !403

38985:                                            ; preds = %38984
  %38986 = load i32, ptr %10, align 4, !dbg !404
  %38987 = add nsw i32 %38986, 1, !dbg !404
  store i32 %38987, ptr %10, align 4, !dbg !404
  %38988 = load i32, ptr %10, align 4, !dbg !364
  %38989 = load i32, ptr %8, align 4, !dbg !366
  %38990 = icmp slt i32 %38988, %38989, !dbg !367
  br i1 %38990, label %38991, label %48422, !dbg !368

38991:                                            ; preds = %38985
  %38992 = load i32, ptr %10, align 4, !dbg !369
  %38993 = sext i32 %38992 to i64, !dbg !371
  %38994 = getelementptr inbounds %struct.POINT, ptr %26, i64 %38993, !dbg !371
  %38995 = load double, ptr %6, align 8, !dbg !372
  %38996 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %38997 = load double, ptr %38996, align 8, !dbg !372
  %38998 = load double, ptr %38994, align 16, !dbg !372
  %38999 = getelementptr inbounds { double, double }, ptr %38994, i32 0, i32 1, !dbg !372
  %39000 = load double, ptr %38999, align 8, !dbg !372
  %39001 = call { double, double } @make_vec(double %38995, double %38997, double %38998, double %39000), !dbg !372
  %39002 = extractvalue { double, double } %39001, 0, !dbg !372
  store double %39002, ptr %16, align 8, !dbg !372
  %39003 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39004 = extractvalue { double, double } %39001, 1, !dbg !372
  store double %39004, ptr %39003, align 8, !dbg !372
  %39005 = load i32, ptr %10, align 4, !dbg !373
  %39006 = add nsw i32 %39005, 1, !dbg !374
  %39007 = sext i32 %39006 to i64, !dbg !375
  %39008 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39007, !dbg !375
  %39009 = load double, ptr %6, align 8, !dbg !376
  %39010 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39011 = load double, ptr %39010, align 8, !dbg !376
  %39012 = load double, ptr %39008, align 16, !dbg !376
  %39013 = getelementptr inbounds { double, double }, ptr %39008, i32 0, i32 1, !dbg !376
  %39014 = load double, ptr %39013, align 8, !dbg !376
  %39015 = call { double, double } @make_vec(double %39009, double %39011, double %39012, double %39014), !dbg !376
  %39016 = extractvalue { double, double } %39015, 0, !dbg !376
  store double %39016, ptr %17, align 8, !dbg !376
  %39017 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39018 = extractvalue { double, double } %39015, 1, !dbg !376
  store double %39018, ptr %39017, align 8, !dbg !376
  %39019 = load double, ptr %16, align 8, !dbg !377
  %39020 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39021 = load double, ptr %39020, align 8, !dbg !377
  %39022 = load double, ptr %17, align 8, !dbg !377
  %39023 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39024 = load double, ptr %39023, align 8, !dbg !377
  %39025 = call double @cross(double %39019, double %39021, double %39022, double %39024), !dbg !377
  %39026 = load i32, ptr %10, align 4, !dbg !378
  %39027 = sext i32 %39026 to i64, !dbg !379
  %39028 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39027, !dbg !379
  %39029 = load double, ptr %6, align 8, !dbg !380
  %39030 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39031 = load double, ptr %39030, align 8, !dbg !380
  %39032 = load double, ptr %39028, align 16, !dbg !380
  %39033 = getelementptr inbounds { double, double }, ptr %39028, i32 0, i32 1, !dbg !380
  %39034 = load double, ptr %39033, align 8, !dbg !380
  %39035 = call { double, double } @make_vec(double %39029, double %39031, double %39032, double %39034), !dbg !380
  %39036 = extractvalue { double, double } %39035, 0, !dbg !380
  store double %39036, ptr %18, align 8, !dbg !380
  %39037 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39038 = extractvalue { double, double } %39035, 1, !dbg !380
  store double %39038, ptr %39037, align 8, !dbg !380
  %39039 = load i32, ptr %10, align 4, !dbg !381
  %39040 = add nsw i32 %39039, 1, !dbg !382
  %39041 = sext i32 %39040 to i64, !dbg !383
  %39042 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39041, !dbg !383
  %39043 = load double, ptr %6, align 8, !dbg !384
  %39044 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39045 = load double, ptr %39044, align 8, !dbg !384
  %39046 = load double, ptr %39042, align 16, !dbg !384
  %39047 = getelementptr inbounds { double, double }, ptr %39042, i32 0, i32 1, !dbg !384
  %39048 = load double, ptr %39047, align 8, !dbg !384
  %39049 = call { double, double } @make_vec(double %39043, double %39045, double %39046, double %39048), !dbg !384
  %39050 = extractvalue { double, double } %39049, 0, !dbg !384
  store double %39050, ptr %19, align 8, !dbg !384
  %39051 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39052 = extractvalue { double, double } %39049, 1, !dbg !384
  store double %39052, ptr %39051, align 8, !dbg !384
  %39053 = load double, ptr %18, align 8, !dbg !385
  %39054 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39055 = load double, ptr %39054, align 8, !dbg !385
  %39056 = load double, ptr %19, align 8, !dbg !385
  %39057 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39058 = load double, ptr %39057, align 8, !dbg !385
  %39059 = call double @dot(double %39053, double %39055, double %39056, double %39058), !dbg !385
  %39060 = call double @atan2(double noundef %39025, double noundef %39059) #6, !dbg !386
  store double %39060, ptr %13, align 8, !dbg !387
  %39061 = load double, ptr %13, align 8, !dbg !388
  %39062 = load double, ptr %14, align 8, !dbg !389
  %39063 = fadd double %39062, %39061, !dbg !389
  store double %39063, ptr %14, align 8, !dbg !389
  %39064 = load double, ptr %13, align 8, !dbg !390
  %39065 = fsub double %39064, 0x400921FB54442D18, !dbg !392
  %39066 = call double @llvm.fabs.f64(double %39065), !dbg !393
  %39067 = fcmp ole double %39066, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39067, label %14330, label %39068, !dbg !395

39068:                                            ; preds = %38991
  %39069 = load double, ptr %13, align 8, !dbg !396
  %39070 = fadd double %39069, 0x400921FB54442D18, !dbg !397
  %39071 = call double @llvm.fabs.f64(double %39070), !dbg !398
  %39072 = fcmp ole double %39071, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39072, label %14330, label %39073, !dbg !400

39073:                                            ; preds = %39068
  br label %39074, !dbg !403

39074:                                            ; preds = %39073
  %39075 = load i32, ptr %10, align 4, !dbg !404
  %39076 = add nsw i32 %39075, 1, !dbg !404
  store i32 %39076, ptr %10, align 4, !dbg !404
  %39077 = load i32, ptr %10, align 4, !dbg !364
  %39078 = load i32, ptr %8, align 4, !dbg !366
  %39079 = icmp slt i32 %39077, %39078, !dbg !367
  br i1 %39079, label %39080, label %48422, !dbg !368

39080:                                            ; preds = %39074
  %39081 = load i32, ptr %10, align 4, !dbg !369
  %39082 = sext i32 %39081 to i64, !dbg !371
  %39083 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39082, !dbg !371
  %39084 = load double, ptr %6, align 8, !dbg !372
  %39085 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39086 = load double, ptr %39085, align 8, !dbg !372
  %39087 = load double, ptr %39083, align 16, !dbg !372
  %39088 = getelementptr inbounds { double, double }, ptr %39083, i32 0, i32 1, !dbg !372
  %39089 = load double, ptr %39088, align 8, !dbg !372
  %39090 = call { double, double } @make_vec(double %39084, double %39086, double %39087, double %39089), !dbg !372
  %39091 = extractvalue { double, double } %39090, 0, !dbg !372
  store double %39091, ptr %16, align 8, !dbg !372
  %39092 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39093 = extractvalue { double, double } %39090, 1, !dbg !372
  store double %39093, ptr %39092, align 8, !dbg !372
  %39094 = load i32, ptr %10, align 4, !dbg !373
  %39095 = add nsw i32 %39094, 1, !dbg !374
  %39096 = sext i32 %39095 to i64, !dbg !375
  %39097 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39096, !dbg !375
  %39098 = load double, ptr %6, align 8, !dbg !376
  %39099 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39100 = load double, ptr %39099, align 8, !dbg !376
  %39101 = load double, ptr %39097, align 16, !dbg !376
  %39102 = getelementptr inbounds { double, double }, ptr %39097, i32 0, i32 1, !dbg !376
  %39103 = load double, ptr %39102, align 8, !dbg !376
  %39104 = call { double, double } @make_vec(double %39098, double %39100, double %39101, double %39103), !dbg !376
  %39105 = extractvalue { double, double } %39104, 0, !dbg !376
  store double %39105, ptr %17, align 8, !dbg !376
  %39106 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39107 = extractvalue { double, double } %39104, 1, !dbg !376
  store double %39107, ptr %39106, align 8, !dbg !376
  %39108 = load double, ptr %16, align 8, !dbg !377
  %39109 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39110 = load double, ptr %39109, align 8, !dbg !377
  %39111 = load double, ptr %17, align 8, !dbg !377
  %39112 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39113 = load double, ptr %39112, align 8, !dbg !377
  %39114 = call double @cross(double %39108, double %39110, double %39111, double %39113), !dbg !377
  %39115 = load i32, ptr %10, align 4, !dbg !378
  %39116 = sext i32 %39115 to i64, !dbg !379
  %39117 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39116, !dbg !379
  %39118 = load double, ptr %6, align 8, !dbg !380
  %39119 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39120 = load double, ptr %39119, align 8, !dbg !380
  %39121 = load double, ptr %39117, align 16, !dbg !380
  %39122 = getelementptr inbounds { double, double }, ptr %39117, i32 0, i32 1, !dbg !380
  %39123 = load double, ptr %39122, align 8, !dbg !380
  %39124 = call { double, double } @make_vec(double %39118, double %39120, double %39121, double %39123), !dbg !380
  %39125 = extractvalue { double, double } %39124, 0, !dbg !380
  store double %39125, ptr %18, align 8, !dbg !380
  %39126 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39127 = extractvalue { double, double } %39124, 1, !dbg !380
  store double %39127, ptr %39126, align 8, !dbg !380
  %39128 = load i32, ptr %10, align 4, !dbg !381
  %39129 = add nsw i32 %39128, 1, !dbg !382
  %39130 = sext i32 %39129 to i64, !dbg !383
  %39131 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39130, !dbg !383
  %39132 = load double, ptr %6, align 8, !dbg !384
  %39133 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39134 = load double, ptr %39133, align 8, !dbg !384
  %39135 = load double, ptr %39131, align 16, !dbg !384
  %39136 = getelementptr inbounds { double, double }, ptr %39131, i32 0, i32 1, !dbg !384
  %39137 = load double, ptr %39136, align 8, !dbg !384
  %39138 = call { double, double } @make_vec(double %39132, double %39134, double %39135, double %39137), !dbg !384
  %39139 = extractvalue { double, double } %39138, 0, !dbg !384
  store double %39139, ptr %19, align 8, !dbg !384
  %39140 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39141 = extractvalue { double, double } %39138, 1, !dbg !384
  store double %39141, ptr %39140, align 8, !dbg !384
  %39142 = load double, ptr %18, align 8, !dbg !385
  %39143 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39144 = load double, ptr %39143, align 8, !dbg !385
  %39145 = load double, ptr %19, align 8, !dbg !385
  %39146 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39147 = load double, ptr %39146, align 8, !dbg !385
  %39148 = call double @dot(double %39142, double %39144, double %39145, double %39147), !dbg !385
  %39149 = call double @atan2(double noundef %39114, double noundef %39148) #6, !dbg !386
  store double %39149, ptr %13, align 8, !dbg !387
  %39150 = load double, ptr %13, align 8, !dbg !388
  %39151 = load double, ptr %14, align 8, !dbg !389
  %39152 = fadd double %39151, %39150, !dbg !389
  store double %39152, ptr %14, align 8, !dbg !389
  %39153 = load double, ptr %13, align 8, !dbg !390
  %39154 = fsub double %39153, 0x400921FB54442D18, !dbg !392
  %39155 = call double @llvm.fabs.f64(double %39154), !dbg !393
  %39156 = fcmp ole double %39155, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39156, label %14330, label %39157, !dbg !395

39157:                                            ; preds = %39080
  %39158 = load double, ptr %13, align 8, !dbg !396
  %39159 = fadd double %39158, 0x400921FB54442D18, !dbg !397
  %39160 = call double @llvm.fabs.f64(double %39159), !dbg !398
  %39161 = fcmp ole double %39160, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39161, label %14330, label %39162, !dbg !400

39162:                                            ; preds = %39157
  br label %39163, !dbg !403

39163:                                            ; preds = %39162
  %39164 = load i32, ptr %10, align 4, !dbg !404
  %39165 = add nsw i32 %39164, 1, !dbg !404
  store i32 %39165, ptr %10, align 4, !dbg !404
  %39166 = load i32, ptr %10, align 4, !dbg !364
  %39167 = load i32, ptr %8, align 4, !dbg !366
  %39168 = icmp slt i32 %39166, %39167, !dbg !367
  br i1 %39168, label %39169, label %48422, !dbg !368

39169:                                            ; preds = %39163
  %39170 = load i32, ptr %10, align 4, !dbg !369
  %39171 = sext i32 %39170 to i64, !dbg !371
  %39172 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39171, !dbg !371
  %39173 = load double, ptr %6, align 8, !dbg !372
  %39174 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39175 = load double, ptr %39174, align 8, !dbg !372
  %39176 = load double, ptr %39172, align 16, !dbg !372
  %39177 = getelementptr inbounds { double, double }, ptr %39172, i32 0, i32 1, !dbg !372
  %39178 = load double, ptr %39177, align 8, !dbg !372
  %39179 = call { double, double } @make_vec(double %39173, double %39175, double %39176, double %39178), !dbg !372
  %39180 = extractvalue { double, double } %39179, 0, !dbg !372
  store double %39180, ptr %16, align 8, !dbg !372
  %39181 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39182 = extractvalue { double, double } %39179, 1, !dbg !372
  store double %39182, ptr %39181, align 8, !dbg !372
  %39183 = load i32, ptr %10, align 4, !dbg !373
  %39184 = add nsw i32 %39183, 1, !dbg !374
  %39185 = sext i32 %39184 to i64, !dbg !375
  %39186 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39185, !dbg !375
  %39187 = load double, ptr %6, align 8, !dbg !376
  %39188 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39189 = load double, ptr %39188, align 8, !dbg !376
  %39190 = load double, ptr %39186, align 16, !dbg !376
  %39191 = getelementptr inbounds { double, double }, ptr %39186, i32 0, i32 1, !dbg !376
  %39192 = load double, ptr %39191, align 8, !dbg !376
  %39193 = call { double, double } @make_vec(double %39187, double %39189, double %39190, double %39192), !dbg !376
  %39194 = extractvalue { double, double } %39193, 0, !dbg !376
  store double %39194, ptr %17, align 8, !dbg !376
  %39195 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39196 = extractvalue { double, double } %39193, 1, !dbg !376
  store double %39196, ptr %39195, align 8, !dbg !376
  %39197 = load double, ptr %16, align 8, !dbg !377
  %39198 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39199 = load double, ptr %39198, align 8, !dbg !377
  %39200 = load double, ptr %17, align 8, !dbg !377
  %39201 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39202 = load double, ptr %39201, align 8, !dbg !377
  %39203 = call double @cross(double %39197, double %39199, double %39200, double %39202), !dbg !377
  %39204 = load i32, ptr %10, align 4, !dbg !378
  %39205 = sext i32 %39204 to i64, !dbg !379
  %39206 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39205, !dbg !379
  %39207 = load double, ptr %6, align 8, !dbg !380
  %39208 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39209 = load double, ptr %39208, align 8, !dbg !380
  %39210 = load double, ptr %39206, align 16, !dbg !380
  %39211 = getelementptr inbounds { double, double }, ptr %39206, i32 0, i32 1, !dbg !380
  %39212 = load double, ptr %39211, align 8, !dbg !380
  %39213 = call { double, double } @make_vec(double %39207, double %39209, double %39210, double %39212), !dbg !380
  %39214 = extractvalue { double, double } %39213, 0, !dbg !380
  store double %39214, ptr %18, align 8, !dbg !380
  %39215 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39216 = extractvalue { double, double } %39213, 1, !dbg !380
  store double %39216, ptr %39215, align 8, !dbg !380
  %39217 = load i32, ptr %10, align 4, !dbg !381
  %39218 = add nsw i32 %39217, 1, !dbg !382
  %39219 = sext i32 %39218 to i64, !dbg !383
  %39220 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39219, !dbg !383
  %39221 = load double, ptr %6, align 8, !dbg !384
  %39222 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39223 = load double, ptr %39222, align 8, !dbg !384
  %39224 = load double, ptr %39220, align 16, !dbg !384
  %39225 = getelementptr inbounds { double, double }, ptr %39220, i32 0, i32 1, !dbg !384
  %39226 = load double, ptr %39225, align 8, !dbg !384
  %39227 = call { double, double } @make_vec(double %39221, double %39223, double %39224, double %39226), !dbg !384
  %39228 = extractvalue { double, double } %39227, 0, !dbg !384
  store double %39228, ptr %19, align 8, !dbg !384
  %39229 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39230 = extractvalue { double, double } %39227, 1, !dbg !384
  store double %39230, ptr %39229, align 8, !dbg !384
  %39231 = load double, ptr %18, align 8, !dbg !385
  %39232 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39233 = load double, ptr %39232, align 8, !dbg !385
  %39234 = load double, ptr %19, align 8, !dbg !385
  %39235 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39236 = load double, ptr %39235, align 8, !dbg !385
  %39237 = call double @dot(double %39231, double %39233, double %39234, double %39236), !dbg !385
  %39238 = call double @atan2(double noundef %39203, double noundef %39237) #6, !dbg !386
  store double %39238, ptr %13, align 8, !dbg !387
  %39239 = load double, ptr %13, align 8, !dbg !388
  %39240 = load double, ptr %14, align 8, !dbg !389
  %39241 = fadd double %39240, %39239, !dbg !389
  store double %39241, ptr %14, align 8, !dbg !389
  %39242 = load double, ptr %13, align 8, !dbg !390
  %39243 = fsub double %39242, 0x400921FB54442D18, !dbg !392
  %39244 = call double @llvm.fabs.f64(double %39243), !dbg !393
  %39245 = fcmp ole double %39244, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39245, label %14330, label %39246, !dbg !395

39246:                                            ; preds = %39169
  %39247 = load double, ptr %13, align 8, !dbg !396
  %39248 = fadd double %39247, 0x400921FB54442D18, !dbg !397
  %39249 = call double @llvm.fabs.f64(double %39248), !dbg !398
  %39250 = fcmp ole double %39249, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39250, label %14330, label %39251, !dbg !400

39251:                                            ; preds = %39246
  br label %39252, !dbg !403

39252:                                            ; preds = %39251
  %39253 = load i32, ptr %10, align 4, !dbg !404
  %39254 = add nsw i32 %39253, 1, !dbg !404
  store i32 %39254, ptr %10, align 4, !dbg !404
  %39255 = load i32, ptr %10, align 4, !dbg !364
  %39256 = load i32, ptr %8, align 4, !dbg !366
  %39257 = icmp slt i32 %39255, %39256, !dbg !367
  br i1 %39257, label %39258, label %48422, !dbg !368

39258:                                            ; preds = %39252
  %39259 = load i32, ptr %10, align 4, !dbg !369
  %39260 = sext i32 %39259 to i64, !dbg !371
  %39261 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39260, !dbg !371
  %39262 = load double, ptr %6, align 8, !dbg !372
  %39263 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39264 = load double, ptr %39263, align 8, !dbg !372
  %39265 = load double, ptr %39261, align 16, !dbg !372
  %39266 = getelementptr inbounds { double, double }, ptr %39261, i32 0, i32 1, !dbg !372
  %39267 = load double, ptr %39266, align 8, !dbg !372
  %39268 = call { double, double } @make_vec(double %39262, double %39264, double %39265, double %39267), !dbg !372
  %39269 = extractvalue { double, double } %39268, 0, !dbg !372
  store double %39269, ptr %16, align 8, !dbg !372
  %39270 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39271 = extractvalue { double, double } %39268, 1, !dbg !372
  store double %39271, ptr %39270, align 8, !dbg !372
  %39272 = load i32, ptr %10, align 4, !dbg !373
  %39273 = add nsw i32 %39272, 1, !dbg !374
  %39274 = sext i32 %39273 to i64, !dbg !375
  %39275 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39274, !dbg !375
  %39276 = load double, ptr %6, align 8, !dbg !376
  %39277 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39278 = load double, ptr %39277, align 8, !dbg !376
  %39279 = load double, ptr %39275, align 16, !dbg !376
  %39280 = getelementptr inbounds { double, double }, ptr %39275, i32 0, i32 1, !dbg !376
  %39281 = load double, ptr %39280, align 8, !dbg !376
  %39282 = call { double, double } @make_vec(double %39276, double %39278, double %39279, double %39281), !dbg !376
  %39283 = extractvalue { double, double } %39282, 0, !dbg !376
  store double %39283, ptr %17, align 8, !dbg !376
  %39284 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39285 = extractvalue { double, double } %39282, 1, !dbg !376
  store double %39285, ptr %39284, align 8, !dbg !376
  %39286 = load double, ptr %16, align 8, !dbg !377
  %39287 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39288 = load double, ptr %39287, align 8, !dbg !377
  %39289 = load double, ptr %17, align 8, !dbg !377
  %39290 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39291 = load double, ptr %39290, align 8, !dbg !377
  %39292 = call double @cross(double %39286, double %39288, double %39289, double %39291), !dbg !377
  %39293 = load i32, ptr %10, align 4, !dbg !378
  %39294 = sext i32 %39293 to i64, !dbg !379
  %39295 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39294, !dbg !379
  %39296 = load double, ptr %6, align 8, !dbg !380
  %39297 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39298 = load double, ptr %39297, align 8, !dbg !380
  %39299 = load double, ptr %39295, align 16, !dbg !380
  %39300 = getelementptr inbounds { double, double }, ptr %39295, i32 0, i32 1, !dbg !380
  %39301 = load double, ptr %39300, align 8, !dbg !380
  %39302 = call { double, double } @make_vec(double %39296, double %39298, double %39299, double %39301), !dbg !380
  %39303 = extractvalue { double, double } %39302, 0, !dbg !380
  store double %39303, ptr %18, align 8, !dbg !380
  %39304 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39305 = extractvalue { double, double } %39302, 1, !dbg !380
  store double %39305, ptr %39304, align 8, !dbg !380
  %39306 = load i32, ptr %10, align 4, !dbg !381
  %39307 = add nsw i32 %39306, 1, !dbg !382
  %39308 = sext i32 %39307 to i64, !dbg !383
  %39309 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39308, !dbg !383
  %39310 = load double, ptr %6, align 8, !dbg !384
  %39311 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39312 = load double, ptr %39311, align 8, !dbg !384
  %39313 = load double, ptr %39309, align 16, !dbg !384
  %39314 = getelementptr inbounds { double, double }, ptr %39309, i32 0, i32 1, !dbg !384
  %39315 = load double, ptr %39314, align 8, !dbg !384
  %39316 = call { double, double } @make_vec(double %39310, double %39312, double %39313, double %39315), !dbg !384
  %39317 = extractvalue { double, double } %39316, 0, !dbg !384
  store double %39317, ptr %19, align 8, !dbg !384
  %39318 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39319 = extractvalue { double, double } %39316, 1, !dbg !384
  store double %39319, ptr %39318, align 8, !dbg !384
  %39320 = load double, ptr %18, align 8, !dbg !385
  %39321 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39322 = load double, ptr %39321, align 8, !dbg !385
  %39323 = load double, ptr %19, align 8, !dbg !385
  %39324 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39325 = load double, ptr %39324, align 8, !dbg !385
  %39326 = call double @dot(double %39320, double %39322, double %39323, double %39325), !dbg !385
  %39327 = call double @atan2(double noundef %39292, double noundef %39326) #6, !dbg !386
  store double %39327, ptr %13, align 8, !dbg !387
  %39328 = load double, ptr %13, align 8, !dbg !388
  %39329 = load double, ptr %14, align 8, !dbg !389
  %39330 = fadd double %39329, %39328, !dbg !389
  store double %39330, ptr %14, align 8, !dbg !389
  %39331 = load double, ptr %13, align 8, !dbg !390
  %39332 = fsub double %39331, 0x400921FB54442D18, !dbg !392
  %39333 = call double @llvm.fabs.f64(double %39332), !dbg !393
  %39334 = fcmp ole double %39333, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39334, label %14330, label %39335, !dbg !395

39335:                                            ; preds = %39258
  %39336 = load double, ptr %13, align 8, !dbg !396
  %39337 = fadd double %39336, 0x400921FB54442D18, !dbg !397
  %39338 = call double @llvm.fabs.f64(double %39337), !dbg !398
  %39339 = fcmp ole double %39338, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39339, label %14330, label %39340, !dbg !400

39340:                                            ; preds = %39335
  br label %39341, !dbg !403

39341:                                            ; preds = %39340
  %39342 = load i32, ptr %10, align 4, !dbg !404
  %39343 = add nsw i32 %39342, 1, !dbg !404
  store i32 %39343, ptr %10, align 4, !dbg !404
  %39344 = load i32, ptr %10, align 4, !dbg !364
  %39345 = load i32, ptr %8, align 4, !dbg !366
  %39346 = icmp slt i32 %39344, %39345, !dbg !367
  br i1 %39346, label %39347, label %48422, !dbg !368

39347:                                            ; preds = %39341
  %39348 = load i32, ptr %10, align 4, !dbg !369
  %39349 = sext i32 %39348 to i64, !dbg !371
  %39350 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39349, !dbg !371
  %39351 = load double, ptr %6, align 8, !dbg !372
  %39352 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39353 = load double, ptr %39352, align 8, !dbg !372
  %39354 = load double, ptr %39350, align 16, !dbg !372
  %39355 = getelementptr inbounds { double, double }, ptr %39350, i32 0, i32 1, !dbg !372
  %39356 = load double, ptr %39355, align 8, !dbg !372
  %39357 = call { double, double } @make_vec(double %39351, double %39353, double %39354, double %39356), !dbg !372
  %39358 = extractvalue { double, double } %39357, 0, !dbg !372
  store double %39358, ptr %16, align 8, !dbg !372
  %39359 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39360 = extractvalue { double, double } %39357, 1, !dbg !372
  store double %39360, ptr %39359, align 8, !dbg !372
  %39361 = load i32, ptr %10, align 4, !dbg !373
  %39362 = add nsw i32 %39361, 1, !dbg !374
  %39363 = sext i32 %39362 to i64, !dbg !375
  %39364 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39363, !dbg !375
  %39365 = load double, ptr %6, align 8, !dbg !376
  %39366 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39367 = load double, ptr %39366, align 8, !dbg !376
  %39368 = load double, ptr %39364, align 16, !dbg !376
  %39369 = getelementptr inbounds { double, double }, ptr %39364, i32 0, i32 1, !dbg !376
  %39370 = load double, ptr %39369, align 8, !dbg !376
  %39371 = call { double, double } @make_vec(double %39365, double %39367, double %39368, double %39370), !dbg !376
  %39372 = extractvalue { double, double } %39371, 0, !dbg !376
  store double %39372, ptr %17, align 8, !dbg !376
  %39373 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39374 = extractvalue { double, double } %39371, 1, !dbg !376
  store double %39374, ptr %39373, align 8, !dbg !376
  %39375 = load double, ptr %16, align 8, !dbg !377
  %39376 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39377 = load double, ptr %39376, align 8, !dbg !377
  %39378 = load double, ptr %17, align 8, !dbg !377
  %39379 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39380 = load double, ptr %39379, align 8, !dbg !377
  %39381 = call double @cross(double %39375, double %39377, double %39378, double %39380), !dbg !377
  %39382 = load i32, ptr %10, align 4, !dbg !378
  %39383 = sext i32 %39382 to i64, !dbg !379
  %39384 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39383, !dbg !379
  %39385 = load double, ptr %6, align 8, !dbg !380
  %39386 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39387 = load double, ptr %39386, align 8, !dbg !380
  %39388 = load double, ptr %39384, align 16, !dbg !380
  %39389 = getelementptr inbounds { double, double }, ptr %39384, i32 0, i32 1, !dbg !380
  %39390 = load double, ptr %39389, align 8, !dbg !380
  %39391 = call { double, double } @make_vec(double %39385, double %39387, double %39388, double %39390), !dbg !380
  %39392 = extractvalue { double, double } %39391, 0, !dbg !380
  store double %39392, ptr %18, align 8, !dbg !380
  %39393 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39394 = extractvalue { double, double } %39391, 1, !dbg !380
  store double %39394, ptr %39393, align 8, !dbg !380
  %39395 = load i32, ptr %10, align 4, !dbg !381
  %39396 = add nsw i32 %39395, 1, !dbg !382
  %39397 = sext i32 %39396 to i64, !dbg !383
  %39398 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39397, !dbg !383
  %39399 = load double, ptr %6, align 8, !dbg !384
  %39400 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39401 = load double, ptr %39400, align 8, !dbg !384
  %39402 = load double, ptr %39398, align 16, !dbg !384
  %39403 = getelementptr inbounds { double, double }, ptr %39398, i32 0, i32 1, !dbg !384
  %39404 = load double, ptr %39403, align 8, !dbg !384
  %39405 = call { double, double } @make_vec(double %39399, double %39401, double %39402, double %39404), !dbg !384
  %39406 = extractvalue { double, double } %39405, 0, !dbg !384
  store double %39406, ptr %19, align 8, !dbg !384
  %39407 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39408 = extractvalue { double, double } %39405, 1, !dbg !384
  store double %39408, ptr %39407, align 8, !dbg !384
  %39409 = load double, ptr %18, align 8, !dbg !385
  %39410 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39411 = load double, ptr %39410, align 8, !dbg !385
  %39412 = load double, ptr %19, align 8, !dbg !385
  %39413 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39414 = load double, ptr %39413, align 8, !dbg !385
  %39415 = call double @dot(double %39409, double %39411, double %39412, double %39414), !dbg !385
  %39416 = call double @atan2(double noundef %39381, double noundef %39415) #6, !dbg !386
  store double %39416, ptr %13, align 8, !dbg !387
  %39417 = load double, ptr %13, align 8, !dbg !388
  %39418 = load double, ptr %14, align 8, !dbg !389
  %39419 = fadd double %39418, %39417, !dbg !389
  store double %39419, ptr %14, align 8, !dbg !389
  %39420 = load double, ptr %13, align 8, !dbg !390
  %39421 = fsub double %39420, 0x400921FB54442D18, !dbg !392
  %39422 = call double @llvm.fabs.f64(double %39421), !dbg !393
  %39423 = fcmp ole double %39422, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39423, label %14330, label %39424, !dbg !395

39424:                                            ; preds = %39347
  %39425 = load double, ptr %13, align 8, !dbg !396
  %39426 = fadd double %39425, 0x400921FB54442D18, !dbg !397
  %39427 = call double @llvm.fabs.f64(double %39426), !dbg !398
  %39428 = fcmp ole double %39427, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39428, label %14330, label %39429, !dbg !400

39429:                                            ; preds = %39424
  br label %39430, !dbg !403

39430:                                            ; preds = %39429
  %39431 = load i32, ptr %10, align 4, !dbg !404
  %39432 = add nsw i32 %39431, 1, !dbg !404
  store i32 %39432, ptr %10, align 4, !dbg !404
  %39433 = load i32, ptr %10, align 4, !dbg !364
  %39434 = load i32, ptr %8, align 4, !dbg !366
  %39435 = icmp slt i32 %39433, %39434, !dbg !367
  br i1 %39435, label %39436, label %48422, !dbg !368

39436:                                            ; preds = %39430
  %39437 = load i32, ptr %10, align 4, !dbg !369
  %39438 = sext i32 %39437 to i64, !dbg !371
  %39439 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39438, !dbg !371
  %39440 = load double, ptr %6, align 8, !dbg !372
  %39441 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39442 = load double, ptr %39441, align 8, !dbg !372
  %39443 = load double, ptr %39439, align 16, !dbg !372
  %39444 = getelementptr inbounds { double, double }, ptr %39439, i32 0, i32 1, !dbg !372
  %39445 = load double, ptr %39444, align 8, !dbg !372
  %39446 = call { double, double } @make_vec(double %39440, double %39442, double %39443, double %39445), !dbg !372
  %39447 = extractvalue { double, double } %39446, 0, !dbg !372
  store double %39447, ptr %16, align 8, !dbg !372
  %39448 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39449 = extractvalue { double, double } %39446, 1, !dbg !372
  store double %39449, ptr %39448, align 8, !dbg !372
  %39450 = load i32, ptr %10, align 4, !dbg !373
  %39451 = add nsw i32 %39450, 1, !dbg !374
  %39452 = sext i32 %39451 to i64, !dbg !375
  %39453 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39452, !dbg !375
  %39454 = load double, ptr %6, align 8, !dbg !376
  %39455 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39456 = load double, ptr %39455, align 8, !dbg !376
  %39457 = load double, ptr %39453, align 16, !dbg !376
  %39458 = getelementptr inbounds { double, double }, ptr %39453, i32 0, i32 1, !dbg !376
  %39459 = load double, ptr %39458, align 8, !dbg !376
  %39460 = call { double, double } @make_vec(double %39454, double %39456, double %39457, double %39459), !dbg !376
  %39461 = extractvalue { double, double } %39460, 0, !dbg !376
  store double %39461, ptr %17, align 8, !dbg !376
  %39462 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39463 = extractvalue { double, double } %39460, 1, !dbg !376
  store double %39463, ptr %39462, align 8, !dbg !376
  %39464 = load double, ptr %16, align 8, !dbg !377
  %39465 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39466 = load double, ptr %39465, align 8, !dbg !377
  %39467 = load double, ptr %17, align 8, !dbg !377
  %39468 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39469 = load double, ptr %39468, align 8, !dbg !377
  %39470 = call double @cross(double %39464, double %39466, double %39467, double %39469), !dbg !377
  %39471 = load i32, ptr %10, align 4, !dbg !378
  %39472 = sext i32 %39471 to i64, !dbg !379
  %39473 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39472, !dbg !379
  %39474 = load double, ptr %6, align 8, !dbg !380
  %39475 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39476 = load double, ptr %39475, align 8, !dbg !380
  %39477 = load double, ptr %39473, align 16, !dbg !380
  %39478 = getelementptr inbounds { double, double }, ptr %39473, i32 0, i32 1, !dbg !380
  %39479 = load double, ptr %39478, align 8, !dbg !380
  %39480 = call { double, double } @make_vec(double %39474, double %39476, double %39477, double %39479), !dbg !380
  %39481 = extractvalue { double, double } %39480, 0, !dbg !380
  store double %39481, ptr %18, align 8, !dbg !380
  %39482 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39483 = extractvalue { double, double } %39480, 1, !dbg !380
  store double %39483, ptr %39482, align 8, !dbg !380
  %39484 = load i32, ptr %10, align 4, !dbg !381
  %39485 = add nsw i32 %39484, 1, !dbg !382
  %39486 = sext i32 %39485 to i64, !dbg !383
  %39487 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39486, !dbg !383
  %39488 = load double, ptr %6, align 8, !dbg !384
  %39489 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39490 = load double, ptr %39489, align 8, !dbg !384
  %39491 = load double, ptr %39487, align 16, !dbg !384
  %39492 = getelementptr inbounds { double, double }, ptr %39487, i32 0, i32 1, !dbg !384
  %39493 = load double, ptr %39492, align 8, !dbg !384
  %39494 = call { double, double } @make_vec(double %39488, double %39490, double %39491, double %39493), !dbg !384
  %39495 = extractvalue { double, double } %39494, 0, !dbg !384
  store double %39495, ptr %19, align 8, !dbg !384
  %39496 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39497 = extractvalue { double, double } %39494, 1, !dbg !384
  store double %39497, ptr %39496, align 8, !dbg !384
  %39498 = load double, ptr %18, align 8, !dbg !385
  %39499 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39500 = load double, ptr %39499, align 8, !dbg !385
  %39501 = load double, ptr %19, align 8, !dbg !385
  %39502 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39503 = load double, ptr %39502, align 8, !dbg !385
  %39504 = call double @dot(double %39498, double %39500, double %39501, double %39503), !dbg !385
  %39505 = call double @atan2(double noundef %39470, double noundef %39504) #6, !dbg !386
  store double %39505, ptr %13, align 8, !dbg !387
  %39506 = load double, ptr %13, align 8, !dbg !388
  %39507 = load double, ptr %14, align 8, !dbg !389
  %39508 = fadd double %39507, %39506, !dbg !389
  store double %39508, ptr %14, align 8, !dbg !389
  %39509 = load double, ptr %13, align 8, !dbg !390
  %39510 = fsub double %39509, 0x400921FB54442D18, !dbg !392
  %39511 = call double @llvm.fabs.f64(double %39510), !dbg !393
  %39512 = fcmp ole double %39511, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39512, label %14330, label %39513, !dbg !395

39513:                                            ; preds = %39436
  %39514 = load double, ptr %13, align 8, !dbg !396
  %39515 = fadd double %39514, 0x400921FB54442D18, !dbg !397
  %39516 = call double @llvm.fabs.f64(double %39515), !dbg !398
  %39517 = fcmp ole double %39516, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39517, label %14330, label %39518, !dbg !400

39518:                                            ; preds = %39513
  br label %39519, !dbg !403

39519:                                            ; preds = %39518
  %39520 = load i32, ptr %10, align 4, !dbg !404
  %39521 = add nsw i32 %39520, 1, !dbg !404
  store i32 %39521, ptr %10, align 4, !dbg !404
  %39522 = load i32, ptr %10, align 4, !dbg !364
  %39523 = load i32, ptr %8, align 4, !dbg !366
  %39524 = icmp slt i32 %39522, %39523, !dbg !367
  br i1 %39524, label %39525, label %48422, !dbg !368

39525:                                            ; preds = %39519
  %39526 = load i32, ptr %10, align 4, !dbg !369
  %39527 = sext i32 %39526 to i64, !dbg !371
  %39528 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39527, !dbg !371
  %39529 = load double, ptr %6, align 8, !dbg !372
  %39530 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39531 = load double, ptr %39530, align 8, !dbg !372
  %39532 = load double, ptr %39528, align 16, !dbg !372
  %39533 = getelementptr inbounds { double, double }, ptr %39528, i32 0, i32 1, !dbg !372
  %39534 = load double, ptr %39533, align 8, !dbg !372
  %39535 = call { double, double } @make_vec(double %39529, double %39531, double %39532, double %39534), !dbg !372
  %39536 = extractvalue { double, double } %39535, 0, !dbg !372
  store double %39536, ptr %16, align 8, !dbg !372
  %39537 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39538 = extractvalue { double, double } %39535, 1, !dbg !372
  store double %39538, ptr %39537, align 8, !dbg !372
  %39539 = load i32, ptr %10, align 4, !dbg !373
  %39540 = add nsw i32 %39539, 1, !dbg !374
  %39541 = sext i32 %39540 to i64, !dbg !375
  %39542 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39541, !dbg !375
  %39543 = load double, ptr %6, align 8, !dbg !376
  %39544 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39545 = load double, ptr %39544, align 8, !dbg !376
  %39546 = load double, ptr %39542, align 16, !dbg !376
  %39547 = getelementptr inbounds { double, double }, ptr %39542, i32 0, i32 1, !dbg !376
  %39548 = load double, ptr %39547, align 8, !dbg !376
  %39549 = call { double, double } @make_vec(double %39543, double %39545, double %39546, double %39548), !dbg !376
  %39550 = extractvalue { double, double } %39549, 0, !dbg !376
  store double %39550, ptr %17, align 8, !dbg !376
  %39551 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39552 = extractvalue { double, double } %39549, 1, !dbg !376
  store double %39552, ptr %39551, align 8, !dbg !376
  %39553 = load double, ptr %16, align 8, !dbg !377
  %39554 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39555 = load double, ptr %39554, align 8, !dbg !377
  %39556 = load double, ptr %17, align 8, !dbg !377
  %39557 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39558 = load double, ptr %39557, align 8, !dbg !377
  %39559 = call double @cross(double %39553, double %39555, double %39556, double %39558), !dbg !377
  %39560 = load i32, ptr %10, align 4, !dbg !378
  %39561 = sext i32 %39560 to i64, !dbg !379
  %39562 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39561, !dbg !379
  %39563 = load double, ptr %6, align 8, !dbg !380
  %39564 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39565 = load double, ptr %39564, align 8, !dbg !380
  %39566 = load double, ptr %39562, align 16, !dbg !380
  %39567 = getelementptr inbounds { double, double }, ptr %39562, i32 0, i32 1, !dbg !380
  %39568 = load double, ptr %39567, align 8, !dbg !380
  %39569 = call { double, double } @make_vec(double %39563, double %39565, double %39566, double %39568), !dbg !380
  %39570 = extractvalue { double, double } %39569, 0, !dbg !380
  store double %39570, ptr %18, align 8, !dbg !380
  %39571 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39572 = extractvalue { double, double } %39569, 1, !dbg !380
  store double %39572, ptr %39571, align 8, !dbg !380
  %39573 = load i32, ptr %10, align 4, !dbg !381
  %39574 = add nsw i32 %39573, 1, !dbg !382
  %39575 = sext i32 %39574 to i64, !dbg !383
  %39576 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39575, !dbg !383
  %39577 = load double, ptr %6, align 8, !dbg !384
  %39578 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39579 = load double, ptr %39578, align 8, !dbg !384
  %39580 = load double, ptr %39576, align 16, !dbg !384
  %39581 = getelementptr inbounds { double, double }, ptr %39576, i32 0, i32 1, !dbg !384
  %39582 = load double, ptr %39581, align 8, !dbg !384
  %39583 = call { double, double } @make_vec(double %39577, double %39579, double %39580, double %39582), !dbg !384
  %39584 = extractvalue { double, double } %39583, 0, !dbg !384
  store double %39584, ptr %19, align 8, !dbg !384
  %39585 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39586 = extractvalue { double, double } %39583, 1, !dbg !384
  store double %39586, ptr %39585, align 8, !dbg !384
  %39587 = load double, ptr %18, align 8, !dbg !385
  %39588 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39589 = load double, ptr %39588, align 8, !dbg !385
  %39590 = load double, ptr %19, align 8, !dbg !385
  %39591 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39592 = load double, ptr %39591, align 8, !dbg !385
  %39593 = call double @dot(double %39587, double %39589, double %39590, double %39592), !dbg !385
  %39594 = call double @atan2(double noundef %39559, double noundef %39593) #6, !dbg !386
  store double %39594, ptr %13, align 8, !dbg !387
  %39595 = load double, ptr %13, align 8, !dbg !388
  %39596 = load double, ptr %14, align 8, !dbg !389
  %39597 = fadd double %39596, %39595, !dbg !389
  store double %39597, ptr %14, align 8, !dbg !389
  %39598 = load double, ptr %13, align 8, !dbg !390
  %39599 = fsub double %39598, 0x400921FB54442D18, !dbg !392
  %39600 = call double @llvm.fabs.f64(double %39599), !dbg !393
  %39601 = fcmp ole double %39600, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39601, label %14330, label %39602, !dbg !395

39602:                                            ; preds = %39525
  %39603 = load double, ptr %13, align 8, !dbg !396
  %39604 = fadd double %39603, 0x400921FB54442D18, !dbg !397
  %39605 = call double @llvm.fabs.f64(double %39604), !dbg !398
  %39606 = fcmp ole double %39605, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39606, label %14330, label %39607, !dbg !400

39607:                                            ; preds = %39602
  br label %39608, !dbg !403

39608:                                            ; preds = %39607
  %39609 = load i32, ptr %10, align 4, !dbg !404
  %39610 = add nsw i32 %39609, 1, !dbg !404
  store i32 %39610, ptr %10, align 4, !dbg !404
  %39611 = load i32, ptr %10, align 4, !dbg !364
  %39612 = load i32, ptr %8, align 4, !dbg !366
  %39613 = icmp slt i32 %39611, %39612, !dbg !367
  br i1 %39613, label %39614, label %48422, !dbg !368

39614:                                            ; preds = %39608
  %39615 = load i32, ptr %10, align 4, !dbg !369
  %39616 = sext i32 %39615 to i64, !dbg !371
  %39617 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39616, !dbg !371
  %39618 = load double, ptr %6, align 8, !dbg !372
  %39619 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39620 = load double, ptr %39619, align 8, !dbg !372
  %39621 = load double, ptr %39617, align 16, !dbg !372
  %39622 = getelementptr inbounds { double, double }, ptr %39617, i32 0, i32 1, !dbg !372
  %39623 = load double, ptr %39622, align 8, !dbg !372
  %39624 = call { double, double } @make_vec(double %39618, double %39620, double %39621, double %39623), !dbg !372
  %39625 = extractvalue { double, double } %39624, 0, !dbg !372
  store double %39625, ptr %16, align 8, !dbg !372
  %39626 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39627 = extractvalue { double, double } %39624, 1, !dbg !372
  store double %39627, ptr %39626, align 8, !dbg !372
  %39628 = load i32, ptr %10, align 4, !dbg !373
  %39629 = add nsw i32 %39628, 1, !dbg !374
  %39630 = sext i32 %39629 to i64, !dbg !375
  %39631 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39630, !dbg !375
  %39632 = load double, ptr %6, align 8, !dbg !376
  %39633 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39634 = load double, ptr %39633, align 8, !dbg !376
  %39635 = load double, ptr %39631, align 16, !dbg !376
  %39636 = getelementptr inbounds { double, double }, ptr %39631, i32 0, i32 1, !dbg !376
  %39637 = load double, ptr %39636, align 8, !dbg !376
  %39638 = call { double, double } @make_vec(double %39632, double %39634, double %39635, double %39637), !dbg !376
  %39639 = extractvalue { double, double } %39638, 0, !dbg !376
  store double %39639, ptr %17, align 8, !dbg !376
  %39640 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39641 = extractvalue { double, double } %39638, 1, !dbg !376
  store double %39641, ptr %39640, align 8, !dbg !376
  %39642 = load double, ptr %16, align 8, !dbg !377
  %39643 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39644 = load double, ptr %39643, align 8, !dbg !377
  %39645 = load double, ptr %17, align 8, !dbg !377
  %39646 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39647 = load double, ptr %39646, align 8, !dbg !377
  %39648 = call double @cross(double %39642, double %39644, double %39645, double %39647), !dbg !377
  %39649 = load i32, ptr %10, align 4, !dbg !378
  %39650 = sext i32 %39649 to i64, !dbg !379
  %39651 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39650, !dbg !379
  %39652 = load double, ptr %6, align 8, !dbg !380
  %39653 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39654 = load double, ptr %39653, align 8, !dbg !380
  %39655 = load double, ptr %39651, align 16, !dbg !380
  %39656 = getelementptr inbounds { double, double }, ptr %39651, i32 0, i32 1, !dbg !380
  %39657 = load double, ptr %39656, align 8, !dbg !380
  %39658 = call { double, double } @make_vec(double %39652, double %39654, double %39655, double %39657), !dbg !380
  %39659 = extractvalue { double, double } %39658, 0, !dbg !380
  store double %39659, ptr %18, align 8, !dbg !380
  %39660 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39661 = extractvalue { double, double } %39658, 1, !dbg !380
  store double %39661, ptr %39660, align 8, !dbg !380
  %39662 = load i32, ptr %10, align 4, !dbg !381
  %39663 = add nsw i32 %39662, 1, !dbg !382
  %39664 = sext i32 %39663 to i64, !dbg !383
  %39665 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39664, !dbg !383
  %39666 = load double, ptr %6, align 8, !dbg !384
  %39667 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39668 = load double, ptr %39667, align 8, !dbg !384
  %39669 = load double, ptr %39665, align 16, !dbg !384
  %39670 = getelementptr inbounds { double, double }, ptr %39665, i32 0, i32 1, !dbg !384
  %39671 = load double, ptr %39670, align 8, !dbg !384
  %39672 = call { double, double } @make_vec(double %39666, double %39668, double %39669, double %39671), !dbg !384
  %39673 = extractvalue { double, double } %39672, 0, !dbg !384
  store double %39673, ptr %19, align 8, !dbg !384
  %39674 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39675 = extractvalue { double, double } %39672, 1, !dbg !384
  store double %39675, ptr %39674, align 8, !dbg !384
  %39676 = load double, ptr %18, align 8, !dbg !385
  %39677 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39678 = load double, ptr %39677, align 8, !dbg !385
  %39679 = load double, ptr %19, align 8, !dbg !385
  %39680 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39681 = load double, ptr %39680, align 8, !dbg !385
  %39682 = call double @dot(double %39676, double %39678, double %39679, double %39681), !dbg !385
  %39683 = call double @atan2(double noundef %39648, double noundef %39682) #6, !dbg !386
  store double %39683, ptr %13, align 8, !dbg !387
  %39684 = load double, ptr %13, align 8, !dbg !388
  %39685 = load double, ptr %14, align 8, !dbg !389
  %39686 = fadd double %39685, %39684, !dbg !389
  store double %39686, ptr %14, align 8, !dbg !389
  %39687 = load double, ptr %13, align 8, !dbg !390
  %39688 = fsub double %39687, 0x400921FB54442D18, !dbg !392
  %39689 = call double @llvm.fabs.f64(double %39688), !dbg !393
  %39690 = fcmp ole double %39689, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39690, label %14330, label %39691, !dbg !395

39691:                                            ; preds = %39614
  %39692 = load double, ptr %13, align 8, !dbg !396
  %39693 = fadd double %39692, 0x400921FB54442D18, !dbg !397
  %39694 = call double @llvm.fabs.f64(double %39693), !dbg !398
  %39695 = fcmp ole double %39694, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39695, label %14330, label %39696, !dbg !400

39696:                                            ; preds = %39691
  br label %39697, !dbg !403

39697:                                            ; preds = %39696
  %39698 = load i32, ptr %10, align 4, !dbg !404
  %39699 = add nsw i32 %39698, 1, !dbg !404
  store i32 %39699, ptr %10, align 4, !dbg !404
  %39700 = load i32, ptr %10, align 4, !dbg !364
  %39701 = load i32, ptr %8, align 4, !dbg !366
  %39702 = icmp slt i32 %39700, %39701, !dbg !367
  br i1 %39702, label %39703, label %48422, !dbg !368

39703:                                            ; preds = %39697
  %39704 = load i32, ptr %10, align 4, !dbg !369
  %39705 = sext i32 %39704 to i64, !dbg !371
  %39706 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39705, !dbg !371
  %39707 = load double, ptr %6, align 8, !dbg !372
  %39708 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39709 = load double, ptr %39708, align 8, !dbg !372
  %39710 = load double, ptr %39706, align 16, !dbg !372
  %39711 = getelementptr inbounds { double, double }, ptr %39706, i32 0, i32 1, !dbg !372
  %39712 = load double, ptr %39711, align 8, !dbg !372
  %39713 = call { double, double } @make_vec(double %39707, double %39709, double %39710, double %39712), !dbg !372
  %39714 = extractvalue { double, double } %39713, 0, !dbg !372
  store double %39714, ptr %16, align 8, !dbg !372
  %39715 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39716 = extractvalue { double, double } %39713, 1, !dbg !372
  store double %39716, ptr %39715, align 8, !dbg !372
  %39717 = load i32, ptr %10, align 4, !dbg !373
  %39718 = add nsw i32 %39717, 1, !dbg !374
  %39719 = sext i32 %39718 to i64, !dbg !375
  %39720 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39719, !dbg !375
  %39721 = load double, ptr %6, align 8, !dbg !376
  %39722 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39723 = load double, ptr %39722, align 8, !dbg !376
  %39724 = load double, ptr %39720, align 16, !dbg !376
  %39725 = getelementptr inbounds { double, double }, ptr %39720, i32 0, i32 1, !dbg !376
  %39726 = load double, ptr %39725, align 8, !dbg !376
  %39727 = call { double, double } @make_vec(double %39721, double %39723, double %39724, double %39726), !dbg !376
  %39728 = extractvalue { double, double } %39727, 0, !dbg !376
  store double %39728, ptr %17, align 8, !dbg !376
  %39729 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39730 = extractvalue { double, double } %39727, 1, !dbg !376
  store double %39730, ptr %39729, align 8, !dbg !376
  %39731 = load double, ptr %16, align 8, !dbg !377
  %39732 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39733 = load double, ptr %39732, align 8, !dbg !377
  %39734 = load double, ptr %17, align 8, !dbg !377
  %39735 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39736 = load double, ptr %39735, align 8, !dbg !377
  %39737 = call double @cross(double %39731, double %39733, double %39734, double %39736), !dbg !377
  %39738 = load i32, ptr %10, align 4, !dbg !378
  %39739 = sext i32 %39738 to i64, !dbg !379
  %39740 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39739, !dbg !379
  %39741 = load double, ptr %6, align 8, !dbg !380
  %39742 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39743 = load double, ptr %39742, align 8, !dbg !380
  %39744 = load double, ptr %39740, align 16, !dbg !380
  %39745 = getelementptr inbounds { double, double }, ptr %39740, i32 0, i32 1, !dbg !380
  %39746 = load double, ptr %39745, align 8, !dbg !380
  %39747 = call { double, double } @make_vec(double %39741, double %39743, double %39744, double %39746), !dbg !380
  %39748 = extractvalue { double, double } %39747, 0, !dbg !380
  store double %39748, ptr %18, align 8, !dbg !380
  %39749 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39750 = extractvalue { double, double } %39747, 1, !dbg !380
  store double %39750, ptr %39749, align 8, !dbg !380
  %39751 = load i32, ptr %10, align 4, !dbg !381
  %39752 = add nsw i32 %39751, 1, !dbg !382
  %39753 = sext i32 %39752 to i64, !dbg !383
  %39754 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39753, !dbg !383
  %39755 = load double, ptr %6, align 8, !dbg !384
  %39756 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39757 = load double, ptr %39756, align 8, !dbg !384
  %39758 = load double, ptr %39754, align 16, !dbg !384
  %39759 = getelementptr inbounds { double, double }, ptr %39754, i32 0, i32 1, !dbg !384
  %39760 = load double, ptr %39759, align 8, !dbg !384
  %39761 = call { double, double } @make_vec(double %39755, double %39757, double %39758, double %39760), !dbg !384
  %39762 = extractvalue { double, double } %39761, 0, !dbg !384
  store double %39762, ptr %19, align 8, !dbg !384
  %39763 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39764 = extractvalue { double, double } %39761, 1, !dbg !384
  store double %39764, ptr %39763, align 8, !dbg !384
  %39765 = load double, ptr %18, align 8, !dbg !385
  %39766 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39767 = load double, ptr %39766, align 8, !dbg !385
  %39768 = load double, ptr %19, align 8, !dbg !385
  %39769 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39770 = load double, ptr %39769, align 8, !dbg !385
  %39771 = call double @dot(double %39765, double %39767, double %39768, double %39770), !dbg !385
  %39772 = call double @atan2(double noundef %39737, double noundef %39771) #6, !dbg !386
  store double %39772, ptr %13, align 8, !dbg !387
  %39773 = load double, ptr %13, align 8, !dbg !388
  %39774 = load double, ptr %14, align 8, !dbg !389
  %39775 = fadd double %39774, %39773, !dbg !389
  store double %39775, ptr %14, align 8, !dbg !389
  %39776 = load double, ptr %13, align 8, !dbg !390
  %39777 = fsub double %39776, 0x400921FB54442D18, !dbg !392
  %39778 = call double @llvm.fabs.f64(double %39777), !dbg !393
  %39779 = fcmp ole double %39778, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39779, label %14330, label %39780, !dbg !395

39780:                                            ; preds = %39703
  %39781 = load double, ptr %13, align 8, !dbg !396
  %39782 = fadd double %39781, 0x400921FB54442D18, !dbg !397
  %39783 = call double @llvm.fabs.f64(double %39782), !dbg !398
  %39784 = fcmp ole double %39783, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39784, label %14330, label %39785, !dbg !400

39785:                                            ; preds = %39780
  br label %39786, !dbg !403

39786:                                            ; preds = %39785
  %39787 = load i32, ptr %10, align 4, !dbg !404
  %39788 = add nsw i32 %39787, 1, !dbg !404
  store i32 %39788, ptr %10, align 4, !dbg !404
  %39789 = load i32, ptr %10, align 4, !dbg !364
  %39790 = load i32, ptr %8, align 4, !dbg !366
  %39791 = icmp slt i32 %39789, %39790, !dbg !367
  br i1 %39791, label %39792, label %48422, !dbg !368

39792:                                            ; preds = %39786
  %39793 = load i32, ptr %10, align 4, !dbg !369
  %39794 = sext i32 %39793 to i64, !dbg !371
  %39795 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39794, !dbg !371
  %39796 = load double, ptr %6, align 8, !dbg !372
  %39797 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39798 = load double, ptr %39797, align 8, !dbg !372
  %39799 = load double, ptr %39795, align 16, !dbg !372
  %39800 = getelementptr inbounds { double, double }, ptr %39795, i32 0, i32 1, !dbg !372
  %39801 = load double, ptr %39800, align 8, !dbg !372
  %39802 = call { double, double } @make_vec(double %39796, double %39798, double %39799, double %39801), !dbg !372
  %39803 = extractvalue { double, double } %39802, 0, !dbg !372
  store double %39803, ptr %16, align 8, !dbg !372
  %39804 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39805 = extractvalue { double, double } %39802, 1, !dbg !372
  store double %39805, ptr %39804, align 8, !dbg !372
  %39806 = load i32, ptr %10, align 4, !dbg !373
  %39807 = add nsw i32 %39806, 1, !dbg !374
  %39808 = sext i32 %39807 to i64, !dbg !375
  %39809 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39808, !dbg !375
  %39810 = load double, ptr %6, align 8, !dbg !376
  %39811 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39812 = load double, ptr %39811, align 8, !dbg !376
  %39813 = load double, ptr %39809, align 16, !dbg !376
  %39814 = getelementptr inbounds { double, double }, ptr %39809, i32 0, i32 1, !dbg !376
  %39815 = load double, ptr %39814, align 8, !dbg !376
  %39816 = call { double, double } @make_vec(double %39810, double %39812, double %39813, double %39815), !dbg !376
  %39817 = extractvalue { double, double } %39816, 0, !dbg !376
  store double %39817, ptr %17, align 8, !dbg !376
  %39818 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39819 = extractvalue { double, double } %39816, 1, !dbg !376
  store double %39819, ptr %39818, align 8, !dbg !376
  %39820 = load double, ptr %16, align 8, !dbg !377
  %39821 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39822 = load double, ptr %39821, align 8, !dbg !377
  %39823 = load double, ptr %17, align 8, !dbg !377
  %39824 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39825 = load double, ptr %39824, align 8, !dbg !377
  %39826 = call double @cross(double %39820, double %39822, double %39823, double %39825), !dbg !377
  %39827 = load i32, ptr %10, align 4, !dbg !378
  %39828 = sext i32 %39827 to i64, !dbg !379
  %39829 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39828, !dbg !379
  %39830 = load double, ptr %6, align 8, !dbg !380
  %39831 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39832 = load double, ptr %39831, align 8, !dbg !380
  %39833 = load double, ptr %39829, align 16, !dbg !380
  %39834 = getelementptr inbounds { double, double }, ptr %39829, i32 0, i32 1, !dbg !380
  %39835 = load double, ptr %39834, align 8, !dbg !380
  %39836 = call { double, double } @make_vec(double %39830, double %39832, double %39833, double %39835), !dbg !380
  %39837 = extractvalue { double, double } %39836, 0, !dbg !380
  store double %39837, ptr %18, align 8, !dbg !380
  %39838 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39839 = extractvalue { double, double } %39836, 1, !dbg !380
  store double %39839, ptr %39838, align 8, !dbg !380
  %39840 = load i32, ptr %10, align 4, !dbg !381
  %39841 = add nsw i32 %39840, 1, !dbg !382
  %39842 = sext i32 %39841 to i64, !dbg !383
  %39843 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39842, !dbg !383
  %39844 = load double, ptr %6, align 8, !dbg !384
  %39845 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39846 = load double, ptr %39845, align 8, !dbg !384
  %39847 = load double, ptr %39843, align 16, !dbg !384
  %39848 = getelementptr inbounds { double, double }, ptr %39843, i32 0, i32 1, !dbg !384
  %39849 = load double, ptr %39848, align 8, !dbg !384
  %39850 = call { double, double } @make_vec(double %39844, double %39846, double %39847, double %39849), !dbg !384
  %39851 = extractvalue { double, double } %39850, 0, !dbg !384
  store double %39851, ptr %19, align 8, !dbg !384
  %39852 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39853 = extractvalue { double, double } %39850, 1, !dbg !384
  store double %39853, ptr %39852, align 8, !dbg !384
  %39854 = load double, ptr %18, align 8, !dbg !385
  %39855 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39856 = load double, ptr %39855, align 8, !dbg !385
  %39857 = load double, ptr %19, align 8, !dbg !385
  %39858 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39859 = load double, ptr %39858, align 8, !dbg !385
  %39860 = call double @dot(double %39854, double %39856, double %39857, double %39859), !dbg !385
  %39861 = call double @atan2(double noundef %39826, double noundef %39860) #6, !dbg !386
  store double %39861, ptr %13, align 8, !dbg !387
  %39862 = load double, ptr %13, align 8, !dbg !388
  %39863 = load double, ptr %14, align 8, !dbg !389
  %39864 = fadd double %39863, %39862, !dbg !389
  store double %39864, ptr %14, align 8, !dbg !389
  %39865 = load double, ptr %13, align 8, !dbg !390
  %39866 = fsub double %39865, 0x400921FB54442D18, !dbg !392
  %39867 = call double @llvm.fabs.f64(double %39866), !dbg !393
  %39868 = fcmp ole double %39867, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39868, label %14330, label %39869, !dbg !395

39869:                                            ; preds = %39792
  %39870 = load double, ptr %13, align 8, !dbg !396
  %39871 = fadd double %39870, 0x400921FB54442D18, !dbg !397
  %39872 = call double @llvm.fabs.f64(double %39871), !dbg !398
  %39873 = fcmp ole double %39872, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39873, label %14330, label %39874, !dbg !400

39874:                                            ; preds = %39869
  br label %39875, !dbg !403

39875:                                            ; preds = %39874
  %39876 = load i32, ptr %10, align 4, !dbg !404
  %39877 = add nsw i32 %39876, 1, !dbg !404
  store i32 %39877, ptr %10, align 4, !dbg !404
  %39878 = load i32, ptr %10, align 4, !dbg !364
  %39879 = load i32, ptr %8, align 4, !dbg !366
  %39880 = icmp slt i32 %39878, %39879, !dbg !367
  br i1 %39880, label %39881, label %48422, !dbg !368

39881:                                            ; preds = %39875
  %39882 = load i32, ptr %10, align 4, !dbg !369
  %39883 = sext i32 %39882 to i64, !dbg !371
  %39884 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39883, !dbg !371
  %39885 = load double, ptr %6, align 8, !dbg !372
  %39886 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39887 = load double, ptr %39886, align 8, !dbg !372
  %39888 = load double, ptr %39884, align 16, !dbg !372
  %39889 = getelementptr inbounds { double, double }, ptr %39884, i32 0, i32 1, !dbg !372
  %39890 = load double, ptr %39889, align 8, !dbg !372
  %39891 = call { double, double } @make_vec(double %39885, double %39887, double %39888, double %39890), !dbg !372
  %39892 = extractvalue { double, double } %39891, 0, !dbg !372
  store double %39892, ptr %16, align 8, !dbg !372
  %39893 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39894 = extractvalue { double, double } %39891, 1, !dbg !372
  store double %39894, ptr %39893, align 8, !dbg !372
  %39895 = load i32, ptr %10, align 4, !dbg !373
  %39896 = add nsw i32 %39895, 1, !dbg !374
  %39897 = sext i32 %39896 to i64, !dbg !375
  %39898 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39897, !dbg !375
  %39899 = load double, ptr %6, align 8, !dbg !376
  %39900 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39901 = load double, ptr %39900, align 8, !dbg !376
  %39902 = load double, ptr %39898, align 16, !dbg !376
  %39903 = getelementptr inbounds { double, double }, ptr %39898, i32 0, i32 1, !dbg !376
  %39904 = load double, ptr %39903, align 8, !dbg !376
  %39905 = call { double, double } @make_vec(double %39899, double %39901, double %39902, double %39904), !dbg !376
  %39906 = extractvalue { double, double } %39905, 0, !dbg !376
  store double %39906, ptr %17, align 8, !dbg !376
  %39907 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39908 = extractvalue { double, double } %39905, 1, !dbg !376
  store double %39908, ptr %39907, align 8, !dbg !376
  %39909 = load double, ptr %16, align 8, !dbg !377
  %39910 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %39911 = load double, ptr %39910, align 8, !dbg !377
  %39912 = load double, ptr %17, align 8, !dbg !377
  %39913 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %39914 = load double, ptr %39913, align 8, !dbg !377
  %39915 = call double @cross(double %39909, double %39911, double %39912, double %39914), !dbg !377
  %39916 = load i32, ptr %10, align 4, !dbg !378
  %39917 = sext i32 %39916 to i64, !dbg !379
  %39918 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39917, !dbg !379
  %39919 = load double, ptr %6, align 8, !dbg !380
  %39920 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %39921 = load double, ptr %39920, align 8, !dbg !380
  %39922 = load double, ptr %39918, align 16, !dbg !380
  %39923 = getelementptr inbounds { double, double }, ptr %39918, i32 0, i32 1, !dbg !380
  %39924 = load double, ptr %39923, align 8, !dbg !380
  %39925 = call { double, double } @make_vec(double %39919, double %39921, double %39922, double %39924), !dbg !380
  %39926 = extractvalue { double, double } %39925, 0, !dbg !380
  store double %39926, ptr %18, align 8, !dbg !380
  %39927 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %39928 = extractvalue { double, double } %39925, 1, !dbg !380
  store double %39928, ptr %39927, align 8, !dbg !380
  %39929 = load i32, ptr %10, align 4, !dbg !381
  %39930 = add nsw i32 %39929, 1, !dbg !382
  %39931 = sext i32 %39930 to i64, !dbg !383
  %39932 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39931, !dbg !383
  %39933 = load double, ptr %6, align 8, !dbg !384
  %39934 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %39935 = load double, ptr %39934, align 8, !dbg !384
  %39936 = load double, ptr %39932, align 16, !dbg !384
  %39937 = getelementptr inbounds { double, double }, ptr %39932, i32 0, i32 1, !dbg !384
  %39938 = load double, ptr %39937, align 8, !dbg !384
  %39939 = call { double, double } @make_vec(double %39933, double %39935, double %39936, double %39938), !dbg !384
  %39940 = extractvalue { double, double } %39939, 0, !dbg !384
  store double %39940, ptr %19, align 8, !dbg !384
  %39941 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %39942 = extractvalue { double, double } %39939, 1, !dbg !384
  store double %39942, ptr %39941, align 8, !dbg !384
  %39943 = load double, ptr %18, align 8, !dbg !385
  %39944 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %39945 = load double, ptr %39944, align 8, !dbg !385
  %39946 = load double, ptr %19, align 8, !dbg !385
  %39947 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %39948 = load double, ptr %39947, align 8, !dbg !385
  %39949 = call double @dot(double %39943, double %39945, double %39946, double %39948), !dbg !385
  %39950 = call double @atan2(double noundef %39915, double noundef %39949) #6, !dbg !386
  store double %39950, ptr %13, align 8, !dbg !387
  %39951 = load double, ptr %13, align 8, !dbg !388
  %39952 = load double, ptr %14, align 8, !dbg !389
  %39953 = fadd double %39952, %39951, !dbg !389
  store double %39953, ptr %14, align 8, !dbg !389
  %39954 = load double, ptr %13, align 8, !dbg !390
  %39955 = fsub double %39954, 0x400921FB54442D18, !dbg !392
  %39956 = call double @llvm.fabs.f64(double %39955), !dbg !393
  %39957 = fcmp ole double %39956, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %39957, label %14330, label %39958, !dbg !395

39958:                                            ; preds = %39881
  %39959 = load double, ptr %13, align 8, !dbg !396
  %39960 = fadd double %39959, 0x400921FB54442D18, !dbg !397
  %39961 = call double @llvm.fabs.f64(double %39960), !dbg !398
  %39962 = fcmp ole double %39961, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %39962, label %14330, label %39963, !dbg !400

39963:                                            ; preds = %39958
  br label %39964, !dbg !403

39964:                                            ; preds = %39963
  %39965 = load i32, ptr %10, align 4, !dbg !404
  %39966 = add nsw i32 %39965, 1, !dbg !404
  store i32 %39966, ptr %10, align 4, !dbg !404
  %39967 = load i32, ptr %10, align 4, !dbg !364
  %39968 = load i32, ptr %8, align 4, !dbg !366
  %39969 = icmp slt i32 %39967, %39968, !dbg !367
  br i1 %39969, label %39970, label %48422, !dbg !368

39970:                                            ; preds = %39964
  %39971 = load i32, ptr %10, align 4, !dbg !369
  %39972 = sext i32 %39971 to i64, !dbg !371
  %39973 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39972, !dbg !371
  %39974 = load double, ptr %6, align 8, !dbg !372
  %39975 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %39976 = load double, ptr %39975, align 8, !dbg !372
  %39977 = load double, ptr %39973, align 16, !dbg !372
  %39978 = getelementptr inbounds { double, double }, ptr %39973, i32 0, i32 1, !dbg !372
  %39979 = load double, ptr %39978, align 8, !dbg !372
  %39980 = call { double, double } @make_vec(double %39974, double %39976, double %39977, double %39979), !dbg !372
  %39981 = extractvalue { double, double } %39980, 0, !dbg !372
  store double %39981, ptr %16, align 8, !dbg !372
  %39982 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %39983 = extractvalue { double, double } %39980, 1, !dbg !372
  store double %39983, ptr %39982, align 8, !dbg !372
  %39984 = load i32, ptr %10, align 4, !dbg !373
  %39985 = add nsw i32 %39984, 1, !dbg !374
  %39986 = sext i32 %39985 to i64, !dbg !375
  %39987 = getelementptr inbounds %struct.POINT, ptr %26, i64 %39986, !dbg !375
  %39988 = load double, ptr %6, align 8, !dbg !376
  %39989 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %39990 = load double, ptr %39989, align 8, !dbg !376
  %39991 = load double, ptr %39987, align 16, !dbg !376
  %39992 = getelementptr inbounds { double, double }, ptr %39987, i32 0, i32 1, !dbg !376
  %39993 = load double, ptr %39992, align 8, !dbg !376
  %39994 = call { double, double } @make_vec(double %39988, double %39990, double %39991, double %39993), !dbg !376
  %39995 = extractvalue { double, double } %39994, 0, !dbg !376
  store double %39995, ptr %17, align 8, !dbg !376
  %39996 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %39997 = extractvalue { double, double } %39994, 1, !dbg !376
  store double %39997, ptr %39996, align 8, !dbg !376
  %39998 = load double, ptr %16, align 8, !dbg !377
  %39999 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40000 = load double, ptr %39999, align 8, !dbg !377
  %40001 = load double, ptr %17, align 8, !dbg !377
  %40002 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40003 = load double, ptr %40002, align 8, !dbg !377
  %40004 = call double @cross(double %39998, double %40000, double %40001, double %40003), !dbg !377
  %40005 = load i32, ptr %10, align 4, !dbg !378
  %40006 = sext i32 %40005 to i64, !dbg !379
  %40007 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40006, !dbg !379
  %40008 = load double, ptr %6, align 8, !dbg !380
  %40009 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40010 = load double, ptr %40009, align 8, !dbg !380
  %40011 = load double, ptr %40007, align 16, !dbg !380
  %40012 = getelementptr inbounds { double, double }, ptr %40007, i32 0, i32 1, !dbg !380
  %40013 = load double, ptr %40012, align 8, !dbg !380
  %40014 = call { double, double } @make_vec(double %40008, double %40010, double %40011, double %40013), !dbg !380
  %40015 = extractvalue { double, double } %40014, 0, !dbg !380
  store double %40015, ptr %18, align 8, !dbg !380
  %40016 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40017 = extractvalue { double, double } %40014, 1, !dbg !380
  store double %40017, ptr %40016, align 8, !dbg !380
  %40018 = load i32, ptr %10, align 4, !dbg !381
  %40019 = add nsw i32 %40018, 1, !dbg !382
  %40020 = sext i32 %40019 to i64, !dbg !383
  %40021 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40020, !dbg !383
  %40022 = load double, ptr %6, align 8, !dbg !384
  %40023 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40024 = load double, ptr %40023, align 8, !dbg !384
  %40025 = load double, ptr %40021, align 16, !dbg !384
  %40026 = getelementptr inbounds { double, double }, ptr %40021, i32 0, i32 1, !dbg !384
  %40027 = load double, ptr %40026, align 8, !dbg !384
  %40028 = call { double, double } @make_vec(double %40022, double %40024, double %40025, double %40027), !dbg !384
  %40029 = extractvalue { double, double } %40028, 0, !dbg !384
  store double %40029, ptr %19, align 8, !dbg !384
  %40030 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40031 = extractvalue { double, double } %40028, 1, !dbg !384
  store double %40031, ptr %40030, align 8, !dbg !384
  %40032 = load double, ptr %18, align 8, !dbg !385
  %40033 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40034 = load double, ptr %40033, align 8, !dbg !385
  %40035 = load double, ptr %19, align 8, !dbg !385
  %40036 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40037 = load double, ptr %40036, align 8, !dbg !385
  %40038 = call double @dot(double %40032, double %40034, double %40035, double %40037), !dbg !385
  %40039 = call double @atan2(double noundef %40004, double noundef %40038) #6, !dbg !386
  store double %40039, ptr %13, align 8, !dbg !387
  %40040 = load double, ptr %13, align 8, !dbg !388
  %40041 = load double, ptr %14, align 8, !dbg !389
  %40042 = fadd double %40041, %40040, !dbg !389
  store double %40042, ptr %14, align 8, !dbg !389
  %40043 = load double, ptr %13, align 8, !dbg !390
  %40044 = fsub double %40043, 0x400921FB54442D18, !dbg !392
  %40045 = call double @llvm.fabs.f64(double %40044), !dbg !393
  %40046 = fcmp ole double %40045, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40046, label %14330, label %40047, !dbg !395

40047:                                            ; preds = %39970
  %40048 = load double, ptr %13, align 8, !dbg !396
  %40049 = fadd double %40048, 0x400921FB54442D18, !dbg !397
  %40050 = call double @llvm.fabs.f64(double %40049), !dbg !398
  %40051 = fcmp ole double %40050, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40051, label %14330, label %40052, !dbg !400

40052:                                            ; preds = %40047
  br label %40053, !dbg !403

40053:                                            ; preds = %40052
  %40054 = load i32, ptr %10, align 4, !dbg !404
  %40055 = add nsw i32 %40054, 1, !dbg !404
  store i32 %40055, ptr %10, align 4, !dbg !404
  %40056 = load i32, ptr %10, align 4, !dbg !364
  %40057 = load i32, ptr %8, align 4, !dbg !366
  %40058 = icmp slt i32 %40056, %40057, !dbg !367
  br i1 %40058, label %40059, label %48422, !dbg !368

40059:                                            ; preds = %40053
  %40060 = load i32, ptr %10, align 4, !dbg !369
  %40061 = sext i32 %40060 to i64, !dbg !371
  %40062 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40061, !dbg !371
  %40063 = load double, ptr %6, align 8, !dbg !372
  %40064 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40065 = load double, ptr %40064, align 8, !dbg !372
  %40066 = load double, ptr %40062, align 16, !dbg !372
  %40067 = getelementptr inbounds { double, double }, ptr %40062, i32 0, i32 1, !dbg !372
  %40068 = load double, ptr %40067, align 8, !dbg !372
  %40069 = call { double, double } @make_vec(double %40063, double %40065, double %40066, double %40068), !dbg !372
  %40070 = extractvalue { double, double } %40069, 0, !dbg !372
  store double %40070, ptr %16, align 8, !dbg !372
  %40071 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40072 = extractvalue { double, double } %40069, 1, !dbg !372
  store double %40072, ptr %40071, align 8, !dbg !372
  %40073 = load i32, ptr %10, align 4, !dbg !373
  %40074 = add nsw i32 %40073, 1, !dbg !374
  %40075 = sext i32 %40074 to i64, !dbg !375
  %40076 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40075, !dbg !375
  %40077 = load double, ptr %6, align 8, !dbg !376
  %40078 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40079 = load double, ptr %40078, align 8, !dbg !376
  %40080 = load double, ptr %40076, align 16, !dbg !376
  %40081 = getelementptr inbounds { double, double }, ptr %40076, i32 0, i32 1, !dbg !376
  %40082 = load double, ptr %40081, align 8, !dbg !376
  %40083 = call { double, double } @make_vec(double %40077, double %40079, double %40080, double %40082), !dbg !376
  %40084 = extractvalue { double, double } %40083, 0, !dbg !376
  store double %40084, ptr %17, align 8, !dbg !376
  %40085 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40086 = extractvalue { double, double } %40083, 1, !dbg !376
  store double %40086, ptr %40085, align 8, !dbg !376
  %40087 = load double, ptr %16, align 8, !dbg !377
  %40088 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40089 = load double, ptr %40088, align 8, !dbg !377
  %40090 = load double, ptr %17, align 8, !dbg !377
  %40091 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40092 = load double, ptr %40091, align 8, !dbg !377
  %40093 = call double @cross(double %40087, double %40089, double %40090, double %40092), !dbg !377
  %40094 = load i32, ptr %10, align 4, !dbg !378
  %40095 = sext i32 %40094 to i64, !dbg !379
  %40096 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40095, !dbg !379
  %40097 = load double, ptr %6, align 8, !dbg !380
  %40098 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40099 = load double, ptr %40098, align 8, !dbg !380
  %40100 = load double, ptr %40096, align 16, !dbg !380
  %40101 = getelementptr inbounds { double, double }, ptr %40096, i32 0, i32 1, !dbg !380
  %40102 = load double, ptr %40101, align 8, !dbg !380
  %40103 = call { double, double } @make_vec(double %40097, double %40099, double %40100, double %40102), !dbg !380
  %40104 = extractvalue { double, double } %40103, 0, !dbg !380
  store double %40104, ptr %18, align 8, !dbg !380
  %40105 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40106 = extractvalue { double, double } %40103, 1, !dbg !380
  store double %40106, ptr %40105, align 8, !dbg !380
  %40107 = load i32, ptr %10, align 4, !dbg !381
  %40108 = add nsw i32 %40107, 1, !dbg !382
  %40109 = sext i32 %40108 to i64, !dbg !383
  %40110 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40109, !dbg !383
  %40111 = load double, ptr %6, align 8, !dbg !384
  %40112 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40113 = load double, ptr %40112, align 8, !dbg !384
  %40114 = load double, ptr %40110, align 16, !dbg !384
  %40115 = getelementptr inbounds { double, double }, ptr %40110, i32 0, i32 1, !dbg !384
  %40116 = load double, ptr %40115, align 8, !dbg !384
  %40117 = call { double, double } @make_vec(double %40111, double %40113, double %40114, double %40116), !dbg !384
  %40118 = extractvalue { double, double } %40117, 0, !dbg !384
  store double %40118, ptr %19, align 8, !dbg !384
  %40119 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40120 = extractvalue { double, double } %40117, 1, !dbg !384
  store double %40120, ptr %40119, align 8, !dbg !384
  %40121 = load double, ptr %18, align 8, !dbg !385
  %40122 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40123 = load double, ptr %40122, align 8, !dbg !385
  %40124 = load double, ptr %19, align 8, !dbg !385
  %40125 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40126 = load double, ptr %40125, align 8, !dbg !385
  %40127 = call double @dot(double %40121, double %40123, double %40124, double %40126), !dbg !385
  %40128 = call double @atan2(double noundef %40093, double noundef %40127) #6, !dbg !386
  store double %40128, ptr %13, align 8, !dbg !387
  %40129 = load double, ptr %13, align 8, !dbg !388
  %40130 = load double, ptr %14, align 8, !dbg !389
  %40131 = fadd double %40130, %40129, !dbg !389
  store double %40131, ptr %14, align 8, !dbg !389
  %40132 = load double, ptr %13, align 8, !dbg !390
  %40133 = fsub double %40132, 0x400921FB54442D18, !dbg !392
  %40134 = call double @llvm.fabs.f64(double %40133), !dbg !393
  %40135 = fcmp ole double %40134, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40135, label %14330, label %40136, !dbg !395

40136:                                            ; preds = %40059
  %40137 = load double, ptr %13, align 8, !dbg !396
  %40138 = fadd double %40137, 0x400921FB54442D18, !dbg !397
  %40139 = call double @llvm.fabs.f64(double %40138), !dbg !398
  %40140 = fcmp ole double %40139, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40140, label %14330, label %40141, !dbg !400

40141:                                            ; preds = %40136
  br label %40142, !dbg !403

40142:                                            ; preds = %40141
  %40143 = load i32, ptr %10, align 4, !dbg !404
  %40144 = add nsw i32 %40143, 1, !dbg !404
  store i32 %40144, ptr %10, align 4, !dbg !404
  %40145 = load i32, ptr %10, align 4, !dbg !364
  %40146 = load i32, ptr %8, align 4, !dbg !366
  %40147 = icmp slt i32 %40145, %40146, !dbg !367
  br i1 %40147, label %40148, label %48422, !dbg !368

40148:                                            ; preds = %40142
  %40149 = load i32, ptr %10, align 4, !dbg !369
  %40150 = sext i32 %40149 to i64, !dbg !371
  %40151 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40150, !dbg !371
  %40152 = load double, ptr %6, align 8, !dbg !372
  %40153 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40154 = load double, ptr %40153, align 8, !dbg !372
  %40155 = load double, ptr %40151, align 16, !dbg !372
  %40156 = getelementptr inbounds { double, double }, ptr %40151, i32 0, i32 1, !dbg !372
  %40157 = load double, ptr %40156, align 8, !dbg !372
  %40158 = call { double, double } @make_vec(double %40152, double %40154, double %40155, double %40157), !dbg !372
  %40159 = extractvalue { double, double } %40158, 0, !dbg !372
  store double %40159, ptr %16, align 8, !dbg !372
  %40160 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40161 = extractvalue { double, double } %40158, 1, !dbg !372
  store double %40161, ptr %40160, align 8, !dbg !372
  %40162 = load i32, ptr %10, align 4, !dbg !373
  %40163 = add nsw i32 %40162, 1, !dbg !374
  %40164 = sext i32 %40163 to i64, !dbg !375
  %40165 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40164, !dbg !375
  %40166 = load double, ptr %6, align 8, !dbg !376
  %40167 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40168 = load double, ptr %40167, align 8, !dbg !376
  %40169 = load double, ptr %40165, align 16, !dbg !376
  %40170 = getelementptr inbounds { double, double }, ptr %40165, i32 0, i32 1, !dbg !376
  %40171 = load double, ptr %40170, align 8, !dbg !376
  %40172 = call { double, double } @make_vec(double %40166, double %40168, double %40169, double %40171), !dbg !376
  %40173 = extractvalue { double, double } %40172, 0, !dbg !376
  store double %40173, ptr %17, align 8, !dbg !376
  %40174 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40175 = extractvalue { double, double } %40172, 1, !dbg !376
  store double %40175, ptr %40174, align 8, !dbg !376
  %40176 = load double, ptr %16, align 8, !dbg !377
  %40177 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40178 = load double, ptr %40177, align 8, !dbg !377
  %40179 = load double, ptr %17, align 8, !dbg !377
  %40180 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40181 = load double, ptr %40180, align 8, !dbg !377
  %40182 = call double @cross(double %40176, double %40178, double %40179, double %40181), !dbg !377
  %40183 = load i32, ptr %10, align 4, !dbg !378
  %40184 = sext i32 %40183 to i64, !dbg !379
  %40185 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40184, !dbg !379
  %40186 = load double, ptr %6, align 8, !dbg !380
  %40187 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40188 = load double, ptr %40187, align 8, !dbg !380
  %40189 = load double, ptr %40185, align 16, !dbg !380
  %40190 = getelementptr inbounds { double, double }, ptr %40185, i32 0, i32 1, !dbg !380
  %40191 = load double, ptr %40190, align 8, !dbg !380
  %40192 = call { double, double } @make_vec(double %40186, double %40188, double %40189, double %40191), !dbg !380
  %40193 = extractvalue { double, double } %40192, 0, !dbg !380
  store double %40193, ptr %18, align 8, !dbg !380
  %40194 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40195 = extractvalue { double, double } %40192, 1, !dbg !380
  store double %40195, ptr %40194, align 8, !dbg !380
  %40196 = load i32, ptr %10, align 4, !dbg !381
  %40197 = add nsw i32 %40196, 1, !dbg !382
  %40198 = sext i32 %40197 to i64, !dbg !383
  %40199 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40198, !dbg !383
  %40200 = load double, ptr %6, align 8, !dbg !384
  %40201 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40202 = load double, ptr %40201, align 8, !dbg !384
  %40203 = load double, ptr %40199, align 16, !dbg !384
  %40204 = getelementptr inbounds { double, double }, ptr %40199, i32 0, i32 1, !dbg !384
  %40205 = load double, ptr %40204, align 8, !dbg !384
  %40206 = call { double, double } @make_vec(double %40200, double %40202, double %40203, double %40205), !dbg !384
  %40207 = extractvalue { double, double } %40206, 0, !dbg !384
  store double %40207, ptr %19, align 8, !dbg !384
  %40208 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40209 = extractvalue { double, double } %40206, 1, !dbg !384
  store double %40209, ptr %40208, align 8, !dbg !384
  %40210 = load double, ptr %18, align 8, !dbg !385
  %40211 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40212 = load double, ptr %40211, align 8, !dbg !385
  %40213 = load double, ptr %19, align 8, !dbg !385
  %40214 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40215 = load double, ptr %40214, align 8, !dbg !385
  %40216 = call double @dot(double %40210, double %40212, double %40213, double %40215), !dbg !385
  %40217 = call double @atan2(double noundef %40182, double noundef %40216) #6, !dbg !386
  store double %40217, ptr %13, align 8, !dbg !387
  %40218 = load double, ptr %13, align 8, !dbg !388
  %40219 = load double, ptr %14, align 8, !dbg !389
  %40220 = fadd double %40219, %40218, !dbg !389
  store double %40220, ptr %14, align 8, !dbg !389
  %40221 = load double, ptr %13, align 8, !dbg !390
  %40222 = fsub double %40221, 0x400921FB54442D18, !dbg !392
  %40223 = call double @llvm.fabs.f64(double %40222), !dbg !393
  %40224 = fcmp ole double %40223, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40224, label %14330, label %40225, !dbg !395

40225:                                            ; preds = %40148
  %40226 = load double, ptr %13, align 8, !dbg !396
  %40227 = fadd double %40226, 0x400921FB54442D18, !dbg !397
  %40228 = call double @llvm.fabs.f64(double %40227), !dbg !398
  %40229 = fcmp ole double %40228, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40229, label %14330, label %40230, !dbg !400

40230:                                            ; preds = %40225
  br label %40231, !dbg !403

40231:                                            ; preds = %40230
  %40232 = load i32, ptr %10, align 4, !dbg !404
  %40233 = add nsw i32 %40232, 1, !dbg !404
  store i32 %40233, ptr %10, align 4, !dbg !404
  %40234 = load i32, ptr %10, align 4, !dbg !364
  %40235 = load i32, ptr %8, align 4, !dbg !366
  %40236 = icmp slt i32 %40234, %40235, !dbg !367
  br i1 %40236, label %40237, label %48422, !dbg !368

40237:                                            ; preds = %40231
  %40238 = load i32, ptr %10, align 4, !dbg !369
  %40239 = sext i32 %40238 to i64, !dbg !371
  %40240 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40239, !dbg !371
  %40241 = load double, ptr %6, align 8, !dbg !372
  %40242 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40243 = load double, ptr %40242, align 8, !dbg !372
  %40244 = load double, ptr %40240, align 16, !dbg !372
  %40245 = getelementptr inbounds { double, double }, ptr %40240, i32 0, i32 1, !dbg !372
  %40246 = load double, ptr %40245, align 8, !dbg !372
  %40247 = call { double, double } @make_vec(double %40241, double %40243, double %40244, double %40246), !dbg !372
  %40248 = extractvalue { double, double } %40247, 0, !dbg !372
  store double %40248, ptr %16, align 8, !dbg !372
  %40249 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40250 = extractvalue { double, double } %40247, 1, !dbg !372
  store double %40250, ptr %40249, align 8, !dbg !372
  %40251 = load i32, ptr %10, align 4, !dbg !373
  %40252 = add nsw i32 %40251, 1, !dbg !374
  %40253 = sext i32 %40252 to i64, !dbg !375
  %40254 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40253, !dbg !375
  %40255 = load double, ptr %6, align 8, !dbg !376
  %40256 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40257 = load double, ptr %40256, align 8, !dbg !376
  %40258 = load double, ptr %40254, align 16, !dbg !376
  %40259 = getelementptr inbounds { double, double }, ptr %40254, i32 0, i32 1, !dbg !376
  %40260 = load double, ptr %40259, align 8, !dbg !376
  %40261 = call { double, double } @make_vec(double %40255, double %40257, double %40258, double %40260), !dbg !376
  %40262 = extractvalue { double, double } %40261, 0, !dbg !376
  store double %40262, ptr %17, align 8, !dbg !376
  %40263 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40264 = extractvalue { double, double } %40261, 1, !dbg !376
  store double %40264, ptr %40263, align 8, !dbg !376
  %40265 = load double, ptr %16, align 8, !dbg !377
  %40266 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40267 = load double, ptr %40266, align 8, !dbg !377
  %40268 = load double, ptr %17, align 8, !dbg !377
  %40269 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40270 = load double, ptr %40269, align 8, !dbg !377
  %40271 = call double @cross(double %40265, double %40267, double %40268, double %40270), !dbg !377
  %40272 = load i32, ptr %10, align 4, !dbg !378
  %40273 = sext i32 %40272 to i64, !dbg !379
  %40274 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40273, !dbg !379
  %40275 = load double, ptr %6, align 8, !dbg !380
  %40276 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40277 = load double, ptr %40276, align 8, !dbg !380
  %40278 = load double, ptr %40274, align 16, !dbg !380
  %40279 = getelementptr inbounds { double, double }, ptr %40274, i32 0, i32 1, !dbg !380
  %40280 = load double, ptr %40279, align 8, !dbg !380
  %40281 = call { double, double } @make_vec(double %40275, double %40277, double %40278, double %40280), !dbg !380
  %40282 = extractvalue { double, double } %40281, 0, !dbg !380
  store double %40282, ptr %18, align 8, !dbg !380
  %40283 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40284 = extractvalue { double, double } %40281, 1, !dbg !380
  store double %40284, ptr %40283, align 8, !dbg !380
  %40285 = load i32, ptr %10, align 4, !dbg !381
  %40286 = add nsw i32 %40285, 1, !dbg !382
  %40287 = sext i32 %40286 to i64, !dbg !383
  %40288 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40287, !dbg !383
  %40289 = load double, ptr %6, align 8, !dbg !384
  %40290 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40291 = load double, ptr %40290, align 8, !dbg !384
  %40292 = load double, ptr %40288, align 16, !dbg !384
  %40293 = getelementptr inbounds { double, double }, ptr %40288, i32 0, i32 1, !dbg !384
  %40294 = load double, ptr %40293, align 8, !dbg !384
  %40295 = call { double, double } @make_vec(double %40289, double %40291, double %40292, double %40294), !dbg !384
  %40296 = extractvalue { double, double } %40295, 0, !dbg !384
  store double %40296, ptr %19, align 8, !dbg !384
  %40297 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40298 = extractvalue { double, double } %40295, 1, !dbg !384
  store double %40298, ptr %40297, align 8, !dbg !384
  %40299 = load double, ptr %18, align 8, !dbg !385
  %40300 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40301 = load double, ptr %40300, align 8, !dbg !385
  %40302 = load double, ptr %19, align 8, !dbg !385
  %40303 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40304 = load double, ptr %40303, align 8, !dbg !385
  %40305 = call double @dot(double %40299, double %40301, double %40302, double %40304), !dbg !385
  %40306 = call double @atan2(double noundef %40271, double noundef %40305) #6, !dbg !386
  store double %40306, ptr %13, align 8, !dbg !387
  %40307 = load double, ptr %13, align 8, !dbg !388
  %40308 = load double, ptr %14, align 8, !dbg !389
  %40309 = fadd double %40308, %40307, !dbg !389
  store double %40309, ptr %14, align 8, !dbg !389
  %40310 = load double, ptr %13, align 8, !dbg !390
  %40311 = fsub double %40310, 0x400921FB54442D18, !dbg !392
  %40312 = call double @llvm.fabs.f64(double %40311), !dbg !393
  %40313 = fcmp ole double %40312, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40313, label %14330, label %40314, !dbg !395

40314:                                            ; preds = %40237
  %40315 = load double, ptr %13, align 8, !dbg !396
  %40316 = fadd double %40315, 0x400921FB54442D18, !dbg !397
  %40317 = call double @llvm.fabs.f64(double %40316), !dbg !398
  %40318 = fcmp ole double %40317, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40318, label %14330, label %40319, !dbg !400

40319:                                            ; preds = %40314
  br label %40320, !dbg !403

40320:                                            ; preds = %40319
  %40321 = load i32, ptr %10, align 4, !dbg !404
  %40322 = add nsw i32 %40321, 1, !dbg !404
  store i32 %40322, ptr %10, align 4, !dbg !404
  %40323 = load i32, ptr %10, align 4, !dbg !364
  %40324 = load i32, ptr %8, align 4, !dbg !366
  %40325 = icmp slt i32 %40323, %40324, !dbg !367
  br i1 %40325, label %40326, label %48422, !dbg !368

40326:                                            ; preds = %40320
  %40327 = load i32, ptr %10, align 4, !dbg !369
  %40328 = sext i32 %40327 to i64, !dbg !371
  %40329 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40328, !dbg !371
  %40330 = load double, ptr %6, align 8, !dbg !372
  %40331 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40332 = load double, ptr %40331, align 8, !dbg !372
  %40333 = load double, ptr %40329, align 16, !dbg !372
  %40334 = getelementptr inbounds { double, double }, ptr %40329, i32 0, i32 1, !dbg !372
  %40335 = load double, ptr %40334, align 8, !dbg !372
  %40336 = call { double, double } @make_vec(double %40330, double %40332, double %40333, double %40335), !dbg !372
  %40337 = extractvalue { double, double } %40336, 0, !dbg !372
  store double %40337, ptr %16, align 8, !dbg !372
  %40338 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40339 = extractvalue { double, double } %40336, 1, !dbg !372
  store double %40339, ptr %40338, align 8, !dbg !372
  %40340 = load i32, ptr %10, align 4, !dbg !373
  %40341 = add nsw i32 %40340, 1, !dbg !374
  %40342 = sext i32 %40341 to i64, !dbg !375
  %40343 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40342, !dbg !375
  %40344 = load double, ptr %6, align 8, !dbg !376
  %40345 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40346 = load double, ptr %40345, align 8, !dbg !376
  %40347 = load double, ptr %40343, align 16, !dbg !376
  %40348 = getelementptr inbounds { double, double }, ptr %40343, i32 0, i32 1, !dbg !376
  %40349 = load double, ptr %40348, align 8, !dbg !376
  %40350 = call { double, double } @make_vec(double %40344, double %40346, double %40347, double %40349), !dbg !376
  %40351 = extractvalue { double, double } %40350, 0, !dbg !376
  store double %40351, ptr %17, align 8, !dbg !376
  %40352 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40353 = extractvalue { double, double } %40350, 1, !dbg !376
  store double %40353, ptr %40352, align 8, !dbg !376
  %40354 = load double, ptr %16, align 8, !dbg !377
  %40355 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40356 = load double, ptr %40355, align 8, !dbg !377
  %40357 = load double, ptr %17, align 8, !dbg !377
  %40358 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40359 = load double, ptr %40358, align 8, !dbg !377
  %40360 = call double @cross(double %40354, double %40356, double %40357, double %40359), !dbg !377
  %40361 = load i32, ptr %10, align 4, !dbg !378
  %40362 = sext i32 %40361 to i64, !dbg !379
  %40363 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40362, !dbg !379
  %40364 = load double, ptr %6, align 8, !dbg !380
  %40365 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40366 = load double, ptr %40365, align 8, !dbg !380
  %40367 = load double, ptr %40363, align 16, !dbg !380
  %40368 = getelementptr inbounds { double, double }, ptr %40363, i32 0, i32 1, !dbg !380
  %40369 = load double, ptr %40368, align 8, !dbg !380
  %40370 = call { double, double } @make_vec(double %40364, double %40366, double %40367, double %40369), !dbg !380
  %40371 = extractvalue { double, double } %40370, 0, !dbg !380
  store double %40371, ptr %18, align 8, !dbg !380
  %40372 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40373 = extractvalue { double, double } %40370, 1, !dbg !380
  store double %40373, ptr %40372, align 8, !dbg !380
  %40374 = load i32, ptr %10, align 4, !dbg !381
  %40375 = add nsw i32 %40374, 1, !dbg !382
  %40376 = sext i32 %40375 to i64, !dbg !383
  %40377 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40376, !dbg !383
  %40378 = load double, ptr %6, align 8, !dbg !384
  %40379 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40380 = load double, ptr %40379, align 8, !dbg !384
  %40381 = load double, ptr %40377, align 16, !dbg !384
  %40382 = getelementptr inbounds { double, double }, ptr %40377, i32 0, i32 1, !dbg !384
  %40383 = load double, ptr %40382, align 8, !dbg !384
  %40384 = call { double, double } @make_vec(double %40378, double %40380, double %40381, double %40383), !dbg !384
  %40385 = extractvalue { double, double } %40384, 0, !dbg !384
  store double %40385, ptr %19, align 8, !dbg !384
  %40386 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40387 = extractvalue { double, double } %40384, 1, !dbg !384
  store double %40387, ptr %40386, align 8, !dbg !384
  %40388 = load double, ptr %18, align 8, !dbg !385
  %40389 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40390 = load double, ptr %40389, align 8, !dbg !385
  %40391 = load double, ptr %19, align 8, !dbg !385
  %40392 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40393 = load double, ptr %40392, align 8, !dbg !385
  %40394 = call double @dot(double %40388, double %40390, double %40391, double %40393), !dbg !385
  %40395 = call double @atan2(double noundef %40360, double noundef %40394) #6, !dbg !386
  store double %40395, ptr %13, align 8, !dbg !387
  %40396 = load double, ptr %13, align 8, !dbg !388
  %40397 = load double, ptr %14, align 8, !dbg !389
  %40398 = fadd double %40397, %40396, !dbg !389
  store double %40398, ptr %14, align 8, !dbg !389
  %40399 = load double, ptr %13, align 8, !dbg !390
  %40400 = fsub double %40399, 0x400921FB54442D18, !dbg !392
  %40401 = call double @llvm.fabs.f64(double %40400), !dbg !393
  %40402 = fcmp ole double %40401, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40402, label %14330, label %40403, !dbg !395

40403:                                            ; preds = %40326
  %40404 = load double, ptr %13, align 8, !dbg !396
  %40405 = fadd double %40404, 0x400921FB54442D18, !dbg !397
  %40406 = call double @llvm.fabs.f64(double %40405), !dbg !398
  %40407 = fcmp ole double %40406, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40407, label %14330, label %40408, !dbg !400

40408:                                            ; preds = %40403
  br label %40409, !dbg !403

40409:                                            ; preds = %40408
  %40410 = load i32, ptr %10, align 4, !dbg !404
  %40411 = add nsw i32 %40410, 1, !dbg !404
  store i32 %40411, ptr %10, align 4, !dbg !404
  %40412 = load i32, ptr %10, align 4, !dbg !364
  %40413 = load i32, ptr %8, align 4, !dbg !366
  %40414 = icmp slt i32 %40412, %40413, !dbg !367
  br i1 %40414, label %40415, label %48422, !dbg !368

40415:                                            ; preds = %40409
  %40416 = load i32, ptr %10, align 4, !dbg !369
  %40417 = sext i32 %40416 to i64, !dbg !371
  %40418 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40417, !dbg !371
  %40419 = load double, ptr %6, align 8, !dbg !372
  %40420 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40421 = load double, ptr %40420, align 8, !dbg !372
  %40422 = load double, ptr %40418, align 16, !dbg !372
  %40423 = getelementptr inbounds { double, double }, ptr %40418, i32 0, i32 1, !dbg !372
  %40424 = load double, ptr %40423, align 8, !dbg !372
  %40425 = call { double, double } @make_vec(double %40419, double %40421, double %40422, double %40424), !dbg !372
  %40426 = extractvalue { double, double } %40425, 0, !dbg !372
  store double %40426, ptr %16, align 8, !dbg !372
  %40427 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40428 = extractvalue { double, double } %40425, 1, !dbg !372
  store double %40428, ptr %40427, align 8, !dbg !372
  %40429 = load i32, ptr %10, align 4, !dbg !373
  %40430 = add nsw i32 %40429, 1, !dbg !374
  %40431 = sext i32 %40430 to i64, !dbg !375
  %40432 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40431, !dbg !375
  %40433 = load double, ptr %6, align 8, !dbg !376
  %40434 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40435 = load double, ptr %40434, align 8, !dbg !376
  %40436 = load double, ptr %40432, align 16, !dbg !376
  %40437 = getelementptr inbounds { double, double }, ptr %40432, i32 0, i32 1, !dbg !376
  %40438 = load double, ptr %40437, align 8, !dbg !376
  %40439 = call { double, double } @make_vec(double %40433, double %40435, double %40436, double %40438), !dbg !376
  %40440 = extractvalue { double, double } %40439, 0, !dbg !376
  store double %40440, ptr %17, align 8, !dbg !376
  %40441 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40442 = extractvalue { double, double } %40439, 1, !dbg !376
  store double %40442, ptr %40441, align 8, !dbg !376
  %40443 = load double, ptr %16, align 8, !dbg !377
  %40444 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40445 = load double, ptr %40444, align 8, !dbg !377
  %40446 = load double, ptr %17, align 8, !dbg !377
  %40447 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40448 = load double, ptr %40447, align 8, !dbg !377
  %40449 = call double @cross(double %40443, double %40445, double %40446, double %40448), !dbg !377
  %40450 = load i32, ptr %10, align 4, !dbg !378
  %40451 = sext i32 %40450 to i64, !dbg !379
  %40452 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40451, !dbg !379
  %40453 = load double, ptr %6, align 8, !dbg !380
  %40454 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40455 = load double, ptr %40454, align 8, !dbg !380
  %40456 = load double, ptr %40452, align 16, !dbg !380
  %40457 = getelementptr inbounds { double, double }, ptr %40452, i32 0, i32 1, !dbg !380
  %40458 = load double, ptr %40457, align 8, !dbg !380
  %40459 = call { double, double } @make_vec(double %40453, double %40455, double %40456, double %40458), !dbg !380
  %40460 = extractvalue { double, double } %40459, 0, !dbg !380
  store double %40460, ptr %18, align 8, !dbg !380
  %40461 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40462 = extractvalue { double, double } %40459, 1, !dbg !380
  store double %40462, ptr %40461, align 8, !dbg !380
  %40463 = load i32, ptr %10, align 4, !dbg !381
  %40464 = add nsw i32 %40463, 1, !dbg !382
  %40465 = sext i32 %40464 to i64, !dbg !383
  %40466 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40465, !dbg !383
  %40467 = load double, ptr %6, align 8, !dbg !384
  %40468 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40469 = load double, ptr %40468, align 8, !dbg !384
  %40470 = load double, ptr %40466, align 16, !dbg !384
  %40471 = getelementptr inbounds { double, double }, ptr %40466, i32 0, i32 1, !dbg !384
  %40472 = load double, ptr %40471, align 8, !dbg !384
  %40473 = call { double, double } @make_vec(double %40467, double %40469, double %40470, double %40472), !dbg !384
  %40474 = extractvalue { double, double } %40473, 0, !dbg !384
  store double %40474, ptr %19, align 8, !dbg !384
  %40475 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40476 = extractvalue { double, double } %40473, 1, !dbg !384
  store double %40476, ptr %40475, align 8, !dbg !384
  %40477 = load double, ptr %18, align 8, !dbg !385
  %40478 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40479 = load double, ptr %40478, align 8, !dbg !385
  %40480 = load double, ptr %19, align 8, !dbg !385
  %40481 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40482 = load double, ptr %40481, align 8, !dbg !385
  %40483 = call double @dot(double %40477, double %40479, double %40480, double %40482), !dbg !385
  %40484 = call double @atan2(double noundef %40449, double noundef %40483) #6, !dbg !386
  store double %40484, ptr %13, align 8, !dbg !387
  %40485 = load double, ptr %13, align 8, !dbg !388
  %40486 = load double, ptr %14, align 8, !dbg !389
  %40487 = fadd double %40486, %40485, !dbg !389
  store double %40487, ptr %14, align 8, !dbg !389
  %40488 = load double, ptr %13, align 8, !dbg !390
  %40489 = fsub double %40488, 0x400921FB54442D18, !dbg !392
  %40490 = call double @llvm.fabs.f64(double %40489), !dbg !393
  %40491 = fcmp ole double %40490, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40491, label %14330, label %40492, !dbg !395

40492:                                            ; preds = %40415
  %40493 = load double, ptr %13, align 8, !dbg !396
  %40494 = fadd double %40493, 0x400921FB54442D18, !dbg !397
  %40495 = call double @llvm.fabs.f64(double %40494), !dbg !398
  %40496 = fcmp ole double %40495, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40496, label %14330, label %40497, !dbg !400

40497:                                            ; preds = %40492
  br label %40498, !dbg !403

40498:                                            ; preds = %40497
  %40499 = load i32, ptr %10, align 4, !dbg !404
  %40500 = add nsw i32 %40499, 1, !dbg !404
  store i32 %40500, ptr %10, align 4, !dbg !404
  %40501 = load i32, ptr %10, align 4, !dbg !364
  %40502 = load i32, ptr %8, align 4, !dbg !366
  %40503 = icmp slt i32 %40501, %40502, !dbg !367
  br i1 %40503, label %40504, label %48422, !dbg !368

40504:                                            ; preds = %40498
  %40505 = load i32, ptr %10, align 4, !dbg !369
  %40506 = sext i32 %40505 to i64, !dbg !371
  %40507 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40506, !dbg !371
  %40508 = load double, ptr %6, align 8, !dbg !372
  %40509 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40510 = load double, ptr %40509, align 8, !dbg !372
  %40511 = load double, ptr %40507, align 16, !dbg !372
  %40512 = getelementptr inbounds { double, double }, ptr %40507, i32 0, i32 1, !dbg !372
  %40513 = load double, ptr %40512, align 8, !dbg !372
  %40514 = call { double, double } @make_vec(double %40508, double %40510, double %40511, double %40513), !dbg !372
  %40515 = extractvalue { double, double } %40514, 0, !dbg !372
  store double %40515, ptr %16, align 8, !dbg !372
  %40516 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40517 = extractvalue { double, double } %40514, 1, !dbg !372
  store double %40517, ptr %40516, align 8, !dbg !372
  %40518 = load i32, ptr %10, align 4, !dbg !373
  %40519 = add nsw i32 %40518, 1, !dbg !374
  %40520 = sext i32 %40519 to i64, !dbg !375
  %40521 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40520, !dbg !375
  %40522 = load double, ptr %6, align 8, !dbg !376
  %40523 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40524 = load double, ptr %40523, align 8, !dbg !376
  %40525 = load double, ptr %40521, align 16, !dbg !376
  %40526 = getelementptr inbounds { double, double }, ptr %40521, i32 0, i32 1, !dbg !376
  %40527 = load double, ptr %40526, align 8, !dbg !376
  %40528 = call { double, double } @make_vec(double %40522, double %40524, double %40525, double %40527), !dbg !376
  %40529 = extractvalue { double, double } %40528, 0, !dbg !376
  store double %40529, ptr %17, align 8, !dbg !376
  %40530 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40531 = extractvalue { double, double } %40528, 1, !dbg !376
  store double %40531, ptr %40530, align 8, !dbg !376
  %40532 = load double, ptr %16, align 8, !dbg !377
  %40533 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40534 = load double, ptr %40533, align 8, !dbg !377
  %40535 = load double, ptr %17, align 8, !dbg !377
  %40536 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40537 = load double, ptr %40536, align 8, !dbg !377
  %40538 = call double @cross(double %40532, double %40534, double %40535, double %40537), !dbg !377
  %40539 = load i32, ptr %10, align 4, !dbg !378
  %40540 = sext i32 %40539 to i64, !dbg !379
  %40541 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40540, !dbg !379
  %40542 = load double, ptr %6, align 8, !dbg !380
  %40543 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40544 = load double, ptr %40543, align 8, !dbg !380
  %40545 = load double, ptr %40541, align 16, !dbg !380
  %40546 = getelementptr inbounds { double, double }, ptr %40541, i32 0, i32 1, !dbg !380
  %40547 = load double, ptr %40546, align 8, !dbg !380
  %40548 = call { double, double } @make_vec(double %40542, double %40544, double %40545, double %40547), !dbg !380
  %40549 = extractvalue { double, double } %40548, 0, !dbg !380
  store double %40549, ptr %18, align 8, !dbg !380
  %40550 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40551 = extractvalue { double, double } %40548, 1, !dbg !380
  store double %40551, ptr %40550, align 8, !dbg !380
  %40552 = load i32, ptr %10, align 4, !dbg !381
  %40553 = add nsw i32 %40552, 1, !dbg !382
  %40554 = sext i32 %40553 to i64, !dbg !383
  %40555 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40554, !dbg !383
  %40556 = load double, ptr %6, align 8, !dbg !384
  %40557 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40558 = load double, ptr %40557, align 8, !dbg !384
  %40559 = load double, ptr %40555, align 16, !dbg !384
  %40560 = getelementptr inbounds { double, double }, ptr %40555, i32 0, i32 1, !dbg !384
  %40561 = load double, ptr %40560, align 8, !dbg !384
  %40562 = call { double, double } @make_vec(double %40556, double %40558, double %40559, double %40561), !dbg !384
  %40563 = extractvalue { double, double } %40562, 0, !dbg !384
  store double %40563, ptr %19, align 8, !dbg !384
  %40564 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40565 = extractvalue { double, double } %40562, 1, !dbg !384
  store double %40565, ptr %40564, align 8, !dbg !384
  %40566 = load double, ptr %18, align 8, !dbg !385
  %40567 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40568 = load double, ptr %40567, align 8, !dbg !385
  %40569 = load double, ptr %19, align 8, !dbg !385
  %40570 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40571 = load double, ptr %40570, align 8, !dbg !385
  %40572 = call double @dot(double %40566, double %40568, double %40569, double %40571), !dbg !385
  %40573 = call double @atan2(double noundef %40538, double noundef %40572) #6, !dbg !386
  store double %40573, ptr %13, align 8, !dbg !387
  %40574 = load double, ptr %13, align 8, !dbg !388
  %40575 = load double, ptr %14, align 8, !dbg !389
  %40576 = fadd double %40575, %40574, !dbg !389
  store double %40576, ptr %14, align 8, !dbg !389
  %40577 = load double, ptr %13, align 8, !dbg !390
  %40578 = fsub double %40577, 0x400921FB54442D18, !dbg !392
  %40579 = call double @llvm.fabs.f64(double %40578), !dbg !393
  %40580 = fcmp ole double %40579, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40580, label %14330, label %40581, !dbg !395

40581:                                            ; preds = %40504
  %40582 = load double, ptr %13, align 8, !dbg !396
  %40583 = fadd double %40582, 0x400921FB54442D18, !dbg !397
  %40584 = call double @llvm.fabs.f64(double %40583), !dbg !398
  %40585 = fcmp ole double %40584, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40585, label %14330, label %40586, !dbg !400

40586:                                            ; preds = %40581
  br label %40587, !dbg !403

40587:                                            ; preds = %40586
  %40588 = load i32, ptr %10, align 4, !dbg !404
  %40589 = add nsw i32 %40588, 1, !dbg !404
  store i32 %40589, ptr %10, align 4, !dbg !404
  %40590 = load i32, ptr %10, align 4, !dbg !364
  %40591 = load i32, ptr %8, align 4, !dbg !366
  %40592 = icmp slt i32 %40590, %40591, !dbg !367
  br i1 %40592, label %40593, label %48422, !dbg !368

40593:                                            ; preds = %40587
  %40594 = load i32, ptr %10, align 4, !dbg !369
  %40595 = sext i32 %40594 to i64, !dbg !371
  %40596 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40595, !dbg !371
  %40597 = load double, ptr %6, align 8, !dbg !372
  %40598 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40599 = load double, ptr %40598, align 8, !dbg !372
  %40600 = load double, ptr %40596, align 16, !dbg !372
  %40601 = getelementptr inbounds { double, double }, ptr %40596, i32 0, i32 1, !dbg !372
  %40602 = load double, ptr %40601, align 8, !dbg !372
  %40603 = call { double, double } @make_vec(double %40597, double %40599, double %40600, double %40602), !dbg !372
  %40604 = extractvalue { double, double } %40603, 0, !dbg !372
  store double %40604, ptr %16, align 8, !dbg !372
  %40605 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40606 = extractvalue { double, double } %40603, 1, !dbg !372
  store double %40606, ptr %40605, align 8, !dbg !372
  %40607 = load i32, ptr %10, align 4, !dbg !373
  %40608 = add nsw i32 %40607, 1, !dbg !374
  %40609 = sext i32 %40608 to i64, !dbg !375
  %40610 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40609, !dbg !375
  %40611 = load double, ptr %6, align 8, !dbg !376
  %40612 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40613 = load double, ptr %40612, align 8, !dbg !376
  %40614 = load double, ptr %40610, align 16, !dbg !376
  %40615 = getelementptr inbounds { double, double }, ptr %40610, i32 0, i32 1, !dbg !376
  %40616 = load double, ptr %40615, align 8, !dbg !376
  %40617 = call { double, double } @make_vec(double %40611, double %40613, double %40614, double %40616), !dbg !376
  %40618 = extractvalue { double, double } %40617, 0, !dbg !376
  store double %40618, ptr %17, align 8, !dbg !376
  %40619 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40620 = extractvalue { double, double } %40617, 1, !dbg !376
  store double %40620, ptr %40619, align 8, !dbg !376
  %40621 = load double, ptr %16, align 8, !dbg !377
  %40622 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40623 = load double, ptr %40622, align 8, !dbg !377
  %40624 = load double, ptr %17, align 8, !dbg !377
  %40625 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40626 = load double, ptr %40625, align 8, !dbg !377
  %40627 = call double @cross(double %40621, double %40623, double %40624, double %40626), !dbg !377
  %40628 = load i32, ptr %10, align 4, !dbg !378
  %40629 = sext i32 %40628 to i64, !dbg !379
  %40630 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40629, !dbg !379
  %40631 = load double, ptr %6, align 8, !dbg !380
  %40632 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40633 = load double, ptr %40632, align 8, !dbg !380
  %40634 = load double, ptr %40630, align 16, !dbg !380
  %40635 = getelementptr inbounds { double, double }, ptr %40630, i32 0, i32 1, !dbg !380
  %40636 = load double, ptr %40635, align 8, !dbg !380
  %40637 = call { double, double } @make_vec(double %40631, double %40633, double %40634, double %40636), !dbg !380
  %40638 = extractvalue { double, double } %40637, 0, !dbg !380
  store double %40638, ptr %18, align 8, !dbg !380
  %40639 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40640 = extractvalue { double, double } %40637, 1, !dbg !380
  store double %40640, ptr %40639, align 8, !dbg !380
  %40641 = load i32, ptr %10, align 4, !dbg !381
  %40642 = add nsw i32 %40641, 1, !dbg !382
  %40643 = sext i32 %40642 to i64, !dbg !383
  %40644 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40643, !dbg !383
  %40645 = load double, ptr %6, align 8, !dbg !384
  %40646 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40647 = load double, ptr %40646, align 8, !dbg !384
  %40648 = load double, ptr %40644, align 16, !dbg !384
  %40649 = getelementptr inbounds { double, double }, ptr %40644, i32 0, i32 1, !dbg !384
  %40650 = load double, ptr %40649, align 8, !dbg !384
  %40651 = call { double, double } @make_vec(double %40645, double %40647, double %40648, double %40650), !dbg !384
  %40652 = extractvalue { double, double } %40651, 0, !dbg !384
  store double %40652, ptr %19, align 8, !dbg !384
  %40653 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40654 = extractvalue { double, double } %40651, 1, !dbg !384
  store double %40654, ptr %40653, align 8, !dbg !384
  %40655 = load double, ptr %18, align 8, !dbg !385
  %40656 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40657 = load double, ptr %40656, align 8, !dbg !385
  %40658 = load double, ptr %19, align 8, !dbg !385
  %40659 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40660 = load double, ptr %40659, align 8, !dbg !385
  %40661 = call double @dot(double %40655, double %40657, double %40658, double %40660), !dbg !385
  %40662 = call double @atan2(double noundef %40627, double noundef %40661) #6, !dbg !386
  store double %40662, ptr %13, align 8, !dbg !387
  %40663 = load double, ptr %13, align 8, !dbg !388
  %40664 = load double, ptr %14, align 8, !dbg !389
  %40665 = fadd double %40664, %40663, !dbg !389
  store double %40665, ptr %14, align 8, !dbg !389
  %40666 = load double, ptr %13, align 8, !dbg !390
  %40667 = fsub double %40666, 0x400921FB54442D18, !dbg !392
  %40668 = call double @llvm.fabs.f64(double %40667), !dbg !393
  %40669 = fcmp ole double %40668, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40669, label %14330, label %40670, !dbg !395

40670:                                            ; preds = %40593
  %40671 = load double, ptr %13, align 8, !dbg !396
  %40672 = fadd double %40671, 0x400921FB54442D18, !dbg !397
  %40673 = call double @llvm.fabs.f64(double %40672), !dbg !398
  %40674 = fcmp ole double %40673, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40674, label %14330, label %40675, !dbg !400

40675:                                            ; preds = %40670
  br label %40676, !dbg !403

40676:                                            ; preds = %40675
  %40677 = load i32, ptr %10, align 4, !dbg !404
  %40678 = add nsw i32 %40677, 1, !dbg !404
  store i32 %40678, ptr %10, align 4, !dbg !404
  %40679 = load i32, ptr %10, align 4, !dbg !364
  %40680 = load i32, ptr %8, align 4, !dbg !366
  %40681 = icmp slt i32 %40679, %40680, !dbg !367
  br i1 %40681, label %40682, label %48422, !dbg !368

40682:                                            ; preds = %40676
  %40683 = load i32, ptr %10, align 4, !dbg !369
  %40684 = sext i32 %40683 to i64, !dbg !371
  %40685 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40684, !dbg !371
  %40686 = load double, ptr %6, align 8, !dbg !372
  %40687 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40688 = load double, ptr %40687, align 8, !dbg !372
  %40689 = load double, ptr %40685, align 16, !dbg !372
  %40690 = getelementptr inbounds { double, double }, ptr %40685, i32 0, i32 1, !dbg !372
  %40691 = load double, ptr %40690, align 8, !dbg !372
  %40692 = call { double, double } @make_vec(double %40686, double %40688, double %40689, double %40691), !dbg !372
  %40693 = extractvalue { double, double } %40692, 0, !dbg !372
  store double %40693, ptr %16, align 8, !dbg !372
  %40694 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40695 = extractvalue { double, double } %40692, 1, !dbg !372
  store double %40695, ptr %40694, align 8, !dbg !372
  %40696 = load i32, ptr %10, align 4, !dbg !373
  %40697 = add nsw i32 %40696, 1, !dbg !374
  %40698 = sext i32 %40697 to i64, !dbg !375
  %40699 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40698, !dbg !375
  %40700 = load double, ptr %6, align 8, !dbg !376
  %40701 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40702 = load double, ptr %40701, align 8, !dbg !376
  %40703 = load double, ptr %40699, align 16, !dbg !376
  %40704 = getelementptr inbounds { double, double }, ptr %40699, i32 0, i32 1, !dbg !376
  %40705 = load double, ptr %40704, align 8, !dbg !376
  %40706 = call { double, double } @make_vec(double %40700, double %40702, double %40703, double %40705), !dbg !376
  %40707 = extractvalue { double, double } %40706, 0, !dbg !376
  store double %40707, ptr %17, align 8, !dbg !376
  %40708 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40709 = extractvalue { double, double } %40706, 1, !dbg !376
  store double %40709, ptr %40708, align 8, !dbg !376
  %40710 = load double, ptr %16, align 8, !dbg !377
  %40711 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40712 = load double, ptr %40711, align 8, !dbg !377
  %40713 = load double, ptr %17, align 8, !dbg !377
  %40714 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40715 = load double, ptr %40714, align 8, !dbg !377
  %40716 = call double @cross(double %40710, double %40712, double %40713, double %40715), !dbg !377
  %40717 = load i32, ptr %10, align 4, !dbg !378
  %40718 = sext i32 %40717 to i64, !dbg !379
  %40719 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40718, !dbg !379
  %40720 = load double, ptr %6, align 8, !dbg !380
  %40721 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40722 = load double, ptr %40721, align 8, !dbg !380
  %40723 = load double, ptr %40719, align 16, !dbg !380
  %40724 = getelementptr inbounds { double, double }, ptr %40719, i32 0, i32 1, !dbg !380
  %40725 = load double, ptr %40724, align 8, !dbg !380
  %40726 = call { double, double } @make_vec(double %40720, double %40722, double %40723, double %40725), !dbg !380
  %40727 = extractvalue { double, double } %40726, 0, !dbg !380
  store double %40727, ptr %18, align 8, !dbg !380
  %40728 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40729 = extractvalue { double, double } %40726, 1, !dbg !380
  store double %40729, ptr %40728, align 8, !dbg !380
  %40730 = load i32, ptr %10, align 4, !dbg !381
  %40731 = add nsw i32 %40730, 1, !dbg !382
  %40732 = sext i32 %40731 to i64, !dbg !383
  %40733 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40732, !dbg !383
  %40734 = load double, ptr %6, align 8, !dbg !384
  %40735 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40736 = load double, ptr %40735, align 8, !dbg !384
  %40737 = load double, ptr %40733, align 16, !dbg !384
  %40738 = getelementptr inbounds { double, double }, ptr %40733, i32 0, i32 1, !dbg !384
  %40739 = load double, ptr %40738, align 8, !dbg !384
  %40740 = call { double, double } @make_vec(double %40734, double %40736, double %40737, double %40739), !dbg !384
  %40741 = extractvalue { double, double } %40740, 0, !dbg !384
  store double %40741, ptr %19, align 8, !dbg !384
  %40742 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40743 = extractvalue { double, double } %40740, 1, !dbg !384
  store double %40743, ptr %40742, align 8, !dbg !384
  %40744 = load double, ptr %18, align 8, !dbg !385
  %40745 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40746 = load double, ptr %40745, align 8, !dbg !385
  %40747 = load double, ptr %19, align 8, !dbg !385
  %40748 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40749 = load double, ptr %40748, align 8, !dbg !385
  %40750 = call double @dot(double %40744, double %40746, double %40747, double %40749), !dbg !385
  %40751 = call double @atan2(double noundef %40716, double noundef %40750) #6, !dbg !386
  store double %40751, ptr %13, align 8, !dbg !387
  %40752 = load double, ptr %13, align 8, !dbg !388
  %40753 = load double, ptr %14, align 8, !dbg !389
  %40754 = fadd double %40753, %40752, !dbg !389
  store double %40754, ptr %14, align 8, !dbg !389
  %40755 = load double, ptr %13, align 8, !dbg !390
  %40756 = fsub double %40755, 0x400921FB54442D18, !dbg !392
  %40757 = call double @llvm.fabs.f64(double %40756), !dbg !393
  %40758 = fcmp ole double %40757, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40758, label %14330, label %40759, !dbg !395

40759:                                            ; preds = %40682
  %40760 = load double, ptr %13, align 8, !dbg !396
  %40761 = fadd double %40760, 0x400921FB54442D18, !dbg !397
  %40762 = call double @llvm.fabs.f64(double %40761), !dbg !398
  %40763 = fcmp ole double %40762, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40763, label %14330, label %40764, !dbg !400

40764:                                            ; preds = %40759
  br label %40765, !dbg !403

40765:                                            ; preds = %40764
  %40766 = load i32, ptr %10, align 4, !dbg !404
  %40767 = add nsw i32 %40766, 1, !dbg !404
  store i32 %40767, ptr %10, align 4, !dbg !404
  %40768 = load i32, ptr %10, align 4, !dbg !364
  %40769 = load i32, ptr %8, align 4, !dbg !366
  %40770 = icmp slt i32 %40768, %40769, !dbg !367
  br i1 %40770, label %40771, label %48422, !dbg !368

40771:                                            ; preds = %40765
  %40772 = load i32, ptr %10, align 4, !dbg !369
  %40773 = sext i32 %40772 to i64, !dbg !371
  %40774 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40773, !dbg !371
  %40775 = load double, ptr %6, align 8, !dbg !372
  %40776 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40777 = load double, ptr %40776, align 8, !dbg !372
  %40778 = load double, ptr %40774, align 16, !dbg !372
  %40779 = getelementptr inbounds { double, double }, ptr %40774, i32 0, i32 1, !dbg !372
  %40780 = load double, ptr %40779, align 8, !dbg !372
  %40781 = call { double, double } @make_vec(double %40775, double %40777, double %40778, double %40780), !dbg !372
  %40782 = extractvalue { double, double } %40781, 0, !dbg !372
  store double %40782, ptr %16, align 8, !dbg !372
  %40783 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40784 = extractvalue { double, double } %40781, 1, !dbg !372
  store double %40784, ptr %40783, align 8, !dbg !372
  %40785 = load i32, ptr %10, align 4, !dbg !373
  %40786 = add nsw i32 %40785, 1, !dbg !374
  %40787 = sext i32 %40786 to i64, !dbg !375
  %40788 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40787, !dbg !375
  %40789 = load double, ptr %6, align 8, !dbg !376
  %40790 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40791 = load double, ptr %40790, align 8, !dbg !376
  %40792 = load double, ptr %40788, align 16, !dbg !376
  %40793 = getelementptr inbounds { double, double }, ptr %40788, i32 0, i32 1, !dbg !376
  %40794 = load double, ptr %40793, align 8, !dbg !376
  %40795 = call { double, double } @make_vec(double %40789, double %40791, double %40792, double %40794), !dbg !376
  %40796 = extractvalue { double, double } %40795, 0, !dbg !376
  store double %40796, ptr %17, align 8, !dbg !376
  %40797 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40798 = extractvalue { double, double } %40795, 1, !dbg !376
  store double %40798, ptr %40797, align 8, !dbg !376
  %40799 = load double, ptr %16, align 8, !dbg !377
  %40800 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40801 = load double, ptr %40800, align 8, !dbg !377
  %40802 = load double, ptr %17, align 8, !dbg !377
  %40803 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40804 = load double, ptr %40803, align 8, !dbg !377
  %40805 = call double @cross(double %40799, double %40801, double %40802, double %40804), !dbg !377
  %40806 = load i32, ptr %10, align 4, !dbg !378
  %40807 = sext i32 %40806 to i64, !dbg !379
  %40808 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40807, !dbg !379
  %40809 = load double, ptr %6, align 8, !dbg !380
  %40810 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40811 = load double, ptr %40810, align 8, !dbg !380
  %40812 = load double, ptr %40808, align 16, !dbg !380
  %40813 = getelementptr inbounds { double, double }, ptr %40808, i32 0, i32 1, !dbg !380
  %40814 = load double, ptr %40813, align 8, !dbg !380
  %40815 = call { double, double } @make_vec(double %40809, double %40811, double %40812, double %40814), !dbg !380
  %40816 = extractvalue { double, double } %40815, 0, !dbg !380
  store double %40816, ptr %18, align 8, !dbg !380
  %40817 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40818 = extractvalue { double, double } %40815, 1, !dbg !380
  store double %40818, ptr %40817, align 8, !dbg !380
  %40819 = load i32, ptr %10, align 4, !dbg !381
  %40820 = add nsw i32 %40819, 1, !dbg !382
  %40821 = sext i32 %40820 to i64, !dbg !383
  %40822 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40821, !dbg !383
  %40823 = load double, ptr %6, align 8, !dbg !384
  %40824 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40825 = load double, ptr %40824, align 8, !dbg !384
  %40826 = load double, ptr %40822, align 16, !dbg !384
  %40827 = getelementptr inbounds { double, double }, ptr %40822, i32 0, i32 1, !dbg !384
  %40828 = load double, ptr %40827, align 8, !dbg !384
  %40829 = call { double, double } @make_vec(double %40823, double %40825, double %40826, double %40828), !dbg !384
  %40830 = extractvalue { double, double } %40829, 0, !dbg !384
  store double %40830, ptr %19, align 8, !dbg !384
  %40831 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40832 = extractvalue { double, double } %40829, 1, !dbg !384
  store double %40832, ptr %40831, align 8, !dbg !384
  %40833 = load double, ptr %18, align 8, !dbg !385
  %40834 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40835 = load double, ptr %40834, align 8, !dbg !385
  %40836 = load double, ptr %19, align 8, !dbg !385
  %40837 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40838 = load double, ptr %40837, align 8, !dbg !385
  %40839 = call double @dot(double %40833, double %40835, double %40836, double %40838), !dbg !385
  %40840 = call double @atan2(double noundef %40805, double noundef %40839) #6, !dbg !386
  store double %40840, ptr %13, align 8, !dbg !387
  %40841 = load double, ptr %13, align 8, !dbg !388
  %40842 = load double, ptr %14, align 8, !dbg !389
  %40843 = fadd double %40842, %40841, !dbg !389
  store double %40843, ptr %14, align 8, !dbg !389
  %40844 = load double, ptr %13, align 8, !dbg !390
  %40845 = fsub double %40844, 0x400921FB54442D18, !dbg !392
  %40846 = call double @llvm.fabs.f64(double %40845), !dbg !393
  %40847 = fcmp ole double %40846, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40847, label %14330, label %40848, !dbg !395

40848:                                            ; preds = %40771
  %40849 = load double, ptr %13, align 8, !dbg !396
  %40850 = fadd double %40849, 0x400921FB54442D18, !dbg !397
  %40851 = call double @llvm.fabs.f64(double %40850), !dbg !398
  %40852 = fcmp ole double %40851, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40852, label %14330, label %40853, !dbg !400

40853:                                            ; preds = %40848
  br label %40854, !dbg !403

40854:                                            ; preds = %40853
  %40855 = load i32, ptr %10, align 4, !dbg !404
  %40856 = add nsw i32 %40855, 1, !dbg !404
  store i32 %40856, ptr %10, align 4, !dbg !404
  %40857 = load i32, ptr %10, align 4, !dbg !364
  %40858 = load i32, ptr %8, align 4, !dbg !366
  %40859 = icmp slt i32 %40857, %40858, !dbg !367
  br i1 %40859, label %40860, label %48422, !dbg !368

40860:                                            ; preds = %40854
  %40861 = load i32, ptr %10, align 4, !dbg !369
  %40862 = sext i32 %40861 to i64, !dbg !371
  %40863 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40862, !dbg !371
  %40864 = load double, ptr %6, align 8, !dbg !372
  %40865 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40866 = load double, ptr %40865, align 8, !dbg !372
  %40867 = load double, ptr %40863, align 16, !dbg !372
  %40868 = getelementptr inbounds { double, double }, ptr %40863, i32 0, i32 1, !dbg !372
  %40869 = load double, ptr %40868, align 8, !dbg !372
  %40870 = call { double, double } @make_vec(double %40864, double %40866, double %40867, double %40869), !dbg !372
  %40871 = extractvalue { double, double } %40870, 0, !dbg !372
  store double %40871, ptr %16, align 8, !dbg !372
  %40872 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40873 = extractvalue { double, double } %40870, 1, !dbg !372
  store double %40873, ptr %40872, align 8, !dbg !372
  %40874 = load i32, ptr %10, align 4, !dbg !373
  %40875 = add nsw i32 %40874, 1, !dbg !374
  %40876 = sext i32 %40875 to i64, !dbg !375
  %40877 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40876, !dbg !375
  %40878 = load double, ptr %6, align 8, !dbg !376
  %40879 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40880 = load double, ptr %40879, align 8, !dbg !376
  %40881 = load double, ptr %40877, align 16, !dbg !376
  %40882 = getelementptr inbounds { double, double }, ptr %40877, i32 0, i32 1, !dbg !376
  %40883 = load double, ptr %40882, align 8, !dbg !376
  %40884 = call { double, double } @make_vec(double %40878, double %40880, double %40881, double %40883), !dbg !376
  %40885 = extractvalue { double, double } %40884, 0, !dbg !376
  store double %40885, ptr %17, align 8, !dbg !376
  %40886 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40887 = extractvalue { double, double } %40884, 1, !dbg !376
  store double %40887, ptr %40886, align 8, !dbg !376
  %40888 = load double, ptr %16, align 8, !dbg !377
  %40889 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40890 = load double, ptr %40889, align 8, !dbg !377
  %40891 = load double, ptr %17, align 8, !dbg !377
  %40892 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40893 = load double, ptr %40892, align 8, !dbg !377
  %40894 = call double @cross(double %40888, double %40890, double %40891, double %40893), !dbg !377
  %40895 = load i32, ptr %10, align 4, !dbg !378
  %40896 = sext i32 %40895 to i64, !dbg !379
  %40897 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40896, !dbg !379
  %40898 = load double, ptr %6, align 8, !dbg !380
  %40899 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40900 = load double, ptr %40899, align 8, !dbg !380
  %40901 = load double, ptr %40897, align 16, !dbg !380
  %40902 = getelementptr inbounds { double, double }, ptr %40897, i32 0, i32 1, !dbg !380
  %40903 = load double, ptr %40902, align 8, !dbg !380
  %40904 = call { double, double } @make_vec(double %40898, double %40900, double %40901, double %40903), !dbg !380
  %40905 = extractvalue { double, double } %40904, 0, !dbg !380
  store double %40905, ptr %18, align 8, !dbg !380
  %40906 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40907 = extractvalue { double, double } %40904, 1, !dbg !380
  store double %40907, ptr %40906, align 8, !dbg !380
  %40908 = load i32, ptr %10, align 4, !dbg !381
  %40909 = add nsw i32 %40908, 1, !dbg !382
  %40910 = sext i32 %40909 to i64, !dbg !383
  %40911 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40910, !dbg !383
  %40912 = load double, ptr %6, align 8, !dbg !384
  %40913 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %40914 = load double, ptr %40913, align 8, !dbg !384
  %40915 = load double, ptr %40911, align 16, !dbg !384
  %40916 = getelementptr inbounds { double, double }, ptr %40911, i32 0, i32 1, !dbg !384
  %40917 = load double, ptr %40916, align 8, !dbg !384
  %40918 = call { double, double } @make_vec(double %40912, double %40914, double %40915, double %40917), !dbg !384
  %40919 = extractvalue { double, double } %40918, 0, !dbg !384
  store double %40919, ptr %19, align 8, !dbg !384
  %40920 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %40921 = extractvalue { double, double } %40918, 1, !dbg !384
  store double %40921, ptr %40920, align 8, !dbg !384
  %40922 = load double, ptr %18, align 8, !dbg !385
  %40923 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %40924 = load double, ptr %40923, align 8, !dbg !385
  %40925 = load double, ptr %19, align 8, !dbg !385
  %40926 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %40927 = load double, ptr %40926, align 8, !dbg !385
  %40928 = call double @dot(double %40922, double %40924, double %40925, double %40927), !dbg !385
  %40929 = call double @atan2(double noundef %40894, double noundef %40928) #6, !dbg !386
  store double %40929, ptr %13, align 8, !dbg !387
  %40930 = load double, ptr %13, align 8, !dbg !388
  %40931 = load double, ptr %14, align 8, !dbg !389
  %40932 = fadd double %40931, %40930, !dbg !389
  store double %40932, ptr %14, align 8, !dbg !389
  %40933 = load double, ptr %13, align 8, !dbg !390
  %40934 = fsub double %40933, 0x400921FB54442D18, !dbg !392
  %40935 = call double @llvm.fabs.f64(double %40934), !dbg !393
  %40936 = fcmp ole double %40935, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %40936, label %14330, label %40937, !dbg !395

40937:                                            ; preds = %40860
  %40938 = load double, ptr %13, align 8, !dbg !396
  %40939 = fadd double %40938, 0x400921FB54442D18, !dbg !397
  %40940 = call double @llvm.fabs.f64(double %40939), !dbg !398
  %40941 = fcmp ole double %40940, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %40941, label %14330, label %40942, !dbg !400

40942:                                            ; preds = %40937
  br label %40943, !dbg !403

40943:                                            ; preds = %40942
  %40944 = load i32, ptr %10, align 4, !dbg !404
  %40945 = add nsw i32 %40944, 1, !dbg !404
  store i32 %40945, ptr %10, align 4, !dbg !404
  %40946 = load i32, ptr %10, align 4, !dbg !364
  %40947 = load i32, ptr %8, align 4, !dbg !366
  %40948 = icmp slt i32 %40946, %40947, !dbg !367
  br i1 %40948, label %40949, label %48422, !dbg !368

40949:                                            ; preds = %40943
  %40950 = load i32, ptr %10, align 4, !dbg !369
  %40951 = sext i32 %40950 to i64, !dbg !371
  %40952 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40951, !dbg !371
  %40953 = load double, ptr %6, align 8, !dbg !372
  %40954 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %40955 = load double, ptr %40954, align 8, !dbg !372
  %40956 = load double, ptr %40952, align 16, !dbg !372
  %40957 = getelementptr inbounds { double, double }, ptr %40952, i32 0, i32 1, !dbg !372
  %40958 = load double, ptr %40957, align 8, !dbg !372
  %40959 = call { double, double } @make_vec(double %40953, double %40955, double %40956, double %40958), !dbg !372
  %40960 = extractvalue { double, double } %40959, 0, !dbg !372
  store double %40960, ptr %16, align 8, !dbg !372
  %40961 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %40962 = extractvalue { double, double } %40959, 1, !dbg !372
  store double %40962, ptr %40961, align 8, !dbg !372
  %40963 = load i32, ptr %10, align 4, !dbg !373
  %40964 = add nsw i32 %40963, 1, !dbg !374
  %40965 = sext i32 %40964 to i64, !dbg !375
  %40966 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40965, !dbg !375
  %40967 = load double, ptr %6, align 8, !dbg !376
  %40968 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %40969 = load double, ptr %40968, align 8, !dbg !376
  %40970 = load double, ptr %40966, align 16, !dbg !376
  %40971 = getelementptr inbounds { double, double }, ptr %40966, i32 0, i32 1, !dbg !376
  %40972 = load double, ptr %40971, align 8, !dbg !376
  %40973 = call { double, double } @make_vec(double %40967, double %40969, double %40970, double %40972), !dbg !376
  %40974 = extractvalue { double, double } %40973, 0, !dbg !376
  store double %40974, ptr %17, align 8, !dbg !376
  %40975 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %40976 = extractvalue { double, double } %40973, 1, !dbg !376
  store double %40976, ptr %40975, align 8, !dbg !376
  %40977 = load double, ptr %16, align 8, !dbg !377
  %40978 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %40979 = load double, ptr %40978, align 8, !dbg !377
  %40980 = load double, ptr %17, align 8, !dbg !377
  %40981 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %40982 = load double, ptr %40981, align 8, !dbg !377
  %40983 = call double @cross(double %40977, double %40979, double %40980, double %40982), !dbg !377
  %40984 = load i32, ptr %10, align 4, !dbg !378
  %40985 = sext i32 %40984 to i64, !dbg !379
  %40986 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40985, !dbg !379
  %40987 = load double, ptr %6, align 8, !dbg !380
  %40988 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %40989 = load double, ptr %40988, align 8, !dbg !380
  %40990 = load double, ptr %40986, align 16, !dbg !380
  %40991 = getelementptr inbounds { double, double }, ptr %40986, i32 0, i32 1, !dbg !380
  %40992 = load double, ptr %40991, align 8, !dbg !380
  %40993 = call { double, double } @make_vec(double %40987, double %40989, double %40990, double %40992), !dbg !380
  %40994 = extractvalue { double, double } %40993, 0, !dbg !380
  store double %40994, ptr %18, align 8, !dbg !380
  %40995 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %40996 = extractvalue { double, double } %40993, 1, !dbg !380
  store double %40996, ptr %40995, align 8, !dbg !380
  %40997 = load i32, ptr %10, align 4, !dbg !381
  %40998 = add nsw i32 %40997, 1, !dbg !382
  %40999 = sext i32 %40998 to i64, !dbg !383
  %41000 = getelementptr inbounds %struct.POINT, ptr %26, i64 %40999, !dbg !383
  %41001 = load double, ptr %6, align 8, !dbg !384
  %41002 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41003 = load double, ptr %41002, align 8, !dbg !384
  %41004 = load double, ptr %41000, align 16, !dbg !384
  %41005 = getelementptr inbounds { double, double }, ptr %41000, i32 0, i32 1, !dbg !384
  %41006 = load double, ptr %41005, align 8, !dbg !384
  %41007 = call { double, double } @make_vec(double %41001, double %41003, double %41004, double %41006), !dbg !384
  %41008 = extractvalue { double, double } %41007, 0, !dbg !384
  store double %41008, ptr %19, align 8, !dbg !384
  %41009 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41010 = extractvalue { double, double } %41007, 1, !dbg !384
  store double %41010, ptr %41009, align 8, !dbg !384
  %41011 = load double, ptr %18, align 8, !dbg !385
  %41012 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41013 = load double, ptr %41012, align 8, !dbg !385
  %41014 = load double, ptr %19, align 8, !dbg !385
  %41015 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41016 = load double, ptr %41015, align 8, !dbg !385
  %41017 = call double @dot(double %41011, double %41013, double %41014, double %41016), !dbg !385
  %41018 = call double @atan2(double noundef %40983, double noundef %41017) #6, !dbg !386
  store double %41018, ptr %13, align 8, !dbg !387
  %41019 = load double, ptr %13, align 8, !dbg !388
  %41020 = load double, ptr %14, align 8, !dbg !389
  %41021 = fadd double %41020, %41019, !dbg !389
  store double %41021, ptr %14, align 8, !dbg !389
  %41022 = load double, ptr %13, align 8, !dbg !390
  %41023 = fsub double %41022, 0x400921FB54442D18, !dbg !392
  %41024 = call double @llvm.fabs.f64(double %41023), !dbg !393
  %41025 = fcmp ole double %41024, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41025, label %14330, label %41026, !dbg !395

41026:                                            ; preds = %40949
  %41027 = load double, ptr %13, align 8, !dbg !396
  %41028 = fadd double %41027, 0x400921FB54442D18, !dbg !397
  %41029 = call double @llvm.fabs.f64(double %41028), !dbg !398
  %41030 = fcmp ole double %41029, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41030, label %14330, label %41031, !dbg !400

41031:                                            ; preds = %41026
  br label %41032, !dbg !403

41032:                                            ; preds = %41031
  %41033 = load i32, ptr %10, align 4, !dbg !404
  %41034 = add nsw i32 %41033, 1, !dbg !404
  store i32 %41034, ptr %10, align 4, !dbg !404
  %41035 = load i32, ptr %10, align 4, !dbg !364
  %41036 = load i32, ptr %8, align 4, !dbg !366
  %41037 = icmp slt i32 %41035, %41036, !dbg !367
  br i1 %41037, label %41038, label %48422, !dbg !368

41038:                                            ; preds = %41032
  %41039 = load i32, ptr %10, align 4, !dbg !369
  %41040 = sext i32 %41039 to i64, !dbg !371
  %41041 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41040, !dbg !371
  %41042 = load double, ptr %6, align 8, !dbg !372
  %41043 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41044 = load double, ptr %41043, align 8, !dbg !372
  %41045 = load double, ptr %41041, align 16, !dbg !372
  %41046 = getelementptr inbounds { double, double }, ptr %41041, i32 0, i32 1, !dbg !372
  %41047 = load double, ptr %41046, align 8, !dbg !372
  %41048 = call { double, double } @make_vec(double %41042, double %41044, double %41045, double %41047), !dbg !372
  %41049 = extractvalue { double, double } %41048, 0, !dbg !372
  store double %41049, ptr %16, align 8, !dbg !372
  %41050 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41051 = extractvalue { double, double } %41048, 1, !dbg !372
  store double %41051, ptr %41050, align 8, !dbg !372
  %41052 = load i32, ptr %10, align 4, !dbg !373
  %41053 = add nsw i32 %41052, 1, !dbg !374
  %41054 = sext i32 %41053 to i64, !dbg !375
  %41055 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41054, !dbg !375
  %41056 = load double, ptr %6, align 8, !dbg !376
  %41057 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41058 = load double, ptr %41057, align 8, !dbg !376
  %41059 = load double, ptr %41055, align 16, !dbg !376
  %41060 = getelementptr inbounds { double, double }, ptr %41055, i32 0, i32 1, !dbg !376
  %41061 = load double, ptr %41060, align 8, !dbg !376
  %41062 = call { double, double } @make_vec(double %41056, double %41058, double %41059, double %41061), !dbg !376
  %41063 = extractvalue { double, double } %41062, 0, !dbg !376
  store double %41063, ptr %17, align 8, !dbg !376
  %41064 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41065 = extractvalue { double, double } %41062, 1, !dbg !376
  store double %41065, ptr %41064, align 8, !dbg !376
  %41066 = load double, ptr %16, align 8, !dbg !377
  %41067 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41068 = load double, ptr %41067, align 8, !dbg !377
  %41069 = load double, ptr %17, align 8, !dbg !377
  %41070 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41071 = load double, ptr %41070, align 8, !dbg !377
  %41072 = call double @cross(double %41066, double %41068, double %41069, double %41071), !dbg !377
  %41073 = load i32, ptr %10, align 4, !dbg !378
  %41074 = sext i32 %41073 to i64, !dbg !379
  %41075 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41074, !dbg !379
  %41076 = load double, ptr %6, align 8, !dbg !380
  %41077 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41078 = load double, ptr %41077, align 8, !dbg !380
  %41079 = load double, ptr %41075, align 16, !dbg !380
  %41080 = getelementptr inbounds { double, double }, ptr %41075, i32 0, i32 1, !dbg !380
  %41081 = load double, ptr %41080, align 8, !dbg !380
  %41082 = call { double, double } @make_vec(double %41076, double %41078, double %41079, double %41081), !dbg !380
  %41083 = extractvalue { double, double } %41082, 0, !dbg !380
  store double %41083, ptr %18, align 8, !dbg !380
  %41084 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41085 = extractvalue { double, double } %41082, 1, !dbg !380
  store double %41085, ptr %41084, align 8, !dbg !380
  %41086 = load i32, ptr %10, align 4, !dbg !381
  %41087 = add nsw i32 %41086, 1, !dbg !382
  %41088 = sext i32 %41087 to i64, !dbg !383
  %41089 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41088, !dbg !383
  %41090 = load double, ptr %6, align 8, !dbg !384
  %41091 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41092 = load double, ptr %41091, align 8, !dbg !384
  %41093 = load double, ptr %41089, align 16, !dbg !384
  %41094 = getelementptr inbounds { double, double }, ptr %41089, i32 0, i32 1, !dbg !384
  %41095 = load double, ptr %41094, align 8, !dbg !384
  %41096 = call { double, double } @make_vec(double %41090, double %41092, double %41093, double %41095), !dbg !384
  %41097 = extractvalue { double, double } %41096, 0, !dbg !384
  store double %41097, ptr %19, align 8, !dbg !384
  %41098 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41099 = extractvalue { double, double } %41096, 1, !dbg !384
  store double %41099, ptr %41098, align 8, !dbg !384
  %41100 = load double, ptr %18, align 8, !dbg !385
  %41101 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41102 = load double, ptr %41101, align 8, !dbg !385
  %41103 = load double, ptr %19, align 8, !dbg !385
  %41104 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41105 = load double, ptr %41104, align 8, !dbg !385
  %41106 = call double @dot(double %41100, double %41102, double %41103, double %41105), !dbg !385
  %41107 = call double @atan2(double noundef %41072, double noundef %41106) #6, !dbg !386
  store double %41107, ptr %13, align 8, !dbg !387
  %41108 = load double, ptr %13, align 8, !dbg !388
  %41109 = load double, ptr %14, align 8, !dbg !389
  %41110 = fadd double %41109, %41108, !dbg !389
  store double %41110, ptr %14, align 8, !dbg !389
  %41111 = load double, ptr %13, align 8, !dbg !390
  %41112 = fsub double %41111, 0x400921FB54442D18, !dbg !392
  %41113 = call double @llvm.fabs.f64(double %41112), !dbg !393
  %41114 = fcmp ole double %41113, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41114, label %14330, label %41115, !dbg !395

41115:                                            ; preds = %41038
  %41116 = load double, ptr %13, align 8, !dbg !396
  %41117 = fadd double %41116, 0x400921FB54442D18, !dbg !397
  %41118 = call double @llvm.fabs.f64(double %41117), !dbg !398
  %41119 = fcmp ole double %41118, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41119, label %14330, label %41120, !dbg !400

41120:                                            ; preds = %41115
  br label %41121, !dbg !403

41121:                                            ; preds = %41120
  %41122 = load i32, ptr %10, align 4, !dbg !404
  %41123 = add nsw i32 %41122, 1, !dbg !404
  store i32 %41123, ptr %10, align 4, !dbg !404
  %41124 = load i32, ptr %10, align 4, !dbg !364
  %41125 = load i32, ptr %8, align 4, !dbg !366
  %41126 = icmp slt i32 %41124, %41125, !dbg !367
  br i1 %41126, label %41127, label %48422, !dbg !368

41127:                                            ; preds = %41121
  %41128 = load i32, ptr %10, align 4, !dbg !369
  %41129 = sext i32 %41128 to i64, !dbg !371
  %41130 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41129, !dbg !371
  %41131 = load double, ptr %6, align 8, !dbg !372
  %41132 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41133 = load double, ptr %41132, align 8, !dbg !372
  %41134 = load double, ptr %41130, align 16, !dbg !372
  %41135 = getelementptr inbounds { double, double }, ptr %41130, i32 0, i32 1, !dbg !372
  %41136 = load double, ptr %41135, align 8, !dbg !372
  %41137 = call { double, double } @make_vec(double %41131, double %41133, double %41134, double %41136), !dbg !372
  %41138 = extractvalue { double, double } %41137, 0, !dbg !372
  store double %41138, ptr %16, align 8, !dbg !372
  %41139 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41140 = extractvalue { double, double } %41137, 1, !dbg !372
  store double %41140, ptr %41139, align 8, !dbg !372
  %41141 = load i32, ptr %10, align 4, !dbg !373
  %41142 = add nsw i32 %41141, 1, !dbg !374
  %41143 = sext i32 %41142 to i64, !dbg !375
  %41144 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41143, !dbg !375
  %41145 = load double, ptr %6, align 8, !dbg !376
  %41146 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41147 = load double, ptr %41146, align 8, !dbg !376
  %41148 = load double, ptr %41144, align 16, !dbg !376
  %41149 = getelementptr inbounds { double, double }, ptr %41144, i32 0, i32 1, !dbg !376
  %41150 = load double, ptr %41149, align 8, !dbg !376
  %41151 = call { double, double } @make_vec(double %41145, double %41147, double %41148, double %41150), !dbg !376
  %41152 = extractvalue { double, double } %41151, 0, !dbg !376
  store double %41152, ptr %17, align 8, !dbg !376
  %41153 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41154 = extractvalue { double, double } %41151, 1, !dbg !376
  store double %41154, ptr %41153, align 8, !dbg !376
  %41155 = load double, ptr %16, align 8, !dbg !377
  %41156 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41157 = load double, ptr %41156, align 8, !dbg !377
  %41158 = load double, ptr %17, align 8, !dbg !377
  %41159 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41160 = load double, ptr %41159, align 8, !dbg !377
  %41161 = call double @cross(double %41155, double %41157, double %41158, double %41160), !dbg !377
  %41162 = load i32, ptr %10, align 4, !dbg !378
  %41163 = sext i32 %41162 to i64, !dbg !379
  %41164 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41163, !dbg !379
  %41165 = load double, ptr %6, align 8, !dbg !380
  %41166 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41167 = load double, ptr %41166, align 8, !dbg !380
  %41168 = load double, ptr %41164, align 16, !dbg !380
  %41169 = getelementptr inbounds { double, double }, ptr %41164, i32 0, i32 1, !dbg !380
  %41170 = load double, ptr %41169, align 8, !dbg !380
  %41171 = call { double, double } @make_vec(double %41165, double %41167, double %41168, double %41170), !dbg !380
  %41172 = extractvalue { double, double } %41171, 0, !dbg !380
  store double %41172, ptr %18, align 8, !dbg !380
  %41173 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41174 = extractvalue { double, double } %41171, 1, !dbg !380
  store double %41174, ptr %41173, align 8, !dbg !380
  %41175 = load i32, ptr %10, align 4, !dbg !381
  %41176 = add nsw i32 %41175, 1, !dbg !382
  %41177 = sext i32 %41176 to i64, !dbg !383
  %41178 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41177, !dbg !383
  %41179 = load double, ptr %6, align 8, !dbg !384
  %41180 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41181 = load double, ptr %41180, align 8, !dbg !384
  %41182 = load double, ptr %41178, align 16, !dbg !384
  %41183 = getelementptr inbounds { double, double }, ptr %41178, i32 0, i32 1, !dbg !384
  %41184 = load double, ptr %41183, align 8, !dbg !384
  %41185 = call { double, double } @make_vec(double %41179, double %41181, double %41182, double %41184), !dbg !384
  %41186 = extractvalue { double, double } %41185, 0, !dbg !384
  store double %41186, ptr %19, align 8, !dbg !384
  %41187 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41188 = extractvalue { double, double } %41185, 1, !dbg !384
  store double %41188, ptr %41187, align 8, !dbg !384
  %41189 = load double, ptr %18, align 8, !dbg !385
  %41190 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41191 = load double, ptr %41190, align 8, !dbg !385
  %41192 = load double, ptr %19, align 8, !dbg !385
  %41193 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41194 = load double, ptr %41193, align 8, !dbg !385
  %41195 = call double @dot(double %41189, double %41191, double %41192, double %41194), !dbg !385
  %41196 = call double @atan2(double noundef %41161, double noundef %41195) #6, !dbg !386
  store double %41196, ptr %13, align 8, !dbg !387
  %41197 = load double, ptr %13, align 8, !dbg !388
  %41198 = load double, ptr %14, align 8, !dbg !389
  %41199 = fadd double %41198, %41197, !dbg !389
  store double %41199, ptr %14, align 8, !dbg !389
  %41200 = load double, ptr %13, align 8, !dbg !390
  %41201 = fsub double %41200, 0x400921FB54442D18, !dbg !392
  %41202 = call double @llvm.fabs.f64(double %41201), !dbg !393
  %41203 = fcmp ole double %41202, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41203, label %14330, label %41204, !dbg !395

41204:                                            ; preds = %41127
  %41205 = load double, ptr %13, align 8, !dbg !396
  %41206 = fadd double %41205, 0x400921FB54442D18, !dbg !397
  %41207 = call double @llvm.fabs.f64(double %41206), !dbg !398
  %41208 = fcmp ole double %41207, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41208, label %14330, label %41209, !dbg !400

41209:                                            ; preds = %41204
  br label %41210, !dbg !403

41210:                                            ; preds = %41209
  %41211 = load i32, ptr %10, align 4, !dbg !404
  %41212 = add nsw i32 %41211, 1, !dbg !404
  store i32 %41212, ptr %10, align 4, !dbg !404
  %41213 = load i32, ptr %10, align 4, !dbg !364
  %41214 = load i32, ptr %8, align 4, !dbg !366
  %41215 = icmp slt i32 %41213, %41214, !dbg !367
  br i1 %41215, label %41216, label %48422, !dbg !368

41216:                                            ; preds = %41210
  %41217 = load i32, ptr %10, align 4, !dbg !369
  %41218 = sext i32 %41217 to i64, !dbg !371
  %41219 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41218, !dbg !371
  %41220 = load double, ptr %6, align 8, !dbg !372
  %41221 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41222 = load double, ptr %41221, align 8, !dbg !372
  %41223 = load double, ptr %41219, align 16, !dbg !372
  %41224 = getelementptr inbounds { double, double }, ptr %41219, i32 0, i32 1, !dbg !372
  %41225 = load double, ptr %41224, align 8, !dbg !372
  %41226 = call { double, double } @make_vec(double %41220, double %41222, double %41223, double %41225), !dbg !372
  %41227 = extractvalue { double, double } %41226, 0, !dbg !372
  store double %41227, ptr %16, align 8, !dbg !372
  %41228 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41229 = extractvalue { double, double } %41226, 1, !dbg !372
  store double %41229, ptr %41228, align 8, !dbg !372
  %41230 = load i32, ptr %10, align 4, !dbg !373
  %41231 = add nsw i32 %41230, 1, !dbg !374
  %41232 = sext i32 %41231 to i64, !dbg !375
  %41233 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41232, !dbg !375
  %41234 = load double, ptr %6, align 8, !dbg !376
  %41235 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41236 = load double, ptr %41235, align 8, !dbg !376
  %41237 = load double, ptr %41233, align 16, !dbg !376
  %41238 = getelementptr inbounds { double, double }, ptr %41233, i32 0, i32 1, !dbg !376
  %41239 = load double, ptr %41238, align 8, !dbg !376
  %41240 = call { double, double } @make_vec(double %41234, double %41236, double %41237, double %41239), !dbg !376
  %41241 = extractvalue { double, double } %41240, 0, !dbg !376
  store double %41241, ptr %17, align 8, !dbg !376
  %41242 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41243 = extractvalue { double, double } %41240, 1, !dbg !376
  store double %41243, ptr %41242, align 8, !dbg !376
  %41244 = load double, ptr %16, align 8, !dbg !377
  %41245 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41246 = load double, ptr %41245, align 8, !dbg !377
  %41247 = load double, ptr %17, align 8, !dbg !377
  %41248 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41249 = load double, ptr %41248, align 8, !dbg !377
  %41250 = call double @cross(double %41244, double %41246, double %41247, double %41249), !dbg !377
  %41251 = load i32, ptr %10, align 4, !dbg !378
  %41252 = sext i32 %41251 to i64, !dbg !379
  %41253 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41252, !dbg !379
  %41254 = load double, ptr %6, align 8, !dbg !380
  %41255 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41256 = load double, ptr %41255, align 8, !dbg !380
  %41257 = load double, ptr %41253, align 16, !dbg !380
  %41258 = getelementptr inbounds { double, double }, ptr %41253, i32 0, i32 1, !dbg !380
  %41259 = load double, ptr %41258, align 8, !dbg !380
  %41260 = call { double, double } @make_vec(double %41254, double %41256, double %41257, double %41259), !dbg !380
  %41261 = extractvalue { double, double } %41260, 0, !dbg !380
  store double %41261, ptr %18, align 8, !dbg !380
  %41262 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41263 = extractvalue { double, double } %41260, 1, !dbg !380
  store double %41263, ptr %41262, align 8, !dbg !380
  %41264 = load i32, ptr %10, align 4, !dbg !381
  %41265 = add nsw i32 %41264, 1, !dbg !382
  %41266 = sext i32 %41265 to i64, !dbg !383
  %41267 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41266, !dbg !383
  %41268 = load double, ptr %6, align 8, !dbg !384
  %41269 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41270 = load double, ptr %41269, align 8, !dbg !384
  %41271 = load double, ptr %41267, align 16, !dbg !384
  %41272 = getelementptr inbounds { double, double }, ptr %41267, i32 0, i32 1, !dbg !384
  %41273 = load double, ptr %41272, align 8, !dbg !384
  %41274 = call { double, double } @make_vec(double %41268, double %41270, double %41271, double %41273), !dbg !384
  %41275 = extractvalue { double, double } %41274, 0, !dbg !384
  store double %41275, ptr %19, align 8, !dbg !384
  %41276 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41277 = extractvalue { double, double } %41274, 1, !dbg !384
  store double %41277, ptr %41276, align 8, !dbg !384
  %41278 = load double, ptr %18, align 8, !dbg !385
  %41279 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41280 = load double, ptr %41279, align 8, !dbg !385
  %41281 = load double, ptr %19, align 8, !dbg !385
  %41282 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41283 = load double, ptr %41282, align 8, !dbg !385
  %41284 = call double @dot(double %41278, double %41280, double %41281, double %41283), !dbg !385
  %41285 = call double @atan2(double noundef %41250, double noundef %41284) #6, !dbg !386
  store double %41285, ptr %13, align 8, !dbg !387
  %41286 = load double, ptr %13, align 8, !dbg !388
  %41287 = load double, ptr %14, align 8, !dbg !389
  %41288 = fadd double %41287, %41286, !dbg !389
  store double %41288, ptr %14, align 8, !dbg !389
  %41289 = load double, ptr %13, align 8, !dbg !390
  %41290 = fsub double %41289, 0x400921FB54442D18, !dbg !392
  %41291 = call double @llvm.fabs.f64(double %41290), !dbg !393
  %41292 = fcmp ole double %41291, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41292, label %14330, label %41293, !dbg !395

41293:                                            ; preds = %41216
  %41294 = load double, ptr %13, align 8, !dbg !396
  %41295 = fadd double %41294, 0x400921FB54442D18, !dbg !397
  %41296 = call double @llvm.fabs.f64(double %41295), !dbg !398
  %41297 = fcmp ole double %41296, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41297, label %14330, label %41298, !dbg !400

41298:                                            ; preds = %41293
  br label %41299, !dbg !403

41299:                                            ; preds = %41298
  %41300 = load i32, ptr %10, align 4, !dbg !404
  %41301 = add nsw i32 %41300, 1, !dbg !404
  store i32 %41301, ptr %10, align 4, !dbg !404
  %41302 = load i32, ptr %10, align 4, !dbg !364
  %41303 = load i32, ptr %8, align 4, !dbg !366
  %41304 = icmp slt i32 %41302, %41303, !dbg !367
  br i1 %41304, label %41305, label %48422, !dbg !368

41305:                                            ; preds = %41299
  %41306 = load i32, ptr %10, align 4, !dbg !369
  %41307 = sext i32 %41306 to i64, !dbg !371
  %41308 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41307, !dbg !371
  %41309 = load double, ptr %6, align 8, !dbg !372
  %41310 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41311 = load double, ptr %41310, align 8, !dbg !372
  %41312 = load double, ptr %41308, align 16, !dbg !372
  %41313 = getelementptr inbounds { double, double }, ptr %41308, i32 0, i32 1, !dbg !372
  %41314 = load double, ptr %41313, align 8, !dbg !372
  %41315 = call { double, double } @make_vec(double %41309, double %41311, double %41312, double %41314), !dbg !372
  %41316 = extractvalue { double, double } %41315, 0, !dbg !372
  store double %41316, ptr %16, align 8, !dbg !372
  %41317 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41318 = extractvalue { double, double } %41315, 1, !dbg !372
  store double %41318, ptr %41317, align 8, !dbg !372
  %41319 = load i32, ptr %10, align 4, !dbg !373
  %41320 = add nsw i32 %41319, 1, !dbg !374
  %41321 = sext i32 %41320 to i64, !dbg !375
  %41322 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41321, !dbg !375
  %41323 = load double, ptr %6, align 8, !dbg !376
  %41324 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41325 = load double, ptr %41324, align 8, !dbg !376
  %41326 = load double, ptr %41322, align 16, !dbg !376
  %41327 = getelementptr inbounds { double, double }, ptr %41322, i32 0, i32 1, !dbg !376
  %41328 = load double, ptr %41327, align 8, !dbg !376
  %41329 = call { double, double } @make_vec(double %41323, double %41325, double %41326, double %41328), !dbg !376
  %41330 = extractvalue { double, double } %41329, 0, !dbg !376
  store double %41330, ptr %17, align 8, !dbg !376
  %41331 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41332 = extractvalue { double, double } %41329, 1, !dbg !376
  store double %41332, ptr %41331, align 8, !dbg !376
  %41333 = load double, ptr %16, align 8, !dbg !377
  %41334 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41335 = load double, ptr %41334, align 8, !dbg !377
  %41336 = load double, ptr %17, align 8, !dbg !377
  %41337 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41338 = load double, ptr %41337, align 8, !dbg !377
  %41339 = call double @cross(double %41333, double %41335, double %41336, double %41338), !dbg !377
  %41340 = load i32, ptr %10, align 4, !dbg !378
  %41341 = sext i32 %41340 to i64, !dbg !379
  %41342 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41341, !dbg !379
  %41343 = load double, ptr %6, align 8, !dbg !380
  %41344 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41345 = load double, ptr %41344, align 8, !dbg !380
  %41346 = load double, ptr %41342, align 16, !dbg !380
  %41347 = getelementptr inbounds { double, double }, ptr %41342, i32 0, i32 1, !dbg !380
  %41348 = load double, ptr %41347, align 8, !dbg !380
  %41349 = call { double, double } @make_vec(double %41343, double %41345, double %41346, double %41348), !dbg !380
  %41350 = extractvalue { double, double } %41349, 0, !dbg !380
  store double %41350, ptr %18, align 8, !dbg !380
  %41351 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41352 = extractvalue { double, double } %41349, 1, !dbg !380
  store double %41352, ptr %41351, align 8, !dbg !380
  %41353 = load i32, ptr %10, align 4, !dbg !381
  %41354 = add nsw i32 %41353, 1, !dbg !382
  %41355 = sext i32 %41354 to i64, !dbg !383
  %41356 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41355, !dbg !383
  %41357 = load double, ptr %6, align 8, !dbg !384
  %41358 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41359 = load double, ptr %41358, align 8, !dbg !384
  %41360 = load double, ptr %41356, align 16, !dbg !384
  %41361 = getelementptr inbounds { double, double }, ptr %41356, i32 0, i32 1, !dbg !384
  %41362 = load double, ptr %41361, align 8, !dbg !384
  %41363 = call { double, double } @make_vec(double %41357, double %41359, double %41360, double %41362), !dbg !384
  %41364 = extractvalue { double, double } %41363, 0, !dbg !384
  store double %41364, ptr %19, align 8, !dbg !384
  %41365 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41366 = extractvalue { double, double } %41363, 1, !dbg !384
  store double %41366, ptr %41365, align 8, !dbg !384
  %41367 = load double, ptr %18, align 8, !dbg !385
  %41368 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41369 = load double, ptr %41368, align 8, !dbg !385
  %41370 = load double, ptr %19, align 8, !dbg !385
  %41371 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41372 = load double, ptr %41371, align 8, !dbg !385
  %41373 = call double @dot(double %41367, double %41369, double %41370, double %41372), !dbg !385
  %41374 = call double @atan2(double noundef %41339, double noundef %41373) #6, !dbg !386
  store double %41374, ptr %13, align 8, !dbg !387
  %41375 = load double, ptr %13, align 8, !dbg !388
  %41376 = load double, ptr %14, align 8, !dbg !389
  %41377 = fadd double %41376, %41375, !dbg !389
  store double %41377, ptr %14, align 8, !dbg !389
  %41378 = load double, ptr %13, align 8, !dbg !390
  %41379 = fsub double %41378, 0x400921FB54442D18, !dbg !392
  %41380 = call double @llvm.fabs.f64(double %41379), !dbg !393
  %41381 = fcmp ole double %41380, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41381, label %14330, label %41382, !dbg !395

41382:                                            ; preds = %41305
  %41383 = load double, ptr %13, align 8, !dbg !396
  %41384 = fadd double %41383, 0x400921FB54442D18, !dbg !397
  %41385 = call double @llvm.fabs.f64(double %41384), !dbg !398
  %41386 = fcmp ole double %41385, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41386, label %14330, label %41387, !dbg !400

41387:                                            ; preds = %41382
  br label %41388, !dbg !403

41388:                                            ; preds = %41387
  %41389 = load i32, ptr %10, align 4, !dbg !404
  %41390 = add nsw i32 %41389, 1, !dbg !404
  store i32 %41390, ptr %10, align 4, !dbg !404
  %41391 = load i32, ptr %10, align 4, !dbg !364
  %41392 = load i32, ptr %8, align 4, !dbg !366
  %41393 = icmp slt i32 %41391, %41392, !dbg !367
  br i1 %41393, label %41394, label %48422, !dbg !368

41394:                                            ; preds = %41388
  %41395 = load i32, ptr %10, align 4, !dbg !369
  %41396 = sext i32 %41395 to i64, !dbg !371
  %41397 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41396, !dbg !371
  %41398 = load double, ptr %6, align 8, !dbg !372
  %41399 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41400 = load double, ptr %41399, align 8, !dbg !372
  %41401 = load double, ptr %41397, align 16, !dbg !372
  %41402 = getelementptr inbounds { double, double }, ptr %41397, i32 0, i32 1, !dbg !372
  %41403 = load double, ptr %41402, align 8, !dbg !372
  %41404 = call { double, double } @make_vec(double %41398, double %41400, double %41401, double %41403), !dbg !372
  %41405 = extractvalue { double, double } %41404, 0, !dbg !372
  store double %41405, ptr %16, align 8, !dbg !372
  %41406 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41407 = extractvalue { double, double } %41404, 1, !dbg !372
  store double %41407, ptr %41406, align 8, !dbg !372
  %41408 = load i32, ptr %10, align 4, !dbg !373
  %41409 = add nsw i32 %41408, 1, !dbg !374
  %41410 = sext i32 %41409 to i64, !dbg !375
  %41411 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41410, !dbg !375
  %41412 = load double, ptr %6, align 8, !dbg !376
  %41413 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41414 = load double, ptr %41413, align 8, !dbg !376
  %41415 = load double, ptr %41411, align 16, !dbg !376
  %41416 = getelementptr inbounds { double, double }, ptr %41411, i32 0, i32 1, !dbg !376
  %41417 = load double, ptr %41416, align 8, !dbg !376
  %41418 = call { double, double } @make_vec(double %41412, double %41414, double %41415, double %41417), !dbg !376
  %41419 = extractvalue { double, double } %41418, 0, !dbg !376
  store double %41419, ptr %17, align 8, !dbg !376
  %41420 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41421 = extractvalue { double, double } %41418, 1, !dbg !376
  store double %41421, ptr %41420, align 8, !dbg !376
  %41422 = load double, ptr %16, align 8, !dbg !377
  %41423 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41424 = load double, ptr %41423, align 8, !dbg !377
  %41425 = load double, ptr %17, align 8, !dbg !377
  %41426 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41427 = load double, ptr %41426, align 8, !dbg !377
  %41428 = call double @cross(double %41422, double %41424, double %41425, double %41427), !dbg !377
  %41429 = load i32, ptr %10, align 4, !dbg !378
  %41430 = sext i32 %41429 to i64, !dbg !379
  %41431 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41430, !dbg !379
  %41432 = load double, ptr %6, align 8, !dbg !380
  %41433 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41434 = load double, ptr %41433, align 8, !dbg !380
  %41435 = load double, ptr %41431, align 16, !dbg !380
  %41436 = getelementptr inbounds { double, double }, ptr %41431, i32 0, i32 1, !dbg !380
  %41437 = load double, ptr %41436, align 8, !dbg !380
  %41438 = call { double, double } @make_vec(double %41432, double %41434, double %41435, double %41437), !dbg !380
  %41439 = extractvalue { double, double } %41438, 0, !dbg !380
  store double %41439, ptr %18, align 8, !dbg !380
  %41440 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41441 = extractvalue { double, double } %41438, 1, !dbg !380
  store double %41441, ptr %41440, align 8, !dbg !380
  %41442 = load i32, ptr %10, align 4, !dbg !381
  %41443 = add nsw i32 %41442, 1, !dbg !382
  %41444 = sext i32 %41443 to i64, !dbg !383
  %41445 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41444, !dbg !383
  %41446 = load double, ptr %6, align 8, !dbg !384
  %41447 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41448 = load double, ptr %41447, align 8, !dbg !384
  %41449 = load double, ptr %41445, align 16, !dbg !384
  %41450 = getelementptr inbounds { double, double }, ptr %41445, i32 0, i32 1, !dbg !384
  %41451 = load double, ptr %41450, align 8, !dbg !384
  %41452 = call { double, double } @make_vec(double %41446, double %41448, double %41449, double %41451), !dbg !384
  %41453 = extractvalue { double, double } %41452, 0, !dbg !384
  store double %41453, ptr %19, align 8, !dbg !384
  %41454 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41455 = extractvalue { double, double } %41452, 1, !dbg !384
  store double %41455, ptr %41454, align 8, !dbg !384
  %41456 = load double, ptr %18, align 8, !dbg !385
  %41457 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41458 = load double, ptr %41457, align 8, !dbg !385
  %41459 = load double, ptr %19, align 8, !dbg !385
  %41460 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41461 = load double, ptr %41460, align 8, !dbg !385
  %41462 = call double @dot(double %41456, double %41458, double %41459, double %41461), !dbg !385
  %41463 = call double @atan2(double noundef %41428, double noundef %41462) #6, !dbg !386
  store double %41463, ptr %13, align 8, !dbg !387
  %41464 = load double, ptr %13, align 8, !dbg !388
  %41465 = load double, ptr %14, align 8, !dbg !389
  %41466 = fadd double %41465, %41464, !dbg !389
  store double %41466, ptr %14, align 8, !dbg !389
  %41467 = load double, ptr %13, align 8, !dbg !390
  %41468 = fsub double %41467, 0x400921FB54442D18, !dbg !392
  %41469 = call double @llvm.fabs.f64(double %41468), !dbg !393
  %41470 = fcmp ole double %41469, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41470, label %14330, label %41471, !dbg !395

41471:                                            ; preds = %41394
  %41472 = load double, ptr %13, align 8, !dbg !396
  %41473 = fadd double %41472, 0x400921FB54442D18, !dbg !397
  %41474 = call double @llvm.fabs.f64(double %41473), !dbg !398
  %41475 = fcmp ole double %41474, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41475, label %14330, label %41476, !dbg !400

41476:                                            ; preds = %41471
  br label %41477, !dbg !403

41477:                                            ; preds = %41476
  %41478 = load i32, ptr %10, align 4, !dbg !404
  %41479 = add nsw i32 %41478, 1, !dbg !404
  store i32 %41479, ptr %10, align 4, !dbg !404
  %41480 = load i32, ptr %10, align 4, !dbg !364
  %41481 = load i32, ptr %8, align 4, !dbg !366
  %41482 = icmp slt i32 %41480, %41481, !dbg !367
  br i1 %41482, label %41483, label %48422, !dbg !368

41483:                                            ; preds = %41477
  %41484 = load i32, ptr %10, align 4, !dbg !369
  %41485 = sext i32 %41484 to i64, !dbg !371
  %41486 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41485, !dbg !371
  %41487 = load double, ptr %6, align 8, !dbg !372
  %41488 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41489 = load double, ptr %41488, align 8, !dbg !372
  %41490 = load double, ptr %41486, align 16, !dbg !372
  %41491 = getelementptr inbounds { double, double }, ptr %41486, i32 0, i32 1, !dbg !372
  %41492 = load double, ptr %41491, align 8, !dbg !372
  %41493 = call { double, double } @make_vec(double %41487, double %41489, double %41490, double %41492), !dbg !372
  %41494 = extractvalue { double, double } %41493, 0, !dbg !372
  store double %41494, ptr %16, align 8, !dbg !372
  %41495 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41496 = extractvalue { double, double } %41493, 1, !dbg !372
  store double %41496, ptr %41495, align 8, !dbg !372
  %41497 = load i32, ptr %10, align 4, !dbg !373
  %41498 = add nsw i32 %41497, 1, !dbg !374
  %41499 = sext i32 %41498 to i64, !dbg !375
  %41500 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41499, !dbg !375
  %41501 = load double, ptr %6, align 8, !dbg !376
  %41502 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41503 = load double, ptr %41502, align 8, !dbg !376
  %41504 = load double, ptr %41500, align 16, !dbg !376
  %41505 = getelementptr inbounds { double, double }, ptr %41500, i32 0, i32 1, !dbg !376
  %41506 = load double, ptr %41505, align 8, !dbg !376
  %41507 = call { double, double } @make_vec(double %41501, double %41503, double %41504, double %41506), !dbg !376
  %41508 = extractvalue { double, double } %41507, 0, !dbg !376
  store double %41508, ptr %17, align 8, !dbg !376
  %41509 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41510 = extractvalue { double, double } %41507, 1, !dbg !376
  store double %41510, ptr %41509, align 8, !dbg !376
  %41511 = load double, ptr %16, align 8, !dbg !377
  %41512 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41513 = load double, ptr %41512, align 8, !dbg !377
  %41514 = load double, ptr %17, align 8, !dbg !377
  %41515 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41516 = load double, ptr %41515, align 8, !dbg !377
  %41517 = call double @cross(double %41511, double %41513, double %41514, double %41516), !dbg !377
  %41518 = load i32, ptr %10, align 4, !dbg !378
  %41519 = sext i32 %41518 to i64, !dbg !379
  %41520 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41519, !dbg !379
  %41521 = load double, ptr %6, align 8, !dbg !380
  %41522 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41523 = load double, ptr %41522, align 8, !dbg !380
  %41524 = load double, ptr %41520, align 16, !dbg !380
  %41525 = getelementptr inbounds { double, double }, ptr %41520, i32 0, i32 1, !dbg !380
  %41526 = load double, ptr %41525, align 8, !dbg !380
  %41527 = call { double, double } @make_vec(double %41521, double %41523, double %41524, double %41526), !dbg !380
  %41528 = extractvalue { double, double } %41527, 0, !dbg !380
  store double %41528, ptr %18, align 8, !dbg !380
  %41529 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41530 = extractvalue { double, double } %41527, 1, !dbg !380
  store double %41530, ptr %41529, align 8, !dbg !380
  %41531 = load i32, ptr %10, align 4, !dbg !381
  %41532 = add nsw i32 %41531, 1, !dbg !382
  %41533 = sext i32 %41532 to i64, !dbg !383
  %41534 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41533, !dbg !383
  %41535 = load double, ptr %6, align 8, !dbg !384
  %41536 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41537 = load double, ptr %41536, align 8, !dbg !384
  %41538 = load double, ptr %41534, align 16, !dbg !384
  %41539 = getelementptr inbounds { double, double }, ptr %41534, i32 0, i32 1, !dbg !384
  %41540 = load double, ptr %41539, align 8, !dbg !384
  %41541 = call { double, double } @make_vec(double %41535, double %41537, double %41538, double %41540), !dbg !384
  %41542 = extractvalue { double, double } %41541, 0, !dbg !384
  store double %41542, ptr %19, align 8, !dbg !384
  %41543 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41544 = extractvalue { double, double } %41541, 1, !dbg !384
  store double %41544, ptr %41543, align 8, !dbg !384
  %41545 = load double, ptr %18, align 8, !dbg !385
  %41546 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41547 = load double, ptr %41546, align 8, !dbg !385
  %41548 = load double, ptr %19, align 8, !dbg !385
  %41549 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41550 = load double, ptr %41549, align 8, !dbg !385
  %41551 = call double @dot(double %41545, double %41547, double %41548, double %41550), !dbg !385
  %41552 = call double @atan2(double noundef %41517, double noundef %41551) #6, !dbg !386
  store double %41552, ptr %13, align 8, !dbg !387
  %41553 = load double, ptr %13, align 8, !dbg !388
  %41554 = load double, ptr %14, align 8, !dbg !389
  %41555 = fadd double %41554, %41553, !dbg !389
  store double %41555, ptr %14, align 8, !dbg !389
  %41556 = load double, ptr %13, align 8, !dbg !390
  %41557 = fsub double %41556, 0x400921FB54442D18, !dbg !392
  %41558 = call double @llvm.fabs.f64(double %41557), !dbg !393
  %41559 = fcmp ole double %41558, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41559, label %14330, label %41560, !dbg !395

41560:                                            ; preds = %41483
  %41561 = load double, ptr %13, align 8, !dbg !396
  %41562 = fadd double %41561, 0x400921FB54442D18, !dbg !397
  %41563 = call double @llvm.fabs.f64(double %41562), !dbg !398
  %41564 = fcmp ole double %41563, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41564, label %14330, label %41565, !dbg !400

41565:                                            ; preds = %41560
  br label %41566, !dbg !403

41566:                                            ; preds = %41565
  %41567 = load i32, ptr %10, align 4, !dbg !404
  %41568 = add nsw i32 %41567, 1, !dbg !404
  store i32 %41568, ptr %10, align 4, !dbg !404
  %41569 = load i32, ptr %10, align 4, !dbg !364
  %41570 = load i32, ptr %8, align 4, !dbg !366
  %41571 = icmp slt i32 %41569, %41570, !dbg !367
  br i1 %41571, label %41572, label %48422, !dbg !368

41572:                                            ; preds = %41566
  %41573 = load i32, ptr %10, align 4, !dbg !369
  %41574 = sext i32 %41573 to i64, !dbg !371
  %41575 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41574, !dbg !371
  %41576 = load double, ptr %6, align 8, !dbg !372
  %41577 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41578 = load double, ptr %41577, align 8, !dbg !372
  %41579 = load double, ptr %41575, align 16, !dbg !372
  %41580 = getelementptr inbounds { double, double }, ptr %41575, i32 0, i32 1, !dbg !372
  %41581 = load double, ptr %41580, align 8, !dbg !372
  %41582 = call { double, double } @make_vec(double %41576, double %41578, double %41579, double %41581), !dbg !372
  %41583 = extractvalue { double, double } %41582, 0, !dbg !372
  store double %41583, ptr %16, align 8, !dbg !372
  %41584 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41585 = extractvalue { double, double } %41582, 1, !dbg !372
  store double %41585, ptr %41584, align 8, !dbg !372
  %41586 = load i32, ptr %10, align 4, !dbg !373
  %41587 = add nsw i32 %41586, 1, !dbg !374
  %41588 = sext i32 %41587 to i64, !dbg !375
  %41589 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41588, !dbg !375
  %41590 = load double, ptr %6, align 8, !dbg !376
  %41591 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41592 = load double, ptr %41591, align 8, !dbg !376
  %41593 = load double, ptr %41589, align 16, !dbg !376
  %41594 = getelementptr inbounds { double, double }, ptr %41589, i32 0, i32 1, !dbg !376
  %41595 = load double, ptr %41594, align 8, !dbg !376
  %41596 = call { double, double } @make_vec(double %41590, double %41592, double %41593, double %41595), !dbg !376
  %41597 = extractvalue { double, double } %41596, 0, !dbg !376
  store double %41597, ptr %17, align 8, !dbg !376
  %41598 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41599 = extractvalue { double, double } %41596, 1, !dbg !376
  store double %41599, ptr %41598, align 8, !dbg !376
  %41600 = load double, ptr %16, align 8, !dbg !377
  %41601 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41602 = load double, ptr %41601, align 8, !dbg !377
  %41603 = load double, ptr %17, align 8, !dbg !377
  %41604 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41605 = load double, ptr %41604, align 8, !dbg !377
  %41606 = call double @cross(double %41600, double %41602, double %41603, double %41605), !dbg !377
  %41607 = load i32, ptr %10, align 4, !dbg !378
  %41608 = sext i32 %41607 to i64, !dbg !379
  %41609 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41608, !dbg !379
  %41610 = load double, ptr %6, align 8, !dbg !380
  %41611 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41612 = load double, ptr %41611, align 8, !dbg !380
  %41613 = load double, ptr %41609, align 16, !dbg !380
  %41614 = getelementptr inbounds { double, double }, ptr %41609, i32 0, i32 1, !dbg !380
  %41615 = load double, ptr %41614, align 8, !dbg !380
  %41616 = call { double, double } @make_vec(double %41610, double %41612, double %41613, double %41615), !dbg !380
  %41617 = extractvalue { double, double } %41616, 0, !dbg !380
  store double %41617, ptr %18, align 8, !dbg !380
  %41618 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41619 = extractvalue { double, double } %41616, 1, !dbg !380
  store double %41619, ptr %41618, align 8, !dbg !380
  %41620 = load i32, ptr %10, align 4, !dbg !381
  %41621 = add nsw i32 %41620, 1, !dbg !382
  %41622 = sext i32 %41621 to i64, !dbg !383
  %41623 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41622, !dbg !383
  %41624 = load double, ptr %6, align 8, !dbg !384
  %41625 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41626 = load double, ptr %41625, align 8, !dbg !384
  %41627 = load double, ptr %41623, align 16, !dbg !384
  %41628 = getelementptr inbounds { double, double }, ptr %41623, i32 0, i32 1, !dbg !384
  %41629 = load double, ptr %41628, align 8, !dbg !384
  %41630 = call { double, double } @make_vec(double %41624, double %41626, double %41627, double %41629), !dbg !384
  %41631 = extractvalue { double, double } %41630, 0, !dbg !384
  store double %41631, ptr %19, align 8, !dbg !384
  %41632 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41633 = extractvalue { double, double } %41630, 1, !dbg !384
  store double %41633, ptr %41632, align 8, !dbg !384
  %41634 = load double, ptr %18, align 8, !dbg !385
  %41635 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41636 = load double, ptr %41635, align 8, !dbg !385
  %41637 = load double, ptr %19, align 8, !dbg !385
  %41638 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41639 = load double, ptr %41638, align 8, !dbg !385
  %41640 = call double @dot(double %41634, double %41636, double %41637, double %41639), !dbg !385
  %41641 = call double @atan2(double noundef %41606, double noundef %41640) #6, !dbg !386
  store double %41641, ptr %13, align 8, !dbg !387
  %41642 = load double, ptr %13, align 8, !dbg !388
  %41643 = load double, ptr %14, align 8, !dbg !389
  %41644 = fadd double %41643, %41642, !dbg !389
  store double %41644, ptr %14, align 8, !dbg !389
  %41645 = load double, ptr %13, align 8, !dbg !390
  %41646 = fsub double %41645, 0x400921FB54442D18, !dbg !392
  %41647 = call double @llvm.fabs.f64(double %41646), !dbg !393
  %41648 = fcmp ole double %41647, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41648, label %14330, label %41649, !dbg !395

41649:                                            ; preds = %41572
  %41650 = load double, ptr %13, align 8, !dbg !396
  %41651 = fadd double %41650, 0x400921FB54442D18, !dbg !397
  %41652 = call double @llvm.fabs.f64(double %41651), !dbg !398
  %41653 = fcmp ole double %41652, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41653, label %14330, label %41654, !dbg !400

41654:                                            ; preds = %41649
  br label %41655, !dbg !403

41655:                                            ; preds = %41654
  %41656 = load i32, ptr %10, align 4, !dbg !404
  %41657 = add nsw i32 %41656, 1, !dbg !404
  store i32 %41657, ptr %10, align 4, !dbg !404
  %41658 = load i32, ptr %10, align 4, !dbg !364
  %41659 = load i32, ptr %8, align 4, !dbg !366
  %41660 = icmp slt i32 %41658, %41659, !dbg !367
  br i1 %41660, label %41661, label %48422, !dbg !368

41661:                                            ; preds = %41655
  %41662 = load i32, ptr %10, align 4, !dbg !369
  %41663 = sext i32 %41662 to i64, !dbg !371
  %41664 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41663, !dbg !371
  %41665 = load double, ptr %6, align 8, !dbg !372
  %41666 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41667 = load double, ptr %41666, align 8, !dbg !372
  %41668 = load double, ptr %41664, align 16, !dbg !372
  %41669 = getelementptr inbounds { double, double }, ptr %41664, i32 0, i32 1, !dbg !372
  %41670 = load double, ptr %41669, align 8, !dbg !372
  %41671 = call { double, double } @make_vec(double %41665, double %41667, double %41668, double %41670), !dbg !372
  %41672 = extractvalue { double, double } %41671, 0, !dbg !372
  store double %41672, ptr %16, align 8, !dbg !372
  %41673 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41674 = extractvalue { double, double } %41671, 1, !dbg !372
  store double %41674, ptr %41673, align 8, !dbg !372
  %41675 = load i32, ptr %10, align 4, !dbg !373
  %41676 = add nsw i32 %41675, 1, !dbg !374
  %41677 = sext i32 %41676 to i64, !dbg !375
  %41678 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41677, !dbg !375
  %41679 = load double, ptr %6, align 8, !dbg !376
  %41680 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41681 = load double, ptr %41680, align 8, !dbg !376
  %41682 = load double, ptr %41678, align 16, !dbg !376
  %41683 = getelementptr inbounds { double, double }, ptr %41678, i32 0, i32 1, !dbg !376
  %41684 = load double, ptr %41683, align 8, !dbg !376
  %41685 = call { double, double } @make_vec(double %41679, double %41681, double %41682, double %41684), !dbg !376
  %41686 = extractvalue { double, double } %41685, 0, !dbg !376
  store double %41686, ptr %17, align 8, !dbg !376
  %41687 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41688 = extractvalue { double, double } %41685, 1, !dbg !376
  store double %41688, ptr %41687, align 8, !dbg !376
  %41689 = load double, ptr %16, align 8, !dbg !377
  %41690 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41691 = load double, ptr %41690, align 8, !dbg !377
  %41692 = load double, ptr %17, align 8, !dbg !377
  %41693 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41694 = load double, ptr %41693, align 8, !dbg !377
  %41695 = call double @cross(double %41689, double %41691, double %41692, double %41694), !dbg !377
  %41696 = load i32, ptr %10, align 4, !dbg !378
  %41697 = sext i32 %41696 to i64, !dbg !379
  %41698 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41697, !dbg !379
  %41699 = load double, ptr %6, align 8, !dbg !380
  %41700 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41701 = load double, ptr %41700, align 8, !dbg !380
  %41702 = load double, ptr %41698, align 16, !dbg !380
  %41703 = getelementptr inbounds { double, double }, ptr %41698, i32 0, i32 1, !dbg !380
  %41704 = load double, ptr %41703, align 8, !dbg !380
  %41705 = call { double, double } @make_vec(double %41699, double %41701, double %41702, double %41704), !dbg !380
  %41706 = extractvalue { double, double } %41705, 0, !dbg !380
  store double %41706, ptr %18, align 8, !dbg !380
  %41707 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41708 = extractvalue { double, double } %41705, 1, !dbg !380
  store double %41708, ptr %41707, align 8, !dbg !380
  %41709 = load i32, ptr %10, align 4, !dbg !381
  %41710 = add nsw i32 %41709, 1, !dbg !382
  %41711 = sext i32 %41710 to i64, !dbg !383
  %41712 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41711, !dbg !383
  %41713 = load double, ptr %6, align 8, !dbg !384
  %41714 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41715 = load double, ptr %41714, align 8, !dbg !384
  %41716 = load double, ptr %41712, align 16, !dbg !384
  %41717 = getelementptr inbounds { double, double }, ptr %41712, i32 0, i32 1, !dbg !384
  %41718 = load double, ptr %41717, align 8, !dbg !384
  %41719 = call { double, double } @make_vec(double %41713, double %41715, double %41716, double %41718), !dbg !384
  %41720 = extractvalue { double, double } %41719, 0, !dbg !384
  store double %41720, ptr %19, align 8, !dbg !384
  %41721 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41722 = extractvalue { double, double } %41719, 1, !dbg !384
  store double %41722, ptr %41721, align 8, !dbg !384
  %41723 = load double, ptr %18, align 8, !dbg !385
  %41724 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41725 = load double, ptr %41724, align 8, !dbg !385
  %41726 = load double, ptr %19, align 8, !dbg !385
  %41727 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41728 = load double, ptr %41727, align 8, !dbg !385
  %41729 = call double @dot(double %41723, double %41725, double %41726, double %41728), !dbg !385
  %41730 = call double @atan2(double noundef %41695, double noundef %41729) #6, !dbg !386
  store double %41730, ptr %13, align 8, !dbg !387
  %41731 = load double, ptr %13, align 8, !dbg !388
  %41732 = load double, ptr %14, align 8, !dbg !389
  %41733 = fadd double %41732, %41731, !dbg !389
  store double %41733, ptr %14, align 8, !dbg !389
  %41734 = load double, ptr %13, align 8, !dbg !390
  %41735 = fsub double %41734, 0x400921FB54442D18, !dbg !392
  %41736 = call double @llvm.fabs.f64(double %41735), !dbg !393
  %41737 = fcmp ole double %41736, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41737, label %14330, label %41738, !dbg !395

41738:                                            ; preds = %41661
  %41739 = load double, ptr %13, align 8, !dbg !396
  %41740 = fadd double %41739, 0x400921FB54442D18, !dbg !397
  %41741 = call double @llvm.fabs.f64(double %41740), !dbg !398
  %41742 = fcmp ole double %41741, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41742, label %14330, label %41743, !dbg !400

41743:                                            ; preds = %41738
  br label %41744, !dbg !403

41744:                                            ; preds = %41743
  %41745 = load i32, ptr %10, align 4, !dbg !404
  %41746 = add nsw i32 %41745, 1, !dbg !404
  store i32 %41746, ptr %10, align 4, !dbg !404
  %41747 = load i32, ptr %10, align 4, !dbg !364
  %41748 = load i32, ptr %8, align 4, !dbg !366
  %41749 = icmp slt i32 %41747, %41748, !dbg !367
  br i1 %41749, label %41750, label %48422, !dbg !368

41750:                                            ; preds = %41744
  %41751 = load i32, ptr %10, align 4, !dbg !369
  %41752 = sext i32 %41751 to i64, !dbg !371
  %41753 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41752, !dbg !371
  %41754 = load double, ptr %6, align 8, !dbg !372
  %41755 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41756 = load double, ptr %41755, align 8, !dbg !372
  %41757 = load double, ptr %41753, align 16, !dbg !372
  %41758 = getelementptr inbounds { double, double }, ptr %41753, i32 0, i32 1, !dbg !372
  %41759 = load double, ptr %41758, align 8, !dbg !372
  %41760 = call { double, double } @make_vec(double %41754, double %41756, double %41757, double %41759), !dbg !372
  %41761 = extractvalue { double, double } %41760, 0, !dbg !372
  store double %41761, ptr %16, align 8, !dbg !372
  %41762 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41763 = extractvalue { double, double } %41760, 1, !dbg !372
  store double %41763, ptr %41762, align 8, !dbg !372
  %41764 = load i32, ptr %10, align 4, !dbg !373
  %41765 = add nsw i32 %41764, 1, !dbg !374
  %41766 = sext i32 %41765 to i64, !dbg !375
  %41767 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41766, !dbg !375
  %41768 = load double, ptr %6, align 8, !dbg !376
  %41769 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41770 = load double, ptr %41769, align 8, !dbg !376
  %41771 = load double, ptr %41767, align 16, !dbg !376
  %41772 = getelementptr inbounds { double, double }, ptr %41767, i32 0, i32 1, !dbg !376
  %41773 = load double, ptr %41772, align 8, !dbg !376
  %41774 = call { double, double } @make_vec(double %41768, double %41770, double %41771, double %41773), !dbg !376
  %41775 = extractvalue { double, double } %41774, 0, !dbg !376
  store double %41775, ptr %17, align 8, !dbg !376
  %41776 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41777 = extractvalue { double, double } %41774, 1, !dbg !376
  store double %41777, ptr %41776, align 8, !dbg !376
  %41778 = load double, ptr %16, align 8, !dbg !377
  %41779 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41780 = load double, ptr %41779, align 8, !dbg !377
  %41781 = load double, ptr %17, align 8, !dbg !377
  %41782 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41783 = load double, ptr %41782, align 8, !dbg !377
  %41784 = call double @cross(double %41778, double %41780, double %41781, double %41783), !dbg !377
  %41785 = load i32, ptr %10, align 4, !dbg !378
  %41786 = sext i32 %41785 to i64, !dbg !379
  %41787 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41786, !dbg !379
  %41788 = load double, ptr %6, align 8, !dbg !380
  %41789 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41790 = load double, ptr %41789, align 8, !dbg !380
  %41791 = load double, ptr %41787, align 16, !dbg !380
  %41792 = getelementptr inbounds { double, double }, ptr %41787, i32 0, i32 1, !dbg !380
  %41793 = load double, ptr %41792, align 8, !dbg !380
  %41794 = call { double, double } @make_vec(double %41788, double %41790, double %41791, double %41793), !dbg !380
  %41795 = extractvalue { double, double } %41794, 0, !dbg !380
  store double %41795, ptr %18, align 8, !dbg !380
  %41796 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41797 = extractvalue { double, double } %41794, 1, !dbg !380
  store double %41797, ptr %41796, align 8, !dbg !380
  %41798 = load i32, ptr %10, align 4, !dbg !381
  %41799 = add nsw i32 %41798, 1, !dbg !382
  %41800 = sext i32 %41799 to i64, !dbg !383
  %41801 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41800, !dbg !383
  %41802 = load double, ptr %6, align 8, !dbg !384
  %41803 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41804 = load double, ptr %41803, align 8, !dbg !384
  %41805 = load double, ptr %41801, align 16, !dbg !384
  %41806 = getelementptr inbounds { double, double }, ptr %41801, i32 0, i32 1, !dbg !384
  %41807 = load double, ptr %41806, align 8, !dbg !384
  %41808 = call { double, double } @make_vec(double %41802, double %41804, double %41805, double %41807), !dbg !384
  %41809 = extractvalue { double, double } %41808, 0, !dbg !384
  store double %41809, ptr %19, align 8, !dbg !384
  %41810 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41811 = extractvalue { double, double } %41808, 1, !dbg !384
  store double %41811, ptr %41810, align 8, !dbg !384
  %41812 = load double, ptr %18, align 8, !dbg !385
  %41813 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41814 = load double, ptr %41813, align 8, !dbg !385
  %41815 = load double, ptr %19, align 8, !dbg !385
  %41816 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41817 = load double, ptr %41816, align 8, !dbg !385
  %41818 = call double @dot(double %41812, double %41814, double %41815, double %41817), !dbg !385
  %41819 = call double @atan2(double noundef %41784, double noundef %41818) #6, !dbg !386
  store double %41819, ptr %13, align 8, !dbg !387
  %41820 = load double, ptr %13, align 8, !dbg !388
  %41821 = load double, ptr %14, align 8, !dbg !389
  %41822 = fadd double %41821, %41820, !dbg !389
  store double %41822, ptr %14, align 8, !dbg !389
  %41823 = load double, ptr %13, align 8, !dbg !390
  %41824 = fsub double %41823, 0x400921FB54442D18, !dbg !392
  %41825 = call double @llvm.fabs.f64(double %41824), !dbg !393
  %41826 = fcmp ole double %41825, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41826, label %14330, label %41827, !dbg !395

41827:                                            ; preds = %41750
  %41828 = load double, ptr %13, align 8, !dbg !396
  %41829 = fadd double %41828, 0x400921FB54442D18, !dbg !397
  %41830 = call double @llvm.fabs.f64(double %41829), !dbg !398
  %41831 = fcmp ole double %41830, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41831, label %14330, label %41832, !dbg !400

41832:                                            ; preds = %41827
  br label %41833, !dbg !403

41833:                                            ; preds = %41832
  %41834 = load i32, ptr %10, align 4, !dbg !404
  %41835 = add nsw i32 %41834, 1, !dbg !404
  store i32 %41835, ptr %10, align 4, !dbg !404
  %41836 = load i32, ptr %10, align 4, !dbg !364
  %41837 = load i32, ptr %8, align 4, !dbg !366
  %41838 = icmp slt i32 %41836, %41837, !dbg !367
  br i1 %41838, label %41839, label %48422, !dbg !368

41839:                                            ; preds = %41833
  %41840 = load i32, ptr %10, align 4, !dbg !369
  %41841 = sext i32 %41840 to i64, !dbg !371
  %41842 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41841, !dbg !371
  %41843 = load double, ptr %6, align 8, !dbg !372
  %41844 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41845 = load double, ptr %41844, align 8, !dbg !372
  %41846 = load double, ptr %41842, align 16, !dbg !372
  %41847 = getelementptr inbounds { double, double }, ptr %41842, i32 0, i32 1, !dbg !372
  %41848 = load double, ptr %41847, align 8, !dbg !372
  %41849 = call { double, double } @make_vec(double %41843, double %41845, double %41846, double %41848), !dbg !372
  %41850 = extractvalue { double, double } %41849, 0, !dbg !372
  store double %41850, ptr %16, align 8, !dbg !372
  %41851 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41852 = extractvalue { double, double } %41849, 1, !dbg !372
  store double %41852, ptr %41851, align 8, !dbg !372
  %41853 = load i32, ptr %10, align 4, !dbg !373
  %41854 = add nsw i32 %41853, 1, !dbg !374
  %41855 = sext i32 %41854 to i64, !dbg !375
  %41856 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41855, !dbg !375
  %41857 = load double, ptr %6, align 8, !dbg !376
  %41858 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41859 = load double, ptr %41858, align 8, !dbg !376
  %41860 = load double, ptr %41856, align 16, !dbg !376
  %41861 = getelementptr inbounds { double, double }, ptr %41856, i32 0, i32 1, !dbg !376
  %41862 = load double, ptr %41861, align 8, !dbg !376
  %41863 = call { double, double } @make_vec(double %41857, double %41859, double %41860, double %41862), !dbg !376
  %41864 = extractvalue { double, double } %41863, 0, !dbg !376
  store double %41864, ptr %17, align 8, !dbg !376
  %41865 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41866 = extractvalue { double, double } %41863, 1, !dbg !376
  store double %41866, ptr %41865, align 8, !dbg !376
  %41867 = load double, ptr %16, align 8, !dbg !377
  %41868 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41869 = load double, ptr %41868, align 8, !dbg !377
  %41870 = load double, ptr %17, align 8, !dbg !377
  %41871 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41872 = load double, ptr %41871, align 8, !dbg !377
  %41873 = call double @cross(double %41867, double %41869, double %41870, double %41872), !dbg !377
  %41874 = load i32, ptr %10, align 4, !dbg !378
  %41875 = sext i32 %41874 to i64, !dbg !379
  %41876 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41875, !dbg !379
  %41877 = load double, ptr %6, align 8, !dbg !380
  %41878 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41879 = load double, ptr %41878, align 8, !dbg !380
  %41880 = load double, ptr %41876, align 16, !dbg !380
  %41881 = getelementptr inbounds { double, double }, ptr %41876, i32 0, i32 1, !dbg !380
  %41882 = load double, ptr %41881, align 8, !dbg !380
  %41883 = call { double, double } @make_vec(double %41877, double %41879, double %41880, double %41882), !dbg !380
  %41884 = extractvalue { double, double } %41883, 0, !dbg !380
  store double %41884, ptr %18, align 8, !dbg !380
  %41885 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41886 = extractvalue { double, double } %41883, 1, !dbg !380
  store double %41886, ptr %41885, align 8, !dbg !380
  %41887 = load i32, ptr %10, align 4, !dbg !381
  %41888 = add nsw i32 %41887, 1, !dbg !382
  %41889 = sext i32 %41888 to i64, !dbg !383
  %41890 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41889, !dbg !383
  %41891 = load double, ptr %6, align 8, !dbg !384
  %41892 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41893 = load double, ptr %41892, align 8, !dbg !384
  %41894 = load double, ptr %41890, align 16, !dbg !384
  %41895 = getelementptr inbounds { double, double }, ptr %41890, i32 0, i32 1, !dbg !384
  %41896 = load double, ptr %41895, align 8, !dbg !384
  %41897 = call { double, double } @make_vec(double %41891, double %41893, double %41894, double %41896), !dbg !384
  %41898 = extractvalue { double, double } %41897, 0, !dbg !384
  store double %41898, ptr %19, align 8, !dbg !384
  %41899 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41900 = extractvalue { double, double } %41897, 1, !dbg !384
  store double %41900, ptr %41899, align 8, !dbg !384
  %41901 = load double, ptr %18, align 8, !dbg !385
  %41902 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41903 = load double, ptr %41902, align 8, !dbg !385
  %41904 = load double, ptr %19, align 8, !dbg !385
  %41905 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41906 = load double, ptr %41905, align 8, !dbg !385
  %41907 = call double @dot(double %41901, double %41903, double %41904, double %41906), !dbg !385
  %41908 = call double @atan2(double noundef %41873, double noundef %41907) #6, !dbg !386
  store double %41908, ptr %13, align 8, !dbg !387
  %41909 = load double, ptr %13, align 8, !dbg !388
  %41910 = load double, ptr %14, align 8, !dbg !389
  %41911 = fadd double %41910, %41909, !dbg !389
  store double %41911, ptr %14, align 8, !dbg !389
  %41912 = load double, ptr %13, align 8, !dbg !390
  %41913 = fsub double %41912, 0x400921FB54442D18, !dbg !392
  %41914 = call double @llvm.fabs.f64(double %41913), !dbg !393
  %41915 = fcmp ole double %41914, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %41915, label %14330, label %41916, !dbg !395

41916:                                            ; preds = %41839
  %41917 = load double, ptr %13, align 8, !dbg !396
  %41918 = fadd double %41917, 0x400921FB54442D18, !dbg !397
  %41919 = call double @llvm.fabs.f64(double %41918), !dbg !398
  %41920 = fcmp ole double %41919, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %41920, label %14330, label %41921, !dbg !400

41921:                                            ; preds = %41916
  br label %41922, !dbg !403

41922:                                            ; preds = %41921
  %41923 = load i32, ptr %10, align 4, !dbg !404
  %41924 = add nsw i32 %41923, 1, !dbg !404
  store i32 %41924, ptr %10, align 4, !dbg !404
  %41925 = load i32, ptr %10, align 4, !dbg !364
  %41926 = load i32, ptr %8, align 4, !dbg !366
  %41927 = icmp slt i32 %41925, %41926, !dbg !367
  br i1 %41927, label %41928, label %48422, !dbg !368

41928:                                            ; preds = %41922
  %41929 = load i32, ptr %10, align 4, !dbg !369
  %41930 = sext i32 %41929 to i64, !dbg !371
  %41931 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41930, !dbg !371
  %41932 = load double, ptr %6, align 8, !dbg !372
  %41933 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %41934 = load double, ptr %41933, align 8, !dbg !372
  %41935 = load double, ptr %41931, align 16, !dbg !372
  %41936 = getelementptr inbounds { double, double }, ptr %41931, i32 0, i32 1, !dbg !372
  %41937 = load double, ptr %41936, align 8, !dbg !372
  %41938 = call { double, double } @make_vec(double %41932, double %41934, double %41935, double %41937), !dbg !372
  %41939 = extractvalue { double, double } %41938, 0, !dbg !372
  store double %41939, ptr %16, align 8, !dbg !372
  %41940 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %41941 = extractvalue { double, double } %41938, 1, !dbg !372
  store double %41941, ptr %41940, align 8, !dbg !372
  %41942 = load i32, ptr %10, align 4, !dbg !373
  %41943 = add nsw i32 %41942, 1, !dbg !374
  %41944 = sext i32 %41943 to i64, !dbg !375
  %41945 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41944, !dbg !375
  %41946 = load double, ptr %6, align 8, !dbg !376
  %41947 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %41948 = load double, ptr %41947, align 8, !dbg !376
  %41949 = load double, ptr %41945, align 16, !dbg !376
  %41950 = getelementptr inbounds { double, double }, ptr %41945, i32 0, i32 1, !dbg !376
  %41951 = load double, ptr %41950, align 8, !dbg !376
  %41952 = call { double, double } @make_vec(double %41946, double %41948, double %41949, double %41951), !dbg !376
  %41953 = extractvalue { double, double } %41952, 0, !dbg !376
  store double %41953, ptr %17, align 8, !dbg !376
  %41954 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %41955 = extractvalue { double, double } %41952, 1, !dbg !376
  store double %41955, ptr %41954, align 8, !dbg !376
  %41956 = load double, ptr %16, align 8, !dbg !377
  %41957 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %41958 = load double, ptr %41957, align 8, !dbg !377
  %41959 = load double, ptr %17, align 8, !dbg !377
  %41960 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %41961 = load double, ptr %41960, align 8, !dbg !377
  %41962 = call double @cross(double %41956, double %41958, double %41959, double %41961), !dbg !377
  %41963 = load i32, ptr %10, align 4, !dbg !378
  %41964 = sext i32 %41963 to i64, !dbg !379
  %41965 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41964, !dbg !379
  %41966 = load double, ptr %6, align 8, !dbg !380
  %41967 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %41968 = load double, ptr %41967, align 8, !dbg !380
  %41969 = load double, ptr %41965, align 16, !dbg !380
  %41970 = getelementptr inbounds { double, double }, ptr %41965, i32 0, i32 1, !dbg !380
  %41971 = load double, ptr %41970, align 8, !dbg !380
  %41972 = call { double, double } @make_vec(double %41966, double %41968, double %41969, double %41971), !dbg !380
  %41973 = extractvalue { double, double } %41972, 0, !dbg !380
  store double %41973, ptr %18, align 8, !dbg !380
  %41974 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %41975 = extractvalue { double, double } %41972, 1, !dbg !380
  store double %41975, ptr %41974, align 8, !dbg !380
  %41976 = load i32, ptr %10, align 4, !dbg !381
  %41977 = add nsw i32 %41976, 1, !dbg !382
  %41978 = sext i32 %41977 to i64, !dbg !383
  %41979 = getelementptr inbounds %struct.POINT, ptr %26, i64 %41978, !dbg !383
  %41980 = load double, ptr %6, align 8, !dbg !384
  %41981 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %41982 = load double, ptr %41981, align 8, !dbg !384
  %41983 = load double, ptr %41979, align 16, !dbg !384
  %41984 = getelementptr inbounds { double, double }, ptr %41979, i32 0, i32 1, !dbg !384
  %41985 = load double, ptr %41984, align 8, !dbg !384
  %41986 = call { double, double } @make_vec(double %41980, double %41982, double %41983, double %41985), !dbg !384
  %41987 = extractvalue { double, double } %41986, 0, !dbg !384
  store double %41987, ptr %19, align 8, !dbg !384
  %41988 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %41989 = extractvalue { double, double } %41986, 1, !dbg !384
  store double %41989, ptr %41988, align 8, !dbg !384
  %41990 = load double, ptr %18, align 8, !dbg !385
  %41991 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %41992 = load double, ptr %41991, align 8, !dbg !385
  %41993 = load double, ptr %19, align 8, !dbg !385
  %41994 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %41995 = load double, ptr %41994, align 8, !dbg !385
  %41996 = call double @dot(double %41990, double %41992, double %41993, double %41995), !dbg !385
  %41997 = call double @atan2(double noundef %41962, double noundef %41996) #6, !dbg !386
  store double %41997, ptr %13, align 8, !dbg !387
  %41998 = load double, ptr %13, align 8, !dbg !388
  %41999 = load double, ptr %14, align 8, !dbg !389
  %42000 = fadd double %41999, %41998, !dbg !389
  store double %42000, ptr %14, align 8, !dbg !389
  %42001 = load double, ptr %13, align 8, !dbg !390
  %42002 = fsub double %42001, 0x400921FB54442D18, !dbg !392
  %42003 = call double @llvm.fabs.f64(double %42002), !dbg !393
  %42004 = fcmp ole double %42003, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42004, label %14330, label %42005, !dbg !395

42005:                                            ; preds = %41928
  %42006 = load double, ptr %13, align 8, !dbg !396
  %42007 = fadd double %42006, 0x400921FB54442D18, !dbg !397
  %42008 = call double @llvm.fabs.f64(double %42007), !dbg !398
  %42009 = fcmp ole double %42008, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42009, label %14330, label %42010, !dbg !400

42010:                                            ; preds = %42005
  br label %42011, !dbg !403

42011:                                            ; preds = %42010
  %42012 = load i32, ptr %10, align 4, !dbg !404
  %42013 = add nsw i32 %42012, 1, !dbg !404
  store i32 %42013, ptr %10, align 4, !dbg !404
  %42014 = load i32, ptr %10, align 4, !dbg !364
  %42015 = load i32, ptr %8, align 4, !dbg !366
  %42016 = icmp slt i32 %42014, %42015, !dbg !367
  br i1 %42016, label %42017, label %48422, !dbg !368

42017:                                            ; preds = %42011
  %42018 = load i32, ptr %10, align 4, !dbg !369
  %42019 = sext i32 %42018 to i64, !dbg !371
  %42020 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42019, !dbg !371
  %42021 = load double, ptr %6, align 8, !dbg !372
  %42022 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42023 = load double, ptr %42022, align 8, !dbg !372
  %42024 = load double, ptr %42020, align 16, !dbg !372
  %42025 = getelementptr inbounds { double, double }, ptr %42020, i32 0, i32 1, !dbg !372
  %42026 = load double, ptr %42025, align 8, !dbg !372
  %42027 = call { double, double } @make_vec(double %42021, double %42023, double %42024, double %42026), !dbg !372
  %42028 = extractvalue { double, double } %42027, 0, !dbg !372
  store double %42028, ptr %16, align 8, !dbg !372
  %42029 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42030 = extractvalue { double, double } %42027, 1, !dbg !372
  store double %42030, ptr %42029, align 8, !dbg !372
  %42031 = load i32, ptr %10, align 4, !dbg !373
  %42032 = add nsw i32 %42031, 1, !dbg !374
  %42033 = sext i32 %42032 to i64, !dbg !375
  %42034 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42033, !dbg !375
  %42035 = load double, ptr %6, align 8, !dbg !376
  %42036 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42037 = load double, ptr %42036, align 8, !dbg !376
  %42038 = load double, ptr %42034, align 16, !dbg !376
  %42039 = getelementptr inbounds { double, double }, ptr %42034, i32 0, i32 1, !dbg !376
  %42040 = load double, ptr %42039, align 8, !dbg !376
  %42041 = call { double, double } @make_vec(double %42035, double %42037, double %42038, double %42040), !dbg !376
  %42042 = extractvalue { double, double } %42041, 0, !dbg !376
  store double %42042, ptr %17, align 8, !dbg !376
  %42043 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42044 = extractvalue { double, double } %42041, 1, !dbg !376
  store double %42044, ptr %42043, align 8, !dbg !376
  %42045 = load double, ptr %16, align 8, !dbg !377
  %42046 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42047 = load double, ptr %42046, align 8, !dbg !377
  %42048 = load double, ptr %17, align 8, !dbg !377
  %42049 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42050 = load double, ptr %42049, align 8, !dbg !377
  %42051 = call double @cross(double %42045, double %42047, double %42048, double %42050), !dbg !377
  %42052 = load i32, ptr %10, align 4, !dbg !378
  %42053 = sext i32 %42052 to i64, !dbg !379
  %42054 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42053, !dbg !379
  %42055 = load double, ptr %6, align 8, !dbg !380
  %42056 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42057 = load double, ptr %42056, align 8, !dbg !380
  %42058 = load double, ptr %42054, align 16, !dbg !380
  %42059 = getelementptr inbounds { double, double }, ptr %42054, i32 0, i32 1, !dbg !380
  %42060 = load double, ptr %42059, align 8, !dbg !380
  %42061 = call { double, double } @make_vec(double %42055, double %42057, double %42058, double %42060), !dbg !380
  %42062 = extractvalue { double, double } %42061, 0, !dbg !380
  store double %42062, ptr %18, align 8, !dbg !380
  %42063 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42064 = extractvalue { double, double } %42061, 1, !dbg !380
  store double %42064, ptr %42063, align 8, !dbg !380
  %42065 = load i32, ptr %10, align 4, !dbg !381
  %42066 = add nsw i32 %42065, 1, !dbg !382
  %42067 = sext i32 %42066 to i64, !dbg !383
  %42068 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42067, !dbg !383
  %42069 = load double, ptr %6, align 8, !dbg !384
  %42070 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42071 = load double, ptr %42070, align 8, !dbg !384
  %42072 = load double, ptr %42068, align 16, !dbg !384
  %42073 = getelementptr inbounds { double, double }, ptr %42068, i32 0, i32 1, !dbg !384
  %42074 = load double, ptr %42073, align 8, !dbg !384
  %42075 = call { double, double } @make_vec(double %42069, double %42071, double %42072, double %42074), !dbg !384
  %42076 = extractvalue { double, double } %42075, 0, !dbg !384
  store double %42076, ptr %19, align 8, !dbg !384
  %42077 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42078 = extractvalue { double, double } %42075, 1, !dbg !384
  store double %42078, ptr %42077, align 8, !dbg !384
  %42079 = load double, ptr %18, align 8, !dbg !385
  %42080 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42081 = load double, ptr %42080, align 8, !dbg !385
  %42082 = load double, ptr %19, align 8, !dbg !385
  %42083 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42084 = load double, ptr %42083, align 8, !dbg !385
  %42085 = call double @dot(double %42079, double %42081, double %42082, double %42084), !dbg !385
  %42086 = call double @atan2(double noundef %42051, double noundef %42085) #6, !dbg !386
  store double %42086, ptr %13, align 8, !dbg !387
  %42087 = load double, ptr %13, align 8, !dbg !388
  %42088 = load double, ptr %14, align 8, !dbg !389
  %42089 = fadd double %42088, %42087, !dbg !389
  store double %42089, ptr %14, align 8, !dbg !389
  %42090 = load double, ptr %13, align 8, !dbg !390
  %42091 = fsub double %42090, 0x400921FB54442D18, !dbg !392
  %42092 = call double @llvm.fabs.f64(double %42091), !dbg !393
  %42093 = fcmp ole double %42092, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42093, label %14330, label %42094, !dbg !395

42094:                                            ; preds = %42017
  %42095 = load double, ptr %13, align 8, !dbg !396
  %42096 = fadd double %42095, 0x400921FB54442D18, !dbg !397
  %42097 = call double @llvm.fabs.f64(double %42096), !dbg !398
  %42098 = fcmp ole double %42097, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42098, label %14330, label %42099, !dbg !400

42099:                                            ; preds = %42094
  br label %42100, !dbg !403

42100:                                            ; preds = %42099
  %42101 = load i32, ptr %10, align 4, !dbg !404
  %42102 = add nsw i32 %42101, 1, !dbg !404
  store i32 %42102, ptr %10, align 4, !dbg !404
  %42103 = load i32, ptr %10, align 4, !dbg !364
  %42104 = load i32, ptr %8, align 4, !dbg !366
  %42105 = icmp slt i32 %42103, %42104, !dbg !367
  br i1 %42105, label %42106, label %48422, !dbg !368

42106:                                            ; preds = %42100
  %42107 = load i32, ptr %10, align 4, !dbg !369
  %42108 = sext i32 %42107 to i64, !dbg !371
  %42109 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42108, !dbg !371
  %42110 = load double, ptr %6, align 8, !dbg !372
  %42111 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42112 = load double, ptr %42111, align 8, !dbg !372
  %42113 = load double, ptr %42109, align 16, !dbg !372
  %42114 = getelementptr inbounds { double, double }, ptr %42109, i32 0, i32 1, !dbg !372
  %42115 = load double, ptr %42114, align 8, !dbg !372
  %42116 = call { double, double } @make_vec(double %42110, double %42112, double %42113, double %42115), !dbg !372
  %42117 = extractvalue { double, double } %42116, 0, !dbg !372
  store double %42117, ptr %16, align 8, !dbg !372
  %42118 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42119 = extractvalue { double, double } %42116, 1, !dbg !372
  store double %42119, ptr %42118, align 8, !dbg !372
  %42120 = load i32, ptr %10, align 4, !dbg !373
  %42121 = add nsw i32 %42120, 1, !dbg !374
  %42122 = sext i32 %42121 to i64, !dbg !375
  %42123 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42122, !dbg !375
  %42124 = load double, ptr %6, align 8, !dbg !376
  %42125 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42126 = load double, ptr %42125, align 8, !dbg !376
  %42127 = load double, ptr %42123, align 16, !dbg !376
  %42128 = getelementptr inbounds { double, double }, ptr %42123, i32 0, i32 1, !dbg !376
  %42129 = load double, ptr %42128, align 8, !dbg !376
  %42130 = call { double, double } @make_vec(double %42124, double %42126, double %42127, double %42129), !dbg !376
  %42131 = extractvalue { double, double } %42130, 0, !dbg !376
  store double %42131, ptr %17, align 8, !dbg !376
  %42132 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42133 = extractvalue { double, double } %42130, 1, !dbg !376
  store double %42133, ptr %42132, align 8, !dbg !376
  %42134 = load double, ptr %16, align 8, !dbg !377
  %42135 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42136 = load double, ptr %42135, align 8, !dbg !377
  %42137 = load double, ptr %17, align 8, !dbg !377
  %42138 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42139 = load double, ptr %42138, align 8, !dbg !377
  %42140 = call double @cross(double %42134, double %42136, double %42137, double %42139), !dbg !377
  %42141 = load i32, ptr %10, align 4, !dbg !378
  %42142 = sext i32 %42141 to i64, !dbg !379
  %42143 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42142, !dbg !379
  %42144 = load double, ptr %6, align 8, !dbg !380
  %42145 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42146 = load double, ptr %42145, align 8, !dbg !380
  %42147 = load double, ptr %42143, align 16, !dbg !380
  %42148 = getelementptr inbounds { double, double }, ptr %42143, i32 0, i32 1, !dbg !380
  %42149 = load double, ptr %42148, align 8, !dbg !380
  %42150 = call { double, double } @make_vec(double %42144, double %42146, double %42147, double %42149), !dbg !380
  %42151 = extractvalue { double, double } %42150, 0, !dbg !380
  store double %42151, ptr %18, align 8, !dbg !380
  %42152 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42153 = extractvalue { double, double } %42150, 1, !dbg !380
  store double %42153, ptr %42152, align 8, !dbg !380
  %42154 = load i32, ptr %10, align 4, !dbg !381
  %42155 = add nsw i32 %42154, 1, !dbg !382
  %42156 = sext i32 %42155 to i64, !dbg !383
  %42157 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42156, !dbg !383
  %42158 = load double, ptr %6, align 8, !dbg !384
  %42159 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42160 = load double, ptr %42159, align 8, !dbg !384
  %42161 = load double, ptr %42157, align 16, !dbg !384
  %42162 = getelementptr inbounds { double, double }, ptr %42157, i32 0, i32 1, !dbg !384
  %42163 = load double, ptr %42162, align 8, !dbg !384
  %42164 = call { double, double } @make_vec(double %42158, double %42160, double %42161, double %42163), !dbg !384
  %42165 = extractvalue { double, double } %42164, 0, !dbg !384
  store double %42165, ptr %19, align 8, !dbg !384
  %42166 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42167 = extractvalue { double, double } %42164, 1, !dbg !384
  store double %42167, ptr %42166, align 8, !dbg !384
  %42168 = load double, ptr %18, align 8, !dbg !385
  %42169 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42170 = load double, ptr %42169, align 8, !dbg !385
  %42171 = load double, ptr %19, align 8, !dbg !385
  %42172 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42173 = load double, ptr %42172, align 8, !dbg !385
  %42174 = call double @dot(double %42168, double %42170, double %42171, double %42173), !dbg !385
  %42175 = call double @atan2(double noundef %42140, double noundef %42174) #6, !dbg !386
  store double %42175, ptr %13, align 8, !dbg !387
  %42176 = load double, ptr %13, align 8, !dbg !388
  %42177 = load double, ptr %14, align 8, !dbg !389
  %42178 = fadd double %42177, %42176, !dbg !389
  store double %42178, ptr %14, align 8, !dbg !389
  %42179 = load double, ptr %13, align 8, !dbg !390
  %42180 = fsub double %42179, 0x400921FB54442D18, !dbg !392
  %42181 = call double @llvm.fabs.f64(double %42180), !dbg !393
  %42182 = fcmp ole double %42181, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42182, label %14330, label %42183, !dbg !395

42183:                                            ; preds = %42106
  %42184 = load double, ptr %13, align 8, !dbg !396
  %42185 = fadd double %42184, 0x400921FB54442D18, !dbg !397
  %42186 = call double @llvm.fabs.f64(double %42185), !dbg !398
  %42187 = fcmp ole double %42186, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42187, label %14330, label %42188, !dbg !400

42188:                                            ; preds = %42183
  br label %42189, !dbg !403

42189:                                            ; preds = %42188
  %42190 = load i32, ptr %10, align 4, !dbg !404
  %42191 = add nsw i32 %42190, 1, !dbg !404
  store i32 %42191, ptr %10, align 4, !dbg !404
  %42192 = load i32, ptr %10, align 4, !dbg !364
  %42193 = load i32, ptr %8, align 4, !dbg !366
  %42194 = icmp slt i32 %42192, %42193, !dbg !367
  br i1 %42194, label %42195, label %48422, !dbg !368

42195:                                            ; preds = %42189
  %42196 = load i32, ptr %10, align 4, !dbg !369
  %42197 = sext i32 %42196 to i64, !dbg !371
  %42198 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42197, !dbg !371
  %42199 = load double, ptr %6, align 8, !dbg !372
  %42200 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42201 = load double, ptr %42200, align 8, !dbg !372
  %42202 = load double, ptr %42198, align 16, !dbg !372
  %42203 = getelementptr inbounds { double, double }, ptr %42198, i32 0, i32 1, !dbg !372
  %42204 = load double, ptr %42203, align 8, !dbg !372
  %42205 = call { double, double } @make_vec(double %42199, double %42201, double %42202, double %42204), !dbg !372
  %42206 = extractvalue { double, double } %42205, 0, !dbg !372
  store double %42206, ptr %16, align 8, !dbg !372
  %42207 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42208 = extractvalue { double, double } %42205, 1, !dbg !372
  store double %42208, ptr %42207, align 8, !dbg !372
  %42209 = load i32, ptr %10, align 4, !dbg !373
  %42210 = add nsw i32 %42209, 1, !dbg !374
  %42211 = sext i32 %42210 to i64, !dbg !375
  %42212 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42211, !dbg !375
  %42213 = load double, ptr %6, align 8, !dbg !376
  %42214 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42215 = load double, ptr %42214, align 8, !dbg !376
  %42216 = load double, ptr %42212, align 16, !dbg !376
  %42217 = getelementptr inbounds { double, double }, ptr %42212, i32 0, i32 1, !dbg !376
  %42218 = load double, ptr %42217, align 8, !dbg !376
  %42219 = call { double, double } @make_vec(double %42213, double %42215, double %42216, double %42218), !dbg !376
  %42220 = extractvalue { double, double } %42219, 0, !dbg !376
  store double %42220, ptr %17, align 8, !dbg !376
  %42221 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42222 = extractvalue { double, double } %42219, 1, !dbg !376
  store double %42222, ptr %42221, align 8, !dbg !376
  %42223 = load double, ptr %16, align 8, !dbg !377
  %42224 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42225 = load double, ptr %42224, align 8, !dbg !377
  %42226 = load double, ptr %17, align 8, !dbg !377
  %42227 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42228 = load double, ptr %42227, align 8, !dbg !377
  %42229 = call double @cross(double %42223, double %42225, double %42226, double %42228), !dbg !377
  %42230 = load i32, ptr %10, align 4, !dbg !378
  %42231 = sext i32 %42230 to i64, !dbg !379
  %42232 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42231, !dbg !379
  %42233 = load double, ptr %6, align 8, !dbg !380
  %42234 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42235 = load double, ptr %42234, align 8, !dbg !380
  %42236 = load double, ptr %42232, align 16, !dbg !380
  %42237 = getelementptr inbounds { double, double }, ptr %42232, i32 0, i32 1, !dbg !380
  %42238 = load double, ptr %42237, align 8, !dbg !380
  %42239 = call { double, double } @make_vec(double %42233, double %42235, double %42236, double %42238), !dbg !380
  %42240 = extractvalue { double, double } %42239, 0, !dbg !380
  store double %42240, ptr %18, align 8, !dbg !380
  %42241 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42242 = extractvalue { double, double } %42239, 1, !dbg !380
  store double %42242, ptr %42241, align 8, !dbg !380
  %42243 = load i32, ptr %10, align 4, !dbg !381
  %42244 = add nsw i32 %42243, 1, !dbg !382
  %42245 = sext i32 %42244 to i64, !dbg !383
  %42246 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42245, !dbg !383
  %42247 = load double, ptr %6, align 8, !dbg !384
  %42248 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42249 = load double, ptr %42248, align 8, !dbg !384
  %42250 = load double, ptr %42246, align 16, !dbg !384
  %42251 = getelementptr inbounds { double, double }, ptr %42246, i32 0, i32 1, !dbg !384
  %42252 = load double, ptr %42251, align 8, !dbg !384
  %42253 = call { double, double } @make_vec(double %42247, double %42249, double %42250, double %42252), !dbg !384
  %42254 = extractvalue { double, double } %42253, 0, !dbg !384
  store double %42254, ptr %19, align 8, !dbg !384
  %42255 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42256 = extractvalue { double, double } %42253, 1, !dbg !384
  store double %42256, ptr %42255, align 8, !dbg !384
  %42257 = load double, ptr %18, align 8, !dbg !385
  %42258 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42259 = load double, ptr %42258, align 8, !dbg !385
  %42260 = load double, ptr %19, align 8, !dbg !385
  %42261 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42262 = load double, ptr %42261, align 8, !dbg !385
  %42263 = call double @dot(double %42257, double %42259, double %42260, double %42262), !dbg !385
  %42264 = call double @atan2(double noundef %42229, double noundef %42263) #6, !dbg !386
  store double %42264, ptr %13, align 8, !dbg !387
  %42265 = load double, ptr %13, align 8, !dbg !388
  %42266 = load double, ptr %14, align 8, !dbg !389
  %42267 = fadd double %42266, %42265, !dbg !389
  store double %42267, ptr %14, align 8, !dbg !389
  %42268 = load double, ptr %13, align 8, !dbg !390
  %42269 = fsub double %42268, 0x400921FB54442D18, !dbg !392
  %42270 = call double @llvm.fabs.f64(double %42269), !dbg !393
  %42271 = fcmp ole double %42270, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42271, label %14330, label %42272, !dbg !395

42272:                                            ; preds = %42195
  %42273 = load double, ptr %13, align 8, !dbg !396
  %42274 = fadd double %42273, 0x400921FB54442D18, !dbg !397
  %42275 = call double @llvm.fabs.f64(double %42274), !dbg !398
  %42276 = fcmp ole double %42275, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42276, label %14330, label %42277, !dbg !400

42277:                                            ; preds = %42272
  br label %42278, !dbg !403

42278:                                            ; preds = %42277
  %42279 = load i32, ptr %10, align 4, !dbg !404
  %42280 = add nsw i32 %42279, 1, !dbg !404
  store i32 %42280, ptr %10, align 4, !dbg !404
  %42281 = load i32, ptr %10, align 4, !dbg !364
  %42282 = load i32, ptr %8, align 4, !dbg !366
  %42283 = icmp slt i32 %42281, %42282, !dbg !367
  br i1 %42283, label %42284, label %48422, !dbg !368

42284:                                            ; preds = %42278
  %42285 = load i32, ptr %10, align 4, !dbg !369
  %42286 = sext i32 %42285 to i64, !dbg !371
  %42287 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42286, !dbg !371
  %42288 = load double, ptr %6, align 8, !dbg !372
  %42289 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42290 = load double, ptr %42289, align 8, !dbg !372
  %42291 = load double, ptr %42287, align 16, !dbg !372
  %42292 = getelementptr inbounds { double, double }, ptr %42287, i32 0, i32 1, !dbg !372
  %42293 = load double, ptr %42292, align 8, !dbg !372
  %42294 = call { double, double } @make_vec(double %42288, double %42290, double %42291, double %42293), !dbg !372
  %42295 = extractvalue { double, double } %42294, 0, !dbg !372
  store double %42295, ptr %16, align 8, !dbg !372
  %42296 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42297 = extractvalue { double, double } %42294, 1, !dbg !372
  store double %42297, ptr %42296, align 8, !dbg !372
  %42298 = load i32, ptr %10, align 4, !dbg !373
  %42299 = add nsw i32 %42298, 1, !dbg !374
  %42300 = sext i32 %42299 to i64, !dbg !375
  %42301 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42300, !dbg !375
  %42302 = load double, ptr %6, align 8, !dbg !376
  %42303 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42304 = load double, ptr %42303, align 8, !dbg !376
  %42305 = load double, ptr %42301, align 16, !dbg !376
  %42306 = getelementptr inbounds { double, double }, ptr %42301, i32 0, i32 1, !dbg !376
  %42307 = load double, ptr %42306, align 8, !dbg !376
  %42308 = call { double, double } @make_vec(double %42302, double %42304, double %42305, double %42307), !dbg !376
  %42309 = extractvalue { double, double } %42308, 0, !dbg !376
  store double %42309, ptr %17, align 8, !dbg !376
  %42310 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42311 = extractvalue { double, double } %42308, 1, !dbg !376
  store double %42311, ptr %42310, align 8, !dbg !376
  %42312 = load double, ptr %16, align 8, !dbg !377
  %42313 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42314 = load double, ptr %42313, align 8, !dbg !377
  %42315 = load double, ptr %17, align 8, !dbg !377
  %42316 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42317 = load double, ptr %42316, align 8, !dbg !377
  %42318 = call double @cross(double %42312, double %42314, double %42315, double %42317), !dbg !377
  %42319 = load i32, ptr %10, align 4, !dbg !378
  %42320 = sext i32 %42319 to i64, !dbg !379
  %42321 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42320, !dbg !379
  %42322 = load double, ptr %6, align 8, !dbg !380
  %42323 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42324 = load double, ptr %42323, align 8, !dbg !380
  %42325 = load double, ptr %42321, align 16, !dbg !380
  %42326 = getelementptr inbounds { double, double }, ptr %42321, i32 0, i32 1, !dbg !380
  %42327 = load double, ptr %42326, align 8, !dbg !380
  %42328 = call { double, double } @make_vec(double %42322, double %42324, double %42325, double %42327), !dbg !380
  %42329 = extractvalue { double, double } %42328, 0, !dbg !380
  store double %42329, ptr %18, align 8, !dbg !380
  %42330 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42331 = extractvalue { double, double } %42328, 1, !dbg !380
  store double %42331, ptr %42330, align 8, !dbg !380
  %42332 = load i32, ptr %10, align 4, !dbg !381
  %42333 = add nsw i32 %42332, 1, !dbg !382
  %42334 = sext i32 %42333 to i64, !dbg !383
  %42335 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42334, !dbg !383
  %42336 = load double, ptr %6, align 8, !dbg !384
  %42337 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42338 = load double, ptr %42337, align 8, !dbg !384
  %42339 = load double, ptr %42335, align 16, !dbg !384
  %42340 = getelementptr inbounds { double, double }, ptr %42335, i32 0, i32 1, !dbg !384
  %42341 = load double, ptr %42340, align 8, !dbg !384
  %42342 = call { double, double } @make_vec(double %42336, double %42338, double %42339, double %42341), !dbg !384
  %42343 = extractvalue { double, double } %42342, 0, !dbg !384
  store double %42343, ptr %19, align 8, !dbg !384
  %42344 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42345 = extractvalue { double, double } %42342, 1, !dbg !384
  store double %42345, ptr %42344, align 8, !dbg !384
  %42346 = load double, ptr %18, align 8, !dbg !385
  %42347 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42348 = load double, ptr %42347, align 8, !dbg !385
  %42349 = load double, ptr %19, align 8, !dbg !385
  %42350 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42351 = load double, ptr %42350, align 8, !dbg !385
  %42352 = call double @dot(double %42346, double %42348, double %42349, double %42351), !dbg !385
  %42353 = call double @atan2(double noundef %42318, double noundef %42352) #6, !dbg !386
  store double %42353, ptr %13, align 8, !dbg !387
  %42354 = load double, ptr %13, align 8, !dbg !388
  %42355 = load double, ptr %14, align 8, !dbg !389
  %42356 = fadd double %42355, %42354, !dbg !389
  store double %42356, ptr %14, align 8, !dbg !389
  %42357 = load double, ptr %13, align 8, !dbg !390
  %42358 = fsub double %42357, 0x400921FB54442D18, !dbg !392
  %42359 = call double @llvm.fabs.f64(double %42358), !dbg !393
  %42360 = fcmp ole double %42359, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42360, label %14330, label %42361, !dbg !395

42361:                                            ; preds = %42284
  %42362 = load double, ptr %13, align 8, !dbg !396
  %42363 = fadd double %42362, 0x400921FB54442D18, !dbg !397
  %42364 = call double @llvm.fabs.f64(double %42363), !dbg !398
  %42365 = fcmp ole double %42364, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42365, label %14330, label %42366, !dbg !400

42366:                                            ; preds = %42361
  br label %42367, !dbg !403

42367:                                            ; preds = %42366
  %42368 = load i32, ptr %10, align 4, !dbg !404
  %42369 = add nsw i32 %42368, 1, !dbg !404
  store i32 %42369, ptr %10, align 4, !dbg !404
  %42370 = load i32, ptr %10, align 4, !dbg !364
  %42371 = load i32, ptr %8, align 4, !dbg !366
  %42372 = icmp slt i32 %42370, %42371, !dbg !367
  br i1 %42372, label %42373, label %48422, !dbg !368

42373:                                            ; preds = %42367
  %42374 = load i32, ptr %10, align 4, !dbg !369
  %42375 = sext i32 %42374 to i64, !dbg !371
  %42376 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42375, !dbg !371
  %42377 = load double, ptr %6, align 8, !dbg !372
  %42378 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42379 = load double, ptr %42378, align 8, !dbg !372
  %42380 = load double, ptr %42376, align 16, !dbg !372
  %42381 = getelementptr inbounds { double, double }, ptr %42376, i32 0, i32 1, !dbg !372
  %42382 = load double, ptr %42381, align 8, !dbg !372
  %42383 = call { double, double } @make_vec(double %42377, double %42379, double %42380, double %42382), !dbg !372
  %42384 = extractvalue { double, double } %42383, 0, !dbg !372
  store double %42384, ptr %16, align 8, !dbg !372
  %42385 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42386 = extractvalue { double, double } %42383, 1, !dbg !372
  store double %42386, ptr %42385, align 8, !dbg !372
  %42387 = load i32, ptr %10, align 4, !dbg !373
  %42388 = add nsw i32 %42387, 1, !dbg !374
  %42389 = sext i32 %42388 to i64, !dbg !375
  %42390 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42389, !dbg !375
  %42391 = load double, ptr %6, align 8, !dbg !376
  %42392 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42393 = load double, ptr %42392, align 8, !dbg !376
  %42394 = load double, ptr %42390, align 16, !dbg !376
  %42395 = getelementptr inbounds { double, double }, ptr %42390, i32 0, i32 1, !dbg !376
  %42396 = load double, ptr %42395, align 8, !dbg !376
  %42397 = call { double, double } @make_vec(double %42391, double %42393, double %42394, double %42396), !dbg !376
  %42398 = extractvalue { double, double } %42397, 0, !dbg !376
  store double %42398, ptr %17, align 8, !dbg !376
  %42399 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42400 = extractvalue { double, double } %42397, 1, !dbg !376
  store double %42400, ptr %42399, align 8, !dbg !376
  %42401 = load double, ptr %16, align 8, !dbg !377
  %42402 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42403 = load double, ptr %42402, align 8, !dbg !377
  %42404 = load double, ptr %17, align 8, !dbg !377
  %42405 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42406 = load double, ptr %42405, align 8, !dbg !377
  %42407 = call double @cross(double %42401, double %42403, double %42404, double %42406), !dbg !377
  %42408 = load i32, ptr %10, align 4, !dbg !378
  %42409 = sext i32 %42408 to i64, !dbg !379
  %42410 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42409, !dbg !379
  %42411 = load double, ptr %6, align 8, !dbg !380
  %42412 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42413 = load double, ptr %42412, align 8, !dbg !380
  %42414 = load double, ptr %42410, align 16, !dbg !380
  %42415 = getelementptr inbounds { double, double }, ptr %42410, i32 0, i32 1, !dbg !380
  %42416 = load double, ptr %42415, align 8, !dbg !380
  %42417 = call { double, double } @make_vec(double %42411, double %42413, double %42414, double %42416), !dbg !380
  %42418 = extractvalue { double, double } %42417, 0, !dbg !380
  store double %42418, ptr %18, align 8, !dbg !380
  %42419 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42420 = extractvalue { double, double } %42417, 1, !dbg !380
  store double %42420, ptr %42419, align 8, !dbg !380
  %42421 = load i32, ptr %10, align 4, !dbg !381
  %42422 = add nsw i32 %42421, 1, !dbg !382
  %42423 = sext i32 %42422 to i64, !dbg !383
  %42424 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42423, !dbg !383
  %42425 = load double, ptr %6, align 8, !dbg !384
  %42426 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42427 = load double, ptr %42426, align 8, !dbg !384
  %42428 = load double, ptr %42424, align 16, !dbg !384
  %42429 = getelementptr inbounds { double, double }, ptr %42424, i32 0, i32 1, !dbg !384
  %42430 = load double, ptr %42429, align 8, !dbg !384
  %42431 = call { double, double } @make_vec(double %42425, double %42427, double %42428, double %42430), !dbg !384
  %42432 = extractvalue { double, double } %42431, 0, !dbg !384
  store double %42432, ptr %19, align 8, !dbg !384
  %42433 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42434 = extractvalue { double, double } %42431, 1, !dbg !384
  store double %42434, ptr %42433, align 8, !dbg !384
  %42435 = load double, ptr %18, align 8, !dbg !385
  %42436 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42437 = load double, ptr %42436, align 8, !dbg !385
  %42438 = load double, ptr %19, align 8, !dbg !385
  %42439 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42440 = load double, ptr %42439, align 8, !dbg !385
  %42441 = call double @dot(double %42435, double %42437, double %42438, double %42440), !dbg !385
  %42442 = call double @atan2(double noundef %42407, double noundef %42441) #6, !dbg !386
  store double %42442, ptr %13, align 8, !dbg !387
  %42443 = load double, ptr %13, align 8, !dbg !388
  %42444 = load double, ptr %14, align 8, !dbg !389
  %42445 = fadd double %42444, %42443, !dbg !389
  store double %42445, ptr %14, align 8, !dbg !389
  %42446 = load double, ptr %13, align 8, !dbg !390
  %42447 = fsub double %42446, 0x400921FB54442D18, !dbg !392
  %42448 = call double @llvm.fabs.f64(double %42447), !dbg !393
  %42449 = fcmp ole double %42448, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42449, label %14330, label %42450, !dbg !395

42450:                                            ; preds = %42373
  %42451 = load double, ptr %13, align 8, !dbg !396
  %42452 = fadd double %42451, 0x400921FB54442D18, !dbg !397
  %42453 = call double @llvm.fabs.f64(double %42452), !dbg !398
  %42454 = fcmp ole double %42453, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42454, label %14330, label %42455, !dbg !400

42455:                                            ; preds = %42450
  br label %42456, !dbg !403

42456:                                            ; preds = %42455
  %42457 = load i32, ptr %10, align 4, !dbg !404
  %42458 = add nsw i32 %42457, 1, !dbg !404
  store i32 %42458, ptr %10, align 4, !dbg !404
  %42459 = load i32, ptr %10, align 4, !dbg !364
  %42460 = load i32, ptr %8, align 4, !dbg !366
  %42461 = icmp slt i32 %42459, %42460, !dbg !367
  br i1 %42461, label %42462, label %48422, !dbg !368

42462:                                            ; preds = %42456
  %42463 = load i32, ptr %10, align 4, !dbg !369
  %42464 = sext i32 %42463 to i64, !dbg !371
  %42465 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42464, !dbg !371
  %42466 = load double, ptr %6, align 8, !dbg !372
  %42467 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42468 = load double, ptr %42467, align 8, !dbg !372
  %42469 = load double, ptr %42465, align 16, !dbg !372
  %42470 = getelementptr inbounds { double, double }, ptr %42465, i32 0, i32 1, !dbg !372
  %42471 = load double, ptr %42470, align 8, !dbg !372
  %42472 = call { double, double } @make_vec(double %42466, double %42468, double %42469, double %42471), !dbg !372
  %42473 = extractvalue { double, double } %42472, 0, !dbg !372
  store double %42473, ptr %16, align 8, !dbg !372
  %42474 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42475 = extractvalue { double, double } %42472, 1, !dbg !372
  store double %42475, ptr %42474, align 8, !dbg !372
  %42476 = load i32, ptr %10, align 4, !dbg !373
  %42477 = add nsw i32 %42476, 1, !dbg !374
  %42478 = sext i32 %42477 to i64, !dbg !375
  %42479 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42478, !dbg !375
  %42480 = load double, ptr %6, align 8, !dbg !376
  %42481 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42482 = load double, ptr %42481, align 8, !dbg !376
  %42483 = load double, ptr %42479, align 16, !dbg !376
  %42484 = getelementptr inbounds { double, double }, ptr %42479, i32 0, i32 1, !dbg !376
  %42485 = load double, ptr %42484, align 8, !dbg !376
  %42486 = call { double, double } @make_vec(double %42480, double %42482, double %42483, double %42485), !dbg !376
  %42487 = extractvalue { double, double } %42486, 0, !dbg !376
  store double %42487, ptr %17, align 8, !dbg !376
  %42488 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42489 = extractvalue { double, double } %42486, 1, !dbg !376
  store double %42489, ptr %42488, align 8, !dbg !376
  %42490 = load double, ptr %16, align 8, !dbg !377
  %42491 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42492 = load double, ptr %42491, align 8, !dbg !377
  %42493 = load double, ptr %17, align 8, !dbg !377
  %42494 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42495 = load double, ptr %42494, align 8, !dbg !377
  %42496 = call double @cross(double %42490, double %42492, double %42493, double %42495), !dbg !377
  %42497 = load i32, ptr %10, align 4, !dbg !378
  %42498 = sext i32 %42497 to i64, !dbg !379
  %42499 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42498, !dbg !379
  %42500 = load double, ptr %6, align 8, !dbg !380
  %42501 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42502 = load double, ptr %42501, align 8, !dbg !380
  %42503 = load double, ptr %42499, align 16, !dbg !380
  %42504 = getelementptr inbounds { double, double }, ptr %42499, i32 0, i32 1, !dbg !380
  %42505 = load double, ptr %42504, align 8, !dbg !380
  %42506 = call { double, double } @make_vec(double %42500, double %42502, double %42503, double %42505), !dbg !380
  %42507 = extractvalue { double, double } %42506, 0, !dbg !380
  store double %42507, ptr %18, align 8, !dbg !380
  %42508 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42509 = extractvalue { double, double } %42506, 1, !dbg !380
  store double %42509, ptr %42508, align 8, !dbg !380
  %42510 = load i32, ptr %10, align 4, !dbg !381
  %42511 = add nsw i32 %42510, 1, !dbg !382
  %42512 = sext i32 %42511 to i64, !dbg !383
  %42513 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42512, !dbg !383
  %42514 = load double, ptr %6, align 8, !dbg !384
  %42515 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42516 = load double, ptr %42515, align 8, !dbg !384
  %42517 = load double, ptr %42513, align 16, !dbg !384
  %42518 = getelementptr inbounds { double, double }, ptr %42513, i32 0, i32 1, !dbg !384
  %42519 = load double, ptr %42518, align 8, !dbg !384
  %42520 = call { double, double } @make_vec(double %42514, double %42516, double %42517, double %42519), !dbg !384
  %42521 = extractvalue { double, double } %42520, 0, !dbg !384
  store double %42521, ptr %19, align 8, !dbg !384
  %42522 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42523 = extractvalue { double, double } %42520, 1, !dbg !384
  store double %42523, ptr %42522, align 8, !dbg !384
  %42524 = load double, ptr %18, align 8, !dbg !385
  %42525 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42526 = load double, ptr %42525, align 8, !dbg !385
  %42527 = load double, ptr %19, align 8, !dbg !385
  %42528 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42529 = load double, ptr %42528, align 8, !dbg !385
  %42530 = call double @dot(double %42524, double %42526, double %42527, double %42529), !dbg !385
  %42531 = call double @atan2(double noundef %42496, double noundef %42530) #6, !dbg !386
  store double %42531, ptr %13, align 8, !dbg !387
  %42532 = load double, ptr %13, align 8, !dbg !388
  %42533 = load double, ptr %14, align 8, !dbg !389
  %42534 = fadd double %42533, %42532, !dbg !389
  store double %42534, ptr %14, align 8, !dbg !389
  %42535 = load double, ptr %13, align 8, !dbg !390
  %42536 = fsub double %42535, 0x400921FB54442D18, !dbg !392
  %42537 = call double @llvm.fabs.f64(double %42536), !dbg !393
  %42538 = fcmp ole double %42537, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42538, label %14330, label %42539, !dbg !395

42539:                                            ; preds = %42462
  %42540 = load double, ptr %13, align 8, !dbg !396
  %42541 = fadd double %42540, 0x400921FB54442D18, !dbg !397
  %42542 = call double @llvm.fabs.f64(double %42541), !dbg !398
  %42543 = fcmp ole double %42542, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42543, label %14330, label %42544, !dbg !400

42544:                                            ; preds = %42539
  br label %42545, !dbg !403

42545:                                            ; preds = %42544
  %42546 = load i32, ptr %10, align 4, !dbg !404
  %42547 = add nsw i32 %42546, 1, !dbg !404
  store i32 %42547, ptr %10, align 4, !dbg !404
  %42548 = load i32, ptr %10, align 4, !dbg !364
  %42549 = load i32, ptr %8, align 4, !dbg !366
  %42550 = icmp slt i32 %42548, %42549, !dbg !367
  br i1 %42550, label %42551, label %48422, !dbg !368

42551:                                            ; preds = %42545
  %42552 = load i32, ptr %10, align 4, !dbg !369
  %42553 = sext i32 %42552 to i64, !dbg !371
  %42554 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42553, !dbg !371
  %42555 = load double, ptr %6, align 8, !dbg !372
  %42556 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42557 = load double, ptr %42556, align 8, !dbg !372
  %42558 = load double, ptr %42554, align 16, !dbg !372
  %42559 = getelementptr inbounds { double, double }, ptr %42554, i32 0, i32 1, !dbg !372
  %42560 = load double, ptr %42559, align 8, !dbg !372
  %42561 = call { double, double } @make_vec(double %42555, double %42557, double %42558, double %42560), !dbg !372
  %42562 = extractvalue { double, double } %42561, 0, !dbg !372
  store double %42562, ptr %16, align 8, !dbg !372
  %42563 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42564 = extractvalue { double, double } %42561, 1, !dbg !372
  store double %42564, ptr %42563, align 8, !dbg !372
  %42565 = load i32, ptr %10, align 4, !dbg !373
  %42566 = add nsw i32 %42565, 1, !dbg !374
  %42567 = sext i32 %42566 to i64, !dbg !375
  %42568 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42567, !dbg !375
  %42569 = load double, ptr %6, align 8, !dbg !376
  %42570 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42571 = load double, ptr %42570, align 8, !dbg !376
  %42572 = load double, ptr %42568, align 16, !dbg !376
  %42573 = getelementptr inbounds { double, double }, ptr %42568, i32 0, i32 1, !dbg !376
  %42574 = load double, ptr %42573, align 8, !dbg !376
  %42575 = call { double, double } @make_vec(double %42569, double %42571, double %42572, double %42574), !dbg !376
  %42576 = extractvalue { double, double } %42575, 0, !dbg !376
  store double %42576, ptr %17, align 8, !dbg !376
  %42577 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42578 = extractvalue { double, double } %42575, 1, !dbg !376
  store double %42578, ptr %42577, align 8, !dbg !376
  %42579 = load double, ptr %16, align 8, !dbg !377
  %42580 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42581 = load double, ptr %42580, align 8, !dbg !377
  %42582 = load double, ptr %17, align 8, !dbg !377
  %42583 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42584 = load double, ptr %42583, align 8, !dbg !377
  %42585 = call double @cross(double %42579, double %42581, double %42582, double %42584), !dbg !377
  %42586 = load i32, ptr %10, align 4, !dbg !378
  %42587 = sext i32 %42586 to i64, !dbg !379
  %42588 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42587, !dbg !379
  %42589 = load double, ptr %6, align 8, !dbg !380
  %42590 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42591 = load double, ptr %42590, align 8, !dbg !380
  %42592 = load double, ptr %42588, align 16, !dbg !380
  %42593 = getelementptr inbounds { double, double }, ptr %42588, i32 0, i32 1, !dbg !380
  %42594 = load double, ptr %42593, align 8, !dbg !380
  %42595 = call { double, double } @make_vec(double %42589, double %42591, double %42592, double %42594), !dbg !380
  %42596 = extractvalue { double, double } %42595, 0, !dbg !380
  store double %42596, ptr %18, align 8, !dbg !380
  %42597 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42598 = extractvalue { double, double } %42595, 1, !dbg !380
  store double %42598, ptr %42597, align 8, !dbg !380
  %42599 = load i32, ptr %10, align 4, !dbg !381
  %42600 = add nsw i32 %42599, 1, !dbg !382
  %42601 = sext i32 %42600 to i64, !dbg !383
  %42602 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42601, !dbg !383
  %42603 = load double, ptr %6, align 8, !dbg !384
  %42604 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42605 = load double, ptr %42604, align 8, !dbg !384
  %42606 = load double, ptr %42602, align 16, !dbg !384
  %42607 = getelementptr inbounds { double, double }, ptr %42602, i32 0, i32 1, !dbg !384
  %42608 = load double, ptr %42607, align 8, !dbg !384
  %42609 = call { double, double } @make_vec(double %42603, double %42605, double %42606, double %42608), !dbg !384
  %42610 = extractvalue { double, double } %42609, 0, !dbg !384
  store double %42610, ptr %19, align 8, !dbg !384
  %42611 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42612 = extractvalue { double, double } %42609, 1, !dbg !384
  store double %42612, ptr %42611, align 8, !dbg !384
  %42613 = load double, ptr %18, align 8, !dbg !385
  %42614 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42615 = load double, ptr %42614, align 8, !dbg !385
  %42616 = load double, ptr %19, align 8, !dbg !385
  %42617 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42618 = load double, ptr %42617, align 8, !dbg !385
  %42619 = call double @dot(double %42613, double %42615, double %42616, double %42618), !dbg !385
  %42620 = call double @atan2(double noundef %42585, double noundef %42619) #6, !dbg !386
  store double %42620, ptr %13, align 8, !dbg !387
  %42621 = load double, ptr %13, align 8, !dbg !388
  %42622 = load double, ptr %14, align 8, !dbg !389
  %42623 = fadd double %42622, %42621, !dbg !389
  store double %42623, ptr %14, align 8, !dbg !389
  %42624 = load double, ptr %13, align 8, !dbg !390
  %42625 = fsub double %42624, 0x400921FB54442D18, !dbg !392
  %42626 = call double @llvm.fabs.f64(double %42625), !dbg !393
  %42627 = fcmp ole double %42626, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42627, label %14330, label %42628, !dbg !395

42628:                                            ; preds = %42551
  %42629 = load double, ptr %13, align 8, !dbg !396
  %42630 = fadd double %42629, 0x400921FB54442D18, !dbg !397
  %42631 = call double @llvm.fabs.f64(double %42630), !dbg !398
  %42632 = fcmp ole double %42631, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42632, label %14330, label %42633, !dbg !400

42633:                                            ; preds = %42628
  br label %42634, !dbg !403

42634:                                            ; preds = %42633
  %42635 = load i32, ptr %10, align 4, !dbg !404
  %42636 = add nsw i32 %42635, 1, !dbg !404
  store i32 %42636, ptr %10, align 4, !dbg !404
  %42637 = load i32, ptr %10, align 4, !dbg !364
  %42638 = load i32, ptr %8, align 4, !dbg !366
  %42639 = icmp slt i32 %42637, %42638, !dbg !367
  br i1 %42639, label %42640, label %48422, !dbg !368

42640:                                            ; preds = %42634
  %42641 = load i32, ptr %10, align 4, !dbg !369
  %42642 = sext i32 %42641 to i64, !dbg !371
  %42643 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42642, !dbg !371
  %42644 = load double, ptr %6, align 8, !dbg !372
  %42645 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42646 = load double, ptr %42645, align 8, !dbg !372
  %42647 = load double, ptr %42643, align 16, !dbg !372
  %42648 = getelementptr inbounds { double, double }, ptr %42643, i32 0, i32 1, !dbg !372
  %42649 = load double, ptr %42648, align 8, !dbg !372
  %42650 = call { double, double } @make_vec(double %42644, double %42646, double %42647, double %42649), !dbg !372
  %42651 = extractvalue { double, double } %42650, 0, !dbg !372
  store double %42651, ptr %16, align 8, !dbg !372
  %42652 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42653 = extractvalue { double, double } %42650, 1, !dbg !372
  store double %42653, ptr %42652, align 8, !dbg !372
  %42654 = load i32, ptr %10, align 4, !dbg !373
  %42655 = add nsw i32 %42654, 1, !dbg !374
  %42656 = sext i32 %42655 to i64, !dbg !375
  %42657 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42656, !dbg !375
  %42658 = load double, ptr %6, align 8, !dbg !376
  %42659 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42660 = load double, ptr %42659, align 8, !dbg !376
  %42661 = load double, ptr %42657, align 16, !dbg !376
  %42662 = getelementptr inbounds { double, double }, ptr %42657, i32 0, i32 1, !dbg !376
  %42663 = load double, ptr %42662, align 8, !dbg !376
  %42664 = call { double, double } @make_vec(double %42658, double %42660, double %42661, double %42663), !dbg !376
  %42665 = extractvalue { double, double } %42664, 0, !dbg !376
  store double %42665, ptr %17, align 8, !dbg !376
  %42666 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42667 = extractvalue { double, double } %42664, 1, !dbg !376
  store double %42667, ptr %42666, align 8, !dbg !376
  %42668 = load double, ptr %16, align 8, !dbg !377
  %42669 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42670 = load double, ptr %42669, align 8, !dbg !377
  %42671 = load double, ptr %17, align 8, !dbg !377
  %42672 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42673 = load double, ptr %42672, align 8, !dbg !377
  %42674 = call double @cross(double %42668, double %42670, double %42671, double %42673), !dbg !377
  %42675 = load i32, ptr %10, align 4, !dbg !378
  %42676 = sext i32 %42675 to i64, !dbg !379
  %42677 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42676, !dbg !379
  %42678 = load double, ptr %6, align 8, !dbg !380
  %42679 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42680 = load double, ptr %42679, align 8, !dbg !380
  %42681 = load double, ptr %42677, align 16, !dbg !380
  %42682 = getelementptr inbounds { double, double }, ptr %42677, i32 0, i32 1, !dbg !380
  %42683 = load double, ptr %42682, align 8, !dbg !380
  %42684 = call { double, double } @make_vec(double %42678, double %42680, double %42681, double %42683), !dbg !380
  %42685 = extractvalue { double, double } %42684, 0, !dbg !380
  store double %42685, ptr %18, align 8, !dbg !380
  %42686 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42687 = extractvalue { double, double } %42684, 1, !dbg !380
  store double %42687, ptr %42686, align 8, !dbg !380
  %42688 = load i32, ptr %10, align 4, !dbg !381
  %42689 = add nsw i32 %42688, 1, !dbg !382
  %42690 = sext i32 %42689 to i64, !dbg !383
  %42691 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42690, !dbg !383
  %42692 = load double, ptr %6, align 8, !dbg !384
  %42693 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42694 = load double, ptr %42693, align 8, !dbg !384
  %42695 = load double, ptr %42691, align 16, !dbg !384
  %42696 = getelementptr inbounds { double, double }, ptr %42691, i32 0, i32 1, !dbg !384
  %42697 = load double, ptr %42696, align 8, !dbg !384
  %42698 = call { double, double } @make_vec(double %42692, double %42694, double %42695, double %42697), !dbg !384
  %42699 = extractvalue { double, double } %42698, 0, !dbg !384
  store double %42699, ptr %19, align 8, !dbg !384
  %42700 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42701 = extractvalue { double, double } %42698, 1, !dbg !384
  store double %42701, ptr %42700, align 8, !dbg !384
  %42702 = load double, ptr %18, align 8, !dbg !385
  %42703 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42704 = load double, ptr %42703, align 8, !dbg !385
  %42705 = load double, ptr %19, align 8, !dbg !385
  %42706 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42707 = load double, ptr %42706, align 8, !dbg !385
  %42708 = call double @dot(double %42702, double %42704, double %42705, double %42707), !dbg !385
  %42709 = call double @atan2(double noundef %42674, double noundef %42708) #6, !dbg !386
  store double %42709, ptr %13, align 8, !dbg !387
  %42710 = load double, ptr %13, align 8, !dbg !388
  %42711 = load double, ptr %14, align 8, !dbg !389
  %42712 = fadd double %42711, %42710, !dbg !389
  store double %42712, ptr %14, align 8, !dbg !389
  %42713 = load double, ptr %13, align 8, !dbg !390
  %42714 = fsub double %42713, 0x400921FB54442D18, !dbg !392
  %42715 = call double @llvm.fabs.f64(double %42714), !dbg !393
  %42716 = fcmp ole double %42715, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42716, label %14330, label %42717, !dbg !395

42717:                                            ; preds = %42640
  %42718 = load double, ptr %13, align 8, !dbg !396
  %42719 = fadd double %42718, 0x400921FB54442D18, !dbg !397
  %42720 = call double @llvm.fabs.f64(double %42719), !dbg !398
  %42721 = fcmp ole double %42720, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42721, label %14330, label %42722, !dbg !400

42722:                                            ; preds = %42717
  br label %42723, !dbg !403

42723:                                            ; preds = %42722
  %42724 = load i32, ptr %10, align 4, !dbg !404
  %42725 = add nsw i32 %42724, 1, !dbg !404
  store i32 %42725, ptr %10, align 4, !dbg !404
  %42726 = load i32, ptr %10, align 4, !dbg !364
  %42727 = load i32, ptr %8, align 4, !dbg !366
  %42728 = icmp slt i32 %42726, %42727, !dbg !367
  br i1 %42728, label %42729, label %48422, !dbg !368

42729:                                            ; preds = %42723
  %42730 = load i32, ptr %10, align 4, !dbg !369
  %42731 = sext i32 %42730 to i64, !dbg !371
  %42732 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42731, !dbg !371
  %42733 = load double, ptr %6, align 8, !dbg !372
  %42734 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42735 = load double, ptr %42734, align 8, !dbg !372
  %42736 = load double, ptr %42732, align 16, !dbg !372
  %42737 = getelementptr inbounds { double, double }, ptr %42732, i32 0, i32 1, !dbg !372
  %42738 = load double, ptr %42737, align 8, !dbg !372
  %42739 = call { double, double } @make_vec(double %42733, double %42735, double %42736, double %42738), !dbg !372
  %42740 = extractvalue { double, double } %42739, 0, !dbg !372
  store double %42740, ptr %16, align 8, !dbg !372
  %42741 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42742 = extractvalue { double, double } %42739, 1, !dbg !372
  store double %42742, ptr %42741, align 8, !dbg !372
  %42743 = load i32, ptr %10, align 4, !dbg !373
  %42744 = add nsw i32 %42743, 1, !dbg !374
  %42745 = sext i32 %42744 to i64, !dbg !375
  %42746 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42745, !dbg !375
  %42747 = load double, ptr %6, align 8, !dbg !376
  %42748 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42749 = load double, ptr %42748, align 8, !dbg !376
  %42750 = load double, ptr %42746, align 16, !dbg !376
  %42751 = getelementptr inbounds { double, double }, ptr %42746, i32 0, i32 1, !dbg !376
  %42752 = load double, ptr %42751, align 8, !dbg !376
  %42753 = call { double, double } @make_vec(double %42747, double %42749, double %42750, double %42752), !dbg !376
  %42754 = extractvalue { double, double } %42753, 0, !dbg !376
  store double %42754, ptr %17, align 8, !dbg !376
  %42755 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42756 = extractvalue { double, double } %42753, 1, !dbg !376
  store double %42756, ptr %42755, align 8, !dbg !376
  %42757 = load double, ptr %16, align 8, !dbg !377
  %42758 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42759 = load double, ptr %42758, align 8, !dbg !377
  %42760 = load double, ptr %17, align 8, !dbg !377
  %42761 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42762 = load double, ptr %42761, align 8, !dbg !377
  %42763 = call double @cross(double %42757, double %42759, double %42760, double %42762), !dbg !377
  %42764 = load i32, ptr %10, align 4, !dbg !378
  %42765 = sext i32 %42764 to i64, !dbg !379
  %42766 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42765, !dbg !379
  %42767 = load double, ptr %6, align 8, !dbg !380
  %42768 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42769 = load double, ptr %42768, align 8, !dbg !380
  %42770 = load double, ptr %42766, align 16, !dbg !380
  %42771 = getelementptr inbounds { double, double }, ptr %42766, i32 0, i32 1, !dbg !380
  %42772 = load double, ptr %42771, align 8, !dbg !380
  %42773 = call { double, double } @make_vec(double %42767, double %42769, double %42770, double %42772), !dbg !380
  %42774 = extractvalue { double, double } %42773, 0, !dbg !380
  store double %42774, ptr %18, align 8, !dbg !380
  %42775 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42776 = extractvalue { double, double } %42773, 1, !dbg !380
  store double %42776, ptr %42775, align 8, !dbg !380
  %42777 = load i32, ptr %10, align 4, !dbg !381
  %42778 = add nsw i32 %42777, 1, !dbg !382
  %42779 = sext i32 %42778 to i64, !dbg !383
  %42780 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42779, !dbg !383
  %42781 = load double, ptr %6, align 8, !dbg !384
  %42782 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42783 = load double, ptr %42782, align 8, !dbg !384
  %42784 = load double, ptr %42780, align 16, !dbg !384
  %42785 = getelementptr inbounds { double, double }, ptr %42780, i32 0, i32 1, !dbg !384
  %42786 = load double, ptr %42785, align 8, !dbg !384
  %42787 = call { double, double } @make_vec(double %42781, double %42783, double %42784, double %42786), !dbg !384
  %42788 = extractvalue { double, double } %42787, 0, !dbg !384
  store double %42788, ptr %19, align 8, !dbg !384
  %42789 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42790 = extractvalue { double, double } %42787, 1, !dbg !384
  store double %42790, ptr %42789, align 8, !dbg !384
  %42791 = load double, ptr %18, align 8, !dbg !385
  %42792 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42793 = load double, ptr %42792, align 8, !dbg !385
  %42794 = load double, ptr %19, align 8, !dbg !385
  %42795 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42796 = load double, ptr %42795, align 8, !dbg !385
  %42797 = call double @dot(double %42791, double %42793, double %42794, double %42796), !dbg !385
  %42798 = call double @atan2(double noundef %42763, double noundef %42797) #6, !dbg !386
  store double %42798, ptr %13, align 8, !dbg !387
  %42799 = load double, ptr %13, align 8, !dbg !388
  %42800 = load double, ptr %14, align 8, !dbg !389
  %42801 = fadd double %42800, %42799, !dbg !389
  store double %42801, ptr %14, align 8, !dbg !389
  %42802 = load double, ptr %13, align 8, !dbg !390
  %42803 = fsub double %42802, 0x400921FB54442D18, !dbg !392
  %42804 = call double @llvm.fabs.f64(double %42803), !dbg !393
  %42805 = fcmp ole double %42804, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42805, label %14330, label %42806, !dbg !395

42806:                                            ; preds = %42729
  %42807 = load double, ptr %13, align 8, !dbg !396
  %42808 = fadd double %42807, 0x400921FB54442D18, !dbg !397
  %42809 = call double @llvm.fabs.f64(double %42808), !dbg !398
  %42810 = fcmp ole double %42809, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42810, label %14330, label %42811, !dbg !400

42811:                                            ; preds = %42806
  br label %42812, !dbg !403

42812:                                            ; preds = %42811
  %42813 = load i32, ptr %10, align 4, !dbg !404
  %42814 = add nsw i32 %42813, 1, !dbg !404
  store i32 %42814, ptr %10, align 4, !dbg !404
  %42815 = load i32, ptr %10, align 4, !dbg !364
  %42816 = load i32, ptr %8, align 4, !dbg !366
  %42817 = icmp slt i32 %42815, %42816, !dbg !367
  br i1 %42817, label %42818, label %48422, !dbg !368

42818:                                            ; preds = %42812
  %42819 = load i32, ptr %10, align 4, !dbg !369
  %42820 = sext i32 %42819 to i64, !dbg !371
  %42821 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42820, !dbg !371
  %42822 = load double, ptr %6, align 8, !dbg !372
  %42823 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42824 = load double, ptr %42823, align 8, !dbg !372
  %42825 = load double, ptr %42821, align 16, !dbg !372
  %42826 = getelementptr inbounds { double, double }, ptr %42821, i32 0, i32 1, !dbg !372
  %42827 = load double, ptr %42826, align 8, !dbg !372
  %42828 = call { double, double } @make_vec(double %42822, double %42824, double %42825, double %42827), !dbg !372
  %42829 = extractvalue { double, double } %42828, 0, !dbg !372
  store double %42829, ptr %16, align 8, !dbg !372
  %42830 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42831 = extractvalue { double, double } %42828, 1, !dbg !372
  store double %42831, ptr %42830, align 8, !dbg !372
  %42832 = load i32, ptr %10, align 4, !dbg !373
  %42833 = add nsw i32 %42832, 1, !dbg !374
  %42834 = sext i32 %42833 to i64, !dbg !375
  %42835 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42834, !dbg !375
  %42836 = load double, ptr %6, align 8, !dbg !376
  %42837 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42838 = load double, ptr %42837, align 8, !dbg !376
  %42839 = load double, ptr %42835, align 16, !dbg !376
  %42840 = getelementptr inbounds { double, double }, ptr %42835, i32 0, i32 1, !dbg !376
  %42841 = load double, ptr %42840, align 8, !dbg !376
  %42842 = call { double, double } @make_vec(double %42836, double %42838, double %42839, double %42841), !dbg !376
  %42843 = extractvalue { double, double } %42842, 0, !dbg !376
  store double %42843, ptr %17, align 8, !dbg !376
  %42844 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42845 = extractvalue { double, double } %42842, 1, !dbg !376
  store double %42845, ptr %42844, align 8, !dbg !376
  %42846 = load double, ptr %16, align 8, !dbg !377
  %42847 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42848 = load double, ptr %42847, align 8, !dbg !377
  %42849 = load double, ptr %17, align 8, !dbg !377
  %42850 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42851 = load double, ptr %42850, align 8, !dbg !377
  %42852 = call double @cross(double %42846, double %42848, double %42849, double %42851), !dbg !377
  %42853 = load i32, ptr %10, align 4, !dbg !378
  %42854 = sext i32 %42853 to i64, !dbg !379
  %42855 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42854, !dbg !379
  %42856 = load double, ptr %6, align 8, !dbg !380
  %42857 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42858 = load double, ptr %42857, align 8, !dbg !380
  %42859 = load double, ptr %42855, align 16, !dbg !380
  %42860 = getelementptr inbounds { double, double }, ptr %42855, i32 0, i32 1, !dbg !380
  %42861 = load double, ptr %42860, align 8, !dbg !380
  %42862 = call { double, double } @make_vec(double %42856, double %42858, double %42859, double %42861), !dbg !380
  %42863 = extractvalue { double, double } %42862, 0, !dbg !380
  store double %42863, ptr %18, align 8, !dbg !380
  %42864 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42865 = extractvalue { double, double } %42862, 1, !dbg !380
  store double %42865, ptr %42864, align 8, !dbg !380
  %42866 = load i32, ptr %10, align 4, !dbg !381
  %42867 = add nsw i32 %42866, 1, !dbg !382
  %42868 = sext i32 %42867 to i64, !dbg !383
  %42869 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42868, !dbg !383
  %42870 = load double, ptr %6, align 8, !dbg !384
  %42871 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42872 = load double, ptr %42871, align 8, !dbg !384
  %42873 = load double, ptr %42869, align 16, !dbg !384
  %42874 = getelementptr inbounds { double, double }, ptr %42869, i32 0, i32 1, !dbg !384
  %42875 = load double, ptr %42874, align 8, !dbg !384
  %42876 = call { double, double } @make_vec(double %42870, double %42872, double %42873, double %42875), !dbg !384
  %42877 = extractvalue { double, double } %42876, 0, !dbg !384
  store double %42877, ptr %19, align 8, !dbg !384
  %42878 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42879 = extractvalue { double, double } %42876, 1, !dbg !384
  store double %42879, ptr %42878, align 8, !dbg !384
  %42880 = load double, ptr %18, align 8, !dbg !385
  %42881 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42882 = load double, ptr %42881, align 8, !dbg !385
  %42883 = load double, ptr %19, align 8, !dbg !385
  %42884 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42885 = load double, ptr %42884, align 8, !dbg !385
  %42886 = call double @dot(double %42880, double %42882, double %42883, double %42885), !dbg !385
  %42887 = call double @atan2(double noundef %42852, double noundef %42886) #6, !dbg !386
  store double %42887, ptr %13, align 8, !dbg !387
  %42888 = load double, ptr %13, align 8, !dbg !388
  %42889 = load double, ptr %14, align 8, !dbg !389
  %42890 = fadd double %42889, %42888, !dbg !389
  store double %42890, ptr %14, align 8, !dbg !389
  %42891 = load double, ptr %13, align 8, !dbg !390
  %42892 = fsub double %42891, 0x400921FB54442D18, !dbg !392
  %42893 = call double @llvm.fabs.f64(double %42892), !dbg !393
  %42894 = fcmp ole double %42893, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42894, label %14330, label %42895, !dbg !395

42895:                                            ; preds = %42818
  %42896 = load double, ptr %13, align 8, !dbg !396
  %42897 = fadd double %42896, 0x400921FB54442D18, !dbg !397
  %42898 = call double @llvm.fabs.f64(double %42897), !dbg !398
  %42899 = fcmp ole double %42898, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42899, label %14330, label %42900, !dbg !400

42900:                                            ; preds = %42895
  br label %42901, !dbg !403

42901:                                            ; preds = %42900
  %42902 = load i32, ptr %10, align 4, !dbg !404
  %42903 = add nsw i32 %42902, 1, !dbg !404
  store i32 %42903, ptr %10, align 4, !dbg !404
  %42904 = load i32, ptr %10, align 4, !dbg !364
  %42905 = load i32, ptr %8, align 4, !dbg !366
  %42906 = icmp slt i32 %42904, %42905, !dbg !367
  br i1 %42906, label %42907, label %48422, !dbg !368

42907:                                            ; preds = %42901
  %42908 = load i32, ptr %10, align 4, !dbg !369
  %42909 = sext i32 %42908 to i64, !dbg !371
  %42910 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42909, !dbg !371
  %42911 = load double, ptr %6, align 8, !dbg !372
  %42912 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %42913 = load double, ptr %42912, align 8, !dbg !372
  %42914 = load double, ptr %42910, align 16, !dbg !372
  %42915 = getelementptr inbounds { double, double }, ptr %42910, i32 0, i32 1, !dbg !372
  %42916 = load double, ptr %42915, align 8, !dbg !372
  %42917 = call { double, double } @make_vec(double %42911, double %42913, double %42914, double %42916), !dbg !372
  %42918 = extractvalue { double, double } %42917, 0, !dbg !372
  store double %42918, ptr %16, align 8, !dbg !372
  %42919 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %42920 = extractvalue { double, double } %42917, 1, !dbg !372
  store double %42920, ptr %42919, align 8, !dbg !372
  %42921 = load i32, ptr %10, align 4, !dbg !373
  %42922 = add nsw i32 %42921, 1, !dbg !374
  %42923 = sext i32 %42922 to i64, !dbg !375
  %42924 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42923, !dbg !375
  %42925 = load double, ptr %6, align 8, !dbg !376
  %42926 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %42927 = load double, ptr %42926, align 8, !dbg !376
  %42928 = load double, ptr %42924, align 16, !dbg !376
  %42929 = getelementptr inbounds { double, double }, ptr %42924, i32 0, i32 1, !dbg !376
  %42930 = load double, ptr %42929, align 8, !dbg !376
  %42931 = call { double, double } @make_vec(double %42925, double %42927, double %42928, double %42930), !dbg !376
  %42932 = extractvalue { double, double } %42931, 0, !dbg !376
  store double %42932, ptr %17, align 8, !dbg !376
  %42933 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %42934 = extractvalue { double, double } %42931, 1, !dbg !376
  store double %42934, ptr %42933, align 8, !dbg !376
  %42935 = load double, ptr %16, align 8, !dbg !377
  %42936 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %42937 = load double, ptr %42936, align 8, !dbg !377
  %42938 = load double, ptr %17, align 8, !dbg !377
  %42939 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %42940 = load double, ptr %42939, align 8, !dbg !377
  %42941 = call double @cross(double %42935, double %42937, double %42938, double %42940), !dbg !377
  %42942 = load i32, ptr %10, align 4, !dbg !378
  %42943 = sext i32 %42942 to i64, !dbg !379
  %42944 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42943, !dbg !379
  %42945 = load double, ptr %6, align 8, !dbg !380
  %42946 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %42947 = load double, ptr %42946, align 8, !dbg !380
  %42948 = load double, ptr %42944, align 16, !dbg !380
  %42949 = getelementptr inbounds { double, double }, ptr %42944, i32 0, i32 1, !dbg !380
  %42950 = load double, ptr %42949, align 8, !dbg !380
  %42951 = call { double, double } @make_vec(double %42945, double %42947, double %42948, double %42950), !dbg !380
  %42952 = extractvalue { double, double } %42951, 0, !dbg !380
  store double %42952, ptr %18, align 8, !dbg !380
  %42953 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %42954 = extractvalue { double, double } %42951, 1, !dbg !380
  store double %42954, ptr %42953, align 8, !dbg !380
  %42955 = load i32, ptr %10, align 4, !dbg !381
  %42956 = add nsw i32 %42955, 1, !dbg !382
  %42957 = sext i32 %42956 to i64, !dbg !383
  %42958 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42957, !dbg !383
  %42959 = load double, ptr %6, align 8, !dbg !384
  %42960 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %42961 = load double, ptr %42960, align 8, !dbg !384
  %42962 = load double, ptr %42958, align 16, !dbg !384
  %42963 = getelementptr inbounds { double, double }, ptr %42958, i32 0, i32 1, !dbg !384
  %42964 = load double, ptr %42963, align 8, !dbg !384
  %42965 = call { double, double } @make_vec(double %42959, double %42961, double %42962, double %42964), !dbg !384
  %42966 = extractvalue { double, double } %42965, 0, !dbg !384
  store double %42966, ptr %19, align 8, !dbg !384
  %42967 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %42968 = extractvalue { double, double } %42965, 1, !dbg !384
  store double %42968, ptr %42967, align 8, !dbg !384
  %42969 = load double, ptr %18, align 8, !dbg !385
  %42970 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %42971 = load double, ptr %42970, align 8, !dbg !385
  %42972 = load double, ptr %19, align 8, !dbg !385
  %42973 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %42974 = load double, ptr %42973, align 8, !dbg !385
  %42975 = call double @dot(double %42969, double %42971, double %42972, double %42974), !dbg !385
  %42976 = call double @atan2(double noundef %42941, double noundef %42975) #6, !dbg !386
  store double %42976, ptr %13, align 8, !dbg !387
  %42977 = load double, ptr %13, align 8, !dbg !388
  %42978 = load double, ptr %14, align 8, !dbg !389
  %42979 = fadd double %42978, %42977, !dbg !389
  store double %42979, ptr %14, align 8, !dbg !389
  %42980 = load double, ptr %13, align 8, !dbg !390
  %42981 = fsub double %42980, 0x400921FB54442D18, !dbg !392
  %42982 = call double @llvm.fabs.f64(double %42981), !dbg !393
  %42983 = fcmp ole double %42982, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %42983, label %14330, label %42984, !dbg !395

42984:                                            ; preds = %42907
  %42985 = load double, ptr %13, align 8, !dbg !396
  %42986 = fadd double %42985, 0x400921FB54442D18, !dbg !397
  %42987 = call double @llvm.fabs.f64(double %42986), !dbg !398
  %42988 = fcmp ole double %42987, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %42988, label %14330, label %42989, !dbg !400

42989:                                            ; preds = %42984
  br label %42990, !dbg !403

42990:                                            ; preds = %42989
  %42991 = load i32, ptr %10, align 4, !dbg !404
  %42992 = add nsw i32 %42991, 1, !dbg !404
  store i32 %42992, ptr %10, align 4, !dbg !404
  %42993 = load i32, ptr %10, align 4, !dbg !364
  %42994 = load i32, ptr %8, align 4, !dbg !366
  %42995 = icmp slt i32 %42993, %42994, !dbg !367
  br i1 %42995, label %42996, label %48422, !dbg !368

42996:                                            ; preds = %42990
  %42997 = load i32, ptr %10, align 4, !dbg !369
  %42998 = sext i32 %42997 to i64, !dbg !371
  %42999 = getelementptr inbounds %struct.POINT, ptr %26, i64 %42998, !dbg !371
  %43000 = load double, ptr %6, align 8, !dbg !372
  %43001 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43002 = load double, ptr %43001, align 8, !dbg !372
  %43003 = load double, ptr %42999, align 16, !dbg !372
  %43004 = getelementptr inbounds { double, double }, ptr %42999, i32 0, i32 1, !dbg !372
  %43005 = load double, ptr %43004, align 8, !dbg !372
  %43006 = call { double, double } @make_vec(double %43000, double %43002, double %43003, double %43005), !dbg !372
  %43007 = extractvalue { double, double } %43006, 0, !dbg !372
  store double %43007, ptr %16, align 8, !dbg !372
  %43008 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43009 = extractvalue { double, double } %43006, 1, !dbg !372
  store double %43009, ptr %43008, align 8, !dbg !372
  %43010 = load i32, ptr %10, align 4, !dbg !373
  %43011 = add nsw i32 %43010, 1, !dbg !374
  %43012 = sext i32 %43011 to i64, !dbg !375
  %43013 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43012, !dbg !375
  %43014 = load double, ptr %6, align 8, !dbg !376
  %43015 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43016 = load double, ptr %43015, align 8, !dbg !376
  %43017 = load double, ptr %43013, align 16, !dbg !376
  %43018 = getelementptr inbounds { double, double }, ptr %43013, i32 0, i32 1, !dbg !376
  %43019 = load double, ptr %43018, align 8, !dbg !376
  %43020 = call { double, double } @make_vec(double %43014, double %43016, double %43017, double %43019), !dbg !376
  %43021 = extractvalue { double, double } %43020, 0, !dbg !376
  store double %43021, ptr %17, align 8, !dbg !376
  %43022 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43023 = extractvalue { double, double } %43020, 1, !dbg !376
  store double %43023, ptr %43022, align 8, !dbg !376
  %43024 = load double, ptr %16, align 8, !dbg !377
  %43025 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43026 = load double, ptr %43025, align 8, !dbg !377
  %43027 = load double, ptr %17, align 8, !dbg !377
  %43028 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43029 = load double, ptr %43028, align 8, !dbg !377
  %43030 = call double @cross(double %43024, double %43026, double %43027, double %43029), !dbg !377
  %43031 = load i32, ptr %10, align 4, !dbg !378
  %43032 = sext i32 %43031 to i64, !dbg !379
  %43033 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43032, !dbg !379
  %43034 = load double, ptr %6, align 8, !dbg !380
  %43035 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43036 = load double, ptr %43035, align 8, !dbg !380
  %43037 = load double, ptr %43033, align 16, !dbg !380
  %43038 = getelementptr inbounds { double, double }, ptr %43033, i32 0, i32 1, !dbg !380
  %43039 = load double, ptr %43038, align 8, !dbg !380
  %43040 = call { double, double } @make_vec(double %43034, double %43036, double %43037, double %43039), !dbg !380
  %43041 = extractvalue { double, double } %43040, 0, !dbg !380
  store double %43041, ptr %18, align 8, !dbg !380
  %43042 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43043 = extractvalue { double, double } %43040, 1, !dbg !380
  store double %43043, ptr %43042, align 8, !dbg !380
  %43044 = load i32, ptr %10, align 4, !dbg !381
  %43045 = add nsw i32 %43044, 1, !dbg !382
  %43046 = sext i32 %43045 to i64, !dbg !383
  %43047 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43046, !dbg !383
  %43048 = load double, ptr %6, align 8, !dbg !384
  %43049 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43050 = load double, ptr %43049, align 8, !dbg !384
  %43051 = load double, ptr %43047, align 16, !dbg !384
  %43052 = getelementptr inbounds { double, double }, ptr %43047, i32 0, i32 1, !dbg !384
  %43053 = load double, ptr %43052, align 8, !dbg !384
  %43054 = call { double, double } @make_vec(double %43048, double %43050, double %43051, double %43053), !dbg !384
  %43055 = extractvalue { double, double } %43054, 0, !dbg !384
  store double %43055, ptr %19, align 8, !dbg !384
  %43056 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43057 = extractvalue { double, double } %43054, 1, !dbg !384
  store double %43057, ptr %43056, align 8, !dbg !384
  %43058 = load double, ptr %18, align 8, !dbg !385
  %43059 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43060 = load double, ptr %43059, align 8, !dbg !385
  %43061 = load double, ptr %19, align 8, !dbg !385
  %43062 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43063 = load double, ptr %43062, align 8, !dbg !385
  %43064 = call double @dot(double %43058, double %43060, double %43061, double %43063), !dbg !385
  %43065 = call double @atan2(double noundef %43030, double noundef %43064) #6, !dbg !386
  store double %43065, ptr %13, align 8, !dbg !387
  %43066 = load double, ptr %13, align 8, !dbg !388
  %43067 = load double, ptr %14, align 8, !dbg !389
  %43068 = fadd double %43067, %43066, !dbg !389
  store double %43068, ptr %14, align 8, !dbg !389
  %43069 = load double, ptr %13, align 8, !dbg !390
  %43070 = fsub double %43069, 0x400921FB54442D18, !dbg !392
  %43071 = call double @llvm.fabs.f64(double %43070), !dbg !393
  %43072 = fcmp ole double %43071, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43072, label %14330, label %43073, !dbg !395

43073:                                            ; preds = %42996
  %43074 = load double, ptr %13, align 8, !dbg !396
  %43075 = fadd double %43074, 0x400921FB54442D18, !dbg !397
  %43076 = call double @llvm.fabs.f64(double %43075), !dbg !398
  %43077 = fcmp ole double %43076, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43077, label %14330, label %43078, !dbg !400

43078:                                            ; preds = %43073
  br label %43079, !dbg !403

43079:                                            ; preds = %43078
  %43080 = load i32, ptr %10, align 4, !dbg !404
  %43081 = add nsw i32 %43080, 1, !dbg !404
  store i32 %43081, ptr %10, align 4, !dbg !404
  %43082 = load i32, ptr %10, align 4, !dbg !364
  %43083 = load i32, ptr %8, align 4, !dbg !366
  %43084 = icmp slt i32 %43082, %43083, !dbg !367
  br i1 %43084, label %43085, label %48422, !dbg !368

43085:                                            ; preds = %43079
  %43086 = load i32, ptr %10, align 4, !dbg !369
  %43087 = sext i32 %43086 to i64, !dbg !371
  %43088 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43087, !dbg !371
  %43089 = load double, ptr %6, align 8, !dbg !372
  %43090 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43091 = load double, ptr %43090, align 8, !dbg !372
  %43092 = load double, ptr %43088, align 16, !dbg !372
  %43093 = getelementptr inbounds { double, double }, ptr %43088, i32 0, i32 1, !dbg !372
  %43094 = load double, ptr %43093, align 8, !dbg !372
  %43095 = call { double, double } @make_vec(double %43089, double %43091, double %43092, double %43094), !dbg !372
  %43096 = extractvalue { double, double } %43095, 0, !dbg !372
  store double %43096, ptr %16, align 8, !dbg !372
  %43097 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43098 = extractvalue { double, double } %43095, 1, !dbg !372
  store double %43098, ptr %43097, align 8, !dbg !372
  %43099 = load i32, ptr %10, align 4, !dbg !373
  %43100 = add nsw i32 %43099, 1, !dbg !374
  %43101 = sext i32 %43100 to i64, !dbg !375
  %43102 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43101, !dbg !375
  %43103 = load double, ptr %6, align 8, !dbg !376
  %43104 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43105 = load double, ptr %43104, align 8, !dbg !376
  %43106 = load double, ptr %43102, align 16, !dbg !376
  %43107 = getelementptr inbounds { double, double }, ptr %43102, i32 0, i32 1, !dbg !376
  %43108 = load double, ptr %43107, align 8, !dbg !376
  %43109 = call { double, double } @make_vec(double %43103, double %43105, double %43106, double %43108), !dbg !376
  %43110 = extractvalue { double, double } %43109, 0, !dbg !376
  store double %43110, ptr %17, align 8, !dbg !376
  %43111 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43112 = extractvalue { double, double } %43109, 1, !dbg !376
  store double %43112, ptr %43111, align 8, !dbg !376
  %43113 = load double, ptr %16, align 8, !dbg !377
  %43114 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43115 = load double, ptr %43114, align 8, !dbg !377
  %43116 = load double, ptr %17, align 8, !dbg !377
  %43117 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43118 = load double, ptr %43117, align 8, !dbg !377
  %43119 = call double @cross(double %43113, double %43115, double %43116, double %43118), !dbg !377
  %43120 = load i32, ptr %10, align 4, !dbg !378
  %43121 = sext i32 %43120 to i64, !dbg !379
  %43122 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43121, !dbg !379
  %43123 = load double, ptr %6, align 8, !dbg !380
  %43124 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43125 = load double, ptr %43124, align 8, !dbg !380
  %43126 = load double, ptr %43122, align 16, !dbg !380
  %43127 = getelementptr inbounds { double, double }, ptr %43122, i32 0, i32 1, !dbg !380
  %43128 = load double, ptr %43127, align 8, !dbg !380
  %43129 = call { double, double } @make_vec(double %43123, double %43125, double %43126, double %43128), !dbg !380
  %43130 = extractvalue { double, double } %43129, 0, !dbg !380
  store double %43130, ptr %18, align 8, !dbg !380
  %43131 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43132 = extractvalue { double, double } %43129, 1, !dbg !380
  store double %43132, ptr %43131, align 8, !dbg !380
  %43133 = load i32, ptr %10, align 4, !dbg !381
  %43134 = add nsw i32 %43133, 1, !dbg !382
  %43135 = sext i32 %43134 to i64, !dbg !383
  %43136 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43135, !dbg !383
  %43137 = load double, ptr %6, align 8, !dbg !384
  %43138 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43139 = load double, ptr %43138, align 8, !dbg !384
  %43140 = load double, ptr %43136, align 16, !dbg !384
  %43141 = getelementptr inbounds { double, double }, ptr %43136, i32 0, i32 1, !dbg !384
  %43142 = load double, ptr %43141, align 8, !dbg !384
  %43143 = call { double, double } @make_vec(double %43137, double %43139, double %43140, double %43142), !dbg !384
  %43144 = extractvalue { double, double } %43143, 0, !dbg !384
  store double %43144, ptr %19, align 8, !dbg !384
  %43145 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43146 = extractvalue { double, double } %43143, 1, !dbg !384
  store double %43146, ptr %43145, align 8, !dbg !384
  %43147 = load double, ptr %18, align 8, !dbg !385
  %43148 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43149 = load double, ptr %43148, align 8, !dbg !385
  %43150 = load double, ptr %19, align 8, !dbg !385
  %43151 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43152 = load double, ptr %43151, align 8, !dbg !385
  %43153 = call double @dot(double %43147, double %43149, double %43150, double %43152), !dbg !385
  %43154 = call double @atan2(double noundef %43119, double noundef %43153) #6, !dbg !386
  store double %43154, ptr %13, align 8, !dbg !387
  %43155 = load double, ptr %13, align 8, !dbg !388
  %43156 = load double, ptr %14, align 8, !dbg !389
  %43157 = fadd double %43156, %43155, !dbg !389
  store double %43157, ptr %14, align 8, !dbg !389
  %43158 = load double, ptr %13, align 8, !dbg !390
  %43159 = fsub double %43158, 0x400921FB54442D18, !dbg !392
  %43160 = call double @llvm.fabs.f64(double %43159), !dbg !393
  %43161 = fcmp ole double %43160, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43161, label %14330, label %43162, !dbg !395

43162:                                            ; preds = %43085
  %43163 = load double, ptr %13, align 8, !dbg !396
  %43164 = fadd double %43163, 0x400921FB54442D18, !dbg !397
  %43165 = call double @llvm.fabs.f64(double %43164), !dbg !398
  %43166 = fcmp ole double %43165, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43166, label %14330, label %43167, !dbg !400

43167:                                            ; preds = %43162
  br label %43168, !dbg !403

43168:                                            ; preds = %43167
  %43169 = load i32, ptr %10, align 4, !dbg !404
  %43170 = add nsw i32 %43169, 1, !dbg !404
  store i32 %43170, ptr %10, align 4, !dbg !404
  %43171 = load i32, ptr %10, align 4, !dbg !364
  %43172 = load i32, ptr %8, align 4, !dbg !366
  %43173 = icmp slt i32 %43171, %43172, !dbg !367
  br i1 %43173, label %43174, label %48422, !dbg !368

43174:                                            ; preds = %43168
  %43175 = load i32, ptr %10, align 4, !dbg !369
  %43176 = sext i32 %43175 to i64, !dbg !371
  %43177 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43176, !dbg !371
  %43178 = load double, ptr %6, align 8, !dbg !372
  %43179 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43180 = load double, ptr %43179, align 8, !dbg !372
  %43181 = load double, ptr %43177, align 16, !dbg !372
  %43182 = getelementptr inbounds { double, double }, ptr %43177, i32 0, i32 1, !dbg !372
  %43183 = load double, ptr %43182, align 8, !dbg !372
  %43184 = call { double, double } @make_vec(double %43178, double %43180, double %43181, double %43183), !dbg !372
  %43185 = extractvalue { double, double } %43184, 0, !dbg !372
  store double %43185, ptr %16, align 8, !dbg !372
  %43186 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43187 = extractvalue { double, double } %43184, 1, !dbg !372
  store double %43187, ptr %43186, align 8, !dbg !372
  %43188 = load i32, ptr %10, align 4, !dbg !373
  %43189 = add nsw i32 %43188, 1, !dbg !374
  %43190 = sext i32 %43189 to i64, !dbg !375
  %43191 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43190, !dbg !375
  %43192 = load double, ptr %6, align 8, !dbg !376
  %43193 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43194 = load double, ptr %43193, align 8, !dbg !376
  %43195 = load double, ptr %43191, align 16, !dbg !376
  %43196 = getelementptr inbounds { double, double }, ptr %43191, i32 0, i32 1, !dbg !376
  %43197 = load double, ptr %43196, align 8, !dbg !376
  %43198 = call { double, double } @make_vec(double %43192, double %43194, double %43195, double %43197), !dbg !376
  %43199 = extractvalue { double, double } %43198, 0, !dbg !376
  store double %43199, ptr %17, align 8, !dbg !376
  %43200 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43201 = extractvalue { double, double } %43198, 1, !dbg !376
  store double %43201, ptr %43200, align 8, !dbg !376
  %43202 = load double, ptr %16, align 8, !dbg !377
  %43203 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43204 = load double, ptr %43203, align 8, !dbg !377
  %43205 = load double, ptr %17, align 8, !dbg !377
  %43206 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43207 = load double, ptr %43206, align 8, !dbg !377
  %43208 = call double @cross(double %43202, double %43204, double %43205, double %43207), !dbg !377
  %43209 = load i32, ptr %10, align 4, !dbg !378
  %43210 = sext i32 %43209 to i64, !dbg !379
  %43211 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43210, !dbg !379
  %43212 = load double, ptr %6, align 8, !dbg !380
  %43213 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43214 = load double, ptr %43213, align 8, !dbg !380
  %43215 = load double, ptr %43211, align 16, !dbg !380
  %43216 = getelementptr inbounds { double, double }, ptr %43211, i32 0, i32 1, !dbg !380
  %43217 = load double, ptr %43216, align 8, !dbg !380
  %43218 = call { double, double } @make_vec(double %43212, double %43214, double %43215, double %43217), !dbg !380
  %43219 = extractvalue { double, double } %43218, 0, !dbg !380
  store double %43219, ptr %18, align 8, !dbg !380
  %43220 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43221 = extractvalue { double, double } %43218, 1, !dbg !380
  store double %43221, ptr %43220, align 8, !dbg !380
  %43222 = load i32, ptr %10, align 4, !dbg !381
  %43223 = add nsw i32 %43222, 1, !dbg !382
  %43224 = sext i32 %43223 to i64, !dbg !383
  %43225 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43224, !dbg !383
  %43226 = load double, ptr %6, align 8, !dbg !384
  %43227 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43228 = load double, ptr %43227, align 8, !dbg !384
  %43229 = load double, ptr %43225, align 16, !dbg !384
  %43230 = getelementptr inbounds { double, double }, ptr %43225, i32 0, i32 1, !dbg !384
  %43231 = load double, ptr %43230, align 8, !dbg !384
  %43232 = call { double, double } @make_vec(double %43226, double %43228, double %43229, double %43231), !dbg !384
  %43233 = extractvalue { double, double } %43232, 0, !dbg !384
  store double %43233, ptr %19, align 8, !dbg !384
  %43234 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43235 = extractvalue { double, double } %43232, 1, !dbg !384
  store double %43235, ptr %43234, align 8, !dbg !384
  %43236 = load double, ptr %18, align 8, !dbg !385
  %43237 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43238 = load double, ptr %43237, align 8, !dbg !385
  %43239 = load double, ptr %19, align 8, !dbg !385
  %43240 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43241 = load double, ptr %43240, align 8, !dbg !385
  %43242 = call double @dot(double %43236, double %43238, double %43239, double %43241), !dbg !385
  %43243 = call double @atan2(double noundef %43208, double noundef %43242) #6, !dbg !386
  store double %43243, ptr %13, align 8, !dbg !387
  %43244 = load double, ptr %13, align 8, !dbg !388
  %43245 = load double, ptr %14, align 8, !dbg !389
  %43246 = fadd double %43245, %43244, !dbg !389
  store double %43246, ptr %14, align 8, !dbg !389
  %43247 = load double, ptr %13, align 8, !dbg !390
  %43248 = fsub double %43247, 0x400921FB54442D18, !dbg !392
  %43249 = call double @llvm.fabs.f64(double %43248), !dbg !393
  %43250 = fcmp ole double %43249, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43250, label %14330, label %43251, !dbg !395

43251:                                            ; preds = %43174
  %43252 = load double, ptr %13, align 8, !dbg !396
  %43253 = fadd double %43252, 0x400921FB54442D18, !dbg !397
  %43254 = call double @llvm.fabs.f64(double %43253), !dbg !398
  %43255 = fcmp ole double %43254, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43255, label %14330, label %43256, !dbg !400

43256:                                            ; preds = %43251
  br label %43257, !dbg !403

43257:                                            ; preds = %43256
  %43258 = load i32, ptr %10, align 4, !dbg !404
  %43259 = add nsw i32 %43258, 1, !dbg !404
  store i32 %43259, ptr %10, align 4, !dbg !404
  %43260 = load i32, ptr %10, align 4, !dbg !364
  %43261 = load i32, ptr %8, align 4, !dbg !366
  %43262 = icmp slt i32 %43260, %43261, !dbg !367
  br i1 %43262, label %43263, label %48422, !dbg !368

43263:                                            ; preds = %43257
  %43264 = load i32, ptr %10, align 4, !dbg !369
  %43265 = sext i32 %43264 to i64, !dbg !371
  %43266 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43265, !dbg !371
  %43267 = load double, ptr %6, align 8, !dbg !372
  %43268 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43269 = load double, ptr %43268, align 8, !dbg !372
  %43270 = load double, ptr %43266, align 16, !dbg !372
  %43271 = getelementptr inbounds { double, double }, ptr %43266, i32 0, i32 1, !dbg !372
  %43272 = load double, ptr %43271, align 8, !dbg !372
  %43273 = call { double, double } @make_vec(double %43267, double %43269, double %43270, double %43272), !dbg !372
  %43274 = extractvalue { double, double } %43273, 0, !dbg !372
  store double %43274, ptr %16, align 8, !dbg !372
  %43275 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43276 = extractvalue { double, double } %43273, 1, !dbg !372
  store double %43276, ptr %43275, align 8, !dbg !372
  %43277 = load i32, ptr %10, align 4, !dbg !373
  %43278 = add nsw i32 %43277, 1, !dbg !374
  %43279 = sext i32 %43278 to i64, !dbg !375
  %43280 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43279, !dbg !375
  %43281 = load double, ptr %6, align 8, !dbg !376
  %43282 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43283 = load double, ptr %43282, align 8, !dbg !376
  %43284 = load double, ptr %43280, align 16, !dbg !376
  %43285 = getelementptr inbounds { double, double }, ptr %43280, i32 0, i32 1, !dbg !376
  %43286 = load double, ptr %43285, align 8, !dbg !376
  %43287 = call { double, double } @make_vec(double %43281, double %43283, double %43284, double %43286), !dbg !376
  %43288 = extractvalue { double, double } %43287, 0, !dbg !376
  store double %43288, ptr %17, align 8, !dbg !376
  %43289 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43290 = extractvalue { double, double } %43287, 1, !dbg !376
  store double %43290, ptr %43289, align 8, !dbg !376
  %43291 = load double, ptr %16, align 8, !dbg !377
  %43292 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43293 = load double, ptr %43292, align 8, !dbg !377
  %43294 = load double, ptr %17, align 8, !dbg !377
  %43295 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43296 = load double, ptr %43295, align 8, !dbg !377
  %43297 = call double @cross(double %43291, double %43293, double %43294, double %43296), !dbg !377
  %43298 = load i32, ptr %10, align 4, !dbg !378
  %43299 = sext i32 %43298 to i64, !dbg !379
  %43300 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43299, !dbg !379
  %43301 = load double, ptr %6, align 8, !dbg !380
  %43302 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43303 = load double, ptr %43302, align 8, !dbg !380
  %43304 = load double, ptr %43300, align 16, !dbg !380
  %43305 = getelementptr inbounds { double, double }, ptr %43300, i32 0, i32 1, !dbg !380
  %43306 = load double, ptr %43305, align 8, !dbg !380
  %43307 = call { double, double } @make_vec(double %43301, double %43303, double %43304, double %43306), !dbg !380
  %43308 = extractvalue { double, double } %43307, 0, !dbg !380
  store double %43308, ptr %18, align 8, !dbg !380
  %43309 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43310 = extractvalue { double, double } %43307, 1, !dbg !380
  store double %43310, ptr %43309, align 8, !dbg !380
  %43311 = load i32, ptr %10, align 4, !dbg !381
  %43312 = add nsw i32 %43311, 1, !dbg !382
  %43313 = sext i32 %43312 to i64, !dbg !383
  %43314 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43313, !dbg !383
  %43315 = load double, ptr %6, align 8, !dbg !384
  %43316 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43317 = load double, ptr %43316, align 8, !dbg !384
  %43318 = load double, ptr %43314, align 16, !dbg !384
  %43319 = getelementptr inbounds { double, double }, ptr %43314, i32 0, i32 1, !dbg !384
  %43320 = load double, ptr %43319, align 8, !dbg !384
  %43321 = call { double, double } @make_vec(double %43315, double %43317, double %43318, double %43320), !dbg !384
  %43322 = extractvalue { double, double } %43321, 0, !dbg !384
  store double %43322, ptr %19, align 8, !dbg !384
  %43323 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43324 = extractvalue { double, double } %43321, 1, !dbg !384
  store double %43324, ptr %43323, align 8, !dbg !384
  %43325 = load double, ptr %18, align 8, !dbg !385
  %43326 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43327 = load double, ptr %43326, align 8, !dbg !385
  %43328 = load double, ptr %19, align 8, !dbg !385
  %43329 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43330 = load double, ptr %43329, align 8, !dbg !385
  %43331 = call double @dot(double %43325, double %43327, double %43328, double %43330), !dbg !385
  %43332 = call double @atan2(double noundef %43297, double noundef %43331) #6, !dbg !386
  store double %43332, ptr %13, align 8, !dbg !387
  %43333 = load double, ptr %13, align 8, !dbg !388
  %43334 = load double, ptr %14, align 8, !dbg !389
  %43335 = fadd double %43334, %43333, !dbg !389
  store double %43335, ptr %14, align 8, !dbg !389
  %43336 = load double, ptr %13, align 8, !dbg !390
  %43337 = fsub double %43336, 0x400921FB54442D18, !dbg !392
  %43338 = call double @llvm.fabs.f64(double %43337), !dbg !393
  %43339 = fcmp ole double %43338, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43339, label %14330, label %43340, !dbg !395

43340:                                            ; preds = %43263
  %43341 = load double, ptr %13, align 8, !dbg !396
  %43342 = fadd double %43341, 0x400921FB54442D18, !dbg !397
  %43343 = call double @llvm.fabs.f64(double %43342), !dbg !398
  %43344 = fcmp ole double %43343, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43344, label %14330, label %43345, !dbg !400

43345:                                            ; preds = %43340
  br label %43346, !dbg !403

43346:                                            ; preds = %43345
  %43347 = load i32, ptr %10, align 4, !dbg !404
  %43348 = add nsw i32 %43347, 1, !dbg !404
  store i32 %43348, ptr %10, align 4, !dbg !404
  %43349 = load i32, ptr %10, align 4, !dbg !364
  %43350 = load i32, ptr %8, align 4, !dbg !366
  %43351 = icmp slt i32 %43349, %43350, !dbg !367
  br i1 %43351, label %43352, label %48422, !dbg !368

43352:                                            ; preds = %43346
  %43353 = load i32, ptr %10, align 4, !dbg !369
  %43354 = sext i32 %43353 to i64, !dbg !371
  %43355 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43354, !dbg !371
  %43356 = load double, ptr %6, align 8, !dbg !372
  %43357 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43358 = load double, ptr %43357, align 8, !dbg !372
  %43359 = load double, ptr %43355, align 16, !dbg !372
  %43360 = getelementptr inbounds { double, double }, ptr %43355, i32 0, i32 1, !dbg !372
  %43361 = load double, ptr %43360, align 8, !dbg !372
  %43362 = call { double, double } @make_vec(double %43356, double %43358, double %43359, double %43361), !dbg !372
  %43363 = extractvalue { double, double } %43362, 0, !dbg !372
  store double %43363, ptr %16, align 8, !dbg !372
  %43364 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43365 = extractvalue { double, double } %43362, 1, !dbg !372
  store double %43365, ptr %43364, align 8, !dbg !372
  %43366 = load i32, ptr %10, align 4, !dbg !373
  %43367 = add nsw i32 %43366, 1, !dbg !374
  %43368 = sext i32 %43367 to i64, !dbg !375
  %43369 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43368, !dbg !375
  %43370 = load double, ptr %6, align 8, !dbg !376
  %43371 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43372 = load double, ptr %43371, align 8, !dbg !376
  %43373 = load double, ptr %43369, align 16, !dbg !376
  %43374 = getelementptr inbounds { double, double }, ptr %43369, i32 0, i32 1, !dbg !376
  %43375 = load double, ptr %43374, align 8, !dbg !376
  %43376 = call { double, double } @make_vec(double %43370, double %43372, double %43373, double %43375), !dbg !376
  %43377 = extractvalue { double, double } %43376, 0, !dbg !376
  store double %43377, ptr %17, align 8, !dbg !376
  %43378 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43379 = extractvalue { double, double } %43376, 1, !dbg !376
  store double %43379, ptr %43378, align 8, !dbg !376
  %43380 = load double, ptr %16, align 8, !dbg !377
  %43381 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43382 = load double, ptr %43381, align 8, !dbg !377
  %43383 = load double, ptr %17, align 8, !dbg !377
  %43384 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43385 = load double, ptr %43384, align 8, !dbg !377
  %43386 = call double @cross(double %43380, double %43382, double %43383, double %43385), !dbg !377
  %43387 = load i32, ptr %10, align 4, !dbg !378
  %43388 = sext i32 %43387 to i64, !dbg !379
  %43389 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43388, !dbg !379
  %43390 = load double, ptr %6, align 8, !dbg !380
  %43391 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43392 = load double, ptr %43391, align 8, !dbg !380
  %43393 = load double, ptr %43389, align 16, !dbg !380
  %43394 = getelementptr inbounds { double, double }, ptr %43389, i32 0, i32 1, !dbg !380
  %43395 = load double, ptr %43394, align 8, !dbg !380
  %43396 = call { double, double } @make_vec(double %43390, double %43392, double %43393, double %43395), !dbg !380
  %43397 = extractvalue { double, double } %43396, 0, !dbg !380
  store double %43397, ptr %18, align 8, !dbg !380
  %43398 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43399 = extractvalue { double, double } %43396, 1, !dbg !380
  store double %43399, ptr %43398, align 8, !dbg !380
  %43400 = load i32, ptr %10, align 4, !dbg !381
  %43401 = add nsw i32 %43400, 1, !dbg !382
  %43402 = sext i32 %43401 to i64, !dbg !383
  %43403 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43402, !dbg !383
  %43404 = load double, ptr %6, align 8, !dbg !384
  %43405 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43406 = load double, ptr %43405, align 8, !dbg !384
  %43407 = load double, ptr %43403, align 16, !dbg !384
  %43408 = getelementptr inbounds { double, double }, ptr %43403, i32 0, i32 1, !dbg !384
  %43409 = load double, ptr %43408, align 8, !dbg !384
  %43410 = call { double, double } @make_vec(double %43404, double %43406, double %43407, double %43409), !dbg !384
  %43411 = extractvalue { double, double } %43410, 0, !dbg !384
  store double %43411, ptr %19, align 8, !dbg !384
  %43412 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43413 = extractvalue { double, double } %43410, 1, !dbg !384
  store double %43413, ptr %43412, align 8, !dbg !384
  %43414 = load double, ptr %18, align 8, !dbg !385
  %43415 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43416 = load double, ptr %43415, align 8, !dbg !385
  %43417 = load double, ptr %19, align 8, !dbg !385
  %43418 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43419 = load double, ptr %43418, align 8, !dbg !385
  %43420 = call double @dot(double %43414, double %43416, double %43417, double %43419), !dbg !385
  %43421 = call double @atan2(double noundef %43386, double noundef %43420) #6, !dbg !386
  store double %43421, ptr %13, align 8, !dbg !387
  %43422 = load double, ptr %13, align 8, !dbg !388
  %43423 = load double, ptr %14, align 8, !dbg !389
  %43424 = fadd double %43423, %43422, !dbg !389
  store double %43424, ptr %14, align 8, !dbg !389
  %43425 = load double, ptr %13, align 8, !dbg !390
  %43426 = fsub double %43425, 0x400921FB54442D18, !dbg !392
  %43427 = call double @llvm.fabs.f64(double %43426), !dbg !393
  %43428 = fcmp ole double %43427, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43428, label %14330, label %43429, !dbg !395

43429:                                            ; preds = %43352
  %43430 = load double, ptr %13, align 8, !dbg !396
  %43431 = fadd double %43430, 0x400921FB54442D18, !dbg !397
  %43432 = call double @llvm.fabs.f64(double %43431), !dbg !398
  %43433 = fcmp ole double %43432, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43433, label %14330, label %43434, !dbg !400

43434:                                            ; preds = %43429
  br label %43435, !dbg !403

43435:                                            ; preds = %43434
  %43436 = load i32, ptr %10, align 4, !dbg !404
  %43437 = add nsw i32 %43436, 1, !dbg !404
  store i32 %43437, ptr %10, align 4, !dbg !404
  %43438 = load i32, ptr %10, align 4, !dbg !364
  %43439 = load i32, ptr %8, align 4, !dbg !366
  %43440 = icmp slt i32 %43438, %43439, !dbg !367
  br i1 %43440, label %43441, label %48422, !dbg !368

43441:                                            ; preds = %43435
  %43442 = load i32, ptr %10, align 4, !dbg !369
  %43443 = sext i32 %43442 to i64, !dbg !371
  %43444 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43443, !dbg !371
  %43445 = load double, ptr %6, align 8, !dbg !372
  %43446 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43447 = load double, ptr %43446, align 8, !dbg !372
  %43448 = load double, ptr %43444, align 16, !dbg !372
  %43449 = getelementptr inbounds { double, double }, ptr %43444, i32 0, i32 1, !dbg !372
  %43450 = load double, ptr %43449, align 8, !dbg !372
  %43451 = call { double, double } @make_vec(double %43445, double %43447, double %43448, double %43450), !dbg !372
  %43452 = extractvalue { double, double } %43451, 0, !dbg !372
  store double %43452, ptr %16, align 8, !dbg !372
  %43453 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43454 = extractvalue { double, double } %43451, 1, !dbg !372
  store double %43454, ptr %43453, align 8, !dbg !372
  %43455 = load i32, ptr %10, align 4, !dbg !373
  %43456 = add nsw i32 %43455, 1, !dbg !374
  %43457 = sext i32 %43456 to i64, !dbg !375
  %43458 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43457, !dbg !375
  %43459 = load double, ptr %6, align 8, !dbg !376
  %43460 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43461 = load double, ptr %43460, align 8, !dbg !376
  %43462 = load double, ptr %43458, align 16, !dbg !376
  %43463 = getelementptr inbounds { double, double }, ptr %43458, i32 0, i32 1, !dbg !376
  %43464 = load double, ptr %43463, align 8, !dbg !376
  %43465 = call { double, double } @make_vec(double %43459, double %43461, double %43462, double %43464), !dbg !376
  %43466 = extractvalue { double, double } %43465, 0, !dbg !376
  store double %43466, ptr %17, align 8, !dbg !376
  %43467 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43468 = extractvalue { double, double } %43465, 1, !dbg !376
  store double %43468, ptr %43467, align 8, !dbg !376
  %43469 = load double, ptr %16, align 8, !dbg !377
  %43470 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43471 = load double, ptr %43470, align 8, !dbg !377
  %43472 = load double, ptr %17, align 8, !dbg !377
  %43473 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43474 = load double, ptr %43473, align 8, !dbg !377
  %43475 = call double @cross(double %43469, double %43471, double %43472, double %43474), !dbg !377
  %43476 = load i32, ptr %10, align 4, !dbg !378
  %43477 = sext i32 %43476 to i64, !dbg !379
  %43478 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43477, !dbg !379
  %43479 = load double, ptr %6, align 8, !dbg !380
  %43480 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43481 = load double, ptr %43480, align 8, !dbg !380
  %43482 = load double, ptr %43478, align 16, !dbg !380
  %43483 = getelementptr inbounds { double, double }, ptr %43478, i32 0, i32 1, !dbg !380
  %43484 = load double, ptr %43483, align 8, !dbg !380
  %43485 = call { double, double } @make_vec(double %43479, double %43481, double %43482, double %43484), !dbg !380
  %43486 = extractvalue { double, double } %43485, 0, !dbg !380
  store double %43486, ptr %18, align 8, !dbg !380
  %43487 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43488 = extractvalue { double, double } %43485, 1, !dbg !380
  store double %43488, ptr %43487, align 8, !dbg !380
  %43489 = load i32, ptr %10, align 4, !dbg !381
  %43490 = add nsw i32 %43489, 1, !dbg !382
  %43491 = sext i32 %43490 to i64, !dbg !383
  %43492 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43491, !dbg !383
  %43493 = load double, ptr %6, align 8, !dbg !384
  %43494 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43495 = load double, ptr %43494, align 8, !dbg !384
  %43496 = load double, ptr %43492, align 16, !dbg !384
  %43497 = getelementptr inbounds { double, double }, ptr %43492, i32 0, i32 1, !dbg !384
  %43498 = load double, ptr %43497, align 8, !dbg !384
  %43499 = call { double, double } @make_vec(double %43493, double %43495, double %43496, double %43498), !dbg !384
  %43500 = extractvalue { double, double } %43499, 0, !dbg !384
  store double %43500, ptr %19, align 8, !dbg !384
  %43501 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43502 = extractvalue { double, double } %43499, 1, !dbg !384
  store double %43502, ptr %43501, align 8, !dbg !384
  %43503 = load double, ptr %18, align 8, !dbg !385
  %43504 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43505 = load double, ptr %43504, align 8, !dbg !385
  %43506 = load double, ptr %19, align 8, !dbg !385
  %43507 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43508 = load double, ptr %43507, align 8, !dbg !385
  %43509 = call double @dot(double %43503, double %43505, double %43506, double %43508), !dbg !385
  %43510 = call double @atan2(double noundef %43475, double noundef %43509) #6, !dbg !386
  store double %43510, ptr %13, align 8, !dbg !387
  %43511 = load double, ptr %13, align 8, !dbg !388
  %43512 = load double, ptr %14, align 8, !dbg !389
  %43513 = fadd double %43512, %43511, !dbg !389
  store double %43513, ptr %14, align 8, !dbg !389
  %43514 = load double, ptr %13, align 8, !dbg !390
  %43515 = fsub double %43514, 0x400921FB54442D18, !dbg !392
  %43516 = call double @llvm.fabs.f64(double %43515), !dbg !393
  %43517 = fcmp ole double %43516, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43517, label %14330, label %43518, !dbg !395

43518:                                            ; preds = %43441
  %43519 = load double, ptr %13, align 8, !dbg !396
  %43520 = fadd double %43519, 0x400921FB54442D18, !dbg !397
  %43521 = call double @llvm.fabs.f64(double %43520), !dbg !398
  %43522 = fcmp ole double %43521, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43522, label %14330, label %43523, !dbg !400

43523:                                            ; preds = %43518
  br label %43524, !dbg !403

43524:                                            ; preds = %43523
  %43525 = load i32, ptr %10, align 4, !dbg !404
  %43526 = add nsw i32 %43525, 1, !dbg !404
  store i32 %43526, ptr %10, align 4, !dbg !404
  %43527 = load i32, ptr %10, align 4, !dbg !364
  %43528 = load i32, ptr %8, align 4, !dbg !366
  %43529 = icmp slt i32 %43527, %43528, !dbg !367
  br i1 %43529, label %43530, label %48422, !dbg !368

43530:                                            ; preds = %43524
  %43531 = load i32, ptr %10, align 4, !dbg !369
  %43532 = sext i32 %43531 to i64, !dbg !371
  %43533 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43532, !dbg !371
  %43534 = load double, ptr %6, align 8, !dbg !372
  %43535 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43536 = load double, ptr %43535, align 8, !dbg !372
  %43537 = load double, ptr %43533, align 16, !dbg !372
  %43538 = getelementptr inbounds { double, double }, ptr %43533, i32 0, i32 1, !dbg !372
  %43539 = load double, ptr %43538, align 8, !dbg !372
  %43540 = call { double, double } @make_vec(double %43534, double %43536, double %43537, double %43539), !dbg !372
  %43541 = extractvalue { double, double } %43540, 0, !dbg !372
  store double %43541, ptr %16, align 8, !dbg !372
  %43542 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43543 = extractvalue { double, double } %43540, 1, !dbg !372
  store double %43543, ptr %43542, align 8, !dbg !372
  %43544 = load i32, ptr %10, align 4, !dbg !373
  %43545 = add nsw i32 %43544, 1, !dbg !374
  %43546 = sext i32 %43545 to i64, !dbg !375
  %43547 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43546, !dbg !375
  %43548 = load double, ptr %6, align 8, !dbg !376
  %43549 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43550 = load double, ptr %43549, align 8, !dbg !376
  %43551 = load double, ptr %43547, align 16, !dbg !376
  %43552 = getelementptr inbounds { double, double }, ptr %43547, i32 0, i32 1, !dbg !376
  %43553 = load double, ptr %43552, align 8, !dbg !376
  %43554 = call { double, double } @make_vec(double %43548, double %43550, double %43551, double %43553), !dbg !376
  %43555 = extractvalue { double, double } %43554, 0, !dbg !376
  store double %43555, ptr %17, align 8, !dbg !376
  %43556 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43557 = extractvalue { double, double } %43554, 1, !dbg !376
  store double %43557, ptr %43556, align 8, !dbg !376
  %43558 = load double, ptr %16, align 8, !dbg !377
  %43559 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43560 = load double, ptr %43559, align 8, !dbg !377
  %43561 = load double, ptr %17, align 8, !dbg !377
  %43562 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43563 = load double, ptr %43562, align 8, !dbg !377
  %43564 = call double @cross(double %43558, double %43560, double %43561, double %43563), !dbg !377
  %43565 = load i32, ptr %10, align 4, !dbg !378
  %43566 = sext i32 %43565 to i64, !dbg !379
  %43567 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43566, !dbg !379
  %43568 = load double, ptr %6, align 8, !dbg !380
  %43569 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43570 = load double, ptr %43569, align 8, !dbg !380
  %43571 = load double, ptr %43567, align 16, !dbg !380
  %43572 = getelementptr inbounds { double, double }, ptr %43567, i32 0, i32 1, !dbg !380
  %43573 = load double, ptr %43572, align 8, !dbg !380
  %43574 = call { double, double } @make_vec(double %43568, double %43570, double %43571, double %43573), !dbg !380
  %43575 = extractvalue { double, double } %43574, 0, !dbg !380
  store double %43575, ptr %18, align 8, !dbg !380
  %43576 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43577 = extractvalue { double, double } %43574, 1, !dbg !380
  store double %43577, ptr %43576, align 8, !dbg !380
  %43578 = load i32, ptr %10, align 4, !dbg !381
  %43579 = add nsw i32 %43578, 1, !dbg !382
  %43580 = sext i32 %43579 to i64, !dbg !383
  %43581 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43580, !dbg !383
  %43582 = load double, ptr %6, align 8, !dbg !384
  %43583 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43584 = load double, ptr %43583, align 8, !dbg !384
  %43585 = load double, ptr %43581, align 16, !dbg !384
  %43586 = getelementptr inbounds { double, double }, ptr %43581, i32 0, i32 1, !dbg !384
  %43587 = load double, ptr %43586, align 8, !dbg !384
  %43588 = call { double, double } @make_vec(double %43582, double %43584, double %43585, double %43587), !dbg !384
  %43589 = extractvalue { double, double } %43588, 0, !dbg !384
  store double %43589, ptr %19, align 8, !dbg !384
  %43590 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43591 = extractvalue { double, double } %43588, 1, !dbg !384
  store double %43591, ptr %43590, align 8, !dbg !384
  %43592 = load double, ptr %18, align 8, !dbg !385
  %43593 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43594 = load double, ptr %43593, align 8, !dbg !385
  %43595 = load double, ptr %19, align 8, !dbg !385
  %43596 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43597 = load double, ptr %43596, align 8, !dbg !385
  %43598 = call double @dot(double %43592, double %43594, double %43595, double %43597), !dbg !385
  %43599 = call double @atan2(double noundef %43564, double noundef %43598) #6, !dbg !386
  store double %43599, ptr %13, align 8, !dbg !387
  %43600 = load double, ptr %13, align 8, !dbg !388
  %43601 = load double, ptr %14, align 8, !dbg !389
  %43602 = fadd double %43601, %43600, !dbg !389
  store double %43602, ptr %14, align 8, !dbg !389
  %43603 = load double, ptr %13, align 8, !dbg !390
  %43604 = fsub double %43603, 0x400921FB54442D18, !dbg !392
  %43605 = call double @llvm.fabs.f64(double %43604), !dbg !393
  %43606 = fcmp ole double %43605, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43606, label %14330, label %43607, !dbg !395

43607:                                            ; preds = %43530
  %43608 = load double, ptr %13, align 8, !dbg !396
  %43609 = fadd double %43608, 0x400921FB54442D18, !dbg !397
  %43610 = call double @llvm.fabs.f64(double %43609), !dbg !398
  %43611 = fcmp ole double %43610, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43611, label %14330, label %43612, !dbg !400

43612:                                            ; preds = %43607
  br label %43613, !dbg !403

43613:                                            ; preds = %43612
  %43614 = load i32, ptr %10, align 4, !dbg !404
  %43615 = add nsw i32 %43614, 1, !dbg !404
  store i32 %43615, ptr %10, align 4, !dbg !404
  %43616 = load i32, ptr %10, align 4, !dbg !364
  %43617 = load i32, ptr %8, align 4, !dbg !366
  %43618 = icmp slt i32 %43616, %43617, !dbg !367
  br i1 %43618, label %43619, label %48422, !dbg !368

43619:                                            ; preds = %43613
  %43620 = load i32, ptr %10, align 4, !dbg !369
  %43621 = sext i32 %43620 to i64, !dbg !371
  %43622 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43621, !dbg !371
  %43623 = load double, ptr %6, align 8, !dbg !372
  %43624 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43625 = load double, ptr %43624, align 8, !dbg !372
  %43626 = load double, ptr %43622, align 16, !dbg !372
  %43627 = getelementptr inbounds { double, double }, ptr %43622, i32 0, i32 1, !dbg !372
  %43628 = load double, ptr %43627, align 8, !dbg !372
  %43629 = call { double, double } @make_vec(double %43623, double %43625, double %43626, double %43628), !dbg !372
  %43630 = extractvalue { double, double } %43629, 0, !dbg !372
  store double %43630, ptr %16, align 8, !dbg !372
  %43631 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43632 = extractvalue { double, double } %43629, 1, !dbg !372
  store double %43632, ptr %43631, align 8, !dbg !372
  %43633 = load i32, ptr %10, align 4, !dbg !373
  %43634 = add nsw i32 %43633, 1, !dbg !374
  %43635 = sext i32 %43634 to i64, !dbg !375
  %43636 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43635, !dbg !375
  %43637 = load double, ptr %6, align 8, !dbg !376
  %43638 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43639 = load double, ptr %43638, align 8, !dbg !376
  %43640 = load double, ptr %43636, align 16, !dbg !376
  %43641 = getelementptr inbounds { double, double }, ptr %43636, i32 0, i32 1, !dbg !376
  %43642 = load double, ptr %43641, align 8, !dbg !376
  %43643 = call { double, double } @make_vec(double %43637, double %43639, double %43640, double %43642), !dbg !376
  %43644 = extractvalue { double, double } %43643, 0, !dbg !376
  store double %43644, ptr %17, align 8, !dbg !376
  %43645 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43646 = extractvalue { double, double } %43643, 1, !dbg !376
  store double %43646, ptr %43645, align 8, !dbg !376
  %43647 = load double, ptr %16, align 8, !dbg !377
  %43648 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43649 = load double, ptr %43648, align 8, !dbg !377
  %43650 = load double, ptr %17, align 8, !dbg !377
  %43651 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43652 = load double, ptr %43651, align 8, !dbg !377
  %43653 = call double @cross(double %43647, double %43649, double %43650, double %43652), !dbg !377
  %43654 = load i32, ptr %10, align 4, !dbg !378
  %43655 = sext i32 %43654 to i64, !dbg !379
  %43656 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43655, !dbg !379
  %43657 = load double, ptr %6, align 8, !dbg !380
  %43658 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43659 = load double, ptr %43658, align 8, !dbg !380
  %43660 = load double, ptr %43656, align 16, !dbg !380
  %43661 = getelementptr inbounds { double, double }, ptr %43656, i32 0, i32 1, !dbg !380
  %43662 = load double, ptr %43661, align 8, !dbg !380
  %43663 = call { double, double } @make_vec(double %43657, double %43659, double %43660, double %43662), !dbg !380
  %43664 = extractvalue { double, double } %43663, 0, !dbg !380
  store double %43664, ptr %18, align 8, !dbg !380
  %43665 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43666 = extractvalue { double, double } %43663, 1, !dbg !380
  store double %43666, ptr %43665, align 8, !dbg !380
  %43667 = load i32, ptr %10, align 4, !dbg !381
  %43668 = add nsw i32 %43667, 1, !dbg !382
  %43669 = sext i32 %43668 to i64, !dbg !383
  %43670 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43669, !dbg !383
  %43671 = load double, ptr %6, align 8, !dbg !384
  %43672 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43673 = load double, ptr %43672, align 8, !dbg !384
  %43674 = load double, ptr %43670, align 16, !dbg !384
  %43675 = getelementptr inbounds { double, double }, ptr %43670, i32 0, i32 1, !dbg !384
  %43676 = load double, ptr %43675, align 8, !dbg !384
  %43677 = call { double, double } @make_vec(double %43671, double %43673, double %43674, double %43676), !dbg !384
  %43678 = extractvalue { double, double } %43677, 0, !dbg !384
  store double %43678, ptr %19, align 8, !dbg !384
  %43679 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43680 = extractvalue { double, double } %43677, 1, !dbg !384
  store double %43680, ptr %43679, align 8, !dbg !384
  %43681 = load double, ptr %18, align 8, !dbg !385
  %43682 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43683 = load double, ptr %43682, align 8, !dbg !385
  %43684 = load double, ptr %19, align 8, !dbg !385
  %43685 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43686 = load double, ptr %43685, align 8, !dbg !385
  %43687 = call double @dot(double %43681, double %43683, double %43684, double %43686), !dbg !385
  %43688 = call double @atan2(double noundef %43653, double noundef %43687) #6, !dbg !386
  store double %43688, ptr %13, align 8, !dbg !387
  %43689 = load double, ptr %13, align 8, !dbg !388
  %43690 = load double, ptr %14, align 8, !dbg !389
  %43691 = fadd double %43690, %43689, !dbg !389
  store double %43691, ptr %14, align 8, !dbg !389
  %43692 = load double, ptr %13, align 8, !dbg !390
  %43693 = fsub double %43692, 0x400921FB54442D18, !dbg !392
  %43694 = call double @llvm.fabs.f64(double %43693), !dbg !393
  %43695 = fcmp ole double %43694, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43695, label %14330, label %43696, !dbg !395

43696:                                            ; preds = %43619
  %43697 = load double, ptr %13, align 8, !dbg !396
  %43698 = fadd double %43697, 0x400921FB54442D18, !dbg !397
  %43699 = call double @llvm.fabs.f64(double %43698), !dbg !398
  %43700 = fcmp ole double %43699, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43700, label %14330, label %43701, !dbg !400

43701:                                            ; preds = %43696
  br label %43702, !dbg !403

43702:                                            ; preds = %43701
  %43703 = load i32, ptr %10, align 4, !dbg !404
  %43704 = add nsw i32 %43703, 1, !dbg !404
  store i32 %43704, ptr %10, align 4, !dbg !404
  %43705 = load i32, ptr %10, align 4, !dbg !364
  %43706 = load i32, ptr %8, align 4, !dbg !366
  %43707 = icmp slt i32 %43705, %43706, !dbg !367
  br i1 %43707, label %43708, label %48422, !dbg !368

43708:                                            ; preds = %43702
  %43709 = load i32, ptr %10, align 4, !dbg !369
  %43710 = sext i32 %43709 to i64, !dbg !371
  %43711 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43710, !dbg !371
  %43712 = load double, ptr %6, align 8, !dbg !372
  %43713 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43714 = load double, ptr %43713, align 8, !dbg !372
  %43715 = load double, ptr %43711, align 16, !dbg !372
  %43716 = getelementptr inbounds { double, double }, ptr %43711, i32 0, i32 1, !dbg !372
  %43717 = load double, ptr %43716, align 8, !dbg !372
  %43718 = call { double, double } @make_vec(double %43712, double %43714, double %43715, double %43717), !dbg !372
  %43719 = extractvalue { double, double } %43718, 0, !dbg !372
  store double %43719, ptr %16, align 8, !dbg !372
  %43720 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43721 = extractvalue { double, double } %43718, 1, !dbg !372
  store double %43721, ptr %43720, align 8, !dbg !372
  %43722 = load i32, ptr %10, align 4, !dbg !373
  %43723 = add nsw i32 %43722, 1, !dbg !374
  %43724 = sext i32 %43723 to i64, !dbg !375
  %43725 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43724, !dbg !375
  %43726 = load double, ptr %6, align 8, !dbg !376
  %43727 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43728 = load double, ptr %43727, align 8, !dbg !376
  %43729 = load double, ptr %43725, align 16, !dbg !376
  %43730 = getelementptr inbounds { double, double }, ptr %43725, i32 0, i32 1, !dbg !376
  %43731 = load double, ptr %43730, align 8, !dbg !376
  %43732 = call { double, double } @make_vec(double %43726, double %43728, double %43729, double %43731), !dbg !376
  %43733 = extractvalue { double, double } %43732, 0, !dbg !376
  store double %43733, ptr %17, align 8, !dbg !376
  %43734 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43735 = extractvalue { double, double } %43732, 1, !dbg !376
  store double %43735, ptr %43734, align 8, !dbg !376
  %43736 = load double, ptr %16, align 8, !dbg !377
  %43737 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43738 = load double, ptr %43737, align 8, !dbg !377
  %43739 = load double, ptr %17, align 8, !dbg !377
  %43740 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43741 = load double, ptr %43740, align 8, !dbg !377
  %43742 = call double @cross(double %43736, double %43738, double %43739, double %43741), !dbg !377
  %43743 = load i32, ptr %10, align 4, !dbg !378
  %43744 = sext i32 %43743 to i64, !dbg !379
  %43745 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43744, !dbg !379
  %43746 = load double, ptr %6, align 8, !dbg !380
  %43747 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43748 = load double, ptr %43747, align 8, !dbg !380
  %43749 = load double, ptr %43745, align 16, !dbg !380
  %43750 = getelementptr inbounds { double, double }, ptr %43745, i32 0, i32 1, !dbg !380
  %43751 = load double, ptr %43750, align 8, !dbg !380
  %43752 = call { double, double } @make_vec(double %43746, double %43748, double %43749, double %43751), !dbg !380
  %43753 = extractvalue { double, double } %43752, 0, !dbg !380
  store double %43753, ptr %18, align 8, !dbg !380
  %43754 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43755 = extractvalue { double, double } %43752, 1, !dbg !380
  store double %43755, ptr %43754, align 8, !dbg !380
  %43756 = load i32, ptr %10, align 4, !dbg !381
  %43757 = add nsw i32 %43756, 1, !dbg !382
  %43758 = sext i32 %43757 to i64, !dbg !383
  %43759 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43758, !dbg !383
  %43760 = load double, ptr %6, align 8, !dbg !384
  %43761 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43762 = load double, ptr %43761, align 8, !dbg !384
  %43763 = load double, ptr %43759, align 16, !dbg !384
  %43764 = getelementptr inbounds { double, double }, ptr %43759, i32 0, i32 1, !dbg !384
  %43765 = load double, ptr %43764, align 8, !dbg !384
  %43766 = call { double, double } @make_vec(double %43760, double %43762, double %43763, double %43765), !dbg !384
  %43767 = extractvalue { double, double } %43766, 0, !dbg !384
  store double %43767, ptr %19, align 8, !dbg !384
  %43768 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43769 = extractvalue { double, double } %43766, 1, !dbg !384
  store double %43769, ptr %43768, align 8, !dbg !384
  %43770 = load double, ptr %18, align 8, !dbg !385
  %43771 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43772 = load double, ptr %43771, align 8, !dbg !385
  %43773 = load double, ptr %19, align 8, !dbg !385
  %43774 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43775 = load double, ptr %43774, align 8, !dbg !385
  %43776 = call double @dot(double %43770, double %43772, double %43773, double %43775), !dbg !385
  %43777 = call double @atan2(double noundef %43742, double noundef %43776) #6, !dbg !386
  store double %43777, ptr %13, align 8, !dbg !387
  %43778 = load double, ptr %13, align 8, !dbg !388
  %43779 = load double, ptr %14, align 8, !dbg !389
  %43780 = fadd double %43779, %43778, !dbg !389
  store double %43780, ptr %14, align 8, !dbg !389
  %43781 = load double, ptr %13, align 8, !dbg !390
  %43782 = fsub double %43781, 0x400921FB54442D18, !dbg !392
  %43783 = call double @llvm.fabs.f64(double %43782), !dbg !393
  %43784 = fcmp ole double %43783, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43784, label %14330, label %43785, !dbg !395

43785:                                            ; preds = %43708
  %43786 = load double, ptr %13, align 8, !dbg !396
  %43787 = fadd double %43786, 0x400921FB54442D18, !dbg !397
  %43788 = call double @llvm.fabs.f64(double %43787), !dbg !398
  %43789 = fcmp ole double %43788, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43789, label %14330, label %43790, !dbg !400

43790:                                            ; preds = %43785
  br label %43791, !dbg !403

43791:                                            ; preds = %43790
  %43792 = load i32, ptr %10, align 4, !dbg !404
  %43793 = add nsw i32 %43792, 1, !dbg !404
  store i32 %43793, ptr %10, align 4, !dbg !404
  %43794 = load i32, ptr %10, align 4, !dbg !364
  %43795 = load i32, ptr %8, align 4, !dbg !366
  %43796 = icmp slt i32 %43794, %43795, !dbg !367
  br i1 %43796, label %43797, label %48422, !dbg !368

43797:                                            ; preds = %43791
  %43798 = load i32, ptr %10, align 4, !dbg !369
  %43799 = sext i32 %43798 to i64, !dbg !371
  %43800 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43799, !dbg !371
  %43801 = load double, ptr %6, align 8, !dbg !372
  %43802 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43803 = load double, ptr %43802, align 8, !dbg !372
  %43804 = load double, ptr %43800, align 16, !dbg !372
  %43805 = getelementptr inbounds { double, double }, ptr %43800, i32 0, i32 1, !dbg !372
  %43806 = load double, ptr %43805, align 8, !dbg !372
  %43807 = call { double, double } @make_vec(double %43801, double %43803, double %43804, double %43806), !dbg !372
  %43808 = extractvalue { double, double } %43807, 0, !dbg !372
  store double %43808, ptr %16, align 8, !dbg !372
  %43809 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43810 = extractvalue { double, double } %43807, 1, !dbg !372
  store double %43810, ptr %43809, align 8, !dbg !372
  %43811 = load i32, ptr %10, align 4, !dbg !373
  %43812 = add nsw i32 %43811, 1, !dbg !374
  %43813 = sext i32 %43812 to i64, !dbg !375
  %43814 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43813, !dbg !375
  %43815 = load double, ptr %6, align 8, !dbg !376
  %43816 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43817 = load double, ptr %43816, align 8, !dbg !376
  %43818 = load double, ptr %43814, align 16, !dbg !376
  %43819 = getelementptr inbounds { double, double }, ptr %43814, i32 0, i32 1, !dbg !376
  %43820 = load double, ptr %43819, align 8, !dbg !376
  %43821 = call { double, double } @make_vec(double %43815, double %43817, double %43818, double %43820), !dbg !376
  %43822 = extractvalue { double, double } %43821, 0, !dbg !376
  store double %43822, ptr %17, align 8, !dbg !376
  %43823 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43824 = extractvalue { double, double } %43821, 1, !dbg !376
  store double %43824, ptr %43823, align 8, !dbg !376
  %43825 = load double, ptr %16, align 8, !dbg !377
  %43826 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43827 = load double, ptr %43826, align 8, !dbg !377
  %43828 = load double, ptr %17, align 8, !dbg !377
  %43829 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43830 = load double, ptr %43829, align 8, !dbg !377
  %43831 = call double @cross(double %43825, double %43827, double %43828, double %43830), !dbg !377
  %43832 = load i32, ptr %10, align 4, !dbg !378
  %43833 = sext i32 %43832 to i64, !dbg !379
  %43834 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43833, !dbg !379
  %43835 = load double, ptr %6, align 8, !dbg !380
  %43836 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43837 = load double, ptr %43836, align 8, !dbg !380
  %43838 = load double, ptr %43834, align 16, !dbg !380
  %43839 = getelementptr inbounds { double, double }, ptr %43834, i32 0, i32 1, !dbg !380
  %43840 = load double, ptr %43839, align 8, !dbg !380
  %43841 = call { double, double } @make_vec(double %43835, double %43837, double %43838, double %43840), !dbg !380
  %43842 = extractvalue { double, double } %43841, 0, !dbg !380
  store double %43842, ptr %18, align 8, !dbg !380
  %43843 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43844 = extractvalue { double, double } %43841, 1, !dbg !380
  store double %43844, ptr %43843, align 8, !dbg !380
  %43845 = load i32, ptr %10, align 4, !dbg !381
  %43846 = add nsw i32 %43845, 1, !dbg !382
  %43847 = sext i32 %43846 to i64, !dbg !383
  %43848 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43847, !dbg !383
  %43849 = load double, ptr %6, align 8, !dbg !384
  %43850 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43851 = load double, ptr %43850, align 8, !dbg !384
  %43852 = load double, ptr %43848, align 16, !dbg !384
  %43853 = getelementptr inbounds { double, double }, ptr %43848, i32 0, i32 1, !dbg !384
  %43854 = load double, ptr %43853, align 8, !dbg !384
  %43855 = call { double, double } @make_vec(double %43849, double %43851, double %43852, double %43854), !dbg !384
  %43856 = extractvalue { double, double } %43855, 0, !dbg !384
  store double %43856, ptr %19, align 8, !dbg !384
  %43857 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43858 = extractvalue { double, double } %43855, 1, !dbg !384
  store double %43858, ptr %43857, align 8, !dbg !384
  %43859 = load double, ptr %18, align 8, !dbg !385
  %43860 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43861 = load double, ptr %43860, align 8, !dbg !385
  %43862 = load double, ptr %19, align 8, !dbg !385
  %43863 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43864 = load double, ptr %43863, align 8, !dbg !385
  %43865 = call double @dot(double %43859, double %43861, double %43862, double %43864), !dbg !385
  %43866 = call double @atan2(double noundef %43831, double noundef %43865) #6, !dbg !386
  store double %43866, ptr %13, align 8, !dbg !387
  %43867 = load double, ptr %13, align 8, !dbg !388
  %43868 = load double, ptr %14, align 8, !dbg !389
  %43869 = fadd double %43868, %43867, !dbg !389
  store double %43869, ptr %14, align 8, !dbg !389
  %43870 = load double, ptr %13, align 8, !dbg !390
  %43871 = fsub double %43870, 0x400921FB54442D18, !dbg !392
  %43872 = call double @llvm.fabs.f64(double %43871), !dbg !393
  %43873 = fcmp ole double %43872, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43873, label %14330, label %43874, !dbg !395

43874:                                            ; preds = %43797
  %43875 = load double, ptr %13, align 8, !dbg !396
  %43876 = fadd double %43875, 0x400921FB54442D18, !dbg !397
  %43877 = call double @llvm.fabs.f64(double %43876), !dbg !398
  %43878 = fcmp ole double %43877, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43878, label %14330, label %43879, !dbg !400

43879:                                            ; preds = %43874
  br label %43880, !dbg !403

43880:                                            ; preds = %43879
  %43881 = load i32, ptr %10, align 4, !dbg !404
  %43882 = add nsw i32 %43881, 1, !dbg !404
  store i32 %43882, ptr %10, align 4, !dbg !404
  %43883 = load i32, ptr %10, align 4, !dbg !364
  %43884 = load i32, ptr %8, align 4, !dbg !366
  %43885 = icmp slt i32 %43883, %43884, !dbg !367
  br i1 %43885, label %43886, label %48422, !dbg !368

43886:                                            ; preds = %43880
  %43887 = load i32, ptr %10, align 4, !dbg !369
  %43888 = sext i32 %43887 to i64, !dbg !371
  %43889 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43888, !dbg !371
  %43890 = load double, ptr %6, align 8, !dbg !372
  %43891 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43892 = load double, ptr %43891, align 8, !dbg !372
  %43893 = load double, ptr %43889, align 16, !dbg !372
  %43894 = getelementptr inbounds { double, double }, ptr %43889, i32 0, i32 1, !dbg !372
  %43895 = load double, ptr %43894, align 8, !dbg !372
  %43896 = call { double, double } @make_vec(double %43890, double %43892, double %43893, double %43895), !dbg !372
  %43897 = extractvalue { double, double } %43896, 0, !dbg !372
  store double %43897, ptr %16, align 8, !dbg !372
  %43898 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43899 = extractvalue { double, double } %43896, 1, !dbg !372
  store double %43899, ptr %43898, align 8, !dbg !372
  %43900 = load i32, ptr %10, align 4, !dbg !373
  %43901 = add nsw i32 %43900, 1, !dbg !374
  %43902 = sext i32 %43901 to i64, !dbg !375
  %43903 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43902, !dbg !375
  %43904 = load double, ptr %6, align 8, !dbg !376
  %43905 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43906 = load double, ptr %43905, align 8, !dbg !376
  %43907 = load double, ptr %43903, align 16, !dbg !376
  %43908 = getelementptr inbounds { double, double }, ptr %43903, i32 0, i32 1, !dbg !376
  %43909 = load double, ptr %43908, align 8, !dbg !376
  %43910 = call { double, double } @make_vec(double %43904, double %43906, double %43907, double %43909), !dbg !376
  %43911 = extractvalue { double, double } %43910, 0, !dbg !376
  store double %43911, ptr %17, align 8, !dbg !376
  %43912 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %43913 = extractvalue { double, double } %43910, 1, !dbg !376
  store double %43913, ptr %43912, align 8, !dbg !376
  %43914 = load double, ptr %16, align 8, !dbg !377
  %43915 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %43916 = load double, ptr %43915, align 8, !dbg !377
  %43917 = load double, ptr %17, align 8, !dbg !377
  %43918 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %43919 = load double, ptr %43918, align 8, !dbg !377
  %43920 = call double @cross(double %43914, double %43916, double %43917, double %43919), !dbg !377
  %43921 = load i32, ptr %10, align 4, !dbg !378
  %43922 = sext i32 %43921 to i64, !dbg !379
  %43923 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43922, !dbg !379
  %43924 = load double, ptr %6, align 8, !dbg !380
  %43925 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %43926 = load double, ptr %43925, align 8, !dbg !380
  %43927 = load double, ptr %43923, align 16, !dbg !380
  %43928 = getelementptr inbounds { double, double }, ptr %43923, i32 0, i32 1, !dbg !380
  %43929 = load double, ptr %43928, align 8, !dbg !380
  %43930 = call { double, double } @make_vec(double %43924, double %43926, double %43927, double %43929), !dbg !380
  %43931 = extractvalue { double, double } %43930, 0, !dbg !380
  store double %43931, ptr %18, align 8, !dbg !380
  %43932 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %43933 = extractvalue { double, double } %43930, 1, !dbg !380
  store double %43933, ptr %43932, align 8, !dbg !380
  %43934 = load i32, ptr %10, align 4, !dbg !381
  %43935 = add nsw i32 %43934, 1, !dbg !382
  %43936 = sext i32 %43935 to i64, !dbg !383
  %43937 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43936, !dbg !383
  %43938 = load double, ptr %6, align 8, !dbg !384
  %43939 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %43940 = load double, ptr %43939, align 8, !dbg !384
  %43941 = load double, ptr %43937, align 16, !dbg !384
  %43942 = getelementptr inbounds { double, double }, ptr %43937, i32 0, i32 1, !dbg !384
  %43943 = load double, ptr %43942, align 8, !dbg !384
  %43944 = call { double, double } @make_vec(double %43938, double %43940, double %43941, double %43943), !dbg !384
  %43945 = extractvalue { double, double } %43944, 0, !dbg !384
  store double %43945, ptr %19, align 8, !dbg !384
  %43946 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %43947 = extractvalue { double, double } %43944, 1, !dbg !384
  store double %43947, ptr %43946, align 8, !dbg !384
  %43948 = load double, ptr %18, align 8, !dbg !385
  %43949 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %43950 = load double, ptr %43949, align 8, !dbg !385
  %43951 = load double, ptr %19, align 8, !dbg !385
  %43952 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %43953 = load double, ptr %43952, align 8, !dbg !385
  %43954 = call double @dot(double %43948, double %43950, double %43951, double %43953), !dbg !385
  %43955 = call double @atan2(double noundef %43920, double noundef %43954) #6, !dbg !386
  store double %43955, ptr %13, align 8, !dbg !387
  %43956 = load double, ptr %13, align 8, !dbg !388
  %43957 = load double, ptr %14, align 8, !dbg !389
  %43958 = fadd double %43957, %43956, !dbg !389
  store double %43958, ptr %14, align 8, !dbg !389
  %43959 = load double, ptr %13, align 8, !dbg !390
  %43960 = fsub double %43959, 0x400921FB54442D18, !dbg !392
  %43961 = call double @llvm.fabs.f64(double %43960), !dbg !393
  %43962 = fcmp ole double %43961, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %43962, label %14330, label %43963, !dbg !395

43963:                                            ; preds = %43886
  %43964 = load double, ptr %13, align 8, !dbg !396
  %43965 = fadd double %43964, 0x400921FB54442D18, !dbg !397
  %43966 = call double @llvm.fabs.f64(double %43965), !dbg !398
  %43967 = fcmp ole double %43966, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %43967, label %14330, label %43968, !dbg !400

43968:                                            ; preds = %43963
  br label %43969, !dbg !403

43969:                                            ; preds = %43968
  %43970 = load i32, ptr %10, align 4, !dbg !404
  %43971 = add nsw i32 %43970, 1, !dbg !404
  store i32 %43971, ptr %10, align 4, !dbg !404
  %43972 = load i32, ptr %10, align 4, !dbg !364
  %43973 = load i32, ptr %8, align 4, !dbg !366
  %43974 = icmp slt i32 %43972, %43973, !dbg !367
  br i1 %43974, label %43975, label %48422, !dbg !368

43975:                                            ; preds = %43969
  %43976 = load i32, ptr %10, align 4, !dbg !369
  %43977 = sext i32 %43976 to i64, !dbg !371
  %43978 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43977, !dbg !371
  %43979 = load double, ptr %6, align 8, !dbg !372
  %43980 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %43981 = load double, ptr %43980, align 8, !dbg !372
  %43982 = load double, ptr %43978, align 16, !dbg !372
  %43983 = getelementptr inbounds { double, double }, ptr %43978, i32 0, i32 1, !dbg !372
  %43984 = load double, ptr %43983, align 8, !dbg !372
  %43985 = call { double, double } @make_vec(double %43979, double %43981, double %43982, double %43984), !dbg !372
  %43986 = extractvalue { double, double } %43985, 0, !dbg !372
  store double %43986, ptr %16, align 8, !dbg !372
  %43987 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %43988 = extractvalue { double, double } %43985, 1, !dbg !372
  store double %43988, ptr %43987, align 8, !dbg !372
  %43989 = load i32, ptr %10, align 4, !dbg !373
  %43990 = add nsw i32 %43989, 1, !dbg !374
  %43991 = sext i32 %43990 to i64, !dbg !375
  %43992 = getelementptr inbounds %struct.POINT, ptr %26, i64 %43991, !dbg !375
  %43993 = load double, ptr %6, align 8, !dbg !376
  %43994 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %43995 = load double, ptr %43994, align 8, !dbg !376
  %43996 = load double, ptr %43992, align 16, !dbg !376
  %43997 = getelementptr inbounds { double, double }, ptr %43992, i32 0, i32 1, !dbg !376
  %43998 = load double, ptr %43997, align 8, !dbg !376
  %43999 = call { double, double } @make_vec(double %43993, double %43995, double %43996, double %43998), !dbg !376
  %44000 = extractvalue { double, double } %43999, 0, !dbg !376
  store double %44000, ptr %17, align 8, !dbg !376
  %44001 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44002 = extractvalue { double, double } %43999, 1, !dbg !376
  store double %44002, ptr %44001, align 8, !dbg !376
  %44003 = load double, ptr %16, align 8, !dbg !377
  %44004 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44005 = load double, ptr %44004, align 8, !dbg !377
  %44006 = load double, ptr %17, align 8, !dbg !377
  %44007 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44008 = load double, ptr %44007, align 8, !dbg !377
  %44009 = call double @cross(double %44003, double %44005, double %44006, double %44008), !dbg !377
  %44010 = load i32, ptr %10, align 4, !dbg !378
  %44011 = sext i32 %44010 to i64, !dbg !379
  %44012 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44011, !dbg !379
  %44013 = load double, ptr %6, align 8, !dbg !380
  %44014 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44015 = load double, ptr %44014, align 8, !dbg !380
  %44016 = load double, ptr %44012, align 16, !dbg !380
  %44017 = getelementptr inbounds { double, double }, ptr %44012, i32 0, i32 1, !dbg !380
  %44018 = load double, ptr %44017, align 8, !dbg !380
  %44019 = call { double, double } @make_vec(double %44013, double %44015, double %44016, double %44018), !dbg !380
  %44020 = extractvalue { double, double } %44019, 0, !dbg !380
  store double %44020, ptr %18, align 8, !dbg !380
  %44021 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44022 = extractvalue { double, double } %44019, 1, !dbg !380
  store double %44022, ptr %44021, align 8, !dbg !380
  %44023 = load i32, ptr %10, align 4, !dbg !381
  %44024 = add nsw i32 %44023, 1, !dbg !382
  %44025 = sext i32 %44024 to i64, !dbg !383
  %44026 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44025, !dbg !383
  %44027 = load double, ptr %6, align 8, !dbg !384
  %44028 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44029 = load double, ptr %44028, align 8, !dbg !384
  %44030 = load double, ptr %44026, align 16, !dbg !384
  %44031 = getelementptr inbounds { double, double }, ptr %44026, i32 0, i32 1, !dbg !384
  %44032 = load double, ptr %44031, align 8, !dbg !384
  %44033 = call { double, double } @make_vec(double %44027, double %44029, double %44030, double %44032), !dbg !384
  %44034 = extractvalue { double, double } %44033, 0, !dbg !384
  store double %44034, ptr %19, align 8, !dbg !384
  %44035 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44036 = extractvalue { double, double } %44033, 1, !dbg !384
  store double %44036, ptr %44035, align 8, !dbg !384
  %44037 = load double, ptr %18, align 8, !dbg !385
  %44038 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44039 = load double, ptr %44038, align 8, !dbg !385
  %44040 = load double, ptr %19, align 8, !dbg !385
  %44041 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44042 = load double, ptr %44041, align 8, !dbg !385
  %44043 = call double @dot(double %44037, double %44039, double %44040, double %44042), !dbg !385
  %44044 = call double @atan2(double noundef %44009, double noundef %44043) #6, !dbg !386
  store double %44044, ptr %13, align 8, !dbg !387
  %44045 = load double, ptr %13, align 8, !dbg !388
  %44046 = load double, ptr %14, align 8, !dbg !389
  %44047 = fadd double %44046, %44045, !dbg !389
  store double %44047, ptr %14, align 8, !dbg !389
  %44048 = load double, ptr %13, align 8, !dbg !390
  %44049 = fsub double %44048, 0x400921FB54442D18, !dbg !392
  %44050 = call double @llvm.fabs.f64(double %44049), !dbg !393
  %44051 = fcmp ole double %44050, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44051, label %14330, label %44052, !dbg !395

44052:                                            ; preds = %43975
  %44053 = load double, ptr %13, align 8, !dbg !396
  %44054 = fadd double %44053, 0x400921FB54442D18, !dbg !397
  %44055 = call double @llvm.fabs.f64(double %44054), !dbg !398
  %44056 = fcmp ole double %44055, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44056, label %14330, label %44057, !dbg !400

44057:                                            ; preds = %44052
  br label %44058, !dbg !403

44058:                                            ; preds = %44057
  %44059 = load i32, ptr %10, align 4, !dbg !404
  %44060 = add nsw i32 %44059, 1, !dbg !404
  store i32 %44060, ptr %10, align 4, !dbg !404
  %44061 = load i32, ptr %10, align 4, !dbg !364
  %44062 = load i32, ptr %8, align 4, !dbg !366
  %44063 = icmp slt i32 %44061, %44062, !dbg !367
  br i1 %44063, label %44064, label %48422, !dbg !368

44064:                                            ; preds = %44058
  %44065 = load i32, ptr %10, align 4, !dbg !369
  %44066 = sext i32 %44065 to i64, !dbg !371
  %44067 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44066, !dbg !371
  %44068 = load double, ptr %6, align 8, !dbg !372
  %44069 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44070 = load double, ptr %44069, align 8, !dbg !372
  %44071 = load double, ptr %44067, align 16, !dbg !372
  %44072 = getelementptr inbounds { double, double }, ptr %44067, i32 0, i32 1, !dbg !372
  %44073 = load double, ptr %44072, align 8, !dbg !372
  %44074 = call { double, double } @make_vec(double %44068, double %44070, double %44071, double %44073), !dbg !372
  %44075 = extractvalue { double, double } %44074, 0, !dbg !372
  store double %44075, ptr %16, align 8, !dbg !372
  %44076 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44077 = extractvalue { double, double } %44074, 1, !dbg !372
  store double %44077, ptr %44076, align 8, !dbg !372
  %44078 = load i32, ptr %10, align 4, !dbg !373
  %44079 = add nsw i32 %44078, 1, !dbg !374
  %44080 = sext i32 %44079 to i64, !dbg !375
  %44081 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44080, !dbg !375
  %44082 = load double, ptr %6, align 8, !dbg !376
  %44083 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44084 = load double, ptr %44083, align 8, !dbg !376
  %44085 = load double, ptr %44081, align 16, !dbg !376
  %44086 = getelementptr inbounds { double, double }, ptr %44081, i32 0, i32 1, !dbg !376
  %44087 = load double, ptr %44086, align 8, !dbg !376
  %44088 = call { double, double } @make_vec(double %44082, double %44084, double %44085, double %44087), !dbg !376
  %44089 = extractvalue { double, double } %44088, 0, !dbg !376
  store double %44089, ptr %17, align 8, !dbg !376
  %44090 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44091 = extractvalue { double, double } %44088, 1, !dbg !376
  store double %44091, ptr %44090, align 8, !dbg !376
  %44092 = load double, ptr %16, align 8, !dbg !377
  %44093 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44094 = load double, ptr %44093, align 8, !dbg !377
  %44095 = load double, ptr %17, align 8, !dbg !377
  %44096 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44097 = load double, ptr %44096, align 8, !dbg !377
  %44098 = call double @cross(double %44092, double %44094, double %44095, double %44097), !dbg !377
  %44099 = load i32, ptr %10, align 4, !dbg !378
  %44100 = sext i32 %44099 to i64, !dbg !379
  %44101 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44100, !dbg !379
  %44102 = load double, ptr %6, align 8, !dbg !380
  %44103 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44104 = load double, ptr %44103, align 8, !dbg !380
  %44105 = load double, ptr %44101, align 16, !dbg !380
  %44106 = getelementptr inbounds { double, double }, ptr %44101, i32 0, i32 1, !dbg !380
  %44107 = load double, ptr %44106, align 8, !dbg !380
  %44108 = call { double, double } @make_vec(double %44102, double %44104, double %44105, double %44107), !dbg !380
  %44109 = extractvalue { double, double } %44108, 0, !dbg !380
  store double %44109, ptr %18, align 8, !dbg !380
  %44110 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44111 = extractvalue { double, double } %44108, 1, !dbg !380
  store double %44111, ptr %44110, align 8, !dbg !380
  %44112 = load i32, ptr %10, align 4, !dbg !381
  %44113 = add nsw i32 %44112, 1, !dbg !382
  %44114 = sext i32 %44113 to i64, !dbg !383
  %44115 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44114, !dbg !383
  %44116 = load double, ptr %6, align 8, !dbg !384
  %44117 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44118 = load double, ptr %44117, align 8, !dbg !384
  %44119 = load double, ptr %44115, align 16, !dbg !384
  %44120 = getelementptr inbounds { double, double }, ptr %44115, i32 0, i32 1, !dbg !384
  %44121 = load double, ptr %44120, align 8, !dbg !384
  %44122 = call { double, double } @make_vec(double %44116, double %44118, double %44119, double %44121), !dbg !384
  %44123 = extractvalue { double, double } %44122, 0, !dbg !384
  store double %44123, ptr %19, align 8, !dbg !384
  %44124 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44125 = extractvalue { double, double } %44122, 1, !dbg !384
  store double %44125, ptr %44124, align 8, !dbg !384
  %44126 = load double, ptr %18, align 8, !dbg !385
  %44127 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44128 = load double, ptr %44127, align 8, !dbg !385
  %44129 = load double, ptr %19, align 8, !dbg !385
  %44130 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44131 = load double, ptr %44130, align 8, !dbg !385
  %44132 = call double @dot(double %44126, double %44128, double %44129, double %44131), !dbg !385
  %44133 = call double @atan2(double noundef %44098, double noundef %44132) #6, !dbg !386
  store double %44133, ptr %13, align 8, !dbg !387
  %44134 = load double, ptr %13, align 8, !dbg !388
  %44135 = load double, ptr %14, align 8, !dbg !389
  %44136 = fadd double %44135, %44134, !dbg !389
  store double %44136, ptr %14, align 8, !dbg !389
  %44137 = load double, ptr %13, align 8, !dbg !390
  %44138 = fsub double %44137, 0x400921FB54442D18, !dbg !392
  %44139 = call double @llvm.fabs.f64(double %44138), !dbg !393
  %44140 = fcmp ole double %44139, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44140, label %14330, label %44141, !dbg !395

44141:                                            ; preds = %44064
  %44142 = load double, ptr %13, align 8, !dbg !396
  %44143 = fadd double %44142, 0x400921FB54442D18, !dbg !397
  %44144 = call double @llvm.fabs.f64(double %44143), !dbg !398
  %44145 = fcmp ole double %44144, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44145, label %14330, label %44146, !dbg !400

44146:                                            ; preds = %44141
  br label %44147, !dbg !403

44147:                                            ; preds = %44146
  %44148 = load i32, ptr %10, align 4, !dbg !404
  %44149 = add nsw i32 %44148, 1, !dbg !404
  store i32 %44149, ptr %10, align 4, !dbg !404
  %44150 = load i32, ptr %10, align 4, !dbg !364
  %44151 = load i32, ptr %8, align 4, !dbg !366
  %44152 = icmp slt i32 %44150, %44151, !dbg !367
  br i1 %44152, label %44153, label %48422, !dbg !368

44153:                                            ; preds = %44147
  %44154 = load i32, ptr %10, align 4, !dbg !369
  %44155 = sext i32 %44154 to i64, !dbg !371
  %44156 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44155, !dbg !371
  %44157 = load double, ptr %6, align 8, !dbg !372
  %44158 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44159 = load double, ptr %44158, align 8, !dbg !372
  %44160 = load double, ptr %44156, align 16, !dbg !372
  %44161 = getelementptr inbounds { double, double }, ptr %44156, i32 0, i32 1, !dbg !372
  %44162 = load double, ptr %44161, align 8, !dbg !372
  %44163 = call { double, double } @make_vec(double %44157, double %44159, double %44160, double %44162), !dbg !372
  %44164 = extractvalue { double, double } %44163, 0, !dbg !372
  store double %44164, ptr %16, align 8, !dbg !372
  %44165 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44166 = extractvalue { double, double } %44163, 1, !dbg !372
  store double %44166, ptr %44165, align 8, !dbg !372
  %44167 = load i32, ptr %10, align 4, !dbg !373
  %44168 = add nsw i32 %44167, 1, !dbg !374
  %44169 = sext i32 %44168 to i64, !dbg !375
  %44170 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44169, !dbg !375
  %44171 = load double, ptr %6, align 8, !dbg !376
  %44172 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44173 = load double, ptr %44172, align 8, !dbg !376
  %44174 = load double, ptr %44170, align 16, !dbg !376
  %44175 = getelementptr inbounds { double, double }, ptr %44170, i32 0, i32 1, !dbg !376
  %44176 = load double, ptr %44175, align 8, !dbg !376
  %44177 = call { double, double } @make_vec(double %44171, double %44173, double %44174, double %44176), !dbg !376
  %44178 = extractvalue { double, double } %44177, 0, !dbg !376
  store double %44178, ptr %17, align 8, !dbg !376
  %44179 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44180 = extractvalue { double, double } %44177, 1, !dbg !376
  store double %44180, ptr %44179, align 8, !dbg !376
  %44181 = load double, ptr %16, align 8, !dbg !377
  %44182 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44183 = load double, ptr %44182, align 8, !dbg !377
  %44184 = load double, ptr %17, align 8, !dbg !377
  %44185 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44186 = load double, ptr %44185, align 8, !dbg !377
  %44187 = call double @cross(double %44181, double %44183, double %44184, double %44186), !dbg !377
  %44188 = load i32, ptr %10, align 4, !dbg !378
  %44189 = sext i32 %44188 to i64, !dbg !379
  %44190 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44189, !dbg !379
  %44191 = load double, ptr %6, align 8, !dbg !380
  %44192 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44193 = load double, ptr %44192, align 8, !dbg !380
  %44194 = load double, ptr %44190, align 16, !dbg !380
  %44195 = getelementptr inbounds { double, double }, ptr %44190, i32 0, i32 1, !dbg !380
  %44196 = load double, ptr %44195, align 8, !dbg !380
  %44197 = call { double, double } @make_vec(double %44191, double %44193, double %44194, double %44196), !dbg !380
  %44198 = extractvalue { double, double } %44197, 0, !dbg !380
  store double %44198, ptr %18, align 8, !dbg !380
  %44199 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44200 = extractvalue { double, double } %44197, 1, !dbg !380
  store double %44200, ptr %44199, align 8, !dbg !380
  %44201 = load i32, ptr %10, align 4, !dbg !381
  %44202 = add nsw i32 %44201, 1, !dbg !382
  %44203 = sext i32 %44202 to i64, !dbg !383
  %44204 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44203, !dbg !383
  %44205 = load double, ptr %6, align 8, !dbg !384
  %44206 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44207 = load double, ptr %44206, align 8, !dbg !384
  %44208 = load double, ptr %44204, align 16, !dbg !384
  %44209 = getelementptr inbounds { double, double }, ptr %44204, i32 0, i32 1, !dbg !384
  %44210 = load double, ptr %44209, align 8, !dbg !384
  %44211 = call { double, double } @make_vec(double %44205, double %44207, double %44208, double %44210), !dbg !384
  %44212 = extractvalue { double, double } %44211, 0, !dbg !384
  store double %44212, ptr %19, align 8, !dbg !384
  %44213 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44214 = extractvalue { double, double } %44211, 1, !dbg !384
  store double %44214, ptr %44213, align 8, !dbg !384
  %44215 = load double, ptr %18, align 8, !dbg !385
  %44216 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44217 = load double, ptr %44216, align 8, !dbg !385
  %44218 = load double, ptr %19, align 8, !dbg !385
  %44219 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44220 = load double, ptr %44219, align 8, !dbg !385
  %44221 = call double @dot(double %44215, double %44217, double %44218, double %44220), !dbg !385
  %44222 = call double @atan2(double noundef %44187, double noundef %44221) #6, !dbg !386
  store double %44222, ptr %13, align 8, !dbg !387
  %44223 = load double, ptr %13, align 8, !dbg !388
  %44224 = load double, ptr %14, align 8, !dbg !389
  %44225 = fadd double %44224, %44223, !dbg !389
  store double %44225, ptr %14, align 8, !dbg !389
  %44226 = load double, ptr %13, align 8, !dbg !390
  %44227 = fsub double %44226, 0x400921FB54442D18, !dbg !392
  %44228 = call double @llvm.fabs.f64(double %44227), !dbg !393
  %44229 = fcmp ole double %44228, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44229, label %14330, label %44230, !dbg !395

44230:                                            ; preds = %44153
  %44231 = load double, ptr %13, align 8, !dbg !396
  %44232 = fadd double %44231, 0x400921FB54442D18, !dbg !397
  %44233 = call double @llvm.fabs.f64(double %44232), !dbg !398
  %44234 = fcmp ole double %44233, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44234, label %14330, label %44235, !dbg !400

44235:                                            ; preds = %44230
  br label %44236, !dbg !403

44236:                                            ; preds = %44235
  %44237 = load i32, ptr %10, align 4, !dbg !404
  %44238 = add nsw i32 %44237, 1, !dbg !404
  store i32 %44238, ptr %10, align 4, !dbg !404
  %44239 = load i32, ptr %10, align 4, !dbg !364
  %44240 = load i32, ptr %8, align 4, !dbg !366
  %44241 = icmp slt i32 %44239, %44240, !dbg !367
  br i1 %44241, label %44242, label %48422, !dbg !368

44242:                                            ; preds = %44236
  %44243 = load i32, ptr %10, align 4, !dbg !369
  %44244 = sext i32 %44243 to i64, !dbg !371
  %44245 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44244, !dbg !371
  %44246 = load double, ptr %6, align 8, !dbg !372
  %44247 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44248 = load double, ptr %44247, align 8, !dbg !372
  %44249 = load double, ptr %44245, align 16, !dbg !372
  %44250 = getelementptr inbounds { double, double }, ptr %44245, i32 0, i32 1, !dbg !372
  %44251 = load double, ptr %44250, align 8, !dbg !372
  %44252 = call { double, double } @make_vec(double %44246, double %44248, double %44249, double %44251), !dbg !372
  %44253 = extractvalue { double, double } %44252, 0, !dbg !372
  store double %44253, ptr %16, align 8, !dbg !372
  %44254 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44255 = extractvalue { double, double } %44252, 1, !dbg !372
  store double %44255, ptr %44254, align 8, !dbg !372
  %44256 = load i32, ptr %10, align 4, !dbg !373
  %44257 = add nsw i32 %44256, 1, !dbg !374
  %44258 = sext i32 %44257 to i64, !dbg !375
  %44259 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44258, !dbg !375
  %44260 = load double, ptr %6, align 8, !dbg !376
  %44261 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44262 = load double, ptr %44261, align 8, !dbg !376
  %44263 = load double, ptr %44259, align 16, !dbg !376
  %44264 = getelementptr inbounds { double, double }, ptr %44259, i32 0, i32 1, !dbg !376
  %44265 = load double, ptr %44264, align 8, !dbg !376
  %44266 = call { double, double } @make_vec(double %44260, double %44262, double %44263, double %44265), !dbg !376
  %44267 = extractvalue { double, double } %44266, 0, !dbg !376
  store double %44267, ptr %17, align 8, !dbg !376
  %44268 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44269 = extractvalue { double, double } %44266, 1, !dbg !376
  store double %44269, ptr %44268, align 8, !dbg !376
  %44270 = load double, ptr %16, align 8, !dbg !377
  %44271 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44272 = load double, ptr %44271, align 8, !dbg !377
  %44273 = load double, ptr %17, align 8, !dbg !377
  %44274 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44275 = load double, ptr %44274, align 8, !dbg !377
  %44276 = call double @cross(double %44270, double %44272, double %44273, double %44275), !dbg !377
  %44277 = load i32, ptr %10, align 4, !dbg !378
  %44278 = sext i32 %44277 to i64, !dbg !379
  %44279 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44278, !dbg !379
  %44280 = load double, ptr %6, align 8, !dbg !380
  %44281 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44282 = load double, ptr %44281, align 8, !dbg !380
  %44283 = load double, ptr %44279, align 16, !dbg !380
  %44284 = getelementptr inbounds { double, double }, ptr %44279, i32 0, i32 1, !dbg !380
  %44285 = load double, ptr %44284, align 8, !dbg !380
  %44286 = call { double, double } @make_vec(double %44280, double %44282, double %44283, double %44285), !dbg !380
  %44287 = extractvalue { double, double } %44286, 0, !dbg !380
  store double %44287, ptr %18, align 8, !dbg !380
  %44288 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44289 = extractvalue { double, double } %44286, 1, !dbg !380
  store double %44289, ptr %44288, align 8, !dbg !380
  %44290 = load i32, ptr %10, align 4, !dbg !381
  %44291 = add nsw i32 %44290, 1, !dbg !382
  %44292 = sext i32 %44291 to i64, !dbg !383
  %44293 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44292, !dbg !383
  %44294 = load double, ptr %6, align 8, !dbg !384
  %44295 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44296 = load double, ptr %44295, align 8, !dbg !384
  %44297 = load double, ptr %44293, align 16, !dbg !384
  %44298 = getelementptr inbounds { double, double }, ptr %44293, i32 0, i32 1, !dbg !384
  %44299 = load double, ptr %44298, align 8, !dbg !384
  %44300 = call { double, double } @make_vec(double %44294, double %44296, double %44297, double %44299), !dbg !384
  %44301 = extractvalue { double, double } %44300, 0, !dbg !384
  store double %44301, ptr %19, align 8, !dbg !384
  %44302 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44303 = extractvalue { double, double } %44300, 1, !dbg !384
  store double %44303, ptr %44302, align 8, !dbg !384
  %44304 = load double, ptr %18, align 8, !dbg !385
  %44305 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44306 = load double, ptr %44305, align 8, !dbg !385
  %44307 = load double, ptr %19, align 8, !dbg !385
  %44308 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44309 = load double, ptr %44308, align 8, !dbg !385
  %44310 = call double @dot(double %44304, double %44306, double %44307, double %44309), !dbg !385
  %44311 = call double @atan2(double noundef %44276, double noundef %44310) #6, !dbg !386
  store double %44311, ptr %13, align 8, !dbg !387
  %44312 = load double, ptr %13, align 8, !dbg !388
  %44313 = load double, ptr %14, align 8, !dbg !389
  %44314 = fadd double %44313, %44312, !dbg !389
  store double %44314, ptr %14, align 8, !dbg !389
  %44315 = load double, ptr %13, align 8, !dbg !390
  %44316 = fsub double %44315, 0x400921FB54442D18, !dbg !392
  %44317 = call double @llvm.fabs.f64(double %44316), !dbg !393
  %44318 = fcmp ole double %44317, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44318, label %14330, label %44319, !dbg !395

44319:                                            ; preds = %44242
  %44320 = load double, ptr %13, align 8, !dbg !396
  %44321 = fadd double %44320, 0x400921FB54442D18, !dbg !397
  %44322 = call double @llvm.fabs.f64(double %44321), !dbg !398
  %44323 = fcmp ole double %44322, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44323, label %14330, label %44324, !dbg !400

44324:                                            ; preds = %44319
  br label %44325, !dbg !403

44325:                                            ; preds = %44324
  %44326 = load i32, ptr %10, align 4, !dbg !404
  %44327 = add nsw i32 %44326, 1, !dbg !404
  store i32 %44327, ptr %10, align 4, !dbg !404
  %44328 = load i32, ptr %10, align 4, !dbg !364
  %44329 = load i32, ptr %8, align 4, !dbg !366
  %44330 = icmp slt i32 %44328, %44329, !dbg !367
  br i1 %44330, label %44331, label %48422, !dbg !368

44331:                                            ; preds = %44325
  %44332 = load i32, ptr %10, align 4, !dbg !369
  %44333 = sext i32 %44332 to i64, !dbg !371
  %44334 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44333, !dbg !371
  %44335 = load double, ptr %6, align 8, !dbg !372
  %44336 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44337 = load double, ptr %44336, align 8, !dbg !372
  %44338 = load double, ptr %44334, align 16, !dbg !372
  %44339 = getelementptr inbounds { double, double }, ptr %44334, i32 0, i32 1, !dbg !372
  %44340 = load double, ptr %44339, align 8, !dbg !372
  %44341 = call { double, double } @make_vec(double %44335, double %44337, double %44338, double %44340), !dbg !372
  %44342 = extractvalue { double, double } %44341, 0, !dbg !372
  store double %44342, ptr %16, align 8, !dbg !372
  %44343 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44344 = extractvalue { double, double } %44341, 1, !dbg !372
  store double %44344, ptr %44343, align 8, !dbg !372
  %44345 = load i32, ptr %10, align 4, !dbg !373
  %44346 = add nsw i32 %44345, 1, !dbg !374
  %44347 = sext i32 %44346 to i64, !dbg !375
  %44348 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44347, !dbg !375
  %44349 = load double, ptr %6, align 8, !dbg !376
  %44350 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44351 = load double, ptr %44350, align 8, !dbg !376
  %44352 = load double, ptr %44348, align 16, !dbg !376
  %44353 = getelementptr inbounds { double, double }, ptr %44348, i32 0, i32 1, !dbg !376
  %44354 = load double, ptr %44353, align 8, !dbg !376
  %44355 = call { double, double } @make_vec(double %44349, double %44351, double %44352, double %44354), !dbg !376
  %44356 = extractvalue { double, double } %44355, 0, !dbg !376
  store double %44356, ptr %17, align 8, !dbg !376
  %44357 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44358 = extractvalue { double, double } %44355, 1, !dbg !376
  store double %44358, ptr %44357, align 8, !dbg !376
  %44359 = load double, ptr %16, align 8, !dbg !377
  %44360 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44361 = load double, ptr %44360, align 8, !dbg !377
  %44362 = load double, ptr %17, align 8, !dbg !377
  %44363 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44364 = load double, ptr %44363, align 8, !dbg !377
  %44365 = call double @cross(double %44359, double %44361, double %44362, double %44364), !dbg !377
  %44366 = load i32, ptr %10, align 4, !dbg !378
  %44367 = sext i32 %44366 to i64, !dbg !379
  %44368 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44367, !dbg !379
  %44369 = load double, ptr %6, align 8, !dbg !380
  %44370 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44371 = load double, ptr %44370, align 8, !dbg !380
  %44372 = load double, ptr %44368, align 16, !dbg !380
  %44373 = getelementptr inbounds { double, double }, ptr %44368, i32 0, i32 1, !dbg !380
  %44374 = load double, ptr %44373, align 8, !dbg !380
  %44375 = call { double, double } @make_vec(double %44369, double %44371, double %44372, double %44374), !dbg !380
  %44376 = extractvalue { double, double } %44375, 0, !dbg !380
  store double %44376, ptr %18, align 8, !dbg !380
  %44377 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44378 = extractvalue { double, double } %44375, 1, !dbg !380
  store double %44378, ptr %44377, align 8, !dbg !380
  %44379 = load i32, ptr %10, align 4, !dbg !381
  %44380 = add nsw i32 %44379, 1, !dbg !382
  %44381 = sext i32 %44380 to i64, !dbg !383
  %44382 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44381, !dbg !383
  %44383 = load double, ptr %6, align 8, !dbg !384
  %44384 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44385 = load double, ptr %44384, align 8, !dbg !384
  %44386 = load double, ptr %44382, align 16, !dbg !384
  %44387 = getelementptr inbounds { double, double }, ptr %44382, i32 0, i32 1, !dbg !384
  %44388 = load double, ptr %44387, align 8, !dbg !384
  %44389 = call { double, double } @make_vec(double %44383, double %44385, double %44386, double %44388), !dbg !384
  %44390 = extractvalue { double, double } %44389, 0, !dbg !384
  store double %44390, ptr %19, align 8, !dbg !384
  %44391 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44392 = extractvalue { double, double } %44389, 1, !dbg !384
  store double %44392, ptr %44391, align 8, !dbg !384
  %44393 = load double, ptr %18, align 8, !dbg !385
  %44394 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44395 = load double, ptr %44394, align 8, !dbg !385
  %44396 = load double, ptr %19, align 8, !dbg !385
  %44397 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44398 = load double, ptr %44397, align 8, !dbg !385
  %44399 = call double @dot(double %44393, double %44395, double %44396, double %44398), !dbg !385
  %44400 = call double @atan2(double noundef %44365, double noundef %44399) #6, !dbg !386
  store double %44400, ptr %13, align 8, !dbg !387
  %44401 = load double, ptr %13, align 8, !dbg !388
  %44402 = load double, ptr %14, align 8, !dbg !389
  %44403 = fadd double %44402, %44401, !dbg !389
  store double %44403, ptr %14, align 8, !dbg !389
  %44404 = load double, ptr %13, align 8, !dbg !390
  %44405 = fsub double %44404, 0x400921FB54442D18, !dbg !392
  %44406 = call double @llvm.fabs.f64(double %44405), !dbg !393
  %44407 = fcmp ole double %44406, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44407, label %14330, label %44408, !dbg !395

44408:                                            ; preds = %44331
  %44409 = load double, ptr %13, align 8, !dbg !396
  %44410 = fadd double %44409, 0x400921FB54442D18, !dbg !397
  %44411 = call double @llvm.fabs.f64(double %44410), !dbg !398
  %44412 = fcmp ole double %44411, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44412, label %14330, label %44413, !dbg !400

44413:                                            ; preds = %44408
  br label %44414, !dbg !403

44414:                                            ; preds = %44413
  %44415 = load i32, ptr %10, align 4, !dbg !404
  %44416 = add nsw i32 %44415, 1, !dbg !404
  store i32 %44416, ptr %10, align 4, !dbg !404
  %44417 = load i32, ptr %10, align 4, !dbg !364
  %44418 = load i32, ptr %8, align 4, !dbg !366
  %44419 = icmp slt i32 %44417, %44418, !dbg !367
  br i1 %44419, label %44420, label %48422, !dbg !368

44420:                                            ; preds = %44414
  %44421 = load i32, ptr %10, align 4, !dbg !369
  %44422 = sext i32 %44421 to i64, !dbg !371
  %44423 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44422, !dbg !371
  %44424 = load double, ptr %6, align 8, !dbg !372
  %44425 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44426 = load double, ptr %44425, align 8, !dbg !372
  %44427 = load double, ptr %44423, align 16, !dbg !372
  %44428 = getelementptr inbounds { double, double }, ptr %44423, i32 0, i32 1, !dbg !372
  %44429 = load double, ptr %44428, align 8, !dbg !372
  %44430 = call { double, double } @make_vec(double %44424, double %44426, double %44427, double %44429), !dbg !372
  %44431 = extractvalue { double, double } %44430, 0, !dbg !372
  store double %44431, ptr %16, align 8, !dbg !372
  %44432 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44433 = extractvalue { double, double } %44430, 1, !dbg !372
  store double %44433, ptr %44432, align 8, !dbg !372
  %44434 = load i32, ptr %10, align 4, !dbg !373
  %44435 = add nsw i32 %44434, 1, !dbg !374
  %44436 = sext i32 %44435 to i64, !dbg !375
  %44437 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44436, !dbg !375
  %44438 = load double, ptr %6, align 8, !dbg !376
  %44439 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44440 = load double, ptr %44439, align 8, !dbg !376
  %44441 = load double, ptr %44437, align 16, !dbg !376
  %44442 = getelementptr inbounds { double, double }, ptr %44437, i32 0, i32 1, !dbg !376
  %44443 = load double, ptr %44442, align 8, !dbg !376
  %44444 = call { double, double } @make_vec(double %44438, double %44440, double %44441, double %44443), !dbg !376
  %44445 = extractvalue { double, double } %44444, 0, !dbg !376
  store double %44445, ptr %17, align 8, !dbg !376
  %44446 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44447 = extractvalue { double, double } %44444, 1, !dbg !376
  store double %44447, ptr %44446, align 8, !dbg !376
  %44448 = load double, ptr %16, align 8, !dbg !377
  %44449 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44450 = load double, ptr %44449, align 8, !dbg !377
  %44451 = load double, ptr %17, align 8, !dbg !377
  %44452 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44453 = load double, ptr %44452, align 8, !dbg !377
  %44454 = call double @cross(double %44448, double %44450, double %44451, double %44453), !dbg !377
  %44455 = load i32, ptr %10, align 4, !dbg !378
  %44456 = sext i32 %44455 to i64, !dbg !379
  %44457 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44456, !dbg !379
  %44458 = load double, ptr %6, align 8, !dbg !380
  %44459 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44460 = load double, ptr %44459, align 8, !dbg !380
  %44461 = load double, ptr %44457, align 16, !dbg !380
  %44462 = getelementptr inbounds { double, double }, ptr %44457, i32 0, i32 1, !dbg !380
  %44463 = load double, ptr %44462, align 8, !dbg !380
  %44464 = call { double, double } @make_vec(double %44458, double %44460, double %44461, double %44463), !dbg !380
  %44465 = extractvalue { double, double } %44464, 0, !dbg !380
  store double %44465, ptr %18, align 8, !dbg !380
  %44466 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44467 = extractvalue { double, double } %44464, 1, !dbg !380
  store double %44467, ptr %44466, align 8, !dbg !380
  %44468 = load i32, ptr %10, align 4, !dbg !381
  %44469 = add nsw i32 %44468, 1, !dbg !382
  %44470 = sext i32 %44469 to i64, !dbg !383
  %44471 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44470, !dbg !383
  %44472 = load double, ptr %6, align 8, !dbg !384
  %44473 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44474 = load double, ptr %44473, align 8, !dbg !384
  %44475 = load double, ptr %44471, align 16, !dbg !384
  %44476 = getelementptr inbounds { double, double }, ptr %44471, i32 0, i32 1, !dbg !384
  %44477 = load double, ptr %44476, align 8, !dbg !384
  %44478 = call { double, double } @make_vec(double %44472, double %44474, double %44475, double %44477), !dbg !384
  %44479 = extractvalue { double, double } %44478, 0, !dbg !384
  store double %44479, ptr %19, align 8, !dbg !384
  %44480 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44481 = extractvalue { double, double } %44478, 1, !dbg !384
  store double %44481, ptr %44480, align 8, !dbg !384
  %44482 = load double, ptr %18, align 8, !dbg !385
  %44483 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44484 = load double, ptr %44483, align 8, !dbg !385
  %44485 = load double, ptr %19, align 8, !dbg !385
  %44486 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44487 = load double, ptr %44486, align 8, !dbg !385
  %44488 = call double @dot(double %44482, double %44484, double %44485, double %44487), !dbg !385
  %44489 = call double @atan2(double noundef %44454, double noundef %44488) #6, !dbg !386
  store double %44489, ptr %13, align 8, !dbg !387
  %44490 = load double, ptr %13, align 8, !dbg !388
  %44491 = load double, ptr %14, align 8, !dbg !389
  %44492 = fadd double %44491, %44490, !dbg !389
  store double %44492, ptr %14, align 8, !dbg !389
  %44493 = load double, ptr %13, align 8, !dbg !390
  %44494 = fsub double %44493, 0x400921FB54442D18, !dbg !392
  %44495 = call double @llvm.fabs.f64(double %44494), !dbg !393
  %44496 = fcmp ole double %44495, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44496, label %14330, label %44497, !dbg !395

44497:                                            ; preds = %44420
  %44498 = load double, ptr %13, align 8, !dbg !396
  %44499 = fadd double %44498, 0x400921FB54442D18, !dbg !397
  %44500 = call double @llvm.fabs.f64(double %44499), !dbg !398
  %44501 = fcmp ole double %44500, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44501, label %14330, label %44502, !dbg !400

44502:                                            ; preds = %44497
  br label %44503, !dbg !403

44503:                                            ; preds = %44502
  %44504 = load i32, ptr %10, align 4, !dbg !404
  %44505 = add nsw i32 %44504, 1, !dbg !404
  store i32 %44505, ptr %10, align 4, !dbg !404
  %44506 = load i32, ptr %10, align 4, !dbg !364
  %44507 = load i32, ptr %8, align 4, !dbg !366
  %44508 = icmp slt i32 %44506, %44507, !dbg !367
  br i1 %44508, label %44509, label %48422, !dbg !368

44509:                                            ; preds = %44503
  %44510 = load i32, ptr %10, align 4, !dbg !369
  %44511 = sext i32 %44510 to i64, !dbg !371
  %44512 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44511, !dbg !371
  %44513 = load double, ptr %6, align 8, !dbg !372
  %44514 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44515 = load double, ptr %44514, align 8, !dbg !372
  %44516 = load double, ptr %44512, align 16, !dbg !372
  %44517 = getelementptr inbounds { double, double }, ptr %44512, i32 0, i32 1, !dbg !372
  %44518 = load double, ptr %44517, align 8, !dbg !372
  %44519 = call { double, double } @make_vec(double %44513, double %44515, double %44516, double %44518), !dbg !372
  %44520 = extractvalue { double, double } %44519, 0, !dbg !372
  store double %44520, ptr %16, align 8, !dbg !372
  %44521 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44522 = extractvalue { double, double } %44519, 1, !dbg !372
  store double %44522, ptr %44521, align 8, !dbg !372
  %44523 = load i32, ptr %10, align 4, !dbg !373
  %44524 = add nsw i32 %44523, 1, !dbg !374
  %44525 = sext i32 %44524 to i64, !dbg !375
  %44526 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44525, !dbg !375
  %44527 = load double, ptr %6, align 8, !dbg !376
  %44528 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44529 = load double, ptr %44528, align 8, !dbg !376
  %44530 = load double, ptr %44526, align 16, !dbg !376
  %44531 = getelementptr inbounds { double, double }, ptr %44526, i32 0, i32 1, !dbg !376
  %44532 = load double, ptr %44531, align 8, !dbg !376
  %44533 = call { double, double } @make_vec(double %44527, double %44529, double %44530, double %44532), !dbg !376
  %44534 = extractvalue { double, double } %44533, 0, !dbg !376
  store double %44534, ptr %17, align 8, !dbg !376
  %44535 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44536 = extractvalue { double, double } %44533, 1, !dbg !376
  store double %44536, ptr %44535, align 8, !dbg !376
  %44537 = load double, ptr %16, align 8, !dbg !377
  %44538 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44539 = load double, ptr %44538, align 8, !dbg !377
  %44540 = load double, ptr %17, align 8, !dbg !377
  %44541 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44542 = load double, ptr %44541, align 8, !dbg !377
  %44543 = call double @cross(double %44537, double %44539, double %44540, double %44542), !dbg !377
  %44544 = load i32, ptr %10, align 4, !dbg !378
  %44545 = sext i32 %44544 to i64, !dbg !379
  %44546 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44545, !dbg !379
  %44547 = load double, ptr %6, align 8, !dbg !380
  %44548 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44549 = load double, ptr %44548, align 8, !dbg !380
  %44550 = load double, ptr %44546, align 16, !dbg !380
  %44551 = getelementptr inbounds { double, double }, ptr %44546, i32 0, i32 1, !dbg !380
  %44552 = load double, ptr %44551, align 8, !dbg !380
  %44553 = call { double, double } @make_vec(double %44547, double %44549, double %44550, double %44552), !dbg !380
  %44554 = extractvalue { double, double } %44553, 0, !dbg !380
  store double %44554, ptr %18, align 8, !dbg !380
  %44555 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44556 = extractvalue { double, double } %44553, 1, !dbg !380
  store double %44556, ptr %44555, align 8, !dbg !380
  %44557 = load i32, ptr %10, align 4, !dbg !381
  %44558 = add nsw i32 %44557, 1, !dbg !382
  %44559 = sext i32 %44558 to i64, !dbg !383
  %44560 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44559, !dbg !383
  %44561 = load double, ptr %6, align 8, !dbg !384
  %44562 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44563 = load double, ptr %44562, align 8, !dbg !384
  %44564 = load double, ptr %44560, align 16, !dbg !384
  %44565 = getelementptr inbounds { double, double }, ptr %44560, i32 0, i32 1, !dbg !384
  %44566 = load double, ptr %44565, align 8, !dbg !384
  %44567 = call { double, double } @make_vec(double %44561, double %44563, double %44564, double %44566), !dbg !384
  %44568 = extractvalue { double, double } %44567, 0, !dbg !384
  store double %44568, ptr %19, align 8, !dbg !384
  %44569 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44570 = extractvalue { double, double } %44567, 1, !dbg !384
  store double %44570, ptr %44569, align 8, !dbg !384
  %44571 = load double, ptr %18, align 8, !dbg !385
  %44572 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44573 = load double, ptr %44572, align 8, !dbg !385
  %44574 = load double, ptr %19, align 8, !dbg !385
  %44575 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44576 = load double, ptr %44575, align 8, !dbg !385
  %44577 = call double @dot(double %44571, double %44573, double %44574, double %44576), !dbg !385
  %44578 = call double @atan2(double noundef %44543, double noundef %44577) #6, !dbg !386
  store double %44578, ptr %13, align 8, !dbg !387
  %44579 = load double, ptr %13, align 8, !dbg !388
  %44580 = load double, ptr %14, align 8, !dbg !389
  %44581 = fadd double %44580, %44579, !dbg !389
  store double %44581, ptr %14, align 8, !dbg !389
  %44582 = load double, ptr %13, align 8, !dbg !390
  %44583 = fsub double %44582, 0x400921FB54442D18, !dbg !392
  %44584 = call double @llvm.fabs.f64(double %44583), !dbg !393
  %44585 = fcmp ole double %44584, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44585, label %14330, label %44586, !dbg !395

44586:                                            ; preds = %44509
  %44587 = load double, ptr %13, align 8, !dbg !396
  %44588 = fadd double %44587, 0x400921FB54442D18, !dbg !397
  %44589 = call double @llvm.fabs.f64(double %44588), !dbg !398
  %44590 = fcmp ole double %44589, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44590, label %14330, label %44591, !dbg !400

44591:                                            ; preds = %44586
  br label %44592, !dbg !403

44592:                                            ; preds = %44591
  %44593 = load i32, ptr %10, align 4, !dbg !404
  %44594 = add nsw i32 %44593, 1, !dbg !404
  store i32 %44594, ptr %10, align 4, !dbg !404
  %44595 = load i32, ptr %10, align 4, !dbg !364
  %44596 = load i32, ptr %8, align 4, !dbg !366
  %44597 = icmp slt i32 %44595, %44596, !dbg !367
  br i1 %44597, label %44598, label %48422, !dbg !368

44598:                                            ; preds = %44592
  %44599 = load i32, ptr %10, align 4, !dbg !369
  %44600 = sext i32 %44599 to i64, !dbg !371
  %44601 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44600, !dbg !371
  %44602 = load double, ptr %6, align 8, !dbg !372
  %44603 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44604 = load double, ptr %44603, align 8, !dbg !372
  %44605 = load double, ptr %44601, align 16, !dbg !372
  %44606 = getelementptr inbounds { double, double }, ptr %44601, i32 0, i32 1, !dbg !372
  %44607 = load double, ptr %44606, align 8, !dbg !372
  %44608 = call { double, double } @make_vec(double %44602, double %44604, double %44605, double %44607), !dbg !372
  %44609 = extractvalue { double, double } %44608, 0, !dbg !372
  store double %44609, ptr %16, align 8, !dbg !372
  %44610 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44611 = extractvalue { double, double } %44608, 1, !dbg !372
  store double %44611, ptr %44610, align 8, !dbg !372
  %44612 = load i32, ptr %10, align 4, !dbg !373
  %44613 = add nsw i32 %44612, 1, !dbg !374
  %44614 = sext i32 %44613 to i64, !dbg !375
  %44615 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44614, !dbg !375
  %44616 = load double, ptr %6, align 8, !dbg !376
  %44617 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44618 = load double, ptr %44617, align 8, !dbg !376
  %44619 = load double, ptr %44615, align 16, !dbg !376
  %44620 = getelementptr inbounds { double, double }, ptr %44615, i32 0, i32 1, !dbg !376
  %44621 = load double, ptr %44620, align 8, !dbg !376
  %44622 = call { double, double } @make_vec(double %44616, double %44618, double %44619, double %44621), !dbg !376
  %44623 = extractvalue { double, double } %44622, 0, !dbg !376
  store double %44623, ptr %17, align 8, !dbg !376
  %44624 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44625 = extractvalue { double, double } %44622, 1, !dbg !376
  store double %44625, ptr %44624, align 8, !dbg !376
  %44626 = load double, ptr %16, align 8, !dbg !377
  %44627 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44628 = load double, ptr %44627, align 8, !dbg !377
  %44629 = load double, ptr %17, align 8, !dbg !377
  %44630 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44631 = load double, ptr %44630, align 8, !dbg !377
  %44632 = call double @cross(double %44626, double %44628, double %44629, double %44631), !dbg !377
  %44633 = load i32, ptr %10, align 4, !dbg !378
  %44634 = sext i32 %44633 to i64, !dbg !379
  %44635 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44634, !dbg !379
  %44636 = load double, ptr %6, align 8, !dbg !380
  %44637 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44638 = load double, ptr %44637, align 8, !dbg !380
  %44639 = load double, ptr %44635, align 16, !dbg !380
  %44640 = getelementptr inbounds { double, double }, ptr %44635, i32 0, i32 1, !dbg !380
  %44641 = load double, ptr %44640, align 8, !dbg !380
  %44642 = call { double, double } @make_vec(double %44636, double %44638, double %44639, double %44641), !dbg !380
  %44643 = extractvalue { double, double } %44642, 0, !dbg !380
  store double %44643, ptr %18, align 8, !dbg !380
  %44644 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44645 = extractvalue { double, double } %44642, 1, !dbg !380
  store double %44645, ptr %44644, align 8, !dbg !380
  %44646 = load i32, ptr %10, align 4, !dbg !381
  %44647 = add nsw i32 %44646, 1, !dbg !382
  %44648 = sext i32 %44647 to i64, !dbg !383
  %44649 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44648, !dbg !383
  %44650 = load double, ptr %6, align 8, !dbg !384
  %44651 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44652 = load double, ptr %44651, align 8, !dbg !384
  %44653 = load double, ptr %44649, align 16, !dbg !384
  %44654 = getelementptr inbounds { double, double }, ptr %44649, i32 0, i32 1, !dbg !384
  %44655 = load double, ptr %44654, align 8, !dbg !384
  %44656 = call { double, double } @make_vec(double %44650, double %44652, double %44653, double %44655), !dbg !384
  %44657 = extractvalue { double, double } %44656, 0, !dbg !384
  store double %44657, ptr %19, align 8, !dbg !384
  %44658 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44659 = extractvalue { double, double } %44656, 1, !dbg !384
  store double %44659, ptr %44658, align 8, !dbg !384
  %44660 = load double, ptr %18, align 8, !dbg !385
  %44661 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44662 = load double, ptr %44661, align 8, !dbg !385
  %44663 = load double, ptr %19, align 8, !dbg !385
  %44664 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44665 = load double, ptr %44664, align 8, !dbg !385
  %44666 = call double @dot(double %44660, double %44662, double %44663, double %44665), !dbg !385
  %44667 = call double @atan2(double noundef %44632, double noundef %44666) #6, !dbg !386
  store double %44667, ptr %13, align 8, !dbg !387
  %44668 = load double, ptr %13, align 8, !dbg !388
  %44669 = load double, ptr %14, align 8, !dbg !389
  %44670 = fadd double %44669, %44668, !dbg !389
  store double %44670, ptr %14, align 8, !dbg !389
  %44671 = load double, ptr %13, align 8, !dbg !390
  %44672 = fsub double %44671, 0x400921FB54442D18, !dbg !392
  %44673 = call double @llvm.fabs.f64(double %44672), !dbg !393
  %44674 = fcmp ole double %44673, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44674, label %14330, label %44675, !dbg !395

44675:                                            ; preds = %44598
  %44676 = load double, ptr %13, align 8, !dbg !396
  %44677 = fadd double %44676, 0x400921FB54442D18, !dbg !397
  %44678 = call double @llvm.fabs.f64(double %44677), !dbg !398
  %44679 = fcmp ole double %44678, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44679, label %14330, label %44680, !dbg !400

44680:                                            ; preds = %44675
  br label %44681, !dbg !403

44681:                                            ; preds = %44680
  %44682 = load i32, ptr %10, align 4, !dbg !404
  %44683 = add nsw i32 %44682, 1, !dbg !404
  store i32 %44683, ptr %10, align 4, !dbg !404
  %44684 = load i32, ptr %10, align 4, !dbg !364
  %44685 = load i32, ptr %8, align 4, !dbg !366
  %44686 = icmp slt i32 %44684, %44685, !dbg !367
  br i1 %44686, label %44687, label %48422, !dbg !368

44687:                                            ; preds = %44681
  %44688 = load i32, ptr %10, align 4, !dbg !369
  %44689 = sext i32 %44688 to i64, !dbg !371
  %44690 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44689, !dbg !371
  %44691 = load double, ptr %6, align 8, !dbg !372
  %44692 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44693 = load double, ptr %44692, align 8, !dbg !372
  %44694 = load double, ptr %44690, align 16, !dbg !372
  %44695 = getelementptr inbounds { double, double }, ptr %44690, i32 0, i32 1, !dbg !372
  %44696 = load double, ptr %44695, align 8, !dbg !372
  %44697 = call { double, double } @make_vec(double %44691, double %44693, double %44694, double %44696), !dbg !372
  %44698 = extractvalue { double, double } %44697, 0, !dbg !372
  store double %44698, ptr %16, align 8, !dbg !372
  %44699 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44700 = extractvalue { double, double } %44697, 1, !dbg !372
  store double %44700, ptr %44699, align 8, !dbg !372
  %44701 = load i32, ptr %10, align 4, !dbg !373
  %44702 = add nsw i32 %44701, 1, !dbg !374
  %44703 = sext i32 %44702 to i64, !dbg !375
  %44704 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44703, !dbg !375
  %44705 = load double, ptr %6, align 8, !dbg !376
  %44706 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44707 = load double, ptr %44706, align 8, !dbg !376
  %44708 = load double, ptr %44704, align 16, !dbg !376
  %44709 = getelementptr inbounds { double, double }, ptr %44704, i32 0, i32 1, !dbg !376
  %44710 = load double, ptr %44709, align 8, !dbg !376
  %44711 = call { double, double } @make_vec(double %44705, double %44707, double %44708, double %44710), !dbg !376
  %44712 = extractvalue { double, double } %44711, 0, !dbg !376
  store double %44712, ptr %17, align 8, !dbg !376
  %44713 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44714 = extractvalue { double, double } %44711, 1, !dbg !376
  store double %44714, ptr %44713, align 8, !dbg !376
  %44715 = load double, ptr %16, align 8, !dbg !377
  %44716 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44717 = load double, ptr %44716, align 8, !dbg !377
  %44718 = load double, ptr %17, align 8, !dbg !377
  %44719 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44720 = load double, ptr %44719, align 8, !dbg !377
  %44721 = call double @cross(double %44715, double %44717, double %44718, double %44720), !dbg !377
  %44722 = load i32, ptr %10, align 4, !dbg !378
  %44723 = sext i32 %44722 to i64, !dbg !379
  %44724 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44723, !dbg !379
  %44725 = load double, ptr %6, align 8, !dbg !380
  %44726 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44727 = load double, ptr %44726, align 8, !dbg !380
  %44728 = load double, ptr %44724, align 16, !dbg !380
  %44729 = getelementptr inbounds { double, double }, ptr %44724, i32 0, i32 1, !dbg !380
  %44730 = load double, ptr %44729, align 8, !dbg !380
  %44731 = call { double, double } @make_vec(double %44725, double %44727, double %44728, double %44730), !dbg !380
  %44732 = extractvalue { double, double } %44731, 0, !dbg !380
  store double %44732, ptr %18, align 8, !dbg !380
  %44733 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44734 = extractvalue { double, double } %44731, 1, !dbg !380
  store double %44734, ptr %44733, align 8, !dbg !380
  %44735 = load i32, ptr %10, align 4, !dbg !381
  %44736 = add nsw i32 %44735, 1, !dbg !382
  %44737 = sext i32 %44736 to i64, !dbg !383
  %44738 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44737, !dbg !383
  %44739 = load double, ptr %6, align 8, !dbg !384
  %44740 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44741 = load double, ptr %44740, align 8, !dbg !384
  %44742 = load double, ptr %44738, align 16, !dbg !384
  %44743 = getelementptr inbounds { double, double }, ptr %44738, i32 0, i32 1, !dbg !384
  %44744 = load double, ptr %44743, align 8, !dbg !384
  %44745 = call { double, double } @make_vec(double %44739, double %44741, double %44742, double %44744), !dbg !384
  %44746 = extractvalue { double, double } %44745, 0, !dbg !384
  store double %44746, ptr %19, align 8, !dbg !384
  %44747 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44748 = extractvalue { double, double } %44745, 1, !dbg !384
  store double %44748, ptr %44747, align 8, !dbg !384
  %44749 = load double, ptr %18, align 8, !dbg !385
  %44750 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44751 = load double, ptr %44750, align 8, !dbg !385
  %44752 = load double, ptr %19, align 8, !dbg !385
  %44753 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44754 = load double, ptr %44753, align 8, !dbg !385
  %44755 = call double @dot(double %44749, double %44751, double %44752, double %44754), !dbg !385
  %44756 = call double @atan2(double noundef %44721, double noundef %44755) #6, !dbg !386
  store double %44756, ptr %13, align 8, !dbg !387
  %44757 = load double, ptr %13, align 8, !dbg !388
  %44758 = load double, ptr %14, align 8, !dbg !389
  %44759 = fadd double %44758, %44757, !dbg !389
  store double %44759, ptr %14, align 8, !dbg !389
  %44760 = load double, ptr %13, align 8, !dbg !390
  %44761 = fsub double %44760, 0x400921FB54442D18, !dbg !392
  %44762 = call double @llvm.fabs.f64(double %44761), !dbg !393
  %44763 = fcmp ole double %44762, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44763, label %14330, label %44764, !dbg !395

44764:                                            ; preds = %44687
  %44765 = load double, ptr %13, align 8, !dbg !396
  %44766 = fadd double %44765, 0x400921FB54442D18, !dbg !397
  %44767 = call double @llvm.fabs.f64(double %44766), !dbg !398
  %44768 = fcmp ole double %44767, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44768, label %14330, label %44769, !dbg !400

44769:                                            ; preds = %44764
  br label %44770, !dbg !403

44770:                                            ; preds = %44769
  %44771 = load i32, ptr %10, align 4, !dbg !404
  %44772 = add nsw i32 %44771, 1, !dbg !404
  store i32 %44772, ptr %10, align 4, !dbg !404
  %44773 = load i32, ptr %10, align 4, !dbg !364
  %44774 = load i32, ptr %8, align 4, !dbg !366
  %44775 = icmp slt i32 %44773, %44774, !dbg !367
  br i1 %44775, label %44776, label %48422, !dbg !368

44776:                                            ; preds = %44770
  %44777 = load i32, ptr %10, align 4, !dbg !369
  %44778 = sext i32 %44777 to i64, !dbg !371
  %44779 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44778, !dbg !371
  %44780 = load double, ptr %6, align 8, !dbg !372
  %44781 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44782 = load double, ptr %44781, align 8, !dbg !372
  %44783 = load double, ptr %44779, align 16, !dbg !372
  %44784 = getelementptr inbounds { double, double }, ptr %44779, i32 0, i32 1, !dbg !372
  %44785 = load double, ptr %44784, align 8, !dbg !372
  %44786 = call { double, double } @make_vec(double %44780, double %44782, double %44783, double %44785), !dbg !372
  %44787 = extractvalue { double, double } %44786, 0, !dbg !372
  store double %44787, ptr %16, align 8, !dbg !372
  %44788 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44789 = extractvalue { double, double } %44786, 1, !dbg !372
  store double %44789, ptr %44788, align 8, !dbg !372
  %44790 = load i32, ptr %10, align 4, !dbg !373
  %44791 = add nsw i32 %44790, 1, !dbg !374
  %44792 = sext i32 %44791 to i64, !dbg !375
  %44793 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44792, !dbg !375
  %44794 = load double, ptr %6, align 8, !dbg !376
  %44795 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44796 = load double, ptr %44795, align 8, !dbg !376
  %44797 = load double, ptr %44793, align 16, !dbg !376
  %44798 = getelementptr inbounds { double, double }, ptr %44793, i32 0, i32 1, !dbg !376
  %44799 = load double, ptr %44798, align 8, !dbg !376
  %44800 = call { double, double } @make_vec(double %44794, double %44796, double %44797, double %44799), !dbg !376
  %44801 = extractvalue { double, double } %44800, 0, !dbg !376
  store double %44801, ptr %17, align 8, !dbg !376
  %44802 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44803 = extractvalue { double, double } %44800, 1, !dbg !376
  store double %44803, ptr %44802, align 8, !dbg !376
  %44804 = load double, ptr %16, align 8, !dbg !377
  %44805 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44806 = load double, ptr %44805, align 8, !dbg !377
  %44807 = load double, ptr %17, align 8, !dbg !377
  %44808 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44809 = load double, ptr %44808, align 8, !dbg !377
  %44810 = call double @cross(double %44804, double %44806, double %44807, double %44809), !dbg !377
  %44811 = load i32, ptr %10, align 4, !dbg !378
  %44812 = sext i32 %44811 to i64, !dbg !379
  %44813 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44812, !dbg !379
  %44814 = load double, ptr %6, align 8, !dbg !380
  %44815 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44816 = load double, ptr %44815, align 8, !dbg !380
  %44817 = load double, ptr %44813, align 16, !dbg !380
  %44818 = getelementptr inbounds { double, double }, ptr %44813, i32 0, i32 1, !dbg !380
  %44819 = load double, ptr %44818, align 8, !dbg !380
  %44820 = call { double, double } @make_vec(double %44814, double %44816, double %44817, double %44819), !dbg !380
  %44821 = extractvalue { double, double } %44820, 0, !dbg !380
  store double %44821, ptr %18, align 8, !dbg !380
  %44822 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44823 = extractvalue { double, double } %44820, 1, !dbg !380
  store double %44823, ptr %44822, align 8, !dbg !380
  %44824 = load i32, ptr %10, align 4, !dbg !381
  %44825 = add nsw i32 %44824, 1, !dbg !382
  %44826 = sext i32 %44825 to i64, !dbg !383
  %44827 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44826, !dbg !383
  %44828 = load double, ptr %6, align 8, !dbg !384
  %44829 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44830 = load double, ptr %44829, align 8, !dbg !384
  %44831 = load double, ptr %44827, align 16, !dbg !384
  %44832 = getelementptr inbounds { double, double }, ptr %44827, i32 0, i32 1, !dbg !384
  %44833 = load double, ptr %44832, align 8, !dbg !384
  %44834 = call { double, double } @make_vec(double %44828, double %44830, double %44831, double %44833), !dbg !384
  %44835 = extractvalue { double, double } %44834, 0, !dbg !384
  store double %44835, ptr %19, align 8, !dbg !384
  %44836 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44837 = extractvalue { double, double } %44834, 1, !dbg !384
  store double %44837, ptr %44836, align 8, !dbg !384
  %44838 = load double, ptr %18, align 8, !dbg !385
  %44839 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44840 = load double, ptr %44839, align 8, !dbg !385
  %44841 = load double, ptr %19, align 8, !dbg !385
  %44842 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44843 = load double, ptr %44842, align 8, !dbg !385
  %44844 = call double @dot(double %44838, double %44840, double %44841, double %44843), !dbg !385
  %44845 = call double @atan2(double noundef %44810, double noundef %44844) #6, !dbg !386
  store double %44845, ptr %13, align 8, !dbg !387
  %44846 = load double, ptr %13, align 8, !dbg !388
  %44847 = load double, ptr %14, align 8, !dbg !389
  %44848 = fadd double %44847, %44846, !dbg !389
  store double %44848, ptr %14, align 8, !dbg !389
  %44849 = load double, ptr %13, align 8, !dbg !390
  %44850 = fsub double %44849, 0x400921FB54442D18, !dbg !392
  %44851 = call double @llvm.fabs.f64(double %44850), !dbg !393
  %44852 = fcmp ole double %44851, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44852, label %14330, label %44853, !dbg !395

44853:                                            ; preds = %44776
  %44854 = load double, ptr %13, align 8, !dbg !396
  %44855 = fadd double %44854, 0x400921FB54442D18, !dbg !397
  %44856 = call double @llvm.fabs.f64(double %44855), !dbg !398
  %44857 = fcmp ole double %44856, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44857, label %14330, label %44858, !dbg !400

44858:                                            ; preds = %44853
  br label %44859, !dbg !403

44859:                                            ; preds = %44858
  %44860 = load i32, ptr %10, align 4, !dbg !404
  %44861 = add nsw i32 %44860, 1, !dbg !404
  store i32 %44861, ptr %10, align 4, !dbg !404
  %44862 = load i32, ptr %10, align 4, !dbg !364
  %44863 = load i32, ptr %8, align 4, !dbg !366
  %44864 = icmp slt i32 %44862, %44863, !dbg !367
  br i1 %44864, label %44865, label %48422, !dbg !368

44865:                                            ; preds = %44859
  %44866 = load i32, ptr %10, align 4, !dbg !369
  %44867 = sext i32 %44866 to i64, !dbg !371
  %44868 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44867, !dbg !371
  %44869 = load double, ptr %6, align 8, !dbg !372
  %44870 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44871 = load double, ptr %44870, align 8, !dbg !372
  %44872 = load double, ptr %44868, align 16, !dbg !372
  %44873 = getelementptr inbounds { double, double }, ptr %44868, i32 0, i32 1, !dbg !372
  %44874 = load double, ptr %44873, align 8, !dbg !372
  %44875 = call { double, double } @make_vec(double %44869, double %44871, double %44872, double %44874), !dbg !372
  %44876 = extractvalue { double, double } %44875, 0, !dbg !372
  store double %44876, ptr %16, align 8, !dbg !372
  %44877 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44878 = extractvalue { double, double } %44875, 1, !dbg !372
  store double %44878, ptr %44877, align 8, !dbg !372
  %44879 = load i32, ptr %10, align 4, !dbg !373
  %44880 = add nsw i32 %44879, 1, !dbg !374
  %44881 = sext i32 %44880 to i64, !dbg !375
  %44882 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44881, !dbg !375
  %44883 = load double, ptr %6, align 8, !dbg !376
  %44884 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44885 = load double, ptr %44884, align 8, !dbg !376
  %44886 = load double, ptr %44882, align 16, !dbg !376
  %44887 = getelementptr inbounds { double, double }, ptr %44882, i32 0, i32 1, !dbg !376
  %44888 = load double, ptr %44887, align 8, !dbg !376
  %44889 = call { double, double } @make_vec(double %44883, double %44885, double %44886, double %44888), !dbg !376
  %44890 = extractvalue { double, double } %44889, 0, !dbg !376
  store double %44890, ptr %17, align 8, !dbg !376
  %44891 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44892 = extractvalue { double, double } %44889, 1, !dbg !376
  store double %44892, ptr %44891, align 8, !dbg !376
  %44893 = load double, ptr %16, align 8, !dbg !377
  %44894 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44895 = load double, ptr %44894, align 8, !dbg !377
  %44896 = load double, ptr %17, align 8, !dbg !377
  %44897 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44898 = load double, ptr %44897, align 8, !dbg !377
  %44899 = call double @cross(double %44893, double %44895, double %44896, double %44898), !dbg !377
  %44900 = load i32, ptr %10, align 4, !dbg !378
  %44901 = sext i32 %44900 to i64, !dbg !379
  %44902 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44901, !dbg !379
  %44903 = load double, ptr %6, align 8, !dbg !380
  %44904 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44905 = load double, ptr %44904, align 8, !dbg !380
  %44906 = load double, ptr %44902, align 16, !dbg !380
  %44907 = getelementptr inbounds { double, double }, ptr %44902, i32 0, i32 1, !dbg !380
  %44908 = load double, ptr %44907, align 8, !dbg !380
  %44909 = call { double, double } @make_vec(double %44903, double %44905, double %44906, double %44908), !dbg !380
  %44910 = extractvalue { double, double } %44909, 0, !dbg !380
  store double %44910, ptr %18, align 8, !dbg !380
  %44911 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %44912 = extractvalue { double, double } %44909, 1, !dbg !380
  store double %44912, ptr %44911, align 8, !dbg !380
  %44913 = load i32, ptr %10, align 4, !dbg !381
  %44914 = add nsw i32 %44913, 1, !dbg !382
  %44915 = sext i32 %44914 to i64, !dbg !383
  %44916 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44915, !dbg !383
  %44917 = load double, ptr %6, align 8, !dbg !384
  %44918 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %44919 = load double, ptr %44918, align 8, !dbg !384
  %44920 = load double, ptr %44916, align 16, !dbg !384
  %44921 = getelementptr inbounds { double, double }, ptr %44916, i32 0, i32 1, !dbg !384
  %44922 = load double, ptr %44921, align 8, !dbg !384
  %44923 = call { double, double } @make_vec(double %44917, double %44919, double %44920, double %44922), !dbg !384
  %44924 = extractvalue { double, double } %44923, 0, !dbg !384
  store double %44924, ptr %19, align 8, !dbg !384
  %44925 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %44926 = extractvalue { double, double } %44923, 1, !dbg !384
  store double %44926, ptr %44925, align 8, !dbg !384
  %44927 = load double, ptr %18, align 8, !dbg !385
  %44928 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %44929 = load double, ptr %44928, align 8, !dbg !385
  %44930 = load double, ptr %19, align 8, !dbg !385
  %44931 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %44932 = load double, ptr %44931, align 8, !dbg !385
  %44933 = call double @dot(double %44927, double %44929, double %44930, double %44932), !dbg !385
  %44934 = call double @atan2(double noundef %44899, double noundef %44933) #6, !dbg !386
  store double %44934, ptr %13, align 8, !dbg !387
  %44935 = load double, ptr %13, align 8, !dbg !388
  %44936 = load double, ptr %14, align 8, !dbg !389
  %44937 = fadd double %44936, %44935, !dbg !389
  store double %44937, ptr %14, align 8, !dbg !389
  %44938 = load double, ptr %13, align 8, !dbg !390
  %44939 = fsub double %44938, 0x400921FB54442D18, !dbg !392
  %44940 = call double @llvm.fabs.f64(double %44939), !dbg !393
  %44941 = fcmp ole double %44940, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %44941, label %14330, label %44942, !dbg !395

44942:                                            ; preds = %44865
  %44943 = load double, ptr %13, align 8, !dbg !396
  %44944 = fadd double %44943, 0x400921FB54442D18, !dbg !397
  %44945 = call double @llvm.fabs.f64(double %44944), !dbg !398
  %44946 = fcmp ole double %44945, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %44946, label %14330, label %44947, !dbg !400

44947:                                            ; preds = %44942
  br label %44948, !dbg !403

44948:                                            ; preds = %44947
  %44949 = load i32, ptr %10, align 4, !dbg !404
  %44950 = add nsw i32 %44949, 1, !dbg !404
  store i32 %44950, ptr %10, align 4, !dbg !404
  %44951 = load i32, ptr %10, align 4, !dbg !364
  %44952 = load i32, ptr %8, align 4, !dbg !366
  %44953 = icmp slt i32 %44951, %44952, !dbg !367
  br i1 %44953, label %44954, label %48422, !dbg !368

44954:                                            ; preds = %44948
  %44955 = load i32, ptr %10, align 4, !dbg !369
  %44956 = sext i32 %44955 to i64, !dbg !371
  %44957 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44956, !dbg !371
  %44958 = load double, ptr %6, align 8, !dbg !372
  %44959 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %44960 = load double, ptr %44959, align 8, !dbg !372
  %44961 = load double, ptr %44957, align 16, !dbg !372
  %44962 = getelementptr inbounds { double, double }, ptr %44957, i32 0, i32 1, !dbg !372
  %44963 = load double, ptr %44962, align 8, !dbg !372
  %44964 = call { double, double } @make_vec(double %44958, double %44960, double %44961, double %44963), !dbg !372
  %44965 = extractvalue { double, double } %44964, 0, !dbg !372
  store double %44965, ptr %16, align 8, !dbg !372
  %44966 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %44967 = extractvalue { double, double } %44964, 1, !dbg !372
  store double %44967, ptr %44966, align 8, !dbg !372
  %44968 = load i32, ptr %10, align 4, !dbg !373
  %44969 = add nsw i32 %44968, 1, !dbg !374
  %44970 = sext i32 %44969 to i64, !dbg !375
  %44971 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44970, !dbg !375
  %44972 = load double, ptr %6, align 8, !dbg !376
  %44973 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %44974 = load double, ptr %44973, align 8, !dbg !376
  %44975 = load double, ptr %44971, align 16, !dbg !376
  %44976 = getelementptr inbounds { double, double }, ptr %44971, i32 0, i32 1, !dbg !376
  %44977 = load double, ptr %44976, align 8, !dbg !376
  %44978 = call { double, double } @make_vec(double %44972, double %44974, double %44975, double %44977), !dbg !376
  %44979 = extractvalue { double, double } %44978, 0, !dbg !376
  store double %44979, ptr %17, align 8, !dbg !376
  %44980 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %44981 = extractvalue { double, double } %44978, 1, !dbg !376
  store double %44981, ptr %44980, align 8, !dbg !376
  %44982 = load double, ptr %16, align 8, !dbg !377
  %44983 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %44984 = load double, ptr %44983, align 8, !dbg !377
  %44985 = load double, ptr %17, align 8, !dbg !377
  %44986 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %44987 = load double, ptr %44986, align 8, !dbg !377
  %44988 = call double @cross(double %44982, double %44984, double %44985, double %44987), !dbg !377
  %44989 = load i32, ptr %10, align 4, !dbg !378
  %44990 = sext i32 %44989 to i64, !dbg !379
  %44991 = getelementptr inbounds %struct.POINT, ptr %26, i64 %44990, !dbg !379
  %44992 = load double, ptr %6, align 8, !dbg !380
  %44993 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %44994 = load double, ptr %44993, align 8, !dbg !380
  %44995 = load double, ptr %44991, align 16, !dbg !380
  %44996 = getelementptr inbounds { double, double }, ptr %44991, i32 0, i32 1, !dbg !380
  %44997 = load double, ptr %44996, align 8, !dbg !380
  %44998 = call { double, double } @make_vec(double %44992, double %44994, double %44995, double %44997), !dbg !380
  %44999 = extractvalue { double, double } %44998, 0, !dbg !380
  store double %44999, ptr %18, align 8, !dbg !380
  %45000 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45001 = extractvalue { double, double } %44998, 1, !dbg !380
  store double %45001, ptr %45000, align 8, !dbg !380
  %45002 = load i32, ptr %10, align 4, !dbg !381
  %45003 = add nsw i32 %45002, 1, !dbg !382
  %45004 = sext i32 %45003 to i64, !dbg !383
  %45005 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45004, !dbg !383
  %45006 = load double, ptr %6, align 8, !dbg !384
  %45007 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45008 = load double, ptr %45007, align 8, !dbg !384
  %45009 = load double, ptr %45005, align 16, !dbg !384
  %45010 = getelementptr inbounds { double, double }, ptr %45005, i32 0, i32 1, !dbg !384
  %45011 = load double, ptr %45010, align 8, !dbg !384
  %45012 = call { double, double } @make_vec(double %45006, double %45008, double %45009, double %45011), !dbg !384
  %45013 = extractvalue { double, double } %45012, 0, !dbg !384
  store double %45013, ptr %19, align 8, !dbg !384
  %45014 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45015 = extractvalue { double, double } %45012, 1, !dbg !384
  store double %45015, ptr %45014, align 8, !dbg !384
  %45016 = load double, ptr %18, align 8, !dbg !385
  %45017 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45018 = load double, ptr %45017, align 8, !dbg !385
  %45019 = load double, ptr %19, align 8, !dbg !385
  %45020 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45021 = load double, ptr %45020, align 8, !dbg !385
  %45022 = call double @dot(double %45016, double %45018, double %45019, double %45021), !dbg !385
  %45023 = call double @atan2(double noundef %44988, double noundef %45022) #6, !dbg !386
  store double %45023, ptr %13, align 8, !dbg !387
  %45024 = load double, ptr %13, align 8, !dbg !388
  %45025 = load double, ptr %14, align 8, !dbg !389
  %45026 = fadd double %45025, %45024, !dbg !389
  store double %45026, ptr %14, align 8, !dbg !389
  %45027 = load double, ptr %13, align 8, !dbg !390
  %45028 = fsub double %45027, 0x400921FB54442D18, !dbg !392
  %45029 = call double @llvm.fabs.f64(double %45028), !dbg !393
  %45030 = fcmp ole double %45029, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45030, label %14330, label %45031, !dbg !395

45031:                                            ; preds = %44954
  %45032 = load double, ptr %13, align 8, !dbg !396
  %45033 = fadd double %45032, 0x400921FB54442D18, !dbg !397
  %45034 = call double @llvm.fabs.f64(double %45033), !dbg !398
  %45035 = fcmp ole double %45034, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45035, label %14330, label %45036, !dbg !400

45036:                                            ; preds = %45031
  br label %45037, !dbg !403

45037:                                            ; preds = %45036
  %45038 = load i32, ptr %10, align 4, !dbg !404
  %45039 = add nsw i32 %45038, 1, !dbg !404
  store i32 %45039, ptr %10, align 4, !dbg !404
  %45040 = load i32, ptr %10, align 4, !dbg !364
  %45041 = load i32, ptr %8, align 4, !dbg !366
  %45042 = icmp slt i32 %45040, %45041, !dbg !367
  br i1 %45042, label %45043, label %48422, !dbg !368

45043:                                            ; preds = %45037
  %45044 = load i32, ptr %10, align 4, !dbg !369
  %45045 = sext i32 %45044 to i64, !dbg !371
  %45046 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45045, !dbg !371
  %45047 = load double, ptr %6, align 8, !dbg !372
  %45048 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45049 = load double, ptr %45048, align 8, !dbg !372
  %45050 = load double, ptr %45046, align 16, !dbg !372
  %45051 = getelementptr inbounds { double, double }, ptr %45046, i32 0, i32 1, !dbg !372
  %45052 = load double, ptr %45051, align 8, !dbg !372
  %45053 = call { double, double } @make_vec(double %45047, double %45049, double %45050, double %45052), !dbg !372
  %45054 = extractvalue { double, double } %45053, 0, !dbg !372
  store double %45054, ptr %16, align 8, !dbg !372
  %45055 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45056 = extractvalue { double, double } %45053, 1, !dbg !372
  store double %45056, ptr %45055, align 8, !dbg !372
  %45057 = load i32, ptr %10, align 4, !dbg !373
  %45058 = add nsw i32 %45057, 1, !dbg !374
  %45059 = sext i32 %45058 to i64, !dbg !375
  %45060 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45059, !dbg !375
  %45061 = load double, ptr %6, align 8, !dbg !376
  %45062 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45063 = load double, ptr %45062, align 8, !dbg !376
  %45064 = load double, ptr %45060, align 16, !dbg !376
  %45065 = getelementptr inbounds { double, double }, ptr %45060, i32 0, i32 1, !dbg !376
  %45066 = load double, ptr %45065, align 8, !dbg !376
  %45067 = call { double, double } @make_vec(double %45061, double %45063, double %45064, double %45066), !dbg !376
  %45068 = extractvalue { double, double } %45067, 0, !dbg !376
  store double %45068, ptr %17, align 8, !dbg !376
  %45069 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45070 = extractvalue { double, double } %45067, 1, !dbg !376
  store double %45070, ptr %45069, align 8, !dbg !376
  %45071 = load double, ptr %16, align 8, !dbg !377
  %45072 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45073 = load double, ptr %45072, align 8, !dbg !377
  %45074 = load double, ptr %17, align 8, !dbg !377
  %45075 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45076 = load double, ptr %45075, align 8, !dbg !377
  %45077 = call double @cross(double %45071, double %45073, double %45074, double %45076), !dbg !377
  %45078 = load i32, ptr %10, align 4, !dbg !378
  %45079 = sext i32 %45078 to i64, !dbg !379
  %45080 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45079, !dbg !379
  %45081 = load double, ptr %6, align 8, !dbg !380
  %45082 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45083 = load double, ptr %45082, align 8, !dbg !380
  %45084 = load double, ptr %45080, align 16, !dbg !380
  %45085 = getelementptr inbounds { double, double }, ptr %45080, i32 0, i32 1, !dbg !380
  %45086 = load double, ptr %45085, align 8, !dbg !380
  %45087 = call { double, double } @make_vec(double %45081, double %45083, double %45084, double %45086), !dbg !380
  %45088 = extractvalue { double, double } %45087, 0, !dbg !380
  store double %45088, ptr %18, align 8, !dbg !380
  %45089 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45090 = extractvalue { double, double } %45087, 1, !dbg !380
  store double %45090, ptr %45089, align 8, !dbg !380
  %45091 = load i32, ptr %10, align 4, !dbg !381
  %45092 = add nsw i32 %45091, 1, !dbg !382
  %45093 = sext i32 %45092 to i64, !dbg !383
  %45094 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45093, !dbg !383
  %45095 = load double, ptr %6, align 8, !dbg !384
  %45096 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45097 = load double, ptr %45096, align 8, !dbg !384
  %45098 = load double, ptr %45094, align 16, !dbg !384
  %45099 = getelementptr inbounds { double, double }, ptr %45094, i32 0, i32 1, !dbg !384
  %45100 = load double, ptr %45099, align 8, !dbg !384
  %45101 = call { double, double } @make_vec(double %45095, double %45097, double %45098, double %45100), !dbg !384
  %45102 = extractvalue { double, double } %45101, 0, !dbg !384
  store double %45102, ptr %19, align 8, !dbg !384
  %45103 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45104 = extractvalue { double, double } %45101, 1, !dbg !384
  store double %45104, ptr %45103, align 8, !dbg !384
  %45105 = load double, ptr %18, align 8, !dbg !385
  %45106 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45107 = load double, ptr %45106, align 8, !dbg !385
  %45108 = load double, ptr %19, align 8, !dbg !385
  %45109 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45110 = load double, ptr %45109, align 8, !dbg !385
  %45111 = call double @dot(double %45105, double %45107, double %45108, double %45110), !dbg !385
  %45112 = call double @atan2(double noundef %45077, double noundef %45111) #6, !dbg !386
  store double %45112, ptr %13, align 8, !dbg !387
  %45113 = load double, ptr %13, align 8, !dbg !388
  %45114 = load double, ptr %14, align 8, !dbg !389
  %45115 = fadd double %45114, %45113, !dbg !389
  store double %45115, ptr %14, align 8, !dbg !389
  %45116 = load double, ptr %13, align 8, !dbg !390
  %45117 = fsub double %45116, 0x400921FB54442D18, !dbg !392
  %45118 = call double @llvm.fabs.f64(double %45117), !dbg !393
  %45119 = fcmp ole double %45118, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45119, label %14330, label %45120, !dbg !395

45120:                                            ; preds = %45043
  %45121 = load double, ptr %13, align 8, !dbg !396
  %45122 = fadd double %45121, 0x400921FB54442D18, !dbg !397
  %45123 = call double @llvm.fabs.f64(double %45122), !dbg !398
  %45124 = fcmp ole double %45123, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45124, label %14330, label %45125, !dbg !400

45125:                                            ; preds = %45120
  br label %45126, !dbg !403

45126:                                            ; preds = %45125
  %45127 = load i32, ptr %10, align 4, !dbg !404
  %45128 = add nsw i32 %45127, 1, !dbg !404
  store i32 %45128, ptr %10, align 4, !dbg !404
  %45129 = load i32, ptr %10, align 4, !dbg !364
  %45130 = load i32, ptr %8, align 4, !dbg !366
  %45131 = icmp slt i32 %45129, %45130, !dbg !367
  br i1 %45131, label %45132, label %48422, !dbg !368

45132:                                            ; preds = %45126
  %45133 = load i32, ptr %10, align 4, !dbg !369
  %45134 = sext i32 %45133 to i64, !dbg !371
  %45135 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45134, !dbg !371
  %45136 = load double, ptr %6, align 8, !dbg !372
  %45137 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45138 = load double, ptr %45137, align 8, !dbg !372
  %45139 = load double, ptr %45135, align 16, !dbg !372
  %45140 = getelementptr inbounds { double, double }, ptr %45135, i32 0, i32 1, !dbg !372
  %45141 = load double, ptr %45140, align 8, !dbg !372
  %45142 = call { double, double } @make_vec(double %45136, double %45138, double %45139, double %45141), !dbg !372
  %45143 = extractvalue { double, double } %45142, 0, !dbg !372
  store double %45143, ptr %16, align 8, !dbg !372
  %45144 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45145 = extractvalue { double, double } %45142, 1, !dbg !372
  store double %45145, ptr %45144, align 8, !dbg !372
  %45146 = load i32, ptr %10, align 4, !dbg !373
  %45147 = add nsw i32 %45146, 1, !dbg !374
  %45148 = sext i32 %45147 to i64, !dbg !375
  %45149 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45148, !dbg !375
  %45150 = load double, ptr %6, align 8, !dbg !376
  %45151 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45152 = load double, ptr %45151, align 8, !dbg !376
  %45153 = load double, ptr %45149, align 16, !dbg !376
  %45154 = getelementptr inbounds { double, double }, ptr %45149, i32 0, i32 1, !dbg !376
  %45155 = load double, ptr %45154, align 8, !dbg !376
  %45156 = call { double, double } @make_vec(double %45150, double %45152, double %45153, double %45155), !dbg !376
  %45157 = extractvalue { double, double } %45156, 0, !dbg !376
  store double %45157, ptr %17, align 8, !dbg !376
  %45158 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45159 = extractvalue { double, double } %45156, 1, !dbg !376
  store double %45159, ptr %45158, align 8, !dbg !376
  %45160 = load double, ptr %16, align 8, !dbg !377
  %45161 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45162 = load double, ptr %45161, align 8, !dbg !377
  %45163 = load double, ptr %17, align 8, !dbg !377
  %45164 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45165 = load double, ptr %45164, align 8, !dbg !377
  %45166 = call double @cross(double %45160, double %45162, double %45163, double %45165), !dbg !377
  %45167 = load i32, ptr %10, align 4, !dbg !378
  %45168 = sext i32 %45167 to i64, !dbg !379
  %45169 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45168, !dbg !379
  %45170 = load double, ptr %6, align 8, !dbg !380
  %45171 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45172 = load double, ptr %45171, align 8, !dbg !380
  %45173 = load double, ptr %45169, align 16, !dbg !380
  %45174 = getelementptr inbounds { double, double }, ptr %45169, i32 0, i32 1, !dbg !380
  %45175 = load double, ptr %45174, align 8, !dbg !380
  %45176 = call { double, double } @make_vec(double %45170, double %45172, double %45173, double %45175), !dbg !380
  %45177 = extractvalue { double, double } %45176, 0, !dbg !380
  store double %45177, ptr %18, align 8, !dbg !380
  %45178 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45179 = extractvalue { double, double } %45176, 1, !dbg !380
  store double %45179, ptr %45178, align 8, !dbg !380
  %45180 = load i32, ptr %10, align 4, !dbg !381
  %45181 = add nsw i32 %45180, 1, !dbg !382
  %45182 = sext i32 %45181 to i64, !dbg !383
  %45183 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45182, !dbg !383
  %45184 = load double, ptr %6, align 8, !dbg !384
  %45185 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45186 = load double, ptr %45185, align 8, !dbg !384
  %45187 = load double, ptr %45183, align 16, !dbg !384
  %45188 = getelementptr inbounds { double, double }, ptr %45183, i32 0, i32 1, !dbg !384
  %45189 = load double, ptr %45188, align 8, !dbg !384
  %45190 = call { double, double } @make_vec(double %45184, double %45186, double %45187, double %45189), !dbg !384
  %45191 = extractvalue { double, double } %45190, 0, !dbg !384
  store double %45191, ptr %19, align 8, !dbg !384
  %45192 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45193 = extractvalue { double, double } %45190, 1, !dbg !384
  store double %45193, ptr %45192, align 8, !dbg !384
  %45194 = load double, ptr %18, align 8, !dbg !385
  %45195 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45196 = load double, ptr %45195, align 8, !dbg !385
  %45197 = load double, ptr %19, align 8, !dbg !385
  %45198 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45199 = load double, ptr %45198, align 8, !dbg !385
  %45200 = call double @dot(double %45194, double %45196, double %45197, double %45199), !dbg !385
  %45201 = call double @atan2(double noundef %45166, double noundef %45200) #6, !dbg !386
  store double %45201, ptr %13, align 8, !dbg !387
  %45202 = load double, ptr %13, align 8, !dbg !388
  %45203 = load double, ptr %14, align 8, !dbg !389
  %45204 = fadd double %45203, %45202, !dbg !389
  store double %45204, ptr %14, align 8, !dbg !389
  %45205 = load double, ptr %13, align 8, !dbg !390
  %45206 = fsub double %45205, 0x400921FB54442D18, !dbg !392
  %45207 = call double @llvm.fabs.f64(double %45206), !dbg !393
  %45208 = fcmp ole double %45207, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45208, label %14330, label %45209, !dbg !395

45209:                                            ; preds = %45132
  %45210 = load double, ptr %13, align 8, !dbg !396
  %45211 = fadd double %45210, 0x400921FB54442D18, !dbg !397
  %45212 = call double @llvm.fabs.f64(double %45211), !dbg !398
  %45213 = fcmp ole double %45212, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45213, label %14330, label %45214, !dbg !400

45214:                                            ; preds = %45209
  br label %45215, !dbg !403

45215:                                            ; preds = %45214
  %45216 = load i32, ptr %10, align 4, !dbg !404
  %45217 = add nsw i32 %45216, 1, !dbg !404
  store i32 %45217, ptr %10, align 4, !dbg !404
  %45218 = load i32, ptr %10, align 4, !dbg !364
  %45219 = load i32, ptr %8, align 4, !dbg !366
  %45220 = icmp slt i32 %45218, %45219, !dbg !367
  br i1 %45220, label %45221, label %48422, !dbg !368

45221:                                            ; preds = %45215
  %45222 = load i32, ptr %10, align 4, !dbg !369
  %45223 = sext i32 %45222 to i64, !dbg !371
  %45224 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45223, !dbg !371
  %45225 = load double, ptr %6, align 8, !dbg !372
  %45226 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45227 = load double, ptr %45226, align 8, !dbg !372
  %45228 = load double, ptr %45224, align 16, !dbg !372
  %45229 = getelementptr inbounds { double, double }, ptr %45224, i32 0, i32 1, !dbg !372
  %45230 = load double, ptr %45229, align 8, !dbg !372
  %45231 = call { double, double } @make_vec(double %45225, double %45227, double %45228, double %45230), !dbg !372
  %45232 = extractvalue { double, double } %45231, 0, !dbg !372
  store double %45232, ptr %16, align 8, !dbg !372
  %45233 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45234 = extractvalue { double, double } %45231, 1, !dbg !372
  store double %45234, ptr %45233, align 8, !dbg !372
  %45235 = load i32, ptr %10, align 4, !dbg !373
  %45236 = add nsw i32 %45235, 1, !dbg !374
  %45237 = sext i32 %45236 to i64, !dbg !375
  %45238 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45237, !dbg !375
  %45239 = load double, ptr %6, align 8, !dbg !376
  %45240 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45241 = load double, ptr %45240, align 8, !dbg !376
  %45242 = load double, ptr %45238, align 16, !dbg !376
  %45243 = getelementptr inbounds { double, double }, ptr %45238, i32 0, i32 1, !dbg !376
  %45244 = load double, ptr %45243, align 8, !dbg !376
  %45245 = call { double, double } @make_vec(double %45239, double %45241, double %45242, double %45244), !dbg !376
  %45246 = extractvalue { double, double } %45245, 0, !dbg !376
  store double %45246, ptr %17, align 8, !dbg !376
  %45247 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45248 = extractvalue { double, double } %45245, 1, !dbg !376
  store double %45248, ptr %45247, align 8, !dbg !376
  %45249 = load double, ptr %16, align 8, !dbg !377
  %45250 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45251 = load double, ptr %45250, align 8, !dbg !377
  %45252 = load double, ptr %17, align 8, !dbg !377
  %45253 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45254 = load double, ptr %45253, align 8, !dbg !377
  %45255 = call double @cross(double %45249, double %45251, double %45252, double %45254), !dbg !377
  %45256 = load i32, ptr %10, align 4, !dbg !378
  %45257 = sext i32 %45256 to i64, !dbg !379
  %45258 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45257, !dbg !379
  %45259 = load double, ptr %6, align 8, !dbg !380
  %45260 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45261 = load double, ptr %45260, align 8, !dbg !380
  %45262 = load double, ptr %45258, align 16, !dbg !380
  %45263 = getelementptr inbounds { double, double }, ptr %45258, i32 0, i32 1, !dbg !380
  %45264 = load double, ptr %45263, align 8, !dbg !380
  %45265 = call { double, double } @make_vec(double %45259, double %45261, double %45262, double %45264), !dbg !380
  %45266 = extractvalue { double, double } %45265, 0, !dbg !380
  store double %45266, ptr %18, align 8, !dbg !380
  %45267 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45268 = extractvalue { double, double } %45265, 1, !dbg !380
  store double %45268, ptr %45267, align 8, !dbg !380
  %45269 = load i32, ptr %10, align 4, !dbg !381
  %45270 = add nsw i32 %45269, 1, !dbg !382
  %45271 = sext i32 %45270 to i64, !dbg !383
  %45272 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45271, !dbg !383
  %45273 = load double, ptr %6, align 8, !dbg !384
  %45274 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45275 = load double, ptr %45274, align 8, !dbg !384
  %45276 = load double, ptr %45272, align 16, !dbg !384
  %45277 = getelementptr inbounds { double, double }, ptr %45272, i32 0, i32 1, !dbg !384
  %45278 = load double, ptr %45277, align 8, !dbg !384
  %45279 = call { double, double } @make_vec(double %45273, double %45275, double %45276, double %45278), !dbg !384
  %45280 = extractvalue { double, double } %45279, 0, !dbg !384
  store double %45280, ptr %19, align 8, !dbg !384
  %45281 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45282 = extractvalue { double, double } %45279, 1, !dbg !384
  store double %45282, ptr %45281, align 8, !dbg !384
  %45283 = load double, ptr %18, align 8, !dbg !385
  %45284 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45285 = load double, ptr %45284, align 8, !dbg !385
  %45286 = load double, ptr %19, align 8, !dbg !385
  %45287 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45288 = load double, ptr %45287, align 8, !dbg !385
  %45289 = call double @dot(double %45283, double %45285, double %45286, double %45288), !dbg !385
  %45290 = call double @atan2(double noundef %45255, double noundef %45289) #6, !dbg !386
  store double %45290, ptr %13, align 8, !dbg !387
  %45291 = load double, ptr %13, align 8, !dbg !388
  %45292 = load double, ptr %14, align 8, !dbg !389
  %45293 = fadd double %45292, %45291, !dbg !389
  store double %45293, ptr %14, align 8, !dbg !389
  %45294 = load double, ptr %13, align 8, !dbg !390
  %45295 = fsub double %45294, 0x400921FB54442D18, !dbg !392
  %45296 = call double @llvm.fabs.f64(double %45295), !dbg !393
  %45297 = fcmp ole double %45296, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45297, label %14330, label %45298, !dbg !395

45298:                                            ; preds = %45221
  %45299 = load double, ptr %13, align 8, !dbg !396
  %45300 = fadd double %45299, 0x400921FB54442D18, !dbg !397
  %45301 = call double @llvm.fabs.f64(double %45300), !dbg !398
  %45302 = fcmp ole double %45301, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45302, label %14330, label %45303, !dbg !400

45303:                                            ; preds = %45298
  br label %45304, !dbg !403

45304:                                            ; preds = %45303
  %45305 = load i32, ptr %10, align 4, !dbg !404
  %45306 = add nsw i32 %45305, 1, !dbg !404
  store i32 %45306, ptr %10, align 4, !dbg !404
  %45307 = load i32, ptr %10, align 4, !dbg !364
  %45308 = load i32, ptr %8, align 4, !dbg !366
  %45309 = icmp slt i32 %45307, %45308, !dbg !367
  br i1 %45309, label %45310, label %48422, !dbg !368

45310:                                            ; preds = %45304
  %45311 = load i32, ptr %10, align 4, !dbg !369
  %45312 = sext i32 %45311 to i64, !dbg !371
  %45313 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45312, !dbg !371
  %45314 = load double, ptr %6, align 8, !dbg !372
  %45315 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45316 = load double, ptr %45315, align 8, !dbg !372
  %45317 = load double, ptr %45313, align 16, !dbg !372
  %45318 = getelementptr inbounds { double, double }, ptr %45313, i32 0, i32 1, !dbg !372
  %45319 = load double, ptr %45318, align 8, !dbg !372
  %45320 = call { double, double } @make_vec(double %45314, double %45316, double %45317, double %45319), !dbg !372
  %45321 = extractvalue { double, double } %45320, 0, !dbg !372
  store double %45321, ptr %16, align 8, !dbg !372
  %45322 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45323 = extractvalue { double, double } %45320, 1, !dbg !372
  store double %45323, ptr %45322, align 8, !dbg !372
  %45324 = load i32, ptr %10, align 4, !dbg !373
  %45325 = add nsw i32 %45324, 1, !dbg !374
  %45326 = sext i32 %45325 to i64, !dbg !375
  %45327 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45326, !dbg !375
  %45328 = load double, ptr %6, align 8, !dbg !376
  %45329 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45330 = load double, ptr %45329, align 8, !dbg !376
  %45331 = load double, ptr %45327, align 16, !dbg !376
  %45332 = getelementptr inbounds { double, double }, ptr %45327, i32 0, i32 1, !dbg !376
  %45333 = load double, ptr %45332, align 8, !dbg !376
  %45334 = call { double, double } @make_vec(double %45328, double %45330, double %45331, double %45333), !dbg !376
  %45335 = extractvalue { double, double } %45334, 0, !dbg !376
  store double %45335, ptr %17, align 8, !dbg !376
  %45336 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45337 = extractvalue { double, double } %45334, 1, !dbg !376
  store double %45337, ptr %45336, align 8, !dbg !376
  %45338 = load double, ptr %16, align 8, !dbg !377
  %45339 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45340 = load double, ptr %45339, align 8, !dbg !377
  %45341 = load double, ptr %17, align 8, !dbg !377
  %45342 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45343 = load double, ptr %45342, align 8, !dbg !377
  %45344 = call double @cross(double %45338, double %45340, double %45341, double %45343), !dbg !377
  %45345 = load i32, ptr %10, align 4, !dbg !378
  %45346 = sext i32 %45345 to i64, !dbg !379
  %45347 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45346, !dbg !379
  %45348 = load double, ptr %6, align 8, !dbg !380
  %45349 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45350 = load double, ptr %45349, align 8, !dbg !380
  %45351 = load double, ptr %45347, align 16, !dbg !380
  %45352 = getelementptr inbounds { double, double }, ptr %45347, i32 0, i32 1, !dbg !380
  %45353 = load double, ptr %45352, align 8, !dbg !380
  %45354 = call { double, double } @make_vec(double %45348, double %45350, double %45351, double %45353), !dbg !380
  %45355 = extractvalue { double, double } %45354, 0, !dbg !380
  store double %45355, ptr %18, align 8, !dbg !380
  %45356 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45357 = extractvalue { double, double } %45354, 1, !dbg !380
  store double %45357, ptr %45356, align 8, !dbg !380
  %45358 = load i32, ptr %10, align 4, !dbg !381
  %45359 = add nsw i32 %45358, 1, !dbg !382
  %45360 = sext i32 %45359 to i64, !dbg !383
  %45361 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45360, !dbg !383
  %45362 = load double, ptr %6, align 8, !dbg !384
  %45363 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45364 = load double, ptr %45363, align 8, !dbg !384
  %45365 = load double, ptr %45361, align 16, !dbg !384
  %45366 = getelementptr inbounds { double, double }, ptr %45361, i32 0, i32 1, !dbg !384
  %45367 = load double, ptr %45366, align 8, !dbg !384
  %45368 = call { double, double } @make_vec(double %45362, double %45364, double %45365, double %45367), !dbg !384
  %45369 = extractvalue { double, double } %45368, 0, !dbg !384
  store double %45369, ptr %19, align 8, !dbg !384
  %45370 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45371 = extractvalue { double, double } %45368, 1, !dbg !384
  store double %45371, ptr %45370, align 8, !dbg !384
  %45372 = load double, ptr %18, align 8, !dbg !385
  %45373 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45374 = load double, ptr %45373, align 8, !dbg !385
  %45375 = load double, ptr %19, align 8, !dbg !385
  %45376 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45377 = load double, ptr %45376, align 8, !dbg !385
  %45378 = call double @dot(double %45372, double %45374, double %45375, double %45377), !dbg !385
  %45379 = call double @atan2(double noundef %45344, double noundef %45378) #6, !dbg !386
  store double %45379, ptr %13, align 8, !dbg !387
  %45380 = load double, ptr %13, align 8, !dbg !388
  %45381 = load double, ptr %14, align 8, !dbg !389
  %45382 = fadd double %45381, %45380, !dbg !389
  store double %45382, ptr %14, align 8, !dbg !389
  %45383 = load double, ptr %13, align 8, !dbg !390
  %45384 = fsub double %45383, 0x400921FB54442D18, !dbg !392
  %45385 = call double @llvm.fabs.f64(double %45384), !dbg !393
  %45386 = fcmp ole double %45385, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45386, label %14330, label %45387, !dbg !395

45387:                                            ; preds = %45310
  %45388 = load double, ptr %13, align 8, !dbg !396
  %45389 = fadd double %45388, 0x400921FB54442D18, !dbg !397
  %45390 = call double @llvm.fabs.f64(double %45389), !dbg !398
  %45391 = fcmp ole double %45390, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45391, label %14330, label %45392, !dbg !400

45392:                                            ; preds = %45387
  br label %45393, !dbg !403

45393:                                            ; preds = %45392
  %45394 = load i32, ptr %10, align 4, !dbg !404
  %45395 = add nsw i32 %45394, 1, !dbg !404
  store i32 %45395, ptr %10, align 4, !dbg !404
  %45396 = load i32, ptr %10, align 4, !dbg !364
  %45397 = load i32, ptr %8, align 4, !dbg !366
  %45398 = icmp slt i32 %45396, %45397, !dbg !367
  br i1 %45398, label %45399, label %48422, !dbg !368

45399:                                            ; preds = %45393
  %45400 = load i32, ptr %10, align 4, !dbg !369
  %45401 = sext i32 %45400 to i64, !dbg !371
  %45402 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45401, !dbg !371
  %45403 = load double, ptr %6, align 8, !dbg !372
  %45404 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45405 = load double, ptr %45404, align 8, !dbg !372
  %45406 = load double, ptr %45402, align 16, !dbg !372
  %45407 = getelementptr inbounds { double, double }, ptr %45402, i32 0, i32 1, !dbg !372
  %45408 = load double, ptr %45407, align 8, !dbg !372
  %45409 = call { double, double } @make_vec(double %45403, double %45405, double %45406, double %45408), !dbg !372
  %45410 = extractvalue { double, double } %45409, 0, !dbg !372
  store double %45410, ptr %16, align 8, !dbg !372
  %45411 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45412 = extractvalue { double, double } %45409, 1, !dbg !372
  store double %45412, ptr %45411, align 8, !dbg !372
  %45413 = load i32, ptr %10, align 4, !dbg !373
  %45414 = add nsw i32 %45413, 1, !dbg !374
  %45415 = sext i32 %45414 to i64, !dbg !375
  %45416 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45415, !dbg !375
  %45417 = load double, ptr %6, align 8, !dbg !376
  %45418 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45419 = load double, ptr %45418, align 8, !dbg !376
  %45420 = load double, ptr %45416, align 16, !dbg !376
  %45421 = getelementptr inbounds { double, double }, ptr %45416, i32 0, i32 1, !dbg !376
  %45422 = load double, ptr %45421, align 8, !dbg !376
  %45423 = call { double, double } @make_vec(double %45417, double %45419, double %45420, double %45422), !dbg !376
  %45424 = extractvalue { double, double } %45423, 0, !dbg !376
  store double %45424, ptr %17, align 8, !dbg !376
  %45425 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45426 = extractvalue { double, double } %45423, 1, !dbg !376
  store double %45426, ptr %45425, align 8, !dbg !376
  %45427 = load double, ptr %16, align 8, !dbg !377
  %45428 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45429 = load double, ptr %45428, align 8, !dbg !377
  %45430 = load double, ptr %17, align 8, !dbg !377
  %45431 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45432 = load double, ptr %45431, align 8, !dbg !377
  %45433 = call double @cross(double %45427, double %45429, double %45430, double %45432), !dbg !377
  %45434 = load i32, ptr %10, align 4, !dbg !378
  %45435 = sext i32 %45434 to i64, !dbg !379
  %45436 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45435, !dbg !379
  %45437 = load double, ptr %6, align 8, !dbg !380
  %45438 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45439 = load double, ptr %45438, align 8, !dbg !380
  %45440 = load double, ptr %45436, align 16, !dbg !380
  %45441 = getelementptr inbounds { double, double }, ptr %45436, i32 0, i32 1, !dbg !380
  %45442 = load double, ptr %45441, align 8, !dbg !380
  %45443 = call { double, double } @make_vec(double %45437, double %45439, double %45440, double %45442), !dbg !380
  %45444 = extractvalue { double, double } %45443, 0, !dbg !380
  store double %45444, ptr %18, align 8, !dbg !380
  %45445 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45446 = extractvalue { double, double } %45443, 1, !dbg !380
  store double %45446, ptr %45445, align 8, !dbg !380
  %45447 = load i32, ptr %10, align 4, !dbg !381
  %45448 = add nsw i32 %45447, 1, !dbg !382
  %45449 = sext i32 %45448 to i64, !dbg !383
  %45450 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45449, !dbg !383
  %45451 = load double, ptr %6, align 8, !dbg !384
  %45452 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45453 = load double, ptr %45452, align 8, !dbg !384
  %45454 = load double, ptr %45450, align 16, !dbg !384
  %45455 = getelementptr inbounds { double, double }, ptr %45450, i32 0, i32 1, !dbg !384
  %45456 = load double, ptr %45455, align 8, !dbg !384
  %45457 = call { double, double } @make_vec(double %45451, double %45453, double %45454, double %45456), !dbg !384
  %45458 = extractvalue { double, double } %45457, 0, !dbg !384
  store double %45458, ptr %19, align 8, !dbg !384
  %45459 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45460 = extractvalue { double, double } %45457, 1, !dbg !384
  store double %45460, ptr %45459, align 8, !dbg !384
  %45461 = load double, ptr %18, align 8, !dbg !385
  %45462 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45463 = load double, ptr %45462, align 8, !dbg !385
  %45464 = load double, ptr %19, align 8, !dbg !385
  %45465 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45466 = load double, ptr %45465, align 8, !dbg !385
  %45467 = call double @dot(double %45461, double %45463, double %45464, double %45466), !dbg !385
  %45468 = call double @atan2(double noundef %45433, double noundef %45467) #6, !dbg !386
  store double %45468, ptr %13, align 8, !dbg !387
  %45469 = load double, ptr %13, align 8, !dbg !388
  %45470 = load double, ptr %14, align 8, !dbg !389
  %45471 = fadd double %45470, %45469, !dbg !389
  store double %45471, ptr %14, align 8, !dbg !389
  %45472 = load double, ptr %13, align 8, !dbg !390
  %45473 = fsub double %45472, 0x400921FB54442D18, !dbg !392
  %45474 = call double @llvm.fabs.f64(double %45473), !dbg !393
  %45475 = fcmp ole double %45474, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45475, label %14330, label %45476, !dbg !395

45476:                                            ; preds = %45399
  %45477 = load double, ptr %13, align 8, !dbg !396
  %45478 = fadd double %45477, 0x400921FB54442D18, !dbg !397
  %45479 = call double @llvm.fabs.f64(double %45478), !dbg !398
  %45480 = fcmp ole double %45479, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45480, label %14330, label %45481, !dbg !400

45481:                                            ; preds = %45476
  br label %45482, !dbg !403

45482:                                            ; preds = %45481
  %45483 = load i32, ptr %10, align 4, !dbg !404
  %45484 = add nsw i32 %45483, 1, !dbg !404
  store i32 %45484, ptr %10, align 4, !dbg !404
  %45485 = load i32, ptr %10, align 4, !dbg !364
  %45486 = load i32, ptr %8, align 4, !dbg !366
  %45487 = icmp slt i32 %45485, %45486, !dbg !367
  br i1 %45487, label %45488, label %48422, !dbg !368

45488:                                            ; preds = %45482
  %45489 = load i32, ptr %10, align 4, !dbg !369
  %45490 = sext i32 %45489 to i64, !dbg !371
  %45491 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45490, !dbg !371
  %45492 = load double, ptr %6, align 8, !dbg !372
  %45493 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45494 = load double, ptr %45493, align 8, !dbg !372
  %45495 = load double, ptr %45491, align 16, !dbg !372
  %45496 = getelementptr inbounds { double, double }, ptr %45491, i32 0, i32 1, !dbg !372
  %45497 = load double, ptr %45496, align 8, !dbg !372
  %45498 = call { double, double } @make_vec(double %45492, double %45494, double %45495, double %45497), !dbg !372
  %45499 = extractvalue { double, double } %45498, 0, !dbg !372
  store double %45499, ptr %16, align 8, !dbg !372
  %45500 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45501 = extractvalue { double, double } %45498, 1, !dbg !372
  store double %45501, ptr %45500, align 8, !dbg !372
  %45502 = load i32, ptr %10, align 4, !dbg !373
  %45503 = add nsw i32 %45502, 1, !dbg !374
  %45504 = sext i32 %45503 to i64, !dbg !375
  %45505 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45504, !dbg !375
  %45506 = load double, ptr %6, align 8, !dbg !376
  %45507 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45508 = load double, ptr %45507, align 8, !dbg !376
  %45509 = load double, ptr %45505, align 16, !dbg !376
  %45510 = getelementptr inbounds { double, double }, ptr %45505, i32 0, i32 1, !dbg !376
  %45511 = load double, ptr %45510, align 8, !dbg !376
  %45512 = call { double, double } @make_vec(double %45506, double %45508, double %45509, double %45511), !dbg !376
  %45513 = extractvalue { double, double } %45512, 0, !dbg !376
  store double %45513, ptr %17, align 8, !dbg !376
  %45514 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45515 = extractvalue { double, double } %45512, 1, !dbg !376
  store double %45515, ptr %45514, align 8, !dbg !376
  %45516 = load double, ptr %16, align 8, !dbg !377
  %45517 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45518 = load double, ptr %45517, align 8, !dbg !377
  %45519 = load double, ptr %17, align 8, !dbg !377
  %45520 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45521 = load double, ptr %45520, align 8, !dbg !377
  %45522 = call double @cross(double %45516, double %45518, double %45519, double %45521), !dbg !377
  %45523 = load i32, ptr %10, align 4, !dbg !378
  %45524 = sext i32 %45523 to i64, !dbg !379
  %45525 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45524, !dbg !379
  %45526 = load double, ptr %6, align 8, !dbg !380
  %45527 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45528 = load double, ptr %45527, align 8, !dbg !380
  %45529 = load double, ptr %45525, align 16, !dbg !380
  %45530 = getelementptr inbounds { double, double }, ptr %45525, i32 0, i32 1, !dbg !380
  %45531 = load double, ptr %45530, align 8, !dbg !380
  %45532 = call { double, double } @make_vec(double %45526, double %45528, double %45529, double %45531), !dbg !380
  %45533 = extractvalue { double, double } %45532, 0, !dbg !380
  store double %45533, ptr %18, align 8, !dbg !380
  %45534 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45535 = extractvalue { double, double } %45532, 1, !dbg !380
  store double %45535, ptr %45534, align 8, !dbg !380
  %45536 = load i32, ptr %10, align 4, !dbg !381
  %45537 = add nsw i32 %45536, 1, !dbg !382
  %45538 = sext i32 %45537 to i64, !dbg !383
  %45539 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45538, !dbg !383
  %45540 = load double, ptr %6, align 8, !dbg !384
  %45541 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45542 = load double, ptr %45541, align 8, !dbg !384
  %45543 = load double, ptr %45539, align 16, !dbg !384
  %45544 = getelementptr inbounds { double, double }, ptr %45539, i32 0, i32 1, !dbg !384
  %45545 = load double, ptr %45544, align 8, !dbg !384
  %45546 = call { double, double } @make_vec(double %45540, double %45542, double %45543, double %45545), !dbg !384
  %45547 = extractvalue { double, double } %45546, 0, !dbg !384
  store double %45547, ptr %19, align 8, !dbg !384
  %45548 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45549 = extractvalue { double, double } %45546, 1, !dbg !384
  store double %45549, ptr %45548, align 8, !dbg !384
  %45550 = load double, ptr %18, align 8, !dbg !385
  %45551 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45552 = load double, ptr %45551, align 8, !dbg !385
  %45553 = load double, ptr %19, align 8, !dbg !385
  %45554 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45555 = load double, ptr %45554, align 8, !dbg !385
  %45556 = call double @dot(double %45550, double %45552, double %45553, double %45555), !dbg !385
  %45557 = call double @atan2(double noundef %45522, double noundef %45556) #6, !dbg !386
  store double %45557, ptr %13, align 8, !dbg !387
  %45558 = load double, ptr %13, align 8, !dbg !388
  %45559 = load double, ptr %14, align 8, !dbg !389
  %45560 = fadd double %45559, %45558, !dbg !389
  store double %45560, ptr %14, align 8, !dbg !389
  %45561 = load double, ptr %13, align 8, !dbg !390
  %45562 = fsub double %45561, 0x400921FB54442D18, !dbg !392
  %45563 = call double @llvm.fabs.f64(double %45562), !dbg !393
  %45564 = fcmp ole double %45563, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45564, label %14330, label %45565, !dbg !395

45565:                                            ; preds = %45488
  %45566 = load double, ptr %13, align 8, !dbg !396
  %45567 = fadd double %45566, 0x400921FB54442D18, !dbg !397
  %45568 = call double @llvm.fabs.f64(double %45567), !dbg !398
  %45569 = fcmp ole double %45568, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45569, label %14330, label %45570, !dbg !400

45570:                                            ; preds = %45565
  br label %45571, !dbg !403

45571:                                            ; preds = %45570
  %45572 = load i32, ptr %10, align 4, !dbg !404
  %45573 = add nsw i32 %45572, 1, !dbg !404
  store i32 %45573, ptr %10, align 4, !dbg !404
  %45574 = load i32, ptr %10, align 4, !dbg !364
  %45575 = load i32, ptr %8, align 4, !dbg !366
  %45576 = icmp slt i32 %45574, %45575, !dbg !367
  br i1 %45576, label %45577, label %48422, !dbg !368

45577:                                            ; preds = %45571
  %45578 = load i32, ptr %10, align 4, !dbg !369
  %45579 = sext i32 %45578 to i64, !dbg !371
  %45580 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45579, !dbg !371
  %45581 = load double, ptr %6, align 8, !dbg !372
  %45582 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45583 = load double, ptr %45582, align 8, !dbg !372
  %45584 = load double, ptr %45580, align 16, !dbg !372
  %45585 = getelementptr inbounds { double, double }, ptr %45580, i32 0, i32 1, !dbg !372
  %45586 = load double, ptr %45585, align 8, !dbg !372
  %45587 = call { double, double } @make_vec(double %45581, double %45583, double %45584, double %45586), !dbg !372
  %45588 = extractvalue { double, double } %45587, 0, !dbg !372
  store double %45588, ptr %16, align 8, !dbg !372
  %45589 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45590 = extractvalue { double, double } %45587, 1, !dbg !372
  store double %45590, ptr %45589, align 8, !dbg !372
  %45591 = load i32, ptr %10, align 4, !dbg !373
  %45592 = add nsw i32 %45591, 1, !dbg !374
  %45593 = sext i32 %45592 to i64, !dbg !375
  %45594 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45593, !dbg !375
  %45595 = load double, ptr %6, align 8, !dbg !376
  %45596 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45597 = load double, ptr %45596, align 8, !dbg !376
  %45598 = load double, ptr %45594, align 16, !dbg !376
  %45599 = getelementptr inbounds { double, double }, ptr %45594, i32 0, i32 1, !dbg !376
  %45600 = load double, ptr %45599, align 8, !dbg !376
  %45601 = call { double, double } @make_vec(double %45595, double %45597, double %45598, double %45600), !dbg !376
  %45602 = extractvalue { double, double } %45601, 0, !dbg !376
  store double %45602, ptr %17, align 8, !dbg !376
  %45603 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45604 = extractvalue { double, double } %45601, 1, !dbg !376
  store double %45604, ptr %45603, align 8, !dbg !376
  %45605 = load double, ptr %16, align 8, !dbg !377
  %45606 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45607 = load double, ptr %45606, align 8, !dbg !377
  %45608 = load double, ptr %17, align 8, !dbg !377
  %45609 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45610 = load double, ptr %45609, align 8, !dbg !377
  %45611 = call double @cross(double %45605, double %45607, double %45608, double %45610), !dbg !377
  %45612 = load i32, ptr %10, align 4, !dbg !378
  %45613 = sext i32 %45612 to i64, !dbg !379
  %45614 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45613, !dbg !379
  %45615 = load double, ptr %6, align 8, !dbg !380
  %45616 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45617 = load double, ptr %45616, align 8, !dbg !380
  %45618 = load double, ptr %45614, align 16, !dbg !380
  %45619 = getelementptr inbounds { double, double }, ptr %45614, i32 0, i32 1, !dbg !380
  %45620 = load double, ptr %45619, align 8, !dbg !380
  %45621 = call { double, double } @make_vec(double %45615, double %45617, double %45618, double %45620), !dbg !380
  %45622 = extractvalue { double, double } %45621, 0, !dbg !380
  store double %45622, ptr %18, align 8, !dbg !380
  %45623 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45624 = extractvalue { double, double } %45621, 1, !dbg !380
  store double %45624, ptr %45623, align 8, !dbg !380
  %45625 = load i32, ptr %10, align 4, !dbg !381
  %45626 = add nsw i32 %45625, 1, !dbg !382
  %45627 = sext i32 %45626 to i64, !dbg !383
  %45628 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45627, !dbg !383
  %45629 = load double, ptr %6, align 8, !dbg !384
  %45630 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45631 = load double, ptr %45630, align 8, !dbg !384
  %45632 = load double, ptr %45628, align 16, !dbg !384
  %45633 = getelementptr inbounds { double, double }, ptr %45628, i32 0, i32 1, !dbg !384
  %45634 = load double, ptr %45633, align 8, !dbg !384
  %45635 = call { double, double } @make_vec(double %45629, double %45631, double %45632, double %45634), !dbg !384
  %45636 = extractvalue { double, double } %45635, 0, !dbg !384
  store double %45636, ptr %19, align 8, !dbg !384
  %45637 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45638 = extractvalue { double, double } %45635, 1, !dbg !384
  store double %45638, ptr %45637, align 8, !dbg !384
  %45639 = load double, ptr %18, align 8, !dbg !385
  %45640 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45641 = load double, ptr %45640, align 8, !dbg !385
  %45642 = load double, ptr %19, align 8, !dbg !385
  %45643 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45644 = load double, ptr %45643, align 8, !dbg !385
  %45645 = call double @dot(double %45639, double %45641, double %45642, double %45644), !dbg !385
  %45646 = call double @atan2(double noundef %45611, double noundef %45645) #6, !dbg !386
  store double %45646, ptr %13, align 8, !dbg !387
  %45647 = load double, ptr %13, align 8, !dbg !388
  %45648 = load double, ptr %14, align 8, !dbg !389
  %45649 = fadd double %45648, %45647, !dbg !389
  store double %45649, ptr %14, align 8, !dbg !389
  %45650 = load double, ptr %13, align 8, !dbg !390
  %45651 = fsub double %45650, 0x400921FB54442D18, !dbg !392
  %45652 = call double @llvm.fabs.f64(double %45651), !dbg !393
  %45653 = fcmp ole double %45652, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45653, label %14330, label %45654, !dbg !395

45654:                                            ; preds = %45577
  %45655 = load double, ptr %13, align 8, !dbg !396
  %45656 = fadd double %45655, 0x400921FB54442D18, !dbg !397
  %45657 = call double @llvm.fabs.f64(double %45656), !dbg !398
  %45658 = fcmp ole double %45657, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45658, label %14330, label %45659, !dbg !400

45659:                                            ; preds = %45654
  br label %45660, !dbg !403

45660:                                            ; preds = %45659
  %45661 = load i32, ptr %10, align 4, !dbg !404
  %45662 = add nsw i32 %45661, 1, !dbg !404
  store i32 %45662, ptr %10, align 4, !dbg !404
  %45663 = load i32, ptr %10, align 4, !dbg !364
  %45664 = load i32, ptr %8, align 4, !dbg !366
  %45665 = icmp slt i32 %45663, %45664, !dbg !367
  br i1 %45665, label %45666, label %48422, !dbg !368

45666:                                            ; preds = %45660
  %45667 = load i32, ptr %10, align 4, !dbg !369
  %45668 = sext i32 %45667 to i64, !dbg !371
  %45669 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45668, !dbg !371
  %45670 = load double, ptr %6, align 8, !dbg !372
  %45671 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45672 = load double, ptr %45671, align 8, !dbg !372
  %45673 = load double, ptr %45669, align 16, !dbg !372
  %45674 = getelementptr inbounds { double, double }, ptr %45669, i32 0, i32 1, !dbg !372
  %45675 = load double, ptr %45674, align 8, !dbg !372
  %45676 = call { double, double } @make_vec(double %45670, double %45672, double %45673, double %45675), !dbg !372
  %45677 = extractvalue { double, double } %45676, 0, !dbg !372
  store double %45677, ptr %16, align 8, !dbg !372
  %45678 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45679 = extractvalue { double, double } %45676, 1, !dbg !372
  store double %45679, ptr %45678, align 8, !dbg !372
  %45680 = load i32, ptr %10, align 4, !dbg !373
  %45681 = add nsw i32 %45680, 1, !dbg !374
  %45682 = sext i32 %45681 to i64, !dbg !375
  %45683 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45682, !dbg !375
  %45684 = load double, ptr %6, align 8, !dbg !376
  %45685 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45686 = load double, ptr %45685, align 8, !dbg !376
  %45687 = load double, ptr %45683, align 16, !dbg !376
  %45688 = getelementptr inbounds { double, double }, ptr %45683, i32 0, i32 1, !dbg !376
  %45689 = load double, ptr %45688, align 8, !dbg !376
  %45690 = call { double, double } @make_vec(double %45684, double %45686, double %45687, double %45689), !dbg !376
  %45691 = extractvalue { double, double } %45690, 0, !dbg !376
  store double %45691, ptr %17, align 8, !dbg !376
  %45692 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45693 = extractvalue { double, double } %45690, 1, !dbg !376
  store double %45693, ptr %45692, align 8, !dbg !376
  %45694 = load double, ptr %16, align 8, !dbg !377
  %45695 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45696 = load double, ptr %45695, align 8, !dbg !377
  %45697 = load double, ptr %17, align 8, !dbg !377
  %45698 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45699 = load double, ptr %45698, align 8, !dbg !377
  %45700 = call double @cross(double %45694, double %45696, double %45697, double %45699), !dbg !377
  %45701 = load i32, ptr %10, align 4, !dbg !378
  %45702 = sext i32 %45701 to i64, !dbg !379
  %45703 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45702, !dbg !379
  %45704 = load double, ptr %6, align 8, !dbg !380
  %45705 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45706 = load double, ptr %45705, align 8, !dbg !380
  %45707 = load double, ptr %45703, align 16, !dbg !380
  %45708 = getelementptr inbounds { double, double }, ptr %45703, i32 0, i32 1, !dbg !380
  %45709 = load double, ptr %45708, align 8, !dbg !380
  %45710 = call { double, double } @make_vec(double %45704, double %45706, double %45707, double %45709), !dbg !380
  %45711 = extractvalue { double, double } %45710, 0, !dbg !380
  store double %45711, ptr %18, align 8, !dbg !380
  %45712 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45713 = extractvalue { double, double } %45710, 1, !dbg !380
  store double %45713, ptr %45712, align 8, !dbg !380
  %45714 = load i32, ptr %10, align 4, !dbg !381
  %45715 = add nsw i32 %45714, 1, !dbg !382
  %45716 = sext i32 %45715 to i64, !dbg !383
  %45717 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45716, !dbg !383
  %45718 = load double, ptr %6, align 8, !dbg !384
  %45719 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45720 = load double, ptr %45719, align 8, !dbg !384
  %45721 = load double, ptr %45717, align 16, !dbg !384
  %45722 = getelementptr inbounds { double, double }, ptr %45717, i32 0, i32 1, !dbg !384
  %45723 = load double, ptr %45722, align 8, !dbg !384
  %45724 = call { double, double } @make_vec(double %45718, double %45720, double %45721, double %45723), !dbg !384
  %45725 = extractvalue { double, double } %45724, 0, !dbg !384
  store double %45725, ptr %19, align 8, !dbg !384
  %45726 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45727 = extractvalue { double, double } %45724, 1, !dbg !384
  store double %45727, ptr %45726, align 8, !dbg !384
  %45728 = load double, ptr %18, align 8, !dbg !385
  %45729 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45730 = load double, ptr %45729, align 8, !dbg !385
  %45731 = load double, ptr %19, align 8, !dbg !385
  %45732 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45733 = load double, ptr %45732, align 8, !dbg !385
  %45734 = call double @dot(double %45728, double %45730, double %45731, double %45733), !dbg !385
  %45735 = call double @atan2(double noundef %45700, double noundef %45734) #6, !dbg !386
  store double %45735, ptr %13, align 8, !dbg !387
  %45736 = load double, ptr %13, align 8, !dbg !388
  %45737 = load double, ptr %14, align 8, !dbg !389
  %45738 = fadd double %45737, %45736, !dbg !389
  store double %45738, ptr %14, align 8, !dbg !389
  %45739 = load double, ptr %13, align 8, !dbg !390
  %45740 = fsub double %45739, 0x400921FB54442D18, !dbg !392
  %45741 = call double @llvm.fabs.f64(double %45740), !dbg !393
  %45742 = fcmp ole double %45741, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45742, label %14330, label %45743, !dbg !395

45743:                                            ; preds = %45666
  %45744 = load double, ptr %13, align 8, !dbg !396
  %45745 = fadd double %45744, 0x400921FB54442D18, !dbg !397
  %45746 = call double @llvm.fabs.f64(double %45745), !dbg !398
  %45747 = fcmp ole double %45746, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45747, label %14330, label %45748, !dbg !400

45748:                                            ; preds = %45743
  br label %45749, !dbg !403

45749:                                            ; preds = %45748
  %45750 = load i32, ptr %10, align 4, !dbg !404
  %45751 = add nsw i32 %45750, 1, !dbg !404
  store i32 %45751, ptr %10, align 4, !dbg !404
  %45752 = load i32, ptr %10, align 4, !dbg !364
  %45753 = load i32, ptr %8, align 4, !dbg !366
  %45754 = icmp slt i32 %45752, %45753, !dbg !367
  br i1 %45754, label %45755, label %48422, !dbg !368

45755:                                            ; preds = %45749
  %45756 = load i32, ptr %10, align 4, !dbg !369
  %45757 = sext i32 %45756 to i64, !dbg !371
  %45758 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45757, !dbg !371
  %45759 = load double, ptr %6, align 8, !dbg !372
  %45760 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45761 = load double, ptr %45760, align 8, !dbg !372
  %45762 = load double, ptr %45758, align 16, !dbg !372
  %45763 = getelementptr inbounds { double, double }, ptr %45758, i32 0, i32 1, !dbg !372
  %45764 = load double, ptr %45763, align 8, !dbg !372
  %45765 = call { double, double } @make_vec(double %45759, double %45761, double %45762, double %45764), !dbg !372
  %45766 = extractvalue { double, double } %45765, 0, !dbg !372
  store double %45766, ptr %16, align 8, !dbg !372
  %45767 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45768 = extractvalue { double, double } %45765, 1, !dbg !372
  store double %45768, ptr %45767, align 8, !dbg !372
  %45769 = load i32, ptr %10, align 4, !dbg !373
  %45770 = add nsw i32 %45769, 1, !dbg !374
  %45771 = sext i32 %45770 to i64, !dbg !375
  %45772 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45771, !dbg !375
  %45773 = load double, ptr %6, align 8, !dbg !376
  %45774 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45775 = load double, ptr %45774, align 8, !dbg !376
  %45776 = load double, ptr %45772, align 16, !dbg !376
  %45777 = getelementptr inbounds { double, double }, ptr %45772, i32 0, i32 1, !dbg !376
  %45778 = load double, ptr %45777, align 8, !dbg !376
  %45779 = call { double, double } @make_vec(double %45773, double %45775, double %45776, double %45778), !dbg !376
  %45780 = extractvalue { double, double } %45779, 0, !dbg !376
  store double %45780, ptr %17, align 8, !dbg !376
  %45781 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45782 = extractvalue { double, double } %45779, 1, !dbg !376
  store double %45782, ptr %45781, align 8, !dbg !376
  %45783 = load double, ptr %16, align 8, !dbg !377
  %45784 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45785 = load double, ptr %45784, align 8, !dbg !377
  %45786 = load double, ptr %17, align 8, !dbg !377
  %45787 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45788 = load double, ptr %45787, align 8, !dbg !377
  %45789 = call double @cross(double %45783, double %45785, double %45786, double %45788), !dbg !377
  %45790 = load i32, ptr %10, align 4, !dbg !378
  %45791 = sext i32 %45790 to i64, !dbg !379
  %45792 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45791, !dbg !379
  %45793 = load double, ptr %6, align 8, !dbg !380
  %45794 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45795 = load double, ptr %45794, align 8, !dbg !380
  %45796 = load double, ptr %45792, align 16, !dbg !380
  %45797 = getelementptr inbounds { double, double }, ptr %45792, i32 0, i32 1, !dbg !380
  %45798 = load double, ptr %45797, align 8, !dbg !380
  %45799 = call { double, double } @make_vec(double %45793, double %45795, double %45796, double %45798), !dbg !380
  %45800 = extractvalue { double, double } %45799, 0, !dbg !380
  store double %45800, ptr %18, align 8, !dbg !380
  %45801 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45802 = extractvalue { double, double } %45799, 1, !dbg !380
  store double %45802, ptr %45801, align 8, !dbg !380
  %45803 = load i32, ptr %10, align 4, !dbg !381
  %45804 = add nsw i32 %45803, 1, !dbg !382
  %45805 = sext i32 %45804 to i64, !dbg !383
  %45806 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45805, !dbg !383
  %45807 = load double, ptr %6, align 8, !dbg !384
  %45808 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45809 = load double, ptr %45808, align 8, !dbg !384
  %45810 = load double, ptr %45806, align 16, !dbg !384
  %45811 = getelementptr inbounds { double, double }, ptr %45806, i32 0, i32 1, !dbg !384
  %45812 = load double, ptr %45811, align 8, !dbg !384
  %45813 = call { double, double } @make_vec(double %45807, double %45809, double %45810, double %45812), !dbg !384
  %45814 = extractvalue { double, double } %45813, 0, !dbg !384
  store double %45814, ptr %19, align 8, !dbg !384
  %45815 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45816 = extractvalue { double, double } %45813, 1, !dbg !384
  store double %45816, ptr %45815, align 8, !dbg !384
  %45817 = load double, ptr %18, align 8, !dbg !385
  %45818 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45819 = load double, ptr %45818, align 8, !dbg !385
  %45820 = load double, ptr %19, align 8, !dbg !385
  %45821 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45822 = load double, ptr %45821, align 8, !dbg !385
  %45823 = call double @dot(double %45817, double %45819, double %45820, double %45822), !dbg !385
  %45824 = call double @atan2(double noundef %45789, double noundef %45823) #6, !dbg !386
  store double %45824, ptr %13, align 8, !dbg !387
  %45825 = load double, ptr %13, align 8, !dbg !388
  %45826 = load double, ptr %14, align 8, !dbg !389
  %45827 = fadd double %45826, %45825, !dbg !389
  store double %45827, ptr %14, align 8, !dbg !389
  %45828 = load double, ptr %13, align 8, !dbg !390
  %45829 = fsub double %45828, 0x400921FB54442D18, !dbg !392
  %45830 = call double @llvm.fabs.f64(double %45829), !dbg !393
  %45831 = fcmp ole double %45830, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45831, label %14330, label %45832, !dbg !395

45832:                                            ; preds = %45755
  %45833 = load double, ptr %13, align 8, !dbg !396
  %45834 = fadd double %45833, 0x400921FB54442D18, !dbg !397
  %45835 = call double @llvm.fabs.f64(double %45834), !dbg !398
  %45836 = fcmp ole double %45835, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45836, label %14330, label %45837, !dbg !400

45837:                                            ; preds = %45832
  br label %45838, !dbg !403

45838:                                            ; preds = %45837
  %45839 = load i32, ptr %10, align 4, !dbg !404
  %45840 = add nsw i32 %45839, 1, !dbg !404
  store i32 %45840, ptr %10, align 4, !dbg !404
  %45841 = load i32, ptr %10, align 4, !dbg !364
  %45842 = load i32, ptr %8, align 4, !dbg !366
  %45843 = icmp slt i32 %45841, %45842, !dbg !367
  br i1 %45843, label %45844, label %48422, !dbg !368

45844:                                            ; preds = %45838
  %45845 = load i32, ptr %10, align 4, !dbg !369
  %45846 = sext i32 %45845 to i64, !dbg !371
  %45847 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45846, !dbg !371
  %45848 = load double, ptr %6, align 8, !dbg !372
  %45849 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45850 = load double, ptr %45849, align 8, !dbg !372
  %45851 = load double, ptr %45847, align 16, !dbg !372
  %45852 = getelementptr inbounds { double, double }, ptr %45847, i32 0, i32 1, !dbg !372
  %45853 = load double, ptr %45852, align 8, !dbg !372
  %45854 = call { double, double } @make_vec(double %45848, double %45850, double %45851, double %45853), !dbg !372
  %45855 = extractvalue { double, double } %45854, 0, !dbg !372
  store double %45855, ptr %16, align 8, !dbg !372
  %45856 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45857 = extractvalue { double, double } %45854, 1, !dbg !372
  store double %45857, ptr %45856, align 8, !dbg !372
  %45858 = load i32, ptr %10, align 4, !dbg !373
  %45859 = add nsw i32 %45858, 1, !dbg !374
  %45860 = sext i32 %45859 to i64, !dbg !375
  %45861 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45860, !dbg !375
  %45862 = load double, ptr %6, align 8, !dbg !376
  %45863 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45864 = load double, ptr %45863, align 8, !dbg !376
  %45865 = load double, ptr %45861, align 16, !dbg !376
  %45866 = getelementptr inbounds { double, double }, ptr %45861, i32 0, i32 1, !dbg !376
  %45867 = load double, ptr %45866, align 8, !dbg !376
  %45868 = call { double, double } @make_vec(double %45862, double %45864, double %45865, double %45867), !dbg !376
  %45869 = extractvalue { double, double } %45868, 0, !dbg !376
  store double %45869, ptr %17, align 8, !dbg !376
  %45870 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45871 = extractvalue { double, double } %45868, 1, !dbg !376
  store double %45871, ptr %45870, align 8, !dbg !376
  %45872 = load double, ptr %16, align 8, !dbg !377
  %45873 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45874 = load double, ptr %45873, align 8, !dbg !377
  %45875 = load double, ptr %17, align 8, !dbg !377
  %45876 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45877 = load double, ptr %45876, align 8, !dbg !377
  %45878 = call double @cross(double %45872, double %45874, double %45875, double %45877), !dbg !377
  %45879 = load i32, ptr %10, align 4, !dbg !378
  %45880 = sext i32 %45879 to i64, !dbg !379
  %45881 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45880, !dbg !379
  %45882 = load double, ptr %6, align 8, !dbg !380
  %45883 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45884 = load double, ptr %45883, align 8, !dbg !380
  %45885 = load double, ptr %45881, align 16, !dbg !380
  %45886 = getelementptr inbounds { double, double }, ptr %45881, i32 0, i32 1, !dbg !380
  %45887 = load double, ptr %45886, align 8, !dbg !380
  %45888 = call { double, double } @make_vec(double %45882, double %45884, double %45885, double %45887), !dbg !380
  %45889 = extractvalue { double, double } %45888, 0, !dbg !380
  store double %45889, ptr %18, align 8, !dbg !380
  %45890 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45891 = extractvalue { double, double } %45888, 1, !dbg !380
  store double %45891, ptr %45890, align 8, !dbg !380
  %45892 = load i32, ptr %10, align 4, !dbg !381
  %45893 = add nsw i32 %45892, 1, !dbg !382
  %45894 = sext i32 %45893 to i64, !dbg !383
  %45895 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45894, !dbg !383
  %45896 = load double, ptr %6, align 8, !dbg !384
  %45897 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45898 = load double, ptr %45897, align 8, !dbg !384
  %45899 = load double, ptr %45895, align 16, !dbg !384
  %45900 = getelementptr inbounds { double, double }, ptr %45895, i32 0, i32 1, !dbg !384
  %45901 = load double, ptr %45900, align 8, !dbg !384
  %45902 = call { double, double } @make_vec(double %45896, double %45898, double %45899, double %45901), !dbg !384
  %45903 = extractvalue { double, double } %45902, 0, !dbg !384
  store double %45903, ptr %19, align 8, !dbg !384
  %45904 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45905 = extractvalue { double, double } %45902, 1, !dbg !384
  store double %45905, ptr %45904, align 8, !dbg !384
  %45906 = load double, ptr %18, align 8, !dbg !385
  %45907 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45908 = load double, ptr %45907, align 8, !dbg !385
  %45909 = load double, ptr %19, align 8, !dbg !385
  %45910 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %45911 = load double, ptr %45910, align 8, !dbg !385
  %45912 = call double @dot(double %45906, double %45908, double %45909, double %45911), !dbg !385
  %45913 = call double @atan2(double noundef %45878, double noundef %45912) #6, !dbg !386
  store double %45913, ptr %13, align 8, !dbg !387
  %45914 = load double, ptr %13, align 8, !dbg !388
  %45915 = load double, ptr %14, align 8, !dbg !389
  %45916 = fadd double %45915, %45914, !dbg !389
  store double %45916, ptr %14, align 8, !dbg !389
  %45917 = load double, ptr %13, align 8, !dbg !390
  %45918 = fsub double %45917, 0x400921FB54442D18, !dbg !392
  %45919 = call double @llvm.fabs.f64(double %45918), !dbg !393
  %45920 = fcmp ole double %45919, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %45920, label %14330, label %45921, !dbg !395

45921:                                            ; preds = %45844
  %45922 = load double, ptr %13, align 8, !dbg !396
  %45923 = fadd double %45922, 0x400921FB54442D18, !dbg !397
  %45924 = call double @llvm.fabs.f64(double %45923), !dbg !398
  %45925 = fcmp ole double %45924, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %45925, label %14330, label %45926, !dbg !400

45926:                                            ; preds = %45921
  br label %45927, !dbg !403

45927:                                            ; preds = %45926
  %45928 = load i32, ptr %10, align 4, !dbg !404
  %45929 = add nsw i32 %45928, 1, !dbg !404
  store i32 %45929, ptr %10, align 4, !dbg !404
  %45930 = load i32, ptr %10, align 4, !dbg !364
  %45931 = load i32, ptr %8, align 4, !dbg !366
  %45932 = icmp slt i32 %45930, %45931, !dbg !367
  br i1 %45932, label %45933, label %48422, !dbg !368

45933:                                            ; preds = %45927
  %45934 = load i32, ptr %10, align 4, !dbg !369
  %45935 = sext i32 %45934 to i64, !dbg !371
  %45936 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45935, !dbg !371
  %45937 = load double, ptr %6, align 8, !dbg !372
  %45938 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %45939 = load double, ptr %45938, align 8, !dbg !372
  %45940 = load double, ptr %45936, align 16, !dbg !372
  %45941 = getelementptr inbounds { double, double }, ptr %45936, i32 0, i32 1, !dbg !372
  %45942 = load double, ptr %45941, align 8, !dbg !372
  %45943 = call { double, double } @make_vec(double %45937, double %45939, double %45940, double %45942), !dbg !372
  %45944 = extractvalue { double, double } %45943, 0, !dbg !372
  store double %45944, ptr %16, align 8, !dbg !372
  %45945 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %45946 = extractvalue { double, double } %45943, 1, !dbg !372
  store double %45946, ptr %45945, align 8, !dbg !372
  %45947 = load i32, ptr %10, align 4, !dbg !373
  %45948 = add nsw i32 %45947, 1, !dbg !374
  %45949 = sext i32 %45948 to i64, !dbg !375
  %45950 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45949, !dbg !375
  %45951 = load double, ptr %6, align 8, !dbg !376
  %45952 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %45953 = load double, ptr %45952, align 8, !dbg !376
  %45954 = load double, ptr %45950, align 16, !dbg !376
  %45955 = getelementptr inbounds { double, double }, ptr %45950, i32 0, i32 1, !dbg !376
  %45956 = load double, ptr %45955, align 8, !dbg !376
  %45957 = call { double, double } @make_vec(double %45951, double %45953, double %45954, double %45956), !dbg !376
  %45958 = extractvalue { double, double } %45957, 0, !dbg !376
  store double %45958, ptr %17, align 8, !dbg !376
  %45959 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %45960 = extractvalue { double, double } %45957, 1, !dbg !376
  store double %45960, ptr %45959, align 8, !dbg !376
  %45961 = load double, ptr %16, align 8, !dbg !377
  %45962 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %45963 = load double, ptr %45962, align 8, !dbg !377
  %45964 = load double, ptr %17, align 8, !dbg !377
  %45965 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %45966 = load double, ptr %45965, align 8, !dbg !377
  %45967 = call double @cross(double %45961, double %45963, double %45964, double %45966), !dbg !377
  %45968 = load i32, ptr %10, align 4, !dbg !378
  %45969 = sext i32 %45968 to i64, !dbg !379
  %45970 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45969, !dbg !379
  %45971 = load double, ptr %6, align 8, !dbg !380
  %45972 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %45973 = load double, ptr %45972, align 8, !dbg !380
  %45974 = load double, ptr %45970, align 16, !dbg !380
  %45975 = getelementptr inbounds { double, double }, ptr %45970, i32 0, i32 1, !dbg !380
  %45976 = load double, ptr %45975, align 8, !dbg !380
  %45977 = call { double, double } @make_vec(double %45971, double %45973, double %45974, double %45976), !dbg !380
  %45978 = extractvalue { double, double } %45977, 0, !dbg !380
  store double %45978, ptr %18, align 8, !dbg !380
  %45979 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %45980 = extractvalue { double, double } %45977, 1, !dbg !380
  store double %45980, ptr %45979, align 8, !dbg !380
  %45981 = load i32, ptr %10, align 4, !dbg !381
  %45982 = add nsw i32 %45981, 1, !dbg !382
  %45983 = sext i32 %45982 to i64, !dbg !383
  %45984 = getelementptr inbounds %struct.POINT, ptr %26, i64 %45983, !dbg !383
  %45985 = load double, ptr %6, align 8, !dbg !384
  %45986 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %45987 = load double, ptr %45986, align 8, !dbg !384
  %45988 = load double, ptr %45984, align 16, !dbg !384
  %45989 = getelementptr inbounds { double, double }, ptr %45984, i32 0, i32 1, !dbg !384
  %45990 = load double, ptr %45989, align 8, !dbg !384
  %45991 = call { double, double } @make_vec(double %45985, double %45987, double %45988, double %45990), !dbg !384
  %45992 = extractvalue { double, double } %45991, 0, !dbg !384
  store double %45992, ptr %19, align 8, !dbg !384
  %45993 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %45994 = extractvalue { double, double } %45991, 1, !dbg !384
  store double %45994, ptr %45993, align 8, !dbg !384
  %45995 = load double, ptr %18, align 8, !dbg !385
  %45996 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %45997 = load double, ptr %45996, align 8, !dbg !385
  %45998 = load double, ptr %19, align 8, !dbg !385
  %45999 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46000 = load double, ptr %45999, align 8, !dbg !385
  %46001 = call double @dot(double %45995, double %45997, double %45998, double %46000), !dbg !385
  %46002 = call double @atan2(double noundef %45967, double noundef %46001) #6, !dbg !386
  store double %46002, ptr %13, align 8, !dbg !387
  %46003 = load double, ptr %13, align 8, !dbg !388
  %46004 = load double, ptr %14, align 8, !dbg !389
  %46005 = fadd double %46004, %46003, !dbg !389
  store double %46005, ptr %14, align 8, !dbg !389
  %46006 = load double, ptr %13, align 8, !dbg !390
  %46007 = fsub double %46006, 0x400921FB54442D18, !dbg !392
  %46008 = call double @llvm.fabs.f64(double %46007), !dbg !393
  %46009 = fcmp ole double %46008, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46009, label %14330, label %46010, !dbg !395

46010:                                            ; preds = %45933
  %46011 = load double, ptr %13, align 8, !dbg !396
  %46012 = fadd double %46011, 0x400921FB54442D18, !dbg !397
  %46013 = call double @llvm.fabs.f64(double %46012), !dbg !398
  %46014 = fcmp ole double %46013, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46014, label %14330, label %46015, !dbg !400

46015:                                            ; preds = %46010
  br label %46016, !dbg !403

46016:                                            ; preds = %46015
  %46017 = load i32, ptr %10, align 4, !dbg !404
  %46018 = add nsw i32 %46017, 1, !dbg !404
  store i32 %46018, ptr %10, align 4, !dbg !404
  %46019 = load i32, ptr %10, align 4, !dbg !364
  %46020 = load i32, ptr %8, align 4, !dbg !366
  %46021 = icmp slt i32 %46019, %46020, !dbg !367
  br i1 %46021, label %46022, label %48422, !dbg !368

46022:                                            ; preds = %46016
  %46023 = load i32, ptr %10, align 4, !dbg !369
  %46024 = sext i32 %46023 to i64, !dbg !371
  %46025 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46024, !dbg !371
  %46026 = load double, ptr %6, align 8, !dbg !372
  %46027 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46028 = load double, ptr %46027, align 8, !dbg !372
  %46029 = load double, ptr %46025, align 16, !dbg !372
  %46030 = getelementptr inbounds { double, double }, ptr %46025, i32 0, i32 1, !dbg !372
  %46031 = load double, ptr %46030, align 8, !dbg !372
  %46032 = call { double, double } @make_vec(double %46026, double %46028, double %46029, double %46031), !dbg !372
  %46033 = extractvalue { double, double } %46032, 0, !dbg !372
  store double %46033, ptr %16, align 8, !dbg !372
  %46034 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46035 = extractvalue { double, double } %46032, 1, !dbg !372
  store double %46035, ptr %46034, align 8, !dbg !372
  %46036 = load i32, ptr %10, align 4, !dbg !373
  %46037 = add nsw i32 %46036, 1, !dbg !374
  %46038 = sext i32 %46037 to i64, !dbg !375
  %46039 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46038, !dbg !375
  %46040 = load double, ptr %6, align 8, !dbg !376
  %46041 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46042 = load double, ptr %46041, align 8, !dbg !376
  %46043 = load double, ptr %46039, align 16, !dbg !376
  %46044 = getelementptr inbounds { double, double }, ptr %46039, i32 0, i32 1, !dbg !376
  %46045 = load double, ptr %46044, align 8, !dbg !376
  %46046 = call { double, double } @make_vec(double %46040, double %46042, double %46043, double %46045), !dbg !376
  %46047 = extractvalue { double, double } %46046, 0, !dbg !376
  store double %46047, ptr %17, align 8, !dbg !376
  %46048 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46049 = extractvalue { double, double } %46046, 1, !dbg !376
  store double %46049, ptr %46048, align 8, !dbg !376
  %46050 = load double, ptr %16, align 8, !dbg !377
  %46051 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46052 = load double, ptr %46051, align 8, !dbg !377
  %46053 = load double, ptr %17, align 8, !dbg !377
  %46054 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46055 = load double, ptr %46054, align 8, !dbg !377
  %46056 = call double @cross(double %46050, double %46052, double %46053, double %46055), !dbg !377
  %46057 = load i32, ptr %10, align 4, !dbg !378
  %46058 = sext i32 %46057 to i64, !dbg !379
  %46059 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46058, !dbg !379
  %46060 = load double, ptr %6, align 8, !dbg !380
  %46061 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46062 = load double, ptr %46061, align 8, !dbg !380
  %46063 = load double, ptr %46059, align 16, !dbg !380
  %46064 = getelementptr inbounds { double, double }, ptr %46059, i32 0, i32 1, !dbg !380
  %46065 = load double, ptr %46064, align 8, !dbg !380
  %46066 = call { double, double } @make_vec(double %46060, double %46062, double %46063, double %46065), !dbg !380
  %46067 = extractvalue { double, double } %46066, 0, !dbg !380
  store double %46067, ptr %18, align 8, !dbg !380
  %46068 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46069 = extractvalue { double, double } %46066, 1, !dbg !380
  store double %46069, ptr %46068, align 8, !dbg !380
  %46070 = load i32, ptr %10, align 4, !dbg !381
  %46071 = add nsw i32 %46070, 1, !dbg !382
  %46072 = sext i32 %46071 to i64, !dbg !383
  %46073 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46072, !dbg !383
  %46074 = load double, ptr %6, align 8, !dbg !384
  %46075 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46076 = load double, ptr %46075, align 8, !dbg !384
  %46077 = load double, ptr %46073, align 16, !dbg !384
  %46078 = getelementptr inbounds { double, double }, ptr %46073, i32 0, i32 1, !dbg !384
  %46079 = load double, ptr %46078, align 8, !dbg !384
  %46080 = call { double, double } @make_vec(double %46074, double %46076, double %46077, double %46079), !dbg !384
  %46081 = extractvalue { double, double } %46080, 0, !dbg !384
  store double %46081, ptr %19, align 8, !dbg !384
  %46082 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46083 = extractvalue { double, double } %46080, 1, !dbg !384
  store double %46083, ptr %46082, align 8, !dbg !384
  %46084 = load double, ptr %18, align 8, !dbg !385
  %46085 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46086 = load double, ptr %46085, align 8, !dbg !385
  %46087 = load double, ptr %19, align 8, !dbg !385
  %46088 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46089 = load double, ptr %46088, align 8, !dbg !385
  %46090 = call double @dot(double %46084, double %46086, double %46087, double %46089), !dbg !385
  %46091 = call double @atan2(double noundef %46056, double noundef %46090) #6, !dbg !386
  store double %46091, ptr %13, align 8, !dbg !387
  %46092 = load double, ptr %13, align 8, !dbg !388
  %46093 = load double, ptr %14, align 8, !dbg !389
  %46094 = fadd double %46093, %46092, !dbg !389
  store double %46094, ptr %14, align 8, !dbg !389
  %46095 = load double, ptr %13, align 8, !dbg !390
  %46096 = fsub double %46095, 0x400921FB54442D18, !dbg !392
  %46097 = call double @llvm.fabs.f64(double %46096), !dbg !393
  %46098 = fcmp ole double %46097, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46098, label %14330, label %46099, !dbg !395

46099:                                            ; preds = %46022
  %46100 = load double, ptr %13, align 8, !dbg !396
  %46101 = fadd double %46100, 0x400921FB54442D18, !dbg !397
  %46102 = call double @llvm.fabs.f64(double %46101), !dbg !398
  %46103 = fcmp ole double %46102, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46103, label %14330, label %46104, !dbg !400

46104:                                            ; preds = %46099
  br label %46105, !dbg !403

46105:                                            ; preds = %46104
  %46106 = load i32, ptr %10, align 4, !dbg !404
  %46107 = add nsw i32 %46106, 1, !dbg !404
  store i32 %46107, ptr %10, align 4, !dbg !404
  %46108 = load i32, ptr %10, align 4, !dbg !364
  %46109 = load i32, ptr %8, align 4, !dbg !366
  %46110 = icmp slt i32 %46108, %46109, !dbg !367
  br i1 %46110, label %46111, label %48422, !dbg !368

46111:                                            ; preds = %46105
  %46112 = load i32, ptr %10, align 4, !dbg !369
  %46113 = sext i32 %46112 to i64, !dbg !371
  %46114 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46113, !dbg !371
  %46115 = load double, ptr %6, align 8, !dbg !372
  %46116 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46117 = load double, ptr %46116, align 8, !dbg !372
  %46118 = load double, ptr %46114, align 16, !dbg !372
  %46119 = getelementptr inbounds { double, double }, ptr %46114, i32 0, i32 1, !dbg !372
  %46120 = load double, ptr %46119, align 8, !dbg !372
  %46121 = call { double, double } @make_vec(double %46115, double %46117, double %46118, double %46120), !dbg !372
  %46122 = extractvalue { double, double } %46121, 0, !dbg !372
  store double %46122, ptr %16, align 8, !dbg !372
  %46123 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46124 = extractvalue { double, double } %46121, 1, !dbg !372
  store double %46124, ptr %46123, align 8, !dbg !372
  %46125 = load i32, ptr %10, align 4, !dbg !373
  %46126 = add nsw i32 %46125, 1, !dbg !374
  %46127 = sext i32 %46126 to i64, !dbg !375
  %46128 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46127, !dbg !375
  %46129 = load double, ptr %6, align 8, !dbg !376
  %46130 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46131 = load double, ptr %46130, align 8, !dbg !376
  %46132 = load double, ptr %46128, align 16, !dbg !376
  %46133 = getelementptr inbounds { double, double }, ptr %46128, i32 0, i32 1, !dbg !376
  %46134 = load double, ptr %46133, align 8, !dbg !376
  %46135 = call { double, double } @make_vec(double %46129, double %46131, double %46132, double %46134), !dbg !376
  %46136 = extractvalue { double, double } %46135, 0, !dbg !376
  store double %46136, ptr %17, align 8, !dbg !376
  %46137 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46138 = extractvalue { double, double } %46135, 1, !dbg !376
  store double %46138, ptr %46137, align 8, !dbg !376
  %46139 = load double, ptr %16, align 8, !dbg !377
  %46140 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46141 = load double, ptr %46140, align 8, !dbg !377
  %46142 = load double, ptr %17, align 8, !dbg !377
  %46143 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46144 = load double, ptr %46143, align 8, !dbg !377
  %46145 = call double @cross(double %46139, double %46141, double %46142, double %46144), !dbg !377
  %46146 = load i32, ptr %10, align 4, !dbg !378
  %46147 = sext i32 %46146 to i64, !dbg !379
  %46148 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46147, !dbg !379
  %46149 = load double, ptr %6, align 8, !dbg !380
  %46150 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46151 = load double, ptr %46150, align 8, !dbg !380
  %46152 = load double, ptr %46148, align 16, !dbg !380
  %46153 = getelementptr inbounds { double, double }, ptr %46148, i32 0, i32 1, !dbg !380
  %46154 = load double, ptr %46153, align 8, !dbg !380
  %46155 = call { double, double } @make_vec(double %46149, double %46151, double %46152, double %46154), !dbg !380
  %46156 = extractvalue { double, double } %46155, 0, !dbg !380
  store double %46156, ptr %18, align 8, !dbg !380
  %46157 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46158 = extractvalue { double, double } %46155, 1, !dbg !380
  store double %46158, ptr %46157, align 8, !dbg !380
  %46159 = load i32, ptr %10, align 4, !dbg !381
  %46160 = add nsw i32 %46159, 1, !dbg !382
  %46161 = sext i32 %46160 to i64, !dbg !383
  %46162 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46161, !dbg !383
  %46163 = load double, ptr %6, align 8, !dbg !384
  %46164 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46165 = load double, ptr %46164, align 8, !dbg !384
  %46166 = load double, ptr %46162, align 16, !dbg !384
  %46167 = getelementptr inbounds { double, double }, ptr %46162, i32 0, i32 1, !dbg !384
  %46168 = load double, ptr %46167, align 8, !dbg !384
  %46169 = call { double, double } @make_vec(double %46163, double %46165, double %46166, double %46168), !dbg !384
  %46170 = extractvalue { double, double } %46169, 0, !dbg !384
  store double %46170, ptr %19, align 8, !dbg !384
  %46171 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46172 = extractvalue { double, double } %46169, 1, !dbg !384
  store double %46172, ptr %46171, align 8, !dbg !384
  %46173 = load double, ptr %18, align 8, !dbg !385
  %46174 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46175 = load double, ptr %46174, align 8, !dbg !385
  %46176 = load double, ptr %19, align 8, !dbg !385
  %46177 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46178 = load double, ptr %46177, align 8, !dbg !385
  %46179 = call double @dot(double %46173, double %46175, double %46176, double %46178), !dbg !385
  %46180 = call double @atan2(double noundef %46145, double noundef %46179) #6, !dbg !386
  store double %46180, ptr %13, align 8, !dbg !387
  %46181 = load double, ptr %13, align 8, !dbg !388
  %46182 = load double, ptr %14, align 8, !dbg !389
  %46183 = fadd double %46182, %46181, !dbg !389
  store double %46183, ptr %14, align 8, !dbg !389
  %46184 = load double, ptr %13, align 8, !dbg !390
  %46185 = fsub double %46184, 0x400921FB54442D18, !dbg !392
  %46186 = call double @llvm.fabs.f64(double %46185), !dbg !393
  %46187 = fcmp ole double %46186, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46187, label %14330, label %46188, !dbg !395

46188:                                            ; preds = %46111
  %46189 = load double, ptr %13, align 8, !dbg !396
  %46190 = fadd double %46189, 0x400921FB54442D18, !dbg !397
  %46191 = call double @llvm.fabs.f64(double %46190), !dbg !398
  %46192 = fcmp ole double %46191, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46192, label %14330, label %46193, !dbg !400

46193:                                            ; preds = %46188
  br label %46194, !dbg !403

46194:                                            ; preds = %46193
  %46195 = load i32, ptr %10, align 4, !dbg !404
  %46196 = add nsw i32 %46195, 1, !dbg !404
  store i32 %46196, ptr %10, align 4, !dbg !404
  %46197 = load i32, ptr %10, align 4, !dbg !364
  %46198 = load i32, ptr %8, align 4, !dbg !366
  %46199 = icmp slt i32 %46197, %46198, !dbg !367
  br i1 %46199, label %46200, label %48422, !dbg !368

46200:                                            ; preds = %46194
  %46201 = load i32, ptr %10, align 4, !dbg !369
  %46202 = sext i32 %46201 to i64, !dbg !371
  %46203 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46202, !dbg !371
  %46204 = load double, ptr %6, align 8, !dbg !372
  %46205 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46206 = load double, ptr %46205, align 8, !dbg !372
  %46207 = load double, ptr %46203, align 16, !dbg !372
  %46208 = getelementptr inbounds { double, double }, ptr %46203, i32 0, i32 1, !dbg !372
  %46209 = load double, ptr %46208, align 8, !dbg !372
  %46210 = call { double, double } @make_vec(double %46204, double %46206, double %46207, double %46209), !dbg !372
  %46211 = extractvalue { double, double } %46210, 0, !dbg !372
  store double %46211, ptr %16, align 8, !dbg !372
  %46212 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46213 = extractvalue { double, double } %46210, 1, !dbg !372
  store double %46213, ptr %46212, align 8, !dbg !372
  %46214 = load i32, ptr %10, align 4, !dbg !373
  %46215 = add nsw i32 %46214, 1, !dbg !374
  %46216 = sext i32 %46215 to i64, !dbg !375
  %46217 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46216, !dbg !375
  %46218 = load double, ptr %6, align 8, !dbg !376
  %46219 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46220 = load double, ptr %46219, align 8, !dbg !376
  %46221 = load double, ptr %46217, align 16, !dbg !376
  %46222 = getelementptr inbounds { double, double }, ptr %46217, i32 0, i32 1, !dbg !376
  %46223 = load double, ptr %46222, align 8, !dbg !376
  %46224 = call { double, double } @make_vec(double %46218, double %46220, double %46221, double %46223), !dbg !376
  %46225 = extractvalue { double, double } %46224, 0, !dbg !376
  store double %46225, ptr %17, align 8, !dbg !376
  %46226 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46227 = extractvalue { double, double } %46224, 1, !dbg !376
  store double %46227, ptr %46226, align 8, !dbg !376
  %46228 = load double, ptr %16, align 8, !dbg !377
  %46229 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46230 = load double, ptr %46229, align 8, !dbg !377
  %46231 = load double, ptr %17, align 8, !dbg !377
  %46232 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46233 = load double, ptr %46232, align 8, !dbg !377
  %46234 = call double @cross(double %46228, double %46230, double %46231, double %46233), !dbg !377
  %46235 = load i32, ptr %10, align 4, !dbg !378
  %46236 = sext i32 %46235 to i64, !dbg !379
  %46237 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46236, !dbg !379
  %46238 = load double, ptr %6, align 8, !dbg !380
  %46239 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46240 = load double, ptr %46239, align 8, !dbg !380
  %46241 = load double, ptr %46237, align 16, !dbg !380
  %46242 = getelementptr inbounds { double, double }, ptr %46237, i32 0, i32 1, !dbg !380
  %46243 = load double, ptr %46242, align 8, !dbg !380
  %46244 = call { double, double } @make_vec(double %46238, double %46240, double %46241, double %46243), !dbg !380
  %46245 = extractvalue { double, double } %46244, 0, !dbg !380
  store double %46245, ptr %18, align 8, !dbg !380
  %46246 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46247 = extractvalue { double, double } %46244, 1, !dbg !380
  store double %46247, ptr %46246, align 8, !dbg !380
  %46248 = load i32, ptr %10, align 4, !dbg !381
  %46249 = add nsw i32 %46248, 1, !dbg !382
  %46250 = sext i32 %46249 to i64, !dbg !383
  %46251 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46250, !dbg !383
  %46252 = load double, ptr %6, align 8, !dbg !384
  %46253 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46254 = load double, ptr %46253, align 8, !dbg !384
  %46255 = load double, ptr %46251, align 16, !dbg !384
  %46256 = getelementptr inbounds { double, double }, ptr %46251, i32 0, i32 1, !dbg !384
  %46257 = load double, ptr %46256, align 8, !dbg !384
  %46258 = call { double, double } @make_vec(double %46252, double %46254, double %46255, double %46257), !dbg !384
  %46259 = extractvalue { double, double } %46258, 0, !dbg !384
  store double %46259, ptr %19, align 8, !dbg !384
  %46260 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46261 = extractvalue { double, double } %46258, 1, !dbg !384
  store double %46261, ptr %46260, align 8, !dbg !384
  %46262 = load double, ptr %18, align 8, !dbg !385
  %46263 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46264 = load double, ptr %46263, align 8, !dbg !385
  %46265 = load double, ptr %19, align 8, !dbg !385
  %46266 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46267 = load double, ptr %46266, align 8, !dbg !385
  %46268 = call double @dot(double %46262, double %46264, double %46265, double %46267), !dbg !385
  %46269 = call double @atan2(double noundef %46234, double noundef %46268) #6, !dbg !386
  store double %46269, ptr %13, align 8, !dbg !387
  %46270 = load double, ptr %13, align 8, !dbg !388
  %46271 = load double, ptr %14, align 8, !dbg !389
  %46272 = fadd double %46271, %46270, !dbg !389
  store double %46272, ptr %14, align 8, !dbg !389
  %46273 = load double, ptr %13, align 8, !dbg !390
  %46274 = fsub double %46273, 0x400921FB54442D18, !dbg !392
  %46275 = call double @llvm.fabs.f64(double %46274), !dbg !393
  %46276 = fcmp ole double %46275, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46276, label %14330, label %46277, !dbg !395

46277:                                            ; preds = %46200
  %46278 = load double, ptr %13, align 8, !dbg !396
  %46279 = fadd double %46278, 0x400921FB54442D18, !dbg !397
  %46280 = call double @llvm.fabs.f64(double %46279), !dbg !398
  %46281 = fcmp ole double %46280, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46281, label %14330, label %46282, !dbg !400

46282:                                            ; preds = %46277
  br label %46283, !dbg !403

46283:                                            ; preds = %46282
  %46284 = load i32, ptr %10, align 4, !dbg !404
  %46285 = add nsw i32 %46284, 1, !dbg !404
  store i32 %46285, ptr %10, align 4, !dbg !404
  %46286 = load i32, ptr %10, align 4, !dbg !364
  %46287 = load i32, ptr %8, align 4, !dbg !366
  %46288 = icmp slt i32 %46286, %46287, !dbg !367
  br i1 %46288, label %46289, label %48422, !dbg !368

46289:                                            ; preds = %46283
  %46290 = load i32, ptr %10, align 4, !dbg !369
  %46291 = sext i32 %46290 to i64, !dbg !371
  %46292 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46291, !dbg !371
  %46293 = load double, ptr %6, align 8, !dbg !372
  %46294 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46295 = load double, ptr %46294, align 8, !dbg !372
  %46296 = load double, ptr %46292, align 16, !dbg !372
  %46297 = getelementptr inbounds { double, double }, ptr %46292, i32 0, i32 1, !dbg !372
  %46298 = load double, ptr %46297, align 8, !dbg !372
  %46299 = call { double, double } @make_vec(double %46293, double %46295, double %46296, double %46298), !dbg !372
  %46300 = extractvalue { double, double } %46299, 0, !dbg !372
  store double %46300, ptr %16, align 8, !dbg !372
  %46301 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46302 = extractvalue { double, double } %46299, 1, !dbg !372
  store double %46302, ptr %46301, align 8, !dbg !372
  %46303 = load i32, ptr %10, align 4, !dbg !373
  %46304 = add nsw i32 %46303, 1, !dbg !374
  %46305 = sext i32 %46304 to i64, !dbg !375
  %46306 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46305, !dbg !375
  %46307 = load double, ptr %6, align 8, !dbg !376
  %46308 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46309 = load double, ptr %46308, align 8, !dbg !376
  %46310 = load double, ptr %46306, align 16, !dbg !376
  %46311 = getelementptr inbounds { double, double }, ptr %46306, i32 0, i32 1, !dbg !376
  %46312 = load double, ptr %46311, align 8, !dbg !376
  %46313 = call { double, double } @make_vec(double %46307, double %46309, double %46310, double %46312), !dbg !376
  %46314 = extractvalue { double, double } %46313, 0, !dbg !376
  store double %46314, ptr %17, align 8, !dbg !376
  %46315 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46316 = extractvalue { double, double } %46313, 1, !dbg !376
  store double %46316, ptr %46315, align 8, !dbg !376
  %46317 = load double, ptr %16, align 8, !dbg !377
  %46318 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46319 = load double, ptr %46318, align 8, !dbg !377
  %46320 = load double, ptr %17, align 8, !dbg !377
  %46321 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46322 = load double, ptr %46321, align 8, !dbg !377
  %46323 = call double @cross(double %46317, double %46319, double %46320, double %46322), !dbg !377
  %46324 = load i32, ptr %10, align 4, !dbg !378
  %46325 = sext i32 %46324 to i64, !dbg !379
  %46326 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46325, !dbg !379
  %46327 = load double, ptr %6, align 8, !dbg !380
  %46328 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46329 = load double, ptr %46328, align 8, !dbg !380
  %46330 = load double, ptr %46326, align 16, !dbg !380
  %46331 = getelementptr inbounds { double, double }, ptr %46326, i32 0, i32 1, !dbg !380
  %46332 = load double, ptr %46331, align 8, !dbg !380
  %46333 = call { double, double } @make_vec(double %46327, double %46329, double %46330, double %46332), !dbg !380
  %46334 = extractvalue { double, double } %46333, 0, !dbg !380
  store double %46334, ptr %18, align 8, !dbg !380
  %46335 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46336 = extractvalue { double, double } %46333, 1, !dbg !380
  store double %46336, ptr %46335, align 8, !dbg !380
  %46337 = load i32, ptr %10, align 4, !dbg !381
  %46338 = add nsw i32 %46337, 1, !dbg !382
  %46339 = sext i32 %46338 to i64, !dbg !383
  %46340 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46339, !dbg !383
  %46341 = load double, ptr %6, align 8, !dbg !384
  %46342 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46343 = load double, ptr %46342, align 8, !dbg !384
  %46344 = load double, ptr %46340, align 16, !dbg !384
  %46345 = getelementptr inbounds { double, double }, ptr %46340, i32 0, i32 1, !dbg !384
  %46346 = load double, ptr %46345, align 8, !dbg !384
  %46347 = call { double, double } @make_vec(double %46341, double %46343, double %46344, double %46346), !dbg !384
  %46348 = extractvalue { double, double } %46347, 0, !dbg !384
  store double %46348, ptr %19, align 8, !dbg !384
  %46349 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46350 = extractvalue { double, double } %46347, 1, !dbg !384
  store double %46350, ptr %46349, align 8, !dbg !384
  %46351 = load double, ptr %18, align 8, !dbg !385
  %46352 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46353 = load double, ptr %46352, align 8, !dbg !385
  %46354 = load double, ptr %19, align 8, !dbg !385
  %46355 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46356 = load double, ptr %46355, align 8, !dbg !385
  %46357 = call double @dot(double %46351, double %46353, double %46354, double %46356), !dbg !385
  %46358 = call double @atan2(double noundef %46323, double noundef %46357) #6, !dbg !386
  store double %46358, ptr %13, align 8, !dbg !387
  %46359 = load double, ptr %13, align 8, !dbg !388
  %46360 = load double, ptr %14, align 8, !dbg !389
  %46361 = fadd double %46360, %46359, !dbg !389
  store double %46361, ptr %14, align 8, !dbg !389
  %46362 = load double, ptr %13, align 8, !dbg !390
  %46363 = fsub double %46362, 0x400921FB54442D18, !dbg !392
  %46364 = call double @llvm.fabs.f64(double %46363), !dbg !393
  %46365 = fcmp ole double %46364, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46365, label %14330, label %46366, !dbg !395

46366:                                            ; preds = %46289
  %46367 = load double, ptr %13, align 8, !dbg !396
  %46368 = fadd double %46367, 0x400921FB54442D18, !dbg !397
  %46369 = call double @llvm.fabs.f64(double %46368), !dbg !398
  %46370 = fcmp ole double %46369, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46370, label %14330, label %46371, !dbg !400

46371:                                            ; preds = %46366
  br label %46372, !dbg !403

46372:                                            ; preds = %46371
  %46373 = load i32, ptr %10, align 4, !dbg !404
  %46374 = add nsw i32 %46373, 1, !dbg !404
  store i32 %46374, ptr %10, align 4, !dbg !404
  %46375 = load i32, ptr %10, align 4, !dbg !364
  %46376 = load i32, ptr %8, align 4, !dbg !366
  %46377 = icmp slt i32 %46375, %46376, !dbg !367
  br i1 %46377, label %46378, label %48422, !dbg !368

46378:                                            ; preds = %46372
  %46379 = load i32, ptr %10, align 4, !dbg !369
  %46380 = sext i32 %46379 to i64, !dbg !371
  %46381 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46380, !dbg !371
  %46382 = load double, ptr %6, align 8, !dbg !372
  %46383 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46384 = load double, ptr %46383, align 8, !dbg !372
  %46385 = load double, ptr %46381, align 16, !dbg !372
  %46386 = getelementptr inbounds { double, double }, ptr %46381, i32 0, i32 1, !dbg !372
  %46387 = load double, ptr %46386, align 8, !dbg !372
  %46388 = call { double, double } @make_vec(double %46382, double %46384, double %46385, double %46387), !dbg !372
  %46389 = extractvalue { double, double } %46388, 0, !dbg !372
  store double %46389, ptr %16, align 8, !dbg !372
  %46390 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46391 = extractvalue { double, double } %46388, 1, !dbg !372
  store double %46391, ptr %46390, align 8, !dbg !372
  %46392 = load i32, ptr %10, align 4, !dbg !373
  %46393 = add nsw i32 %46392, 1, !dbg !374
  %46394 = sext i32 %46393 to i64, !dbg !375
  %46395 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46394, !dbg !375
  %46396 = load double, ptr %6, align 8, !dbg !376
  %46397 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46398 = load double, ptr %46397, align 8, !dbg !376
  %46399 = load double, ptr %46395, align 16, !dbg !376
  %46400 = getelementptr inbounds { double, double }, ptr %46395, i32 0, i32 1, !dbg !376
  %46401 = load double, ptr %46400, align 8, !dbg !376
  %46402 = call { double, double } @make_vec(double %46396, double %46398, double %46399, double %46401), !dbg !376
  %46403 = extractvalue { double, double } %46402, 0, !dbg !376
  store double %46403, ptr %17, align 8, !dbg !376
  %46404 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46405 = extractvalue { double, double } %46402, 1, !dbg !376
  store double %46405, ptr %46404, align 8, !dbg !376
  %46406 = load double, ptr %16, align 8, !dbg !377
  %46407 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46408 = load double, ptr %46407, align 8, !dbg !377
  %46409 = load double, ptr %17, align 8, !dbg !377
  %46410 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46411 = load double, ptr %46410, align 8, !dbg !377
  %46412 = call double @cross(double %46406, double %46408, double %46409, double %46411), !dbg !377
  %46413 = load i32, ptr %10, align 4, !dbg !378
  %46414 = sext i32 %46413 to i64, !dbg !379
  %46415 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46414, !dbg !379
  %46416 = load double, ptr %6, align 8, !dbg !380
  %46417 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46418 = load double, ptr %46417, align 8, !dbg !380
  %46419 = load double, ptr %46415, align 16, !dbg !380
  %46420 = getelementptr inbounds { double, double }, ptr %46415, i32 0, i32 1, !dbg !380
  %46421 = load double, ptr %46420, align 8, !dbg !380
  %46422 = call { double, double } @make_vec(double %46416, double %46418, double %46419, double %46421), !dbg !380
  %46423 = extractvalue { double, double } %46422, 0, !dbg !380
  store double %46423, ptr %18, align 8, !dbg !380
  %46424 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46425 = extractvalue { double, double } %46422, 1, !dbg !380
  store double %46425, ptr %46424, align 8, !dbg !380
  %46426 = load i32, ptr %10, align 4, !dbg !381
  %46427 = add nsw i32 %46426, 1, !dbg !382
  %46428 = sext i32 %46427 to i64, !dbg !383
  %46429 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46428, !dbg !383
  %46430 = load double, ptr %6, align 8, !dbg !384
  %46431 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46432 = load double, ptr %46431, align 8, !dbg !384
  %46433 = load double, ptr %46429, align 16, !dbg !384
  %46434 = getelementptr inbounds { double, double }, ptr %46429, i32 0, i32 1, !dbg !384
  %46435 = load double, ptr %46434, align 8, !dbg !384
  %46436 = call { double, double } @make_vec(double %46430, double %46432, double %46433, double %46435), !dbg !384
  %46437 = extractvalue { double, double } %46436, 0, !dbg !384
  store double %46437, ptr %19, align 8, !dbg !384
  %46438 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46439 = extractvalue { double, double } %46436, 1, !dbg !384
  store double %46439, ptr %46438, align 8, !dbg !384
  %46440 = load double, ptr %18, align 8, !dbg !385
  %46441 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46442 = load double, ptr %46441, align 8, !dbg !385
  %46443 = load double, ptr %19, align 8, !dbg !385
  %46444 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46445 = load double, ptr %46444, align 8, !dbg !385
  %46446 = call double @dot(double %46440, double %46442, double %46443, double %46445), !dbg !385
  %46447 = call double @atan2(double noundef %46412, double noundef %46446) #6, !dbg !386
  store double %46447, ptr %13, align 8, !dbg !387
  %46448 = load double, ptr %13, align 8, !dbg !388
  %46449 = load double, ptr %14, align 8, !dbg !389
  %46450 = fadd double %46449, %46448, !dbg !389
  store double %46450, ptr %14, align 8, !dbg !389
  %46451 = load double, ptr %13, align 8, !dbg !390
  %46452 = fsub double %46451, 0x400921FB54442D18, !dbg !392
  %46453 = call double @llvm.fabs.f64(double %46452), !dbg !393
  %46454 = fcmp ole double %46453, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46454, label %14330, label %46455, !dbg !395

46455:                                            ; preds = %46378
  %46456 = load double, ptr %13, align 8, !dbg !396
  %46457 = fadd double %46456, 0x400921FB54442D18, !dbg !397
  %46458 = call double @llvm.fabs.f64(double %46457), !dbg !398
  %46459 = fcmp ole double %46458, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46459, label %14330, label %46460, !dbg !400

46460:                                            ; preds = %46455
  br label %46461, !dbg !403

46461:                                            ; preds = %46460
  %46462 = load i32, ptr %10, align 4, !dbg !404
  %46463 = add nsw i32 %46462, 1, !dbg !404
  store i32 %46463, ptr %10, align 4, !dbg !404
  %46464 = load i32, ptr %10, align 4, !dbg !364
  %46465 = load i32, ptr %8, align 4, !dbg !366
  %46466 = icmp slt i32 %46464, %46465, !dbg !367
  br i1 %46466, label %46467, label %48422, !dbg !368

46467:                                            ; preds = %46461
  %46468 = load i32, ptr %10, align 4, !dbg !369
  %46469 = sext i32 %46468 to i64, !dbg !371
  %46470 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46469, !dbg !371
  %46471 = load double, ptr %6, align 8, !dbg !372
  %46472 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46473 = load double, ptr %46472, align 8, !dbg !372
  %46474 = load double, ptr %46470, align 16, !dbg !372
  %46475 = getelementptr inbounds { double, double }, ptr %46470, i32 0, i32 1, !dbg !372
  %46476 = load double, ptr %46475, align 8, !dbg !372
  %46477 = call { double, double } @make_vec(double %46471, double %46473, double %46474, double %46476), !dbg !372
  %46478 = extractvalue { double, double } %46477, 0, !dbg !372
  store double %46478, ptr %16, align 8, !dbg !372
  %46479 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46480 = extractvalue { double, double } %46477, 1, !dbg !372
  store double %46480, ptr %46479, align 8, !dbg !372
  %46481 = load i32, ptr %10, align 4, !dbg !373
  %46482 = add nsw i32 %46481, 1, !dbg !374
  %46483 = sext i32 %46482 to i64, !dbg !375
  %46484 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46483, !dbg !375
  %46485 = load double, ptr %6, align 8, !dbg !376
  %46486 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46487 = load double, ptr %46486, align 8, !dbg !376
  %46488 = load double, ptr %46484, align 16, !dbg !376
  %46489 = getelementptr inbounds { double, double }, ptr %46484, i32 0, i32 1, !dbg !376
  %46490 = load double, ptr %46489, align 8, !dbg !376
  %46491 = call { double, double } @make_vec(double %46485, double %46487, double %46488, double %46490), !dbg !376
  %46492 = extractvalue { double, double } %46491, 0, !dbg !376
  store double %46492, ptr %17, align 8, !dbg !376
  %46493 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46494 = extractvalue { double, double } %46491, 1, !dbg !376
  store double %46494, ptr %46493, align 8, !dbg !376
  %46495 = load double, ptr %16, align 8, !dbg !377
  %46496 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46497 = load double, ptr %46496, align 8, !dbg !377
  %46498 = load double, ptr %17, align 8, !dbg !377
  %46499 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46500 = load double, ptr %46499, align 8, !dbg !377
  %46501 = call double @cross(double %46495, double %46497, double %46498, double %46500), !dbg !377
  %46502 = load i32, ptr %10, align 4, !dbg !378
  %46503 = sext i32 %46502 to i64, !dbg !379
  %46504 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46503, !dbg !379
  %46505 = load double, ptr %6, align 8, !dbg !380
  %46506 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46507 = load double, ptr %46506, align 8, !dbg !380
  %46508 = load double, ptr %46504, align 16, !dbg !380
  %46509 = getelementptr inbounds { double, double }, ptr %46504, i32 0, i32 1, !dbg !380
  %46510 = load double, ptr %46509, align 8, !dbg !380
  %46511 = call { double, double } @make_vec(double %46505, double %46507, double %46508, double %46510), !dbg !380
  %46512 = extractvalue { double, double } %46511, 0, !dbg !380
  store double %46512, ptr %18, align 8, !dbg !380
  %46513 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46514 = extractvalue { double, double } %46511, 1, !dbg !380
  store double %46514, ptr %46513, align 8, !dbg !380
  %46515 = load i32, ptr %10, align 4, !dbg !381
  %46516 = add nsw i32 %46515, 1, !dbg !382
  %46517 = sext i32 %46516 to i64, !dbg !383
  %46518 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46517, !dbg !383
  %46519 = load double, ptr %6, align 8, !dbg !384
  %46520 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46521 = load double, ptr %46520, align 8, !dbg !384
  %46522 = load double, ptr %46518, align 16, !dbg !384
  %46523 = getelementptr inbounds { double, double }, ptr %46518, i32 0, i32 1, !dbg !384
  %46524 = load double, ptr %46523, align 8, !dbg !384
  %46525 = call { double, double } @make_vec(double %46519, double %46521, double %46522, double %46524), !dbg !384
  %46526 = extractvalue { double, double } %46525, 0, !dbg !384
  store double %46526, ptr %19, align 8, !dbg !384
  %46527 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46528 = extractvalue { double, double } %46525, 1, !dbg !384
  store double %46528, ptr %46527, align 8, !dbg !384
  %46529 = load double, ptr %18, align 8, !dbg !385
  %46530 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46531 = load double, ptr %46530, align 8, !dbg !385
  %46532 = load double, ptr %19, align 8, !dbg !385
  %46533 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46534 = load double, ptr %46533, align 8, !dbg !385
  %46535 = call double @dot(double %46529, double %46531, double %46532, double %46534), !dbg !385
  %46536 = call double @atan2(double noundef %46501, double noundef %46535) #6, !dbg !386
  store double %46536, ptr %13, align 8, !dbg !387
  %46537 = load double, ptr %13, align 8, !dbg !388
  %46538 = load double, ptr %14, align 8, !dbg !389
  %46539 = fadd double %46538, %46537, !dbg !389
  store double %46539, ptr %14, align 8, !dbg !389
  %46540 = load double, ptr %13, align 8, !dbg !390
  %46541 = fsub double %46540, 0x400921FB54442D18, !dbg !392
  %46542 = call double @llvm.fabs.f64(double %46541), !dbg !393
  %46543 = fcmp ole double %46542, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46543, label %14330, label %46544, !dbg !395

46544:                                            ; preds = %46467
  %46545 = load double, ptr %13, align 8, !dbg !396
  %46546 = fadd double %46545, 0x400921FB54442D18, !dbg !397
  %46547 = call double @llvm.fabs.f64(double %46546), !dbg !398
  %46548 = fcmp ole double %46547, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46548, label %14330, label %46549, !dbg !400

46549:                                            ; preds = %46544
  br label %46550, !dbg !403

46550:                                            ; preds = %46549
  %46551 = load i32, ptr %10, align 4, !dbg !404
  %46552 = add nsw i32 %46551, 1, !dbg !404
  store i32 %46552, ptr %10, align 4, !dbg !404
  %46553 = load i32, ptr %10, align 4, !dbg !364
  %46554 = load i32, ptr %8, align 4, !dbg !366
  %46555 = icmp slt i32 %46553, %46554, !dbg !367
  br i1 %46555, label %46556, label %48422, !dbg !368

46556:                                            ; preds = %46550
  %46557 = load i32, ptr %10, align 4, !dbg !369
  %46558 = sext i32 %46557 to i64, !dbg !371
  %46559 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46558, !dbg !371
  %46560 = load double, ptr %6, align 8, !dbg !372
  %46561 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46562 = load double, ptr %46561, align 8, !dbg !372
  %46563 = load double, ptr %46559, align 16, !dbg !372
  %46564 = getelementptr inbounds { double, double }, ptr %46559, i32 0, i32 1, !dbg !372
  %46565 = load double, ptr %46564, align 8, !dbg !372
  %46566 = call { double, double } @make_vec(double %46560, double %46562, double %46563, double %46565), !dbg !372
  %46567 = extractvalue { double, double } %46566, 0, !dbg !372
  store double %46567, ptr %16, align 8, !dbg !372
  %46568 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46569 = extractvalue { double, double } %46566, 1, !dbg !372
  store double %46569, ptr %46568, align 8, !dbg !372
  %46570 = load i32, ptr %10, align 4, !dbg !373
  %46571 = add nsw i32 %46570, 1, !dbg !374
  %46572 = sext i32 %46571 to i64, !dbg !375
  %46573 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46572, !dbg !375
  %46574 = load double, ptr %6, align 8, !dbg !376
  %46575 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46576 = load double, ptr %46575, align 8, !dbg !376
  %46577 = load double, ptr %46573, align 16, !dbg !376
  %46578 = getelementptr inbounds { double, double }, ptr %46573, i32 0, i32 1, !dbg !376
  %46579 = load double, ptr %46578, align 8, !dbg !376
  %46580 = call { double, double } @make_vec(double %46574, double %46576, double %46577, double %46579), !dbg !376
  %46581 = extractvalue { double, double } %46580, 0, !dbg !376
  store double %46581, ptr %17, align 8, !dbg !376
  %46582 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46583 = extractvalue { double, double } %46580, 1, !dbg !376
  store double %46583, ptr %46582, align 8, !dbg !376
  %46584 = load double, ptr %16, align 8, !dbg !377
  %46585 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46586 = load double, ptr %46585, align 8, !dbg !377
  %46587 = load double, ptr %17, align 8, !dbg !377
  %46588 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46589 = load double, ptr %46588, align 8, !dbg !377
  %46590 = call double @cross(double %46584, double %46586, double %46587, double %46589), !dbg !377
  %46591 = load i32, ptr %10, align 4, !dbg !378
  %46592 = sext i32 %46591 to i64, !dbg !379
  %46593 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46592, !dbg !379
  %46594 = load double, ptr %6, align 8, !dbg !380
  %46595 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46596 = load double, ptr %46595, align 8, !dbg !380
  %46597 = load double, ptr %46593, align 16, !dbg !380
  %46598 = getelementptr inbounds { double, double }, ptr %46593, i32 0, i32 1, !dbg !380
  %46599 = load double, ptr %46598, align 8, !dbg !380
  %46600 = call { double, double } @make_vec(double %46594, double %46596, double %46597, double %46599), !dbg !380
  %46601 = extractvalue { double, double } %46600, 0, !dbg !380
  store double %46601, ptr %18, align 8, !dbg !380
  %46602 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46603 = extractvalue { double, double } %46600, 1, !dbg !380
  store double %46603, ptr %46602, align 8, !dbg !380
  %46604 = load i32, ptr %10, align 4, !dbg !381
  %46605 = add nsw i32 %46604, 1, !dbg !382
  %46606 = sext i32 %46605 to i64, !dbg !383
  %46607 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46606, !dbg !383
  %46608 = load double, ptr %6, align 8, !dbg !384
  %46609 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46610 = load double, ptr %46609, align 8, !dbg !384
  %46611 = load double, ptr %46607, align 16, !dbg !384
  %46612 = getelementptr inbounds { double, double }, ptr %46607, i32 0, i32 1, !dbg !384
  %46613 = load double, ptr %46612, align 8, !dbg !384
  %46614 = call { double, double } @make_vec(double %46608, double %46610, double %46611, double %46613), !dbg !384
  %46615 = extractvalue { double, double } %46614, 0, !dbg !384
  store double %46615, ptr %19, align 8, !dbg !384
  %46616 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46617 = extractvalue { double, double } %46614, 1, !dbg !384
  store double %46617, ptr %46616, align 8, !dbg !384
  %46618 = load double, ptr %18, align 8, !dbg !385
  %46619 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46620 = load double, ptr %46619, align 8, !dbg !385
  %46621 = load double, ptr %19, align 8, !dbg !385
  %46622 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46623 = load double, ptr %46622, align 8, !dbg !385
  %46624 = call double @dot(double %46618, double %46620, double %46621, double %46623), !dbg !385
  %46625 = call double @atan2(double noundef %46590, double noundef %46624) #6, !dbg !386
  store double %46625, ptr %13, align 8, !dbg !387
  %46626 = load double, ptr %13, align 8, !dbg !388
  %46627 = load double, ptr %14, align 8, !dbg !389
  %46628 = fadd double %46627, %46626, !dbg !389
  store double %46628, ptr %14, align 8, !dbg !389
  %46629 = load double, ptr %13, align 8, !dbg !390
  %46630 = fsub double %46629, 0x400921FB54442D18, !dbg !392
  %46631 = call double @llvm.fabs.f64(double %46630), !dbg !393
  %46632 = fcmp ole double %46631, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46632, label %14330, label %46633, !dbg !395

46633:                                            ; preds = %46556
  %46634 = load double, ptr %13, align 8, !dbg !396
  %46635 = fadd double %46634, 0x400921FB54442D18, !dbg !397
  %46636 = call double @llvm.fabs.f64(double %46635), !dbg !398
  %46637 = fcmp ole double %46636, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46637, label %14330, label %46638, !dbg !400

46638:                                            ; preds = %46633
  br label %46639, !dbg !403

46639:                                            ; preds = %46638
  %46640 = load i32, ptr %10, align 4, !dbg !404
  %46641 = add nsw i32 %46640, 1, !dbg !404
  store i32 %46641, ptr %10, align 4, !dbg !404
  %46642 = load i32, ptr %10, align 4, !dbg !364
  %46643 = load i32, ptr %8, align 4, !dbg !366
  %46644 = icmp slt i32 %46642, %46643, !dbg !367
  br i1 %46644, label %46645, label %48422, !dbg !368

46645:                                            ; preds = %46639
  %46646 = load i32, ptr %10, align 4, !dbg !369
  %46647 = sext i32 %46646 to i64, !dbg !371
  %46648 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46647, !dbg !371
  %46649 = load double, ptr %6, align 8, !dbg !372
  %46650 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46651 = load double, ptr %46650, align 8, !dbg !372
  %46652 = load double, ptr %46648, align 16, !dbg !372
  %46653 = getelementptr inbounds { double, double }, ptr %46648, i32 0, i32 1, !dbg !372
  %46654 = load double, ptr %46653, align 8, !dbg !372
  %46655 = call { double, double } @make_vec(double %46649, double %46651, double %46652, double %46654), !dbg !372
  %46656 = extractvalue { double, double } %46655, 0, !dbg !372
  store double %46656, ptr %16, align 8, !dbg !372
  %46657 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46658 = extractvalue { double, double } %46655, 1, !dbg !372
  store double %46658, ptr %46657, align 8, !dbg !372
  %46659 = load i32, ptr %10, align 4, !dbg !373
  %46660 = add nsw i32 %46659, 1, !dbg !374
  %46661 = sext i32 %46660 to i64, !dbg !375
  %46662 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46661, !dbg !375
  %46663 = load double, ptr %6, align 8, !dbg !376
  %46664 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46665 = load double, ptr %46664, align 8, !dbg !376
  %46666 = load double, ptr %46662, align 16, !dbg !376
  %46667 = getelementptr inbounds { double, double }, ptr %46662, i32 0, i32 1, !dbg !376
  %46668 = load double, ptr %46667, align 8, !dbg !376
  %46669 = call { double, double } @make_vec(double %46663, double %46665, double %46666, double %46668), !dbg !376
  %46670 = extractvalue { double, double } %46669, 0, !dbg !376
  store double %46670, ptr %17, align 8, !dbg !376
  %46671 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46672 = extractvalue { double, double } %46669, 1, !dbg !376
  store double %46672, ptr %46671, align 8, !dbg !376
  %46673 = load double, ptr %16, align 8, !dbg !377
  %46674 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46675 = load double, ptr %46674, align 8, !dbg !377
  %46676 = load double, ptr %17, align 8, !dbg !377
  %46677 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46678 = load double, ptr %46677, align 8, !dbg !377
  %46679 = call double @cross(double %46673, double %46675, double %46676, double %46678), !dbg !377
  %46680 = load i32, ptr %10, align 4, !dbg !378
  %46681 = sext i32 %46680 to i64, !dbg !379
  %46682 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46681, !dbg !379
  %46683 = load double, ptr %6, align 8, !dbg !380
  %46684 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46685 = load double, ptr %46684, align 8, !dbg !380
  %46686 = load double, ptr %46682, align 16, !dbg !380
  %46687 = getelementptr inbounds { double, double }, ptr %46682, i32 0, i32 1, !dbg !380
  %46688 = load double, ptr %46687, align 8, !dbg !380
  %46689 = call { double, double } @make_vec(double %46683, double %46685, double %46686, double %46688), !dbg !380
  %46690 = extractvalue { double, double } %46689, 0, !dbg !380
  store double %46690, ptr %18, align 8, !dbg !380
  %46691 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46692 = extractvalue { double, double } %46689, 1, !dbg !380
  store double %46692, ptr %46691, align 8, !dbg !380
  %46693 = load i32, ptr %10, align 4, !dbg !381
  %46694 = add nsw i32 %46693, 1, !dbg !382
  %46695 = sext i32 %46694 to i64, !dbg !383
  %46696 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46695, !dbg !383
  %46697 = load double, ptr %6, align 8, !dbg !384
  %46698 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46699 = load double, ptr %46698, align 8, !dbg !384
  %46700 = load double, ptr %46696, align 16, !dbg !384
  %46701 = getelementptr inbounds { double, double }, ptr %46696, i32 0, i32 1, !dbg !384
  %46702 = load double, ptr %46701, align 8, !dbg !384
  %46703 = call { double, double } @make_vec(double %46697, double %46699, double %46700, double %46702), !dbg !384
  %46704 = extractvalue { double, double } %46703, 0, !dbg !384
  store double %46704, ptr %19, align 8, !dbg !384
  %46705 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46706 = extractvalue { double, double } %46703, 1, !dbg !384
  store double %46706, ptr %46705, align 8, !dbg !384
  %46707 = load double, ptr %18, align 8, !dbg !385
  %46708 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46709 = load double, ptr %46708, align 8, !dbg !385
  %46710 = load double, ptr %19, align 8, !dbg !385
  %46711 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46712 = load double, ptr %46711, align 8, !dbg !385
  %46713 = call double @dot(double %46707, double %46709, double %46710, double %46712), !dbg !385
  %46714 = call double @atan2(double noundef %46679, double noundef %46713) #6, !dbg !386
  store double %46714, ptr %13, align 8, !dbg !387
  %46715 = load double, ptr %13, align 8, !dbg !388
  %46716 = load double, ptr %14, align 8, !dbg !389
  %46717 = fadd double %46716, %46715, !dbg !389
  store double %46717, ptr %14, align 8, !dbg !389
  %46718 = load double, ptr %13, align 8, !dbg !390
  %46719 = fsub double %46718, 0x400921FB54442D18, !dbg !392
  %46720 = call double @llvm.fabs.f64(double %46719), !dbg !393
  %46721 = fcmp ole double %46720, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46721, label %14330, label %46722, !dbg !395

46722:                                            ; preds = %46645
  %46723 = load double, ptr %13, align 8, !dbg !396
  %46724 = fadd double %46723, 0x400921FB54442D18, !dbg !397
  %46725 = call double @llvm.fabs.f64(double %46724), !dbg !398
  %46726 = fcmp ole double %46725, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46726, label %14330, label %46727, !dbg !400

46727:                                            ; preds = %46722
  br label %46728, !dbg !403

46728:                                            ; preds = %46727
  %46729 = load i32, ptr %10, align 4, !dbg !404
  %46730 = add nsw i32 %46729, 1, !dbg !404
  store i32 %46730, ptr %10, align 4, !dbg !404
  %46731 = load i32, ptr %10, align 4, !dbg !364
  %46732 = load i32, ptr %8, align 4, !dbg !366
  %46733 = icmp slt i32 %46731, %46732, !dbg !367
  br i1 %46733, label %46734, label %48422, !dbg !368

46734:                                            ; preds = %46728
  %46735 = load i32, ptr %10, align 4, !dbg !369
  %46736 = sext i32 %46735 to i64, !dbg !371
  %46737 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46736, !dbg !371
  %46738 = load double, ptr %6, align 8, !dbg !372
  %46739 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46740 = load double, ptr %46739, align 8, !dbg !372
  %46741 = load double, ptr %46737, align 16, !dbg !372
  %46742 = getelementptr inbounds { double, double }, ptr %46737, i32 0, i32 1, !dbg !372
  %46743 = load double, ptr %46742, align 8, !dbg !372
  %46744 = call { double, double } @make_vec(double %46738, double %46740, double %46741, double %46743), !dbg !372
  %46745 = extractvalue { double, double } %46744, 0, !dbg !372
  store double %46745, ptr %16, align 8, !dbg !372
  %46746 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46747 = extractvalue { double, double } %46744, 1, !dbg !372
  store double %46747, ptr %46746, align 8, !dbg !372
  %46748 = load i32, ptr %10, align 4, !dbg !373
  %46749 = add nsw i32 %46748, 1, !dbg !374
  %46750 = sext i32 %46749 to i64, !dbg !375
  %46751 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46750, !dbg !375
  %46752 = load double, ptr %6, align 8, !dbg !376
  %46753 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46754 = load double, ptr %46753, align 8, !dbg !376
  %46755 = load double, ptr %46751, align 16, !dbg !376
  %46756 = getelementptr inbounds { double, double }, ptr %46751, i32 0, i32 1, !dbg !376
  %46757 = load double, ptr %46756, align 8, !dbg !376
  %46758 = call { double, double } @make_vec(double %46752, double %46754, double %46755, double %46757), !dbg !376
  %46759 = extractvalue { double, double } %46758, 0, !dbg !376
  store double %46759, ptr %17, align 8, !dbg !376
  %46760 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46761 = extractvalue { double, double } %46758, 1, !dbg !376
  store double %46761, ptr %46760, align 8, !dbg !376
  %46762 = load double, ptr %16, align 8, !dbg !377
  %46763 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46764 = load double, ptr %46763, align 8, !dbg !377
  %46765 = load double, ptr %17, align 8, !dbg !377
  %46766 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46767 = load double, ptr %46766, align 8, !dbg !377
  %46768 = call double @cross(double %46762, double %46764, double %46765, double %46767), !dbg !377
  %46769 = load i32, ptr %10, align 4, !dbg !378
  %46770 = sext i32 %46769 to i64, !dbg !379
  %46771 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46770, !dbg !379
  %46772 = load double, ptr %6, align 8, !dbg !380
  %46773 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46774 = load double, ptr %46773, align 8, !dbg !380
  %46775 = load double, ptr %46771, align 16, !dbg !380
  %46776 = getelementptr inbounds { double, double }, ptr %46771, i32 0, i32 1, !dbg !380
  %46777 = load double, ptr %46776, align 8, !dbg !380
  %46778 = call { double, double } @make_vec(double %46772, double %46774, double %46775, double %46777), !dbg !380
  %46779 = extractvalue { double, double } %46778, 0, !dbg !380
  store double %46779, ptr %18, align 8, !dbg !380
  %46780 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46781 = extractvalue { double, double } %46778, 1, !dbg !380
  store double %46781, ptr %46780, align 8, !dbg !380
  %46782 = load i32, ptr %10, align 4, !dbg !381
  %46783 = add nsw i32 %46782, 1, !dbg !382
  %46784 = sext i32 %46783 to i64, !dbg !383
  %46785 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46784, !dbg !383
  %46786 = load double, ptr %6, align 8, !dbg !384
  %46787 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46788 = load double, ptr %46787, align 8, !dbg !384
  %46789 = load double, ptr %46785, align 16, !dbg !384
  %46790 = getelementptr inbounds { double, double }, ptr %46785, i32 0, i32 1, !dbg !384
  %46791 = load double, ptr %46790, align 8, !dbg !384
  %46792 = call { double, double } @make_vec(double %46786, double %46788, double %46789, double %46791), !dbg !384
  %46793 = extractvalue { double, double } %46792, 0, !dbg !384
  store double %46793, ptr %19, align 8, !dbg !384
  %46794 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46795 = extractvalue { double, double } %46792, 1, !dbg !384
  store double %46795, ptr %46794, align 8, !dbg !384
  %46796 = load double, ptr %18, align 8, !dbg !385
  %46797 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46798 = load double, ptr %46797, align 8, !dbg !385
  %46799 = load double, ptr %19, align 8, !dbg !385
  %46800 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46801 = load double, ptr %46800, align 8, !dbg !385
  %46802 = call double @dot(double %46796, double %46798, double %46799, double %46801), !dbg !385
  %46803 = call double @atan2(double noundef %46768, double noundef %46802) #6, !dbg !386
  store double %46803, ptr %13, align 8, !dbg !387
  %46804 = load double, ptr %13, align 8, !dbg !388
  %46805 = load double, ptr %14, align 8, !dbg !389
  %46806 = fadd double %46805, %46804, !dbg !389
  store double %46806, ptr %14, align 8, !dbg !389
  %46807 = load double, ptr %13, align 8, !dbg !390
  %46808 = fsub double %46807, 0x400921FB54442D18, !dbg !392
  %46809 = call double @llvm.fabs.f64(double %46808), !dbg !393
  %46810 = fcmp ole double %46809, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46810, label %14330, label %46811, !dbg !395

46811:                                            ; preds = %46734
  %46812 = load double, ptr %13, align 8, !dbg !396
  %46813 = fadd double %46812, 0x400921FB54442D18, !dbg !397
  %46814 = call double @llvm.fabs.f64(double %46813), !dbg !398
  %46815 = fcmp ole double %46814, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46815, label %14330, label %46816, !dbg !400

46816:                                            ; preds = %46811
  br label %46817, !dbg !403

46817:                                            ; preds = %46816
  %46818 = load i32, ptr %10, align 4, !dbg !404
  %46819 = add nsw i32 %46818, 1, !dbg !404
  store i32 %46819, ptr %10, align 4, !dbg !404
  %46820 = load i32, ptr %10, align 4, !dbg !364
  %46821 = load i32, ptr %8, align 4, !dbg !366
  %46822 = icmp slt i32 %46820, %46821, !dbg !367
  br i1 %46822, label %46823, label %48422, !dbg !368

46823:                                            ; preds = %46817
  %46824 = load i32, ptr %10, align 4, !dbg !369
  %46825 = sext i32 %46824 to i64, !dbg !371
  %46826 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46825, !dbg !371
  %46827 = load double, ptr %6, align 8, !dbg !372
  %46828 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46829 = load double, ptr %46828, align 8, !dbg !372
  %46830 = load double, ptr %46826, align 16, !dbg !372
  %46831 = getelementptr inbounds { double, double }, ptr %46826, i32 0, i32 1, !dbg !372
  %46832 = load double, ptr %46831, align 8, !dbg !372
  %46833 = call { double, double } @make_vec(double %46827, double %46829, double %46830, double %46832), !dbg !372
  %46834 = extractvalue { double, double } %46833, 0, !dbg !372
  store double %46834, ptr %16, align 8, !dbg !372
  %46835 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46836 = extractvalue { double, double } %46833, 1, !dbg !372
  store double %46836, ptr %46835, align 8, !dbg !372
  %46837 = load i32, ptr %10, align 4, !dbg !373
  %46838 = add nsw i32 %46837, 1, !dbg !374
  %46839 = sext i32 %46838 to i64, !dbg !375
  %46840 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46839, !dbg !375
  %46841 = load double, ptr %6, align 8, !dbg !376
  %46842 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46843 = load double, ptr %46842, align 8, !dbg !376
  %46844 = load double, ptr %46840, align 16, !dbg !376
  %46845 = getelementptr inbounds { double, double }, ptr %46840, i32 0, i32 1, !dbg !376
  %46846 = load double, ptr %46845, align 8, !dbg !376
  %46847 = call { double, double } @make_vec(double %46841, double %46843, double %46844, double %46846), !dbg !376
  %46848 = extractvalue { double, double } %46847, 0, !dbg !376
  store double %46848, ptr %17, align 8, !dbg !376
  %46849 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46850 = extractvalue { double, double } %46847, 1, !dbg !376
  store double %46850, ptr %46849, align 8, !dbg !376
  %46851 = load double, ptr %16, align 8, !dbg !377
  %46852 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46853 = load double, ptr %46852, align 8, !dbg !377
  %46854 = load double, ptr %17, align 8, !dbg !377
  %46855 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46856 = load double, ptr %46855, align 8, !dbg !377
  %46857 = call double @cross(double %46851, double %46853, double %46854, double %46856), !dbg !377
  %46858 = load i32, ptr %10, align 4, !dbg !378
  %46859 = sext i32 %46858 to i64, !dbg !379
  %46860 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46859, !dbg !379
  %46861 = load double, ptr %6, align 8, !dbg !380
  %46862 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46863 = load double, ptr %46862, align 8, !dbg !380
  %46864 = load double, ptr %46860, align 16, !dbg !380
  %46865 = getelementptr inbounds { double, double }, ptr %46860, i32 0, i32 1, !dbg !380
  %46866 = load double, ptr %46865, align 8, !dbg !380
  %46867 = call { double, double } @make_vec(double %46861, double %46863, double %46864, double %46866), !dbg !380
  %46868 = extractvalue { double, double } %46867, 0, !dbg !380
  store double %46868, ptr %18, align 8, !dbg !380
  %46869 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46870 = extractvalue { double, double } %46867, 1, !dbg !380
  store double %46870, ptr %46869, align 8, !dbg !380
  %46871 = load i32, ptr %10, align 4, !dbg !381
  %46872 = add nsw i32 %46871, 1, !dbg !382
  %46873 = sext i32 %46872 to i64, !dbg !383
  %46874 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46873, !dbg !383
  %46875 = load double, ptr %6, align 8, !dbg !384
  %46876 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46877 = load double, ptr %46876, align 8, !dbg !384
  %46878 = load double, ptr %46874, align 16, !dbg !384
  %46879 = getelementptr inbounds { double, double }, ptr %46874, i32 0, i32 1, !dbg !384
  %46880 = load double, ptr %46879, align 8, !dbg !384
  %46881 = call { double, double } @make_vec(double %46875, double %46877, double %46878, double %46880), !dbg !384
  %46882 = extractvalue { double, double } %46881, 0, !dbg !384
  store double %46882, ptr %19, align 8, !dbg !384
  %46883 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46884 = extractvalue { double, double } %46881, 1, !dbg !384
  store double %46884, ptr %46883, align 8, !dbg !384
  %46885 = load double, ptr %18, align 8, !dbg !385
  %46886 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46887 = load double, ptr %46886, align 8, !dbg !385
  %46888 = load double, ptr %19, align 8, !dbg !385
  %46889 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46890 = load double, ptr %46889, align 8, !dbg !385
  %46891 = call double @dot(double %46885, double %46887, double %46888, double %46890), !dbg !385
  %46892 = call double @atan2(double noundef %46857, double noundef %46891) #6, !dbg !386
  store double %46892, ptr %13, align 8, !dbg !387
  %46893 = load double, ptr %13, align 8, !dbg !388
  %46894 = load double, ptr %14, align 8, !dbg !389
  %46895 = fadd double %46894, %46893, !dbg !389
  store double %46895, ptr %14, align 8, !dbg !389
  %46896 = load double, ptr %13, align 8, !dbg !390
  %46897 = fsub double %46896, 0x400921FB54442D18, !dbg !392
  %46898 = call double @llvm.fabs.f64(double %46897), !dbg !393
  %46899 = fcmp ole double %46898, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46899, label %14330, label %46900, !dbg !395

46900:                                            ; preds = %46823
  %46901 = load double, ptr %13, align 8, !dbg !396
  %46902 = fadd double %46901, 0x400921FB54442D18, !dbg !397
  %46903 = call double @llvm.fabs.f64(double %46902), !dbg !398
  %46904 = fcmp ole double %46903, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46904, label %14330, label %46905, !dbg !400

46905:                                            ; preds = %46900
  br label %46906, !dbg !403

46906:                                            ; preds = %46905
  %46907 = load i32, ptr %10, align 4, !dbg !404
  %46908 = add nsw i32 %46907, 1, !dbg !404
  store i32 %46908, ptr %10, align 4, !dbg !404
  %46909 = load i32, ptr %10, align 4, !dbg !364
  %46910 = load i32, ptr %8, align 4, !dbg !366
  %46911 = icmp slt i32 %46909, %46910, !dbg !367
  br i1 %46911, label %46912, label %48422, !dbg !368

46912:                                            ; preds = %46906
  %46913 = load i32, ptr %10, align 4, !dbg !369
  %46914 = sext i32 %46913 to i64, !dbg !371
  %46915 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46914, !dbg !371
  %46916 = load double, ptr %6, align 8, !dbg !372
  %46917 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %46918 = load double, ptr %46917, align 8, !dbg !372
  %46919 = load double, ptr %46915, align 16, !dbg !372
  %46920 = getelementptr inbounds { double, double }, ptr %46915, i32 0, i32 1, !dbg !372
  %46921 = load double, ptr %46920, align 8, !dbg !372
  %46922 = call { double, double } @make_vec(double %46916, double %46918, double %46919, double %46921), !dbg !372
  %46923 = extractvalue { double, double } %46922, 0, !dbg !372
  store double %46923, ptr %16, align 8, !dbg !372
  %46924 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %46925 = extractvalue { double, double } %46922, 1, !dbg !372
  store double %46925, ptr %46924, align 8, !dbg !372
  %46926 = load i32, ptr %10, align 4, !dbg !373
  %46927 = add nsw i32 %46926, 1, !dbg !374
  %46928 = sext i32 %46927 to i64, !dbg !375
  %46929 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46928, !dbg !375
  %46930 = load double, ptr %6, align 8, !dbg !376
  %46931 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %46932 = load double, ptr %46931, align 8, !dbg !376
  %46933 = load double, ptr %46929, align 16, !dbg !376
  %46934 = getelementptr inbounds { double, double }, ptr %46929, i32 0, i32 1, !dbg !376
  %46935 = load double, ptr %46934, align 8, !dbg !376
  %46936 = call { double, double } @make_vec(double %46930, double %46932, double %46933, double %46935), !dbg !376
  %46937 = extractvalue { double, double } %46936, 0, !dbg !376
  store double %46937, ptr %17, align 8, !dbg !376
  %46938 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %46939 = extractvalue { double, double } %46936, 1, !dbg !376
  store double %46939, ptr %46938, align 8, !dbg !376
  %46940 = load double, ptr %16, align 8, !dbg !377
  %46941 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %46942 = load double, ptr %46941, align 8, !dbg !377
  %46943 = load double, ptr %17, align 8, !dbg !377
  %46944 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %46945 = load double, ptr %46944, align 8, !dbg !377
  %46946 = call double @cross(double %46940, double %46942, double %46943, double %46945), !dbg !377
  %46947 = load i32, ptr %10, align 4, !dbg !378
  %46948 = sext i32 %46947 to i64, !dbg !379
  %46949 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46948, !dbg !379
  %46950 = load double, ptr %6, align 8, !dbg !380
  %46951 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %46952 = load double, ptr %46951, align 8, !dbg !380
  %46953 = load double, ptr %46949, align 16, !dbg !380
  %46954 = getelementptr inbounds { double, double }, ptr %46949, i32 0, i32 1, !dbg !380
  %46955 = load double, ptr %46954, align 8, !dbg !380
  %46956 = call { double, double } @make_vec(double %46950, double %46952, double %46953, double %46955), !dbg !380
  %46957 = extractvalue { double, double } %46956, 0, !dbg !380
  store double %46957, ptr %18, align 8, !dbg !380
  %46958 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %46959 = extractvalue { double, double } %46956, 1, !dbg !380
  store double %46959, ptr %46958, align 8, !dbg !380
  %46960 = load i32, ptr %10, align 4, !dbg !381
  %46961 = add nsw i32 %46960, 1, !dbg !382
  %46962 = sext i32 %46961 to i64, !dbg !383
  %46963 = getelementptr inbounds %struct.POINT, ptr %26, i64 %46962, !dbg !383
  %46964 = load double, ptr %6, align 8, !dbg !384
  %46965 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %46966 = load double, ptr %46965, align 8, !dbg !384
  %46967 = load double, ptr %46963, align 16, !dbg !384
  %46968 = getelementptr inbounds { double, double }, ptr %46963, i32 0, i32 1, !dbg !384
  %46969 = load double, ptr %46968, align 8, !dbg !384
  %46970 = call { double, double } @make_vec(double %46964, double %46966, double %46967, double %46969), !dbg !384
  %46971 = extractvalue { double, double } %46970, 0, !dbg !384
  store double %46971, ptr %19, align 8, !dbg !384
  %46972 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %46973 = extractvalue { double, double } %46970, 1, !dbg !384
  store double %46973, ptr %46972, align 8, !dbg !384
  %46974 = load double, ptr %18, align 8, !dbg !385
  %46975 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %46976 = load double, ptr %46975, align 8, !dbg !385
  %46977 = load double, ptr %19, align 8, !dbg !385
  %46978 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %46979 = load double, ptr %46978, align 8, !dbg !385
  %46980 = call double @dot(double %46974, double %46976, double %46977, double %46979), !dbg !385
  %46981 = call double @atan2(double noundef %46946, double noundef %46980) #6, !dbg !386
  store double %46981, ptr %13, align 8, !dbg !387
  %46982 = load double, ptr %13, align 8, !dbg !388
  %46983 = load double, ptr %14, align 8, !dbg !389
  %46984 = fadd double %46983, %46982, !dbg !389
  store double %46984, ptr %14, align 8, !dbg !389
  %46985 = load double, ptr %13, align 8, !dbg !390
  %46986 = fsub double %46985, 0x400921FB54442D18, !dbg !392
  %46987 = call double @llvm.fabs.f64(double %46986), !dbg !393
  %46988 = fcmp ole double %46987, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %46988, label %14330, label %46989, !dbg !395

46989:                                            ; preds = %46912
  %46990 = load double, ptr %13, align 8, !dbg !396
  %46991 = fadd double %46990, 0x400921FB54442D18, !dbg !397
  %46992 = call double @llvm.fabs.f64(double %46991), !dbg !398
  %46993 = fcmp ole double %46992, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %46993, label %14330, label %46994, !dbg !400

46994:                                            ; preds = %46989
  br label %46995, !dbg !403

46995:                                            ; preds = %46994
  %46996 = load i32, ptr %10, align 4, !dbg !404
  %46997 = add nsw i32 %46996, 1, !dbg !404
  store i32 %46997, ptr %10, align 4, !dbg !404
  %46998 = load i32, ptr %10, align 4, !dbg !364
  %46999 = load i32, ptr %8, align 4, !dbg !366
  %47000 = icmp slt i32 %46998, %46999, !dbg !367
  br i1 %47000, label %47001, label %48422, !dbg !368

47001:                                            ; preds = %46995
  %47002 = load i32, ptr %10, align 4, !dbg !369
  %47003 = sext i32 %47002 to i64, !dbg !371
  %47004 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47003, !dbg !371
  %47005 = load double, ptr %6, align 8, !dbg !372
  %47006 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47007 = load double, ptr %47006, align 8, !dbg !372
  %47008 = load double, ptr %47004, align 16, !dbg !372
  %47009 = getelementptr inbounds { double, double }, ptr %47004, i32 0, i32 1, !dbg !372
  %47010 = load double, ptr %47009, align 8, !dbg !372
  %47011 = call { double, double } @make_vec(double %47005, double %47007, double %47008, double %47010), !dbg !372
  %47012 = extractvalue { double, double } %47011, 0, !dbg !372
  store double %47012, ptr %16, align 8, !dbg !372
  %47013 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47014 = extractvalue { double, double } %47011, 1, !dbg !372
  store double %47014, ptr %47013, align 8, !dbg !372
  %47015 = load i32, ptr %10, align 4, !dbg !373
  %47016 = add nsw i32 %47015, 1, !dbg !374
  %47017 = sext i32 %47016 to i64, !dbg !375
  %47018 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47017, !dbg !375
  %47019 = load double, ptr %6, align 8, !dbg !376
  %47020 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47021 = load double, ptr %47020, align 8, !dbg !376
  %47022 = load double, ptr %47018, align 16, !dbg !376
  %47023 = getelementptr inbounds { double, double }, ptr %47018, i32 0, i32 1, !dbg !376
  %47024 = load double, ptr %47023, align 8, !dbg !376
  %47025 = call { double, double } @make_vec(double %47019, double %47021, double %47022, double %47024), !dbg !376
  %47026 = extractvalue { double, double } %47025, 0, !dbg !376
  store double %47026, ptr %17, align 8, !dbg !376
  %47027 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47028 = extractvalue { double, double } %47025, 1, !dbg !376
  store double %47028, ptr %47027, align 8, !dbg !376
  %47029 = load double, ptr %16, align 8, !dbg !377
  %47030 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47031 = load double, ptr %47030, align 8, !dbg !377
  %47032 = load double, ptr %17, align 8, !dbg !377
  %47033 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47034 = load double, ptr %47033, align 8, !dbg !377
  %47035 = call double @cross(double %47029, double %47031, double %47032, double %47034), !dbg !377
  %47036 = load i32, ptr %10, align 4, !dbg !378
  %47037 = sext i32 %47036 to i64, !dbg !379
  %47038 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47037, !dbg !379
  %47039 = load double, ptr %6, align 8, !dbg !380
  %47040 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47041 = load double, ptr %47040, align 8, !dbg !380
  %47042 = load double, ptr %47038, align 16, !dbg !380
  %47043 = getelementptr inbounds { double, double }, ptr %47038, i32 0, i32 1, !dbg !380
  %47044 = load double, ptr %47043, align 8, !dbg !380
  %47045 = call { double, double } @make_vec(double %47039, double %47041, double %47042, double %47044), !dbg !380
  %47046 = extractvalue { double, double } %47045, 0, !dbg !380
  store double %47046, ptr %18, align 8, !dbg !380
  %47047 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47048 = extractvalue { double, double } %47045, 1, !dbg !380
  store double %47048, ptr %47047, align 8, !dbg !380
  %47049 = load i32, ptr %10, align 4, !dbg !381
  %47050 = add nsw i32 %47049, 1, !dbg !382
  %47051 = sext i32 %47050 to i64, !dbg !383
  %47052 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47051, !dbg !383
  %47053 = load double, ptr %6, align 8, !dbg !384
  %47054 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47055 = load double, ptr %47054, align 8, !dbg !384
  %47056 = load double, ptr %47052, align 16, !dbg !384
  %47057 = getelementptr inbounds { double, double }, ptr %47052, i32 0, i32 1, !dbg !384
  %47058 = load double, ptr %47057, align 8, !dbg !384
  %47059 = call { double, double } @make_vec(double %47053, double %47055, double %47056, double %47058), !dbg !384
  %47060 = extractvalue { double, double } %47059, 0, !dbg !384
  store double %47060, ptr %19, align 8, !dbg !384
  %47061 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47062 = extractvalue { double, double } %47059, 1, !dbg !384
  store double %47062, ptr %47061, align 8, !dbg !384
  %47063 = load double, ptr %18, align 8, !dbg !385
  %47064 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47065 = load double, ptr %47064, align 8, !dbg !385
  %47066 = load double, ptr %19, align 8, !dbg !385
  %47067 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47068 = load double, ptr %47067, align 8, !dbg !385
  %47069 = call double @dot(double %47063, double %47065, double %47066, double %47068), !dbg !385
  %47070 = call double @atan2(double noundef %47035, double noundef %47069) #6, !dbg !386
  store double %47070, ptr %13, align 8, !dbg !387
  %47071 = load double, ptr %13, align 8, !dbg !388
  %47072 = load double, ptr %14, align 8, !dbg !389
  %47073 = fadd double %47072, %47071, !dbg !389
  store double %47073, ptr %14, align 8, !dbg !389
  %47074 = load double, ptr %13, align 8, !dbg !390
  %47075 = fsub double %47074, 0x400921FB54442D18, !dbg !392
  %47076 = call double @llvm.fabs.f64(double %47075), !dbg !393
  %47077 = fcmp ole double %47076, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47077, label %14330, label %47078, !dbg !395

47078:                                            ; preds = %47001
  %47079 = load double, ptr %13, align 8, !dbg !396
  %47080 = fadd double %47079, 0x400921FB54442D18, !dbg !397
  %47081 = call double @llvm.fabs.f64(double %47080), !dbg !398
  %47082 = fcmp ole double %47081, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47082, label %14330, label %47083, !dbg !400

47083:                                            ; preds = %47078
  br label %47084, !dbg !403

47084:                                            ; preds = %47083
  %47085 = load i32, ptr %10, align 4, !dbg !404
  %47086 = add nsw i32 %47085, 1, !dbg !404
  store i32 %47086, ptr %10, align 4, !dbg !404
  %47087 = load i32, ptr %10, align 4, !dbg !364
  %47088 = load i32, ptr %8, align 4, !dbg !366
  %47089 = icmp slt i32 %47087, %47088, !dbg !367
  br i1 %47089, label %47090, label %48422, !dbg !368

47090:                                            ; preds = %47084
  %47091 = load i32, ptr %10, align 4, !dbg !369
  %47092 = sext i32 %47091 to i64, !dbg !371
  %47093 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47092, !dbg !371
  %47094 = load double, ptr %6, align 8, !dbg !372
  %47095 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47096 = load double, ptr %47095, align 8, !dbg !372
  %47097 = load double, ptr %47093, align 16, !dbg !372
  %47098 = getelementptr inbounds { double, double }, ptr %47093, i32 0, i32 1, !dbg !372
  %47099 = load double, ptr %47098, align 8, !dbg !372
  %47100 = call { double, double } @make_vec(double %47094, double %47096, double %47097, double %47099), !dbg !372
  %47101 = extractvalue { double, double } %47100, 0, !dbg !372
  store double %47101, ptr %16, align 8, !dbg !372
  %47102 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47103 = extractvalue { double, double } %47100, 1, !dbg !372
  store double %47103, ptr %47102, align 8, !dbg !372
  %47104 = load i32, ptr %10, align 4, !dbg !373
  %47105 = add nsw i32 %47104, 1, !dbg !374
  %47106 = sext i32 %47105 to i64, !dbg !375
  %47107 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47106, !dbg !375
  %47108 = load double, ptr %6, align 8, !dbg !376
  %47109 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47110 = load double, ptr %47109, align 8, !dbg !376
  %47111 = load double, ptr %47107, align 16, !dbg !376
  %47112 = getelementptr inbounds { double, double }, ptr %47107, i32 0, i32 1, !dbg !376
  %47113 = load double, ptr %47112, align 8, !dbg !376
  %47114 = call { double, double } @make_vec(double %47108, double %47110, double %47111, double %47113), !dbg !376
  %47115 = extractvalue { double, double } %47114, 0, !dbg !376
  store double %47115, ptr %17, align 8, !dbg !376
  %47116 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47117 = extractvalue { double, double } %47114, 1, !dbg !376
  store double %47117, ptr %47116, align 8, !dbg !376
  %47118 = load double, ptr %16, align 8, !dbg !377
  %47119 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47120 = load double, ptr %47119, align 8, !dbg !377
  %47121 = load double, ptr %17, align 8, !dbg !377
  %47122 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47123 = load double, ptr %47122, align 8, !dbg !377
  %47124 = call double @cross(double %47118, double %47120, double %47121, double %47123), !dbg !377
  %47125 = load i32, ptr %10, align 4, !dbg !378
  %47126 = sext i32 %47125 to i64, !dbg !379
  %47127 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47126, !dbg !379
  %47128 = load double, ptr %6, align 8, !dbg !380
  %47129 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47130 = load double, ptr %47129, align 8, !dbg !380
  %47131 = load double, ptr %47127, align 16, !dbg !380
  %47132 = getelementptr inbounds { double, double }, ptr %47127, i32 0, i32 1, !dbg !380
  %47133 = load double, ptr %47132, align 8, !dbg !380
  %47134 = call { double, double } @make_vec(double %47128, double %47130, double %47131, double %47133), !dbg !380
  %47135 = extractvalue { double, double } %47134, 0, !dbg !380
  store double %47135, ptr %18, align 8, !dbg !380
  %47136 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47137 = extractvalue { double, double } %47134, 1, !dbg !380
  store double %47137, ptr %47136, align 8, !dbg !380
  %47138 = load i32, ptr %10, align 4, !dbg !381
  %47139 = add nsw i32 %47138, 1, !dbg !382
  %47140 = sext i32 %47139 to i64, !dbg !383
  %47141 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47140, !dbg !383
  %47142 = load double, ptr %6, align 8, !dbg !384
  %47143 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47144 = load double, ptr %47143, align 8, !dbg !384
  %47145 = load double, ptr %47141, align 16, !dbg !384
  %47146 = getelementptr inbounds { double, double }, ptr %47141, i32 0, i32 1, !dbg !384
  %47147 = load double, ptr %47146, align 8, !dbg !384
  %47148 = call { double, double } @make_vec(double %47142, double %47144, double %47145, double %47147), !dbg !384
  %47149 = extractvalue { double, double } %47148, 0, !dbg !384
  store double %47149, ptr %19, align 8, !dbg !384
  %47150 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47151 = extractvalue { double, double } %47148, 1, !dbg !384
  store double %47151, ptr %47150, align 8, !dbg !384
  %47152 = load double, ptr %18, align 8, !dbg !385
  %47153 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47154 = load double, ptr %47153, align 8, !dbg !385
  %47155 = load double, ptr %19, align 8, !dbg !385
  %47156 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47157 = load double, ptr %47156, align 8, !dbg !385
  %47158 = call double @dot(double %47152, double %47154, double %47155, double %47157), !dbg !385
  %47159 = call double @atan2(double noundef %47124, double noundef %47158) #6, !dbg !386
  store double %47159, ptr %13, align 8, !dbg !387
  %47160 = load double, ptr %13, align 8, !dbg !388
  %47161 = load double, ptr %14, align 8, !dbg !389
  %47162 = fadd double %47161, %47160, !dbg !389
  store double %47162, ptr %14, align 8, !dbg !389
  %47163 = load double, ptr %13, align 8, !dbg !390
  %47164 = fsub double %47163, 0x400921FB54442D18, !dbg !392
  %47165 = call double @llvm.fabs.f64(double %47164), !dbg !393
  %47166 = fcmp ole double %47165, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47166, label %14330, label %47167, !dbg !395

47167:                                            ; preds = %47090
  %47168 = load double, ptr %13, align 8, !dbg !396
  %47169 = fadd double %47168, 0x400921FB54442D18, !dbg !397
  %47170 = call double @llvm.fabs.f64(double %47169), !dbg !398
  %47171 = fcmp ole double %47170, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47171, label %14330, label %47172, !dbg !400

47172:                                            ; preds = %47167
  br label %47173, !dbg !403

47173:                                            ; preds = %47172
  %47174 = load i32, ptr %10, align 4, !dbg !404
  %47175 = add nsw i32 %47174, 1, !dbg !404
  store i32 %47175, ptr %10, align 4, !dbg !404
  %47176 = load i32, ptr %10, align 4, !dbg !364
  %47177 = load i32, ptr %8, align 4, !dbg !366
  %47178 = icmp slt i32 %47176, %47177, !dbg !367
  br i1 %47178, label %47179, label %48422, !dbg !368

47179:                                            ; preds = %47173
  %47180 = load i32, ptr %10, align 4, !dbg !369
  %47181 = sext i32 %47180 to i64, !dbg !371
  %47182 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47181, !dbg !371
  %47183 = load double, ptr %6, align 8, !dbg !372
  %47184 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47185 = load double, ptr %47184, align 8, !dbg !372
  %47186 = load double, ptr %47182, align 16, !dbg !372
  %47187 = getelementptr inbounds { double, double }, ptr %47182, i32 0, i32 1, !dbg !372
  %47188 = load double, ptr %47187, align 8, !dbg !372
  %47189 = call { double, double } @make_vec(double %47183, double %47185, double %47186, double %47188), !dbg !372
  %47190 = extractvalue { double, double } %47189, 0, !dbg !372
  store double %47190, ptr %16, align 8, !dbg !372
  %47191 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47192 = extractvalue { double, double } %47189, 1, !dbg !372
  store double %47192, ptr %47191, align 8, !dbg !372
  %47193 = load i32, ptr %10, align 4, !dbg !373
  %47194 = add nsw i32 %47193, 1, !dbg !374
  %47195 = sext i32 %47194 to i64, !dbg !375
  %47196 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47195, !dbg !375
  %47197 = load double, ptr %6, align 8, !dbg !376
  %47198 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47199 = load double, ptr %47198, align 8, !dbg !376
  %47200 = load double, ptr %47196, align 16, !dbg !376
  %47201 = getelementptr inbounds { double, double }, ptr %47196, i32 0, i32 1, !dbg !376
  %47202 = load double, ptr %47201, align 8, !dbg !376
  %47203 = call { double, double } @make_vec(double %47197, double %47199, double %47200, double %47202), !dbg !376
  %47204 = extractvalue { double, double } %47203, 0, !dbg !376
  store double %47204, ptr %17, align 8, !dbg !376
  %47205 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47206 = extractvalue { double, double } %47203, 1, !dbg !376
  store double %47206, ptr %47205, align 8, !dbg !376
  %47207 = load double, ptr %16, align 8, !dbg !377
  %47208 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47209 = load double, ptr %47208, align 8, !dbg !377
  %47210 = load double, ptr %17, align 8, !dbg !377
  %47211 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47212 = load double, ptr %47211, align 8, !dbg !377
  %47213 = call double @cross(double %47207, double %47209, double %47210, double %47212), !dbg !377
  %47214 = load i32, ptr %10, align 4, !dbg !378
  %47215 = sext i32 %47214 to i64, !dbg !379
  %47216 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47215, !dbg !379
  %47217 = load double, ptr %6, align 8, !dbg !380
  %47218 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47219 = load double, ptr %47218, align 8, !dbg !380
  %47220 = load double, ptr %47216, align 16, !dbg !380
  %47221 = getelementptr inbounds { double, double }, ptr %47216, i32 0, i32 1, !dbg !380
  %47222 = load double, ptr %47221, align 8, !dbg !380
  %47223 = call { double, double } @make_vec(double %47217, double %47219, double %47220, double %47222), !dbg !380
  %47224 = extractvalue { double, double } %47223, 0, !dbg !380
  store double %47224, ptr %18, align 8, !dbg !380
  %47225 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47226 = extractvalue { double, double } %47223, 1, !dbg !380
  store double %47226, ptr %47225, align 8, !dbg !380
  %47227 = load i32, ptr %10, align 4, !dbg !381
  %47228 = add nsw i32 %47227, 1, !dbg !382
  %47229 = sext i32 %47228 to i64, !dbg !383
  %47230 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47229, !dbg !383
  %47231 = load double, ptr %6, align 8, !dbg !384
  %47232 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47233 = load double, ptr %47232, align 8, !dbg !384
  %47234 = load double, ptr %47230, align 16, !dbg !384
  %47235 = getelementptr inbounds { double, double }, ptr %47230, i32 0, i32 1, !dbg !384
  %47236 = load double, ptr %47235, align 8, !dbg !384
  %47237 = call { double, double } @make_vec(double %47231, double %47233, double %47234, double %47236), !dbg !384
  %47238 = extractvalue { double, double } %47237, 0, !dbg !384
  store double %47238, ptr %19, align 8, !dbg !384
  %47239 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47240 = extractvalue { double, double } %47237, 1, !dbg !384
  store double %47240, ptr %47239, align 8, !dbg !384
  %47241 = load double, ptr %18, align 8, !dbg !385
  %47242 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47243 = load double, ptr %47242, align 8, !dbg !385
  %47244 = load double, ptr %19, align 8, !dbg !385
  %47245 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47246 = load double, ptr %47245, align 8, !dbg !385
  %47247 = call double @dot(double %47241, double %47243, double %47244, double %47246), !dbg !385
  %47248 = call double @atan2(double noundef %47213, double noundef %47247) #6, !dbg !386
  store double %47248, ptr %13, align 8, !dbg !387
  %47249 = load double, ptr %13, align 8, !dbg !388
  %47250 = load double, ptr %14, align 8, !dbg !389
  %47251 = fadd double %47250, %47249, !dbg !389
  store double %47251, ptr %14, align 8, !dbg !389
  %47252 = load double, ptr %13, align 8, !dbg !390
  %47253 = fsub double %47252, 0x400921FB54442D18, !dbg !392
  %47254 = call double @llvm.fabs.f64(double %47253), !dbg !393
  %47255 = fcmp ole double %47254, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47255, label %14330, label %47256, !dbg !395

47256:                                            ; preds = %47179
  %47257 = load double, ptr %13, align 8, !dbg !396
  %47258 = fadd double %47257, 0x400921FB54442D18, !dbg !397
  %47259 = call double @llvm.fabs.f64(double %47258), !dbg !398
  %47260 = fcmp ole double %47259, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47260, label %14330, label %47261, !dbg !400

47261:                                            ; preds = %47256
  br label %47262, !dbg !403

47262:                                            ; preds = %47261
  %47263 = load i32, ptr %10, align 4, !dbg !404
  %47264 = add nsw i32 %47263, 1, !dbg !404
  store i32 %47264, ptr %10, align 4, !dbg !404
  %47265 = load i32, ptr %10, align 4, !dbg !364
  %47266 = load i32, ptr %8, align 4, !dbg !366
  %47267 = icmp slt i32 %47265, %47266, !dbg !367
  br i1 %47267, label %47268, label %48422, !dbg !368

47268:                                            ; preds = %47262
  %47269 = load i32, ptr %10, align 4, !dbg !369
  %47270 = sext i32 %47269 to i64, !dbg !371
  %47271 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47270, !dbg !371
  %47272 = load double, ptr %6, align 8, !dbg !372
  %47273 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47274 = load double, ptr %47273, align 8, !dbg !372
  %47275 = load double, ptr %47271, align 16, !dbg !372
  %47276 = getelementptr inbounds { double, double }, ptr %47271, i32 0, i32 1, !dbg !372
  %47277 = load double, ptr %47276, align 8, !dbg !372
  %47278 = call { double, double } @make_vec(double %47272, double %47274, double %47275, double %47277), !dbg !372
  %47279 = extractvalue { double, double } %47278, 0, !dbg !372
  store double %47279, ptr %16, align 8, !dbg !372
  %47280 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47281 = extractvalue { double, double } %47278, 1, !dbg !372
  store double %47281, ptr %47280, align 8, !dbg !372
  %47282 = load i32, ptr %10, align 4, !dbg !373
  %47283 = add nsw i32 %47282, 1, !dbg !374
  %47284 = sext i32 %47283 to i64, !dbg !375
  %47285 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47284, !dbg !375
  %47286 = load double, ptr %6, align 8, !dbg !376
  %47287 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47288 = load double, ptr %47287, align 8, !dbg !376
  %47289 = load double, ptr %47285, align 16, !dbg !376
  %47290 = getelementptr inbounds { double, double }, ptr %47285, i32 0, i32 1, !dbg !376
  %47291 = load double, ptr %47290, align 8, !dbg !376
  %47292 = call { double, double } @make_vec(double %47286, double %47288, double %47289, double %47291), !dbg !376
  %47293 = extractvalue { double, double } %47292, 0, !dbg !376
  store double %47293, ptr %17, align 8, !dbg !376
  %47294 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47295 = extractvalue { double, double } %47292, 1, !dbg !376
  store double %47295, ptr %47294, align 8, !dbg !376
  %47296 = load double, ptr %16, align 8, !dbg !377
  %47297 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47298 = load double, ptr %47297, align 8, !dbg !377
  %47299 = load double, ptr %17, align 8, !dbg !377
  %47300 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47301 = load double, ptr %47300, align 8, !dbg !377
  %47302 = call double @cross(double %47296, double %47298, double %47299, double %47301), !dbg !377
  %47303 = load i32, ptr %10, align 4, !dbg !378
  %47304 = sext i32 %47303 to i64, !dbg !379
  %47305 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47304, !dbg !379
  %47306 = load double, ptr %6, align 8, !dbg !380
  %47307 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47308 = load double, ptr %47307, align 8, !dbg !380
  %47309 = load double, ptr %47305, align 16, !dbg !380
  %47310 = getelementptr inbounds { double, double }, ptr %47305, i32 0, i32 1, !dbg !380
  %47311 = load double, ptr %47310, align 8, !dbg !380
  %47312 = call { double, double } @make_vec(double %47306, double %47308, double %47309, double %47311), !dbg !380
  %47313 = extractvalue { double, double } %47312, 0, !dbg !380
  store double %47313, ptr %18, align 8, !dbg !380
  %47314 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47315 = extractvalue { double, double } %47312, 1, !dbg !380
  store double %47315, ptr %47314, align 8, !dbg !380
  %47316 = load i32, ptr %10, align 4, !dbg !381
  %47317 = add nsw i32 %47316, 1, !dbg !382
  %47318 = sext i32 %47317 to i64, !dbg !383
  %47319 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47318, !dbg !383
  %47320 = load double, ptr %6, align 8, !dbg !384
  %47321 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47322 = load double, ptr %47321, align 8, !dbg !384
  %47323 = load double, ptr %47319, align 16, !dbg !384
  %47324 = getelementptr inbounds { double, double }, ptr %47319, i32 0, i32 1, !dbg !384
  %47325 = load double, ptr %47324, align 8, !dbg !384
  %47326 = call { double, double } @make_vec(double %47320, double %47322, double %47323, double %47325), !dbg !384
  %47327 = extractvalue { double, double } %47326, 0, !dbg !384
  store double %47327, ptr %19, align 8, !dbg !384
  %47328 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47329 = extractvalue { double, double } %47326, 1, !dbg !384
  store double %47329, ptr %47328, align 8, !dbg !384
  %47330 = load double, ptr %18, align 8, !dbg !385
  %47331 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47332 = load double, ptr %47331, align 8, !dbg !385
  %47333 = load double, ptr %19, align 8, !dbg !385
  %47334 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47335 = load double, ptr %47334, align 8, !dbg !385
  %47336 = call double @dot(double %47330, double %47332, double %47333, double %47335), !dbg !385
  %47337 = call double @atan2(double noundef %47302, double noundef %47336) #6, !dbg !386
  store double %47337, ptr %13, align 8, !dbg !387
  %47338 = load double, ptr %13, align 8, !dbg !388
  %47339 = load double, ptr %14, align 8, !dbg !389
  %47340 = fadd double %47339, %47338, !dbg !389
  store double %47340, ptr %14, align 8, !dbg !389
  %47341 = load double, ptr %13, align 8, !dbg !390
  %47342 = fsub double %47341, 0x400921FB54442D18, !dbg !392
  %47343 = call double @llvm.fabs.f64(double %47342), !dbg !393
  %47344 = fcmp ole double %47343, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47344, label %14330, label %47345, !dbg !395

47345:                                            ; preds = %47268
  %47346 = load double, ptr %13, align 8, !dbg !396
  %47347 = fadd double %47346, 0x400921FB54442D18, !dbg !397
  %47348 = call double @llvm.fabs.f64(double %47347), !dbg !398
  %47349 = fcmp ole double %47348, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47349, label %14330, label %47350, !dbg !400

47350:                                            ; preds = %47345
  br label %47351, !dbg !403

47351:                                            ; preds = %47350
  %47352 = load i32, ptr %10, align 4, !dbg !404
  %47353 = add nsw i32 %47352, 1, !dbg !404
  store i32 %47353, ptr %10, align 4, !dbg !404
  %47354 = load i32, ptr %10, align 4, !dbg !364
  %47355 = load i32, ptr %8, align 4, !dbg !366
  %47356 = icmp slt i32 %47354, %47355, !dbg !367
  br i1 %47356, label %47357, label %48422, !dbg !368

47357:                                            ; preds = %47351
  %47358 = load i32, ptr %10, align 4, !dbg !369
  %47359 = sext i32 %47358 to i64, !dbg !371
  %47360 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47359, !dbg !371
  %47361 = load double, ptr %6, align 8, !dbg !372
  %47362 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47363 = load double, ptr %47362, align 8, !dbg !372
  %47364 = load double, ptr %47360, align 16, !dbg !372
  %47365 = getelementptr inbounds { double, double }, ptr %47360, i32 0, i32 1, !dbg !372
  %47366 = load double, ptr %47365, align 8, !dbg !372
  %47367 = call { double, double } @make_vec(double %47361, double %47363, double %47364, double %47366), !dbg !372
  %47368 = extractvalue { double, double } %47367, 0, !dbg !372
  store double %47368, ptr %16, align 8, !dbg !372
  %47369 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47370 = extractvalue { double, double } %47367, 1, !dbg !372
  store double %47370, ptr %47369, align 8, !dbg !372
  %47371 = load i32, ptr %10, align 4, !dbg !373
  %47372 = add nsw i32 %47371, 1, !dbg !374
  %47373 = sext i32 %47372 to i64, !dbg !375
  %47374 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47373, !dbg !375
  %47375 = load double, ptr %6, align 8, !dbg !376
  %47376 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47377 = load double, ptr %47376, align 8, !dbg !376
  %47378 = load double, ptr %47374, align 16, !dbg !376
  %47379 = getelementptr inbounds { double, double }, ptr %47374, i32 0, i32 1, !dbg !376
  %47380 = load double, ptr %47379, align 8, !dbg !376
  %47381 = call { double, double } @make_vec(double %47375, double %47377, double %47378, double %47380), !dbg !376
  %47382 = extractvalue { double, double } %47381, 0, !dbg !376
  store double %47382, ptr %17, align 8, !dbg !376
  %47383 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47384 = extractvalue { double, double } %47381, 1, !dbg !376
  store double %47384, ptr %47383, align 8, !dbg !376
  %47385 = load double, ptr %16, align 8, !dbg !377
  %47386 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47387 = load double, ptr %47386, align 8, !dbg !377
  %47388 = load double, ptr %17, align 8, !dbg !377
  %47389 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47390 = load double, ptr %47389, align 8, !dbg !377
  %47391 = call double @cross(double %47385, double %47387, double %47388, double %47390), !dbg !377
  %47392 = load i32, ptr %10, align 4, !dbg !378
  %47393 = sext i32 %47392 to i64, !dbg !379
  %47394 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47393, !dbg !379
  %47395 = load double, ptr %6, align 8, !dbg !380
  %47396 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47397 = load double, ptr %47396, align 8, !dbg !380
  %47398 = load double, ptr %47394, align 16, !dbg !380
  %47399 = getelementptr inbounds { double, double }, ptr %47394, i32 0, i32 1, !dbg !380
  %47400 = load double, ptr %47399, align 8, !dbg !380
  %47401 = call { double, double } @make_vec(double %47395, double %47397, double %47398, double %47400), !dbg !380
  %47402 = extractvalue { double, double } %47401, 0, !dbg !380
  store double %47402, ptr %18, align 8, !dbg !380
  %47403 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47404 = extractvalue { double, double } %47401, 1, !dbg !380
  store double %47404, ptr %47403, align 8, !dbg !380
  %47405 = load i32, ptr %10, align 4, !dbg !381
  %47406 = add nsw i32 %47405, 1, !dbg !382
  %47407 = sext i32 %47406 to i64, !dbg !383
  %47408 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47407, !dbg !383
  %47409 = load double, ptr %6, align 8, !dbg !384
  %47410 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47411 = load double, ptr %47410, align 8, !dbg !384
  %47412 = load double, ptr %47408, align 16, !dbg !384
  %47413 = getelementptr inbounds { double, double }, ptr %47408, i32 0, i32 1, !dbg !384
  %47414 = load double, ptr %47413, align 8, !dbg !384
  %47415 = call { double, double } @make_vec(double %47409, double %47411, double %47412, double %47414), !dbg !384
  %47416 = extractvalue { double, double } %47415, 0, !dbg !384
  store double %47416, ptr %19, align 8, !dbg !384
  %47417 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47418 = extractvalue { double, double } %47415, 1, !dbg !384
  store double %47418, ptr %47417, align 8, !dbg !384
  %47419 = load double, ptr %18, align 8, !dbg !385
  %47420 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47421 = load double, ptr %47420, align 8, !dbg !385
  %47422 = load double, ptr %19, align 8, !dbg !385
  %47423 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47424 = load double, ptr %47423, align 8, !dbg !385
  %47425 = call double @dot(double %47419, double %47421, double %47422, double %47424), !dbg !385
  %47426 = call double @atan2(double noundef %47391, double noundef %47425) #6, !dbg !386
  store double %47426, ptr %13, align 8, !dbg !387
  %47427 = load double, ptr %13, align 8, !dbg !388
  %47428 = load double, ptr %14, align 8, !dbg !389
  %47429 = fadd double %47428, %47427, !dbg !389
  store double %47429, ptr %14, align 8, !dbg !389
  %47430 = load double, ptr %13, align 8, !dbg !390
  %47431 = fsub double %47430, 0x400921FB54442D18, !dbg !392
  %47432 = call double @llvm.fabs.f64(double %47431), !dbg !393
  %47433 = fcmp ole double %47432, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47433, label %14330, label %47434, !dbg !395

47434:                                            ; preds = %47357
  %47435 = load double, ptr %13, align 8, !dbg !396
  %47436 = fadd double %47435, 0x400921FB54442D18, !dbg !397
  %47437 = call double @llvm.fabs.f64(double %47436), !dbg !398
  %47438 = fcmp ole double %47437, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47438, label %14330, label %47439, !dbg !400

47439:                                            ; preds = %47434
  br label %47440, !dbg !403

47440:                                            ; preds = %47439
  %47441 = load i32, ptr %10, align 4, !dbg !404
  %47442 = add nsw i32 %47441, 1, !dbg !404
  store i32 %47442, ptr %10, align 4, !dbg !404
  %47443 = load i32, ptr %10, align 4, !dbg !364
  %47444 = load i32, ptr %8, align 4, !dbg !366
  %47445 = icmp slt i32 %47443, %47444, !dbg !367
  br i1 %47445, label %47446, label %48422, !dbg !368

47446:                                            ; preds = %47440
  %47447 = load i32, ptr %10, align 4, !dbg !369
  %47448 = sext i32 %47447 to i64, !dbg !371
  %47449 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47448, !dbg !371
  %47450 = load double, ptr %6, align 8, !dbg !372
  %47451 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47452 = load double, ptr %47451, align 8, !dbg !372
  %47453 = load double, ptr %47449, align 16, !dbg !372
  %47454 = getelementptr inbounds { double, double }, ptr %47449, i32 0, i32 1, !dbg !372
  %47455 = load double, ptr %47454, align 8, !dbg !372
  %47456 = call { double, double } @make_vec(double %47450, double %47452, double %47453, double %47455), !dbg !372
  %47457 = extractvalue { double, double } %47456, 0, !dbg !372
  store double %47457, ptr %16, align 8, !dbg !372
  %47458 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47459 = extractvalue { double, double } %47456, 1, !dbg !372
  store double %47459, ptr %47458, align 8, !dbg !372
  %47460 = load i32, ptr %10, align 4, !dbg !373
  %47461 = add nsw i32 %47460, 1, !dbg !374
  %47462 = sext i32 %47461 to i64, !dbg !375
  %47463 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47462, !dbg !375
  %47464 = load double, ptr %6, align 8, !dbg !376
  %47465 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47466 = load double, ptr %47465, align 8, !dbg !376
  %47467 = load double, ptr %47463, align 16, !dbg !376
  %47468 = getelementptr inbounds { double, double }, ptr %47463, i32 0, i32 1, !dbg !376
  %47469 = load double, ptr %47468, align 8, !dbg !376
  %47470 = call { double, double } @make_vec(double %47464, double %47466, double %47467, double %47469), !dbg !376
  %47471 = extractvalue { double, double } %47470, 0, !dbg !376
  store double %47471, ptr %17, align 8, !dbg !376
  %47472 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47473 = extractvalue { double, double } %47470, 1, !dbg !376
  store double %47473, ptr %47472, align 8, !dbg !376
  %47474 = load double, ptr %16, align 8, !dbg !377
  %47475 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47476 = load double, ptr %47475, align 8, !dbg !377
  %47477 = load double, ptr %17, align 8, !dbg !377
  %47478 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47479 = load double, ptr %47478, align 8, !dbg !377
  %47480 = call double @cross(double %47474, double %47476, double %47477, double %47479), !dbg !377
  %47481 = load i32, ptr %10, align 4, !dbg !378
  %47482 = sext i32 %47481 to i64, !dbg !379
  %47483 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47482, !dbg !379
  %47484 = load double, ptr %6, align 8, !dbg !380
  %47485 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47486 = load double, ptr %47485, align 8, !dbg !380
  %47487 = load double, ptr %47483, align 16, !dbg !380
  %47488 = getelementptr inbounds { double, double }, ptr %47483, i32 0, i32 1, !dbg !380
  %47489 = load double, ptr %47488, align 8, !dbg !380
  %47490 = call { double, double } @make_vec(double %47484, double %47486, double %47487, double %47489), !dbg !380
  %47491 = extractvalue { double, double } %47490, 0, !dbg !380
  store double %47491, ptr %18, align 8, !dbg !380
  %47492 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47493 = extractvalue { double, double } %47490, 1, !dbg !380
  store double %47493, ptr %47492, align 8, !dbg !380
  %47494 = load i32, ptr %10, align 4, !dbg !381
  %47495 = add nsw i32 %47494, 1, !dbg !382
  %47496 = sext i32 %47495 to i64, !dbg !383
  %47497 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47496, !dbg !383
  %47498 = load double, ptr %6, align 8, !dbg !384
  %47499 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47500 = load double, ptr %47499, align 8, !dbg !384
  %47501 = load double, ptr %47497, align 16, !dbg !384
  %47502 = getelementptr inbounds { double, double }, ptr %47497, i32 0, i32 1, !dbg !384
  %47503 = load double, ptr %47502, align 8, !dbg !384
  %47504 = call { double, double } @make_vec(double %47498, double %47500, double %47501, double %47503), !dbg !384
  %47505 = extractvalue { double, double } %47504, 0, !dbg !384
  store double %47505, ptr %19, align 8, !dbg !384
  %47506 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47507 = extractvalue { double, double } %47504, 1, !dbg !384
  store double %47507, ptr %47506, align 8, !dbg !384
  %47508 = load double, ptr %18, align 8, !dbg !385
  %47509 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47510 = load double, ptr %47509, align 8, !dbg !385
  %47511 = load double, ptr %19, align 8, !dbg !385
  %47512 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47513 = load double, ptr %47512, align 8, !dbg !385
  %47514 = call double @dot(double %47508, double %47510, double %47511, double %47513), !dbg !385
  %47515 = call double @atan2(double noundef %47480, double noundef %47514) #6, !dbg !386
  store double %47515, ptr %13, align 8, !dbg !387
  %47516 = load double, ptr %13, align 8, !dbg !388
  %47517 = load double, ptr %14, align 8, !dbg !389
  %47518 = fadd double %47517, %47516, !dbg !389
  store double %47518, ptr %14, align 8, !dbg !389
  %47519 = load double, ptr %13, align 8, !dbg !390
  %47520 = fsub double %47519, 0x400921FB54442D18, !dbg !392
  %47521 = call double @llvm.fabs.f64(double %47520), !dbg !393
  %47522 = fcmp ole double %47521, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47522, label %14330, label %47523, !dbg !395

47523:                                            ; preds = %47446
  %47524 = load double, ptr %13, align 8, !dbg !396
  %47525 = fadd double %47524, 0x400921FB54442D18, !dbg !397
  %47526 = call double @llvm.fabs.f64(double %47525), !dbg !398
  %47527 = fcmp ole double %47526, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47527, label %14330, label %47528, !dbg !400

47528:                                            ; preds = %47523
  br label %47529, !dbg !403

47529:                                            ; preds = %47528
  %47530 = load i32, ptr %10, align 4, !dbg !404
  %47531 = add nsw i32 %47530, 1, !dbg !404
  store i32 %47531, ptr %10, align 4, !dbg !404
  %47532 = load i32, ptr %10, align 4, !dbg !364
  %47533 = load i32, ptr %8, align 4, !dbg !366
  %47534 = icmp slt i32 %47532, %47533, !dbg !367
  br i1 %47534, label %47535, label %48422, !dbg !368

47535:                                            ; preds = %47529
  %47536 = load i32, ptr %10, align 4, !dbg !369
  %47537 = sext i32 %47536 to i64, !dbg !371
  %47538 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47537, !dbg !371
  %47539 = load double, ptr %6, align 8, !dbg !372
  %47540 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47541 = load double, ptr %47540, align 8, !dbg !372
  %47542 = load double, ptr %47538, align 16, !dbg !372
  %47543 = getelementptr inbounds { double, double }, ptr %47538, i32 0, i32 1, !dbg !372
  %47544 = load double, ptr %47543, align 8, !dbg !372
  %47545 = call { double, double } @make_vec(double %47539, double %47541, double %47542, double %47544), !dbg !372
  %47546 = extractvalue { double, double } %47545, 0, !dbg !372
  store double %47546, ptr %16, align 8, !dbg !372
  %47547 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47548 = extractvalue { double, double } %47545, 1, !dbg !372
  store double %47548, ptr %47547, align 8, !dbg !372
  %47549 = load i32, ptr %10, align 4, !dbg !373
  %47550 = add nsw i32 %47549, 1, !dbg !374
  %47551 = sext i32 %47550 to i64, !dbg !375
  %47552 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47551, !dbg !375
  %47553 = load double, ptr %6, align 8, !dbg !376
  %47554 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47555 = load double, ptr %47554, align 8, !dbg !376
  %47556 = load double, ptr %47552, align 16, !dbg !376
  %47557 = getelementptr inbounds { double, double }, ptr %47552, i32 0, i32 1, !dbg !376
  %47558 = load double, ptr %47557, align 8, !dbg !376
  %47559 = call { double, double } @make_vec(double %47553, double %47555, double %47556, double %47558), !dbg !376
  %47560 = extractvalue { double, double } %47559, 0, !dbg !376
  store double %47560, ptr %17, align 8, !dbg !376
  %47561 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47562 = extractvalue { double, double } %47559, 1, !dbg !376
  store double %47562, ptr %47561, align 8, !dbg !376
  %47563 = load double, ptr %16, align 8, !dbg !377
  %47564 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47565 = load double, ptr %47564, align 8, !dbg !377
  %47566 = load double, ptr %17, align 8, !dbg !377
  %47567 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47568 = load double, ptr %47567, align 8, !dbg !377
  %47569 = call double @cross(double %47563, double %47565, double %47566, double %47568), !dbg !377
  %47570 = load i32, ptr %10, align 4, !dbg !378
  %47571 = sext i32 %47570 to i64, !dbg !379
  %47572 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47571, !dbg !379
  %47573 = load double, ptr %6, align 8, !dbg !380
  %47574 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47575 = load double, ptr %47574, align 8, !dbg !380
  %47576 = load double, ptr %47572, align 16, !dbg !380
  %47577 = getelementptr inbounds { double, double }, ptr %47572, i32 0, i32 1, !dbg !380
  %47578 = load double, ptr %47577, align 8, !dbg !380
  %47579 = call { double, double } @make_vec(double %47573, double %47575, double %47576, double %47578), !dbg !380
  %47580 = extractvalue { double, double } %47579, 0, !dbg !380
  store double %47580, ptr %18, align 8, !dbg !380
  %47581 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47582 = extractvalue { double, double } %47579, 1, !dbg !380
  store double %47582, ptr %47581, align 8, !dbg !380
  %47583 = load i32, ptr %10, align 4, !dbg !381
  %47584 = add nsw i32 %47583, 1, !dbg !382
  %47585 = sext i32 %47584 to i64, !dbg !383
  %47586 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47585, !dbg !383
  %47587 = load double, ptr %6, align 8, !dbg !384
  %47588 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47589 = load double, ptr %47588, align 8, !dbg !384
  %47590 = load double, ptr %47586, align 16, !dbg !384
  %47591 = getelementptr inbounds { double, double }, ptr %47586, i32 0, i32 1, !dbg !384
  %47592 = load double, ptr %47591, align 8, !dbg !384
  %47593 = call { double, double } @make_vec(double %47587, double %47589, double %47590, double %47592), !dbg !384
  %47594 = extractvalue { double, double } %47593, 0, !dbg !384
  store double %47594, ptr %19, align 8, !dbg !384
  %47595 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47596 = extractvalue { double, double } %47593, 1, !dbg !384
  store double %47596, ptr %47595, align 8, !dbg !384
  %47597 = load double, ptr %18, align 8, !dbg !385
  %47598 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47599 = load double, ptr %47598, align 8, !dbg !385
  %47600 = load double, ptr %19, align 8, !dbg !385
  %47601 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47602 = load double, ptr %47601, align 8, !dbg !385
  %47603 = call double @dot(double %47597, double %47599, double %47600, double %47602), !dbg !385
  %47604 = call double @atan2(double noundef %47569, double noundef %47603) #6, !dbg !386
  store double %47604, ptr %13, align 8, !dbg !387
  %47605 = load double, ptr %13, align 8, !dbg !388
  %47606 = load double, ptr %14, align 8, !dbg !389
  %47607 = fadd double %47606, %47605, !dbg !389
  store double %47607, ptr %14, align 8, !dbg !389
  %47608 = load double, ptr %13, align 8, !dbg !390
  %47609 = fsub double %47608, 0x400921FB54442D18, !dbg !392
  %47610 = call double @llvm.fabs.f64(double %47609), !dbg !393
  %47611 = fcmp ole double %47610, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47611, label %14330, label %47612, !dbg !395

47612:                                            ; preds = %47535
  %47613 = load double, ptr %13, align 8, !dbg !396
  %47614 = fadd double %47613, 0x400921FB54442D18, !dbg !397
  %47615 = call double @llvm.fabs.f64(double %47614), !dbg !398
  %47616 = fcmp ole double %47615, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47616, label %14330, label %47617, !dbg !400

47617:                                            ; preds = %47612
  br label %47618, !dbg !403

47618:                                            ; preds = %47617
  %47619 = load i32, ptr %10, align 4, !dbg !404
  %47620 = add nsw i32 %47619, 1, !dbg !404
  store i32 %47620, ptr %10, align 4, !dbg !404
  %47621 = load i32, ptr %10, align 4, !dbg !364
  %47622 = load i32, ptr %8, align 4, !dbg !366
  %47623 = icmp slt i32 %47621, %47622, !dbg !367
  br i1 %47623, label %47624, label %48422, !dbg !368

47624:                                            ; preds = %47618
  %47625 = load i32, ptr %10, align 4, !dbg !369
  %47626 = sext i32 %47625 to i64, !dbg !371
  %47627 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47626, !dbg !371
  %47628 = load double, ptr %6, align 8, !dbg !372
  %47629 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47630 = load double, ptr %47629, align 8, !dbg !372
  %47631 = load double, ptr %47627, align 16, !dbg !372
  %47632 = getelementptr inbounds { double, double }, ptr %47627, i32 0, i32 1, !dbg !372
  %47633 = load double, ptr %47632, align 8, !dbg !372
  %47634 = call { double, double } @make_vec(double %47628, double %47630, double %47631, double %47633), !dbg !372
  %47635 = extractvalue { double, double } %47634, 0, !dbg !372
  store double %47635, ptr %16, align 8, !dbg !372
  %47636 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47637 = extractvalue { double, double } %47634, 1, !dbg !372
  store double %47637, ptr %47636, align 8, !dbg !372
  %47638 = load i32, ptr %10, align 4, !dbg !373
  %47639 = add nsw i32 %47638, 1, !dbg !374
  %47640 = sext i32 %47639 to i64, !dbg !375
  %47641 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47640, !dbg !375
  %47642 = load double, ptr %6, align 8, !dbg !376
  %47643 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47644 = load double, ptr %47643, align 8, !dbg !376
  %47645 = load double, ptr %47641, align 16, !dbg !376
  %47646 = getelementptr inbounds { double, double }, ptr %47641, i32 0, i32 1, !dbg !376
  %47647 = load double, ptr %47646, align 8, !dbg !376
  %47648 = call { double, double } @make_vec(double %47642, double %47644, double %47645, double %47647), !dbg !376
  %47649 = extractvalue { double, double } %47648, 0, !dbg !376
  store double %47649, ptr %17, align 8, !dbg !376
  %47650 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47651 = extractvalue { double, double } %47648, 1, !dbg !376
  store double %47651, ptr %47650, align 8, !dbg !376
  %47652 = load double, ptr %16, align 8, !dbg !377
  %47653 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47654 = load double, ptr %47653, align 8, !dbg !377
  %47655 = load double, ptr %17, align 8, !dbg !377
  %47656 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47657 = load double, ptr %47656, align 8, !dbg !377
  %47658 = call double @cross(double %47652, double %47654, double %47655, double %47657), !dbg !377
  %47659 = load i32, ptr %10, align 4, !dbg !378
  %47660 = sext i32 %47659 to i64, !dbg !379
  %47661 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47660, !dbg !379
  %47662 = load double, ptr %6, align 8, !dbg !380
  %47663 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47664 = load double, ptr %47663, align 8, !dbg !380
  %47665 = load double, ptr %47661, align 16, !dbg !380
  %47666 = getelementptr inbounds { double, double }, ptr %47661, i32 0, i32 1, !dbg !380
  %47667 = load double, ptr %47666, align 8, !dbg !380
  %47668 = call { double, double } @make_vec(double %47662, double %47664, double %47665, double %47667), !dbg !380
  %47669 = extractvalue { double, double } %47668, 0, !dbg !380
  store double %47669, ptr %18, align 8, !dbg !380
  %47670 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47671 = extractvalue { double, double } %47668, 1, !dbg !380
  store double %47671, ptr %47670, align 8, !dbg !380
  %47672 = load i32, ptr %10, align 4, !dbg !381
  %47673 = add nsw i32 %47672, 1, !dbg !382
  %47674 = sext i32 %47673 to i64, !dbg !383
  %47675 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47674, !dbg !383
  %47676 = load double, ptr %6, align 8, !dbg !384
  %47677 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47678 = load double, ptr %47677, align 8, !dbg !384
  %47679 = load double, ptr %47675, align 16, !dbg !384
  %47680 = getelementptr inbounds { double, double }, ptr %47675, i32 0, i32 1, !dbg !384
  %47681 = load double, ptr %47680, align 8, !dbg !384
  %47682 = call { double, double } @make_vec(double %47676, double %47678, double %47679, double %47681), !dbg !384
  %47683 = extractvalue { double, double } %47682, 0, !dbg !384
  store double %47683, ptr %19, align 8, !dbg !384
  %47684 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47685 = extractvalue { double, double } %47682, 1, !dbg !384
  store double %47685, ptr %47684, align 8, !dbg !384
  %47686 = load double, ptr %18, align 8, !dbg !385
  %47687 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47688 = load double, ptr %47687, align 8, !dbg !385
  %47689 = load double, ptr %19, align 8, !dbg !385
  %47690 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47691 = load double, ptr %47690, align 8, !dbg !385
  %47692 = call double @dot(double %47686, double %47688, double %47689, double %47691), !dbg !385
  %47693 = call double @atan2(double noundef %47658, double noundef %47692) #6, !dbg !386
  store double %47693, ptr %13, align 8, !dbg !387
  %47694 = load double, ptr %13, align 8, !dbg !388
  %47695 = load double, ptr %14, align 8, !dbg !389
  %47696 = fadd double %47695, %47694, !dbg !389
  store double %47696, ptr %14, align 8, !dbg !389
  %47697 = load double, ptr %13, align 8, !dbg !390
  %47698 = fsub double %47697, 0x400921FB54442D18, !dbg !392
  %47699 = call double @llvm.fabs.f64(double %47698), !dbg !393
  %47700 = fcmp ole double %47699, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47700, label %14330, label %47701, !dbg !395

47701:                                            ; preds = %47624
  %47702 = load double, ptr %13, align 8, !dbg !396
  %47703 = fadd double %47702, 0x400921FB54442D18, !dbg !397
  %47704 = call double @llvm.fabs.f64(double %47703), !dbg !398
  %47705 = fcmp ole double %47704, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47705, label %14330, label %47706, !dbg !400

47706:                                            ; preds = %47701
  br label %47707, !dbg !403

47707:                                            ; preds = %47706
  %47708 = load i32, ptr %10, align 4, !dbg !404
  %47709 = add nsw i32 %47708, 1, !dbg !404
  store i32 %47709, ptr %10, align 4, !dbg !404
  %47710 = load i32, ptr %10, align 4, !dbg !364
  %47711 = load i32, ptr %8, align 4, !dbg !366
  %47712 = icmp slt i32 %47710, %47711, !dbg !367
  br i1 %47712, label %47713, label %48422, !dbg !368

47713:                                            ; preds = %47707
  %47714 = load i32, ptr %10, align 4, !dbg !369
  %47715 = sext i32 %47714 to i64, !dbg !371
  %47716 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47715, !dbg !371
  %47717 = load double, ptr %6, align 8, !dbg !372
  %47718 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47719 = load double, ptr %47718, align 8, !dbg !372
  %47720 = load double, ptr %47716, align 16, !dbg !372
  %47721 = getelementptr inbounds { double, double }, ptr %47716, i32 0, i32 1, !dbg !372
  %47722 = load double, ptr %47721, align 8, !dbg !372
  %47723 = call { double, double } @make_vec(double %47717, double %47719, double %47720, double %47722), !dbg !372
  %47724 = extractvalue { double, double } %47723, 0, !dbg !372
  store double %47724, ptr %16, align 8, !dbg !372
  %47725 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47726 = extractvalue { double, double } %47723, 1, !dbg !372
  store double %47726, ptr %47725, align 8, !dbg !372
  %47727 = load i32, ptr %10, align 4, !dbg !373
  %47728 = add nsw i32 %47727, 1, !dbg !374
  %47729 = sext i32 %47728 to i64, !dbg !375
  %47730 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47729, !dbg !375
  %47731 = load double, ptr %6, align 8, !dbg !376
  %47732 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47733 = load double, ptr %47732, align 8, !dbg !376
  %47734 = load double, ptr %47730, align 16, !dbg !376
  %47735 = getelementptr inbounds { double, double }, ptr %47730, i32 0, i32 1, !dbg !376
  %47736 = load double, ptr %47735, align 8, !dbg !376
  %47737 = call { double, double } @make_vec(double %47731, double %47733, double %47734, double %47736), !dbg !376
  %47738 = extractvalue { double, double } %47737, 0, !dbg !376
  store double %47738, ptr %17, align 8, !dbg !376
  %47739 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47740 = extractvalue { double, double } %47737, 1, !dbg !376
  store double %47740, ptr %47739, align 8, !dbg !376
  %47741 = load double, ptr %16, align 8, !dbg !377
  %47742 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47743 = load double, ptr %47742, align 8, !dbg !377
  %47744 = load double, ptr %17, align 8, !dbg !377
  %47745 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47746 = load double, ptr %47745, align 8, !dbg !377
  %47747 = call double @cross(double %47741, double %47743, double %47744, double %47746), !dbg !377
  %47748 = load i32, ptr %10, align 4, !dbg !378
  %47749 = sext i32 %47748 to i64, !dbg !379
  %47750 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47749, !dbg !379
  %47751 = load double, ptr %6, align 8, !dbg !380
  %47752 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47753 = load double, ptr %47752, align 8, !dbg !380
  %47754 = load double, ptr %47750, align 16, !dbg !380
  %47755 = getelementptr inbounds { double, double }, ptr %47750, i32 0, i32 1, !dbg !380
  %47756 = load double, ptr %47755, align 8, !dbg !380
  %47757 = call { double, double } @make_vec(double %47751, double %47753, double %47754, double %47756), !dbg !380
  %47758 = extractvalue { double, double } %47757, 0, !dbg !380
  store double %47758, ptr %18, align 8, !dbg !380
  %47759 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47760 = extractvalue { double, double } %47757, 1, !dbg !380
  store double %47760, ptr %47759, align 8, !dbg !380
  %47761 = load i32, ptr %10, align 4, !dbg !381
  %47762 = add nsw i32 %47761, 1, !dbg !382
  %47763 = sext i32 %47762 to i64, !dbg !383
  %47764 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47763, !dbg !383
  %47765 = load double, ptr %6, align 8, !dbg !384
  %47766 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47767 = load double, ptr %47766, align 8, !dbg !384
  %47768 = load double, ptr %47764, align 16, !dbg !384
  %47769 = getelementptr inbounds { double, double }, ptr %47764, i32 0, i32 1, !dbg !384
  %47770 = load double, ptr %47769, align 8, !dbg !384
  %47771 = call { double, double } @make_vec(double %47765, double %47767, double %47768, double %47770), !dbg !384
  %47772 = extractvalue { double, double } %47771, 0, !dbg !384
  store double %47772, ptr %19, align 8, !dbg !384
  %47773 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47774 = extractvalue { double, double } %47771, 1, !dbg !384
  store double %47774, ptr %47773, align 8, !dbg !384
  %47775 = load double, ptr %18, align 8, !dbg !385
  %47776 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47777 = load double, ptr %47776, align 8, !dbg !385
  %47778 = load double, ptr %19, align 8, !dbg !385
  %47779 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47780 = load double, ptr %47779, align 8, !dbg !385
  %47781 = call double @dot(double %47775, double %47777, double %47778, double %47780), !dbg !385
  %47782 = call double @atan2(double noundef %47747, double noundef %47781) #6, !dbg !386
  store double %47782, ptr %13, align 8, !dbg !387
  %47783 = load double, ptr %13, align 8, !dbg !388
  %47784 = load double, ptr %14, align 8, !dbg !389
  %47785 = fadd double %47784, %47783, !dbg !389
  store double %47785, ptr %14, align 8, !dbg !389
  %47786 = load double, ptr %13, align 8, !dbg !390
  %47787 = fsub double %47786, 0x400921FB54442D18, !dbg !392
  %47788 = call double @llvm.fabs.f64(double %47787), !dbg !393
  %47789 = fcmp ole double %47788, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47789, label %14330, label %47790, !dbg !395

47790:                                            ; preds = %47713
  %47791 = load double, ptr %13, align 8, !dbg !396
  %47792 = fadd double %47791, 0x400921FB54442D18, !dbg !397
  %47793 = call double @llvm.fabs.f64(double %47792), !dbg !398
  %47794 = fcmp ole double %47793, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47794, label %14330, label %47795, !dbg !400

47795:                                            ; preds = %47790
  br label %47796, !dbg !403

47796:                                            ; preds = %47795
  %47797 = load i32, ptr %10, align 4, !dbg !404
  %47798 = add nsw i32 %47797, 1, !dbg !404
  store i32 %47798, ptr %10, align 4, !dbg !404
  %47799 = load i32, ptr %10, align 4, !dbg !364
  %47800 = load i32, ptr %8, align 4, !dbg !366
  %47801 = icmp slt i32 %47799, %47800, !dbg !367
  br i1 %47801, label %47802, label %48422, !dbg !368

47802:                                            ; preds = %47796
  %47803 = load i32, ptr %10, align 4, !dbg !369
  %47804 = sext i32 %47803 to i64, !dbg !371
  %47805 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47804, !dbg !371
  %47806 = load double, ptr %6, align 8, !dbg !372
  %47807 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47808 = load double, ptr %47807, align 8, !dbg !372
  %47809 = load double, ptr %47805, align 16, !dbg !372
  %47810 = getelementptr inbounds { double, double }, ptr %47805, i32 0, i32 1, !dbg !372
  %47811 = load double, ptr %47810, align 8, !dbg !372
  %47812 = call { double, double } @make_vec(double %47806, double %47808, double %47809, double %47811), !dbg !372
  %47813 = extractvalue { double, double } %47812, 0, !dbg !372
  store double %47813, ptr %16, align 8, !dbg !372
  %47814 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47815 = extractvalue { double, double } %47812, 1, !dbg !372
  store double %47815, ptr %47814, align 8, !dbg !372
  %47816 = load i32, ptr %10, align 4, !dbg !373
  %47817 = add nsw i32 %47816, 1, !dbg !374
  %47818 = sext i32 %47817 to i64, !dbg !375
  %47819 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47818, !dbg !375
  %47820 = load double, ptr %6, align 8, !dbg !376
  %47821 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47822 = load double, ptr %47821, align 8, !dbg !376
  %47823 = load double, ptr %47819, align 16, !dbg !376
  %47824 = getelementptr inbounds { double, double }, ptr %47819, i32 0, i32 1, !dbg !376
  %47825 = load double, ptr %47824, align 8, !dbg !376
  %47826 = call { double, double } @make_vec(double %47820, double %47822, double %47823, double %47825), !dbg !376
  %47827 = extractvalue { double, double } %47826, 0, !dbg !376
  store double %47827, ptr %17, align 8, !dbg !376
  %47828 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47829 = extractvalue { double, double } %47826, 1, !dbg !376
  store double %47829, ptr %47828, align 8, !dbg !376
  %47830 = load double, ptr %16, align 8, !dbg !377
  %47831 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47832 = load double, ptr %47831, align 8, !dbg !377
  %47833 = load double, ptr %17, align 8, !dbg !377
  %47834 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47835 = load double, ptr %47834, align 8, !dbg !377
  %47836 = call double @cross(double %47830, double %47832, double %47833, double %47835), !dbg !377
  %47837 = load i32, ptr %10, align 4, !dbg !378
  %47838 = sext i32 %47837 to i64, !dbg !379
  %47839 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47838, !dbg !379
  %47840 = load double, ptr %6, align 8, !dbg !380
  %47841 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47842 = load double, ptr %47841, align 8, !dbg !380
  %47843 = load double, ptr %47839, align 16, !dbg !380
  %47844 = getelementptr inbounds { double, double }, ptr %47839, i32 0, i32 1, !dbg !380
  %47845 = load double, ptr %47844, align 8, !dbg !380
  %47846 = call { double, double } @make_vec(double %47840, double %47842, double %47843, double %47845), !dbg !380
  %47847 = extractvalue { double, double } %47846, 0, !dbg !380
  store double %47847, ptr %18, align 8, !dbg !380
  %47848 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47849 = extractvalue { double, double } %47846, 1, !dbg !380
  store double %47849, ptr %47848, align 8, !dbg !380
  %47850 = load i32, ptr %10, align 4, !dbg !381
  %47851 = add nsw i32 %47850, 1, !dbg !382
  %47852 = sext i32 %47851 to i64, !dbg !383
  %47853 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47852, !dbg !383
  %47854 = load double, ptr %6, align 8, !dbg !384
  %47855 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47856 = load double, ptr %47855, align 8, !dbg !384
  %47857 = load double, ptr %47853, align 16, !dbg !384
  %47858 = getelementptr inbounds { double, double }, ptr %47853, i32 0, i32 1, !dbg !384
  %47859 = load double, ptr %47858, align 8, !dbg !384
  %47860 = call { double, double } @make_vec(double %47854, double %47856, double %47857, double %47859), !dbg !384
  %47861 = extractvalue { double, double } %47860, 0, !dbg !384
  store double %47861, ptr %19, align 8, !dbg !384
  %47862 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47863 = extractvalue { double, double } %47860, 1, !dbg !384
  store double %47863, ptr %47862, align 8, !dbg !384
  %47864 = load double, ptr %18, align 8, !dbg !385
  %47865 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47866 = load double, ptr %47865, align 8, !dbg !385
  %47867 = load double, ptr %19, align 8, !dbg !385
  %47868 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47869 = load double, ptr %47868, align 8, !dbg !385
  %47870 = call double @dot(double %47864, double %47866, double %47867, double %47869), !dbg !385
  %47871 = call double @atan2(double noundef %47836, double noundef %47870) #6, !dbg !386
  store double %47871, ptr %13, align 8, !dbg !387
  %47872 = load double, ptr %13, align 8, !dbg !388
  %47873 = load double, ptr %14, align 8, !dbg !389
  %47874 = fadd double %47873, %47872, !dbg !389
  store double %47874, ptr %14, align 8, !dbg !389
  %47875 = load double, ptr %13, align 8, !dbg !390
  %47876 = fsub double %47875, 0x400921FB54442D18, !dbg !392
  %47877 = call double @llvm.fabs.f64(double %47876), !dbg !393
  %47878 = fcmp ole double %47877, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47878, label %14330, label %47879, !dbg !395

47879:                                            ; preds = %47802
  %47880 = load double, ptr %13, align 8, !dbg !396
  %47881 = fadd double %47880, 0x400921FB54442D18, !dbg !397
  %47882 = call double @llvm.fabs.f64(double %47881), !dbg !398
  %47883 = fcmp ole double %47882, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47883, label %14330, label %47884, !dbg !400

47884:                                            ; preds = %47879
  br label %47885, !dbg !403

47885:                                            ; preds = %47884
  %47886 = load i32, ptr %10, align 4, !dbg !404
  %47887 = add nsw i32 %47886, 1, !dbg !404
  store i32 %47887, ptr %10, align 4, !dbg !404
  %47888 = load i32, ptr %10, align 4, !dbg !364
  %47889 = load i32, ptr %8, align 4, !dbg !366
  %47890 = icmp slt i32 %47888, %47889, !dbg !367
  br i1 %47890, label %47891, label %48422, !dbg !368

47891:                                            ; preds = %47885
  %47892 = load i32, ptr %10, align 4, !dbg !369
  %47893 = sext i32 %47892 to i64, !dbg !371
  %47894 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47893, !dbg !371
  %47895 = load double, ptr %6, align 8, !dbg !372
  %47896 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47897 = load double, ptr %47896, align 8, !dbg !372
  %47898 = load double, ptr %47894, align 16, !dbg !372
  %47899 = getelementptr inbounds { double, double }, ptr %47894, i32 0, i32 1, !dbg !372
  %47900 = load double, ptr %47899, align 8, !dbg !372
  %47901 = call { double, double } @make_vec(double %47895, double %47897, double %47898, double %47900), !dbg !372
  %47902 = extractvalue { double, double } %47901, 0, !dbg !372
  store double %47902, ptr %16, align 8, !dbg !372
  %47903 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47904 = extractvalue { double, double } %47901, 1, !dbg !372
  store double %47904, ptr %47903, align 8, !dbg !372
  %47905 = load i32, ptr %10, align 4, !dbg !373
  %47906 = add nsw i32 %47905, 1, !dbg !374
  %47907 = sext i32 %47906 to i64, !dbg !375
  %47908 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47907, !dbg !375
  %47909 = load double, ptr %6, align 8, !dbg !376
  %47910 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %47911 = load double, ptr %47910, align 8, !dbg !376
  %47912 = load double, ptr %47908, align 16, !dbg !376
  %47913 = getelementptr inbounds { double, double }, ptr %47908, i32 0, i32 1, !dbg !376
  %47914 = load double, ptr %47913, align 8, !dbg !376
  %47915 = call { double, double } @make_vec(double %47909, double %47911, double %47912, double %47914), !dbg !376
  %47916 = extractvalue { double, double } %47915, 0, !dbg !376
  store double %47916, ptr %17, align 8, !dbg !376
  %47917 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %47918 = extractvalue { double, double } %47915, 1, !dbg !376
  store double %47918, ptr %47917, align 8, !dbg !376
  %47919 = load double, ptr %16, align 8, !dbg !377
  %47920 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %47921 = load double, ptr %47920, align 8, !dbg !377
  %47922 = load double, ptr %17, align 8, !dbg !377
  %47923 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %47924 = load double, ptr %47923, align 8, !dbg !377
  %47925 = call double @cross(double %47919, double %47921, double %47922, double %47924), !dbg !377
  %47926 = load i32, ptr %10, align 4, !dbg !378
  %47927 = sext i32 %47926 to i64, !dbg !379
  %47928 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47927, !dbg !379
  %47929 = load double, ptr %6, align 8, !dbg !380
  %47930 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %47931 = load double, ptr %47930, align 8, !dbg !380
  %47932 = load double, ptr %47928, align 16, !dbg !380
  %47933 = getelementptr inbounds { double, double }, ptr %47928, i32 0, i32 1, !dbg !380
  %47934 = load double, ptr %47933, align 8, !dbg !380
  %47935 = call { double, double } @make_vec(double %47929, double %47931, double %47932, double %47934), !dbg !380
  %47936 = extractvalue { double, double } %47935, 0, !dbg !380
  store double %47936, ptr %18, align 8, !dbg !380
  %47937 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %47938 = extractvalue { double, double } %47935, 1, !dbg !380
  store double %47938, ptr %47937, align 8, !dbg !380
  %47939 = load i32, ptr %10, align 4, !dbg !381
  %47940 = add nsw i32 %47939, 1, !dbg !382
  %47941 = sext i32 %47940 to i64, !dbg !383
  %47942 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47941, !dbg !383
  %47943 = load double, ptr %6, align 8, !dbg !384
  %47944 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %47945 = load double, ptr %47944, align 8, !dbg !384
  %47946 = load double, ptr %47942, align 16, !dbg !384
  %47947 = getelementptr inbounds { double, double }, ptr %47942, i32 0, i32 1, !dbg !384
  %47948 = load double, ptr %47947, align 8, !dbg !384
  %47949 = call { double, double } @make_vec(double %47943, double %47945, double %47946, double %47948), !dbg !384
  %47950 = extractvalue { double, double } %47949, 0, !dbg !384
  store double %47950, ptr %19, align 8, !dbg !384
  %47951 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %47952 = extractvalue { double, double } %47949, 1, !dbg !384
  store double %47952, ptr %47951, align 8, !dbg !384
  %47953 = load double, ptr %18, align 8, !dbg !385
  %47954 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %47955 = load double, ptr %47954, align 8, !dbg !385
  %47956 = load double, ptr %19, align 8, !dbg !385
  %47957 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %47958 = load double, ptr %47957, align 8, !dbg !385
  %47959 = call double @dot(double %47953, double %47955, double %47956, double %47958), !dbg !385
  %47960 = call double @atan2(double noundef %47925, double noundef %47959) #6, !dbg !386
  store double %47960, ptr %13, align 8, !dbg !387
  %47961 = load double, ptr %13, align 8, !dbg !388
  %47962 = load double, ptr %14, align 8, !dbg !389
  %47963 = fadd double %47962, %47961, !dbg !389
  store double %47963, ptr %14, align 8, !dbg !389
  %47964 = load double, ptr %13, align 8, !dbg !390
  %47965 = fsub double %47964, 0x400921FB54442D18, !dbg !392
  %47966 = call double @llvm.fabs.f64(double %47965), !dbg !393
  %47967 = fcmp ole double %47966, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %47967, label %14330, label %47968, !dbg !395

47968:                                            ; preds = %47891
  %47969 = load double, ptr %13, align 8, !dbg !396
  %47970 = fadd double %47969, 0x400921FB54442D18, !dbg !397
  %47971 = call double @llvm.fabs.f64(double %47970), !dbg !398
  %47972 = fcmp ole double %47971, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %47972, label %14330, label %47973, !dbg !400

47973:                                            ; preds = %47968
  br label %47974, !dbg !403

47974:                                            ; preds = %47973
  %47975 = load i32, ptr %10, align 4, !dbg !404
  %47976 = add nsw i32 %47975, 1, !dbg !404
  store i32 %47976, ptr %10, align 4, !dbg !404
  %47977 = load i32, ptr %10, align 4, !dbg !364
  %47978 = load i32, ptr %8, align 4, !dbg !366
  %47979 = icmp slt i32 %47977, %47978, !dbg !367
  br i1 %47979, label %47980, label %48422, !dbg !368

47980:                                            ; preds = %47974
  %47981 = load i32, ptr %10, align 4, !dbg !369
  %47982 = sext i32 %47981 to i64, !dbg !371
  %47983 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47982, !dbg !371
  %47984 = load double, ptr %6, align 8, !dbg !372
  %47985 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %47986 = load double, ptr %47985, align 8, !dbg !372
  %47987 = load double, ptr %47983, align 16, !dbg !372
  %47988 = getelementptr inbounds { double, double }, ptr %47983, i32 0, i32 1, !dbg !372
  %47989 = load double, ptr %47988, align 8, !dbg !372
  %47990 = call { double, double } @make_vec(double %47984, double %47986, double %47987, double %47989), !dbg !372
  %47991 = extractvalue { double, double } %47990, 0, !dbg !372
  store double %47991, ptr %16, align 8, !dbg !372
  %47992 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %47993 = extractvalue { double, double } %47990, 1, !dbg !372
  store double %47993, ptr %47992, align 8, !dbg !372
  %47994 = load i32, ptr %10, align 4, !dbg !373
  %47995 = add nsw i32 %47994, 1, !dbg !374
  %47996 = sext i32 %47995 to i64, !dbg !375
  %47997 = getelementptr inbounds %struct.POINT, ptr %26, i64 %47996, !dbg !375
  %47998 = load double, ptr %6, align 8, !dbg !376
  %47999 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %48000 = load double, ptr %47999, align 8, !dbg !376
  %48001 = load double, ptr %47997, align 16, !dbg !376
  %48002 = getelementptr inbounds { double, double }, ptr %47997, i32 0, i32 1, !dbg !376
  %48003 = load double, ptr %48002, align 8, !dbg !376
  %48004 = call { double, double } @make_vec(double %47998, double %48000, double %48001, double %48003), !dbg !376
  %48005 = extractvalue { double, double } %48004, 0, !dbg !376
  store double %48005, ptr %17, align 8, !dbg !376
  %48006 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %48007 = extractvalue { double, double } %48004, 1, !dbg !376
  store double %48007, ptr %48006, align 8, !dbg !376
  %48008 = load double, ptr %16, align 8, !dbg !377
  %48009 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %48010 = load double, ptr %48009, align 8, !dbg !377
  %48011 = load double, ptr %17, align 8, !dbg !377
  %48012 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %48013 = load double, ptr %48012, align 8, !dbg !377
  %48014 = call double @cross(double %48008, double %48010, double %48011, double %48013), !dbg !377
  %48015 = load i32, ptr %10, align 4, !dbg !378
  %48016 = sext i32 %48015 to i64, !dbg !379
  %48017 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48016, !dbg !379
  %48018 = load double, ptr %6, align 8, !dbg !380
  %48019 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %48020 = load double, ptr %48019, align 8, !dbg !380
  %48021 = load double, ptr %48017, align 16, !dbg !380
  %48022 = getelementptr inbounds { double, double }, ptr %48017, i32 0, i32 1, !dbg !380
  %48023 = load double, ptr %48022, align 8, !dbg !380
  %48024 = call { double, double } @make_vec(double %48018, double %48020, double %48021, double %48023), !dbg !380
  %48025 = extractvalue { double, double } %48024, 0, !dbg !380
  store double %48025, ptr %18, align 8, !dbg !380
  %48026 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %48027 = extractvalue { double, double } %48024, 1, !dbg !380
  store double %48027, ptr %48026, align 8, !dbg !380
  %48028 = load i32, ptr %10, align 4, !dbg !381
  %48029 = add nsw i32 %48028, 1, !dbg !382
  %48030 = sext i32 %48029 to i64, !dbg !383
  %48031 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48030, !dbg !383
  %48032 = load double, ptr %6, align 8, !dbg !384
  %48033 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %48034 = load double, ptr %48033, align 8, !dbg !384
  %48035 = load double, ptr %48031, align 16, !dbg !384
  %48036 = getelementptr inbounds { double, double }, ptr %48031, i32 0, i32 1, !dbg !384
  %48037 = load double, ptr %48036, align 8, !dbg !384
  %48038 = call { double, double } @make_vec(double %48032, double %48034, double %48035, double %48037), !dbg !384
  %48039 = extractvalue { double, double } %48038, 0, !dbg !384
  store double %48039, ptr %19, align 8, !dbg !384
  %48040 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %48041 = extractvalue { double, double } %48038, 1, !dbg !384
  store double %48041, ptr %48040, align 8, !dbg !384
  %48042 = load double, ptr %18, align 8, !dbg !385
  %48043 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %48044 = load double, ptr %48043, align 8, !dbg !385
  %48045 = load double, ptr %19, align 8, !dbg !385
  %48046 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %48047 = load double, ptr %48046, align 8, !dbg !385
  %48048 = call double @dot(double %48042, double %48044, double %48045, double %48047), !dbg !385
  %48049 = call double @atan2(double noundef %48014, double noundef %48048) #6, !dbg !386
  store double %48049, ptr %13, align 8, !dbg !387
  %48050 = load double, ptr %13, align 8, !dbg !388
  %48051 = load double, ptr %14, align 8, !dbg !389
  %48052 = fadd double %48051, %48050, !dbg !389
  store double %48052, ptr %14, align 8, !dbg !389
  %48053 = load double, ptr %13, align 8, !dbg !390
  %48054 = fsub double %48053, 0x400921FB54442D18, !dbg !392
  %48055 = call double @llvm.fabs.f64(double %48054), !dbg !393
  %48056 = fcmp ole double %48055, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %48056, label %14330, label %48057, !dbg !395

48057:                                            ; preds = %47980
  %48058 = load double, ptr %13, align 8, !dbg !396
  %48059 = fadd double %48058, 0x400921FB54442D18, !dbg !397
  %48060 = call double @llvm.fabs.f64(double %48059), !dbg !398
  %48061 = fcmp ole double %48060, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %48061, label %14330, label %48062, !dbg !400

48062:                                            ; preds = %48057
  br label %48063, !dbg !403

48063:                                            ; preds = %48062
  %48064 = load i32, ptr %10, align 4, !dbg !404
  %48065 = add nsw i32 %48064, 1, !dbg !404
  store i32 %48065, ptr %10, align 4, !dbg !404
  %48066 = load i32, ptr %10, align 4, !dbg !364
  %48067 = load i32, ptr %8, align 4, !dbg !366
  %48068 = icmp slt i32 %48066, %48067, !dbg !367
  br i1 %48068, label %48069, label %48422, !dbg !368

48069:                                            ; preds = %48063
  %48070 = load i32, ptr %10, align 4, !dbg !369
  %48071 = sext i32 %48070 to i64, !dbg !371
  %48072 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48071, !dbg !371
  %48073 = load double, ptr %6, align 8, !dbg !372
  %48074 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %48075 = load double, ptr %48074, align 8, !dbg !372
  %48076 = load double, ptr %48072, align 16, !dbg !372
  %48077 = getelementptr inbounds { double, double }, ptr %48072, i32 0, i32 1, !dbg !372
  %48078 = load double, ptr %48077, align 8, !dbg !372
  %48079 = call { double, double } @make_vec(double %48073, double %48075, double %48076, double %48078), !dbg !372
  %48080 = extractvalue { double, double } %48079, 0, !dbg !372
  store double %48080, ptr %16, align 8, !dbg !372
  %48081 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %48082 = extractvalue { double, double } %48079, 1, !dbg !372
  store double %48082, ptr %48081, align 8, !dbg !372
  %48083 = load i32, ptr %10, align 4, !dbg !373
  %48084 = add nsw i32 %48083, 1, !dbg !374
  %48085 = sext i32 %48084 to i64, !dbg !375
  %48086 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48085, !dbg !375
  %48087 = load double, ptr %6, align 8, !dbg !376
  %48088 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %48089 = load double, ptr %48088, align 8, !dbg !376
  %48090 = load double, ptr %48086, align 16, !dbg !376
  %48091 = getelementptr inbounds { double, double }, ptr %48086, i32 0, i32 1, !dbg !376
  %48092 = load double, ptr %48091, align 8, !dbg !376
  %48093 = call { double, double } @make_vec(double %48087, double %48089, double %48090, double %48092), !dbg !376
  %48094 = extractvalue { double, double } %48093, 0, !dbg !376
  store double %48094, ptr %17, align 8, !dbg !376
  %48095 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %48096 = extractvalue { double, double } %48093, 1, !dbg !376
  store double %48096, ptr %48095, align 8, !dbg !376
  %48097 = load double, ptr %16, align 8, !dbg !377
  %48098 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %48099 = load double, ptr %48098, align 8, !dbg !377
  %48100 = load double, ptr %17, align 8, !dbg !377
  %48101 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %48102 = load double, ptr %48101, align 8, !dbg !377
  %48103 = call double @cross(double %48097, double %48099, double %48100, double %48102), !dbg !377
  %48104 = load i32, ptr %10, align 4, !dbg !378
  %48105 = sext i32 %48104 to i64, !dbg !379
  %48106 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48105, !dbg !379
  %48107 = load double, ptr %6, align 8, !dbg !380
  %48108 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %48109 = load double, ptr %48108, align 8, !dbg !380
  %48110 = load double, ptr %48106, align 16, !dbg !380
  %48111 = getelementptr inbounds { double, double }, ptr %48106, i32 0, i32 1, !dbg !380
  %48112 = load double, ptr %48111, align 8, !dbg !380
  %48113 = call { double, double } @make_vec(double %48107, double %48109, double %48110, double %48112), !dbg !380
  %48114 = extractvalue { double, double } %48113, 0, !dbg !380
  store double %48114, ptr %18, align 8, !dbg !380
  %48115 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %48116 = extractvalue { double, double } %48113, 1, !dbg !380
  store double %48116, ptr %48115, align 8, !dbg !380
  %48117 = load i32, ptr %10, align 4, !dbg !381
  %48118 = add nsw i32 %48117, 1, !dbg !382
  %48119 = sext i32 %48118 to i64, !dbg !383
  %48120 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48119, !dbg !383
  %48121 = load double, ptr %6, align 8, !dbg !384
  %48122 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %48123 = load double, ptr %48122, align 8, !dbg !384
  %48124 = load double, ptr %48120, align 16, !dbg !384
  %48125 = getelementptr inbounds { double, double }, ptr %48120, i32 0, i32 1, !dbg !384
  %48126 = load double, ptr %48125, align 8, !dbg !384
  %48127 = call { double, double } @make_vec(double %48121, double %48123, double %48124, double %48126), !dbg !384
  %48128 = extractvalue { double, double } %48127, 0, !dbg !384
  store double %48128, ptr %19, align 8, !dbg !384
  %48129 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %48130 = extractvalue { double, double } %48127, 1, !dbg !384
  store double %48130, ptr %48129, align 8, !dbg !384
  %48131 = load double, ptr %18, align 8, !dbg !385
  %48132 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %48133 = load double, ptr %48132, align 8, !dbg !385
  %48134 = load double, ptr %19, align 8, !dbg !385
  %48135 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %48136 = load double, ptr %48135, align 8, !dbg !385
  %48137 = call double @dot(double %48131, double %48133, double %48134, double %48136), !dbg !385
  %48138 = call double @atan2(double noundef %48103, double noundef %48137) #6, !dbg !386
  store double %48138, ptr %13, align 8, !dbg !387
  %48139 = load double, ptr %13, align 8, !dbg !388
  %48140 = load double, ptr %14, align 8, !dbg !389
  %48141 = fadd double %48140, %48139, !dbg !389
  store double %48141, ptr %14, align 8, !dbg !389
  %48142 = load double, ptr %13, align 8, !dbg !390
  %48143 = fsub double %48142, 0x400921FB54442D18, !dbg !392
  %48144 = call double @llvm.fabs.f64(double %48143), !dbg !393
  %48145 = fcmp ole double %48144, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %48145, label %14330, label %48146, !dbg !395

48146:                                            ; preds = %48069
  %48147 = load double, ptr %13, align 8, !dbg !396
  %48148 = fadd double %48147, 0x400921FB54442D18, !dbg !397
  %48149 = call double @llvm.fabs.f64(double %48148), !dbg !398
  %48150 = fcmp ole double %48149, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %48150, label %14330, label %48151, !dbg !400

48151:                                            ; preds = %48146
  br label %48152, !dbg !403

48152:                                            ; preds = %48151
  %48153 = load i32, ptr %10, align 4, !dbg !404
  %48154 = add nsw i32 %48153, 1, !dbg !404
  store i32 %48154, ptr %10, align 4, !dbg !404
  %48155 = load i32, ptr %10, align 4, !dbg !364
  %48156 = load i32, ptr %8, align 4, !dbg !366
  %48157 = icmp slt i32 %48155, %48156, !dbg !367
  br i1 %48157, label %48158, label %48422, !dbg !368

48158:                                            ; preds = %48152
  %48159 = load i32, ptr %10, align 4, !dbg !369
  %48160 = sext i32 %48159 to i64, !dbg !371
  %48161 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48160, !dbg !371
  %48162 = load double, ptr %6, align 8, !dbg !372
  %48163 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %48164 = load double, ptr %48163, align 8, !dbg !372
  %48165 = load double, ptr %48161, align 16, !dbg !372
  %48166 = getelementptr inbounds { double, double }, ptr %48161, i32 0, i32 1, !dbg !372
  %48167 = load double, ptr %48166, align 8, !dbg !372
  %48168 = call { double, double } @make_vec(double %48162, double %48164, double %48165, double %48167), !dbg !372
  %48169 = extractvalue { double, double } %48168, 0, !dbg !372
  store double %48169, ptr %16, align 8, !dbg !372
  %48170 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %48171 = extractvalue { double, double } %48168, 1, !dbg !372
  store double %48171, ptr %48170, align 8, !dbg !372
  %48172 = load i32, ptr %10, align 4, !dbg !373
  %48173 = add nsw i32 %48172, 1, !dbg !374
  %48174 = sext i32 %48173 to i64, !dbg !375
  %48175 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48174, !dbg !375
  %48176 = load double, ptr %6, align 8, !dbg !376
  %48177 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %48178 = load double, ptr %48177, align 8, !dbg !376
  %48179 = load double, ptr %48175, align 16, !dbg !376
  %48180 = getelementptr inbounds { double, double }, ptr %48175, i32 0, i32 1, !dbg !376
  %48181 = load double, ptr %48180, align 8, !dbg !376
  %48182 = call { double, double } @make_vec(double %48176, double %48178, double %48179, double %48181), !dbg !376
  %48183 = extractvalue { double, double } %48182, 0, !dbg !376
  store double %48183, ptr %17, align 8, !dbg !376
  %48184 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %48185 = extractvalue { double, double } %48182, 1, !dbg !376
  store double %48185, ptr %48184, align 8, !dbg !376
  %48186 = load double, ptr %16, align 8, !dbg !377
  %48187 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %48188 = load double, ptr %48187, align 8, !dbg !377
  %48189 = load double, ptr %17, align 8, !dbg !377
  %48190 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %48191 = load double, ptr %48190, align 8, !dbg !377
  %48192 = call double @cross(double %48186, double %48188, double %48189, double %48191), !dbg !377
  %48193 = load i32, ptr %10, align 4, !dbg !378
  %48194 = sext i32 %48193 to i64, !dbg !379
  %48195 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48194, !dbg !379
  %48196 = load double, ptr %6, align 8, !dbg !380
  %48197 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %48198 = load double, ptr %48197, align 8, !dbg !380
  %48199 = load double, ptr %48195, align 16, !dbg !380
  %48200 = getelementptr inbounds { double, double }, ptr %48195, i32 0, i32 1, !dbg !380
  %48201 = load double, ptr %48200, align 8, !dbg !380
  %48202 = call { double, double } @make_vec(double %48196, double %48198, double %48199, double %48201), !dbg !380
  %48203 = extractvalue { double, double } %48202, 0, !dbg !380
  store double %48203, ptr %18, align 8, !dbg !380
  %48204 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %48205 = extractvalue { double, double } %48202, 1, !dbg !380
  store double %48205, ptr %48204, align 8, !dbg !380
  %48206 = load i32, ptr %10, align 4, !dbg !381
  %48207 = add nsw i32 %48206, 1, !dbg !382
  %48208 = sext i32 %48207 to i64, !dbg !383
  %48209 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48208, !dbg !383
  %48210 = load double, ptr %6, align 8, !dbg !384
  %48211 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %48212 = load double, ptr %48211, align 8, !dbg !384
  %48213 = load double, ptr %48209, align 16, !dbg !384
  %48214 = getelementptr inbounds { double, double }, ptr %48209, i32 0, i32 1, !dbg !384
  %48215 = load double, ptr %48214, align 8, !dbg !384
  %48216 = call { double, double } @make_vec(double %48210, double %48212, double %48213, double %48215), !dbg !384
  %48217 = extractvalue { double, double } %48216, 0, !dbg !384
  store double %48217, ptr %19, align 8, !dbg !384
  %48218 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %48219 = extractvalue { double, double } %48216, 1, !dbg !384
  store double %48219, ptr %48218, align 8, !dbg !384
  %48220 = load double, ptr %18, align 8, !dbg !385
  %48221 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %48222 = load double, ptr %48221, align 8, !dbg !385
  %48223 = load double, ptr %19, align 8, !dbg !385
  %48224 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %48225 = load double, ptr %48224, align 8, !dbg !385
  %48226 = call double @dot(double %48220, double %48222, double %48223, double %48225), !dbg !385
  %48227 = call double @atan2(double noundef %48192, double noundef %48226) #6, !dbg !386
  store double %48227, ptr %13, align 8, !dbg !387
  %48228 = load double, ptr %13, align 8, !dbg !388
  %48229 = load double, ptr %14, align 8, !dbg !389
  %48230 = fadd double %48229, %48228, !dbg !389
  store double %48230, ptr %14, align 8, !dbg !389
  %48231 = load double, ptr %13, align 8, !dbg !390
  %48232 = fsub double %48231, 0x400921FB54442D18, !dbg !392
  %48233 = call double @llvm.fabs.f64(double %48232), !dbg !393
  %48234 = fcmp ole double %48233, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %48234, label %14330, label %48235, !dbg !395

48235:                                            ; preds = %48158
  %48236 = load double, ptr %13, align 8, !dbg !396
  %48237 = fadd double %48236, 0x400921FB54442D18, !dbg !397
  %48238 = call double @llvm.fabs.f64(double %48237), !dbg !398
  %48239 = fcmp ole double %48238, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %48239, label %14330, label %48240, !dbg !400

48240:                                            ; preds = %48235
  br label %48241, !dbg !403

48241:                                            ; preds = %48240
  %48242 = load i32, ptr %10, align 4, !dbg !404
  %48243 = add nsw i32 %48242, 1, !dbg !404
  store i32 %48243, ptr %10, align 4, !dbg !404
  %48244 = load i32, ptr %10, align 4, !dbg !364
  %48245 = load i32, ptr %8, align 4, !dbg !366
  %48246 = icmp slt i32 %48244, %48245, !dbg !367
  br i1 %48246, label %48247, label %48422, !dbg !368

48247:                                            ; preds = %48241
  %48248 = load i32, ptr %10, align 4, !dbg !369
  %48249 = sext i32 %48248 to i64, !dbg !371
  %48250 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48249, !dbg !371
  %48251 = load double, ptr %6, align 8, !dbg !372
  %48252 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %48253 = load double, ptr %48252, align 8, !dbg !372
  %48254 = load double, ptr %48250, align 16, !dbg !372
  %48255 = getelementptr inbounds { double, double }, ptr %48250, i32 0, i32 1, !dbg !372
  %48256 = load double, ptr %48255, align 8, !dbg !372
  %48257 = call { double, double } @make_vec(double %48251, double %48253, double %48254, double %48256), !dbg !372
  %48258 = extractvalue { double, double } %48257, 0, !dbg !372
  store double %48258, ptr %16, align 8, !dbg !372
  %48259 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %48260 = extractvalue { double, double } %48257, 1, !dbg !372
  store double %48260, ptr %48259, align 8, !dbg !372
  %48261 = load i32, ptr %10, align 4, !dbg !373
  %48262 = add nsw i32 %48261, 1, !dbg !374
  %48263 = sext i32 %48262 to i64, !dbg !375
  %48264 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48263, !dbg !375
  %48265 = load double, ptr %6, align 8, !dbg !376
  %48266 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %48267 = load double, ptr %48266, align 8, !dbg !376
  %48268 = load double, ptr %48264, align 16, !dbg !376
  %48269 = getelementptr inbounds { double, double }, ptr %48264, i32 0, i32 1, !dbg !376
  %48270 = load double, ptr %48269, align 8, !dbg !376
  %48271 = call { double, double } @make_vec(double %48265, double %48267, double %48268, double %48270), !dbg !376
  %48272 = extractvalue { double, double } %48271, 0, !dbg !376
  store double %48272, ptr %17, align 8, !dbg !376
  %48273 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %48274 = extractvalue { double, double } %48271, 1, !dbg !376
  store double %48274, ptr %48273, align 8, !dbg !376
  %48275 = load double, ptr %16, align 8, !dbg !377
  %48276 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %48277 = load double, ptr %48276, align 8, !dbg !377
  %48278 = load double, ptr %17, align 8, !dbg !377
  %48279 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %48280 = load double, ptr %48279, align 8, !dbg !377
  %48281 = call double @cross(double %48275, double %48277, double %48278, double %48280), !dbg !377
  %48282 = load i32, ptr %10, align 4, !dbg !378
  %48283 = sext i32 %48282 to i64, !dbg !379
  %48284 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48283, !dbg !379
  %48285 = load double, ptr %6, align 8, !dbg !380
  %48286 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %48287 = load double, ptr %48286, align 8, !dbg !380
  %48288 = load double, ptr %48284, align 16, !dbg !380
  %48289 = getelementptr inbounds { double, double }, ptr %48284, i32 0, i32 1, !dbg !380
  %48290 = load double, ptr %48289, align 8, !dbg !380
  %48291 = call { double, double } @make_vec(double %48285, double %48287, double %48288, double %48290), !dbg !380
  %48292 = extractvalue { double, double } %48291, 0, !dbg !380
  store double %48292, ptr %18, align 8, !dbg !380
  %48293 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %48294 = extractvalue { double, double } %48291, 1, !dbg !380
  store double %48294, ptr %48293, align 8, !dbg !380
  %48295 = load i32, ptr %10, align 4, !dbg !381
  %48296 = add nsw i32 %48295, 1, !dbg !382
  %48297 = sext i32 %48296 to i64, !dbg !383
  %48298 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48297, !dbg !383
  %48299 = load double, ptr %6, align 8, !dbg !384
  %48300 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %48301 = load double, ptr %48300, align 8, !dbg !384
  %48302 = load double, ptr %48298, align 16, !dbg !384
  %48303 = getelementptr inbounds { double, double }, ptr %48298, i32 0, i32 1, !dbg !384
  %48304 = load double, ptr %48303, align 8, !dbg !384
  %48305 = call { double, double } @make_vec(double %48299, double %48301, double %48302, double %48304), !dbg !384
  %48306 = extractvalue { double, double } %48305, 0, !dbg !384
  store double %48306, ptr %19, align 8, !dbg !384
  %48307 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %48308 = extractvalue { double, double } %48305, 1, !dbg !384
  store double %48308, ptr %48307, align 8, !dbg !384
  %48309 = load double, ptr %18, align 8, !dbg !385
  %48310 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %48311 = load double, ptr %48310, align 8, !dbg !385
  %48312 = load double, ptr %19, align 8, !dbg !385
  %48313 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %48314 = load double, ptr %48313, align 8, !dbg !385
  %48315 = call double @dot(double %48309, double %48311, double %48312, double %48314), !dbg !385
  %48316 = call double @atan2(double noundef %48281, double noundef %48315) #6, !dbg !386
  store double %48316, ptr %13, align 8, !dbg !387
  %48317 = load double, ptr %13, align 8, !dbg !388
  %48318 = load double, ptr %14, align 8, !dbg !389
  %48319 = fadd double %48318, %48317, !dbg !389
  store double %48319, ptr %14, align 8, !dbg !389
  %48320 = load double, ptr %13, align 8, !dbg !390
  %48321 = fsub double %48320, 0x400921FB54442D18, !dbg !392
  %48322 = call double @llvm.fabs.f64(double %48321), !dbg !393
  %48323 = fcmp ole double %48322, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %48323, label %14330, label %48324, !dbg !395

48324:                                            ; preds = %48247
  %48325 = load double, ptr %13, align 8, !dbg !396
  %48326 = fadd double %48325, 0x400921FB54442D18, !dbg !397
  %48327 = call double @llvm.fabs.f64(double %48326), !dbg !398
  %48328 = fcmp ole double %48327, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %48328, label %14330, label %48329, !dbg !400

48329:                                            ; preds = %48324
  br label %48330, !dbg !403

48330:                                            ; preds = %48329
  %48331 = load i32, ptr %10, align 4, !dbg !404
  %48332 = add nsw i32 %48331, 1, !dbg !404
  store i32 %48332, ptr %10, align 4, !dbg !404
  %48333 = load i32, ptr %10, align 4, !dbg !364
  %48334 = load i32, ptr %8, align 4, !dbg !366
  %48335 = icmp slt i32 %48333, %48334, !dbg !367
  br i1 %48335, label %48336, label %48422, !dbg !368

48336:                                            ; preds = %48330
  %48337 = load i32, ptr %10, align 4, !dbg !369
  %48338 = sext i32 %48337 to i64, !dbg !371
  %48339 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48338, !dbg !371
  %48340 = load double, ptr %6, align 8, !dbg !372
  %48341 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !372
  %48342 = load double, ptr %48341, align 8, !dbg !372
  %48343 = load double, ptr %48339, align 16, !dbg !372
  %48344 = getelementptr inbounds { double, double }, ptr %48339, i32 0, i32 1, !dbg !372
  %48345 = load double, ptr %48344, align 8, !dbg !372
  %48346 = call { double, double } @make_vec(double %48340, double %48342, double %48343, double %48345), !dbg !372
  %48347 = extractvalue { double, double } %48346, 0, !dbg !372
  store double %48347, ptr %16, align 8, !dbg !372
  %48348 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !372
  %48349 = extractvalue { double, double } %48346, 1, !dbg !372
  store double %48349, ptr %48348, align 8, !dbg !372
  %48350 = load i32, ptr %10, align 4, !dbg !373
  %48351 = add nsw i32 %48350, 1, !dbg !374
  %48352 = sext i32 %48351 to i64, !dbg !375
  %48353 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48352, !dbg !375
  %48354 = load double, ptr %6, align 8, !dbg !376
  %48355 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !376
  %48356 = load double, ptr %48355, align 8, !dbg !376
  %48357 = load double, ptr %48353, align 16, !dbg !376
  %48358 = getelementptr inbounds { double, double }, ptr %48353, i32 0, i32 1, !dbg !376
  %48359 = load double, ptr %48358, align 8, !dbg !376
  %48360 = call { double, double } @make_vec(double %48354, double %48356, double %48357, double %48359), !dbg !376
  %48361 = extractvalue { double, double } %48360, 0, !dbg !376
  store double %48361, ptr %17, align 8, !dbg !376
  %48362 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !376
  %48363 = extractvalue { double, double } %48360, 1, !dbg !376
  store double %48363, ptr %48362, align 8, !dbg !376
  %48364 = load double, ptr %16, align 8, !dbg !377
  %48365 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !377
  %48366 = load double, ptr %48365, align 8, !dbg !377
  %48367 = load double, ptr %17, align 8, !dbg !377
  %48368 = getelementptr inbounds { double, double }, ptr %17, i32 0, i32 1, !dbg !377
  %48369 = load double, ptr %48368, align 8, !dbg !377
  %48370 = call double @cross(double %48364, double %48366, double %48367, double %48369), !dbg !377
  %48371 = load i32, ptr %10, align 4, !dbg !378
  %48372 = sext i32 %48371 to i64, !dbg !379
  %48373 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48372, !dbg !379
  %48374 = load double, ptr %6, align 8, !dbg !380
  %48375 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !380
  %48376 = load double, ptr %48375, align 8, !dbg !380
  %48377 = load double, ptr %48373, align 16, !dbg !380
  %48378 = getelementptr inbounds { double, double }, ptr %48373, i32 0, i32 1, !dbg !380
  %48379 = load double, ptr %48378, align 8, !dbg !380
  %48380 = call { double, double } @make_vec(double %48374, double %48376, double %48377, double %48379), !dbg !380
  %48381 = extractvalue { double, double } %48380, 0, !dbg !380
  store double %48381, ptr %18, align 8, !dbg !380
  %48382 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !380
  %48383 = extractvalue { double, double } %48380, 1, !dbg !380
  store double %48383, ptr %48382, align 8, !dbg !380
  %48384 = load i32, ptr %10, align 4, !dbg !381
  %48385 = add nsw i32 %48384, 1, !dbg !382
  %48386 = sext i32 %48385 to i64, !dbg !383
  %48387 = getelementptr inbounds %struct.POINT, ptr %26, i64 %48386, !dbg !383
  %48388 = load double, ptr %6, align 8, !dbg !384
  %48389 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !384
  %48390 = load double, ptr %48389, align 8, !dbg !384
  %48391 = load double, ptr %48387, align 16, !dbg !384
  %48392 = getelementptr inbounds { double, double }, ptr %48387, i32 0, i32 1, !dbg !384
  %48393 = load double, ptr %48392, align 8, !dbg !384
  %48394 = call { double, double } @make_vec(double %48388, double %48390, double %48391, double %48393), !dbg !384
  %48395 = extractvalue { double, double } %48394, 0, !dbg !384
  store double %48395, ptr %19, align 8, !dbg !384
  %48396 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !384
  %48397 = extractvalue { double, double } %48394, 1, !dbg !384
  store double %48397, ptr %48396, align 8, !dbg !384
  %48398 = load double, ptr %18, align 8, !dbg !385
  %48399 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !385
  %48400 = load double, ptr %48399, align 8, !dbg !385
  %48401 = load double, ptr %19, align 8, !dbg !385
  %48402 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !385
  %48403 = load double, ptr %48402, align 8, !dbg !385
  %48404 = call double @dot(double %48398, double %48400, double %48401, double %48403), !dbg !385
  %48405 = call double @atan2(double noundef %48370, double noundef %48404) #6, !dbg !386
  store double %48405, ptr %13, align 8, !dbg !387
  %48406 = load double, ptr %13, align 8, !dbg !388
  %48407 = load double, ptr %14, align 8, !dbg !389
  %48408 = fadd double %48407, %48406, !dbg !389
  store double %48408, ptr %14, align 8, !dbg !389
  %48409 = load double, ptr %13, align 8, !dbg !390
  %48410 = fsub double %48409, 0x400921FB54442D18, !dbg !392
  %48411 = call double @llvm.fabs.f64(double %48410), !dbg !393
  %48412 = fcmp ole double %48411, 0x3EB0C6F7A0B5ED8D, !dbg !394
  br i1 %48412, label %14330, label %48413, !dbg !395

48413:                                            ; preds = %48336
  %48414 = load double, ptr %13, align 8, !dbg !396
  %48415 = fadd double %48414, 0x400921FB54442D18, !dbg !397
  %48416 = call double @llvm.fabs.f64(double %48415), !dbg !398
  %48417 = fcmp ole double %48416, 0x3EB0C6F7A0B5ED8D, !dbg !399
  br i1 %48417, label %14330, label %48418, !dbg !400

48418:                                            ; preds = %48413
  br label %48419, !dbg !403

48419:                                            ; preds = %48418
  %48420 = load i32, ptr %10, align 4, !dbg !404
  %48421 = add nsw i32 %48420, 1, !dbg !404
  store i32 %48421, ptr %10, align 4, !dbg !404
  br label %14244, !dbg !405, !llvm.loop !406

48422:                                            ; preds = %48330, %48241, %48152, %48063, %47974, %47885, %47796, %47707, %47618, %47529, %47440, %47351, %47262, %47173, %47084, %46995, %46906, %46817, %46728, %46639, %46550, %46461, %46372, %46283, %46194, %46105, %46016, %45927, %45838, %45749, %45660, %45571, %45482, %45393, %45304, %45215, %45126, %45037, %44948, %44859, %44770, %44681, %44592, %44503, %44414, %44325, %44236, %44147, %44058, %43969, %43880, %43791, %43702, %43613, %43524, %43435, %43346, %43257, %43168, %43079, %42990, %42901, %42812, %42723, %42634, %42545, %42456, %42367, %42278, %42189, %42100, %42011, %41922, %41833, %41744, %41655, %41566, %41477, %41388, %41299, %41210, %41121, %41032, %40943, %40854, %40765, %40676, %40587, %40498, %40409, %40320, %40231, %40142, %40053, %39964, %39875, %39786, %39697, %39608, %39519, %39430, %39341, %39252, %39163, %39074, %38985, %38896, %38807, %38718, %38629, %38540, %38451, %38362, %38273, %38184, %38095, %38006, %37917, %37828, %37739, %37650, %37561, %37472, %37383, %37294, %37205, %37116, %37027, %36938, %36849, %36760, %36671, %36582, %36493, %36404, %36315, %36226, %36137, %36048, %35959, %35870, %35781, %35692, %35603, %35514, %35425, %35336, %35247, %35158, %35069, %34980, %34891, %34802, %34713, %34624, %34535, %34446, %34357, %34268, %34179, %34090, %34001, %33912, %33823, %33734, %33645, %33556, %33467, %33378, %33289, %33200, %33111, %33022, %32933, %32844, %32755, %32666, %32577, %32488, %32399, %32310, %32221, %32132, %32043, %31954, %31865, %31776, %31687, %31598, %31509, %31420, %31331, %31242, %31153, %31064, %30975, %30886, %30797, %30708, %30619, %30530, %30441, %30352, %30263, %30174, %30085, %29996, %29907, %29818, %29729, %29640, %29551, %29462, %29373, %29284, %29195, %29106, %29017, %28928, %28839, %28750, %28661, %28572, %28483, %28394, %28305, %28216, %28127, %28038, %27949, %27860, %27771, %27682, %27593, %27504, %27415, %27326, %27237, %27148, %27059, %26970, %26881, %26792, %26703, %26614, %26525, %26436, %26347, %26258, %26169, %26080, %25991, %25902, %25813, %25724, %25635, %25546, %25457, %25368, %25279, %25190, %25101, %25012, %24923, %24834, %24745, %24656, %24567, %24478, %24389, %24300, %24211, %24122, %24033, %23944, %23855, %23766, %23677, %23588, %23499, %23410, %23321, %23232, %23143, %23054, %22965, %22876, %22787, %22698, %22609, %22520, %22431, %22342, %22253, %22164, %22075, %21986, %21897, %21808, %21719, %21630, %21541, %21452, %21363, %21274, %21185, %21096, %21007, %20918, %20829, %20740, %20651, %20562, %20473, %20384, %20295, %20206, %20117, %20028, %19939, %19850, %19761, %19672, %19583, %19494, %19405, %19316, %19227, %19138, %19049, %18960, %18871, %18782, %18693, %18604, %18515, %18426, %18337, %18248, %18159, %18070, %17981, %17892, %17803, %17714, %17625, %17536, %17447, %17358, %17269, %17180, %17091, %17002, %16913, %16824, %16735, %16646, %16557, %16468, %16379, %16290, %16201, %16112, %16023, %15934, %15845, %15756, %15667, %15578, %15489, %15400, %15311, %15222, %15133, %15044, %14955, %14866, %14777, %14688, %14599, %14510, %14421, %14332, %14244
  %48423 = load double, ptr %14, align 8, !dbg !408
  %48424 = fsub double %48423, 0x401921FB54442D18, !dbg !410
  %48425 = call double @llvm.fabs.f64(double %48424), !dbg !411
  %48426 = fcmp ole double %48425, 0x3EB0C6F7A0B5ED8D, !dbg !412
  br i1 %48426, label %48427, label %48428, !dbg !413

48427:                                            ; preds = %48422
  store i32 2, ptr %9, align 4, !dbg !414
  store i32 2, ptr %5, align 4, !dbg !416
  store i32 1, ptr %15, align 4
  br label %48430, !dbg !416

48428:                                            ; preds = %48422
  %48429 = load i32, ptr %9, align 4, !dbg !417
  store i32 %48429, ptr %5, align 4, !dbg !418
  store i32 1, ptr %15, align 4
  br label %48430, !dbg !418

48430:                                            ; preds = %48428, %48427, %14330, %5429
  %48431 = load ptr, ptr %11, align 8, !dbg !419
  call void @llvm.stackrestore.p0(ptr %48431), !dbg !419
  %48432 = load i32, ptr %5, align 4, !dbg !419
  ret i32 %48432, !dbg !419
}

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare ptr @llvm.stacksave.p0() #5

; Function Attrs: nounwind
declare double @atan2(double noundef, double noundef) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nocallback nofree nosync nounwind willreturn
declare void @llvm.stackrestore.p0(ptr) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %0, double %1, double %2) #0 !dbg !420 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.POINT, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.POINT, align 8
  %8 = alloca %struct.POINT, align 8
  %9 = alloca %struct.POINT, align 8
  %10 = alloca %struct.POINT, align 8
  %11 = alloca %struct.POINT, align 8
  %12 = alloca %struct.POINT, align 8
  %13 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %1, ptr %13, align 8
  %14 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %2, ptr %14, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !423, metadata !DIExpression()), !dbg !424
  call void @llvm.dbg.declare(metadata ptr %5, metadata !425, metadata !DIExpression()), !dbg !426
  call void @llvm.dbg.declare(metadata ptr %6, metadata !427, metadata !DIExpression()), !dbg !428
  %15 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !429
  %16 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !430
  %17 = getelementptr inbounds { double, double }, ptr %15, i32 0, i32 0, !dbg !431
  %18 = load double, ptr %17, align 8, !dbg !431
  %19 = getelementptr inbounds { double, double }, ptr %15, i32 0, i32 1, !dbg !431
  %20 = load double, ptr %19, align 8, !dbg !431
  %21 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 0, !dbg !431
  %22 = load double, ptr %21, align 8, !dbg !431
  %23 = getelementptr inbounds { double, double }, ptr %16, i32 0, i32 1, !dbg !431
  %24 = load double, ptr %23, align 8, !dbg !431
  %25 = call { double, double } @make_vec(double %18, double %20, double %22, double %24), !dbg !431
  %26 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !431
  %27 = extractvalue { double, double } %25, 0, !dbg !431
  store double %27, ptr %26, align 8, !dbg !431
  %28 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !431
  %29 = extractvalue { double, double } %25, 1, !dbg !431
  store double %29, ptr %28, align 8, !dbg !431
  %30 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !432
  %31 = getelementptr inbounds { double, double }, ptr %30, i32 0, i32 0, !dbg !433
  %32 = load double, ptr %31, align 8, !dbg !433
  %33 = getelementptr inbounds { double, double }, ptr %30, i32 0, i32 1, !dbg !433
  %34 = load double, ptr %33, align 8, !dbg !433
  %35 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !433
  %36 = load double, ptr %35, align 8, !dbg !433
  %37 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !433
  %38 = load double, ptr %37, align 8, !dbg !433
  %39 = call { double, double } @make_vec(double %32, double %34, double %36, double %38), !dbg !433
  %40 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !433
  %41 = extractvalue { double, double } %39, 0, !dbg !433
  store double %41, ptr %40, align 8, !dbg !433
  %42 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !433
  %43 = extractvalue { double, double } %39, 1, !dbg !433
  store double %43, ptr %42, align 8, !dbg !433
  %44 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !434
  %45 = load double, ptr %44, align 8, !dbg !434
  %46 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !434
  %47 = load double, ptr %46, align 8, !dbg !434
  %48 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !434
  %49 = load double, ptr %48, align 8, !dbg !434
  %50 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !434
  %51 = load double, ptr %50, align 8, !dbg !434
  %52 = call double @cross(double %45, double %47, double %49, double %51), !dbg !434
  %53 = fptosi double %52 to i32, !dbg !434
  store i32 %53, ptr %6, align 4, !dbg !428
  %54 = load i32, ptr %6, align 4, !dbg !435
  %55 = icmp sgt i32 %54, 0, !dbg !437
  br i1 %55, label %56, label %57, !dbg !438

56:                                               ; preds = %3
  store i32 1, ptr %4, align 4, !dbg !439
  br label %144, !dbg !439

57:                                               ; preds = %3
  %58 = load i32, ptr %6, align 4, !dbg !441
  %59 = icmp slt i32 %58, 0, !dbg !443
  br i1 %59, label %60, label %61, !dbg !444

60:                                               ; preds = %57
  store i32 -1, ptr %4, align 4, !dbg !445
  br label %144, !dbg !445

61:                                               ; preds = %57
  %62 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !447
  %63 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !449
  %64 = getelementptr inbounds { double, double }, ptr %62, i32 0, i32 0, !dbg !450
  %65 = load double, ptr %64, align 8, !dbg !450
  %66 = getelementptr inbounds { double, double }, ptr %62, i32 0, i32 1, !dbg !450
  %67 = load double, ptr %66, align 8, !dbg !450
  %68 = getelementptr inbounds { double, double }, ptr %63, i32 0, i32 0, !dbg !450
  %69 = load double, ptr %68, align 8, !dbg !450
  %70 = getelementptr inbounds { double, double }, ptr %63, i32 0, i32 1, !dbg !450
  %71 = load double, ptr %70, align 8, !dbg !450
  %72 = call { double, double } @make_vec(double %65, double %67, double %69, double %71), !dbg !450
  %73 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !450
  %74 = extractvalue { double, double } %72, 0, !dbg !450
  store double %74, ptr %73, align 8, !dbg !450
  %75 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !450
  %76 = extractvalue { double, double } %72, 1, !dbg !450
  store double %76, ptr %75, align 8, !dbg !450
  %77 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !451
  %78 = getelementptr inbounds { double, double }, ptr %77, i32 0, i32 0, !dbg !452
  %79 = load double, ptr %78, align 8, !dbg !452
  %80 = getelementptr inbounds { double, double }, ptr %77, i32 0, i32 1, !dbg !452
  %81 = load double, ptr %80, align 8, !dbg !452
  %82 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !452
  %83 = load double, ptr %82, align 8, !dbg !452
  %84 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !452
  %85 = load double, ptr %84, align 8, !dbg !452
  %86 = call { double, double } @make_vec(double %79, double %81, double %83, double %85), !dbg !452
  %87 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !452
  %88 = extractvalue { double, double } %86, 0, !dbg !452
  store double %88, ptr %87, align 8, !dbg !452
  %89 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !452
  %90 = extractvalue { double, double } %86, 1, !dbg !452
  store double %90, ptr %89, align 8, !dbg !452
  %91 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !453
  %92 = load double, ptr %91, align 8, !dbg !453
  %93 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !453
  %94 = load double, ptr %93, align 8, !dbg !453
  %95 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !453
  %96 = load double, ptr %95, align 8, !dbg !453
  %97 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !453
  %98 = load double, ptr %97, align 8, !dbg !453
  %99 = call double @dot(double %92, double %94, double %96, double %98), !dbg !453
  %100 = fcmp olt double %99, 0.000000e+00, !dbg !454
  br i1 %100, label %101, label %102, !dbg !455

101:                                              ; preds = %61
  store i32 2, ptr %4, align 4, !dbg !456
  br label %144, !dbg !456

102:                                              ; preds = %61
  %103 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !458
  %104 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !460
  %105 = getelementptr inbounds { double, double }, ptr %103, i32 0, i32 0, !dbg !461
  %106 = load double, ptr %105, align 8, !dbg !461
  %107 = getelementptr inbounds { double, double }, ptr %103, i32 0, i32 1, !dbg !461
  %108 = load double, ptr %107, align 8, !dbg !461
  %109 = getelementptr inbounds { double, double }, ptr %104, i32 0, i32 0, !dbg !461
  %110 = load double, ptr %109, align 8, !dbg !461
  %111 = getelementptr inbounds { double, double }, ptr %104, i32 0, i32 1, !dbg !461
  %112 = load double, ptr %111, align 8, !dbg !461
  %113 = call { double, double } @make_vec(double %106, double %108, double %110, double %112), !dbg !461
  %114 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 0, !dbg !461
  %115 = extractvalue { double, double } %113, 0, !dbg !461
  store double %115, ptr %114, align 8, !dbg !461
  %116 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 1, !dbg !461
  %117 = extractvalue { double, double } %113, 1, !dbg !461
  store double %117, ptr %116, align 8, !dbg !461
  %118 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !462
  %119 = getelementptr inbounds { double, double }, ptr %118, i32 0, i32 0, !dbg !463
  %120 = load double, ptr %119, align 8, !dbg !463
  %121 = getelementptr inbounds { double, double }, ptr %118, i32 0, i32 1, !dbg !463
  %122 = load double, ptr %121, align 8, !dbg !463
  %123 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !463
  %124 = load double, ptr %123, align 8, !dbg !463
  %125 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !463
  %126 = load double, ptr %125, align 8, !dbg !463
  %127 = call { double, double } @make_vec(double %120, double %122, double %124, double %126), !dbg !463
  %128 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 0, !dbg !463
  %129 = extractvalue { double, double } %127, 0, !dbg !463
  store double %129, ptr %128, align 8, !dbg !463
  %130 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 1, !dbg !463
  %131 = extractvalue { double, double } %127, 1, !dbg !463
  store double %131, ptr %130, align 8, !dbg !463
  %132 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 0, !dbg !464
  %133 = load double, ptr %132, align 8, !dbg !464
  %134 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 1, !dbg !464
  %135 = load double, ptr %134, align 8, !dbg !464
  %136 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 0, !dbg !464
  %137 = load double, ptr %136, align 8, !dbg !464
  %138 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 1, !dbg !464
  %139 = load double, ptr %138, align 8, !dbg !464
  %140 = call double @dot(double %133, double %135, double %137, double %139), !dbg !464
  %141 = fcmp olt double %140, 0.000000e+00, !dbg !465
  br i1 %141, label %142, label %143, !dbg !466

142:                                              ; preds = %102
  store i32 -2, ptr %4, align 4, !dbg !467
  br label %144, !dbg !467

143:                                              ; preds = %102
  store i32 0, ptr %4, align 4, !dbg !469
  br label %144, !dbg !469

144:                                              ; preds = %143, %142, %101, %60, %56
  %145 = load i32, ptr %4, align 4, !dbg !471
  ret i32 %145, !dbg !471
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @parallel(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1) #0 !dbg !472 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.POINT, align 8
  %5 = alloca %struct.POINT, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !475, metadata !DIExpression()), !dbg !476
  call void @llvm.dbg.declare(metadata ptr %1, metadata !477, metadata !DIExpression()), !dbg !478
  %6 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !479
  %7 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !481
  %8 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !482
  %9 = load double, ptr %8, align 8, !dbg !482
  %10 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !482
  %11 = load double, ptr %10, align 8, !dbg !482
  %12 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !482
  %13 = load double, ptr %12, align 8, !dbg !482
  %14 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !482
  %15 = load double, ptr %14, align 8, !dbg !482
  %16 = call { double, double } @make_vec(double %9, double %11, double %13, double %15), !dbg !482
  %17 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !482
  %18 = extractvalue { double, double } %16, 0, !dbg !482
  store double %18, ptr %17, align 8, !dbg !482
  %19 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !482
  %20 = extractvalue { double, double } %16, 1, !dbg !482
  store double %20, ptr %19, align 8, !dbg !482
  %21 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !483
  %22 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !484
  %23 = getelementptr inbounds { double, double }, ptr %21, i32 0, i32 0, !dbg !485
  %24 = load double, ptr %23, align 8, !dbg !485
  %25 = getelementptr inbounds { double, double }, ptr %21, i32 0, i32 1, !dbg !485
  %26 = load double, ptr %25, align 8, !dbg !485
  %27 = getelementptr inbounds { double, double }, ptr %22, i32 0, i32 0, !dbg !485
  %28 = load double, ptr %27, align 8, !dbg !485
  %29 = getelementptr inbounds { double, double }, ptr %22, i32 0, i32 1, !dbg !485
  %30 = load double, ptr %29, align 8, !dbg !485
  %31 = call { double, double } @make_vec(double %24, double %26, double %28, double %30), !dbg !485
  %32 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !485
  %33 = extractvalue { double, double } %31, 0, !dbg !485
  store double %33, ptr %32, align 8, !dbg !485
  %34 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !485
  %35 = extractvalue { double, double } %31, 1, !dbg !485
  store double %35, ptr %34, align 8, !dbg !485
  %36 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !486
  %37 = load double, ptr %36, align 8, !dbg !486
  %38 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !486
  %39 = load double, ptr %38, align 8, !dbg !486
  %40 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !486
  %41 = load double, ptr %40, align 8, !dbg !486
  %42 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !486
  %43 = load double, ptr %42, align 8, !dbg !486
  %44 = call double @cross(double %37, double %39, double %41, double %43), !dbg !486
  %45 = fcmp une double %44, 0.000000e+00, !dbg !486
  br i1 %45, label %47, label %46, !dbg !487

46:                                               ; preds = %2
  store i32 1, ptr %3, align 4, !dbg !488
  br label %48, !dbg !488

47:                                               ; preds = %2
  store i32 0, ptr %3, align 4, !dbg !489
  br label %48, !dbg !489

48:                                               ; preds = %47, %46
  %49 = load i32, ptr %3, align 4, !dbg !490
  ret i32 %49, !dbg !490
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @orthogonal(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1) #0 !dbg !491 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.POINT, align 8
  %5 = alloca %struct.POINT, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !492, metadata !DIExpression()), !dbg !493
  call void @llvm.dbg.declare(metadata ptr %1, metadata !494, metadata !DIExpression()), !dbg !495
  %6 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !496
  %7 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !498
  %8 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !499
  %9 = load double, ptr %8, align 8, !dbg !499
  %10 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !499
  %11 = load double, ptr %10, align 8, !dbg !499
  %12 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !499
  %13 = load double, ptr %12, align 8, !dbg !499
  %14 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !499
  %15 = load double, ptr %14, align 8, !dbg !499
  %16 = call { double, double } @make_vec(double %9, double %11, double %13, double %15), !dbg !499
  %17 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !499
  %18 = extractvalue { double, double } %16, 0, !dbg !499
  store double %18, ptr %17, align 8, !dbg !499
  %19 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !499
  %20 = extractvalue { double, double } %16, 1, !dbg !499
  store double %20, ptr %19, align 8, !dbg !499
  %21 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !500
  %22 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !501
  %23 = getelementptr inbounds { double, double }, ptr %21, i32 0, i32 0, !dbg !502
  %24 = load double, ptr %23, align 8, !dbg !502
  %25 = getelementptr inbounds { double, double }, ptr %21, i32 0, i32 1, !dbg !502
  %26 = load double, ptr %25, align 8, !dbg !502
  %27 = getelementptr inbounds { double, double }, ptr %22, i32 0, i32 0, !dbg !502
  %28 = load double, ptr %27, align 8, !dbg !502
  %29 = getelementptr inbounds { double, double }, ptr %22, i32 0, i32 1, !dbg !502
  %30 = load double, ptr %29, align 8, !dbg !502
  %31 = call { double, double } @make_vec(double %24, double %26, double %28, double %30), !dbg !502
  %32 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !502
  %33 = extractvalue { double, double } %31, 0, !dbg !502
  store double %33, ptr %32, align 8, !dbg !502
  %34 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !502
  %35 = extractvalue { double, double } %31, 1, !dbg !502
  store double %35, ptr %34, align 8, !dbg !502
  %36 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !503
  %37 = load double, ptr %36, align 8, !dbg !503
  %38 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !503
  %39 = load double, ptr %38, align 8, !dbg !503
  %40 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !503
  %41 = load double, ptr %40, align 8, !dbg !503
  %42 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !503
  %43 = load double, ptr %42, align 8, !dbg !503
  %44 = call double @dot(double %37, double %39, double %41, double %43), !dbg !503
  %45 = fcmp une double %44, 0.000000e+00, !dbg !503
  br i1 %45, label %47, label %46, !dbg !504

46:                                               ; preds = %2
  store i32 1, ptr %3, align 4, !dbg !505
  br label %48, !dbg !505

47:                                               ; preds = %2
  store i32 0, ptr %3, align 4, !dbg !506
  br label %48, !dbg !506

48:                                               ; preds = %47, %46
  %49 = load i32, ptr %3, align 4, !dbg !507
  ret i32 %49, !dbg !507
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @intersection(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1) #0 !dbg !508 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata ptr %0, metadata !509, metadata !DIExpression()), !dbg !510
  call void @llvm.dbg.declare(metadata ptr %1, metadata !511, metadata !DIExpression()), !dbg !512
  %4 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !513
  %5 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 0, !dbg !515
  %6 = load double, ptr %5, align 8, !dbg !515
  %7 = getelementptr inbounds { double, double }, ptr %4, i32 0, i32 1, !dbg !515
  %8 = load double, ptr %7, align 8, !dbg !515
  %9 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %0, double %6, double %8), !dbg !515
  %10 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !516
  %11 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !517
  %12 = load double, ptr %11, align 8, !dbg !517
  %13 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !517
  %14 = load double, ptr %13, align 8, !dbg !517
  %15 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %0, double %12, double %14), !dbg !517
  %16 = mul nsw i32 %9, %15, !dbg !518
  %17 = icmp sle i32 %16, 0, !dbg !519
  br i1 %17, label %18, label %34, !dbg !520

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !521
  %20 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 0, !dbg !522
  %21 = load double, ptr %20, align 8, !dbg !522
  %22 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !522
  %23 = load double, ptr %22, align 8, !dbg !522
  %24 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %1, double %21, double %23), !dbg !522
  %25 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !523
  %26 = getelementptr inbounds { double, double }, ptr %25, i32 0, i32 0, !dbg !524
  %27 = load double, ptr %26, align 8, !dbg !524
  %28 = getelementptr inbounds { double, double }, ptr %25, i32 0, i32 1, !dbg !524
  %29 = load double, ptr %28, align 8, !dbg !524
  %30 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %1, double %27, double %29), !dbg !524
  %31 = mul nsw i32 %24, %30, !dbg !525
  %32 = icmp sle i32 %31, 0, !dbg !526
  br i1 %32, label %33, label %34, !dbg !527

33:                                               ; preds = %18
  store i32 1, ptr %3, align 4, !dbg !528
  br label %35, !dbg !528

34:                                               ; preds = %18, %2
  store i32 0, ptr %3, align 4, !dbg !529
  br label %35, !dbg !529

35:                                               ; preds = %34, %33
  %36 = load i32, ptr %3, align 4, !dbg !530
  ret i32 %36, !dbg !530
}

; Function Attrs: noinline nounwind uwtable
define dso_local { double, double } @cross_point(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1) #0 !dbg !531 {
  %3 = alloca %struct.POINT, align 8
  %4 = alloca double, align 8
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca double, align 8
  %8 = alloca %struct.POINT, align 8
  %9 = alloca %struct.POINT, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !534, metadata !DIExpression()), !dbg !535
  call void @llvm.dbg.declare(metadata ptr %1, metadata !536, metadata !DIExpression()), !dbg !537
  call void @llvm.dbg.declare(metadata ptr %4, metadata !538, metadata !DIExpression()), !dbg !539
  %10 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !540
  %11 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !541
  %12 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 0, !dbg !542
  %13 = load double, ptr %12, align 8, !dbg !542
  %14 = getelementptr inbounds { double, double }, ptr %10, i32 0, i32 1, !dbg !542
  %15 = load double, ptr %14, align 8, !dbg !542
  %16 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 0, !dbg !542
  %17 = load double, ptr %16, align 8, !dbg !542
  %18 = getelementptr inbounds { double, double }, ptr %11, i32 0, i32 1, !dbg !542
  %19 = load double, ptr %18, align 8, !dbg !542
  %20 = call { double, double } @make_vec(double %13, double %15, double %17, double %19), !dbg !542
  %21 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !542
  %22 = extractvalue { double, double } %20, 0, !dbg !542
  store double %22, ptr %21, align 8, !dbg !542
  %23 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !542
  %24 = extractvalue { double, double } %20, 1, !dbg !542
  store double %24, ptr %23, align 8, !dbg !542
  %25 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !543
  %26 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !544
  %27 = getelementptr inbounds { double, double }, ptr %25, i32 0, i32 0, !dbg !545
  %28 = load double, ptr %27, align 8, !dbg !545
  %29 = getelementptr inbounds { double, double }, ptr %25, i32 0, i32 1, !dbg !545
  %30 = load double, ptr %29, align 8, !dbg !545
  %31 = getelementptr inbounds { double, double }, ptr %26, i32 0, i32 0, !dbg !545
  %32 = load double, ptr %31, align 8, !dbg !545
  %33 = getelementptr inbounds { double, double }, ptr %26, i32 0, i32 1, !dbg !545
  %34 = load double, ptr %33, align 8, !dbg !545
  %35 = call { double, double } @make_vec(double %28, double %30, double %32, double %34), !dbg !545
  %36 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !545
  %37 = extractvalue { double, double } %35, 0, !dbg !545
  store double %37, ptr %36, align 8, !dbg !545
  %38 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !545
  %39 = extractvalue { double, double } %35, 1, !dbg !545
  store double %39, ptr %38, align 8, !dbg !545
  %40 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !546
  %41 = load double, ptr %40, align 8, !dbg !546
  %42 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !546
  %43 = load double, ptr %42, align 8, !dbg !546
  %44 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !546
  %45 = load double, ptr %44, align 8, !dbg !546
  %46 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !546
  %47 = load double, ptr %46, align 8, !dbg !546
  %48 = call double @cross(double %41, double %43, double %45, double %47), !dbg !546
  store double %48, ptr %4, align 8, !dbg !539
  call void @llvm.dbg.declare(metadata ptr %7, metadata !547, metadata !DIExpression()), !dbg !548
  %49 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !549
  %50 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !550
  %51 = getelementptr inbounds { double, double }, ptr %49, i32 0, i32 0, !dbg !551
  %52 = load double, ptr %51, align 8, !dbg !551
  %53 = getelementptr inbounds { double, double }, ptr %49, i32 0, i32 1, !dbg !551
  %54 = load double, ptr %53, align 8, !dbg !551
  %55 = getelementptr inbounds { double, double }, ptr %50, i32 0, i32 0, !dbg !551
  %56 = load double, ptr %55, align 8, !dbg !551
  %57 = getelementptr inbounds { double, double }, ptr %50, i32 0, i32 1, !dbg !551
  %58 = load double, ptr %57, align 8, !dbg !551
  %59 = call { double, double } @make_vec(double %52, double %54, double %56, double %58), !dbg !551
  %60 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !551
  %61 = extractvalue { double, double } %59, 0, !dbg !551
  store double %61, ptr %60, align 8, !dbg !551
  %62 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !551
  %63 = extractvalue { double, double } %59, 1, !dbg !551
  store double %63, ptr %62, align 8, !dbg !551
  %64 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !552
  %65 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !553
  %66 = getelementptr inbounds { double, double }, ptr %64, i32 0, i32 0, !dbg !554
  %67 = load double, ptr %66, align 8, !dbg !554
  %68 = getelementptr inbounds { double, double }, ptr %64, i32 0, i32 1, !dbg !554
  %69 = load double, ptr %68, align 8, !dbg !554
  %70 = getelementptr inbounds { double, double }, ptr %65, i32 0, i32 0, !dbg !554
  %71 = load double, ptr %70, align 8, !dbg !554
  %72 = getelementptr inbounds { double, double }, ptr %65, i32 0, i32 1, !dbg !554
  %73 = load double, ptr %72, align 8, !dbg !554
  %74 = call { double, double } @make_vec(double %67, double %69, double %71, double %73), !dbg !554
  %75 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !554
  %76 = extractvalue { double, double } %74, 0, !dbg !554
  store double %76, ptr %75, align 8, !dbg !554
  %77 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !554
  %78 = extractvalue { double, double } %74, 1, !dbg !554
  store double %78, ptr %77, align 8, !dbg !554
  %79 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !555
  %80 = load double, ptr %79, align 8, !dbg !555
  %81 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !555
  %82 = load double, ptr %81, align 8, !dbg !555
  %83 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !555
  %84 = load double, ptr %83, align 8, !dbg !555
  %85 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !555
  %86 = load double, ptr %85, align 8, !dbg !555
  %87 = call double @cross(double %80, double %82, double %84, double %86), !dbg !555
  store double %87, ptr %7, align 8, !dbg !548
  %88 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !556
  %89 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !557
  %90 = load double, ptr %4, align 8, !dbg !558
  %91 = call double @llvm.fabs.f64(double %90), !dbg !559
  %92 = load double, ptr %7, align 8, !dbg !560
  %93 = call double @llvm.fabs.f64(double %92), !dbg !561
  %94 = getelementptr inbounds { double, double }, ptr %88, i32 0, i32 0, !dbg !562
  %95 = load double, ptr %94, align 8, !dbg !562
  %96 = getelementptr inbounds { double, double }, ptr %88, i32 0, i32 1, !dbg !562
  %97 = load double, ptr %96, align 8, !dbg !562
  %98 = getelementptr inbounds { double, double }, ptr %89, i32 0, i32 0, !dbg !562
  %99 = load double, ptr %98, align 8, !dbg !562
  %100 = getelementptr inbounds { double, double }, ptr %89, i32 0, i32 1, !dbg !562
  %101 = load double, ptr %100, align 8, !dbg !562
  %102 = call { double, double } @division(double %95, double %97, double %99, double %101, double noundef %91, double noundef %93, i32 noundef 0), !dbg !562
  %103 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 0, !dbg !562
  %104 = extractvalue { double, double } %102, 0, !dbg !562
  store double %104, ptr %103, align 8, !dbg !562
  %105 = getelementptr inbounds { double, double }, ptr %3, i32 0, i32 1, !dbg !562
  %106 = extractvalue { double, double } %102, 1, !dbg !562
  store double %106, ptr %105, align 8, !dbg !562
  %107 = load { double, double }, ptr %3, align 8, !dbg !563
  ret { double, double } %107, !dbg !563
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @distanceLP(ptr noundef byval(%struct.LINE) align 8 %0, double %1, double %2) #0 !dbg !564 {
  %4 = alloca double, align 8
  %5 = alloca %struct.POINT, align 8
  %6 = alloca %struct.POINT, align 8
  %7 = alloca %struct.POINT, align 8
  %8 = alloca %struct.POINT, align 8
  %9 = alloca %struct.POINT, align 8
  %10 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0
  store double %1, ptr %10, align 8
  %11 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1
  store double %2, ptr %11, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !567, metadata !DIExpression()), !dbg !568
  call void @llvm.dbg.declare(metadata ptr %5, metadata !569, metadata !DIExpression()), !dbg !570
  %12 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !571
  %13 = load double, ptr %12, align 8, !dbg !571
  %14 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !571
  %15 = load double, ptr %14, align 8, !dbg !571
  %16 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %0, double %13, double %15), !dbg !571
  %17 = icmp eq i32 %16, 2, !dbg !573
  br i1 %17, label %18, label %38, !dbg !574

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !575
  %20 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 0, !dbg !576
  %21 = load double, ptr %20, align 8, !dbg !576
  %22 = getelementptr inbounds { double, double }, ptr %19, i32 0, i32 1, !dbg !576
  %23 = load double, ptr %22, align 8, !dbg !576
  %24 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !576
  %25 = load double, ptr %24, align 8, !dbg !576
  %26 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !576
  %27 = load double, ptr %26, align 8, !dbg !576
  %28 = call { double, double } @make_vec(double %21, double %23, double %25, double %27), !dbg !576
  %29 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !576
  %30 = extractvalue { double, double } %28, 0, !dbg !576
  store double %30, ptr %29, align 8, !dbg !576
  %31 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !576
  %32 = extractvalue { double, double } %28, 1, !dbg !576
  store double %32, ptr %31, align 8, !dbg !576
  %33 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 0, !dbg !577
  %34 = load double, ptr %33, align 8, !dbg !577
  %35 = getelementptr inbounds { double, double }, ptr %6, i32 0, i32 1, !dbg !577
  %36 = load double, ptr %35, align 8, !dbg !577
  %37 = call double @norm(double %34, double %36), !dbg !577
  store double %37, ptr %4, align 8, !dbg !578
  br label %93, !dbg !578

38:                                               ; preds = %3
  %39 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !579
  %40 = load double, ptr %39, align 8, !dbg !579
  %41 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !579
  %42 = load double, ptr %41, align 8, !dbg !579
  %43 = call i32 @ccw(ptr noundef byval(%struct.LINE) align 8 %0, double %40, double %42), !dbg !579
  %44 = icmp eq i32 %43, -2, !dbg !581
  br i1 %44, label %45, label %65, !dbg !582

45:                                               ; preds = %38
  %46 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !583
  %47 = getelementptr inbounds { double, double }, ptr %46, i32 0, i32 0, !dbg !584
  %48 = load double, ptr %47, align 8, !dbg !584
  %49 = getelementptr inbounds { double, double }, ptr %46, i32 0, i32 1, !dbg !584
  %50 = load double, ptr %49, align 8, !dbg !584
  %51 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !584
  %52 = load double, ptr %51, align 8, !dbg !584
  %53 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !584
  %54 = load double, ptr %53, align 8, !dbg !584
  %55 = call { double, double } @make_vec(double %48, double %50, double %52, double %54), !dbg !584
  %56 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !584
  %57 = extractvalue { double, double } %55, 0, !dbg !584
  store double %57, ptr %56, align 8, !dbg !584
  %58 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !584
  %59 = extractvalue { double, double } %55, 1, !dbg !584
  store double %59, ptr %58, align 8, !dbg !584
  %60 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 0, !dbg !585
  %61 = load double, ptr %60, align 8, !dbg !585
  %62 = getelementptr inbounds { double, double }, ptr %7, i32 0, i32 1, !dbg !585
  %63 = load double, ptr %62, align 8, !dbg !585
  %64 = call double @norm(double %61, double %63), !dbg !585
  store double %64, ptr %4, align 8, !dbg !586
  br label %93, !dbg !586

65:                                               ; preds = %38
  %66 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !587
  %67 = load double, ptr %66, align 8, !dbg !587
  %68 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !587
  %69 = load double, ptr %68, align 8, !dbg !587
  %70 = call { double, double } @perpendicular(ptr noundef byval(%struct.LINE) align 8 %0, double %67, double %69), !dbg !587
  %71 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !587
  %72 = extractvalue { double, double } %70, 0, !dbg !587
  store double %72, ptr %71, align 8, !dbg !587
  %73 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !587
  %74 = extractvalue { double, double } %70, 1, !dbg !587
  store double %74, ptr %73, align 8, !dbg !587
  %75 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 0, !dbg !588
  %76 = load double, ptr %75, align 8, !dbg !588
  %77 = getelementptr inbounds { double, double }, ptr %9, i32 0, i32 1, !dbg !588
  %78 = load double, ptr %77, align 8, !dbg !588
  %79 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 0, !dbg !588
  %80 = load double, ptr %79, align 8, !dbg !588
  %81 = getelementptr inbounds { double, double }, ptr %5, i32 0, i32 1, !dbg !588
  %82 = load double, ptr %81, align 8, !dbg !588
  %83 = call { double, double } @make_vec(double %76, double %78, double %80, double %82), !dbg !588
  %84 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !588
  %85 = extractvalue { double, double } %83, 0, !dbg !588
  store double %85, ptr %84, align 8, !dbg !588
  %86 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !588
  %87 = extractvalue { double, double } %83, 1, !dbg !588
  store double %87, ptr %86, align 8, !dbg !588
  %88 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 0, !dbg !589
  %89 = load double, ptr %88, align 8, !dbg !589
  %90 = getelementptr inbounds { double, double }, ptr %8, i32 0, i32 1, !dbg !589
  %91 = load double, ptr %90, align 8, !dbg !589
  %92 = call double @norm(double %89, double %91), !dbg !589
  store double %92, ptr %4, align 8, !dbg !590
  br label %93, !dbg !590

93:                                               ; preds = %65, %45, %18
  %94 = load double, ptr %4, align 8, !dbg !591
  ret double %94, !dbg !591
}

; Function Attrs: noinline nounwind uwtable
define dso_local double @distanceLL(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1) #0 !dbg !592 {
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca double, align 8
  call void @llvm.dbg.declare(metadata ptr %0, metadata !595, metadata !DIExpression()), !dbg !596
  call void @llvm.dbg.declare(metadata ptr %1, metadata !597, metadata !DIExpression()), !dbg !598
  call void @llvm.dbg.declare(metadata ptr %4, metadata !599, metadata !DIExpression()), !dbg !600
  call void @llvm.dbg.declare(metadata ptr %5, metadata !601, metadata !DIExpression()), !dbg !602
  call void @llvm.dbg.declare(metadata ptr %6, metadata !603, metadata !DIExpression()), !dbg !604
  call void @llvm.dbg.declare(metadata ptr %7, metadata !605, metadata !DIExpression()), !dbg !606
  %8 = call i32 @intersection(ptr noundef byval(%struct.LINE) align 8 %0, ptr noundef byval(%struct.LINE) align 8 %1), !dbg !607
  %9 = icmp eq i32 %8, 1, !dbg !609
  br i1 %9, label %10, label %11, !dbg !610

10:                                               ; preds = %2
  store double 0.000000e+00, ptr %3, align 8, !dbg !611
  br label %102, !dbg !611

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 0, !dbg !612
  %13 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 0, !dbg !613
  %14 = load double, ptr %13, align 8, !dbg !613
  %15 = getelementptr inbounds { double, double }, ptr %12, i32 0, i32 1, !dbg !613
  %16 = load double, ptr %15, align 8, !dbg !613
  %17 = call double @distanceLP(ptr noundef byval(%struct.LINE) align 8 %0, double %14, double %16), !dbg !613
  store double %17, ptr %4, align 8, !dbg !614
  %18 = getelementptr inbounds %struct.LINE, ptr %1, i32 0, i32 1, !dbg !615
  %19 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 0, !dbg !616
  %20 = load double, ptr %19, align 8, !dbg !616
  %21 = getelementptr inbounds { double, double }, ptr %18, i32 0, i32 1, !dbg !616
  %22 = load double, ptr %21, align 8, !dbg !616
  %23 = call double @distanceLP(ptr noundef byval(%struct.LINE) align 8 %0, double %20, double %22), !dbg !616
  store double %23, ptr %5, align 8, !dbg !617
  %24 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 0, !dbg !618
  %25 = getelementptr inbounds { double, double }, ptr %24, i32 0, i32 0, !dbg !619
  %26 = load double, ptr %25, align 8, !dbg !619
  %27 = getelementptr inbounds { double, double }, ptr %24, i32 0, i32 1, !dbg !619
  %28 = load double, ptr %27, align 8, !dbg !619
  %29 = call double @distanceLP(ptr noundef byval(%struct.LINE) align 8 %1, double %26, double %28), !dbg !619
  store double %29, ptr %6, align 8, !dbg !620
  %30 = getelementptr inbounds %struct.LINE, ptr %0, i32 0, i32 1, !dbg !621
  %31 = getelementptr inbounds { double, double }, ptr %30, i32 0, i32 0, !dbg !622
  %32 = load double, ptr %31, align 8, !dbg !622
  %33 = getelementptr inbounds { double, double }, ptr %30, i32 0, i32 1, !dbg !622
  %34 = load double, ptr %33, align 8, !dbg !622
  %35 = call double @distanceLP(ptr noundef byval(%struct.LINE) align 8 %1, double %32, double %34), !dbg !622
  store double %35, ptr %7, align 8, !dbg !623
  %36 = load double, ptr %4, align 8, !dbg !624
  %37 = load double, ptr %5, align 8, !dbg !624
  %38 = fcmp olt double %36, %37, !dbg !624
  %39 = zext i1 %38 to i32, !dbg !624
  %40 = sitofp i32 %39 to double, !dbg !624
  %41 = load double, ptr %6, align 8, !dbg !624
  %42 = fcmp olt double %40, %41, !dbg !624
  %43 = zext i1 %42 to i32, !dbg !624
  %44 = sitofp i32 %43 to double, !dbg !624
  %45 = load double, ptr %7, align 8, !dbg !624
  %46 = fcmp olt double %44, %45, !dbg !624
  br i1 %46, label %47, label %49, !dbg !624

47:                                               ; preds = %11
  %48 = load double, ptr %7, align 8, !dbg !624
  br label %100, !dbg !624

49:                                               ; preds = %11
  %50 = load double, ptr %6, align 8, !dbg !624
  %51 = fcmp une double %50, 0.000000e+00, !dbg !624
  br i1 %51, label %52, label %62, !dbg !624

52:                                               ; preds = %49
  %53 = load double, ptr %6, align 8, !dbg !624
  %54 = load double, ptr %7, align 8, !dbg !624
  %55 = fcmp olt double %53, %54, !dbg !624
  br i1 %55, label %56, label %58, !dbg !624

56:                                               ; preds = %52
  %57 = load double, ptr %7, align 8, !dbg !624
  br label %60, !dbg !624

58:                                               ; preds = %52
  %59 = load double, ptr %6, align 8, !dbg !624
  br label %60, !dbg !624

60:                                               ; preds = %58, %56
  %61 = phi double [ %57, %56 ], [ %59, %58 ], !dbg !624
  br label %98, !dbg !624

62:                                               ; preds = %49
  %63 = load double, ptr %5, align 8, !dbg !624
  %64 = fcmp une double %63, 0.000000e+00, !dbg !624
  br i1 %64, label %65, label %94, !dbg !624

65:                                               ; preds = %62
  %66 = load double, ptr %5, align 8, !dbg !624
  %67 = load double, ptr %6, align 8, !dbg !624
  %68 = fcmp olt double %66, %67, !dbg !624
  %69 = zext i1 %68 to i32, !dbg !624
  %70 = sitofp i32 %69 to double, !dbg !624
  %71 = load double, ptr %7, align 8, !dbg !624
  %72 = fcmp olt double %70, %71, !dbg !624
  br i1 %72, label %73, label %75, !dbg !624

73:                                               ; preds = %65
  %74 = load double, ptr %7, align 8, !dbg !624
  br label %92, !dbg !624

75:                                               ; preds = %65
  %76 = load double, ptr %6, align 8, !dbg !624
  %77 = fcmp une double %76, 0.000000e+00, !dbg !624
  br i1 %77, label %78, label %88, !dbg !624

78:                                               ; preds = %75
  %79 = load double, ptr %6, align 8, !dbg !624
  %80 = load double, ptr %7, align 8, !dbg !624
  %81 = fcmp olt double %79, %80, !dbg !624
  br i1 %81, label %82, label %84, !dbg !624

82:                                               ; preds = %78
  %83 = load double, ptr %7, align 8, !dbg !624
  br label %86, !dbg !624

84:                                               ; preds = %78
  %85 = load double, ptr %6, align 8, !dbg !624
  br label %86, !dbg !624

86:                                               ; preds = %84, %82
  %87 = phi double [ %83, %82 ], [ %85, %84 ], !dbg !624
  br label %90, !dbg !624

88:                                               ; preds = %75
  %89 = load double, ptr %5, align 8, !dbg !624
  br label %90, !dbg !624

90:                                               ; preds = %88, %86
  %91 = phi double [ %87, %86 ], [ %89, %88 ], !dbg !624
  br label %92, !dbg !624

92:                                               ; preds = %90, %73
  %93 = phi double [ %74, %73 ], [ %91, %90 ], !dbg !624
  br label %96, !dbg !624

94:                                               ; preds = %62
  %95 = load double, ptr %4, align 8, !dbg !624
  br label %96, !dbg !624

96:                                               ; preds = %94, %92
  %97 = phi double [ %93, %92 ], [ %95, %94 ], !dbg !624
  br label %98, !dbg !624

98:                                               ; preds = %96, %60
  %99 = phi double [ %61, %60 ], [ %97, %96 ], !dbg !624
  br label %100, !dbg !624

100:                                              ; preds = %98, %47
  %101 = phi double [ %48, %47 ], [ %99, %98 ], !dbg !624
  store double %101, ptr %3, align 8, !dbg !625
  br label %102, !dbg !625

102:                                              ; preds = %100, %10
  %103 = load double, ptr %3, align 8, !dbg !626
  ret double %103, !dbg !626
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @main() #0 !dbg !627 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.LINE, align 8
  %3 = alloca %struct.LINE, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.POINT, align 8
  store i32 0, ptr %1, align 4
  call void @llvm.dbg.declare(metadata ptr %2, metadata !630, metadata !DIExpression()), !dbg !631
  call void @llvm.dbg.declare(metadata ptr %3, metadata !632, metadata !DIExpression()), !dbg !633
  call void @llvm.dbg.declare(metadata ptr %4, metadata !634, metadata !DIExpression()), !dbg !635
  call void @llvm.dbg.declare(metadata ptr %5, metadata !636, metadata !DIExpression()), !dbg !637
  %6 = call i32 (ptr, ...) @__isoc99_scanf(ptr noundef @.str.2, ptr noundef %4), !dbg !638
  br label %7, !dbg !639

7:                                                ; preds = %11, %0
  %8 = load i32, ptr %4, align 4, !dbg !640
  %9 = add nsw i32 %8, -1, !dbg !640
  store i32 %9, ptr %4, align 4, !dbg !640
  %10 = icmp ne i32 %8, 0, !dbg !639
  br i1 %10, label %11, label %32, !dbg !639

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.LINE, ptr %2, i32 0, i32 0, !dbg !641
  %13 = getelementptr inbounds %struct.POINT, ptr %12, i32 0, i32 0, !dbg !643
  %14 = getelementptr inbounds %struct.LINE, ptr %2, i32 0, i32 0, !dbg !644
  %15 = getelementptr inbounds %struct.POINT, ptr %14, i32 0, i32 1, !dbg !645
  %16 = getelementptr inbounds %struct.LINE, ptr %2, i32 0, i32 1, !dbg !646
  %17 = getelementptr inbounds %struct.POINT, ptr %16, i32 0, i32 0, !dbg !647
  %18 = getelementptr inbounds %struct.LINE, ptr %2, i32 0, i32 1, !dbg !648
  %19 = getelementptr inbounds %struct.POINT, ptr %18, i32 0, i32 1, !dbg !649
  %20 = call i32 (ptr, ...) @__isoc99_scanf(ptr noundef @.str.3, ptr noundef %13, ptr noundef %15, ptr noundef %17, ptr noundef %19), !dbg !650
  %21 = getelementptr inbounds %struct.LINE, ptr %3, i32 0, i32 0, !dbg !651
  %22 = getelementptr inbounds %struct.POINT, ptr %21, i32 0, i32 0, !dbg !652
  %23 = getelementptr inbounds %struct.LINE, ptr %3, i32 0, i32 0, !dbg !653
  %24 = getelementptr inbounds %struct.POINT, ptr %23, i32 0, i32 1, !dbg !654
  %25 = getelementptr inbounds %struct.LINE, ptr %3, i32 0, i32 1, !dbg !655
  %26 = getelementptr inbounds %struct.POINT, ptr %25, i32 0, i32 0, !dbg !656
  %27 = getelementptr inbounds %struct.LINE, ptr %3, i32 0, i32 1, !dbg !657
  %28 = getelementptr inbounds %struct.POINT, ptr %27, i32 0, i32 1, !dbg !658
  %29 = call i32 (ptr, ...) @__isoc99_scanf(ptr noundef @.str.3, ptr noundef %22, ptr noundef %24, ptr noundef %26, ptr noundef %28), !dbg !659
  %30 = call double @distanceLL(ptr noundef byval(%struct.LINE) align 8 %2, ptr noundef byval(%struct.LINE) align 8 %3), !dbg !660
  %31 = call i32 (ptr, ...) @printf(ptr noundef @.str.4, double noundef %30), !dbg !661
  br label %7, !dbg !639, !llvm.loop !662

32:                                               ; preds = %7
  ret i32 0, !dbg !664
}

declare i32 @__isoc99_scanf(ptr noundef, ...) #2

attributes #0 = { noinline nounwind uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cmov,+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nocallback nofree nosync nounwind willreturn }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!27}
!llvm.module.flags = !{!29, !30, !31, !32, !33, !34, !35}
!llvm.ident = !{!36}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(scope: null, file: !2, line: 25, type: !3, isLocal: true, isDefinition: true)
!2 = !DIFile(filename: "dataset/s428741213.c", directory: "/n/eecs583a/home/akulshre/LoopUnrollOptimizer_ML", checksumkind: CSK_MD5, checksum: "e4dc532141d14c471d6c33a117ae202e")
!3 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 88, elements: !5)
!4 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!5 = !{!6}
!6 = !DISubrange(count: 11)
!7 = !DIGlobalVariableExpression(var: !8, expr: !DIExpression())
!8 = distinct !DIGlobalVariable(scope: null, file: !2, line: 30, type: !9, isLocal: true, isDefinition: true)
!9 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 192, elements: !10)
!10 = !{!11}
!11 = !DISubrange(count: 24)
!12 = !DIGlobalVariableExpression(var: !13, expr: !DIExpression())
!13 = distinct !DIGlobalVariable(scope: null, file: !2, line: 231, type: !14, isLocal: true, isDefinition: true)
!14 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 24, elements: !15)
!15 = !{!16}
!16 = !DISubrange(count: 3)
!17 = !DIGlobalVariableExpression(var: !18, expr: !DIExpression())
!18 = distinct !DIGlobalVariable(scope: null, file: !2, line: 233, type: !19, isLocal: true, isDefinition: true)
!19 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 104, elements: !20)
!20 = !{!21}
!21 = !DISubrange(count: 13)
!22 = !DIGlobalVariableExpression(var: !23, expr: !DIExpression())
!23 = distinct !DIGlobalVariable(scope: null, file: !2, line: 235, type: !24, isLocal: true, isDefinition: true)
!24 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 64, elements: !25)
!25 = !{!26}
!26 = !DISubrange(count: 8)
!27 = distinct !DICompileUnit(language: DW_LANG_C11, file: !2, producer: "clang version 18.1.8 (https://github.com/llvm/llvm-project.git 3b5b5c1ec4a3095ab096dd780e84d7ab81f3d7ff)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, globals: !28, splitDebugInlining: false, nameTableKind: None)
!28 = !{!0, !7, !12, !17, !22}
!29 = !{i32 7, !"Dwarf Version", i32 5}
!30 = !{i32 2, !"Debug Info Version", i32 3}
!31 = !{i32 1, !"wchar_size", i32 4}
!32 = !{i32 8, !"PIC Level", i32 2}
!33 = !{i32 7, !"PIE Level", i32 2}
!34 = !{i32 7, !"uwtable", i32 2}
!35 = !{i32 7, !"frame-pointer", i32 2}
!36 = !{!"clang version 18.1.8 (https://github.com/llvm/llvm-project.git 3b5b5c1ec4a3095ab096dd780e84d7ab81f3d7ff)"}
!37 = distinct !DISubprogram(name: "print_p", scope: !2, file: !2, line: 24, type: !38, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!38 = !DISubroutineType(types: !39)
!39 = !{null, !40}
!40 = !DIDerivedType(tag: DW_TAG_typedef, name: "POINT", file: !2, line: 13, baseType: !41)
!41 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "POINT", file: !2, line: 10, size: 128, elements: !42)
!42 = !{!43, !45}
!43 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !41, file: !2, line: 11, baseType: !44, size: 64)
!44 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !41, file: !2, line: 12, baseType: !44, size: 64, offset: 64)
!46 = !{}
!47 = !DILocalVariable(name: "a", arg: 1, scope: !37, file: !2, line: 24, type: !40)
!48 = !DILocation(line: 24, column: 20, scope: !37)
!49 = !DILocation(line: 25, column: 25, scope: !37)
!50 = !DILocation(line: 25, column: 29, scope: !37)
!51 = !DILocation(line: 25, column: 2, scope: !37)
!52 = !DILocation(line: 26, column: 1, scope: !37)
!53 = distinct !DISubprogram(name: "print_l", scope: !2, file: !2, line: 29, type: !54, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!54 = !DISubroutineType(types: !55)
!55 = !{null, !56}
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "LINE", file: !2, line: 17, baseType: !57)
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LINE", file: !2, line: 14, size: 256, elements: !58)
!58 = !{!59, !60}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !57, file: !2, line: 15, baseType: !40, size: 128)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !57, file: !2, line: 16, baseType: !40, size: 128, offset: 128)
!61 = !DILocalVariable(name: "a", arg: 1, scope: !53, file: !2, line: 29, type: !56)
!62 = !DILocation(line: 29, column: 19, scope: !53)
!63 = !DILocation(line: 30, column: 39, scope: !53)
!64 = !DILocation(line: 30, column: 42, scope: !53)
!65 = !DILocation(line: 30, column: 47, scope: !53)
!66 = !DILocation(line: 30, column: 50, scope: !53)
!67 = !DILocation(line: 30, column: 55, scope: !53)
!68 = !DILocation(line: 30, column: 58, scope: !53)
!69 = !DILocation(line: 30, column: 63, scope: !53)
!70 = !DILocation(line: 30, column: 66, scope: !53)
!71 = !DILocation(line: 30, column: 2, scope: !53)
!72 = !DILocation(line: 31, column: 1, scope: !53)
!73 = distinct !DISubprogram(name: "print_c", scope: !2, file: !2, line: 34, type: !74, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!74 = !DISubroutineType(types: !75)
!75 = !{null, !76}
!76 = !DIDerivedType(tag: DW_TAG_typedef, name: "COMPLEX", file: !2, line: 21, baseType: !77)
!77 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "COMPLEX", file: !2, line: 18, size: 128, elements: !78)
!78 = !{!79, !80}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !77, file: !2, line: 19, baseType: !44, size: 64)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !77, file: !2, line: 20, baseType: !44, size: 64, offset: 64)
!81 = !DILocalVariable(name: "a", arg: 1, scope: !73, file: !2, line: 34, type: !76)
!82 = !DILocation(line: 34, column: 22, scope: !73)
!83 = !DILocation(line: 35, column: 25, scope: !73)
!84 = !DILocation(line: 35, column: 29, scope: !73)
!85 = !DILocation(line: 35, column: 2, scope: !73)
!86 = !DILocation(line: 36, column: 1, scope: !73)
!87 = distinct !DISubprogram(name: "norm2", scope: !2, file: !2, line: 39, type: !88, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!88 = !DISubroutineType(types: !89)
!89 = !{!44, !40}
!90 = !DILocalVariable(name: "a", arg: 1, scope: !87, file: !2, line: 39, type: !40)
!91 = !DILocation(line: 39, column: 20, scope: !87)
!92 = !DILocation(line: 40, column: 9, scope: !87)
!93 = !DILocation(line: 40, column: 19, scope: !87)
!94 = !DILocation(line: 40, column: 18, scope: !87)
!95 = !DILocation(line: 40, column: 2, scope: !87)
!96 = distinct !DISubprogram(name: "norm", scope: !2, file: !2, line: 44, type: !88, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!97 = !DILocalVariable(name: "a", arg: 1, scope: !96, file: !2, line: 44, type: !40)
!98 = !DILocation(line: 44, column: 19, scope: !96)
!99 = !DILocation(line: 45, column: 14, scope: !96)
!100 = !DILocation(line: 45, column: 9, scope: !96)
!101 = !DILocation(line: 45, column: 2, scope: !96)
!102 = distinct !DISubprogram(name: "make_vec", scope: !2, file: !2, line: 49, type: !103, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!103 = !DISubroutineType(types: !104)
!104 = !{!40, !40, !40}
!105 = !DILocalVariable(name: "a", arg: 1, scope: !102, file: !2, line: 49, type: !40)
!106 = !DILocation(line: 49, column: 22, scope: !102)
!107 = !DILocalVariable(name: "b", arg: 2, scope: !102, file: !2, line: 49, type: !40)
!108 = !DILocation(line: 49, column: 30, scope: !102)
!109 = !DILocation(line: 50, column: 11, scope: !102)
!110 = !DILocation(line: 50, column: 4, scope: !102)
!111 = !DILocation(line: 50, column: 6, scope: !102)
!112 = !DILocation(line: 51, column: 11, scope: !102)
!113 = !DILocation(line: 51, column: 4, scope: !102)
!114 = !DILocation(line: 51, column: 6, scope: !102)
!115 = !DILocation(line: 52, column: 9, scope: !102)
!116 = !DILocation(line: 52, column: 2, scope: !102)
!117 = distinct !DISubprogram(name: "distance", scope: !2, file: !2, line: 56, type: !118, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!118 = !DISubroutineType(types: !119)
!119 = !{!44, !40, !40}
!120 = !DILocalVariable(name: "a", arg: 1, scope: !117, file: !2, line: 56, type: !40)
!121 = !DILocation(line: 56, column: 23, scope: !117)
!122 = !DILocalVariable(name: "b", arg: 2, scope: !117, file: !2, line: 56, type: !40)
!123 = !DILocation(line: 56, column: 31, scope: !117)
!124 = !DILocation(line: 57, column: 14, scope: !117)
!125 = !DILocation(line: 57, column: 9, scope: !117)
!126 = !DILocation(line: 57, column: 2, scope: !117)
!127 = distinct !DISubprogram(name: "sum_vec", scope: !2, file: !2, line: 61, type: !103, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!128 = !DILocalVariable(name: "a", arg: 1, scope: !127, file: !2, line: 61, type: !40)
!129 = !DILocation(line: 61, column: 21, scope: !127)
!130 = !DILocalVariable(name: "b", arg: 2, scope: !127, file: !2, line: 61, type: !40)
!131 = !DILocation(line: 61, column: 29, scope: !127)
!132 = !DILocation(line: 62, column: 11, scope: !127)
!133 = !DILocation(line: 62, column: 4, scope: !127)
!134 = !DILocation(line: 62, column: 6, scope: !127)
!135 = !DILocation(line: 63, column: 11, scope: !127)
!136 = !DILocation(line: 63, column: 4, scope: !127)
!137 = !DILocation(line: 63, column: 6, scope: !127)
!138 = !DILocation(line: 64, column: 9, scope: !127)
!139 = !DILocation(line: 64, column: 2, scope: !127)
!140 = distinct !DISubprogram(name: "dif_vec", scope: !2, file: !2, line: 70, type: !103, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!141 = !DILocalVariable(name: "a", arg: 1, scope: !140, file: !2, line: 70, type: !40)
!142 = !DILocation(line: 70, column: 21, scope: !140)
!143 = !DILocalVariable(name: "b", arg: 2, scope: !140, file: !2, line: 70, type: !40)
!144 = !DILocation(line: 70, column: 29, scope: !140)
!145 = !DILocation(line: 71, column: 11, scope: !140)
!146 = !DILocation(line: 71, column: 4, scope: !140)
!147 = !DILocation(line: 71, column: 6, scope: !140)
!148 = !DILocation(line: 72, column: 11, scope: !140)
!149 = !DILocation(line: 72, column: 4, scope: !140)
!150 = !DILocation(line: 72, column: 6, scope: !140)
!151 = !DILocation(line: 73, column: 9, scope: !140)
!152 = !DILocation(line: 73, column: 2, scope: !140)
!153 = distinct !DISubprogram(name: "scalar_vec", scope: !2, file: !2, line: 77, type: !154, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!154 = !DISubroutineType(types: !155)
!155 = !{!40, !40, !44}
!156 = !DILocalVariable(name: "a", arg: 1, scope: !153, file: !2, line: 77, type: !40)
!157 = !DILocation(line: 77, column: 24, scope: !153)
!158 = !DILocalVariable(name: "k", arg: 2, scope: !153, file: !2, line: 77, type: !44)
!159 = !DILocation(line: 77, column: 33, scope: !153)
!160 = !DILocation(line: 78, column: 9, scope: !153)
!161 = !DILocation(line: 78, column: 4, scope: !153)
!162 = !DILocation(line: 78, column: 6, scope: !153)
!163 = !DILocation(line: 79, column: 9, scope: !153)
!164 = !DILocation(line: 79, column: 4, scope: !153)
!165 = !DILocation(line: 79, column: 6, scope: !153)
!166 = !DILocation(line: 80, column: 9, scope: !153)
!167 = !DILocation(line: 80, column: 2, scope: !153)
!168 = distinct !DISubprogram(name: "minus_vec", scope: !2, file: !2, line: 84, type: !169, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!169 = !DISubroutineType(types: !170)
!170 = !{!40, !40}
!171 = !DILocalVariable(name: "a", arg: 1, scope: !168, file: !2, line: 84, type: !40)
!172 = !DILocation(line: 84, column: 23, scope: !168)
!173 = !DILocation(line: 85, column: 9, scope: !168)
!174 = !DILocation(line: 85, column: 2, scope: !168)
!175 = distinct !DISubprogram(name: "dot", scope: !2, file: !2, line: 89, type: !118, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!176 = !DILocalVariable(name: "a", arg: 1, scope: !175, file: !2, line: 89, type: !40)
!177 = !DILocation(line: 89, column: 18, scope: !175)
!178 = !DILocalVariable(name: "b", arg: 2, scope: !175, file: !2, line: 89, type: !40)
!179 = !DILocation(line: 89, column: 26, scope: !175)
!180 = !DILocation(line: 90, column: 11, scope: !175)
!181 = !DILocation(line: 90, column: 15, scope: !175)
!182 = !DILocation(line: 90, column: 21, scope: !175)
!183 = !DILocation(line: 90, column: 25, scope: !175)
!184 = !DILocation(line: 90, column: 22, scope: !175)
!185 = !DILocation(line: 90, column: 17, scope: !175)
!186 = !DILocation(line: 90, column: 2, scope: !175)
!187 = distinct !DISubprogram(name: "cross", scope: !2, file: !2, line: 94, type: !118, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!188 = !DILocalVariable(name: "a", arg: 1, scope: !187, file: !2, line: 94, type: !40)
!189 = !DILocation(line: 94, column: 20, scope: !187)
!190 = !DILocalVariable(name: "b", arg: 2, scope: !187, file: !2, line: 94, type: !40)
!191 = !DILocation(line: 94, column: 28, scope: !187)
!192 = !DILocation(line: 95, column: 11, scope: !187)
!193 = !DILocation(line: 95, column: 15, scope: !187)
!194 = !DILocation(line: 95, column: 21, scope: !187)
!195 = !DILocation(line: 95, column: 25, scope: !187)
!196 = !DILocation(line: 95, column: 22, scope: !187)
!197 = !DILocation(line: 95, column: 17, scope: !187)
!198 = !DILocation(line: 95, column: 2, scope: !187)
!199 = distinct !DISubprogram(name: "division", scope: !2, file: !2, line: 101, type: !200, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!200 = !DISubroutineType(types: !201)
!201 = !{!40, !40, !40, !44, !44, !202}
!202 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!203 = !DILocalVariable(name: "a", arg: 1, scope: !199, file: !2, line: 101, type: !40)
!204 = !DILocation(line: 101, column: 22, scope: !199)
!205 = !DILocalVariable(name: "b", arg: 2, scope: !199, file: !2, line: 101, type: !40)
!206 = !DILocation(line: 101, column: 30, scope: !199)
!207 = !DILocalVariable(name: "t", arg: 3, scope: !199, file: !2, line: 101, type: !44)
!208 = !DILocation(line: 101, column: 39, scope: !199)
!209 = !DILocalVariable(name: "s", arg: 4, scope: !199, file: !2, line: 101, type: !44)
!210 = !DILocation(line: 101, column: 48, scope: !199)
!211 = !DILocalVariable(name: "k", arg: 5, scope: !199, file: !2, line: 101, type: !202)
!212 = !DILocation(line: 101, column: 54, scope: !199)
!213 = !DILocalVariable(name: "tmp", scope: !199, file: !2, line: 102, type: !44)
!214 = !DILocation(line: 102, column: 9, scope: !199)
!215 = !DILocation(line: 102, column: 15, scope: !199)
!216 = !DILocation(line: 102, column: 19, scope: !199)
!217 = !DILocation(line: 102, column: 28, scope: !199)
!218 = !DILocation(line: 102, column: 29, scope: !199)
!219 = !DILocation(line: 102, column: 26, scope: !199)
!220 = !DILocation(line: 102, column: 23, scope: !199)
!221 = !DILocation(line: 102, column: 17, scope: !199)
!222 = !DILocation(line: 103, column: 10, scope: !199)
!223 = !DILocation(line: 103, column: 25, scope: !199)
!224 = !DILocation(line: 103, column: 29, scope: !199)
!225 = !DILocation(line: 103, column: 27, scope: !199)
!226 = !DILocation(line: 103, column: 35, scope: !199)
!227 = !DILocation(line: 103, column: 4, scope: !199)
!228 = !DILocation(line: 103, column: 6, scope: !199)
!229 = !DILocation(line: 104, column: 10, scope: !199)
!230 = !DILocation(line: 104, column: 25, scope: !199)
!231 = !DILocation(line: 104, column: 29, scope: !199)
!232 = !DILocation(line: 104, column: 27, scope: !199)
!233 = !DILocation(line: 104, column: 35, scope: !199)
!234 = !DILocation(line: 104, column: 4, scope: !199)
!235 = !DILocation(line: 104, column: 6, scope: !199)
!236 = !DILocation(line: 105, column: 9, scope: !199)
!237 = !DILocation(line: 105, column: 2, scope: !199)
!238 = distinct !DISubprogram(name: "perpendicular", scope: !2, file: !2, line: 109, type: !239, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!239 = !DISubroutineType(types: !240)
!240 = !{!40, !56, !40}
!241 = !DILocalVariable(name: "a", arg: 1, scope: !238, file: !2, line: 109, type: !56)
!242 = !DILocation(line: 109, column: 26, scope: !238)
!243 = !DILocalVariable(name: "p", arg: 2, scope: !238, file: !2, line: 109, type: !40)
!244 = !DILocation(line: 109, column: 34, scope: !238)
!245 = !DILocalVariable(name: "ps", scope: !238, file: !2, line: 110, type: !40)
!246 = !DILocation(line: 110, column: 8, scope: !238)
!247 = !DILocation(line: 110, column: 26, scope: !238)
!248 = !DILocation(line: 110, column: 13, scope: !238)
!249 = !DILocalVariable(name: "pe", scope: !238, file: !2, line: 111, type: !40)
!250 = !DILocation(line: 111, column: 8, scope: !238)
!251 = !DILocation(line: 111, column: 26, scope: !238)
!252 = !DILocation(line: 111, column: 13, scope: !238)
!253 = !DILocalVariable(name: "t", scope: !238, file: !2, line: 112, type: !44)
!254 = !DILocation(line: 112, column: 9, scope: !238)
!255 = !DILocation(line: 112, column: 13, scope: !238)
!256 = !DILocation(line: 112, column: 25, scope: !238)
!257 = !DILocation(line: 112, column: 23, scope: !238)
!258 = !DILocalVariable(name: "s", scope: !238, file: !2, line: 113, type: !44)
!259 = !DILocation(line: 113, column: 9, scope: !238)
!260 = !DILocation(line: 113, column: 13, scope: !238)
!261 = !DILocation(line: 113, column: 25, scope: !238)
!262 = !DILocation(line: 113, column: 23, scope: !238)
!263 = !DILocation(line: 114, column: 20, scope: !238)
!264 = !DILocation(line: 114, column: 24, scope: !238)
!265 = !DILocation(line: 114, column: 26, scope: !238)
!266 = !DILocation(line: 114, column: 28, scope: !238)
!267 = !DILocation(line: 114, column: 9, scope: !238)
!268 = !DILocation(line: 114, column: 2, scope: !238)
!269 = distinct !DISubprogram(name: "reflection", scope: !2, file: !2, line: 118, type: !239, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!270 = !DILocalVariable(name: "a", arg: 1, scope: !269, file: !2, line: 118, type: !56)
!271 = !DILocation(line: 118, column: 23, scope: !269)
!272 = !DILocalVariable(name: "p", arg: 2, scope: !269, file: !2, line: 118, type: !40)
!273 = !DILocation(line: 118, column: 31, scope: !269)
!274 = !DILocalVariable(name: "h", scope: !269, file: !2, line: 119, type: !40)
!275 = !DILocation(line: 119, column: 8, scope: !269)
!276 = !DILocation(line: 119, column: 12, scope: !269)
!277 = !DILocation(line: 120, column: 19, scope: !269)
!278 = !DILocation(line: 120, column: 9, scope: !269)
!279 = !DILocation(line: 120, column: 2, scope: !269)
!280 = distinct !DISubprogram(name: "inclusion", scope: !2, file: !2, line: 124, type: !281, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!281 = !DISubroutineType(types: !282)
!282 = !{!202, !283, !202, !40}
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!284 = !DILocalVariable(name: "a", arg: 1, scope: !280, file: !2, line: 124, type: !283)
!285 = !DILocation(line: 124, column: 21, scope: !280)
!286 = !DILocalVariable(name: "n", arg: 2, scope: !280, file: !2, line: 124, type: !202)
!287 = !DILocation(line: 124, column: 29, scope: !280)
!288 = !DILocalVariable(name: "p", arg: 3, scope: !280, file: !2, line: 124, type: !40)
!289 = !DILocation(line: 124, column: 37, scope: !280)
!290 = !DILocalVariable(name: "ans", scope: !280, file: !2, line: 125, type: !202)
!291 = !DILocation(line: 125, column: 6, scope: !280)
!292 = !DILocalVariable(name: "i", scope: !280, file: !2, line: 126, type: !202)
!293 = !DILocation(line: 126, column: 6, scope: !280)
!294 = !DILocation(line: 127, column: 10, scope: !280)
!295 = !DILocation(line: 127, column: 11, scope: !280)
!296 = !DILocation(line: 127, column: 2, scope: !280)
!297 = !DILocalVariable(name: "__vla_expr0", scope: !280, type: !298, flags: DIFlagArtificial)
!298 = !DIBasicType(name: "unsigned long", size: 64, encoding: DW_ATE_unsigned)
!299 = !DILocation(line: 0, scope: !280)
!300 = !DILocalVariable(name: "g", scope: !280, file: !2, line: 127, type: !301)
!301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, elements: !302)
!302 = !{!303}
!303 = !DISubrange(count: !297)
!304 = !DILocation(line: 127, column: 8, scope: !280)
!305 = !DILocalVariable(name: "w", scope: !280, file: !2, line: 128, type: !44)
!306 = !DILocation(line: 128, column: 9, scope: !280)
!307 = !DILocalVariable(name: "rad", scope: !280, file: !2, line: 128, type: !44)
!308 = !DILocation(line: 128, column: 11, scope: !280)
!309 = !DILocation(line: 130, column: 8, scope: !310)
!310 = distinct !DILexicalBlock(scope: !280, file: !2, line: 130, column: 2)
!311 = !DILocation(line: 130, column: 6, scope: !310)
!312 = !DILocation(line: 130, column: 12, scope: !313)
!313 = distinct !DILexicalBlock(scope: !310, file: !2, line: 130, column: 2)
!314 = !DILocation(line: 130, column: 16, scope: !313)
!315 = !DILocation(line: 130, column: 14, scope: !313)
!316 = !DILocation(line: 130, column: 2, scope: !310)
!317 = !DILocation(line: 131, column: 5, scope: !318)
!318 = distinct !DILexicalBlock(scope: !313, file: !2, line: 130, column: 22)
!319 = !DILocation(line: 131, column: 3, scope: !318)
!320 = !DILocation(line: 131, column: 10, scope: !318)
!321 = !DILocation(line: 131, column: 12, scope: !318)
!322 = !DILocation(line: 132, column: 2, scope: !318)
!323 = !DILocation(line: 130, column: 19, scope: !313)
!324 = !DILocation(line: 130, column: 2, scope: !313)
!325 = distinct !{!325, !316, !326, !327}
!326 = !DILocation(line: 132, column: 2, scope: !310)
!327 = !{!"llvm.loop.mustprogress"}
!328 = !DILocation(line: 133, column: 4, scope: !280)
!329 = !DILocation(line: 133, column: 2, scope: !280)
!330 = !DILocation(line: 133, column: 9, scope: !280)
!331 = !DILocation(line: 135, column: 8, scope: !332)
!332 = distinct !DILexicalBlock(scope: !280, file: !2, line: 135, column: 2)
!333 = !DILocation(line: 135, column: 6, scope: !332)
!334 = !DILocation(line: 135, column: 12, scope: !335)
!335 = distinct !DILexicalBlock(scope: !332, file: !2, line: 135, column: 2)
!336 = !DILocation(line: 135, column: 16, scope: !335)
!337 = !DILocation(line: 135, column: 14, scope: !335)
!338 = !DILocation(line: 135, column: 2, scope: !332)
!339 = !DILocation(line: 136, column: 8, scope: !340)
!340 = distinct !DILexicalBlock(scope: !341, file: !2, line: 136, column: 6)
!341 = distinct !DILexicalBlock(scope: !335, file: !2, line: 135, column: 22)
!342 = !DILocation(line: 136, column: 6, scope: !340)
!343 = !DILocation(line: 136, column: 11, scope: !340)
!344 = !DILocation(line: 136, column: 18, scope: !340)
!345 = !DILocation(line: 136, column: 13, scope: !340)
!346 = !DILocation(line: 136, column: 20, scope: !340)
!347 = !DILocation(line: 136, column: 25, scope: !340)
!348 = !DILocation(line: 136, column: 23, scope: !340)
!349 = !DILocation(line: 136, column: 28, scope: !340)
!350 = !DILocation(line: 136, column: 35, scope: !340)
!351 = !DILocation(line: 136, column: 30, scope: !340)
!352 = !DILocation(line: 136, column: 6, scope: !341)
!353 = !DILocation(line: 137, column: 15, scope: !354)
!354 = distinct !DILexicalBlock(scope: !340, file: !2, line: 136, column: 37)
!355 = !DILocation(line: 137, column: 4, scope: !354)
!356 = !DILocation(line: 139, column: 2, scope: !341)
!357 = !DILocation(line: 135, column: 19, scope: !335)
!358 = !DILocation(line: 135, column: 2, scope: !335)
!359 = distinct !{!359, !338, !360, !327}
!360 = !DILocation(line: 139, column: 2, scope: !332)
!361 = !DILocation(line: 140, column: 8, scope: !362)
!362 = distinct !DILexicalBlock(scope: !280, file: !2, line: 140, column: 2)
!363 = !DILocation(line: 140, column: 6, scope: !362)
!364 = !DILocation(line: 140, column: 12, scope: !365)
!365 = distinct !DILexicalBlock(scope: !362, file: !2, line: 140, column: 2)
!366 = !DILocation(line: 140, column: 16, scope: !365)
!367 = !DILocation(line: 140, column: 14, scope: !365)
!368 = !DILocation(line: 140, column: 2, scope: !362)
!369 = !DILocation(line: 141, column: 32, scope: !370)
!370 = distinct !DILexicalBlock(scope: !365, file: !2, line: 140, column: 22)
!371 = !DILocation(line: 141, column: 30, scope: !370)
!372 = !DILocation(line: 141, column: 19, scope: !370)
!373 = !DILocation(line: 141, column: 49, scope: !370)
!374 = !DILocation(line: 141, column: 50, scope: !370)
!375 = !DILocation(line: 141, column: 47, scope: !370)
!376 = !DILocation(line: 141, column: 36, scope: !370)
!377 = !DILocation(line: 141, column: 13, scope: !370)
!378 = !DILocation(line: 142, column: 22, scope: !370)
!379 = !DILocation(line: 142, column: 20, scope: !370)
!380 = !DILocation(line: 142, column: 9, scope: !370)
!381 = !DILocation(line: 142, column: 39, scope: !370)
!382 = !DILocation(line: 142, column: 40, scope: !370)
!383 = !DILocation(line: 142, column: 37, scope: !370)
!384 = !DILocation(line: 142, column: 26, scope: !370)
!385 = !DILocation(line: 142, column: 5, scope: !370)
!386 = !DILocation(line: 141, column: 7, scope: !370)
!387 = !DILocation(line: 141, column: 5, scope: !370)
!388 = !DILocation(line: 143, column: 10, scope: !370)
!389 = !DILocation(line: 143, column: 7, scope: !370)
!390 = !DILocation(line: 144, column: 11, scope: !391)
!391 = distinct !DILexicalBlock(scope: !370, file: !2, line: 144, column: 6)
!392 = !DILocation(line: 144, column: 13, scope: !391)
!393 = !DILocation(line: 144, column: 6, scope: !391)
!394 = !DILocation(line: 144, column: 21, scope: !391)
!395 = !DILocation(line: 144, column: 33, scope: !391)
!396 = !DILocation(line: 145, column: 10, scope: !391)
!397 = !DILocation(line: 145, column: 12, scope: !391)
!398 = !DILocation(line: 145, column: 5, scope: !391)
!399 = !DILocation(line: 145, column: 20, scope: !391)
!400 = !DILocation(line: 144, column: 6, scope: !370)
!401 = !DILocation(line: 146, column: 15, scope: !391)
!402 = !DILocation(line: 146, column: 4, scope: !391)
!403 = !DILocation(line: 147, column: 2, scope: !370)
!404 = !DILocation(line: 140, column: 19, scope: !365)
!405 = !DILocation(line: 140, column: 2, scope: !365)
!406 = distinct !{!406, !368, !407, !327}
!407 = !DILocation(line: 147, column: 2, scope: !362)
!408 = !DILocation(line: 148, column: 10, scope: !409)
!409 = distinct !DILexicalBlock(scope: !280, file: !2, line: 148, column: 5)
!410 = !DILocation(line: 148, column: 14, scope: !409)
!411 = !DILocation(line: 148, column: 5, scope: !409)
!412 = !DILocation(line: 148, column: 23, scope: !409)
!413 = !DILocation(line: 148, column: 5, scope: !280)
!414 = !DILocation(line: 149, column: 14, scope: !415)
!415 = distinct !DILexicalBlock(scope: !409, file: !2, line: 148, column: 34)
!416 = !DILocation(line: 149, column: 3, scope: !415)
!417 = !DILocation(line: 151, column: 9, scope: !280)
!418 = !DILocation(line: 151, column: 2, scope: !280)
!419 = !DILocation(line: 152, column: 1, scope: !280)
!420 = distinct !DISubprogram(name: "ccw", scope: !2, file: !2, line: 160, type: !421, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!421 = !DISubroutineType(types: !422)
!422 = !{!202, !56, !40}
!423 = !DILocalVariable(name: "a", arg: 1, scope: !420, file: !2, line: 160, type: !56)
!424 = !DILocation(line: 160, column: 14, scope: !420)
!425 = !DILocalVariable(name: "p", arg: 2, scope: !420, file: !2, line: 160, type: !40)
!426 = !DILocation(line: 160, column: 22, scope: !420)
!427 = !DILocalVariable(name: "cls", scope: !420, file: !2, line: 161, type: !202)
!428 = !DILocation(line: 161, column: 6, scope: !420)
!429 = !DILocation(line: 161, column: 29, scope: !420)
!430 = !DILocation(line: 161, column: 33, scope: !420)
!431 = !DILocation(line: 161, column: 18, scope: !420)
!432 = !DILocation(line: 161, column: 47, scope: !420)
!433 = !DILocation(line: 161, column: 36, scope: !420)
!434 = !DILocation(line: 161, column: 12, scope: !420)
!435 = !DILocation(line: 162, column: 5, scope: !436)
!436 = distinct !DILexicalBlock(scope: !420, file: !2, line: 162, column: 5)
!437 = !DILocation(line: 162, column: 9, scope: !436)
!438 = !DILocation(line: 162, column: 5, scope: !420)
!439 = !DILocation(line: 163, column: 3, scope: !440)
!440 = distinct !DILexicalBlock(scope: !436, file: !2, line: 162, column: 13)
!441 = !DILocation(line: 164, column: 11, scope: !442)
!442 = distinct !DILexicalBlock(scope: !436, file: !2, line: 164, column: 11)
!443 = !DILocation(line: 164, column: 15, scope: !442)
!444 = !DILocation(line: 164, column: 11, scope: !436)
!445 = !DILocation(line: 165, column: 3, scope: !446)
!446 = distinct !DILexicalBlock(scope: !442, file: !2, line: 164, column: 19)
!447 = !DILocation(line: 166, column: 26, scope: !448)
!448 = distinct !DILexicalBlock(scope: !442, file: !2, line: 166, column: 11)
!449 = !DILocation(line: 166, column: 30, scope: !448)
!450 = !DILocation(line: 166, column: 15, scope: !448)
!451 = !DILocation(line: 166, column: 44, scope: !448)
!452 = !DILocation(line: 166, column: 33, scope: !448)
!453 = !DILocation(line: 166, column: 11, scope: !448)
!454 = !DILocation(line: 166, column: 50, scope: !448)
!455 = !DILocation(line: 166, column: 11, scope: !442)
!456 = !DILocation(line: 167, column: 3, scope: !457)
!457 = distinct !DILexicalBlock(scope: !448, file: !2, line: 166, column: 54)
!458 = !DILocation(line: 168, column: 26, scope: !459)
!459 = distinct !DILexicalBlock(scope: !448, file: !2, line: 168, column: 11)
!460 = !DILocation(line: 168, column: 30, scope: !459)
!461 = !DILocation(line: 168, column: 15, scope: !459)
!462 = !DILocation(line: 168, column: 44, scope: !459)
!463 = !DILocation(line: 168, column: 33, scope: !459)
!464 = !DILocation(line: 168, column: 11, scope: !459)
!465 = !DILocation(line: 168, column: 50, scope: !459)
!466 = !DILocation(line: 168, column: 11, scope: !448)
!467 = !DILocation(line: 169, column: 3, scope: !468)
!468 = distinct !DILexicalBlock(scope: !459, file: !2, line: 168, column: 54)
!469 = !DILocation(line: 171, column: 3, scope: !470)
!470 = distinct !DILexicalBlock(scope: !459, file: !2, line: 170, column: 7)
!471 = !DILocation(line: 173, column: 1, scope: !420)
!472 = distinct !DISubprogram(name: "parallel", scope: !2, file: !2, line: 176, type: !473, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!473 = !DISubroutineType(types: !474)
!474 = !{!202, !56, !56}
!475 = !DILocalVariable(name: "a", arg: 1, scope: !472, file: !2, line: 176, type: !56)
!476 = !DILocation(line: 176, column: 19, scope: !472)
!477 = !DILocalVariable(name: "b", arg: 2, scope: !472, file: !2, line: 176, type: !56)
!478 = !DILocation(line: 176, column: 26, scope: !472)
!479 = !DILocation(line: 177, column: 23, scope: !480)
!480 = distinct !DILexicalBlock(scope: !472, file: !2, line: 177, column: 5)
!481 = !DILocation(line: 177, column: 27, scope: !480)
!482 = !DILocation(line: 177, column: 12, scope: !480)
!483 = !DILocation(line: 177, column: 41, scope: !480)
!484 = !DILocation(line: 177, column: 45, scope: !480)
!485 = !DILocation(line: 177, column: 30, scope: !480)
!486 = !DILocation(line: 177, column: 6, scope: !480)
!487 = !DILocation(line: 177, column: 5, scope: !472)
!488 = !DILocation(line: 178, column: 3, scope: !480)
!489 = !DILocation(line: 180, column: 3, scope: !480)
!490 = !DILocation(line: 181, column: 1, scope: !472)
!491 = distinct !DISubprogram(name: "orthogonal", scope: !2, file: !2, line: 184, type: !473, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!492 = !DILocalVariable(name: "a", arg: 1, scope: !491, file: !2, line: 184, type: !56)
!493 = !DILocation(line: 184, column: 21, scope: !491)
!494 = !DILocalVariable(name: "b", arg: 2, scope: !491, file: !2, line: 184, type: !56)
!495 = !DILocation(line: 184, column: 28, scope: !491)
!496 = !DILocation(line: 185, column: 21, scope: !497)
!497 = distinct !DILexicalBlock(scope: !491, file: !2, line: 185, column: 5)
!498 = !DILocation(line: 185, column: 25, scope: !497)
!499 = !DILocation(line: 185, column: 10, scope: !497)
!500 = !DILocation(line: 185, column: 39, scope: !497)
!501 = !DILocation(line: 185, column: 43, scope: !497)
!502 = !DILocation(line: 185, column: 28, scope: !497)
!503 = !DILocation(line: 185, column: 6, scope: !497)
!504 = !DILocation(line: 185, column: 5, scope: !491)
!505 = !DILocation(line: 186, column: 3, scope: !497)
!506 = !DILocation(line: 188, column: 3, scope: !497)
!507 = !DILocation(line: 189, column: 1, scope: !491)
!508 = distinct !DISubprogram(name: "intersection", scope: !2, file: !2, line: 192, type: !473, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!509 = !DILocalVariable(name: "a", arg: 1, scope: !508, file: !2, line: 192, type: !56)
!510 = !DILocation(line: 192, column: 23, scope: !508)
!511 = !DILocalVariable(name: "b", arg: 2, scope: !508, file: !2, line: 192, type: !56)
!512 = !DILocation(line: 192, column: 30, scope: !508)
!513 = !DILocation(line: 193, column: 13, scope: !514)
!514 = distinct !DILexicalBlock(scope: !508, file: !2, line: 193, column: 5)
!515 = !DILocation(line: 193, column: 5, scope: !514)
!516 = !DILocation(line: 193, column: 24, scope: !514)
!517 = !DILocation(line: 193, column: 16, scope: !514)
!518 = !DILocation(line: 193, column: 15, scope: !514)
!519 = !DILocation(line: 193, column: 27, scope: !514)
!520 = !DILocation(line: 193, column: 32, scope: !514)
!521 = !DILocation(line: 194, column: 13, scope: !514)
!522 = !DILocation(line: 194, column: 5, scope: !514)
!523 = !DILocation(line: 194, column: 24, scope: !514)
!524 = !DILocation(line: 194, column: 16, scope: !514)
!525 = !DILocation(line: 194, column: 15, scope: !514)
!526 = !DILocation(line: 194, column: 27, scope: !514)
!527 = !DILocation(line: 193, column: 5, scope: !508)
!528 = !DILocation(line: 195, column: 3, scope: !514)
!529 = !DILocation(line: 196, column: 2, scope: !508)
!530 = !DILocation(line: 197, column: 1, scope: !508)
!531 = distinct !DISubprogram(name: "cross_point", scope: !2, file: !2, line: 200, type: !532, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!532 = !DISubroutineType(types: !533)
!533 = !{!40, !56, !56}
!534 = !DILocalVariable(name: "a", arg: 1, scope: !531, file: !2, line: 200, type: !56)
!535 = !DILocation(line: 200, column: 24, scope: !531)
!536 = !DILocalVariable(name: "b", arg: 2, scope: !531, file: !2, line: 200, type: !56)
!537 = !DILocation(line: 200, column: 31, scope: !531)
!538 = !DILocalVariable(name: "c1", scope: !531, file: !2, line: 201, type: !44)
!539 = !DILocation(line: 201, column: 9, scope: !531)
!540 = !DILocation(line: 201, column: 31, scope: !531)
!541 = !DILocation(line: 201, column: 35, scope: !531)
!542 = !DILocation(line: 201, column: 20, scope: !531)
!543 = !DILocation(line: 201, column: 49, scope: !531)
!544 = !DILocation(line: 201, column: 53, scope: !531)
!545 = !DILocation(line: 201, column: 38, scope: !531)
!546 = !DILocation(line: 201, column: 14, scope: !531)
!547 = !DILocalVariable(name: "c2", scope: !531, file: !2, line: 202, type: !44)
!548 = !DILocation(line: 202, column: 9, scope: !531)
!549 = !DILocation(line: 202, column: 31, scope: !531)
!550 = !DILocation(line: 202, column: 35, scope: !531)
!551 = !DILocation(line: 202, column: 20, scope: !531)
!552 = !DILocation(line: 202, column: 49, scope: !531)
!553 = !DILocation(line: 202, column: 53, scope: !531)
!554 = !DILocation(line: 202, column: 38, scope: !531)
!555 = !DILocation(line: 202, column: 14, scope: !531)
!556 = !DILocation(line: 203, column: 20, scope: !531)
!557 = !DILocation(line: 203, column: 24, scope: !531)
!558 = !DILocation(line: 203, column: 31, scope: !531)
!559 = !DILocation(line: 203, column: 26, scope: !531)
!560 = !DILocation(line: 203, column: 40, scope: !531)
!561 = !DILocation(line: 203, column: 35, scope: !531)
!562 = !DILocation(line: 203, column: 9, scope: !531)
!563 = !DILocation(line: 203, column: 2, scope: !531)
!564 = distinct !DISubprogram(name: "distanceLP", scope: !2, file: !2, line: 207, type: !565, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!565 = !DISubroutineType(types: !566)
!566 = !{!44, !56, !40}
!567 = !DILocalVariable(name: "a", arg: 1, scope: !564, file: !2, line: 207, type: !56)
!568 = !DILocation(line: 207, column: 24, scope: !564)
!569 = !DILocalVariable(name: "p", arg: 2, scope: !564, file: !2, line: 207, type: !40)
!570 = !DILocation(line: 207, column: 32, scope: !564)
!571 = !DILocation(line: 208, column: 5, scope: !572)
!572 = distinct !DILexicalBlock(scope: !564, file: !2, line: 208, column: 5)
!573 = !DILocation(line: 208, column: 14, scope: !572)
!574 = !DILocation(line: 208, column: 5, scope: !564)
!575 = !DILocation(line: 209, column: 26, scope: !572)
!576 = !DILocation(line: 209, column: 15, scope: !572)
!577 = !DILocation(line: 209, column: 10, scope: !572)
!578 = !DILocation(line: 209, column: 3, scope: !572)
!579 = !DILocation(line: 210, column: 5, scope: !580)
!580 = distinct !DILexicalBlock(scope: !564, file: !2, line: 210, column: 5)
!581 = !DILocation(line: 210, column: 14, scope: !580)
!582 = !DILocation(line: 210, column: 5, scope: !564)
!583 = !DILocation(line: 211, column: 26, scope: !580)
!584 = !DILocation(line: 211, column: 15, scope: !580)
!585 = !DILocation(line: 211, column: 10, scope: !580)
!586 = !DILocation(line: 211, column: 3, scope: !580)
!587 = !DILocation(line: 212, column: 23, scope: !564)
!588 = !DILocation(line: 212, column: 14, scope: !564)
!589 = !DILocation(line: 212, column: 9, scope: !564)
!590 = !DILocation(line: 212, column: 2, scope: !564)
!591 = !DILocation(line: 213, column: 1, scope: !564)
!592 = distinct !DISubprogram(name: "distanceLL", scope: !2, file: !2, line: 216, type: !593, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!593 = !DISubroutineType(types: !594)
!594 = !{!44, !56, !56}
!595 = !DILocalVariable(name: "a", arg: 1, scope: !592, file: !2, line: 216, type: !56)
!596 = !DILocation(line: 216, column: 24, scope: !592)
!597 = !DILocalVariable(name: "b", arg: 2, scope: !592, file: !2, line: 216, type: !56)
!598 = !DILocation(line: 216, column: 31, scope: !592)
!599 = !DILocalVariable(name: "a1", scope: !592, file: !2, line: 217, type: !44)
!600 = !DILocation(line: 217, column: 9, scope: !592)
!601 = !DILocalVariable(name: "a2", scope: !592, file: !2, line: 217, type: !44)
!602 = !DILocation(line: 217, column: 12, scope: !592)
!603 = !DILocalVariable(name: "a3", scope: !592, file: !2, line: 217, type: !44)
!604 = !DILocation(line: 217, column: 15, scope: !592)
!605 = !DILocalVariable(name: "a4", scope: !592, file: !2, line: 217, type: !44)
!606 = !DILocation(line: 217, column: 18, scope: !592)
!607 = !DILocation(line: 218, column: 5, scope: !608)
!608 = distinct !DILexicalBlock(scope: !592, file: !2, line: 218, column: 5)
!609 = !DILocation(line: 218, column: 23, scope: !608)
!610 = !DILocation(line: 218, column: 5, scope: !592)
!611 = !DILocation(line: 219, column: 3, scope: !608)
!612 = !DILocation(line: 220, column: 22, scope: !592)
!613 = !DILocation(line: 220, column: 7, scope: !592)
!614 = !DILocation(line: 220, column: 5, scope: !592)
!615 = !DILocation(line: 221, column: 22, scope: !592)
!616 = !DILocation(line: 221, column: 7, scope: !592)
!617 = !DILocation(line: 221, column: 5, scope: !592)
!618 = !DILocation(line: 222, column: 22, scope: !592)
!619 = !DILocation(line: 222, column: 7, scope: !592)
!620 = !DILocation(line: 222, column: 5, scope: !592)
!621 = !DILocation(line: 223, column: 22, scope: !592)
!622 = !DILocation(line: 223, column: 7, scope: !592)
!623 = !DILocation(line: 223, column: 5, scope: !592)
!624 = !DILocation(line: 224, column: 9, scope: !592)
!625 = !DILocation(line: 224, column: 2, scope: !592)
!626 = !DILocation(line: 225, column: 1, scope: !592)
!627 = distinct !DISubprogram(name: "main", scope: !2, file: !2, line: 227, type: !628, scopeLine: 227, spFlags: DISPFlagDefinition, unit: !27, retainedNodes: !46)
!628 = !DISubroutineType(types: !629)
!629 = !{!202}
!630 = !DILocalVariable(name: "a", scope: !627, file: !2, line: 228, type: !56)
!631 = !DILocation(line: 228, column: 7, scope: !627)
!632 = !DILocalVariable(name: "b", scope: !627, file: !2, line: 228, type: !56)
!633 = !DILocation(line: 228, column: 9, scope: !627)
!634 = !DILocalVariable(name: "k", scope: !627, file: !2, line: 229, type: !202)
!635 = !DILocation(line: 229, column: 6, scope: !627)
!636 = !DILocalVariable(name: "p", scope: !627, file: !2, line: 230, type: !40)
!637 = !DILocation(line: 230, column: 8, scope: !627)
!638 = !DILocation(line: 231, column: 2, scope: !627)
!639 = !DILocation(line: 232, column: 2, scope: !627)
!640 = !DILocation(line: 232, column: 9, scope: !627)
!641 = !DILocation(line: 233, column: 27, scope: !642)
!642 = distinct !DILexicalBlock(scope: !627, file: !2, line: 232, column: 12)
!643 = !DILocation(line: 233, column: 29, scope: !642)
!644 = !DILocation(line: 233, column: 34, scope: !642)
!645 = !DILocation(line: 233, column: 36, scope: !642)
!646 = !DILocation(line: 233, column: 41, scope: !642)
!647 = !DILocation(line: 233, column: 43, scope: !642)
!648 = !DILocation(line: 233, column: 48, scope: !642)
!649 = !DILocation(line: 233, column: 50, scope: !642)
!650 = !DILocation(line: 233, column: 3, scope: !642)
!651 = !DILocation(line: 234, column: 27, scope: !642)
!652 = !DILocation(line: 234, column: 29, scope: !642)
!653 = !DILocation(line: 234, column: 34, scope: !642)
!654 = !DILocation(line: 234, column: 36, scope: !642)
!655 = !DILocation(line: 234, column: 41, scope: !642)
!656 = !DILocation(line: 234, column: 43, scope: !642)
!657 = !DILocation(line: 234, column: 48, scope: !642)
!658 = !DILocation(line: 234, column: 50, scope: !642)
!659 = !DILocation(line: 234, column: 3, scope: !642)
!660 = !DILocation(line: 235, column: 21, scope: !642)
!661 = !DILocation(line: 235, column: 3, scope: !642)
!662 = distinct !{!662, !639, !663, !327}
!663 = !DILocation(line: 236, column: 2, scope: !627)
!664 = !DILocation(line: 293, column: 2, scope: !627)
